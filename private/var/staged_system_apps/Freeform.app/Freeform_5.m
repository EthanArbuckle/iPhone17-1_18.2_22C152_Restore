uint64_t sub_10067D988()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v7;

  v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    v3 = *(void *)(v2 + 32);
    v4 = sub_10067DB38;
  }
  else
  {
    v5 = *(void *)(v2 + 32);

    *(void *)(v2 + 80) = *(void *)(v2 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    v4 = sub_10067DAD0;
    v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10067DAD0()
{
  v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 80);
  return v1(v2);
}

uint64_t sub_10067DB38()
{
  v1 = *(void **)(v0 + 40);

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

id sub_10067DBBC(void *a1, void *a2)
{
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v6 = v4;
  id v7 = [a1 recordName];
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v11 = sub_100528BE4();
  *(void *)(inited + 64) = v11;
  *(void *)(inited + 32) = v8;
  *(void *)(inited + 40) = v10;
  id v12 = [a1 zoneID];
  id v13 = [v12 zoneName];

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v11;
  *(void *)(inited + 72) = v14;
  *(void *)(inited + 80) = v16;
  uint64_t v17 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v17, (uint64_t)"Cancelling the asset fetch request because the task was cancelled. RecordID: %@ zoneName: %@", 92, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  return [a2 cancel];
}

uint64_t sub_10067DD8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return _swift_task_switch(sub_10067DDB4, a5, 0);
}

uint64_t sub_10067DDB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 40);
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v5 = sub_10067FD7C(&qword_101679500, a2, (void (*)(uint64_t))type metadata accessor for CRLCloudAssetDownloader);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v2 + 56) = v6;
  *(_OWORD *)(v6 + 16) = *(_OWORD *)(v2 + 24);
  *(void *)(v6 + 32) = v4;
  *(void *)(v6 + 40) = v3;
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v7;
  uint64_t v8 = type metadata accessor for CRLAssetSyncRemoteRecord();
  *id v7 = v2;
  v7[1] = sub_10067DEF0;
  uint64_t v9 = *(void *)(v2 + 16);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v9, v3, v5, 0xD000000000000024, 0x8000000101243C00, sub_10067F1FC, v6, v8);
}

uint64_t sub_10067DEF0()
{
  uint64_t v2 = (void *)*v1;
  v2[9] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[6];
    return _swift_task_switch(sub_10067E02C, v3, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_10067E02C()
{
  swift_task_dealloc();
  v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10067E090(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  v29 = a3;
  uint64_t v30 = a5;
  uint64_t v27 = a1;
  uint64_t v28 = a4;
  v26 = a2;
  uint64_t v6 = sub_1005057FC(&qword_101679508);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6, v9);
  uint64_t v10 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLCloudAssetDownloader.DownloadRequest();
  uint64_t v12 = v11 - 8;
  uint64_t v25 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v25 + 64);
  __chkstk_darwin(v11, v14);
  uint64_t v15 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = _swiftEmptyDictionarySingleton;
  swift_retain();
  CKFetchRecordsOperation.perRecordResultBlock.setter();
  sub_10067FDCC(a4, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CRLCloudAssetDownloader.DownloadRequest);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v27, v6);
  unint64_t v17 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v18 = (v13 + *(unsigned __int8 *)(v7 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v19 = swift_allocObject();
  v20 = v29;
  *(void *)(v19 + 16) = v16;
  *(void *)(v19 + 24) = v20;
  sub_10067FE34((uint64_t)v15, v19 + v17, (uint64_t (*)(void))type metadata accessor for CRLCloudAssetDownloader.DownloadRequest);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v19 + v18, v10, v6);
  swift_retain();
  id v21 = v20;
  v22 = v26;
  CKFetchRecordsOperation.fetchRecordsResultBlock.setter();
  [v22 setQueuePriority:4];
  sub_10050F848((void *)(v30 + 128), *(void *)(v30 + 152));
  id v23 = [*(id *)(v28 + *(int *)(v12 + 28)) zoneID];
  sub_10067AF28(v22, v23);

  return swift_release();
}

uint64_t sub_10067E374(void *a1, void *a2, char a3, uint64_t a4)
{
  swift_beginAccess();
  id v8 = a1;
  sub_100626B48(a2, a3 & 1);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *(void *)(a4 + 16);
  *(void *)(a4 + 16) = 0x8000000000000000;
  sub_100975854((uint64_t)a2, a3 & 1, v8, isUniquelyReferenced_nonNull_native);
  *(void *)(a4 + 16) = v11;

  swift_bridgeObjectRelease();
  return swift_endAccess();
}

void sub_10067E434(uint64_t a1, char a2, uint64_t a3, void *a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t v9 = *(void *)(a3 + 16);
  if (*(void *)(v9 + 16))
  {
    id v10 = a4;
    unint64_t v11 = sub_100956CAC((uint64_t)v10);
    if (v12)
    {
      uint64_t v13 = *(void *)(v9 + 56) + 16 * v11;
      uint64_t v14 = *(void **)v13;
      char v15 = *(unsigned char *)(v13 + 8);
      swift_endAccess();
      sub_100626B48(v14, v15);

      if (v15)
      {
        swift_errorRetain();
        if (qword_10166FB88 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v16 = (void *)static OS_os_log.dataSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117DF40;
        id v18 = v16;
        id v19 = [v10 recordName];
        uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v22 = v21;

        *(void *)(inited + 56) = &type metadata for String;
        unint64_t v23 = sub_100528BE4();
        *(void *)(inited + 64) = v23;
        *(void *)(inited + 32) = v20;
        *(void *)(inited + 40) = v22;
        id v24 = [v10 zoneID];
        id v25 = [v24 zoneName];

        uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v28 = v27;

        *(void *)(inited + 96) = &type metadata for String;
        *(void *)(inited + 104) = v23;
        *(void *)(inited + 72) = v26;
        *(void *)(inited + 80) = v28;
        swift_getErrorValue();
        uint64_t v29 = Error.localizedDescription.getter();
        *(void *)(inited + 136) = &type metadata for String;
        *(void *)(inited + 144) = v23;
        *(void *)(inited + 112) = v29;
        *(void *)(inited + 120) = v30;
        uint64_t v31 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v18, (uint64_t)&_mh_execute_header, v31, (uint64_t)"Failed to download asset. RecordID: %@ zoneName: %@. Error %@", 61, 2, inited);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        sub_1005057FC(&qword_101679508);
        CheckedContinuation.resume(throwing:)();
        sub_100541080(v14, 1);
      }
      else
      {
        v120 = v14;
        uint64_t v56 = qword_10166FB88;
        v14;
        if (v56 != -1) {
          swift_once();
        }
        swift_beginAccess();
        v57 = (void *)static OS_os_log.dataSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v58 = swift_initStackObject();
        *(_OWORD *)(v58 + 16) = xmmword_10117D8C0;
        id v59 = v57;
        id v60 = [v10 recordName];
        uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v63 = v62;

        *(void *)(v58 + 56) = &type metadata for String;
        unint64_t v64 = sub_100528BE4();
        *(void *)(v58 + 64) = v64;
        *(void *)(v58 + 32) = v61;
        *(void *)(v58 + 40) = v63;
        id v65 = [v10 zoneID];
        id v66 = [v65 zoneName];

        uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v69 = v68;

        *(void *)(v58 + 96) = &type metadata for String;
        *(void *)(v58 + 104) = v64;
        unint64_t v70 = v64;
        *(void *)(v58 + 72) = v67;
        *(void *)(v58 + 80) = v69;
        uint64_t v71 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v59, (uint64_t)&_mh_execute_header, v71, (uint64_t)"Downloaded record containing asset. RecordID: %@ zoneName: %@", 61, 2, v58);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        v72 = (uint64_t *)(a5 + *(int *)(type metadata accessor for CRLCloudAssetDownloader.DownloadRequest() + 24));
        uint64_t v74 = *v72;
        uint64_t v73 = v72[1];
        if (sub_100D29F18(*v72, v73))
        {
          char v75 = static UUID.== infix(_:_:)();
          v76 = (void *)static OS_os_log.dataSync;
          if (v75)
          {
            uint64_t v77 = swift_initStackObject();
            *(_OWORD *)(v77 + 16) = xmmword_10117D8C0;
            id v78 = v76;
            id v79 = [v10 recordName];
            uint64_t v80 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v82 = v81;

            *(void *)(v77 + 56) = &type metadata for String;
            *(void *)(v77 + 64) = v64;
            *(void *)(v77 + 32) = v80;
            *(void *)(v77 + 40) = v82;
            id v83 = [v10 zoneID];
            id v84 = [v83 zoneName];

            uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v87 = v86;

            *(void *)(v77 + 96) = &type metadata for String;
            *(void *)(v77 + 104) = v64;
            *(void *)(v77 + 72) = v85;
            *(void *)(v77 + 80) = v87;
            uint64_t v88 = static os_log_type_t.default.getter();
            sub_100BAC898((uint64_t)v78, (uint64_t)&_mh_execute_header, v88, (uint64_t)"Successfully downloaded asset. RecordID: %@ zoneName: %@", 56, 2, v77);
            swift_setDeallocating();
            swift_arrayDestroy();

            swift_retain();
            sub_1005057FC(&qword_101679508);
            CheckedContinuation.resume(returning:)();
          }
          else
          {
            uint64_t v105 = swift_initStackObject();
            *(_OWORD *)(v105 + 16) = xmmword_10117DF40;
            id v106 = v76;
            uint64_t v107 = UUID.uuidString.getter();
            *(void *)(v105 + 56) = &type metadata for String;
            *(void *)(v105 + 64) = v70;
            *(void *)(v105 + 32) = v107;
            *(void *)(v105 + 40) = v108;
            id v109 = [v10 recordName];
            uint64_t v110 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v112 = v111;

            *(void *)(v105 + 96) = &type metadata for String;
            *(void *)(v105 + 104) = v70;
            *(void *)(v105 + 72) = v110;
            *(void *)(v105 + 80) = v112;
            id v113 = [v10 zoneID];
            id v114 = [v113 zoneName];

            uint64_t v115 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v117 = v116;

            *(void *)(v105 + 136) = &type metadata for String;
            *(void *)(v105 + 144) = v70;
            *(void *)(v105 + 112) = v115;
            *(void *)(v105 + 120) = v117;
            uint64_t v118 = static os_log_type_t.error.getter();
            sub_100BAC898((uint64_t)v106, (uint64_t)&_mh_execute_header, v118, (uint64_t)"Couldn't find asset with UUID %{public}@. RecordID: %@ zoneName: %@", 67, 2, v105);
            swift_setDeallocating();
            swift_arrayDestroy();

            sub_100679060();
            swift_allocError();
            _OWORD *v119 = xmmword_101186D10;
            sub_1005057FC(&qword_101679508);
            CheckedContinuation.resume(throwing:)();
          }
          v104 = v120;
          sub_100541080(v120, 0);
          swift_release();
        }
        else
        {
          v89 = (void *)static OS_os_log.dataSync;
          uint64_t v90 = swift_initStackObject();
          *(_OWORD *)(v90 + 16) = xmmword_10117DF40;
          id v91 = v89;
          swift_bridgeObjectRetain();
          v92._countAndFlagsBits = 0x7465737341;
          v92._object = (void *)0xE500000000000000;
          String.append(_:)(v92);
          *(void *)(v90 + 56) = &type metadata for String;
          *(void *)(v90 + 64) = v64;
          *(void *)(v90 + 32) = v74;
          *(void *)(v90 + 40) = v73;
          id v93 = [v10 recordName];
          uint64_t v94 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v96 = v95;

          *(void *)(v90 + 96) = &type metadata for String;
          *(void *)(v90 + 104) = v64;
          *(void *)(v90 + 72) = v94;
          *(void *)(v90 + 80) = v96;
          id v97 = [v10 zoneID];
          id v98 = [v97 zoneName];

          uint64_t v99 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v101 = v100;

          *(void *)(v90 + 136) = &type metadata for String;
          *(void *)(v90 + 144) = v64;
          *(void *)(v90 + 112) = v99;
          *(void *)(v90 + 120) = v101;
          uint64_t v102 = static os_log_type_t.error.getter();
          sub_100BAC898((uint64_t)v91, (uint64_t)&_mh_execute_header, v102, (uint64_t)"Couldn't find asset with key %@. RecordID: %@ zoneName: %@", 58, 2, v90);
          swift_setDeallocating();
          swift_arrayDestroy();

          sub_100679060();
          swift_allocError();
          void *v103 = 0;
          v103[1] = 0;
          sub_1005057FC(&qword_101679508);
          CheckedContinuation.resume(throwing:)();
          v104 = v120;
          sub_100541080(v120, 0);
        }
        sub_100541080(v104, 0);
      }
      return;
    }
  }
  swift_endAccess();
  if (a2)
  {
    swift_errorRetain();
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    v40 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v41 = swift_initStackObject();
    *(_OWORD *)(v41 + 16) = xmmword_10117DF40;
    id v42 = v40;
    id v43 = [a4 recordName];
    uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v46 = v45;

    *(void *)(v41 + 56) = &type metadata for String;
    unint64_t v47 = sub_100528BE4();
    *(void *)(v41 + 64) = v47;
    *(void *)(v41 + 32) = v44;
    *(void *)(v41 + 40) = v46;
    id v48 = [a4 zoneID];
    id v49 = [v48 zoneName];

    uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v52 = v51;

    *(void *)(v41 + 96) = &type metadata for String;
    *(void *)(v41 + 104) = v47;
    *(void *)(v41 + 72) = v50;
    *(void *)(v41 + 80) = v52;
    swift_getErrorValue();
    uint64_t v53 = Error.localizedDescription.getter();
    *(void *)(v41 + 136) = &type metadata for String;
    *(void *)(v41 + 144) = v47;
    *(void *)(v41 + 112) = v53;
    *(void *)(v41 + 120) = v54;
    uint64_t v55 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v42, (uint64_t)&_mh_execute_header, v55, (uint64_t)"Failed to download asset. RecordID: %@ zoneName: %@. Error %@", 61, 2, v41);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_1005057FC(&qword_101679508);
  }
  else
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    v32 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v33 = swift_initStackObject();
    *(_OWORD *)(v33 + 16) = xmmword_10117E810;
    id v34 = v32;
    id v35 = [a4 recordName];
    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v38 = v37;

    *(void *)(v33 + 56) = &type metadata for String;
    *(void *)(v33 + 64) = sub_100528BE4();
    *(void *)(v33 + 32) = v36;
    *(void *)(v33 + 40) = v38;
    uint64_t v39 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v34, (uint64_t)&_mh_execute_header, v39, (uint64_t)"Encountered internal CloudKit logic error when fetching a record ID: %{public}@", 79, 2, v33);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    type metadata accessor for CKError(0);
    sub_1008CE410((uint64_t)_swiftEmptyArrayStorage);
    sub_10067FD7C((unint64_t *)&qword_101670DF8, 255, type metadata accessor for CKError);
    _BridgedStoredNSError.init(_:userInfo:)();
    sub_1005057FC(&qword_101679508);
  }
  CheckedContinuation.resume(throwing:)();
}

uint64_t sub_10067F070()
{
  sub_100523398(v0 + 112);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 128);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for CRLCloudAssetDownloader()
{
  return self;
}

uint64_t type metadata accessor for CRLCloudAssetDownloader.DownloadRequest()
{
  uint64_t result = qword_101679590;
  if (!qword_101679590) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_10067F130()
{
  return sub_10067DBBC(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10067F138(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v6 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v6;
  *(void *)uint64_t v6 = v2;
  *(void *)(v6 + 8) = sub_100528488;
  *(void *)(v6 + 40) = v5;
  *(void *)(v6 + 48) = v4;
  *(_OWORD *)(v6 + 24) = v7;
  *(void *)(v6 + 16) = a1;
  return _swift_task_switch(sub_10067DDB4, v4, 0);
}

uint64_t sub_10067F1FC(uint64_t a1)
{
  return sub_10067E090(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_10067F208()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10067F240(void *a1, void *a2, char a3)
{
  return sub_10067E374(a1, a2, a3 & 1, v3);
}

uint64_t sub_10067F24C()
{
  uint64_t v1 = (int *)(type metadata accessor for CRLCloudAssetDownloader.DownloadRequest() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = sub_1005057FC(&qword_101679508);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + v7) & ~v7;
  uint64_t v9 = v8 + *(void *)(v6 + 64);
  uint64_t v10 = v2 | v7 | 7;
  swift_release();

  uint64_t v11 = v0 + v3;
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);

  return _swift_deallocObject(v0, v9, v10);
}

void sub_10067F3F4(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for CRLCloudAssetDownloader.DownloadRequest() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_1005057FC(&qword_101679508);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(void **)(v2 + 24);

  sub_10067E434(a1, v4, v7, v8, v2 + v6);
}

uint64_t sub_10067F4E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101679530);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v16 - v10;
  uint64_t v12 = sub_1005057FC(&qword_101679508);
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a1, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  sub_10067FF04((uint64_t)v11, (uint64_t)v7);
  uint64_t v14 = a2 + *(void *)(*(void *)a2 + 88);
  swift_beginAccess();
  sub_10067FF6C((uint64_t)v7, v14);
  return swift_endAccess();
}

uint64_t sub_10067F64C()
{
  *(void *)(v1 + 48) = v0;
  return _swift_task_switch(sub_10067F66C, 0, 0);
}

uint64_t sub_10067F66C()
{
  uint64_t v1 = v0[6];
  sub_1005057FC(&qword_101679528);
  uint64_t v2 = swift_allocObject();
  v0[7] = v2;
  uint64_t v3 = v2 + *(void *)(*(void *)v2 + 88);
  uint64_t v4 = sub_1005057FC(&qword_101679508);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(v1 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v1 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[8] = v5;
  uint64_t v6 = type metadata accessor for CRLAssetSyncRemoteRecord();
  void *v5 = v0;
  v5[1] = sub_10067F848;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 5, 0, 0, 0x286576726573626FLL, 0xE900000000000029, sub_10067FEFC, v2, v6);
}

uint64_t sub_10067F848()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10067F9CC;
  }
  else
  {
    *(void *)(v2 + 80) = *(void *)(v2 + 40);
    uint64_t v3 = sub_10067F964;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10067F964()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 80);
  return v1(v2);
}

uint64_t sub_10067F9CC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10067FA30(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  int v29 = a2;
  uint64_t v28 = a1;
  uint64_t v4 = sub_1005057FC(&qword_101679508);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101679530);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v25 - v15;
  swift_beginAccess();
  unint64_t v31 = *(void *)(v3 + 16);
  if (!(v31 >> 62))
  {
    uint64_t v17 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v19 = v31;
    if (v17) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v17 = result;
  unint64_t v19 = v31;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v17 >= 1)
  {
    uint64_t v20 = 0;
    unint64_t v30 = v19 & 0xC000000000000001;
    uint64_t v21 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    uint64_t v26 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v27 = (void (**)(char *, char *, uint64_t))(v5 + 16);
    uint64_t v22 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    do
    {
      if (v30)
      {
        uint64_t v23 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v23 = *(void *)(v19 + 8 * v20 + 32);
        swift_retain();
      }
      uint64_t v24 = v23 + *(void *)(*(void *)v23 + 88);
      swift_beginAccess();
      sub_10067FFE0(v24, (uint64_t)v16);
      if ((*v21)(v16, 1, v4))
      {
        sub_100522F00((uint64_t)v16, &qword_101679530);
      }
      else
      {
        (*v27)(v8, v16, v4);
        sub_100522F00((uint64_t)v16, &qword_101679530);
        uint64_t v32 = v28;
        if (v29)
        {
          swift_errorRetain();
          CheckedContinuation.resume(throwing:)();
        }
        else
        {
          swift_retain();
          CheckedContinuation.resume(returning:)();
        }
        (*v26)(v8, v4);
      }
      ++v20;
      (*v22)(v12, 1, 1, v4);
      swift_beginAccess();
      sub_10067FF6C((uint64_t)v12, v24);
      swift_endAccess();
      swift_release();
      unint64_t v19 = v31;
    }
    while (v17 != v20);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_10067FD7C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10067FDC4(uint64_t a1)
{
  return sub_100C9B2D8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10067FDCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10067FE34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10067FE9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10067FEFC(uint64_t a1)
{
  return sub_10067F4E0(a1, v1);
}

uint64_t sub_10067FF04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101679530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10067FF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101679530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10067FFD4(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  else {
    return swift_release();
  }
}

uint64_t sub_10067FFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101679530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_100680048(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    uint64_t v11 = (uint64_t *)((char *)a1 + v9);
    uint64_t v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    uint64_t v14 = a3[7];
    uint64_t v15 = (uint64_t *)((char *)a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    id v18 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10068014C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1006801E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  id v17 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100680294(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100680374(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100680404(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = a3[6];
  id v10 = (void *)(a1 + v9);
  uint64_t v11 = (uint64_t *)(a2 + v9);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  *id v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1006804C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006804D4);
}

uint64_t sub_1006804D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100680594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006805A8);
}

uint64_t sub_1006805A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100680664()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_100680708()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for CRLAnalyticsActiveUseManager()) init];
  static CRLAnalyticsActiveUseManager.shared = (uint64_t)result;
  return result;
}

uint64_t *CRLAnalyticsActiveUseManager.shared.unsafeMutableAddressor()
{
  if (qword_10166EE08 != -1) {
    swift_once();
  }
  return &static CRLAnalyticsActiveUseManager.shared;
}

id static CRLAnalyticsActiveUseManager.shared.getter()
{
  if (qword_10166EE08 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static CRLAnalyticsActiveUseManager.shared;

  return v0;
}

char *sub_10068083C()
{
  unint64_t v1 = &v0[OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_appForegroundedAnalyticsDomain];
  *(void *)unint64_t v1 = 0xD000000000000010;
  *((void *)v1 + 1) = 0x8000000101235E70;
  uint64_t v2 = &v0[OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_deviceIDAnalyticsKey];
  *(void *)uint64_t v2 = 0x4449656369766564;
  *((void *)v2 + 1) = 0xE800000000000000;
  uint64_t v3 = &v0[OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_userIDAnalyticsKey];
  *(void *)uint64_t v3 = 0x444972657375;
  *((void *)v3 + 1) = 0xE600000000000000;
  uint64_t v4 = &v0[OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_supportsEndToEndEncryptionKey];
  *(void *)uint64_t v4 = 0xD00000000000001ALL;
  *((void *)v4 + 1) = 0x8000000101235E90;
  int v5 = &v0[OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_overriddenUserIDAnalyticsKey];
  *(void *)int v5 = 0xD000000000000010;
  *((void *)v5 + 1) = 0x8000000101235EB0;
  uint64_t v6 = &v0[OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_hadiCloudAccountAnalyticsKey];
  *(void *)uint64_t v6 = 0xD000000000000010;
  *((void *)v6 + 1) = 0x8000000101235ED0;
  uint64_t v7 = &v0[OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_hadQuotaViolationKey];
  *(void *)uint64_t v7 = 0xD000000000000011;
  *((void *)v7 + 1) = 0x8000000101235EF0;
  id v8 = objc_allocWithZone((Class)NSOperationQueue);
  uint64_t v9 = v0;
  id v10 = [v8 init];
  [v10 setMaxConcurrentOperationCount:1];
  NSString v11 = String._bridgeToObjectiveC()();
  [v10 setName:v11];

  objc_allocWithZone((Class)type metadata accessor for CRLAnalyticsDataStore());
  id v12 = v10;
  *(void *)&v9[OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_dataStore] = CRLAnalyticsDataStore.init(queue:)(v12);

  v54.receiver = v9;
  v54.super_class = (Class)type metadata accessor for CRLAnalyticsActiveUseManager();
  [super init];
  uint64_t v14 = self;
  uint64_t v15 = (char *)v13;
  id v16 = [v14 defaultCenter];
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v12;
  *(void *)(v18 + 24) = v17;
  uint64_t v52 = sub_100682318;
  uint64_t v53 = v18;
  id v48 = _NSConcreteStackBlock;
  uint64_t v49 = *(void *)"";
  uint64_t v50 = sub_1005E5680;
  uint64_t v51 = &unk_10150E3A8;
  uint64_t v19 = _Block_copy(&v48);
  id v20 = v12;
  swift_release();
  id v21 = [v16 addObserverForName:UIApplicationWillEnterForegroundNotification object:0 queue:v20 usingBlock:v19];
  _Block_release(v19);
  swift_unknownObjectRelease();

  if (qword_10166ED20 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_10171A0C8;
  uint64_t v23 = OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_dataStore;
  uint64_t v24 = *(void **)&v15[OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_dataStore];
  uint64_t v25 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v20;
  *(void *)(v26 + 24) = v25;
  uint64_t v52 = sub_10068236C;
  uint64_t v53 = v26;
  id v48 = _NSConcreteStackBlock;
  uint64_t v49 = *(void *)"";
  uint64_t v50 = sub_1005E5680;
  uint64_t v51 = &unk_10150E3F8;
  uint64_t v27 = _Block_copy(&v48);
  id v28 = v20;
  id v29 = v24;
  swift_release();
  id v30 = [v16 addObserverForName:v22 object:v29 queue:v28 usingBlock:v27];
  _Block_release(v27);
  swift_unknownObjectRelease();

  if (qword_10166ED28 != -1) {
    swift_once();
  }
  uint64_t v31 = qword_10171A0D0;
  uint64_t v32 = *(void **)&v15[v23];
  uint64_t v33 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v28;
  *(void *)(v34 + 24) = v33;
  uint64_t v52 = sub_100682378;
  uint64_t v53 = v34;
  id v48 = _NSConcreteStackBlock;
  uint64_t v49 = *(void *)"";
  uint64_t v50 = sub_1005E5680;
  uint64_t v51 = &unk_10150E448;
  id v35 = _Block_copy(&v48);
  id v36 = v28;
  id v37 = v32;
  swift_release();
  id v38 = [v16 addObserverForName:v31 object:v37 queue:v36 usingBlock:v35];
  _Block_release(v35);
  swift_unknownObjectRelease();

  if (qword_10166ED30 != -1) {
    swift_once();
  }
  uint64_t v39 = qword_10171A0D8;
  v40 = *(void **)&v15[v23];
  uint64_t v41 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = v36;
  *(void *)(v42 + 24) = v41;
  uint64_t v52 = sub_1006823F4;
  uint64_t v53 = v42;
  id v48 = _NSConcreteStackBlock;
  uint64_t v49 = *(void *)"";
  uint64_t v50 = sub_1005E5680;
  uint64_t v51 = &unk_10150E498;
  id v43 = _Block_copy(&v48);
  id v44 = v36;
  id v45 = v40;
  swift_release();
  id v46 = [v16 addObserverForName:v39 object:v45 queue:v44 usingBlock:v43];

  _Block_release(v43);
  swift_unknownObjectRelease();

  return v15;
}

void sub_100680F1C(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Notification();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4, v7);
  uint64_t v8 = swift_allocObject();
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v8;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_10068251C;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = &unk_10150E538;
  id v12 = _Block_copy(aBlock);
  swift_release();
  [a2 addOperationWithBlock:v12];
  _Block_release(v12);
}

void sub_100681120()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = (void *)Strong;
    sub_100681C0C();
  }
}

void sub_10068117C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = (void *)Strong;
    if (*(void *)(sub_100681788(0, 0xE000000000000000, 1) + 16))
    {
      uint64_t v2 = self;
      NSString v3 = String._bridgeToObjectiveC()();
      sub_10050BF48(0, (unint64_t *)&qword_101672E50);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v2 sendEventInDomain:v3 lazily:1 eventPayload:isa];
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
}

void sub_100681294(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  aBlock[4] = a4;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = a5;
  unint64_t v10 = _Block_copy(aBlock);
  swift_release();
  [a2 addOperationWithBlock:v10];
  _Block_release(v10);
}

void sub_100681394()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = (void *)Strong;
    if (*(void *)(sub_100681788(0, 0xE000000000000000, 0) + 16))
    {
      uint64_t v2 = self;
      NSString v3 = String._bridgeToObjectiveC()();
      sub_10050BF48(0, (unint64_t *)&qword_101672E50);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v2 sendEventInDomain:v3 lazily:1 eventPayload:isa];
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
}

id CRLAnalyticsActiveUseManager.__deallocating_deinit()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0 name:UIApplicationWillEnterForegroundNotification object:0];
  uint64_t v2 = qword_10166ED20;
  NSString v3 = v0;
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v4 = OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_dataStore;
  [v1 removeObserver:v3 name:qword_10171A0C8 object:*(void *)&v3[OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_dataStore]];

  uint64_t v5 = qword_10166ED28;
  uint64_t v6 = v3;
  if (v5 != -1) {
    swift_once();
  }
  [v1 removeObserver:v6 name:qword_10171A0D0 object:*(void *)&v3[v4]];

  uint64_t v7 = qword_10166ED30;
  uint64_t v8 = v6;
  if (v7 != -1) {
    swift_once();
  }
  [v1 removeObserver:v8 name:qword_10171A0D8 object:*(void *)&v3[v4]];

  v10.receiver = v8;
  v10.super_class = (Class)type metadata accessor for CRLAnalyticsActiveUseManager();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLAnalyticsActiveUseManager()
{
  return self;
}

unint64_t sub_100681788(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_dataStore);
  sub_1005E6DE0();
  unint64_t v7 = sub_100A39814((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v8 = *(void **)(v6 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_userDefaults);
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 stringForKey:v9];

  if (v10)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1005E58D8();
    if (v11)
    {
      char v39 = a3;
      swift_bridgeObjectRelease();
      id v12 = [self defaultManager];
      id v13 = [v12 ubiquityIdentityToken];

      if (v13) {
        swift_unknownObjectRelease();
      }
      Swift::Bool BOOLeanLiteral = v13 != 0;
      sub_1005057FC(&qword_101679638);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_101186E40;
      uint64_t v15 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_deviceIDAnalyticsKey + 8);
      *(void *)(inited + 32) = *(void *)(v4
                                           + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_deviceIDAnalyticsKey);
      *(void *)(inited + 40) = v15;
      id v16 = objc_allocWithZone((Class)NSString);
      swift_bridgeObjectRetain();
      NSString v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v18 = [v16 initWithString:v17];

      *(void *)(inited + 48) = v18;
      uint64_t v19 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_userIDAnalyticsKey + 8);
      *(void *)(inited + 56) = *(void *)(v4
                                           + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_userIDAnalyticsKey);
      *(void *)(inited + 64) = v19;
      id v20 = objc_allocWithZone((Class)NSString);
      swift_bridgeObjectRetain();
      NSString v21 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v22 = [v20 initWithString:v21];

      *(void *)(inited + 72) = v22;
      uint64_t v23 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_supportsEndToEndEncryptionKey + 8);
      *(void *)(inited + 80) = *(void *)(v4
                                           + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_supportsEndToEndEncryptionKey);
      *(void *)(inited + 88) = v23;
      sub_10050BF48(0, (unint64_t *)&qword_101684330);
      uint64_t v24 = (unsigned char *)(v6 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_supportsEndToEndEncryption);
      swift_beginAccess();
      LOBYTE(v24) = *v24;
      swift_bridgeObjectRetain();
      *(NSNumber *)(inited + 96) = NSNumber.init(BOOLeanLiteral:)((Swift::Bool)v24);
      uint64_t v25 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_overriddenUserIDAnalyticsKey + 8);
      *(void *)(inited + 104) = *(void *)(v4
                                            + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_overriddenUserIDAnalyticsKey);
      *(void *)(inited + 112) = v25;
      id v26 = objc_allocWithZone((Class)NSString);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      NSString v27 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v28 = [v26 initWithString:v27];

      *(void *)(inited + 120) = v28;
      uint64_t v29 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_hadiCloudAccountAnalyticsKey + 8);
      *(void *)(inited + 128) = *(void *)(v4
                                            + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_hadiCloudAccountAnalyticsKey);
      *(void *)(inited + 136) = v29;
      swift_bridgeObjectRetain();
      *(NSNumber *)(inited + 144) = NSNumber.init(BOOLeanLiteral:)(BOOLeanLiteral);
      uint64_t v30 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_hadQuotaViolationKey + 8);
      *(void *)(inited + 152) = *(void *)(v4
                                            + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_hadQuotaViolationKey);
      *(void *)(inited + 160) = v30;
      swift_bridgeObjectRetain();
      *(NSNumber *)(inited + 168) = NSNumber.init(BOOLeanLiteral:)(v39 & 1);
      return sub_100A39814(inited);
    }
    swift_bridgeObjectRelease();
  }
  if (qword_10166FA48 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v31 = (void *)static OS_os_log.crlAnalytics;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v32 = swift_initStackObject();
  *(_OWORD *)(v32 + 16) = xmmword_10117E810;
  uint64_t v34 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_appForegroundedAnalyticsDomain);
  uint64_t v33 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform28CRLAnalyticsActiveUseManager_appForegroundedAnalyticsDomain + 8);
  *(void *)(v32 + 56) = &type metadata for String;
  *(void *)(v32 + 64) = sub_100528BE4();
  *(void *)(v32 + 32) = v34;
  *(void *)(v32 + 40) = v33;
  id v35 = v31;
  swift_bridgeObjectRetain();
  uint64_t v36 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v35, (uint64_t)&_mh_execute_header, v36, (uint64_t)"Error generating payload for event: %@", 38, 2, v32);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  return v7;
}

void sub_100681C0C()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (!v0)
  {
    long long v13 = 0u;
    long long v14 = 0u;
LABEL_11:
    sub_10052E2B0((uint64_t)&v13);
    goto LABEL_12;
  }
  uint64_t v1 = v0;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v1 + 16) && (unint64_t v2 = sub_10095647C((uint64_t)v12), (v3 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v13);
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)v12);
  if (!*((void *)&v14 + 1)) {
    goto LABEL_11;
  }
  if (swift_dynamicCast())
  {
    if (*(void *)(sub_100681788(v12[0], v12[1], 0) + 16))
    {
      uint64_t v4 = self;
      NSString v5 = String._bridgeToObjectiveC()();
      sub_10050BF48(0, (unint64_t *)&qword_101672E50);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v4 sendEventInDomain:v5 lazily:1 eventPayload:isa 0xD000000000000010 0x8000000101235EB0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return;
  }
LABEL_12:
  if (qword_10166FA48 != -1) {
    swift_once();
  }
  swift_beginAccess();
  unint64_t v7 = (void *)static OS_os_log.crlAnalytics;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v9 = v7;
  Class v10 = Notification._bridgeToObjectiveC()().super.isa;
  *(void *)(inited + 56) = sub_10050BF48(0, &qword_1016758C0);
  *(void *)(inited + 64) = sub_100682274();
  *(void *)(inited + 32) = v10;
  uint64_t v11 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v11, (uint64_t)"Unable to get CRLAnalyticsDataStore.overriddenUserIDKey from notification: %@", 77, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

void sub_100681FCC()
{
  if (*(void *)(sub_100681788(0, 0xE000000000000000, 1) + 16))
  {
    uint64_t v0 = self;
    NSString v1 = String._bridgeToObjectiveC()();
    sub_10050BF48(0, (unint64_t *)&qword_101672E50);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v0 sendEventInDomain:v1 lazily:1 eventPayload:isa];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void sub_100682120()
{
  if (*(void *)(sub_100681788(0, 0xE000000000000000, 0) + 16))
  {
    uint64_t v0 = self;
    NSString v1 = String._bridgeToObjectiveC()();
    sub_10050BF48(0, (unint64_t *)&qword_101672E50);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v0 sendEventInDomain:v1 lazily:1 eventPayload:isa];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_100682274()
{
  unint64_t result = qword_1016758C8;
  if (!qword_1016758C8)
  {
    sub_10050BF48(255, &qword_1016758C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016758C8);
  }
  return result;
}

uint64_t sub_1006822DC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100682318(uint64_t a1)
{
  sub_100681294(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), (uint64_t)sub_10068242C, (uint64_t)&unk_10150E560);
}

uint64_t sub_100682350(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100682360()
{
  return swift_release();
}

void sub_10068236C(uint64_t a1)
{
  sub_100680F1C(a1, *(void **)(v1 + 16));
}

void sub_100682378(uint64_t a1)
{
  sub_100681294(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), (uint64_t)sub_100682448, (uint64_t)&unk_10150E4E8);
}

uint64_t sub_1006823B4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1006823F4(uint64_t a1)
{
  sub_100681294(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), (uint64_t)sub_10068242C, (uint64_t)&unk_10150E4C0);
}

void sub_10068242C()
{
}

void sub_100682448()
{
}

uint64_t sub_100682450()
{
  uint64_t v1 = type metadata accessor for Notification();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_10068251C()
{
  type metadata accessor for Notification();

  sub_100681120();
}

uint64_t sub_1006825BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v31 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v30 = (char *)&v30 - v10;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v30 - v18;
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_1005057FC(&qword_101674550);
  uint64_t v20 = a2;
  CRRegister.wrappedValue.getter();
  LOBYTE(a2) = static UUID.== infix(_:_:)();
  NSString v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  id v22 = v15;
  uint64_t v23 = (uint64_t)v31;
  v21(v22, v11);
  uint64_t v24 = v19;
  uint64_t v25 = v30;
  v21(v24, v11);
  id v26 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v26(v25, a1, v4);
  v26((char *)v23, v20, v4);
  if (a2) {
    char v27 = sub_10068A10C(v23, v4);
  }
  else {
    char v27 = 0;
  }
  id v28 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v28(v23, v4);
  v28((uint64_t)v25, v4);
  return v27 & 1;
}

uint64_t sub_100682844(uint64_t a1)
{
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
  sub_10068919C(a1, v2, (uint64_t)&off_10150E6B8);
  return swift_endAccess();
}

uint64_t sub_10068293C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 632);
  swift_getAssociatedTypeWitness();
  uint64_t v2 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_100682A10()
{
  return 0x1000000000000;
}

uint64_t sub_100682A20()
{
  uint64_t v1 = *v0;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  unint64_t v3 = v0[3];
  *(void *)(inited + 56) = &type metadata for UInt64;
  *(void *)(inited + 64) = &protocol witness table for UInt64;
  *(void *)(inited + 32) = v3;
  if (sub_1002094A4() < v3)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"computedMinRequiredVersion", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 242, (uint64_t)"Call to computedMinRequiredVersion while current minRequiredVersion is higher than current: %{public}d", 102, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"computedMinRequiredVersion", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 242);
  }
  uint64_t v4 = swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v1 + 104))(v4);
}

uint64_t sub_100682B70()
{
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  unint64_t v2 = *(void *)(v0 + 24);
  *(void *)(inited + 56) = &type metadata for UInt64;
  *(void *)(inited + 64) = &protocol witness table for UInt64;
  *(void *)(inited + 32) = v2;
  if (sub_1002094A4() < v2)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"computedMinRequiredVersionForGoodEnoughFidelity", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 250, (uint64_t)"Call to computedMinRequiredVersionForGoodEnoughFidelity while current minRequiredVersion is higher than current: %{public}d", 123, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"computedMinRequiredVersionForGoodEnoughFidelity", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 250);
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_10117E810;
  unint64_t v4 = *(void *)(v0 + 32);
  *(void *)(v3 + 56) = &type metadata for UInt64;
  *(void *)(v3 + 64) = &protocol witness table for UInt64;
  *(void *)(v3 + 32) = v4;
  if (sub_1002094A4() < v4)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"computedMinRequiredVersionForGoodEnoughFidelity", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 251, (uint64_t)"Call to computedMinRequiredVersionForGoodEnoughFidelity while current minRequiredVersionForGoodEnoughFidelity is higher than current: %{public}d", 144, 2u, v3);
    sub_1005598CC(v3, (uint64_t)"computedMinRequiredVersionForGoodEnoughFidelity", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 251);
  }
  swift_bridgeObjectRelease();
  return 0x2000400000000;
}

uint64_t sub_100682D54()
{
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  unint64_t v2 = v0[3];
  *(void *)(inited + 56) = &type metadata for UInt64;
  *(void *)(inited + 64) = &protocol witness table for UInt64;
  *(void *)(inited + 32) = v2;
  if (sub_1002094A4() < v2)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"computedMinRequiredVersionForFullFidelity", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 259, (uint64_t)"Call to computedMinRequiredVersionForFullFidelity while current minRequiredVersion is higher than current: %{public}d", 117, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"computedMinRequiredVersionForFullFidelity", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 259);
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_10117E810;
  unint64_t v4 = v0[5];
  *(void *)(v3 + 56) = &type metadata for UInt64;
  *(void *)(v3 + 64) = &protocol witness table for UInt64;
  *(void *)(v3 + 32) = v4;
  if (sub_1002094A4() < v4)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"computedMinRequiredVersionForFullFidelity", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 260, (uint64_t)"Call to computedMinRequiredVersionForFullFidelity while current minRequiredVersionForFullFidelity is higher than current: %{public}d", 132, 2u, v3);
    sub_1005598CC(v3, (uint64_t)"computedMinRequiredVersionForFullFidelity", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 260);
  }
  swift_bridgeObjectRelease();
  if (v0[5] >= 0x2000400000000uLL) {
    uint64_t v5 = v0[5];
  }
  else {
    uint64_t v5 = 0x2000400000000;
  }
  if (v0[4] == 0x2000400000000) {
    uint64_t v6 = v0[5];
  }
  else {
    uint64_t v6 = v5;
  }
  uint64_t v7 = swift_initStackObject();
  *(_OWORD *)(v7 + 16) = xmmword_10117E810;
  *(void *)(v7 + 56) = &type metadata for UInt64;
  *(void *)(v7 + 64) = &protocol witness table for UInt64;
  *(void *)(v7 + 32) = v6;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_100682F70()
{
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  unint64_t v2 = *(void *)(v0 + 24);
  *(void *)(inited + 56) = &type metadata for UInt64;
  *(void *)(inited + 64) = &protocol witness table for UInt64;
  *(void *)(inited + 32) = v2;
  if (sub_1002094A4() < v2)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"computedMinRequiredVersionMakesBoardUnsupported", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 276, (uint64_t)"Call to computedMinRequiredVersionMakesBoardUnsupported while current minRequiredVersion is higher than current: %{public}d", 123, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"computedMinRequiredVersionMakesBoardUnsupported", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 276);
  }
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_10068307C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = a3;
  if (a4)
  {
    uint64_t v6 = v4[2];
    if ((v6 & 1) == 0) {
      v4[2] = v6 | 1;
    }
  }
  unint64_t result = sub_10068B460();
  if ((a4 & 4) != 0)
  {
    uint64_t v8 = v4[2];
    if ((v8 & 4) == 0) {
      v4[2] = v8 | 4;
    }
  }
  if ((a4 & 2) != 0)
  {
    uint64_t v9 = v4[2];
    if ((v9 & 2) == 0) {
      v4[2] = v9 | 2;
    }
  }
  return result;
}

uint64_t sub_1006830E4()
{
  uint64_t v1 = *v0;
  swift_getAssociatedTypeWitness();
  uint64_t v2 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v9 - v5;
  uint64_t v7 = (char *)v0 + *(void *)(v1 + 632);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v7, v2);
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_100683268()
{
  uint64_t v1 = *v0;
  swift_getAssociatedTypeWitness();
  uint64_t v2 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t v7 = (char *)v0 + *(void *)(v1 + 632);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v7, v2);
  sub_100689760(v2, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_1006833E4(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100522E9C(a1, (uint64_t)v5, (uint64_t *)&unk_101674520);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  uint64_t v6 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
  sub_10068984C((uint64_t)v5, v6);
  swift_endAccess();
  return sub_100522F00(a1, (uint64_t *)&unk_101674520);
}

id sub_10068352C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getAssociatedTypeWitness();
  uint64_t v8 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = &v24[-v11];
  uint64_t v13 = (char *)v1 + *(void *)(v2 + 632);
  swift_beginAccess();
  (*(void (**)(unsigned char *, char *, uint64_t))(v9 + 16))(v12, v13, v8);
  double v15 = sub_100689968(v8, v14, &v25);
  (*(void (**)(unsigned char *, uint64_t, double))(v9 + 8))(v12, v8, v15);
  id v16 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
  id v17 = [v16 initWithPosition:v27 size:v28 widthValid:v29 heightValid:v30 horizontalFlip:v25 verticalFlip:v25 angle:v25];
  sub_10068F550((uint64_t)&v25);
  if (([v17 allValuesValidNumbers] & 1) == 0)
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    sub_1006830E4();
    uint64_t v19 = UUID.uuidString.getter();
    uint64_t v21 = v20;
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v19;
    *(void *)(inited + 40) = v21;
    sub_1005598CC(inited, (uint64_t)"geometry", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 567);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    id v22 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) init];

    return v22;
  }
  return v17;
}

void sub_1006838EC(void *a1)
{
  if (([a1 allValuesValidNumbers] & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"geometry", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 573, (uint64_t)"Setting a new geometry with invalid numbers (NaN).", 50, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"geometry", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 573);
  }
  id v2 = a1;
  [v2 position];
  float v4 = v3;
  float v6 = v5;
  [v2 size];
  float v8 = v7;
  float v10 = v9;
  [v2 angle];
  float v12 = v11;
  unsigned __int8 v13 = [v2 widthValid];
  unsigned __int8 v14 = [v2 heightValid];
  unsigned __int8 v15 = [v2 horizontalFlip];
  unsigned __int8 v16 = [v2 verticalFlip];

  *(float *)uint64_t v18 = v4;
  *(float *)&v18[1] = v6;
  *(float *)&v18[2] = v8;
  *(float *)&v18[3] = v10;
  *(float *)&v18[4] = v12;
  unsigned __int8 v19 = v13;
  unsigned __int8 v20 = v14;
  unsigned __int8 v21 = v15;
  unsigned __int8 v22 = v16;
  uint64_t v23 = _swiftEmptyDictionarySingleton;
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  uint64_t v17 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
  sub_100689A60((uint64_t)v18, v17);
  swift_endAccess();
}

uint64_t sub_100683B44()
{
  uint64_t v1 = *v0;
  swift_getAssociatedTypeWitness();
  uint64_t v2 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  float v6 = &v10[-v5];
  double v7 = (char *)v0 + *(void *)(v1 + 632);
  swift_beginAccess();
  (*(void (**)(unsigned char *, char *, uint64_t))(v3 + 16))(v6, v7, v2);
  sub_1005057FC((uint64_t *)&unk_101689310);
  CRRegister.wrappedValue.getter();
  uint64_t v8 = v10[31];
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v6, v2);
  return v8;
}

uint64_t sub_100683CD0()
{
  return swift_endAccess();
}

uint64_t sub_100683DBC()
{
  uint64_t v1 = *v0;
  swift_getAssociatedTypeWitness();
  uint64_t v2 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  float v6 = &v10[-v5];
  double v7 = (char *)v0 + *(void *)(v1 + 632);
  swift_beginAccess();
  (*(void (**)(unsigned char *, char *, uint64_t))(v3 + 16))(v6, v7, v2);
  sub_1005057FC((uint64_t *)&unk_101689310);
  CRRegister.wrappedValue.getter();
  uint64_t v8 = v10[31];
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v6, v2);
  return v8;
}

uint64_t sub_100683F48()
{
  return swift_endAccess();
}

uint64_t sub_100684034()
{
  uint64_t v1 = *v0;
  swift_getAssociatedTypeWitness();
  uint64_t v2 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  float v6 = (char *)v10 - v5;
  double v7 = (char *)v0 + *(void *)(v1 + 632);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v7, v2);
  sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  uint64_t v8 = v10[4];
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v8;
}

uint64_t sub_1006841C4()
{
  return swift_endAccess();
}

id sub_1006842BC()
{
  uint64_t v1 = *v0;
  swift_getAssociatedTypeWitness();
  uint64_t v2 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  float v6 = (char *)v17 - v5 + 16;
  double v7 = (char *)v0 + *(void *)(v1 + 632);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v7, v2);
  sub_100689694((uint64_t)v17);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  sub_10051B3EC((uint64_t)v17, (uint64_t)&v18, (uint64_t *)&unk_101683E20);
  id v8 = 0;
  if (sub_10068F2EC((uint64_t)&v18) != 1)
  {
    long long v30 = v22;
    long long v31 = v23;
    v32[0] = v24;
    v32[1] = v25;
    long long v26 = v18;
    long long v27 = v19;
    long long v28 = v20;
    long long v29 = v21;
    sub_10068F4B8();
    v33[2] = v20;
    v33[3] = v21;
    v33[4] = v22;
    uint64_t v34 = v23;
    v33[0] = v18;
    v33[1] = v19;
    sub_10068F4F8((uint64_t)v33);
    double v9 = sub_1007B0B84((uint64_t)v33);
    double v10 = *((float *)&v31 + 2);
    double v11 = *((float *)&v31 + 3);
    double v12 = *(float *)v32;
    double v13 = *((float *)v32 + 1);
    sub_10051B3EC((uint64_t)v32 + 8, (uint64_t)v35, &qword_101679B98);
    sub_10051B3EC((uint64_t)v35, (uint64_t)&v36, &qword_101679B98);
    if (v37) {
      id v14 = [objc_allocWithZone((Class)CRLCurvedShadow) initWithOffset:v9 angle:1 radius:v11 curve:v10 opacity:v12 color:v36 enabled:v13];
    }
    else {
      id v14 = [objc_allocWithZone((Class)CRLDropShadow) initWithAngle:v9 offset:1 radius:v10 opacity:v11 color:v12 enabled:v13];
    }
    id v8 = v14;

    sub_10068F3E8(v17);
  }
  return v8;
}

void sub_1006845BC(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    sub_10093D2D8(v1, (uint64_t)v3);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)v3, v2);
    sub_10051B3EC((uint64_t)v3, (uint64_t)v4, (uint64_t *)&unk_101683E20);
    swift_beginAccess();
    swift_getAssociatedTypeWitness();
    type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
    sub_100689708((uint64_t)v4);
    swift_endAccess();
  }
  else
  {
    sub_10051A41C(v3);
    sub_10051B3EC((uint64_t)v3, (uint64_t)v4, (uint64_t *)&unk_101683E20);
    swift_beginAccess();
    swift_getAssociatedTypeWitness();
    type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
    sub_100689708((uint64_t)v4);
    swift_endAccess();
  }
}

uint64_t sub_100684744()
{
  swift_getAssociatedTypeWitness();
  uint64_t v0 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = &v8[-v3];
  uint64_t v5 = swift_dynamicCastClass();
  if (v5)
  {
    uint64_t v6 = v5 + *(void *)(*(void *)v5 + 632);
    swift_beginAccess();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v4, v6, v0);
    swift_beginAccess();
    swift_retain();
    swift_getWitnessTable();
    CRStruct_6.merge(_:)();
    (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v4, v0);
    swift_endAccess();
    return swift_release();
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1006849AC(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  swift_getAssociatedTypeWitness();
  uint64_t v5 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  double v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  double v13 = (char *)&v18 - v12;
  id v14 = (char *)v2 + *(void *)(v4 + 632);
  swift_beginAccess();
  if (a2)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v14, v5);
    swift_getWitnessTable();
    CRType.copy(renamingReferences:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v13, v14, v5);
  }
  if (qword_10166EE10 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for CRCodableVersion();
  sub_100556B74(v15, (uint64_t)qword_10171A2D8);
  swift_getWitnessTable();
  uint64_t v16 = CRDT.serializedData(_:version:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
  return v16;
}

uint64_t sub_100684C64()
{
  uint64_t v1 = *v0;
  swift_getAssociatedTypeWitness();
  uint64_t v2 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7, v8);
  uint64_t v10 = &v18[-v9];
  uint64_t v11 = swift_dynamicCastClass();
  if (v11)
  {
    uint64_t v12 = v11;
    double v13 = (char *)v0 + *(void *)(v1 + 632);
    swift_beginAccess();
    id v14 = *(void (**)(unsigned char *, char *, uint64_t))(v3 + 16);
    v14(v10, v13, v2);
    uint64_t v15 = v12 + *(void *)(*(void *)v12 + 632);
    swift_beginAccess();
    v14(v6, (char *)v15, v2);
    swift_getWitnessTable();
    LOBYTE(v15) = CRStruct_6.hasDelta(from:)();
    uint64_t v16 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
    v16(v6, v2);
    v16(v10, v2);
    return v15 & 1;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100684F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = a2;
  uint64_t v4 = *v2;
  swift_getAssociatedTypeWitness();
  uint64_t v5 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v40 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)v38 - v11;
  v38[1] = swift_getWitnessTable();
  uint64_t v42 = type metadata accessor for CRStructMergeableDelta_6();
  uint64_t v41 = type metadata accessor for Optional();
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41, v13);
  uint64_t v15 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  long long v19 = (char *)v38 - v18;
  uint64_t v43 = a1;
  uint64_t v20 = swift_dynamicCastClass();
  if (v20)
  {
    uint64_t v21 = v20;
    long long v22 = (char *)v2 + *(void *)(v4 + 632);
    swift_beginAccess();
    long long v23 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    v23(v12, v22, v5);
    uint64_t v24 = v21 + *(void *)(*(void *)v21 + 632);
    swift_beginAccess();
    long long v25 = v40;
    v23(v40, (char *)v24, v5);
    swift_retain();
    CRStruct_6.delta(_:from:)();
    long long v26 = *(void (**)(char *, uint64_t))(v6 + 8);
    v26(v25, v5);
    v26(v12, v5);
    uint64_t v27 = v39;
    uint64_t v28 = v41;
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v15, v19, v41);
    uint64_t v29 = v42;
    uint64_t v30 = *(void *)(v42 - 8);
    uint64_t v31 = v27;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v15, 1, v42) == 1)
    {
      uint64_t v32 = *(void (**)(char *, uint64_t))(v27 + 8);
      v32(v19, v28);
      swift_release();
      v32(v15, v28);
      return 0;
    }
    else
    {
      v40 = v19;
      uint64_t v34 = v45;
      if (qword_10166EE10 != -1) {
        swift_once();
      }
      uint64_t v35 = type metadata accessor for CRCodableVersion();
      uint64_t v33 = sub_100556B74(v35, (uint64_t)qword_10171A2D8);
      swift_getWitnessTable();
      uint64_t v36 = PartialCRDT.deltaSerializedData(_:version:)();
      if (!v34) {
        uint64_t v33 = v36;
      }
      swift_release();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v40, v28);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v29);
    }
    return v33;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

unint64_t sub_100685478(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = (void *)*v3;
  uint64_t v33 = type metadata accessor for UUID();
  uint64_t v31 = *(void *)(v33 - 8);
  __chkstk_darwin(v33, v6);
  uint64_t v30 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v5[76];
  uint64_t v32 = v5[77];
  swift_getAssociatedTypeWitness();
  uint64_t v9 = v5[78];
  type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
  swift_getWitnessTable();
  uint64_t v10 = type metadata accessor for CRStructMergeableDelta_6();
  uint64_t v34 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)v27 - v12;
  sub_100510D4C(a1, a2);
  swift_getWitnessTable();
  LOBYTE(a2) = v10;
  uint64_t v15 = v35;
  PartialCRDT.init(serializedData:)();
  if (!v15)
  {
    uint64_t v29 = v9;
    uint64_t v35 = v8;
    swift_beginAccess();
    LODWORD(a2) = CRStruct_6.merge(delta:)();
    swift_endAccess();
    if ((a2 & 1) == 0)
    {
      int v28 = a2;
      v27[1] = 0;
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      a2 = static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      id v17 = (id)a2;
      uint64_t v18 = v30;
      sub_1006830E4();
      uint64_t v19 = UUID.uuidString.getter();
      uint64_t v21 = v20;
      (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v33);
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v22 = sub_100528BE4();
      *(void *)(inited + 64) = v22;
      *(void *)(inited + 32) = v19;
      *(void *)(inited + 40) = v21;
      uint64_t v36 = v3;
      type metadata accessor for CRLBoardItemCommonAbstractData();
      swift_retain();
      uint64_t v23 = String.init<A>(describing:)();
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v22;
      *(void *)(inited + 72) = v23;
      *(void *)(inited + 80) = v24;
      uint64_t v25 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v17, (uint64_t)&_mh_execute_header, v25, (uint64_t)"Delta failed to apply for %{public}@%{public}@", 46, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      LOBYTE(a2) = v28;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v10);
  }
  return a2 & 1;
}

uint64_t sub_1006858D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v15 = __chkstk_darwin(v12, v14);
  id v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(*(void *)v3 + 488))(a1, a2, v15);
  if (!v4)
  {
    uint64_t v42 = v11;
    uint64_t v43 = v13;
    unint64_t v20 = v19;
    uint64_t v44 = result;
    uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 504))(a1, a2);
    uint64_t v23 = v22;
    if (v20 >> 60 == 15 && v22 >> 60 == 15)
    {
      uint64_t v36 = type metadata accessor for CRLBoardItemDeltaChange(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(a3, 1, 1, v36);
    }
    else
    {
      uint64_t v25 = *(uint64_t (**)(void))(*(void *)v3 + 256);
      uint64_t v41 = v21;
      uint64_t v26 = v25();
      uint64_t v27 = (uint64_t)v42;
      uint64_t v28 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 264))(v26);
      long long v39 = *(_OWORD *)(v3 + 24);
      uint64_t v38 = *(void *)(v3 + 40);
      uint64_t v40 = *(void *)(v3 + 16);
      uint64_t v29 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 408))(v28);
      if (v30) {
        uint64_t v31 = v29 + 2;
      }
      else {
        uint64_t v31 = v29;
      }
      (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(a3, v17, v12);
      uint64_t v32 = (int *)type metadata accessor for CRLBoardItemDeltaChange(0);
      sub_10051B3EC(v27, a3 + v32[5], (uint64_t *)&unk_101674520);
      uint64_t v33 = a3 + v32[6];
      *(_OWORD *)uint64_t v33 = v39;
      *(void *)(v33 + 16) = v38;
      *(void *)(a3 + v32[7]) = v40;
      *(void *)(a3 + v32[8]) = v31;
      uint64_t v34 = (uint64_t *)(a3 + v32[9]);
      *uint64_t v34 = v44;
      v34[1] = v20;
      uint64_t v35 = (uint64_t *)(a3 + v32[10]);
      *uint64_t v35 = v41;
      v35[1] = v23;
      return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v32 - 1) + 56))(a3, 0, 1, v32);
    }
  }
  return result;
}

uint64_t sub_100685C78@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v62 = a2;
  uint64_t v5 = *v2;
  uint64_t v64 = sub_100522D34(&qword_101679B78);
  swift_getAssociatedTypeWitness();
  uint64_t v59 = type metadata accessor for CRRegister.MutatingAction();
  uint64_t v65 = type metadata accessor for Optional();
  uint64_t v66 = sub_100522D34(&qword_101679B80);
  uint64_t v67 = v66;
  uint64_t v68 = sub_100522D34(&qword_101679B88);
  uint64_t v69 = sub_100522D34(&qword_101679B90);
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v61 = *((void *)TupleTypeMetadata - 1);
  __chkstk_darwin(TupleTypeMetadata, v7);
  uint64_t v60 = (uint64_t)&v50 - v8;
  uint64_t v9 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  id v17 = (char *)&v50 - v16;
  uint64_t v18 = type metadata accessor for Optional();
  uint64_t v57 = *(void *)(v18 - 8);
  uint64_t v58 = (char *)v18;
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v50 - v20;
  uint64_t v63 = a1;
  uint64_t v22 = swift_dynamicCastClass();
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v24 = (char *)v3 + *(void *)(v5 + 632);
    swift_beginAccess();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v25(v17, v24, v9);
    uint64_t v26 = v23 + *(void *)(*(void *)v23 + 632);
    swift_beginAccess();
    v25(v13, (char *)v26, v9);
    swift_retain();
    swift_getWitnessTable();
    CRStruct_6.actionUndoingDifference(from:)();
    uint64_t v27 = *(void (**)(char *, uint64_t))(v10 + 8);
    v27(v13, v9);
    v27(v17, v9);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v61 + 48))(v21, 1, TupleTypeMetadata) == 1)
    {
      swift_release();
      uint64_t result = (*(uint64_t (**)(char *, char *))(v57 + 8))(v21, v58);
      uint64_t v29 = v62;
      *(_OWORD *)uint64_t v62 = 0u;
      *((_OWORD *)v29 + 1) = 0u;
    }
    else
    {
      uint64_t v30 = TupleTypeMetadata[12];
      uint64_t v51 = &v21[v30];
      uint64_t v31 = TupleTypeMetadata[16];
      uint64_t v52 = &v21[v31];
      uint64_t v32 = TupleTypeMetadata[20];
      uint64_t v53 = &v21[v32];
      uint64_t v33 = TupleTypeMetadata[24];
      objc_super v54 = &v21[v33];
      uint64_t v34 = TupleTypeMetadata[28];
      uint64_t v35 = v60;
      uint64_t v36 = v60 + v30;
      uint64_t v61 = v60 + v30;
      uint64_t v37 = v60 + v31;
      uint64_t v38 = v60 + v32;
      uint64_t v57 = v60 + v32;
      uint64_t v58 = &v21[v34];
      uint64_t v39 = v60 + v33;
      uint64_t v40 = v60 + v34;
      uint64_t v55 = v60 + v34;
      uint64_t v56 = v60 + v31;
      sub_10051B3EC((uint64_t)v21, v60, &qword_101679B78);
      uint64_t v41 = type metadata accessor for Optional();
      uint64_t v42 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v41 - 8) + 32);
      v42(v36, v51, v41);
      sub_10051B3EC((uint64_t)v52, v37, &qword_101679B80);
      sub_10051B3EC((uint64_t)v53, v38, &qword_101679B80);
      sub_10051B3EC((uint64_t)v54, v39, &qword_101679B88);
      sub_10051B3EC((uint64_t)v58, v40, &qword_101679B90);
      uint64_t v43 = v62;
      v62[3] = (uint64_t)TupleTypeMetadata;
      uint64_t v44 = sub_1005767BC(v43);
      uint64_t v45 = (char *)v44 + TupleTypeMetadata[12];
      uint64_t v46 = (uint64_t)v44 + TupleTypeMetadata[16];
      uint64_t v47 = (uint64_t)v44 + TupleTypeMetadata[20];
      uint64_t v48 = (uint64_t)v44 + TupleTypeMetadata[24];
      uint64_t v49 = (uint64_t)v44 + TupleTypeMetadata[28];
      sub_10051B3EC(v35, (uint64_t)v44, &qword_101679B78);
      v42((uint64_t)v45, (char *)v61, v41);
      sub_10051B3EC(v56, v46, &qword_101679B80);
      sub_10051B3EC(v57, v47, &qword_101679B80);
      sub_10051B3EC(v39, v48, &qword_101679B88);
      sub_10051B3EC(v55, v49, &qword_101679B90);
      return swift_release();
    }
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

double *sub_1006862C0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  strcpy(v176, "id parentAffinity locked aspectRatioLocked accessibilityDescription shadow ");
  uint64_t v177 = sub_100522D34(&qword_10167D310);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v178 = type metadata accessor for Optional();
  uint64_t v179 = v177;
  uint64_t v180 = v177;
  uint64_t v181 = v177;
  uint64_t v182 = v177;
  uint64_t v5 = v4;
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v163 = *(void *)(TupleTypeMetadata - 8);
  __chkstk_darwin(TupleTypeMetadata, v7);
  v155 = (char *)&v149 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  v153 = (char *)&v149 - v11;
  __chkstk_darwin(v12, v13);
  v152 = (char *)&v149 - v14;
  __chkstk_darwin(v15, v16);
  v154 = (char *)&v149 - v17;
  __chkstk_darwin(v18, v19);
  uint64_t v151 = (uint64_t)&v149 - v20;
  __chkstk_darwin(v21, v22);
  v168 = (double *)((char *)&v149 - v23);
  __chkstk_darwin(v24, v25);
  uint64_t v175 = (uint64_t)&v149 - v26;
  uint64_t v27 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)&v149 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32, v33);
  uint64_t v35 = (char *)&v149 - v34;
  v174 = (int *)TupleTypeMetadata;
  uint64_t v162 = type metadata accessor for Optional();
  uint64_t v161 = *(void *)(v162 - 8);
  __chkstk_darwin(v162, v36);
  uint64_t v38 = (char *)&v149 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39, v40);
  uint64_t v42 = (char *)&v149 - v41;
  uint64_t v164 = a1;
  uint64_t v43 = swift_dynamicCastClass();
  if (v43)
  {
    uint64_t v44 = v43;
    uint64_t v45 = (char *)v2 + *(void *)(v5 + 632);
    swift_beginAccess();
    uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
    v46(v35, v45, v27);
    uint64_t v47 = v44 + *(void *)(*(void *)v44 + 632);
    swift_beginAccess();
    v46(v31, (char *)v47, v27);
    swift_retain();
    swift_getWitnessTable();
    CRType.observableDifference(from:)();
    uint64_t v48 = *(void (**)(char *, uint64_t))(v28 + 8);
    v48(v31, v27);
    v48(v35, v27);
    uint64_t v49 = v161;
    uint64_t v50 = v162;
    (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v38, v42, v162);
    uint64_t v51 = v174;
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v163 + 48))(v38, 1, v174) == 1)
    {
      uint64_t v52 = *(void (**)(char *, uint64_t))(v49 + 8);
      v52(v42, v50);
      swift_release();
      v52(v38, v50);
      return _swiftEmptyArrayStorage;
    }
    else
    {
      v149 = v42;
      uint64_t v54 = v51[12];
      uint64_t v55 = v175;
      uint64_t v56 = v175 + v54;
      uint64_t v169 = v175 + v54;
      uint64_t v57 = v51[16];
      uint64_t v58 = v175 + v57;
      uint64_t v170 = v175 + v57;
      uint64_t v59 = v51[20];
      uint64_t v60 = v175 + v59;
      uint64_t v171 = v175 + v59;
      uint64_t v61 = v51[24];
      uint64_t v62 = v175 + v61;
      uint64_t v172 = v175 + v61;
      uint64_t v63 = v51[28];
      uint64_t v64 = v175 + v63;
      uint64_t v173 = v175 + v63;
      v159 = &v38[v54];
      v160 = &v38[v57];
      v165 = &v38[v59];
      v166 = &v38[v61];
      v167 = &v38[v63];
      sub_10051B3EC((uint64_t)v38, v175, &qword_10167D310);
      uint64_t v65 = type metadata accessor for Optional();
      uint64_t v66 = *(void *)(v65 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v66 + 32))(v56, v159, v65);
      sub_10051B3EC((uint64_t)v160, v58, &qword_10167D310);
      sub_10051B3EC((uint64_t)v165, v60, &qword_10167D310);
      sub_10051B3EC((uint64_t)v166, v62, &qword_10167D310);
      sub_10051B3EC((uint64_t)v167, v64, &qword_10167D310);
      uint64_t v67 = v168;
      uint64_t v68 = (uint64_t)v168 + v51[16];
      uint64_t v69 = (uint64_t)v168 + v51[20];
      uint64_t v70 = (uint64_t)v168 + v51[24];
      uint64_t v71 = (uint64_t)v168 + v51[28];
      uint64_t v72 = v55;
      uint64_t v73 = v66;
      uint64_t v74 = (char *)v168 + v51[12];
      sub_100522E9C(v72, (uint64_t)v168, &qword_10167D310);
      char v75 = *(char **)(v73 + 16);
      uint64_t v157 = v65;
      v167 = (char *)(v73 + 16);
      v166 = v75;
      ((void (*)(char *, uint64_t, uint64_t))v75)(v74, v169, v65);
      sub_100522E9C(v170, v68, &qword_10167D310);
      sub_100522E9C(v171, v69, &qword_10167D310);
      sub_100522E9C(v172, v70, &qword_10167D310);
      sub_100522E9C(v173, v71, &qword_10167D310);
      uint64_t v76 = type metadata accessor for CRValueObservableDifference();
      uint64_t v77 = *(void *)(v76 - 8);
      id v78 = *(char **)(v77 + 48);
      v160 = (char *)v76;
      v159 = v78;
      uint64_t v158 = v77 + 48;
      int v79 = ((uint64_t (*)(double *, uint64_t))v78)(v67, 1);
      uint64_t v150 = v73;
      if (v79 == 1)
      {
        sub_100522F00(v71, &qword_10167D310);
        sub_100522F00(v70, &qword_10167D310);
        sub_100522F00(v69, &qword_10167D310);
        sub_100522F00(v68, &qword_10167D310);
        v165 = *(char **)(v73 + 8);
        ((void (*)(char *, uint64_t))v165)(v74, v157);
        sub_100522F00((uint64_t)v67, &qword_10167D310);
        v168 = _swiftEmptyArrayStorage;
        uint64_t v80 = v171;
      }
      else
      {
        sub_100522F00((uint64_t)v67, &qword_10167D310);
        sub_100522F00(v71, &qword_10167D310);
        sub_100522F00(v70, &qword_10167D310);
        sub_100522F00(v69, &qword_10167D310);
        sub_100522F00(v68, &qword_10167D310);
        v165 = *(char **)(v73 + 8);
        ((void (*)(char *, uint64_t))v165)(v74, v157);
        uint64_t v81 = sub_100F61B70(0, 1, 1, _swiftEmptyArrayStorage);
        unint64_t v83 = *((void *)v81 + 2);
        unint64_t v82 = *((void *)v81 + 3);
        if (v83 >= v82 >> 1) {
          uint64_t v81 = sub_100F61B70((double *)(v82 > 1), v83 + 1, 1, v81);
        }
        uint64_t v80 = v171;
        *((void *)v81 + 2) = v83 + 1;
        v168 = v81;
        id v84 = &v81[2 * v83];
        *((void *)v84 + 4) = 25705;
        v84[5] = -1.15172193e164;
      }
      uint64_t v85 = v151;
      uint64_t v86 = v151 + v51[12];
      uint64_t v87 = v151 + v51[16];
      uint64_t v88 = v151 + v51[20];
      uint64_t v89 = v151 + v51[24];
      uint64_t v90 = v151 + v51[28];
      sub_100522E9C(v175, v151, &qword_10167D310);
      ((void (*)(uint64_t, uint64_t, uint64_t))v166)(v86, v169, v157);
      sub_100522E9C(v170, v87, &qword_10167D310);
      sub_100522E9C(v80, v88, &qword_10167D310);
      sub_100522E9C(v172, v89, &qword_10167D310);
      sub_100522E9C(v173, v90, &qword_10167D310);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v86, 1) == 1)
      {
        sub_100522F00(v90, &qword_10167D310);
        sub_100522F00(v89, &qword_10167D310);
        sub_100522F00(v88, &qword_10167D310);
        sub_100522F00(v87, &qword_10167D310);
        uint64_t v91 = v150;
        ((void (*)(uint64_t, uint64_t))v165)(v86, v157);
        sub_100522F00(v85, &qword_10167D310);
        uint64_t v92 = (uint64_t)v154;
      }
      else
      {
        ((void (*)(uint64_t, uint64_t))v165)(v86, v157);
        sub_100522F00(v90, &qword_10167D310);
        sub_100522F00(v89, &qword_10167D310);
        sub_100522F00(v88, &qword_10167D310);
        sub_100522F00(v87, &qword_10167D310);
        sub_100522F00(v85, &qword_10167D310);
        id v93 = v168;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v93 = sub_100F61B70(0, *((void *)v93 + 2) + 1, 1, v93);
        }
        unint64_t v95 = *((void *)v93 + 2);
        unint64_t v94 = *((void *)v93 + 3);
        uint64_t v92 = (uint64_t)v154;
        if (v95 >= v94 >> 1)
        {
          v147 = sub_100F61B70((double *)(v94 > 1), v95 + 1, 1, v93);
          uint64_t v92 = (uint64_t)v154;
          id v93 = v147;
        }
        *((void *)v93 + 2) = v95 + 1;
        v168 = v93;
        uint64_t v96 = &v93[2 * v95];
        strcpy((char *)v96 + 32, "parentAffinity");
        *((unsigned char *)v96 + 47) = -18;
        uint64_t v91 = v150;
      }
      uint64_t v97 = v92 + v51[12];
      uint64_t v98 = v92 + v51[16];
      uint64_t v99 = v92 + v51[20];
      uint64_t v100 = v92 + v51[24];
      uint64_t v101 = v92 + v51[28];
      sub_100522E9C(v175, v92, &qword_10167D310);
      uint64_t v102 = v157;
      ((void (*)(uint64_t, uint64_t, uint64_t))v166)(v97, v169, v157);
      sub_100522E9C(v170, v98, &qword_10167D310);
      sub_100522E9C(v171, v99, &qword_10167D310);
      sub_100522E9C(v172, v100, &qword_10167D310);
      sub_100522E9C(v173, v101, &qword_10167D310);
      int v103 = ((uint64_t (*)(uint64_t, uint64_t, char *))v159)(v98, 1, v160);
      uint64_t AssociatedTypeWitness = v91 + 8;
      if (v103 == 1)
      {
        sub_100522F00(v101, &qword_10167D310);
        sub_100522F00(v100, &qword_10167D310);
        sub_100522F00(v99, &qword_10167D310);
        sub_100522F00(v98, &qword_10167D310);
        ((void (*)(uint64_t, uint64_t))v165)(v97, v102);
        sub_100522F00(v92, &qword_10167D310);
        uint64_t v104 = (uint64_t)v152;
        uint64_t v105 = (uint64_t)v153;
        uint64_t v106 = v171;
      }
      else
      {
        sub_100522F00(v98, &qword_10167D310);
        sub_100522F00(v101, &qword_10167D310);
        sub_100522F00(v100, &qword_10167D310);
        sub_100522F00(v99, &qword_10167D310);
        ((void (*)(uint64_t, uint64_t))v165)(v97, v102);
        sub_100522F00(v92, &qword_10167D310);
        uint64_t v107 = v168;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v104 = (uint64_t)v152;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v107 = sub_100F61B70(0, *((void *)v107 + 2) + 1, 1, v107);
        }
        uint64_t v105 = (uint64_t)v153;
        uint64_t v106 = v171;
        unint64_t v110 = *((void *)v107 + 2);
        unint64_t v109 = *((void *)v107 + 3);
        if (v110 >= v109 >> 1) {
          uint64_t v107 = sub_100F61B70((double *)(v109 > 1), v110 + 1, 1, v107);
        }
        *((void *)v107 + 2) = v110 + 1;
        v168 = v107;
        uint64_t v111 = &v107[2 * v110];
        *((void *)v111 + 4) = 0x64656B636F6CLL;
        v111[5] = -2.12455197e183;
      }
      uint64_t v112 = v104 + v174[12];
      uint64_t v113 = v104 + v174[16];
      uint64_t v114 = v104 + v174[20];
      uint64_t v115 = v104 + v174[24];
      uint64_t v116 = v104 + v174[28];
      sub_100522E9C(v175, v104, &qword_10167D310);
      ((void (*)(uint64_t, uint64_t, uint64_t))v166)(v112, v169, v102);
      sub_100522E9C(v170, v113, &qword_10167D310);
      sub_100522E9C(v106, v114, &qword_10167D310);
      sub_100522E9C(v172, v115, &qword_10167D310);
      sub_100522E9C(v173, v116, &qword_10167D310);
      if (((unsigned int (*)(uint64_t, uint64_t, char *))v159)(v114, 1, v160) == 1)
      {
        sub_100522F00(v116, &qword_10167D310);
        sub_100522F00(v115, &qword_10167D310);
        sub_100522F00(v114, &qword_10167D310);
        sub_100522F00(v113, &qword_10167D310);
        ((void (*)(uint64_t, uint64_t))v165)(v112, v102);
        sub_100522F00(v104, &qword_10167D310);
        uint64_t v117 = v173;
      }
      else
      {
        sub_100522F00(v114, &qword_10167D310);
        sub_100522F00(v116, &qword_10167D310);
        sub_100522F00(v115, &qword_10167D310);
        sub_100522F00(v113, &qword_10167D310);
        ((void (*)(uint64_t, uint64_t))v165)(v112, v102);
        sub_100522F00(v104, &qword_10167D310);
        uint64_t v118 = v168;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v118 = sub_100F61B70(0, *((void *)v118 + 2) + 1, 1, v118);
        }
        uint64_t v117 = v173;
        unint64_t v120 = *((void *)v118 + 2);
        unint64_t v119 = *((void *)v118 + 3);
        if (v120 >= v119 >> 1) {
          uint64_t v118 = sub_100F61B70((double *)(v119 > 1), v120 + 1, 1, v118);
        }
        *((void *)v118 + 2) = v120 + 1;
        v168 = v118;
        v121 = &v118[2 * v120];
        v121[4] = -2.31584178e77;
        *((void *)v121 + 5) = 0x80000001012443E0;
      }
      uint64_t v122 = v105 + v174[12];
      uint64_t v123 = v105 + v174[16];
      uint64_t v124 = v105 + v174[20];
      uint64_t v125 = v105 + v174[24];
      uint64_t v126 = v105 + v174[28];
      sub_100522E9C(v175, v105, &qword_10167D310);
      ((void (*)(uint64_t, uint64_t, uint64_t))v166)(v122, v169, v102);
      sub_100522E9C(v170, v123, &qword_10167D310);
      sub_100522E9C(v171, v124, &qword_10167D310);
      sub_100522E9C(v172, v125, &qword_10167D310);
      sub_100522E9C(v117, v126, &qword_10167D310);
      if (((unsigned int (*)(uint64_t, uint64_t, char *))v159)(v125, 1, v160) == 1)
      {
        sub_100522F00(v126, &qword_10167D310);
        sub_100522F00(v125, &qword_10167D310);
        sub_100522F00(v124, &qword_10167D310);
        sub_100522F00(v123, &qword_10167D310);
        ((void (*)(uint64_t, uint64_t))v165)(v122, v102);
        sub_100522F00(v105, &qword_10167D310);
        uint64_t v127 = (uint64_t)v155;
      }
      else
      {
        sub_100522F00(v125, &qword_10167D310);
        sub_100522F00(v126, &qword_10167D310);
        sub_100522F00(v124, &qword_10167D310);
        sub_100522F00(v123, &qword_10167D310);
        ((void (*)(uint64_t, uint64_t))v165)(v122, v102);
        sub_100522F00(v105, &qword_10167D310);
        v128 = v168;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v128 = sub_100F61B70(0, *((void *)v128 + 2) + 1, 1, v128);
        }
        unint64_t v130 = *((void *)v128 + 2);
        unint64_t v129 = *((void *)v128 + 3);
        uint64_t v127 = (uint64_t)v155;
        if (v130 >= v129 >> 1)
        {
          v148 = sub_100F61B70((double *)(v129 > 1), v130 + 1, 1, v128);
          uint64_t v127 = (uint64_t)v155;
          v128 = v148;
        }
        *((void *)v128 + 2) = v130 + 1;
        v168 = v128;
        v131 = &v128[2 * v130];
        v131[4] = -2.31584178e77;
        *((void *)v131 + 5) = 0x80000001012443C0;
      }
      uint64_t v132 = v102;
      v133 = v174;
      uint64_t v134 = v127 + v174[12];
      uint64_t v135 = v127 + v174[16];
      uint64_t v136 = v127 + v174[20];
      uint64_t v137 = v127 + v174[24];
      uint64_t v138 = v127 + v174[28];
      uint64_t v139 = v175;
      sub_100522E9C(v175, v127, &qword_10167D310);
      ((void (*)(uint64_t, uint64_t, uint64_t))v166)(v134, v169, v132);
      sub_100522E9C(v170, v135, &qword_10167D310);
      sub_100522E9C(v171, v136, &qword_10167D310);
      sub_100522E9C(v172, v137, &qword_10167D310);
      sub_100522E9C(v173, v138, &qword_10167D310);
      if (((unsigned int (*)(uint64_t, uint64_t, char *))v159)(v138, 1, v160) == 1)
      {
        swift_release();
        (*(void (**)(uint64_t, int *))(v163 + 8))(v139, v133);
        (*(void (**)(char *, uint64_t))(v161 + 8))(v149, v162);
        sub_100522F00(v138, &qword_10167D310);
        sub_100522F00(v137, &qword_10167D310);
        sub_100522F00(v136, &qword_10167D310);
        sub_100522F00(v135, &qword_10167D310);
        ((void (*)(uint64_t, uint64_t))v165)(v134, v132);
        sub_100522F00(v127, &qword_10167D310);
        return v168;
      }
      else
      {
        sub_100522F00(v138, &qword_10167D310);
        sub_100522F00(v137, &qword_10167D310);
        sub_100522F00(v136, &qword_10167D310);
        sub_100522F00(v135, &qword_10167D310);
        ((void (*)(uint64_t, uint64_t))v165)(v134, v132);
        sub_100522F00(v127, &qword_10167D310);
        uint64_t v53 = v168;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v53 = sub_100F61B70(0, *((void *)v53 + 2) + 1, 1, v53);
        }
        v140 = v174;
        uint64_t v141 = v163;
        uint64_t v142 = v162;
        unint64_t v144 = *((void *)v53 + 2);
        unint64_t v143 = *((void *)v53 + 3);
        if (v144 >= v143 >> 1) {
          uint64_t v53 = sub_100F61B70((double *)(v143 > 1), v144 + 1, 1, v53);
        }
        *((void *)v53 + 2) = v144 + 1;
        v145 = &v53[2 * v144];
        *((void *)v145 + 4) = 0x776F64616873;
        v145[5] = -2.12455197e183;
        swift_release();
        (*(void (**)(uint64_t, int *))(v141 + 8))(v175, v140);
        (*(void (**)(char *, uint64_t))(v161 + 8))(v149, v142);
      }
    }
    return v53;
  }
  else
  {
    uint64_t result = (double *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1006879F0(uint64_t a1)
{
  uint64_t v3 = *v1;
  v48[0] = sub_100522D34(&qword_101679B78);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v45 = *(void *)(v3 + 624);
  type metadata accessor for CRRegister.MutatingAction();
  v48[1] = type metadata accessor for Optional();
  uint64_t v49 = sub_100522D34(&qword_101679B80);
  uint64_t v50 = v49;
  uint64_t v51 = sub_100522D34(&qword_101679B88);
  uint64_t v52 = sub_100522D34(&qword_101679B90);
  uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v6 = type metadata accessor for Optional();
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v47 = v6;
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v14 = *((void *)TupleTypeMetadata - 1);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v33 - v17;
  sub_100522E9C(a1, (uint64_t)v48, &qword_101672BF0);
  if (v50)
  {
    uint64_t v44 = AssociatedTypeWitness;
    int v19 = swift_dynamicCast();
    uint64_t v20 = *(void (**)(char *, void, uint64_t, int *))(v14 + 56);
    v20(v13, v19 ^ 1u, 1, TupleTypeMetadata);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v13, 1, TupleTypeMetadata) != 1)
    {
      uint64_t v21 = TupleTypeMetadata[12];
      uint64_t v22 = &v18[v21];
      uint64_t v38 = &v18[v21];
      uint64_t v39 = v20;
      uint64_t v23 = TupleTypeMetadata[16];
      uint64_t v40 = &v18[v23];
      uint64_t v24 = TupleTypeMetadata[20];
      uint64_t v41 = &v18[v24];
      uint64_t v25 = TupleTypeMetadata[24];
      uint64_t v42 = &v18[v25];
      uint64_t v26 = TupleTypeMetadata[28];
      uint64_t v43 = &v18[v26];
      uint64_t v34 = &v13[v21];
      uint64_t v27 = (uint64_t)&v13[v23];
      uint64_t v35 = &v13[v24];
      uint64_t v36 = &v13[v25];
      uint64_t v37 = &v13[v26];
      sub_10051B3EC((uint64_t)v13, (uint64_t)v18, &qword_101679B78);
      uint64_t v28 = type metadata accessor for Optional();
      uint64_t v29 = *(void *)(v28 - 8);
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v22, v34, v28);
      sub_10051B3EC(v27, (uint64_t)v40, &qword_101679B80);
      sub_10051B3EC((uint64_t)v35, (uint64_t)v41, &qword_101679B80);
      sub_10051B3EC((uint64_t)v36, (uint64_t)v42, &qword_101679B88);
      sub_10051B3EC((uint64_t)v37, (uint64_t)v43, &qword_101679B90);
      uint64_t v30 = &v9[TupleTypeMetadata[12]];
      uint64_t v31 = (uint64_t)&v9[TupleTypeMetadata[16]];
      uint64_t v35 = &v9[TupleTypeMetadata[20]];
      uint64_t v36 = &v9[TupleTypeMetadata[24]];
      uint64_t v37 = &v9[TupleTypeMetadata[28]];
      sub_100522E9C((uint64_t)v18, (uint64_t)v9, &qword_101679B78);
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v30, v38, v28);
      sub_100522E9C((uint64_t)v40, v31, &qword_101679B80);
      sub_100522E9C((uint64_t)v41, (uint64_t)v35, &qword_101679B80);
      sub_100522E9C((uint64_t)v42, (uint64_t)v36, &qword_101679B88);
      sub_100522E9C((uint64_t)v43, (uint64_t)v37, &qword_101679B90);
      v39(v9, 0, 1, TupleTypeMetadata);
      swift_beginAccess();
      type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
      swift_getWitnessTable();
      CRStruct_6.apply(_:)();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v9, v47);
      swift_endAccess();
      return (*(uint64_t (**)(char *, int *))(v14 + 8))(v18, TupleTypeMetadata);
    }
  }
  else
  {
    sub_100522F00((uint64_t)v48, &qword_101672BF0);
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v14 + 56))(v13, 1, 1, TupleTypeMetadata);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v13, v47);
}

unint64_t sub_100687F8C()
{
  return sub_100A394EC((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_100687F98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 632);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  uint64_t v4 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_10068808C()
{
  uint64_t v0 = type metadata accessor for CRCodableVersion();
  sub_100568B28(v0, qword_10171A2D8);
  uint64_t v1 = sub_100556B74(v0, (uint64_t)qword_10171A2D8);
  uint64_t v2 = enum case for CRCodableVersion.version3(_:);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

BOOL sub_100688114(char *a1, char *a2)
{
  return qword_101187828[*a1] == qword_101187828[*a2];
}

Swift::Int sub_100688138()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_101187828[v1]);
  return Hasher._finalize()();
}

void sub_100688188()
{
  Hasher._combine(_:)(qword_101187828[*v0]);
}

Swift::Int sub_1006881C0()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_101187828[v1]);
  return Hasher._finalize()();
}

void *sub_10068820C@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v2 = *result + 1;
  BOOL v3 = v2 >= 3;
  unsigned int v4 = 0x10002u >> (8 * v2);
  if (v3) {
    LOBYTE(v4) = 3;
  }
  *a2 = v4;
  return result;
}

void sub_100688238(void *a1@<X8>)
{
  *a1 = qword_101187828[*v1];
}

unint64_t sub_100688250()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 == 1) {
    unint64_t v1 = 0x797274656D6F6567;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000013;
  }
}

uint64_t sub_1006882B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10068EFEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1006882D8()
{
  return qword_101187828[*v0];
}

uint64_t sub_1006882F0@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  unsigned int v2 = 0x10002u >> (8 * (result + 1));
  if ((unint64_t)(result + 1) >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

void sub_100688318(void *a1@<X8>)
{
  *a1 = &off_101503410;
}

uint64_t sub_100688328(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10068E7F0();
  unint64_t v5 = sub_10068E848();

  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100688380(uint64_t a1)
{
  unint64_t v2 = sub_10068E848();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006883BC(uint64_t a1)
{
  unint64_t v2 = sub_10068E848();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006883F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v1 = type metadata accessor for CRLBoardItemParentAffinity();
  uint64_t v2 = v1 - 8;
  __chkstk_darwin(v1, v3);
  unint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v35 = v15 + 56;
  v34(v13, 1, 1, v14);
  id v16 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) init];
  [v16 position];
  float v18 = v17;
  float v20 = v19;
  [v16 size];
  float v22 = v21;
  float v24 = v23;
  [v16 angle];
  float v26 = v25;
  unsigned __int8 v27 = [v16 widthValid];
  unsigned __int8 v28 = [v16 heightValid];
  unsigned __int8 v29 = [v16 horizontalFlip];
  unsigned __int8 v30 = [v16 verticalFlip];
  sub_100522E9C((uint64_t)v13, (uint64_t)v9, (uint64_t *)&unk_101674520);
  v34(v5, 1, 1, v14);
  *(void *)&v5[*(int *)(v2 + 32)] = _swiftEmptyDictionarySingleton;
  sub_10068EA54((uint64_t)v9, (uint64_t)v5);
  uint64_t v31 = &v5[*(int *)(v2 + 28)];
  *(float *)uint64_t v31 = v18;
  *((float *)v31 + 1) = v20;
  *((float *)v31 + 2) = v22;
  *((float *)v31 + 3) = v24;
  *((float *)v31 + 4) = v26;
  v31[20] = v27;
  v31[21] = v28;
  v31[22] = v29;
  v31[23] = v30;
  *((void *)v31 + 3) = _swiftEmptyDictionarySingleton;
  sub_10068EABC((uint64_t)v5, v36);

  return sub_100522F00((uint64_t)v13, (uint64_t *)&unk_101674520);
}

uint64_t sub_100688698(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_101679B68);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_10068E848();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v21) = 0;
  type metadata accessor for UUID();
  sub_10068F2A4(&qword_101671E70, (void (*)(uint64_t))&type metadata accessor for UUID);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for CRLBoardItemParentAffinity();
    uint64_t v11 = (long long *)(v3 + *(int *)(v10 + 20));
    int v12 = *((_DWORD *)v11 + 4);
    char v13 = *((unsigned char *)v11 + 20);
    char v14 = *((unsigned char *)v11 + 21);
    char v15 = *((unsigned char *)v11 + 22);
    char v16 = *((unsigned char *)v11 + 23);
    uint64_t v17 = *((void *)v11 + 3);
    long long v21 = *v11;
    int v22 = v12;
    char v23 = v13;
    char v24 = v14;
    char v25 = v15;
    char v26 = v16;
    uint64_t v27 = v17;
    char v20 = 1;
    sub_10068F250();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    *(void *)&long long v21 = *(void *)(v3 + *(int *)(v10 + 24));
    char v20 = 2;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1006888EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101679B58);
  uint64_t v31 = *(void *)(v8 - 8);
  uint64_t v32 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLBoardItemParentAffinity();
  __chkstk_darwin(v12, v13);
  char v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  uint64_t v33 = v12;
  uint64_t v34 = *(int *)(v12 + 24);
  *(void *)&v15[v34] = _swiftEmptyDictionarySingleton;
  sub_10050F848(a1, a1[3]);
  sub_10068E848();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    sub_100522F00((uint64_t)v15, (uint64_t *)&unk_101674520);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = v31;
    LOBYTE(v35) = 0;
    sub_10068F2A4(&qword_101671E58, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v18 = v32;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10068EA54((uint64_t)v7, (uint64_t)v15);
    char v42 = 1;
    sub_10068F13C();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    int v19 = v36;
    char v20 = v37;
    char v21 = v38;
    char v22 = v39;
    char v23 = v40;
    uint64_t v24 = v41;
    char v25 = &v15[*(int *)(v33 + 20)];
    *(_OWORD *)char v25 = v35;
    *((_DWORD *)v25 + 4) = v19;
    v25[20] = v20;
    v25[21] = v21;
    v25[22] = v22;
    v25[23] = v23;
    *((void *)v25 + 3) = v24;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    char v42 = 2;
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v18);
    uint64_t v27 = v34;
    uint64_t v26 = v35;
    swift_bridgeObjectRelease();
    *(void *)&v15[v27] = v26;
    sub_10068F190((uint64_t)v15, v30);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    return sub_10068F1F4((uint64_t)v15);
  }
}

uint64_t sub_100688CF0@<X0>(uint64_t a1@<X8>)
{
  return sub_100522E9C(v1, a1, (uint64_t *)&unk_101674520);
}

uint64_t sub_100688D18(uint64_t a1)
{
  return sub_10068EA54(a1, v1);
}

uint64_t sub_100688D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10068EF90(v2 + *(int *)(a1 + 20), a2);
}

uint64_t sub_100688D30(uint64_t a1, uint64_t a2)
{
  return sub_10068EF34(a1, v2 + *(int *)(a2 + 20));
}

uint64_t sub_100688D3C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100688D48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 24);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_100688D80())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_100688DA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1006888EC(a1, a2);
}

uint64_t sub_100688DC0(void *a1)
{
  return sub_100688698(a1);
}

uint64_t sub_100688DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10068F2A4(&qword_101679B48, (void (*)(uint64_t))type metadata accessor for CRLBoardItemParentAffinity);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100688E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10068F2A4(&qword_101679B48, (void (*)(uint64_t))type metadata accessor for CRLBoardItemParentAffinity);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100688EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10068F2A4(&qword_101679AE8, (void (*)(uint64_t))type metadata accessor for CRLBoardItemParentAffinity);
  uint64_t v7 = sub_10068F2A4(&qword_101679B50, (void (*)(uint64_t))type metadata accessor for CRLBoardItemParentAffinity);

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100688FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10068F2A4(&qword_101679B48, (void (*)(uint64_t))type metadata accessor for CRLBoardItemParentAffinity);

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100689028()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_1006890A8()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100689120(uint64_t a1)
{
  uint64_t v2 = sub_10068F2A4(&qword_101679B40, (void (*)(uint64_t))type metadata accessor for CRLBoardItemParentAffinity);

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

void sub_10068919C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v33 = (uint64_t)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)v30 - v12;
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v34 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v15);
  __chkstk_darwin(v16, v17);
  int v19 = (char *)v30 - v18;
  __n128 v23 = __chkstk_darwin(v20, v21);
  char v25 = (char *)v30 - v24;
  uint64_t v35 = a1;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_shouldResetObjectUUIDs) == 1)
  {
    uint64_t v31 = v22;
    uint64_t v32 = v3;
    (*(void (**)(uint64_t, uint64_t, __n128))(a3 + 8))(a2, a3, v23);
    sub_100A68D30((uint64_t)v19, (uint64_t)v25);
    uint64_t v26 = v34;
    v30[0] = *(void *)(v34 + 8);
    v30[1] = v34 + 8;
    ((void (*)(char *, uint64_t))v30[0])(v19, v14);
    (*(void (**)(char *, uint64_t, uint64_t))(a3 + 16))(v25, a2, a3);
    (*(void (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v13, 1, v14) == 1)
    {
      sub_100522F00((uint64_t)v13, (uint64_t *)&unk_101674520);
    }
    else
    {
      uint64_t v27 = v34;
      uint64_t v28 = v31;
      (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v31, v13, v14);
      uint64_t v29 = v33;
      sub_100A68D30(v28, v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v29, 0, 1, v14);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 40))(v29, a2, a3);
      ((void (*)(uint64_t, uint64_t))v30[0])(v28, v14);
    }
  }
}

uint64_t sub_1006894B0()
{
  sub_1005057FC(&qword_101674550);

  return CRRegister.wrappedValue.getter();
}

uint64_t sub_1006894F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v5 = __chkstk_darwin(v2, v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v5);
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_1006895EC()
{
  return CRRegister.wrappedValue.getter();
}

uint64_t sub_100689634(uint64_t a1)
{
  sub_10051B3EC(a1, (uint64_t)&v2, (uint64_t *)&unk_101683E20);
  sub_1005057FC((uint64_t *)&unk_101683E20);
  sub_10068E368();
  return CRRegister.init(wrappedValue:)();
}

uint64_t sub_100689694@<X0>(uint64_t a1@<X8>)
{
  sub_1005057FC(qword_1016799F8);
  CRRegister.wrappedValue.getter();
  sub_10051B3EC((uint64_t)&v3, (uint64_t)v4, (uint64_t *)&unk_101683E20);
  return sub_10051B3EC((uint64_t)v4, a1, (uint64_t *)&unk_101683E20);
}

uint64_t sub_100689708(uint64_t a1)
{
  sub_10051B3EC(a1, (uint64_t)&v2, (uint64_t *)&unk_101683E20);
  sub_1005057FC(qword_1016799F8);
  return CRRegister.wrappedValue.setter();
}

uint64_t sub_100689760(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006895EC();
  (*(void (**)(uint64_t))(*(void *)(a1 + 24) + 32))(v3);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10068984C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100522E9C(a1, (uint64_t)v7, (uint64_t *)&unk_101674520);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  type metadata accessor for CRRegister();
  uint64_t v10 = (void (*)(unsigned char *, void))CRRegister.wrappedValue.modify();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 40))(v7, v9, v8);
  v10(v12, 0);
  return sub_100522F00(a1, (uint64_t *)&unk_101674520);
}

double sub_100689968@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006895EC();
  (*(void (**)(_OWORD *__return_ptr, uint64_t))(*(void *)(a1 + 24) + 56))(v11, v5);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  double result = *(double *)v11;
  long long v10 = v11[1];
  *a3 = v11[0];
  a3[1] = v10;
  return result;
}

uint64_t sub_100689A60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  type metadata accessor for CRRegister();
  uint64_t v5 = (uint64_t (*)(uint64_t *, void))CRRegister.wrappedValue.modify();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 64))(a1, v3, v4);
  return v5(&v7, 0);
}

uint64_t sub_100689B08@<X0>(void *a1@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = swift_getKeyPath();
  uint64_t v4 = swift_getKeyPath();
  uint64_t v5 = swift_getKeyPath();
  uint64_t v6 = swift_getKeyPath();
  uint64_t result = swift_getKeyPath();
  *a1 = 97;
  a1[1] = 0xE100000000000000;
  a1[2] = KeyPath;
  a1[3] = 98;
  a1[4] = 0xE100000000000000;
  a1[5] = v3;
  a1[6] = 99;
  a1[7] = 0xE100000000000000;
  a1[8] = v4;
  a1[9] = 100;
  a1[10] = 0xE100000000000000;
  a1[11] = v5;
  a1[12] = 101;
  a1[13] = 0xE100000000000000;
  a1[14] = v6;
  a1[15] = 102;
  a1[16] = 0xE100000000000000;
  a1[17] = result;
  return result;
}

uint64_t sub_100689C1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __chkstk_darwin(a1, a2);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for UUID();
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = &v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  UUID.init()();
  sub_10051A41C(v14);
  sub_10051B3EC((uint64_t)v14, (uint64_t)v13, (uint64_t *)&unk_101683E20);
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  return sub_100689D60((uint64_t)v11, (uint64_t)v7, 0, 0, 0, 0xE000000000000000, (uint64_t)v13, a1, a3, a2);
}

uint64_t sub_100689D60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v37 = a7;
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  int v32 = a3;
  int v33 = a4;
  uint64_t v30 = a2;
  uint64_t v40 = a1;
  uint64_t v29 = a10;
  uint64_t v12 = sub_1005057FC(qword_1016799F8);
  uint64_t v38 = *(void *)(v12 - 8);
  uint64_t v39 = v12;
  __chkstk_darwin(v12, v13);
  int v36 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a8 - 8);
  __chkstk_darwin(v16, v17);
  int v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for UUID();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v22);
  uint64_t v24 = (char *)&v29 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
  uint64_t v31 = a9 + *(int *)(v25 + 52);
  sub_10051A41C(v43);
  sub_10051B3EC((uint64_t)v43, (uint64_t)v42, (uint64_t *)&unk_101683E20);
  sub_100689634((uint64_t)v42);
  *(void *)(a9 + *(int *)(v25 + 56)) = _swiftEmptyDictionarySingleton;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v24, v40, v20);
  CRRegister.init(_:)();
  uint64_t v26 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v19, v30, a8);
  CRRegister.init(_:)();
  LOBYTE(v41[0]) = v32;
  CRRegister.init(_:)();
  LOBYTE(v41[0]) = v33;
  CRRegister.init(_:)();
  v41[0] = v34;
  v41[1] = v35;
  CRRegister.init(_:)();
  sub_10051B3EC(v37, (uint64_t)v41, (uint64_t *)&unk_101683E20);
  sub_1005057FC((uint64_t *)&unk_101683E20);
  sub_10068E368();
  uint64_t v27 = v36;
  CRRegister.init(_:)();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v26, a8);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v40, v20);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v38 + 40))(v31, v27, v39);
}

uint64_t sub_10068A10C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  uint64_t v75 = a1;
  uint64_t v76 = v4;
  __chkstk_darwin(a1, a2);
  uint64_t v74 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v73 = (char *)&v67 - v8;
  __chkstk_darwin(v9, v10);
  uint64_t v70 = (char *)&v67 - v11;
  __chkstk_darwin(v12, v13);
  uint64_t v71 = (char *)&v67 - v14;
  __chkstk_darwin(v15, v16);
  uint64_t v68 = (char *)&v67 - v17;
  __chkstk_darwin(v18, v19);
  uint64_t v69 = (char *)&v67 - v20;
  __chkstk_darwin(v21, v22);
  uint64_t v67 = (char *)&v67 - v23;
  __chkstk_darwin(v24, v25);
  uint64_t v27 = (char *)&v67 - v26;
  uint64_t v29 = *(void *)(v28 + 16);
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v31, v28);
  int v33 = (char *)&v67 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34, v35);
  uint64_t v37 = (char *)&v67 - v36;
  uint64_t v38 = v2;
  sub_1006895EC();
  sub_1006895EC();
  char v39 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v30 + 8);
  v40(v33, v29);
  v40(v37, v29);
  uint64_t v41 = v76;
  uint64_t v43 = (char *)(v76 + 16);
  char v42 = *(void (**)(char *))(v76 + 16);
  uint64_t v44 = v38;
  uint64_t v45 = v67;
  uint64_t v72 = v44;
  v42(v27);
  ((void (*)(char *, uint64_t, uint64_t))v42)(v45, v75, a2);
  if (v39)
  {
    sub_1005057FC((uint64_t *)&unk_101689310);
    CRRegister.wrappedValue.getter();
    char v46 = v96[0];
    sub_1005057FC((uint64_t *)&unk_101689310);
    CRRegister.wrappedValue.getter();
    char v47 = v46 ^ LOBYTE(v96[0]) ^ 1;
  }
  else
  {
    char v47 = 0;
  }
  uint64_t v48 = *(void (**)(char *, uint64_t))(v41 + 8);
  v48(v45, a2);
  uint64_t v76 = v41 + 8;
  v48(v27, a2);
  uint64_t v49 = v69;
  uint64_t v50 = v72;
  ((void (*)(char *, uint64_t, uint64_t))v42)(v69, v72, a2);
  uint64_t v51 = v68;
  uint64_t v52 = v75;
  ((void (*)(char *, uint64_t, uint64_t))v42)(v68, v75, a2);
  if ((v47 & 1) == 0)
  {
    v48(v51, a2);
    v48(v49, a2);
    uint64_t v54 = v48;
    uint64_t v55 = v71;
    ((void (*)(char *, uint64_t, uint64_t))v42)(v71, v50, a2);
    uint64_t v56 = v70;
    ((void (*)(char *, uint64_t, uint64_t))v42)(v70, v52, a2);
    uint64_t v59 = v73;
    uint64_t v58 = v74;
LABEL_10:
    v54(v56, a2);
    v54(v55, a2);
    ((void (*)(char *, uint64_t, uint64_t))v42)(v59, v50, a2);
    ((void (*)(char *, uint64_t, uint64_t))v42)(v58, v75, a2);
    uint64_t v61 = v59;
LABEL_11:
    v54(v58, a2);
    v54(v61, a2);
    goto LABEL_12;
  }
  sub_1005057FC((uint64_t *)&unk_101689310);
  CRRegister.wrappedValue.getter();
  LODWORD(v67) = LOBYTE(v96[0]);
  sub_1005057FC((uint64_t *)&unk_101689310);
  CRRegister.wrappedValue.getter();
  int v53 = LOBYTE(v96[0]);
  v48(v51, a2);
  v48(v49, a2);
  uint64_t v54 = v48;
  uint64_t v55 = v71;
  ((void (*)(char *, uint64_t, uint64_t))v42)(v71, v50, a2);
  uint64_t v56 = v70;
  ((void (*)(char *, uint64_t, uint64_t))v42)(v70, v75, a2);
  BOOL v57 = v67 == v53;
  uint64_t v59 = v73;
  uint64_t v58 = v74;
  if (!v57) {
    goto LABEL_10;
  }
  uint64_t v67 = v43;
  uint64_t v68 = (char *)v42;
  uint64_t v69 = (char *)v54;
  sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  long long v60 = v96[0];
  sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  if (v60 == v96[0])
  {
    swift_bridgeObjectRelease_n();
    uint64_t v54 = (void (*)(char *, uint64_t))v69;
    ((void (*)(char *, uint64_t))v69)(v56, a2);
    v54(v71, a2);
    uint64_t v61 = v73;
    uint64_t v62 = (void (*)(char *, uint64_t, uint64_t))v68;
    ((void (*)(char *, uint64_t, uint64_t))v68)(v73, v72, a2);
    uint64_t v58 = v74;
    v62(v74, v75, a2);
  }
  else
  {
    char v65 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v54 = (void (*)(char *, uint64_t))v69;
    ((void (*)(char *, uint64_t))v69)(v56, a2);
    v54(v71, a2);
    uint64_t v61 = v73;
    uint64_t v66 = (void (*)(char *, uint64_t, uint64_t))v68;
    ((void (*)(char *, uint64_t, uint64_t))v68)(v73, v72, a2);
    uint64_t v58 = v74;
    v66(v74, v75, a2);
    if ((v65 & 1) == 0) {
      goto LABEL_11;
    }
  }
  sub_100689694((uint64_t)v100);
  sub_10051B3EC((uint64_t)v100, (uint64_t)v98, (uint64_t *)&unk_101683E20);
  sub_100689694((uint64_t)v101);
  sub_10051B3EC((uint64_t)v101, (uint64_t)v99, (uint64_t *)&unk_101683E20);
  sub_10051B3EC((uint64_t)v100, (uint64_t)v96, (uint64_t *)&unk_101683E20);
  sub_10051B3EC((uint64_t)v101, (uint64_t)v97, (uint64_t *)&unk_101683E20);
  sub_10051B3EC((uint64_t)v100, (uint64_t)v103, (uint64_t *)&unk_101683E20);
  if (sub_10068F2EC((uint64_t)v103) == 1)
  {
    v54(v58, a2);
    v54(v61, a2);
    sub_10051B3EC((uint64_t)v97, (uint64_t)v104, (uint64_t *)&unk_101683E20);
    sub_10051B3EC((uint64_t)v104, (uint64_t)&v80, (uint64_t *)&unk_101683E20);
    if (sub_10068F2EC((uint64_t)&v80) == 1)
    {
      sub_10051B3EC((uint64_t)v96, (uint64_t)v102, (uint64_t *)&unk_101683E20);
      sub_10068F3E8(v102);
      char v63 = 1;
      return v63 & 1;
    }
  }
  else
  {
    sub_10051B3EC((uint64_t)v101, (uint64_t)v102, (uint64_t *)&unk_101683E20);
    if (sub_10068F2EC((uint64_t)v102) != 1)
    {
      sub_10051B3EC((uint64_t)v98, (uint64_t)v77, (uint64_t *)&unk_101683E20);
      v104[4] = v77[4];
      v104[5] = v77[5];
      v104[6] = v77[6];
      v104[7] = v77[7];
      v104[0] = v77[0];
      v104[1] = v77[1];
      v104[2] = v77[2];
      v104[3] = v77[3];
      sub_10051B3EC((uint64_t)v99, (uint64_t)v78, (uint64_t *)&unk_101683E20);
      long long v84 = v78[4];
      long long v85 = v78[5];
      long long v86 = v78[6];
      long long v87 = v78[7];
      long long v80 = v78[0];
      long long v81 = v78[1];
      long long v82 = v78[2];
      long long v83 = v78[3];
      sub_10068F444((uint64_t)v77);
      char v63 = sub_10093C18C(v104, &v80);
      sub_10068F3E8(v101);
      sub_10068F3E8(v100);
      v54(v74, a2);
      v54(v61, a2);
      sub_10051B3EC((uint64_t)v96, (uint64_t)v79, (uint64_t *)&unk_101683E20);
      sub_10068F3E8(v79);
      return v63 & 1;
    }
    sub_10051B3EC((uint64_t)v98, (uint64_t)&v80, (uint64_t *)&unk_101683E20);
    sub_10068F444((uint64_t)&v80);
    v54(v74, a2);
    v54(v61, a2);
    sub_10068F3E8(v100);
  }
  long long v92 = v97[4];
  long long v93 = v97[5];
  long long v94 = v97[6];
  long long v95 = v97[7];
  long long v88 = v97[0];
  long long v89 = v97[1];
  long long v90 = v97[2];
  long long v91 = v97[3];
  long long v84 = v96[4];
  long long v85 = v96[5];
  long long v86 = v96[6];
  long long v87 = v96[7];
  long long v80 = v96[0];
  long long v81 = v96[1];
  long long v82 = v96[2];
  long long v83 = v96[3];
  sub_10068F304((uint64_t)&v80);
LABEL_12:
  char v63 = 0;
  return v63 & 1;
}

uint64_t sub_10068AAA0(uint64_t a1, uint64_t a2)
{
  return sub_1006825BC(a1, a2);
}

__n128 sub_10068AABC@<Q0>(uint64_t a1@<X8>)
{
  sub_100689B08(&v13);
  uint64_t v2 = v15;
  uint64_t v3 = v17;
  uint64_t v4 = v19;
  uint64_t v5 = v21;
  uint64_t v6 = v23;
  __n128 result = v14;
  long long v8 = v16;
  long long v9 = v18;
  long long v10 = v20;
  long long v11 = v22;
  long long v12 = v24;
  *(void *)a1 = v13;
  *(__n128 *)(a1 + 8) = result;
  *(void *)(a1 + 24) = v2;
  *(_OWORD *)(a1 + 32) = v8;
  *(void *)(a1 + 48) = v3;
  *(_OWORD *)(a1 + 56) = v9;
  *(void *)(a1 + 72) = v4;
  *(_OWORD *)(a1 + 80) = v10;
  *(void *)(a1 + 96) = v5;
  *(_OWORD *)(a1 + 104) = v11;
  *(void *)(a1 + 120) = v6;
  *(_OWORD *)(a1 + 128) = v12;
  return result;
}

uint64_t sub_10068AB54(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return static CRStruct_6.fieldKeys.getter(a1, WitnessTable);
}

uint64_t sub_10068ABA8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10068ABB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 56);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_10068ABEC())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_10068AC10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100689C1C(*(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_10068AC1C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CRType.context.getter(a1, WitnessTable);
}

uint64_t sub_10068AC70()
{
  swift_getWitnessTable();

  return CRStruct_6.actionUndoingDifference(from:)();
}

uint64_t sub_10068ACD8()
{
  swift_getWitnessTable();

  return CRStruct_6.apply(_:)();
}

uint64_t sub_10068AD38()
{
  swift_getWitnessTable();

  return CRStruct_6.hasDelta(from:)();
}

uint64_t sub_10068AD98()
{
  swift_getWitnessTable();

  return CRStruct_6.delta(_:from:)();
}

uint64_t sub_10068AE14(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CRStruct_6.canMerge(delta:)(a1, a2, WitnessTable);
}

uint64_t sub_10068AE74()
{
  swift_getWitnessTable();

  return CRStruct_6.merge(delta:)();
}

uint64_t sub_10068AED4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CRStruct_6.copy(renamingReferences:)(a1, a2, WitnessTable);
}

uint64_t sub_10068AF3C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CRStruct_6.copy(renamingReferences:)(a1, a2, WitnessTable);
}

uint64_t sub_10068AFA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CRStruct_6.observableDifference(from:with:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_10068B020(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CRStruct_6.visitReferences(_:)(a1, a2, WitnessTable);
}

BOOL sub_10068B080()
{
  swift_getWitnessTable();

  return CRStruct_6.needToFinalizeTimestamps()();
}

uint64_t sub_10068B0D4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CRStruct_6.finalizeTimestamps(_:)(a1, a2, WitnessTable);
}

uint64_t sub_10068B134()
{
  swift_getWitnessTable();

  return CRStruct_6.merge(_:)();
}

uint64_t sub_10068B194()
{
  return CRDT.serializedData(_:version:)();
}

uint64_t sub_10068B1FC()
{
  return CRDT.init(serializedData:)();
}

uint64_t sub_10068B274()
{
  return CRStruct_6.init(from:)();
}

uint64_t sub_10068B2D8()
{
  return CRStruct_6.encode(to:)();
}

uint64_t sub_10068B334(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CRStruct_6.minEncodingVersion.getter(a1, WitnessTable);
}

void *sub_10068B398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v6 = a4;
  uint64_t v7 = *v4;
  uint64_t v8 = *v4;
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = a3;
  uint64_t v9 = v8;
  if (((*(unsigned int (**)(void))(v7 + 128))() & ((a4 & 2) == 0)) != 0) {
    v6 |= 2uLL;
  }
  if (((*(unsigned int (**)(void))(v9 + 136))() & ((v6 & 4) == 0)) != 0) {
    uint64_t v10 = v6 | 4;
  }
  else {
    uint64_t v10 = v6;
  }
  v5[2] = v10;
  return v5;
}

unint64_t sub_10068B460()
{
  id v1 = [self standardUserDefaults];
  unsigned int v2 = [v1 BOOLForKey:@"CRLAllowInteractionWithUnsupportedBoardAndBoardItemsUserDefault"];

  unint64_t v3 = v0[3];
  unint64_t result = sub_1002094A4();
  if (result < v3 && v2 == 0) {
    return result;
  }
  v0[3] = (*(uint64_t (**)(void))(*v0 + 208))();
  char v6 = (*(uint64_t (**)(void))(*v0 + 232))();
  uint64_t v7 = v0[2];
  if (v6)
  {
    if ((v7 & 1) == 0)
    {
      unint64_t v8 = v7 | 1;
LABEL_10:
      v0[2] = v8;
    }
  }
  else if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    goto LABEL_10;
  }
  unint64_t v9 = v0[4];
  if (sub_1002094A4() >= v9) {
    v0[4] = (*(uint64_t (**)(void))(*v0 + 216))();
  }
  unint64_t v10 = v0[5];
  unint64_t result = sub_1002094A4();
  if (result >= v10)
  {
    unint64_t result = (*(uint64_t (**)(void))(*v0 + 224))();
    v0[5] = result;
  }
  return result;
}

void sub_10068B5B8()
{
}

void sub_10068B61C()
{
}

void sub_10068B680()
{
}

void sub_10068B6E4()
{
}

void sub_10068B748()
{
}

void sub_10068B7AC()
{
}

void sub_10068B810()
{
}

void sub_10068B874()
{
}

void sub_10068B8D8()
{
}

void sub_10068B93C()
{
}

void sub_10068B9A0()
{
}

void sub_10068BA04()
{
}

void sub_10068BA68()
{
}

void sub_10068BACC()
{
}

void sub_10068BB30()
{
}

void sub_10068BB94()
{
}

void sub_10068BBF8()
{
}

void sub_10068BC5C()
{
}

void sub_10068BCC0()
{
}

void sub_10068BD24()
{
}

void sub_10068BD88()
{
}

void sub_10068BDEC()
{
}

void sub_10068BE50()
{
}

void sub_10068BEB4()
{
}

void sub_10068BF18()
{
}

void sub_10068BF7C()
{
}

void sub_10068BFE0()
{
}

void sub_10068C044()
{
}

void sub_10068C0A8()
{
}

void sub_10068C10C()
{
}

uint64_t sub_10068C170()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLBoardItemData()
{
  return self;
}

uint64_t sub_10068C1A4()
{
  swift_getAssociatedTypeWitness();
  uint64_t result = type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10068C25C(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 448))(*a2) & 1;
}

uint64_t sub_10068C2B0()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t sub_10068C2FC()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_10068C304()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t sub_10068C330()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 600))();
}

uint64_t sub_10068C370()
{
  return *(void *)(*(void *)v0 + 24);
}

uint64_t sub_10068C380()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_10068C394()
{
  return 0x2000400000000;
}

uint64_t sub_10068C3A4()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 632);
  swift_getAssociatedTypeWitness();
  uint64_t v2 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_10068C480()
{
  sub_10068293C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLBoardItemCommonAbstractData()
{
  return sub_100568E70();
}

uint64_t type metadata accessor for CRLBoardItemCommonAbstractCRDTData()
{
  return sub_100568E70();
}

uint64_t *sub_10068C508(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_1005057FC((uint64_t *)&unk_101674520);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v11;
    __n128 v14 = (char *)a2 + v11;
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *((_DWORD *)v13 + 4) = *((_DWORD *)v14 + 4);
    *((_DWORD *)v13 + 5) = *((_DWORD *)v14 + 5);
    *((void *)v13 + 3) = *((void *)v14 + 3);
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10068C6B4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

char *sub_10068C790(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101674520);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_DWORD *)v11 + 4) = *((_DWORD *)v12 + 4);
  *((_DWORD *)v11 + 5) = *((_DWORD *)v12 + 5);
  *((void *)v11 + 3) = *((void *)v12 + 3);
  *(void *)&a1[v10] = *(void *)&a2[v10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_10068C8EC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101674520);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  __n128 v14 = &a2[v12];
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  *((_DWORD *)v13 + 1) = *((_DWORD *)v14 + 1);
  *((_DWORD *)v13 + 2) = *((_DWORD *)v14 + 2);
  *((_DWORD *)v13 + 3) = *((_DWORD *)v14 + 3);
  *((_DWORD *)v13 + 4) = *((_DWORD *)v14 + 4);
  v13[20] = v14[20];
  v13[21] = v14[21];
  v13[22] = v14[22];
  v13[23] = v14[23];
  *((void *)v13 + 3) = *((void *)v14 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_10068CAF4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101674520);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  long long v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *(void *)&a1[v10] = *(void *)&a2[v10];
  return a1;
}

char *sub_10068CC2C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101674520);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  long long v13 = &a1[v12];
  __n128 v14 = &a2[v12];
  *(_OWORD *)long long v13 = *(_OWORD *)v14;
  *((_DWORD *)v13 + 4) = *((_DWORD *)v14 + 4);
  v13[20] = v14[20];
  v13[21] = v14[21];
  v13[22] = v14[22];
  v13[23] = v14[23];
  *((void *)v13 + 3) = *((void *)v14 + 3);
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10068CE0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10068CE20);
}

uint64_t sub_10068CE20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10068CEE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10068CEFC);
}

uint64_t sub_10068CEFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CRLBoardItemParentAffinity()
{
  uint64_t result = qword_1016799B8;
  if (!qword_1016799B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10068D00C()
{
  sub_100510764();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10068D0B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 48);
}

void sub_10068D0B8()
{
  sub_10068E2A0();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CRRegister();
    if (v1 <= 0x3F)
    {
      sub_1005DC400(319, (unint64_t *)&qword_101675390);
      if (v2 <= 0x3F)
      {
        sub_1005DC400(319, &qword_101679A88);
        if (v3 <= 0x3F)
        {
          sub_10068E300();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

char *sub_10068D280(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005057FC(&qword_101674550);
    (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[9];
    uint64_t v9 = &a1[v8];
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for CRRegister();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[10];
    long long v13 = &a1[v12];
    __n128 v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1005057FC((uint64_t *)&unk_101689310);
    long long v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    v16(v13, v14, v15);
    v16(&a1[a3[11]], (char *)a2 + a3[11], v15);
    uint64_t v17 = a3[12];
    long long v18 = &a1[v17];
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = sub_1005057FC(&qword_101674450);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = a3[13];
    long long v22 = &a1[v21];
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_1005057FC(qword_1016799F8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    *(void *)&a1[a3[14]] = *(uint64_t *)((char *)a2 + a3[14]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10068D4C0(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101674550);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[9];
  uint64_t v6 = type metadata accessor for CRRegister();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[10];
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101689310);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(a1 + a2[11], v8);
  uint64_t v10 = a1 + a2[12];
  uint64_t v11 = sub_1005057FC(&qword_101674450);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = a1 + a2[13];
  uint64_t v13 = sub_1005057FC(qword_1016799F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10068D680(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101674550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for CRRegister();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[10];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101689310);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  v15(v12, v13, v14);
  v15(a1 + a3[11], a2 + a3[11], v14);
  uint64_t v16 = a3[12];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1005057FC(&qword_101674450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = a3[13];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_1005057FC(qword_1016799F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10068D870(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101674550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for CRRegister();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[10];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101689310);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24);
  v15(v12, v13, v14);
  v15(a1 + a3[11], a2 + a3[11], v14);
  uint64_t v16 = a3[12];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1005057FC(&qword_101674450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  uint64_t v20 = a3[13];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_1005057FC(qword_1016799F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10068DA6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101674550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for CRRegister();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[10];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101689310);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  v15(a1 + a3[11], a2 + a3[11], v14);
  uint64_t v16 = a3[12];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1005057FC(&qword_101674450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  uint64_t v20 = a3[13];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_1005057FC(qword_1016799F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_10068DC58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101674550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for CRRegister();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[10];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101689310);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(a1 + a3[11], a2 + a3[11], v14);
  uint64_t v16 = a3[12];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1005057FC(&qword_101674450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = a3[13];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_1005057FC(qword_1016799F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10068DE4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10068DE60);
}

uint64_t sub_10068DE60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101674550);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for CRRegister();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[9];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101689310);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_11;
  }
  uint64_t v15 = sub_1005057FC(&qword_101674450);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_11;
  }
  uint64_t v16 = sub_1005057FC(qword_1016799F8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_11;
  }
  unint64_t v18 = *(void *)(a1 + a3[14]);
  if (v18 >= 0xFFFFFFFF) {
    LODWORD(v18) = -1;
  }
  return (v18 + 1);
}

uint64_t sub_10068E078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10068E08C);
}

uint64_t sub_10068E08C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1005057FC(&qword_101674550);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = type metadata accessor for CRRegister();
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[9];
    }
    else
    {
      uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101689310);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[10];
      }
      else
      {
        uint64_t v17 = sub_1005057FC(&qword_101674450);
        if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v14 = *(void *)(v17 - 8);
          uint64_t v15 = a4[12];
        }
        else
        {
          uint64_t result = sub_1005057FC(qword_1016799F8);
          if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
          {
            *(void *)(a1 + a4[14]) = (a2 - 1);
            return result;
          }
          uint64_t v10 = result;
          uint64_t v14 = *(void *)(result - 8);
          uint64_t v15 = a4[13];
        }
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_10068E2A0()
{
  if (!qword_101679A80)
  {
    type metadata accessor for UUID();
    unint64_t v0 = type metadata accessor for CRRegister();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101679A80);
    }
  }
}

void sub_10068E300()
{
  if (!qword_101679A90)
  {
    sub_100522D34((uint64_t *)&unk_101683E20);
    sub_10068E368();
    unint64_t v0 = type metadata accessor for CRRegister();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101679A90);
    }
  }
}

unint64_t sub_10068E368()
{
  unint64_t result = qword_101679A98;
  if (!qword_101679A98)
  {
    sub_100522D34((uint64_t *)&unk_101683E20);
    sub_10068E3DC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679A98);
  }
  return result;
}

unint64_t sub_10068E3DC()
{
  unint64_t result = qword_101679AA0;
  if (!qword_101679AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679AA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardItemCommonSimpleDataTypeSpecifying()
{
  return &type metadata for CRLBoardItemCommonSimpleDataTypeSpecifying;
}

uint64_t sub_10068E440()
{
  return swift_getWitnessTable();
}

uint64_t sub_10068E45C()
{
  return swift_getWitnessTable();
}

uint64_t sub_10068E478()
{
  return swift_getWitnessTable();
}

uint64_t sub_10068E494()
{
  return swift_getWitnessTable();
}

uint64_t sub_10068E4B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_10068E4CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_10068E4E8()
{
  return sub_100523288(&qword_101679AC0, &qword_101674550);
}

uint64_t sub_10068E524()
{
  return swift_getWitnessTable();
}

uint64_t sub_10068E540()
{
  return sub_100523288(&qword_101679AC8, &qword_101674450);
}

uint64_t sub_10068E57C()
{
  return sub_100523288(&qword_101679AD0, qword_1016799F8);
}

uint64_t sub_10068E5B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_10068E5D4()
{
  return sub_10068F2A4(&qword_101679AD8, (void (*)(uint64_t))type metadata accessor for CRLBoardItemParentAffinity);
}

uint64_t sub_10068E61C()
{
  return sub_10068F2A4(&qword_101679AE0, (void (*)(uint64_t))type metadata accessor for CRLBoardItemParentAffinity);
}

uint64_t sub_10068E664()
{
  return sub_10068F2A4(&qword_101679AE8, (void (*)(uint64_t))type metadata accessor for CRLBoardItemParentAffinity);
}

uint64_t sub_10068E6AC()
{
  return sub_10068F2A4(&qword_101679AF0, (void (*)(uint64_t))type metadata accessor for CRLBoardItemParentAffinity);
}

uint64_t sub_10068E6F4()
{
  return sub_10068F2A4(&qword_101679AF8, (void (*)(uint64_t))type metadata accessor for CRLBoardItemParentAffinity);
}

unint64_t sub_10068E740()
{
  unint64_t result = qword_101679B00;
  if (!qword_101679B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679B00);
  }
  return result;
}

unint64_t sub_10068E798()
{
  unint64_t result = qword_101679B08;
  if (!qword_101679B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679B08);
  }
  return result;
}

unint64_t sub_10068E7F0()
{
  unint64_t result = qword_101679B10;
  if (!qword_101679B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679B10);
  }
  return result;
}

unint64_t sub_10068E848()
{
  unint64_t result = qword_101679B18;
  if (!qword_101679B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679B18);
  }
  return result;
}

unint64_t sub_10068E8A0()
{
  unint64_t result = qword_101679B20;
  if (!qword_101679B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679B20);
  }
  return result;
}

unint64_t sub_10068E8F8()
{
  unint64_t result = qword_101679B28;
  if (!qword_101679B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679B28);
  }
  return result;
}

uint64_t sub_10068E94C()
{
  return sub_100523288(&qword_101679B30, &qword_101679B38);
}

uint64_t sub_10068E988()
{
  return sub_10068F2A4(&qword_101679B40, (void (*)(uint64_t))type metadata accessor for CRLBoardItemParentAffinity);
}

uint64_t sub_10068E9D0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_10068F2A4(&qword_101679B48, (void (*)(uint64_t))type metadata accessor for CRLBoardItemParentAffinity);
  uint64_t result = sub_10068F2A4(&qword_101679B50, (void (*)(uint64_t))type metadata accessor for CRLBoardItemParentAffinity);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_10068EA54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10068EABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardItemParentAffinity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10068EB20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v40 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_10168A0C0);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v15, v18);
  uint64_t v21 = (char *)&v39 - v20;
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v39 - v23;
  uint64_t v41 = a1;
  sub_100522E9C(a1, (uint64_t)&v39 - v23, (uint64_t *)&unk_101674520);
  uint64_t v42 = a2;
  sub_100522E9C(a2, (uint64_t)v21, (uint64_t *)&unk_101674520);
  uint64_t v25 = (uint64_t)&v12[*(int *)(v9 + 56)];
  sub_100522E9C((uint64_t)v24, (uint64_t)v12, (uint64_t *)&unk_101674520);
  sub_100522E9C((uint64_t)v21, v25, (uint64_t *)&unk_101674520);
  uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v26((uint64_t)v12, 1, v4) == 1)
  {
    sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101674520);
    sub_100522F00((uint64_t)v24, (uint64_t *)&unk_101674520);
    if (v26(v25, 1, v4) == 1)
    {
      sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101674520);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_100522E9C((uint64_t)v12, (uint64_t)v17, (uint64_t *)&unk_101674520);
  if (v26(v25, 1, v4) == 1)
  {
    sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101674520);
    sub_100522F00((uint64_t)v24, (uint64_t *)&unk_101674520);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v17, v4);
LABEL_6:
    sub_100522F00((uint64_t)v12, (uint64_t *)&unk_10168A0C0);
LABEL_10:
    char v37 = 0;
    return v37 & 1;
  }
  uint64_t v27 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v40, v25, v4);
  sub_10068F2A4((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  char v28 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v5 + 8);
  v29(v27, v4);
  sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101674520);
  sub_100522F00((uint64_t)v24, (uint64_t *)&unk_101674520);
  v29(v17, v4);
  sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101674520);
  if ((v28 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_8:
  uint64_t v30 = type metadata accessor for CRLBoardItemParentAffinity();
  uint64_t v32 = v41;
  uint64_t v31 = v42;
  int v33 = (_OWORD *)(v41 + *(int *)(v30 + 20));
  long long v34 = v33[1];
  v43[0] = *v33;
  v43[1] = v34;
  uint64_t v35 = (_OWORD *)(v42 + *(int *)(v30 + 20));
  long long v36 = v35[1];
  v44[0] = *v35;
  v44[1] = v36;
  if ((sub_100FB9CB0((uint64_t)v43, (uint64_t)v44) & 1) == 0) {
    goto LABEL_10;
  }
  char v37 = sub_100ED60AC(*(void *)(v32 + *(int *)(v30 + 24)), *(void *)(v31 + *(int *)(v30 + 24)));
  return v37 & 1;
}

uint64_t sub_10068EF34(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10068EF90(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10068EFEC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x8000000101244300
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797274656D6F6567 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_10068F13C()
{
  unint64_t result = qword_101679B60;
  if (!qword_101679B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679B60);
  }
  return result;
}

uint64_t sub_10068F190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardItemParentAffinity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10068F1F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardItemParentAffinity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10068F250()
{
  unint64_t result = qword_101679B70;
  if (!qword_101679B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679B70);
  }
  return result;
}

uint64_t sub_10068F2A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10068F2EC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_10068F304(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 136);
  uint64_t v12 = *(void *)(a1 + 128);
  uint64_t v3 = *(void *)(a1 + 144);
  uint64_t v4 = *(void *)(a1 + 152);
  uint64_t v5 = *(void *)(a1 + 160);
  uint64_t v6 = *(void *)(a1 + 168);
  uint64_t v7 = *(void *)(a1 + 176);
  uint64_t v8 = *(void *)(a1 + 184);
  long long v10 = *(_OWORD *)(a1 + 208);
  long long v11 = *(_OWORD *)(a1 + 192);
  sub_10051A0B8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80));
  sub_10051A0B8(v12, v2, v3, v4, v5, v6, v7, v8, v11, *((uint64_t *)&v11 + 1), v10);
  return a1;
}

uint64_t *sub_10068F3E8(uint64_t *a1)
{
  return a1;
}

uint64_t sub_10068F444(uint64_t a1)
{
  return a1;
}

unint64_t sub_10068F4B8()
{
  unint64_t result = qword_10168F9E0;
  if (!qword_10168F9E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10168F9E0);
  }
  return result;
}

uint64_t sub_10068F4F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_10068F550(uint64_t a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for CRLBoardItemParentAffinity.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10068F648);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardItemParentAffinity.CodingKeys()
{
  return &type metadata for CRLBoardItemParentAffinity.CodingKeys;
}

unint64_t sub_10068F684()
{
  unint64_t result = qword_101679BA0;
  if (!qword_101679BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679BA0);
  }
  return result;
}

uint64_t sub_10068F6D8()
{
  unint64_t v1 = 0x444972657375;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7461447472617473;
  }
}

uint64_t sub_10068F73C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100695A34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10068F764(uint64_t a1)
{
  unint64_t v2 = sub_10068FA34();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10068F7A0(uint64_t a1)
{
  unint64_t v2 = sub_10068FA34();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AASUserInfo.encode(to:)(void *a1)
{
  int v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_101679BA8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_10068FA34();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v12 = *v3;
  v11[7] = 0;
  sub_1005057FC(&qword_101679BB8);
  sub_10068FA88();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    type metadata accessor for AASUserInfo();
    v11[6] = 1;
    type metadata accessor for UUID();
    sub_100695F8C(&qword_101671E70, (void (*)(uint64_t))&type metadata accessor for UUID);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v11[5] = 2;
    type metadata accessor for Date();
    sub_100695F8C(&qword_101691F80, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_10068FA34()
{
  unint64_t result = qword_101679BB0;
  if (!qword_101679BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679BB0);
  }
  return result;
}

unint64_t sub_10068FA88()
{
  unint64_t result = qword_101679BC0;
  if (!qword_101679BC0)
  {
    sub_100522D34(&qword_101679BB8);
    sub_10068FB34();
    sub_100695F8C(&qword_101691F80, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679BC0);
  }
  return result;
}

unint64_t sub_10068FB34()
{
  unint64_t result = qword_101679BC8;
  if (!qword_101679BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679BC8);
  }
  return result;
}

uint64_t type metadata accessor for AASUserInfo()
{
  uint64_t result = qword_101679C48;
  if (!qword_101679C48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AASUserInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v38 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1005057FC(&qword_101679BD0);
  uint64_t v35 = *(void *)(v39 - 8);
  __chkstk_darwin(v39, v10);
  uint64_t v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for AASUserInfo();
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (uint64_t)&v16[*(int *)(v17 + 24)];
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v42 = v18;
  v20(v18, 1, 1, v19);
  uint64_t v21 = a1[3];
  uint64_t v41 = a1;
  sub_10050F848(a1, v21);
  sub_10068FA34();
  uint64_t v40 = v12;
  uint64_t v22 = v43;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v22)
  {
    uint64_t v28 = v42;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v41);
    return sub_100522F00(v28, &qword_101672EB0);
  }
  else
  {
    v32[1] = v19;
    uint64_t v33 = v13;
    uint64_t v23 = v35;
    uint64_t v24 = v36;
    uint64_t v43 = v16;
    uint64_t v26 = v37;
    uint64_t v25 = (uint64_t)v38;
    sub_1005057FC(&qword_101679BB8);
    char v46 = 0;
    sub_1006900B0();
    uint64_t v27 = v39;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *uint64_t v43 = v47;
    char v45 = 1;
    sub_100695F8C(&qword_101671E58, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v29 = v9;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v30 = (uint64_t)v43;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))((char *)v43 + *(int *)(v33 + 20), v29, v26);
    char v44 = 2;
    sub_100695F8C(&qword_101679BE8, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v40, v27);
    sub_1005E8B94(v25, v42);
    sub_1006901B0(v30, v34);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v41);
    return sub_10063F4F4(v30);
  }
}

unint64_t sub_1006900B0()
{
  unint64_t result = qword_101679BD8;
  if (!qword_101679BD8)
  {
    sub_100522D34(&qword_101679BB8);
    sub_10069015C();
    sub_100695F8C(&qword_101679BE8, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679BD8);
  }
  return result;
}

unint64_t sub_10069015C()
{
  unint64_t result = qword_101679BE0;
  if (!qword_101679BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679BE0);
  }
  return result;
}

uint64_t sub_1006901B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AASUserInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100690214@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AASUserInfo.init(from:)(a1, a2);
}

uint64_t sub_10069022C(void *a1)
{
  return AASUserInfo.encode(to:)(a1);
}

uint64_t sub_100690244()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 dataForKey:v1];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void sub_1006902C0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
  }
  id v4 = String._bridgeToObjectiveC()();
  [v2 setObject:isa forKey:v4];
  swift_unknownObjectRelease();
}

uint64_t *initializeBufferWithCopyOfBuffer for AASUserInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UUID();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for Date();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_1005057FC(&qword_101672EB0);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v7;
}

uint64_t destroy for AASUserInfo(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

void *initializeWithCopy for AASUserInfo(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC(&qword_101672EB0);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

void *assignWithCopy for AASUserInfo(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v8) = v15(v11, 1, v13);
  int v16 = v15(v12, 1, v13);
  if (!v8)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_1005057FC(&qword_101672EB0);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

void *initializeWithTake for AASUserInfo(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_1005057FC(&qword_101672EB0);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

void *assignWithTake for AASUserInfo(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v8) = v15(v11, 1, v13);
  int v16 = v15(v12, 1, v13);
  if (!v8)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_1005057FC(&qword_101672EB0);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for AASUserInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100690CDC);
}

uint64_t sub_100690CDC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005057FC(&qword_101672EB0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      int v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for AASUserInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100690E20);
}

void *sub_100690E20(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005057FC(&qword_101672EB0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      int v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_100690F50()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_1005E873C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100691028()
{
  type metadata accessor for AASKeychainDataStore();
  uint64_t result = swift_allocObject();
  qword_10171A2F0 = result;
  return result;
}

uint64_t type metadata accessor for AASKeychainDataStore()
{
  return self;
}

uint64_t sub_100691080()
{
  id v0 = [self standardUserDefaults];
  if (qword_10166EE18 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_10171A2F0;
  swift_retain();
  uint64_t result = sub_100694FA0((uint64_t)v0, v1);
  qword_10171A2F8 = result;
  return result;
}

uint64_t sub_100691114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_100691134, a4, 0);
}

uint64_t sub_100691134()
{
  sub_100691634();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_100691194()
{
  uint64_t v1 = (void *)*sub_10050F848((void *)(v0 + 128), *(void *)(v0 + 152));
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v2 = v1;
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 BOOLForKey:v3];

  swift_bridgeObjectRelease();
  if (v4)
  {
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v5 = (void *)static OS_os_log.crlAppAnalytics;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v7 = sub_100528BE4();
    *(void *)(inited + 32) = 0xD00000000000001CLL;
    *(void *)(inited + 64) = v7;
    *(void *)(inited + 40) = 0x8000000101244DD0;
    id v8 = v5;
    uint64_t v9 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v9, (uint64_t)"%@:  reset override switch enabled", 34, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  return v4;
}

void sub_100691338()
{
  uint64_t v0 = sub_1005057FC(&qword_101677B60);
  __chkstk_darwin(v0 - 8, v1);
  NSString v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for AASUserInfo();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  id v8 = (uint64_t *)&v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100693C1C((uint64_t)v3);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_100522F00((uint64_t)v3, &qword_101677B60);
    sub_100692454();
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v9 = (void *)static OS_os_log.crlAppAnalytics;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v11 = sub_100528BE4();
    *(void *)(inited + 32) = 0xD000000000000011;
    *(void *)(inited + 64) = v11;
    *(void *)(inited + 40) = 0x8000000101244D60;
    id v12 = v9;
    uint64_t v13 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v13, (uint64_t)"%@:  first launch of Freeform is detected", 41, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  else
  {
    sub_100695F28((uint64_t)v3, (uint64_t)v8);
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v14 = (id)static OS_os_log.crlAppAnalytics;
    uint64_t v15 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v15, (uint64_t)"Checking reset state", 20, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_100693634(v8);
    if (sub_100693F94() & 1) == 0 || (sub_100691194()) {
      sub_1006927DC();
    }
    sub_10063F4F4((uint64_t)v8);
  }
}

void sub_100691634()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v5 - 8, v6);
  long long v89 = (char *)v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  unint64_t v11 = (char *)v74 - v10;
  uint64_t v12 = sub_1005057FC(&qword_101679E08);
  __chkstk_darwin(v12 - 8, v13);
  long long v86 = (char *)v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DateComponents();
  uint64_t v82 = *(void *)(v15 - 8);
  uint64_t v83 = v15;
  __chkstk_darwin(v15, v16);
  long long v90 = (char *)v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v92 = *(void *)(v18 - 8);
  uint64_t v93 = v18;
  __chkstk_darwin(v18, v19);
  long long v91 = (char *)v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for Calendar.Component();
  uint64_t v21 = *(void *)(v84 - 8);
  __chkstk_darwin(v84, v22);
  uint64_t v24 = (char *)v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1005057FC(&qword_101679DB0);
  __chkstk_darwin(v25 - 8, v26);
  long long v85 = (char *)v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28, v29);
  uint64_t v31 = (char *)v74 - v30;
  uint64_t v32 = type metadata accessor for Calendar.Identifier();
  uint64_t v33 = *(void *)(v32 - 8);
  __chkstk_darwin(v32, v34);
  uint64_t v36 = (char *)v74 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for Calendar();
  uint64_t v87 = *(void *)(v37 - 8);
  uint64_t v88 = v37;
  __n128 v39 = __chkstk_darwin(v37, v38);
  uint64_t v41 = (char *)v74 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + 208)) {
    return;
  }
  long long v80 = v4;
  long long v81 = v11;
  uint64_t v75 = v0;
  *(unsigned char *)(v0 + 208) = 1;
  (*(void (**)(char *, void, uint64_t, __n128))(v33 + 104))(v36, enum case for Calendar.Identifier.gregorian(_:), v32, v39);
  Calendar.init(identifier:)();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v36, v32);
  TimeZone.init(identifier:)();
  uint64_t v42 = type metadata accessor for TimeZone();
  uint64_t v78 = *(void *)(v42 - 8);
  uint64_t v79 = v42;
  if ((*(unsigned int (**)(char *, uint64_t))(v78 + 48))(v31, 1) == 1)
  {
LABEL_14:
    __break(1u);
    return;
  }
  uint64_t v43 = v41;
  Calendar.timeZone.setter();
  uint64_t v76 = *(void (**)(char *, void, uint64_t))(v21 + 104);
  uint64_t v44 = v84;
  v76(v24, enum case for Calendar.Component.year(_:), v84);
  char v45 = v91;
  static Date.now.getter();
  uint64_t v77 = Calendar.component(_:from:)();
  uint64_t v46 = v93;
  uint64_t v48 = v92 + 8;
  uint64_t v47 = *(void (**)(char *, uint64_t))(v92 + 8);
  v47(v45, v93);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v21 + 8);
  v49(v24, v44);
  v76(v24, enum case for Calendar.Component.month(_:), v44);
  static Date.now.getter();
  uint64_t v76 = (void (*)(char *, void, uint64_t))v43;
  uint64_t v50 = Calendar.component(_:from:)();
  v74[1] = v48;
  v74[0] = v47;
  v47(v45, v46);
  v49(v24, v44);
  uint64_t v51 = v87;
  uint64_t v52 = v88;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56))(v86, 1, 1, v88);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56))(v85, 1, 1, v79);
  int v53 = v90;
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  if (v50 != 12)
  {
    DateComponents.year.setter();
    uint64_t v54 = (uint64_t)v80;
    uint64_t v55 = (uint64_t)v81;
    uint64_t v56 = (uint64_t)v89;
    if (!__OFADD__(v50, 1)) {
      goto LABEL_7;
    }
    goto LABEL_13;
  }
  uint64_t v54 = (uint64_t)v80;
  uint64_t v55 = (uint64_t)v81;
  uint64_t v56 = (uint64_t)v89;
  if (__OFADD__(v77, 1))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  DateComponents.year.setter();
LABEL_7:
  DateComponents.month.setter();
  DateComponents.day.setter();
  BOOL v57 = (void (*)(void, void, void))v76;
  Calendar.date(from:)();
  sub_100541258(v55, v56);
  uint64_t v58 = v93;
  int v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v56, 1, v93);
  uint64_t v60 = v75;
  if (v59 == 1)
  {
    sub_100522F00(v56, &qword_101672EB0);
    uint64_t v61 = 0;
  }
  else
  {
    uint64_t v62 = v57;
    uint64_t v63 = v51;
    uint64_t v64 = v54;
    uint64_t v65 = v52;
    uint64_t v66 = v91;
    static Date.now.getter();
    Date.timeIntervalSince(_:)();
    uint64_t v61 = v67;
    uint64_t v68 = v66;
    uint64_t v52 = v65;
    uint64_t v69 = (void (*)(uint64_t, uint64_t))v74[0];
    ((void (*)(char *, uint64_t))v74[0])(v68, v58);
    v69(v56, v58);
    uint64_t v54 = v64;
    uint64_t v51 = v63;
    BOOL v57 = v62;
    uint64_t v55 = (uint64_t)v81;
  }
  uint64_t v70 = v83;
  uint64_t v71 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v54, 1, 1, v71);
  uint64_t v72 = swift_allocObject();
  swift_weakInit();
  uint64_t v73 = (void *)swift_allocObject();
  v73[2] = 0;
  v73[3] = 0;
  v73[4] = v61;
  v73[5] = v72;
  *(void *)(v60 + 216) = sub_1006D9104(v54, (uint64_t)&unk_101679E18, (uint64_t)v73);
  swift_release();
  sub_100522F00(v55, &qword_101672EB0);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v53, v70);
  (*(void (**)(void (*)(void, void, void), uint64_t))(v51 + 8))(v57, v52);
}

uint64_t sub_100691F44(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 48) = a5;
  *(double *)(v5 + 40) = a1;
  uint64_t v6 = type metadata accessor for ContinuousClock();
  *(void *)(v5 + 56) = v6;
  *(void *)(v5 + 64) = *(void *)(v6 - 8);
  *(void *)(v5 + 72) = swift_task_alloc();
  return _swift_task_switch(sub_100692008, 0, 0);
}

uint64_t sub_100692008()
{
  uint64_t v1 = static Duration.seconds(_:)();
  uint64_t v3 = v2;
  ContinuousClock.init()();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_101686300 + dword_101686300);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1006920E4;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_1006920E4()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[8] + 8))(v2[9], v2[7]);
  if (v0) {
    uint64_t v3 = sub_1006923F0;
  }
  else {
    uint64_t v3 = sub_10069224C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10069224C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 96) = Strong;
  if (Strong)
  {
    return _swift_task_switch(sub_100692314, Strong, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_100692314()
{
  uint64_t v1 = *(void *)(v0 + 96);
  sub_1006927DC();
  *(unsigned char *)(v1 + 208) = 0;
  sub_100691634();
  return _swift_task_switch(sub_100692384, 0, 0);
}

uint64_t sub_100692384()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006923F0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100692454()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AASUserInfo();
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (unint64_t *)((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = (void *)*sub_10050F848(v0 + 16, v0[19]);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v11 = v10;
  NSString v12 = String._bridgeToObjectiveC()();
  [v11 removeObjectForKey:v12];

  swift_bridgeObjectRelease();
  sub_1005057FC(&qword_101679DC0);
  sub_1005057FC(&qword_101679DC8);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10117E810;
  static Date.now.getter();
  unint64_t v14 = sub_100A45FF0(v13);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  UUID.init()();
  uint64_t v15 = (char *)v9 + *(int *)(v6 + 32);
  static Date.now.getter();
  uint64_t v16 = type metadata accessor for Date();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
  *uint64_t v9 = v14;
  sub_10069332C();
  sub_10063F4F4((uint64_t)v9);
  if (v0[27])
  {
    swift_retain();
    sub_1005057FC(&qword_101672BD0);
    Task.cancel()();
    swift_release();
  }
  sub_100691634();
  uint64_t v17 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v4, 1, 1, v17);
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v19 = static MainActor.shared.getter();
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = v19;
  v20[3] = &protocol witness table for MainActor;
  v20[4] = v18;
  swift_release();
  sub_1005912D0((uint64_t)v4, (uint64_t)&unk_101679E00, (uint64_t)v20);
  return swift_release();
}

void sub_1006927DC()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_101677B60);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AASUserInfo();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (unint64_t *)((char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (unint64_t *)((char *)&v25 - v16);
  uint64_t v18 = (void *)*sub_10050F848(v0 + 16, v0[19]);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v19 = v18;
  NSString v20 = String._bridgeToObjectiveC()();
  [v19 removeObjectForKey:v20];

  swift_bridgeObjectRelease();
  sub_100693C1C((uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100522F00((uint64_t)v8, &qword_101677B60);
    sub_100692454();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"resetIdentifiers()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLAppAnalyticsSupports/Shared/AASUserInfoManager.swift", 109, 2, 246, (uint64_t)"UserInfo is nil, creating new UserInfo", 38, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"resetIdentifiers()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLAppAnalyticsSupports/Shared/AASUserInfoManager.swift", 109, 2, 246);
  }
  else
  {
    sub_100695F28((uint64_t)v8, (uint64_t)v17);
    sub_10069396C(v17, v13);
    sub_10069332C();
    sub_10063F4F4((uint64_t)v13);
    if (v0[27])
    {
      swift_retain();
      sub_1005057FC(&qword_101672BD0);
      Task.cancel()();
      swift_release();
    }
    sub_100691634();
    uint64_t v21 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v4, 1, 1, v21);
    uint64_t v22 = swift_allocObject();
    swift_weakInit();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v23 = static MainActor.shared.getter();
    uint64_t v24 = (void *)swift_allocObject();
    v24[2] = v23;
    v24[3] = &protocol witness table for MainActor;
    v24[4] = v22;
    swift_release();
    sub_1005912D0((uint64_t)v4, (uint64_t)&unk_101679DE8, (uint64_t)v24);
    swift_release();
    sub_10063F4F4((uint64_t)v17);
  }
}

uint64_t sub_100692BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[17] = a4;
  sub_1005057FC(&qword_101677B60);
  v4[18] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_101674520);
  v4[19] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v4[20] = v5;
  v4[21] = *(void *)(v5 - 8);
  v4[22] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[23] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[24] = v7;
  v4[25] = v6;
  return _swift_task_switch(sub_100692D24, v7, v6);
}

uint64_t sub_100692D24()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[26] = Strong;
  if (Strong)
  {
    return _swift_task_switch(sub_100692E34, Strong, 0);
  }
  else
  {
    swift_release();
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[21] + 56))(v0[19], 1, 1, v0[20]);
    sub_100522F00(v0[19], (uint64_t *)&unk_101674520);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
}

uint64_t sub_100692E34()
{
  sub_100693C1C(v0[18]);
  swift_release();
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[25];
  return _swift_task_switch(sub_100692EA4, v1, v2);
}

uint64_t sub_100692EA4()
{
  uint64_t v1 = v0[18];
  swift_release();
  uint64_t v2 = type metadata accessor for AASUserInfo();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    sub_100522F00(v0[18], &qword_101677B60);
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[21] + 56))(v0[19], 1, 1, v0[20]);
LABEL_4:
    sub_100522F00(v0[19], (uint64_t *)&unk_101674520);
    goto LABEL_10;
  }
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[21];
  uint64_t v6 = v0[18];
  uint64_t v5 = v0[19];
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v7(v5, v6 + *(int *)(v2 + 20), v3);
  sub_10063F4F4(v6);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v5, 0, 1, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) == 1) {
    goto LABEL_4;
  }
  uint64_t v8 = v0[22];
  uint64_t v9 = v0[20];
  (*(void (**)(uint64_t, void, uint64_t))(v0[21] + 32))(v8, v0[19], v9);
  sub_1005057FC(&qword_101679DF0);
  uint64_t v10 = (int *)(sub_1005057FC(&qword_101679DF8) - 8);
  unint64_t v11 = (*(unsigned __int8 *)(*(void *)v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10117E810;
  uint64_t v13 = (void *)(v12 + v11);
  unint64_t v14 = v12 + v11 + v10[14];
  *uint64_t v13 = 0x444972657375;
  v13[1] = 0xE600000000000000;
  v7(v14, v8, v9);
  unint64_t v15 = sub_100A3A8E8(v12);
  id v16 = [self defaultCenter];
  if (qword_10166EDD0 != -1) {
    swift_once();
  }
  uint64_t v17 = static NSNotificationName.AASUserIdentifierDidResetNotification;
  sub_100ED2F80(v15);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v16 postNotificationName:v17 object:0 userInfo:isa];

  if (qword_10166FA40 != -1) {
    swift_once();
  }
  uint64_t v20 = v0[21];
  uint64_t v19 = v0[22];
  uint64_t v21 = v0[20];
  swift_beginAccess();
  uint64_t v22 = (void *)static OS_os_log.crlAppAnalytics;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v24 = v22;
  uint64_t v25 = UUID.uuidString.getter();
  uint64_t v27 = v26;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v25;
  *(void *)(inited + 40) = v27;
  uint64_t v28 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v24, (uint64_t)&_mh_execute_header, v28, (uint64_t)"UserID did reset to: %@", 23, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
LABEL_10:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = (uint64_t (*)(void))v0[1];
  return v29();
}

uint64_t sub_10069332C()
{
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  type metadata accessor for AASUserInfo();
  sub_100695F8C(&qword_101679DD0, (void (*)(uint64_t))type metadata accessor for AASUserInfo);
  uint64_t v1 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v3 = v2;
  swift_release();
  uint64_t v4 = (void *)*sub_10050F848((void *)(v0 + 128), *(void *)(v0 + 152));
  id v5 = [self defaultManager];
  id v6 = [v5 ubiquityIdentityToken];
  swift_unknownObjectRelease();

  if (v6)
  {
    swift_retain();
    uint64_t v7 = &off_10150EA48;
  }
  else
  {
    id v8 = v4;
    uint64_t v7 = &off_10150E8F8;
  }
  swift_getObjectType();
  uint64_t v9 = (void (*)(uint64_t, unint64_t))v7[2];
  sub_100510D4C(v1, v3);
  v9(v1, v3);
  sub_100510084(v1, v3);
  swift_unknownObjectRelease();

  return sub_100510084(v1, v3);
}

uint64_t sub_100693634(uint64_t *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v2 - 8, v3);
  id v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v26 - v8;
  uint64_t v10 = type metadata accessor for AASUserInfo();
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006901B0((uint64_t)a1, (uint64_t)v13);
  uint64_t v14 = *a1;
  if (*(void *)(v14 + 16) && (uint64_t v15 = sub_100987C40(), (v16 & 1) != 0))
  {
    uint64_t v17 = v15;
    uint64_t v18 = *(void *)(v14 + 56);
    uint64_t v19 = type metadata accessor for Date();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v9, v18 + *(void *)(v20 + 72) * v17, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v9, 0, 1, v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v9, 1, v19) != 1)
    {
      sub_100522F00((uint64_t)v9, &qword_101672EB0);
      return sub_10063F4F4((uint64_t)v13);
    }
  }
  else
  {
    uint64_t v21 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v9, 1, 1, v21);
  }
  sub_100522F00((uint64_t)v9, &qword_101672EB0);
  if (qword_10166FA40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v22 = (id)static OS_os_log.crlAppAnalytics;
  uint64_t v23 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v22, (uint64_t)&_mh_execute_header, v23, (uint64_t)"update user start date", 22, 2, (uint64_t)_swiftEmptyArrayStorage);

  static Date.now.getter();
  uint64_t v24 = type metadata accessor for Date();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v5, 0, 1, v24);
  sub_10057E408((uint64_t)v5);
  sub_10069332C();
  return sub_10063F4F4((uint64_t)v13);
}

uint64_t sub_10069396C@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v3 = *a1;
  if (*(void *)(*a1 + 16))
  {
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v4 = (id)static OS_os_log.crlAppAnalytics;
    uint64_t v5 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v5, (uint64_t)"update user info", 16, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t v6 = type metadata accessor for AASUserInfo();
    swift_bridgeObjectRetain();
  }
  else
  {
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v7 = (id)static OS_os_log.crlAppAnalytics;
    uint64_t v8 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v8, (uint64_t)"update user info with new date", 30, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_1005057FC(&qword_101679DC0);
    sub_1005057FC(&qword_101679DC8);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_10117E810;
    static Date.now.getter();
    unint64_t v3 = sub_100A45FF0(v9);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v6 = type metadata accessor for AASUserInfo();
  }
  UUID.init()();
  uint64_t v10 = (char *)a2 + *(int *)(v6 + 24);
  static Date.now.getter();
  uint64_t v11 = type metadata accessor for Date();
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 0, 1, v11);
  *a2 = v3;
  return result;
}

uint64_t sub_100693C1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1005057FC(&qword_101677B60);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = (void *)*sub_10050F848((void *)(v1 + 128), *(void *)(v1 + 152));
  id v8 = [self defaultManager];
  id v9 = [v8 ubiquityIdentityToken];
  swift_unknownObjectRelease();

  if (v9)
  {
    swift_retain();
    uint64_t v10 = &off_10150EA48;
  }
  else
  {
    v7;
    uint64_t v10 = &off_10150E8F8;
  }
  swift_getObjectType();
  uint64_t v11 = ((uint64_t (__cdecl *)())v10[1])();
  unint64_t v13 = v12;
  swift_unknownObjectRelease();
  if (v13 >> 60 == 15)
  {
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v15 = (id)static OS_os_log.crlAppAnalytics;
    uint64_t v16 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Error decoding UserInfo", 23, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t v17 = type metadata accessor for AASUserInfo();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
  else
  {
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    uint64_t v14 = type metadata accessor for AASUserInfo();
    sub_100695F8C(&qword_101679DB8, (void (*)(uint64_t))type metadata accessor for AASUserInfo);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    sub_100514260(v11, v13);
    swift_release();
    uint64_t v18 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    v18(v6, 0, 1, v14);
    sub_100695F28((uint64_t)v6, a1);
    return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v18)(a1, 0, 1, v14);
  }
}

uint64_t sub_100693F94()
{
  uint64_t v58 = type metadata accessor for Calendar.Component();
  uint64_t v61 = *(void *)(v58 - 8);
  __chkstk_darwin(v58, v0);
  uint64_t v2 = (char *)&v54 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1005057FC(&qword_101679DB0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v63 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Calendar.Identifier();
  uint64_t v62 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  id v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Calendar();
  uint64_t v59 = *(void *)(v10 - 8);
  uint64_t v60 = v10;
  __chkstk_darwin(v10, v11);
  uint64_t v64 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_101677B60);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Date();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v23);
  uint64_t v25 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v27);
  uint64_t v29 = (char *)&v54 - v28;
  sub_100693C1C((uint64_t)v16);
  uint64_t v30 = type metadata accessor for AASUserInfo();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v16, 1, v30) == 1)
  {
    sub_100522F00((uint64_t)v16, &qword_101677B60);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
LABEL_4:
    sub_100522F00((uint64_t)v20, &qword_101672EB0);
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v31 = (void *)static OS_os_log.crlAppAnalytics;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v33 = sub_100528BE4();
    *(void *)(inited + 32) = 0xD000000000000019;
    *(void *)(inited + 64) = v33;
    *(void *)(inited + 40) = 0x8000000101244B90;
    id v34 = v31;
    uint64_t v35 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v34, (uint64_t)&_mh_execute_header, v35, (uint64_t)"%@: no previous rotation date", 29, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    return 0;
  }
  sub_100541258((uint64_t)&v16[*(int *)(v30 + 24)], (uint64_t)v20);
  sub_10063F4F4((uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1) {
    goto LABEL_4;
  }
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  BOOL v57 = v29;
  v37(v29, v20, v21);
  uint64_t v38 = v62;
  (*(void (**)(char *, void, uint64_t))(v62 + 104))(v9, enum case for Calendar.Identifier.gregorian(_:), v6);
  __n128 v39 = v64;
  Calendar.init(identifier:)();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v6);
  uint64_t v40 = v63;
  TimeZone.init(identifier:)();
  uint64_t v41 = type metadata accessor for TimeZone();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v40, 1, v41);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    Calendar.timeZone.setter();
    uint64_t v42 = enum case for Calendar.Component.year(_:);
    uint64_t v43 = v61;
    uint64_t v63 = *(char **)(v61 + 104);
    uint64_t v44 = v58;
    ((void (*)(char *, void, uint64_t))v63)(v2, enum case for Calendar.Component.year(_:), v58);
    static Date.now.getter();
    uint64_t v62 = Calendar.component(_:from:)();
    uint64_t v56 = *(void (**)(char *, uint64_t))(v22 + 8);
    v56(v25, v21);
    char v45 = *(void (**)(char *, uint64_t))(v43 + 8);
    v45(v2, v44);
    uint64_t v54 = v21;
    uint64_t v46 = (void (*)(char *, void, uint64_t))v63;
    ((void (*)(char *, uint64_t, uint64_t))v63)(v2, v42, v44);
    uint64_t v61 = Calendar.component(_:from:)();
    v45(v2, v44);
    uint64_t v47 = enum case for Calendar.Component.month(_:);
    v46(v2, enum case for Calendar.Component.month(_:), v44);
    static Date.now.getter();
    uint64_t v55 = Calendar.component(_:from:)();
    uint64_t v48 = v25;
    uint64_t v49 = v54;
    uint64_t v50 = v56;
    v56(v48, v54);
    v45(v2, v44);
    ((void (*)(char *, uint64_t, uint64_t))v63)(v2, v47, v44);
    uint64_t v51 = v57;
    uint64_t v52 = Calendar.component(_:from:)();
    v45(v2, v44);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v39, v60);
    v50(v51, v49);
    return v62 == v61 && v55 == v52;
  }
  return result;
}

uint64_t sub_100694744()
{
  swift_bridgeObjectRelease();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 128);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 168);
  swift_release();
  swift_defaultActor_destroy();

  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for AASUserInfoManager()
{
  return self;
}

ValueMetadata *type metadata accessor for AASApplicationVariant()
{
  return &type metadata for AASApplicationVariant;
}

unsigned char *storeEnumTagSinglePayload for AASUserInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100694898);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AASUserInfo.CodingKeys()
{
  return &type metadata for AASUserInfo.CodingKeys;
}

unint64_t sub_1006948D4()
{
  unint64_t result = qword_101679D48;
  if (!qword_101679D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679D48);
  }
  return result;
}

unint64_t sub_10069492C()
{
  unint64_t result = qword_101679D50;
  if (!qword_101679D50)
  {
    sub_100522D34(&qword_101679D58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679D50);
  }
  return result;
}

uint64_t sub_100694988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6D726F6665657266 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_100694A20(uint64_t a1)
{
  unint64_t v2 = sub_100695B98();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100694A5C(uint64_t a1)
{
  unint64_t v2 = sub_100695B98();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100694A98(uint64_t a1)
{
  unint64_t v2 = sub_100695BEC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100694AD4(uint64_t a1)
{
  unint64_t v2 = sub_100695BEC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100694B10(void *a1)
{
  return sub_100695C40(a1);
}

uint64_t sub_100694B28(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101679D78);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  unsigned int v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_101679D80);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100695B98();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_100695BEC();
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

void sub_100694CF8(void *a1@<X8>)
{
  *a1 = &off_101503150;
}

unint64_t sub_100694D0C()
{
  unint64_t result = qword_101679D60;
  if (!qword_101679D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679D60);
  }
  return result;
}

unint64_t sub_100694D64()
{
  unint64_t result = qword_101679D68;
  if (!qword_101679D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679D68);
  }
  return result;
}

unint64_t sub_100694DBC()
{
  unint64_t result = qword_101679D70;
  if (!qword_101679D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679D70);
  }
  return result;
}

uint64_t sub_100694E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16[3] = &type metadata for AASUserInfoDefaultDataStoreProvider;
  v16[4] = &off_10150EC88;
  v16[0] = a1;
  v16[1] = a2;
  uint64_t v14 = &type metadata for AASDefaultNowProvider;
  uint64_t v15 = &off_10150EC78;
  swift_defaultActor_initialize();
  *(void *)(a3 + 112) = 0xD00000000000001ELL;
  *(void *)(a3 + 120) = 0x8000000101244DF0;
  *(unsigned char *)(a3 + 208) = 0;
  *(void *)(a3 + 216) = 0;
  sub_1005498A4((uint64_t)v16, a3 + 128);
  sub_1005498A4((uint64_t)v13, a3 + 168);
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = (void *)swift_allocObject();
  _OWORD v11[2] = 0;
  v11[3] = 0;
  v11[4] = a3;
  swift_retain();
  sub_1005912D0((uint64_t)v9, (uint64_t)&unk_101679E28, (uint64_t)v11);
  swift_release();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v13);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v16);
  return a3;
}

uint64_t sub_100694FA0(uint64_t a1, uint64_t a2)
{
  v14[3] = &type metadata for AASUserInfoDefaultDataStoreProvider;
  v14[4] = &off_10150EC88;
  v14[0] = a1;
  v14[1] = a2;
  uint64_t v12 = &type metadata for AASDefaultNowProvider;
  uint64_t v13 = &off_10150EC78;
  type metadata accessor for AASUserInfoManager();
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = sub_1005231B4((uint64_t)v14, (uint64_t)&type metadata for AASUserInfoDefaultDataStoreProvider);
  uint64_t v4 = *(void *)(v3 + 8);
  id v5 = *(id *)v3;
  swift_retain();
  uint64_t v6 = sub_1005231B4((uint64_t)v11, (uint64_t)&type metadata for AASDefaultNowProvider);
  __n128 v7 = __chkstk_darwin(v6, v6);
  (*(void (**)(__n128))(v8 + 16))(v7);
  uint64_t v9 = sub_100694E10((uint64_t)v5, v4, v2);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v11);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v14);
  return v9;
}

uint64_t sub_1006950AC(unint64_t a1, unint64_t a2)
{
  CFTypeRef result = 0;
  sub_1005057FC(&qword_101679DA8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E800;
  *(void *)(inited + 32) = kSecClass;
  type metadata accessor for CFString(0);
  *(void *)(inited + 40) = kSecClassKey;
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 72) = kSecAttrApplicationTag;
  CFStringRef v6 = (id)kSecClass;
  CFStringRef v7 = (id)kSecClassKey;
  CFStringRef v8 = (id)kSecAttrApplicationTag;
  swift_bridgeObjectRetain();
  *(void *)(inited + 80) = sub_1009B6BA8(a1, a2);
  *(void *)(inited + 88) = v9;
  *(void *)(inited + 104) = &type metadata for Data;
  *(void *)(inited + 112) = kSecAttrSynchronizable;
  *(unsigned char *)(inited + 120) = 1;
  *(void *)(inited + 144) = &type metadata for Bool;
  *(void *)(inited + 152) = kSecReturnData;
  *(void *)(inited + 184) = &type metadata for Bool;
  *(unsigned char *)(inited + 160) = 1;
  CFStringRef v10 = (id)kSecAttrSynchronizable;
  CFStringRef v11 = (id)kSecReturnData;
  sub_100A3A7B8(inited);
  sub_100695F8C((unint64_t *)&qword_101671688, type metadata accessor for CFString);
  CFDictionaryRef isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  OSStatus v13 = SecItemCopyMatching(isa, &result);

  if (v13)
  {
    CFStringRef v14 = SecCopyErrorMessageString(v13, 0);
    if (v14)
    {
      uint64_t v15 = (__CFString *)v14;
      static String._conditionallyBridgeFromObjectiveC(_:result:)();
    }
    swift_bridgeObjectRelease();
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v16 = (void *)static OS_os_log.crlAppAnalytics;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v17 = swift_initStackObject();
    *(_OWORD *)(v17 + 16) = xmmword_10117DF40;
    *(void *)(v17 + 56) = &type metadata for String;
    unint64_t v18 = sub_100528BE4();
    *(void *)(v17 + 64) = v18;
    *(void *)(v17 + 32) = a1;
    *(void *)(v17 + 40) = a2;
    *(void *)(v17 + 96) = &type metadata for Int32;
    *(void *)(v17 + 104) = &protocol witness table for Int32;
    *(_DWORD *)(v17 + 72) = v13;
    *(void *)(v17 + 136) = &type metadata for String;
    *(void *)(v17 + 144) = v18;
    *(void *)(v17 + 112) = 0;
    *(void *)(v17 + 120) = 0xE000000000000000;
    swift_bridgeObjectRetain();
    id v19 = v16;
    uint64_t v20 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v20, (uint64_t)"Error reading data from Keychain, tag=%{public}@, status=%{public}d, error=%{public}@", 85, 2, v17);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    swift_unknownObjectRelease();

    return 0;
  }
  else
  {
    if (result)
    {
      swift_unknownObjectRetain();
      if (swift_dynamicCast()) {
        uint64_t v21 = v23;
      }
      else {
        uint64_t v21 = 0;
      }
    }
    else
    {
      uint64_t v21 = 0;
    }
    swift_unknownObjectRelease();
  }
  return v21;
}

uint64_t sub_10069544C(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  swift_bridgeObjectRetain();
  unint64_t v47 = a3;
  uint64_t v7 = sub_1009B6BA8(a3, a4);
  unint64_t v9 = v8;
  sub_1005057FC(&qword_101679DA8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E800;
  *(void *)(inited + 32) = kSecClass;
  type metadata accessor for CFString(0);
  uint64_t v12 = v11;
  *(void *)(inited + 40) = kSecClassKey;
  *(void *)(inited + 64) = v11;
  *(void *)(inited + 72) = kSecAttrApplicationTag;
  *(void *)(inited + 80) = v7;
  *(void *)(inited + 88) = v9;
  *(void *)(inited + 104) = &type metadata for Data;
  *(void *)(inited + 112) = kSecAttrSynchronizable;
  *(unsigned char *)(inited + 120) = 1;
  *(void *)(inited + 144) = &type metadata for Bool;
  *(void *)(inited + 152) = kSecReturnData;
  *(void *)(inited + 184) = &type metadata for Bool;
  *(unsigned char *)(inited + 160) = 1;
  char v45 = (id)kSecClass;
  uint64_t v44 = (id)kSecClassKey;
  uint64_t v43 = (id)kSecAttrApplicationTag;
  sub_100510D4C(v7, v9);
  uint64_t v42 = (id)kSecAttrSynchronizable;
  CFStringRef v13 = (id)kSecReturnData;
  sub_100A3A7B8(inited);
  sub_100695F8C((unint64_t *)&qword_101671688, type metadata accessor for CFString);
  CFDictionaryRef isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  OSStatus v15 = SecItemDelete(isa);

  if (v15)
  {
    CFStringRef v16 = SecCopyErrorMessageString(v15, 0);
    if (v16)
    {
      uint64_t v17 = (__CFString *)v16;
      static String._conditionallyBridgeFromObjectiveC(_:result:)();
    }
    swift_bridgeObjectRelease();
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    unint64_t v18 = (void *)static OS_os_log.crlAppAnalytics;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v19 = swift_initStackObject();
    *(_OWORD *)(v19 + 16) = xmmword_10117DF40;
    *(void *)(v19 + 56) = &type metadata for String;
    unint64_t v20 = sub_100528BE4();
    *(void *)(v19 + 64) = v20;
    *(void *)(v19 + 32) = v47;
    *(void *)(v19 + 40) = a4;
    *(void *)(v19 + 96) = &type metadata for Int32;
    *(void *)(v19 + 104) = &protocol witness table for Int32;
    *(_DWORD *)(v19 + 72) = v15;
    *(void *)(v19 + 136) = &type metadata for String;
    *(void *)(v19 + 144) = v20;
    *(void *)(v19 + 112) = 0;
    *(void *)(v19 + 120) = 0xE000000000000000;
    swift_bridgeObjectRetain();
    id v21 = v18;
    uint64_t v22 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v21, (uint64_t)&_mh_execute_header, v22, (uint64_t)"Error deleting data from Keychain, tag=%{public}@, status=%{public}d, error=%{public}@", 86, 2, v19);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  if (a2 >> 60 == 15) {
    return sub_100510084(v7, v9);
  }
  uint64_t v24 = swift_initStackObject();
  *(_OWORD *)(v24 + 16) = xmmword_10117E800;
  *(void *)(v24 + 32) = v45;
  *(void *)(v24 + 40) = v44;
  *(void *)(v24 + 64) = v12;
  *(void *)(v24 + 72) = v43;
  *(void *)(v24 + 80) = v7;
  *(void *)(v24 + 88) = v9;
  *(void *)(v24 + 104) = &type metadata for Data;
  *(void *)(v24 + 112) = v42;
  *(unsigned char *)(v24 + 120) = 1;
  *(void *)(v24 + 144) = &type metadata for Bool;
  *(void *)(v24 + 152) = kSecValueData;
  *(void *)(v24 + 184) = &type metadata for Data;
  *(void *)(v24 + 160) = a1;
  *(void *)(v24 + 168) = a2;
  sub_1005FA2A0(a1, a2);
  sub_100510D4C(v7, v9);
  sub_1005FA2A0(a1, a2);
  uint64_t v25 = v45;
  uint64_t v26 = v44;
  uint64_t v27 = v43;
  uint64_t v28 = v42;
  CFStringRef v29 = (id)kSecValueData;
  sub_100A3A7B8(v24);
  CFDictionaryRef v30 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  OSStatus v31 = SecItemAdd(v30, 0);

  if (v31)
  {
    unint64_t v32 = a2;
    CFStringRef v33 = SecCopyErrorMessageString(v31, 0);
    if (v33)
    {
      id v34 = (__CFString *)v33;
      static String._conditionallyBridgeFromObjectiveC(_:result:)();
    }
    swift_bridgeObjectRelease();
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v35 = (void *)static OS_os_log.crlAppAnalytics;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v36 = swift_initStackObject();
    *(_OWORD *)(v36 + 16) = xmmword_10117DF40;
    *(void *)(v36 + 56) = &type metadata for String;
    unint64_t v37 = sub_100528BE4();
    *(void *)(v36 + 64) = v37;
    *(void *)(v36 + 32) = v47;
    *(void *)(v36 + 40) = a4;
    *(void *)(v36 + 96) = &type metadata for Int32;
    *(void *)(v36 + 104) = &protocol witness table for Int32;
    *(_DWORD *)(v36 + 72) = v31;
    *(void *)(v36 + 136) = &type metadata for String;
    *(void *)(v36 + 144) = v37;
    *(void *)(v36 + 112) = 0;
    *(void *)(v36 + 120) = 0xE000000000000000;
    swift_bridgeObjectRetain();
    id v38 = v35;
    uint64_t v39 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v38, (uint64_t)&_mh_execute_header, v39, (uint64_t)"Error writing data to Keychain, tag=%{public}@, status=%{public}d, error=%{public}@", 83, 2, v36);
    sub_100510084(v7, v9);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v40 = a1;
    unint64_t v41 = v32;
  }
  else
  {
    sub_100510084(v7, v9);
    uint64_t v40 = a1;
    unint64_t v41 = a2;
  }
  return sub_100514260(v40, v41);
}

uint64_t sub_100695A34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461447472617473 && a2 == 0xEC00000070614D65;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x444972657375 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000101244A30)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_100695B98()
{
  unint64_t result = qword_101679D88;
  if (!qword_101679D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679D88);
  }
  return result;
}

unint64_t sub_100695BEC()
{
  unint64_t result = qword_101679D90;
  if (!qword_101679D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679D90);
  }
  return result;
}

uint64_t sub_100695C40(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101679D98);
  uint64_t v18 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v4);
  char v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1005057FC(&qword_101679DA0);
  uint64_t v7 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v8);
  CFStringRef v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100695B98();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    uint64_t v11 = v18;
    uint64_t v17 = v7;
    if (*(void *)(KeyedDecodingContainer.allKeys.getter() + 16) == 1)
    {
      sub_100695BEC();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v12 = v17;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v3);
    }
    else
    {
      uint64_t v13 = type metadata accessor for DecodingError();
      swift_allocError();
      OSStatus v15 = v14;
      sub_1005057FC(&qword_1016771E0);
      *OSStatus v15 = &type metadata for AASApplicationVariant;
      KeyedDecodingContainer.codingPath.getter();
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v13 - 8) + 104))(v15, enum case for DecodingError.typeMismatch(_:), v13);
      swift_willThrow();
      uint64_t v12 = v17;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v19);
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
}

uint64_t sub_100695F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AASUserInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100695F8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100695FD4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100696010(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100692BD0(a1, v4, v5, v6);
}

uint64_t sub_1006960C8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528488;
  return sub_100692BD0(a1, v4, v5, v6);
}

uint64_t sub_10069617C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1006961BC(uint64_t a1)
{
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  double v6 = v1[4];
  uint64_t v7 = *((void *)v1 + 5);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528488;
  return sub_100691F44(v6, a1, v4, v5, v7);
}

uint64_t sub_100696284()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528D08;
  v3[2] = v2;
  return _swift_task_switch(sub_100691134, v2, 0);
}

ValueMetadata *type metadata accessor for AASDefaultNowProvider()
{
  return &type metadata for AASDefaultNowProvider;
}

void *initializeBufferWithCopyOfBuffer for AASUserInfoDefaultDataStoreProvider(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for AASUserInfoDefaultDataStoreProvider(id *a1)
{
  return swift_release();
}

uint64_t assignWithCopy for AASUserInfoDefaultDataStoreProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

id *assignWithTake for AASUserInfoDefaultDataStoreProvider(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for AASUserInfoDefaultDataStoreProvider()
{
  return &type metadata for AASUserInfoDefaultDataStoreProvider;
}

unsigned char *_s8Freeform21AASApplicationVariantOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1006964F8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AASApplicationVariant.CodingKeys()
{
  return &type metadata for AASApplicationVariant.CodingKeys;
}

ValueMetadata *type metadata accessor for AASApplicationVariant.FreeformCodingKeys()
{
  return &type metadata for AASApplicationVariant.FreeformCodingKeys;
}

unint64_t sub_100696544()
{
  unint64_t result = qword_101679E30;
  if (!qword_101679E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679E30);
  }
  return result;
}

unint64_t sub_10069659C()
{
  unint64_t result = qword_101679E38;
  if (!qword_101679E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679E38);
  }
  return result;
}

unint64_t sub_1006965F4()
{
  unint64_t result = qword_101679E40;
  if (!qword_101679E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679E40);
  }
  return result;
}

unint64_t sub_10069664C()
{
  unint64_t result = qword_101679E48;
  if (!qword_101679E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679E48);
  }
  return result;
}

unint64_t sub_1006966A4()
{
  unint64_t result = qword_101679E50;
  if (!qword_101679E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679E50);
  }
  return result;
}

uint64_t sub_1006966FC(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  *(unsigned char *)(v3 + 16) = 0;
  *(void *)(v3 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v3 + 48) = 0;
  *(unsigned char *)(v3 + 56) = 0;
  *(void *)(v3 + 64) = sub_100A3AAE8((uint64_t)_swiftEmptyArrayStorage);
  *(unsigned char *)(v3 + 72) = 0;
  *(void *)(v3 + 24) = a1;
  if (qword_10166EDC8 != -1) {
    swift_once();
  }
  if (*(void *)(static AASApplicationManager.shared
                 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_trackersCoordinator))
  {
    swift_retain();
    uint64_t v6 = sub_1006CB7A0(0x6472616F62, 0xE500000000000000, a1);
    swift_release();
    *(void *)(v3 + 32) = v6;
    swift_retain();
    swift_release();
    swift_unknownObjectWeakAssign();
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v7 = (void *)static OS_os_log.crlAppAnalytics;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v9 = v7;
    uint64_t v10 = ObjectIdentifier.debugDescription.getter();
    uint64_t v12 = v11;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v10;
    *(void *)(inited + 40) = v12;
    uint64_t v13 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v13, (uint64_t)"Start observe user edit for %@", 30, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    id v14 = [self defaultCenter];
    [v14 addObserver:v3 selector:"boardItemDidInsert:" name:@"CRLBoardItemInsertionEditorDidInsertBoardItemsNotification" object:0];
    swift_release();
    id v15 = a2;
    a2 = v14;
  }
  else
  {
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v15 = (id)static OS_os_log.crlAppAnalytics;
    uint64_t v16 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Failed to chain board tracker", 29, 2, (uint64_t)_swiftEmptyArrayStorage);
  }

  return v3;
}

uint64_t sub_100696A14()
{
  uint64_t v1 = v0;
  if (qword_10166EDC8 != -1) {
    swift_once();
  }
  if (*(void *)(static AASApplicationManager.shared
                 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_trackersCoordinator))
  {
    uint64_t v2 = *(void *)(v0 + 24);
    swift_beginAccess();
    swift_retain();
    sub_10063BF28(v2, (uint64_t)v5);
    swift_endAccess();
    sub_100522F00((uint64_t)v5, &qword_101674260);
    swift_release();
  }
  id v3 = [self defaultCenter];
  [v3 removeObserver:v1];

  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_100696B40()
{
  sub_100696A14();

  return swift_deallocClassInstance();
}

void sub_100696B74()
{
  if (qword_10166EDC8 != -1) {
    swift_once();
  }
  if (*(unsigned char *)(*(void *)(static AASApplicationManager.shared
                            + OBJC_IVAR____TtC8Freeform21AASApplicationManager_userSamplingManager)
                + 16) == 1)
  {
    int v1 = *(unsigned __int8 *)(v0 + 16);
    uint64_t v2 = *(void *)(v0 + 32);
    if (v1 == 1)
    {
      if (v2) {
        goto LABEL_11;
      }
    }
    else if (v2)
    {
LABEL_11:
      swift_retain();
      Tracker.whenSession(block:)();
      swift_release();
    }
    sub_100698238();
    return;
  }
  if (qword_10166FA40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v3 = (id)static OS_os_log.crlAppAnalytics;
  uint64_t v4 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v4, (uint64_t)"Skip startEvents for unselected user", 36, 2, (uint64_t)_swiftEmptyArrayStorage);
}

void sub_100696CFC()
{
  uint64_t v1 = v0;
  if (qword_10166EDC8 != -1) {
    swift_once();
  }
  if (*(unsigned char *)(*(void *)(static AASApplicationManager.shared
                            + OBJC_IVAR____TtC8Freeform21AASApplicationManager_userSamplingManager)
                + 16) == 1)
  {
    int v2 = *(unsigned __int8 *)(v0 + 16);
    uint64_t v3 = *(void *)(v0 + 32);
    if (v2 == 1)
    {
      if (v3)
      {
        swift_retain();
        Tracker.whenSession(block:)();
        swift_release();
      }
      *(unsigned char *)(v1 + 16) = 0;
LABEL_17:
      unint64_t v6 = sub_100A3AAE8((uint64_t)_swiftEmptyArrayStorage);
      swift_beginAccess();
      *(void *)(v1 + 64) = v6;
      swift_bridgeObjectRelease();
      return;
    }
    if (v3)
    {
      swift_retain();
      Tracker.whenSession(block:)();
      swift_release();
    }
    if (*(unsigned char *)(v1 + 56) == 1)
    {
      if (*(void *)(v1 + 32))
      {
        swift_retain();
        Tracker.whenSession(block:)();
        swift_release();
      }
      *(unsigned char *)(v1 + 56) = 0;
      goto LABEL_17;
    }
  }
  else
  {
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v4 = (id)static OS_os_log.crlAppAnalytics;
    uint64_t v5 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v5, (uint64_t)"Skip endEvents for unselected user", 34, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
}

void sub_100696EF4(uint64_t a1, double a2, double a3)
{
  if (qword_10166EDC8 != -1) {
    swift_once();
  }
  if (*(unsigned char *)(*(void *)(static AASApplicationManager.shared
                            + OBJC_IVAR____TtC8Freeform21AASApplicationManager_userSamplingManager)
                + 16) == 1)
  {
    sub_100697560(a1);
    char v7 = *(unsigned char *)(v3 + 72);
    uint64_t v8 = sub_100699560(a2, a3);
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    uint64_t v15 = sub_10069794C();
    if (*(void *)(v3 + 32))
    {
      uint64_t v16 = swift_allocObject();
      *(unsigned char *)(v16 + 16) = v7;
      *(void *)(v16 + 24) = v8;
      *(void *)(v16 + 32) = v10;
      *(void *)(v16 + 40) = v12;
      *(void *)(v16 + 48) = v14;
      *(void *)(v16 + 56) = v15;
      swift_retain();
      Tracker.whenSession(block:)();
      swift_release();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v17 = (id)static OS_os_log.crlAppAnalytics;
    uint64_t v18 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v17, (uint64_t)&_mh_execute_header, v18, (uint64_t)"Skip updateBoardData for unselected user", 40, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
}

uint64_t sub_100697128()
{
  if (qword_10166FA40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.crlAppAnalytics;
  uint64_t v1 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v0, (uint64_t)&_mh_execute_header, v1, (uint64_t)"Update board events data", 24, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_1005057FC(&qword_10167A078);
  uint64_t v11 = type metadata accessor for DataEventTrait();
  uint64_t v2 = *(void *)(v11 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117E810;
  uint64_t v5 = enum case for DataEventTrait.unique(_:);
  unint64_t v6 = *(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 104);
  unsigned int v10 = enum case for DataEventTrait.unique(_:);
  v6(v4 + v3, enum case for DataEventTrait.unique(_:), v11);
  sub_100699C90();
  AccessTracker.push<A>(data:traits:file:line:)();
  swift_bridgeObjectRelease();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10117E810;
  v6(v7 + v3, v5, v11);
  sub_100699CE4();
  AccessTracker.push<A>(data:traits:file:line:)();
  swift_bridgeObjectRelease();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10117E810;
  v6(v8 + v3, v10, v11);
  sub_100699AF8();
  AccessTracker.push<A>(data:traits:file:line:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100697414()
{
  uint64_t v1 = v0;
  if (*(void *)(v0 + 32))
  {
    sub_100699BE8();
    swift_retain();
    Tracker.clearStack<A>(of:includeParentTrackers:)();
    swift_release();
    if (*(void *)(v0 + 32))
    {
      sub_100699C90();
      swift_retain();
      Tracker.clearStack<A>(of:includeParentTrackers:)();
      swift_release();
      if (*(void *)(v0 + 32))
      {
        sub_100699CE4();
        swift_retain();
        Tracker.clearStack<A>(of:includeParentTrackers:)();
        swift_release();
        if (*(void *)(v0 + 32))
        {
          sub_100699AF8();
          swift_retain();
          Tracker.clearStack<A>(of:includeParentTrackers:)();
          swift_release();
        }
      }
    }
  }
  unint64_t v2 = sub_100A3AAE8((uint64_t)_swiftEmptyArrayStorage);
  swift_beginAccess();
  *(void *)(v1 + 64) = v2;
  swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = 0;
  return swift_unknownObjectRelease();
}

uint64_t sub_100697560(uint64_t a1)
{
  unint64_t v2 = sub_100698E30(a1);
  uint64_t v5 = v4;
  if (*(void *)(v1 + 32))
  {
    unint64_t v6 = v2;
    char v7 = v3;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v6;
    *(void *)(v8 + 24) = v5;
    *(unsigned char *)(v8 + 32) = v7 & 1;
    swift_retain();
    Tracker.whenSession(block:)();
    swift_release();
    return swift_release();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100697780()
{
  if (qword_10166FA40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.crlAppAnalytics;
  uint64_t v1 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v0, (uint64_t)&_mh_execute_header, v1, (uint64_t)"Update boardData", 16, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_1005057FC(&qword_10167A078);
  uint64_t v2 = type metadata accessor for DataEventTrait();
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10117E810;
  (*(void (**)(unint64_t, void, uint64_t))(v3 + 104))(v5 + v4, enum case for DataEventTrait.unique(_:), v2);
  sub_100699BE8();
  AccessTracker.push<A>(data:traits:file:line:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10069794C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v10 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v8 << 6))
  {
    char v15 = *(unsigned char *)(*(void *)(v1 + 48) + i);
    uint64_t v16 = *(void *)(*(void *)(v1 + 56) + 8 * i);
    if (v16 > 100)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      LODWORD(v16) = 101;
      if (result) {
        goto LABEL_21;
      }
LABEL_27:
      uint64_t result = (uint64_t)sub_100F63AF0(0, *((void *)v9 + 2) + 1, 1, v9);
      uint64_t v9 = (double *)result;
      goto LABEL_21;
    }
    if (v16 > 10)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      LODWORD(v16) = 100;
      if (result) {
        goto LABEL_21;
      }
      goto LABEL_27;
    }
    if (v16 < 6)
    {
      if (v16 < 3)
      {
        if (v16 < 0)
        {
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          LODWORD(v16) = -1;
          if ((result & 1) == 0) {
            goto LABEL_27;
          }
        }
        else
        {
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0) {
            goto LABEL_27;
          }
        }
      }
      else
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        LODWORD(v16) = 5;
        if ((result & 1) == 0) {
          goto LABEL_27;
        }
      }
    }
    else
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      LODWORD(v16) = 10;
      if ((result & 1) == 0) {
        goto LABEL_27;
      }
    }
LABEL_21:
    unint64_t v18 = *((void *)v9 + 2);
    unint64_t v17 = *((void *)v9 + 3);
    if (v18 >= v17 >> 1)
    {
      uint64_t result = (uint64_t)sub_100F63AF0((double *)(v17 > 1), v18 + 1, 1, v9);
      uint64_t v9 = (double *)result;
    }
    *((void *)v9 + 2) = v18 + 1;
    uint64_t v19 = &v9[v18];
    *((unsigned char *)v19 + 32) = v15;
    *((_DWORD *)v19 + 9) = v16;
    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v12 >= v6) {
      goto LABEL_39;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v12);
    ++v8;
    if (!v13)
    {
      int64_t v8 = v12 + 1;
      if (v12 + 1 >= v6) {
        goto LABEL_39;
      }
      unint64_t v13 = *(void *)(v2 + 8 * v8);
      if (!v13)
      {
        int64_t v8 = v12 + 2;
        if (v12 + 2 >= v6) {
          goto LABEL_39;
        }
        unint64_t v13 = *(void *)(v2 + 8 * v8);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v5 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v6)
  {
LABEL_39:
    swift_release();
    return (uint64_t)v9;
  }
  unint64_t v13 = *(void *)(v2 + 8 * v14);
  if (v13)
  {
    int64_t v8 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_39;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100697B9C()
{
  if (qword_10166FA40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.crlAppAnalytics;
  uint64_t v1 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v0, (uint64_t)&_mh_execute_header, v1, (uint64_t)"Start boardCreateEvent", 22, 2, (uint64_t)_swiftEmptyArrayStorage);

  type metadata accessor for BoardCreateEvent(0);
  sub_100699D94(&qword_10167A0B0, (void (*)(uint64_t))type metadata accessor for BoardCreateEvent);
  return AccessTracker.time<A>(_:submitAndRestartWithSession:)();
}

uint64_t sub_100697CA4()
{
  if (qword_10166FA40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.crlAppAnalytics;
  uint64_t v1 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v0, (uint64_t)&_mh_execute_header, v1, (uint64_t)"Start boardViewEvent", 20, 2, (uint64_t)_swiftEmptyArrayStorage);

  type metadata accessor for BoardViewEvent(0);
  sub_100699D94(&qword_10167A0B8, (void (*)(uint64_t))type metadata accessor for BoardViewEvent);
  return AccessTracker.time<A>(_:submitAndRestartWithSession:)();
}

uint64_t sub_100697DAC()
{
  if (qword_10166FA40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.crlAppAnalytics;
  uint64_t v1 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v0, (uint64_t)&_mh_execute_header, v1, (uint64_t)"Start boardEditEvent", 20, 2, (uint64_t)_swiftEmptyArrayStorage);

  type metadata accessor for BoardEditEvent(0);
  sub_100699D94(&qword_10167A088, (void (*)(uint64_t))type metadata accessor for BoardEditEvent);
  return AccessTracker.time<A>(_:submitAndRestartWithSession:)();
}

uint64_t sub_100697EB4()
{
  if (qword_10166FA40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.crlAppAnalytics;
  uint64_t v1 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v0, (uint64_t)&_mh_execute_header, v1, (uint64_t)"Submit boardCreateEvent", 23, 2, (uint64_t)_swiftEmptyArrayStorage);

  type metadata accessor for BoardCreateEvent(0);
  sub_100699D94(&qword_10167A0B0, (void (*)(uint64_t))type metadata accessor for BoardCreateEvent);
  memset(v3, 0, sizeof(v3));
  AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)();
  return sub_100522F00((uint64_t)v3, &qword_101672BF0);
}

uint64_t sub_100697FE0()
{
  if (qword_10166FA40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.crlAppAnalytics;
  uint64_t v1 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v0, (uint64_t)&_mh_execute_header, v1, (uint64_t)"Submit boardViewEvent", 21, 2, (uint64_t)_swiftEmptyArrayStorage);

  type metadata accessor for BoardViewEvent(0);
  sub_100699D94(&qword_10167A0B8, (void (*)(uint64_t))type metadata accessor for BoardViewEvent);
  memset(v3, 0, sizeof(v3));
  AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)();
  return sub_100522F00((uint64_t)v3, &qword_101672BF0);
}

uint64_t sub_10069810C()
{
  if (qword_10166FA40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.crlAppAnalytics;
  uint64_t v1 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v0, (uint64_t)&_mh_execute_header, v1, (uint64_t)"Submit boardEditEvent", 21, 2, (uint64_t)_swiftEmptyArrayStorage);

  type metadata accessor for BoardEditEvent(0);
  sub_100699D94(&qword_10167A088, (void (*)(uint64_t))type metadata accessor for BoardEditEvent);
  memset(v3, 0, sizeof(v3));
  AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)();
  return sub_100522F00((uint64_t)v3, &qword_101672BF0);
}

void sub_100698238()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    id v3 = [self defaultCenter];
    if (qword_10166F050 != -1) {
      swift_once();
    }
    uint64_t v4 = qword_10171A7E0;
    uint64_t v5 = swift_allocObject();
    swift_weakInit();
    v11[4] = sub_100699B84;
    v11[5] = v5;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = *(void *)"";
    _OWORD v11[2] = sub_1005E5680;
    v11[3] = &unk_10150ECF0;
    int64_t v6 = _Block_copy(v11);
    id v7 = v2;
    swift_release();
    id v8 = [v3 addObserverForName:v4 object:v7 queue:0 usingBlock:v6];

    _Block_release(v6);
    *(void *)(v0 + 48) = v8;
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v9 = (id)static OS_os_log.crlAppAnalytics;
    uint64_t v10 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Start observe user edit failed: commandController is nil", 56, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
}

void sub_100698450()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    if (*(unsigned char *)(Strong + 16))
    {
      if (qword_10166FA40 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v2 = (id)static OS_os_log.crlAppAnalytics;
      uint64_t v3 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"Newly created board, skip boardEditEvent", 40, 2, (uint64_t)_swiftEmptyArrayStorage);
    }
    else
    {
      *(unsigned char *)(Strong + 56) = 1;
      if (*(void *)(Strong + 32))
      {
        swift_retain();
        Tracker.whenSession(block:)();
        swift_release();
      }
    }
    uint64_t v6 = *(void *)(v1 + 48);
    if (v6)
    {
      id v7 = self;
      swift_unknownObjectRetain();
      id v8 = [v7 defaultCenter];
      [v8 removeObserver:v6];

      swift_unknownObjectRelease();
      *(void *)(v1 + 48) = 0;
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v4 = (id)static OS_os_log.crlAppAnalytics;
    uint64_t v5 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v5, (uint64_t)"BoardTracker released before user edit", 38, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
}

void sub_100698684(char *isUniquelyReferenced_nonNull_native)
{
  id v2 = v1;
  if (qword_10166EDC8 != -1) {
LABEL_47:
  }
    swift_once();
  if (*(unsigned char *)(*(void *)(static AASApplicationManager.shared
                            + OBJC_IVAR____TtC8Freeform21AASApplicationManager_userSamplingManager)
                + 16) != 1)
  {
    if (qword_10166FA40 != -1) {
      goto LABEL_49;
    }
    goto LABEL_8;
  }
  id v4 = [isUniquelyReferenced_nonNull_native userInfo];
  if (!v4)
  {
    long long v46 = 0u;
    long long v47 = 0u;
LABEL_40:
    sub_100522F00((uint64_t)&v46, &qword_101672BF0);
    goto LABEL_41;
  }
  uint64_t v5 = v4;
  uint64_t v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_10095647C((uint64_t)v45), (v8 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v6 + 56) + 32 * v7, (uint64_t)&v46);
  }
  else
  {
    long long v46 = 0u;
    long long v47 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)v45);
  if (!*((void *)&v47 + 1)) {
    goto LABEL_40;
  }
  sub_1005057FC(&qword_10167ADC0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_41:
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v9 = (id)static OS_os_log.crlAppAnalytics;
    uint64_t v10 = static os_log_type_t.default.getter();
    uint64_t v11 = "Skip adding drawables to analytics, nil boardItem";
    uint64_t v12 = (uint64_t)v9;
    uint64_t v13 = 49;
    goto LABEL_44;
  }
  uint64_t v14 = v45[0];
  unint64_t v41 = v2;
  if (v45[0] >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    if (v15) {
      goto LABEL_14;
    }
LABEL_51:
    swift_bridgeObjectRelease_n();
    uint64_t v40 = sub_10069794C();
    if (*((void *)v41 + 4))
    {
      *(void *)(swift_allocObject() + 16) = v40;
      swift_retain();
      Tracker.whenSession(block:)();
      swift_release();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return;
  }
  uint64_t v15 = *(void *)((v45[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v15) {
    goto LABEL_51;
  }
LABEL_14:
  if (v15 < 1)
  {
    __break(1u);
LABEL_55:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v43 = v14 & 0xC000000000000001;
  uint64_t v16 = v2 + 64;
  swift_beginAccess();
  uint64_t v17 = 0;
  uint64_t v42 = v14;
  while (1)
  {
    if (v43) {
      uint64_t v19 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v19 = *(id *)(v14 + 8 * v17 + 32);
    }
    unint64_t v20 = v19;
    unsigned __int8 v21 = sub_1006996DC(v19);
    uint64_t v22 = *(void *)v16;
    if (*(void *)(*(void *)v16 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v23 = sub_100956CFC(v21);
      if (v24) {
        char isUniquelyReferenced_nonNull_native = *(char **)(*(void *)(v22 + 56) + 8 * v23);
      }
      else {
        char isUniquelyReferenced_nonNull_native = 0;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      char isUniquelyReferenced_nonNull_native = 0;
    }
    id v2 = isUniquelyReferenced_nonNull_native + 1;
    if (__OFADD__(isUniquelyReferenced_nonNull_native, 1))
    {
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    uint64_t v25 = v15;
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = *(void *)v16;
    uint64_t v44 = *(void **)v16;
    *(void *)uint64_t v16 = 0x8000000000000000;
    unsigned __int8 v27 = v21;
    unint64_t v29 = sub_100956CFC(v21);
    uint64_t v30 = *(void *)(v26 + 16);
    BOOL v31 = (v28 & 1) == 0;
    uint64_t v32 = v30 + v31;
    if (__OFADD__(v30, v31)) {
      goto LABEL_46;
    }
    char v33 = v28;
    if (*(void *)(v26 + 24) < v32) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v36 = v44;
      if ((v28 & 1) == 0) {
        goto LABEL_35;
      }
    }
    else
    {
      sub_100980294();
      uint64_t v36 = v44;
      if ((v33 & 1) == 0) {
        goto LABEL_35;
      }
    }
LABEL_16:
    *(void *)(v36[7] + 8 * v29) = v2;
LABEL_17:
    ++v17;
    *(void *)uint64_t v16 = v36;
    swift_bridgeObjectRelease();
    swift_endAccess();

    uint64_t v15 = v25;
    BOOL v18 = v25 == v17;
    uint64_t v14 = v42;
    if (v18) {
      goto LABEL_51;
    }
  }
  sub_1009674B8(v32, (char)isUniquelyReferenced_nonNull_native);
  unint64_t v34 = sub_100956CFC(v27);
  if ((v33 & 1) != (v35 & 1)) {
    goto LABEL_55;
  }
  unint64_t v29 = v34;
  uint64_t v36 = v44;
  if (v33) {
    goto LABEL_16;
  }
LABEL_35:
  v36[(v29 >> 6) + 8] |= 1 << v29;
  *(unsigned char *)(v36[6] + v29) = v27;
  *(void *)(v36[7] + 8 * v29) = v2;
  uint64_t v37 = v36[2];
  BOOL v38 = __OFADD__(v37, 1);
  uint64_t v39 = v37 + 1;
  if (!v38)
  {
    v36[2] = v39;
    goto LABEL_17;
  }
  __break(1u);
LABEL_49:
  swift_once();
LABEL_8:
  swift_beginAccess();
  id v9 = (id)static OS_os_log.crlAppAnalytics;
  uint64_t v10 = static os_log_type_t.default.getter();
  uint64_t v11 = "Skip  adding drawables to analytics for unselected user";
  uint64_t v12 = (uint64_t)v9;
  uint64_t v13 = 55;
LABEL_44:
  sub_100BAC898(v12, (uint64_t)&_mh_execute_header, v10, (uint64_t)v11, v13, 2, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_100698C00()
{
  if (qword_10166FA40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.crlAppAnalytics;
  uint64_t v1 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v0, (uint64_t)&_mh_execute_header, v1, (uint64_t)"Update drawableAddSummaryData", 29, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_1005057FC(&qword_10167A078);
  uint64_t v2 = type metadata accessor for DataEventTrait();
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10117E810;
  (*(void (**)(unint64_t, void, uint64_t))(v3 + 104))(v5 + v4, enum case for DataEventTrait.unique(_:), v2);
  sub_100699AF8();
  AccessTracker.push<A>(data:traits:file:line:)();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for CRLAASBoardTracker()
{
  return self;
}

char *sub_100698E30(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v6 - 8, v7);
  id v9 = (char *)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v68 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  uint64_t v64 = (char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v63 = (uint64_t)v59 - v15;
  __chkstk_darwin(v16, v17);
  uint64_t v65 = (char *)v59 - v18;
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)v59 - v21;
  uint64_t v23 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v23 - 8, v24);
  uint64_t v62 = (uint64_t)v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v27);
  unint64_t v29 = (char *)v59 - v28;
  uint64_t v30 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v31 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100530898(v31, (uint64_t)v9);
  swift_retain();
  uint64_t v61 = sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_1005387C0((uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v66 = a1;
  uint64_t v32 = (uint64_t *)(*(void *)(a1 + v30) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v33 = *v32;
  unint64_t v34 = v32[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v22, v33, v34, (uint64_t)v29);
  char v35 = &v29[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
  uint64_t v36 = *(void *)v35;
  uint64_t v37 = *((void *)v35 + 1);
  swift_bridgeObjectRetain();
  sub_1005387C0((uint64_t)v29, type metadata accessor for CRLBoardIdentifier);
  if (v36 || v37 != 0xE000000000000000)
  {
    int v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    int v38 = 1;
  }
  if (qword_10166EDC8 != -1) {
    swift_once();
  }
  uint64_t v39 = static AASApplicationManager.shared + OBJC_IVAR____TtC8Freeform21AASApplicationManager_userInfo;
  swift_beginAccess();
  uint64_t v40 = type metadata accessor for AASUserInfo();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v39, 1, v40))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v5, 1, 1, v10);
LABEL_10:
    sub_100522F00((uint64_t)v5, (uint64_t *)&unk_101674520);
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v45 = (id)static OS_os_log.crlAppAnalytics;
    uint64_t v46 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v45, (uint64_t)&_mh_execute_header, v46, (uint64_t)"Failed to retrieve UserID while generating BoardData", 52, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_100699C3C();
    swift_allocError();
    swift_willThrow();
    return v9;
  }
  uint64_t v41 = v39 + *(int *)(v40 + 20);
  uint64_t v42 = v10;
  uint64_t v43 = v68;
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
  v44(v5, v41, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v5, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v5, 1, v10) == 1) {
    goto LABEL_10;
  }
  v59[1] = v38;
  uint64_t v48 = v65;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v65, v5, v10);
  uint64_t v49 = v66;
  uint64_t v50 = *(void *)(v66 + v30);
  uint64_t v60 = v44;
  uint64_t v51 = v50 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100530898(v51, (uint64_t)v9);
  swift_retain();
  CRRegister.wrappedValue.getter();
  sub_1005387C0((uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v52 = (uint64_t *)(*(void *)(v49 + v30) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v54 = *v52;
  unint64_t v53 = v52[1];
  swift_bridgeObjectRetain();
  uint64_t v55 = v62;
  sub_100753370((uint64_t)v22, v54, v53, v62);
  id v9 = v64;
  v60(v64, v55, v10);
  sub_1005387C0(v55, type metadata accessor for CRLBoardIdentifier);
  uint64_t v56 = v63;
  uint64_t v57 = v67;
  UUID.aas_hashSHA256(with:)(v63);
  uint64_t v58 = *(void (**)(char *, uint64_t))(v68 + 8);
  v58(v9, v42);
  if (!v57)
  {
    id v9 = (char *)UUID.uuidString.getter();
    v58((char *)v56, v42);
  }
  v58(v48, v42);
  return v9;
}

uint64_t sub_100699560(double a1, double a2)
{
  id v4 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v4 setUsesSignificantDigits:1];
  [v4 setMinimumSignificantDigits:2];
  [v4 setMaximumSignificantDigits:2];
  id v5 = [objc_allocWithZone((Class)NSNumber) initWithDouble:a1];
  id v6 = [v4 stringFromNumber:v5];

  if (v6)
  {
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v7 = 12589;
  }
  id v8 = [objc_allocWithZone((Class)NSNumber) initWithDouble:a2];
  id v9 = [v4 stringFromNumber:v8];

  if (v9)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
  }
  return v7;
}

uint64_t sub_1006996DC(void *a1)
{
  uint64_t v2 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xC8))();
  if (v3)
  {
    uint64_t v4 = 2;
    switch(v2)
    {
      case 1:
      case 2:
      case 8:
      case 9:
        type metadata accessor for CRLWPShapeItem();
        uint64_t v5 = swift_dynamicCastClass();
        if (!v5) {
          goto LABEL_6;
        }
        uint64_t v6 = v5;
        uint64_t v7 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
        id v8 = *(uint64_t (**)(uint64_t))(**(void **)(v5 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                               + 288);
        id v9 = a1;
        uint64_t v10 = swift_retain();
        uint64_t v11 = (void *)v8(v10);
        swift_release();
        unsigned int v12 = [v11 widthValid];

        if (v12)
        {
          uint64_t v13 = *(uint64_t (**)(uint64_t))(**(void **)(v6 + v7) + 288);
          uint64_t v14 = swift_retain();
          uint64_t v15 = (void *)v13(v14);
          swift_release();
          unsigned __int8 v16 = [v15 heightValid];

          if (v16) {
LABEL_6:
          }
            uint64_t v4 = 1;
          else {
            uint64_t v4 = 0;
          }
        }
        else
        {

          uint64_t v4 = 0;
        }
        break;
      case 3:
      case 4:
        break;
      case 5:
        uint64_t v4 = 3;
        break;
      case 10:
        uint64_t v4 = 4;
        break;
      default:
        goto LABEL_7;
    }
  }
  else
  {
LABEL_7:
    uint64_t v4 = 5;
  }
  if (qword_10166FA40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v17 = (void *)static OS_os_log.crlAppAnalytics;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  uint64_t v19 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0xD0);
  id v20 = v17;
  uint64_t v21 = v19();
  uint64_t v23 = v22;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v24 = sub_100528BE4();
  *(void *)(inited + 32) = v21;
  *(void *)(inited + 64) = v24;
  *(void *)(inited + 40) = v23;
  unint64_t v25 = 0xE400000000000000;
  uint64_t v26 = 1954047348;
  switch((int)v4)
  {
    case 1:
      unint64_t v25 = 0xE500000000000000;
      uint64_t v26 = 0x6570616873;
      break;
    case 2:
      unint64_t v25 = 0xE500000000000000;
      uint64_t v26 = 0x616964656DLL;
      break;
    case 3:
      unint64_t v25 = 0xE800000000000000;
      uint64_t v26 = 0x746E656D75636F64;
      break;
    case 4:
      unint64_t v25 = 0xE700000000000000;
      uint64_t v26 = 0x746E656D6D6F63;
      break;
    case 5:
      unint64_t v25 = 0xE700000000000000;
      uint64_t v26 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v24;
  *(void *)(inited + 72) = v26;
  *(void *)(inited + 80) = v25;
  uint64_t v27 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v20, (uint64_t)&_mh_execute_header, v27, (uint64_t)"User inserted drawables: %@ analytics type: %@", 46, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  return v4;
}

uint64_t sub_100699AB8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100699AF0()
{
  return sub_100698C00();
}

unint64_t sub_100699AF8()
{
  unint64_t result = qword_10167A080;
  if (!qword_10167A080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167A080);
  }
  return result;
}

uint64_t sub_100699B4C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100699B84()
{
}

uint64_t sub_100699B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100699B9C()
{
  return swift_release();
}

uint64_t sub_100699BA4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_100699BDC()
{
  return sub_100697780();
}

unint64_t sub_100699BE8()
{
  unint64_t result = qword_10167A090;
  if (!qword_10167A090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167A090);
  }
  return result;
}

unint64_t sub_100699C3C()
{
  unint64_t result = qword_10167A098;
  if (!qword_10167A098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167A098);
  }
  return result;
}

unint64_t sub_100699C90()
{
  unint64_t result = qword_10167A0A0;
  if (!qword_10167A0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167A0A0);
  }
  return result;
}

unint64_t sub_100699CE4()
{
  unint64_t result = qword_10167A0A8;
  if (!qword_10167A0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167A0A8);
  }
  return result;
}

uint64_t sub_100699D38()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100699D80()
{
  return sub_100697128();
}

uint64_t sub_100699D94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLAASBoardTracker.DataGenerationError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100699E78);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLAASBoardTracker.DataGenerationError()
{
  return &type metadata for CRLAASBoardTracker.DataGenerationError;
}

unint64_t sub_100699EB4()
{
  unint64_t result = qword_10167A0C0;
  if (!qword_10167A0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167A0C0);
  }
  return result;
}

unint64_t sub_100699F0C()
{
  unint64_t result = qword_10167A0C8;
  if (!qword_10167A0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167A0C8);
  }
  return result;
}

unint64_t sub_100699F64()
{
  unint64_t result = qword_10167A0D0;
  if (!qword_10167A0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167A0D0);
  }
  return result;
}

uint64_t sub_100699FB8()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100699FEC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10069A03C()
{
  unint64_t result = qword_10167A0D8;
  if (!qword_10167A0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167A0D8);
  }
  return result;
}

uint64_t sub_10069A090@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for InputConnectionBehavior();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_101673B38);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_101678010);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (char *)v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005057FC(&qword_101678018);
  uint64_t v19 = type metadata accessor for LocalizedStringResource();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  uint64_t v20 = type metadata accessor for String.IntentInputOptions();
  v23[3] = 0;
  v23[4] = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v14, 1, 1, v20);
  uint64_t v21 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v10, 1, 1, v21);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for InputConnectionBehavior.default(_:), v2);
  *a1 = IntentParameter<>.init(description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  sub_1005057FC(&qword_101673B50);
  v23[1] = 0xD00000000000001FLL;
  v23[2] = 0x800000010123B260;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  a1[1] = result;
  a1[5] = (uint64_t)&type metadata for CRLCreateBoardIntentPerformer;
  a1[6] = (uint64_t)&off_10151D618;
  return result;
}

uint64_t sub_10069A3B8(uint64_t a1)
{
  v2[69] = v1;
  v2[68] = a1;
  type metadata accessor for LocalizedStringResource();
  v2[70] = swift_task_alloc();
  sub_1005057FC(&qword_101673B38);
  v2[71] = swift_task_alloc();
  v2[72] = type metadata accessor for CRLBoardEntity();
  v2[73] = swift_task_alloc();
  v2[74] = swift_task_alloc();
  v2[75] = swift_task_alloc();
  v2[76] = swift_task_alloc();
  return _swift_task_switch(sub_10069A4D4, 0, 0);
}

uint64_t sub_10069A4D4()
{
  sub_10050F848((void *)(v0[69] + 16), *(void *)(v0[69] + 40));
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = v0[60];
  uint64_t v2 = v0[61];
  v0[77] = v2;
  AppDependency.wrappedValue.getter();
  v0[38] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[39] = &off_10152F800;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[78] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10069A5D0;
  uint64_t v4 = v0[76];
  return sub_1009D5668(v4, v1, v2, (uint64_t)(v0 + 35));
}

uint64_t sub_10069A5D0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 632) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    uint64_t v3 = sub_10069A88C;
  }
  else
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v2 + 280);
    uint64_t v3 = sub_10069A700;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10069A700()
{
  uint64_t v1 = v0[76];
  uint64_t v2 = v0[75];
  uint64_t v3 = v0[74];
  uint64_t v4 = v0[73];
  sub_10057B3EC(v1, v2);
  uint64_t v5 = sub_1009D09EC();
  sub_10057B3EC(v2, v3);
  sub_10057B3EC(v3, v4);
  IntentParameter.wrappedValue.setter();
  sub_1005F6324(v3);
  sub_1005F6324(v2);
  v0[67] = v5;
  sub_10069B23C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  sub_1005F6380();
  static IntentResult.result<A, B>(value:opensIntent:)();
  swift_release();
  sub_1005F6324(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_10069A88C()
{
  uint64_t v1 = *(void *)(v0 + 632);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 280);
  *(void *)(v0 + 528) = v1;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    uint64_t v2 = *(void *)(v0 + 416);
    uint64_t v3 = *(void *)(v0 + 424);
    unsigned __int8 v4 = *(unsigned char *)(v0 + 432);
    if (qword_10166FB50 != -1) {
      swift_once();
    }
    uint64_t v33 = *(void *)(v0 + 568);
    swift_beginAccess();
    uint64_t v5 = (void *)static OS_os_log.appIntents;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117DF40;
    id v32 = v5;
    IntentParameter.wrappedValue.getter();
    *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 464);
    sub_1005057FC(&qword_101674580);
    uint64_t v7 = String.init<A>(describing:)();
    uint64_t v9 = v8;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v10 = sub_100528BE4();
    *(void *)(inited + 64) = v10;
    *(void *)(inited + 32) = v7;
    *(void *)(inited + 40) = v9;
    sub_100651F78(v2, v3, v4);
    uint64_t v11 = sub_1009F4260(v2, v3, v4);
    uint64_t v13 = v12;
    sub_100651F90(v2, v3, v4);
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v10;
    *(void *)(inited + 72) = v11;
    *(void *)(inited + 80) = v13;
    *(void *)(v0 + 440) = v2;
    *(void *)(v0 + 448) = v3;
    *(unsigned char *)(v0 + 456) = v4;
    sub_100651F78(v2, v3, v4);
    uint64_t v14 = String.init<A>(reflecting:)();
    *(void *)(inited + 136) = &type metadata for String;
    *(void *)(inited + 144) = v10;
    *(void *)(inited + 112) = v14;
    *(void *)(inited + 120) = v15;
    uint64_t v16 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v32, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Invalid name for board provided: %@ - %{public}@ <%@>", 53, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    IntentParameter.projectedValue.getter();
    sub_1006F6830(v2, v3, v4);
    sub_100651F90(v2, v3, v4);
    IntentDialog.init(_:)();
    uint64_t v17 = type metadata accessor for IntentDialog();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v33, 0, 1, v17);
    type metadata accessor for AppIntentError();
    sub_10069B23C(&qword_101675F98, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    IntentParameter.needsValueError(_:)();
    swift_release();
    sub_1005F641C(v33);
    swift_willThrow();
  }
  else
  {
    swift_errorRelease();
    if (qword_10166FB50 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v18 = (void *)static OS_os_log.appIntents;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v19 = swift_initStackObject();
    *(_OWORD *)(v19 + 16) = xmmword_10117D8C0;
    swift_getErrorValue();
    uint64_t v20 = *(void *)(v0 + 376);
    uint64_t v21 = *(void *)(v0 + 384);
    id v22 = v18;
    uint64_t v23 = Error.publicDescription.getter(v20, v21);
    uint64_t v25 = v24;
    *(void *)(v19 + 56) = &type metadata for String;
    unint64_t v26 = sub_100528BE4();
    *(void *)(v19 + 64) = v26;
    *(void *)(v19 + 32) = v23;
    *(void *)(v19 + 40) = v25;
    swift_getErrorValue();
    uint64_t v27 = Error.fullDescription.getter(*(void *)(v0 + 400));
    *(void *)(v19 + 96) = &type metadata for String;
    *(void *)(v19 + 104) = v26;
    *(void *)(v19 + 72) = v27;
    *(void *)(v19 + 80) = v28;
    uint64_t v29 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v22, (uint64_t)&_mh_execute_header, v29, (uint64_t)"Error creating a board: %{public}@ <%@>", 39, 2, v19);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    type metadata accessor for AppIntentError();
    sub_10069B23C(&qword_101675F98, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    static AppIntentError.Unrecoverable.unknown.getter();
    swift_willThrow();
  }
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_10069AE54(uint64_t a1)
{
  unint64_t v2 = sub_10069B284();

  return static AssistantSchemaIntent.title.getter(a1, v2);
}

uint64_t sub_10069AEA0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528488;
  return sub_10069A3B8(a1);
}

uint64_t sub_10069AF3C(uint64_t a1)
{
  unint64_t v2 = sub_10069A03C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_10069AF7C()
{
  unint64_t result = qword_10167A0E8;
  if (!qword_10167A0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10167A0E8);
  }
  return result;
}

uint64_t destroy for CRLCreateBoardIntent(uint64_t a1)
{
  swift_release();
  swift_release();

  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 16);
}

uint64_t initializeWithCopy for CRLCreateBoardIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2 + 16;
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  swift_retain();
  v7(a1 + 16, v4, v6);
  return a1;
}

void *assignWithCopy for CRLCreateBoardIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  sub_10054BB2C(a1 + 2, a2 + 2);
  return a1;
}

__n128 initializeWithTake for CRLLineEndData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CRLCreateBoardIntent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLCreateBoardIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLCreateBoardIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCreateBoardIntent()
{
  return &type metadata for CRLCreateBoardIntent;
}

uint64_t sub_10069B23C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10069B284()
{
  unint64_t result = qword_10167A0F8;
  if (!qword_10167A0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167A0F8);
  }
  return result;
}

uint64_t sub_10069B2D8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100528D08;
  return sub_10069B368();
}

uint64_t sub_10069B368()
{
  *(void *)(v1 + 200) = v0;
  sub_1005057FC(&qword_101672BB0);
  *(void *)(v1 + 208) = swift_task_alloc();
  return _swift_task_switch(sub_10069B3FC, v0, 0);
}

uint64_t sub_10069B3FC()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = *(void *)(v1 + 136);
  if (v2) {
    goto LABEL_3;
  }
  uint64_t v3 = v0[26];
  uint64_t v4 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v5;
  *(void *)(v1 + 136) = sub_1006D92C0(v3, (uint64_t)&unk_10167A248, (uint64_t)v6);
  swift_release();
  uint64_t v2 = *(void *)(v1 + 136);
  if (v2)
  {
LABEL_3:
    v0[27] = v2;
    swift_retain();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[28] = v7;
    uint64_t v8 = sub_1005057FC((uint64_t *)&unk_10169A2A0);
    uint64_t v9 = sub_1005057FC(&qword_101672BD0);
    v0[29] = v9;
    *uint64_t v7 = v0;
    v7[1] = sub_10069B5E8;
    return Task.value.getter(v0 + 2, v2, v8, v9, &protocol self-conformance witness table for Error);
  }
  else
  {
    swift_task_dealloc();
    unint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_10069B5E8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 200);
  if (v0) {
    uint64_t v4 = sub_10069B7E4;
  }
  else {
    uint64_t v4 = sub_10069B714;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10069B714()
{
  uint64_t v1 = *(void *)(v0 + 200);
  swift_release();
  uint64_t v2 = *(void *)(v0 + 80);
  char v3 = *(unsigned char *)(v0 + 88);
  uint64_t v4 = *(void *)(v1 + 152);
  uint64_t v5 = *(void *)(v1 + 160);
  uint64_t v6 = *(void *)(v1 + 168);
  uint64_t v7 = *(void *)(v1 + 176);
  uint64_t v8 = *(void *)(v1 + 184);
  uint64_t v9 = *(void *)(v1 + 192);
  unint64_t v10 = *(void *)(v1 + 200);
  uint64_t v11 = *(void *)(v1 + 208);
  unint64_t v12 = *(void *)(v1 + 216);
  char v13 = *(unsigned char *)(v1 + 224);
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 48);
  long long v16 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v1 + 152) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 168) = v14;
  *(_OWORD *)(v1 + 184) = v15;
  *(_OWORD *)(v1 + 200) = v16;
  *(void *)(v1 + 216) = v2;
  *(unsigned char *)(v1 + 224) = v3;
  sub_10069C030(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v17 = *(void *)(v0 + 200);
  *(unsigned char *)(v17 + 144) = 1;
  *(void *)(v17 + 136) = 0;
  swift_release();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_10069B7E4()
{
  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[30];
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlError;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  v0[24] = v1;
  id v4 = v2;
  swift_errorRetain();
  uint64_t v5 = String.init<A>(describing:)();
  uint64_t v7 = v6;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  uint64_t v8 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Error trying to fetch view state from database. %@", 50, 2, inited);
  swift_release();
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v9 = v0[25];
  *(unsigned char *)(v9 + 144) = 1;
  *(void *)(v9 + 136) = 0;
  swift_release();
  swift_task_dealloc();
  unint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_10069B9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 120) = a1;
  *(void *)(v4 + 128) = a4;
  return _swift_task_switch(sub_10069B9C4, 0, 0);
}

uint64_t sub_10069B9C4()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[17] = Strong;
  if (Strong)
  {
    return _swift_task_switch(sub_10069BAA0, Strong, 0);
  }
  else
  {
    uint64_t v2 = v0[15];
    *(void *)(v2 + 64) = 0;
    *(_OWORD *)(v2 + 32) = 0u;
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
    *(unsigned char *)(v2 + 72) = 2;
    char v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
}

uint64_t sub_10069BAA0()
{
  uint64_t v1 = *(void **)(v0[17] + 112);
  v0[18] = v1;
  v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[19] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10069BB5C;
  return sub_100CFB604((uint64_t)(v0 + 2));
}

uint64_t sub_10069BB5C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    char v3 = sub_10069BCF0;
  }
  else
  {

    char v3 = sub_10069BC78;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10069BC78()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_release();
  sub_10069C17C(v0 + 16, v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10069BCF0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10069BD5C()
{
  swift_release();
  sub_10069C030(*(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 184), *(void *)(v0 + 192), *(void *)(v0 + 200), *(void *)(v0 + 208), *(void *)(v0 + 216), *(unsigned char *)(v0 + 224));
  swift_defaultActor_destroy();

  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for CRLViewStateRestorationHelper()
{
  return self;
}

uint64_t sub_10069BDFC(void *a1, void *a2, void *a3)
{
  uint64_t v7 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v7 - 8, v8);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  *(unsigned char *)(v3 + 144) = 0;
  *(_OWORD *)(v3 + 152) = 0u;
  *(_OWORD *)(v3 + 168) = 0u;
  *(_OWORD *)(v3 + 184) = 0u;
  *(_OWORD *)(v3 + 200) = 0u;
  *(void *)(v3 + 216) = 0;
  *(unsigned char *)(v3 + 224) = 2;
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = a2;
  *(void *)(v3 + 128) = a3;
  *(void *)(v3 + 136) = 0;
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = v3;
  id v13 = a1;
  id v14 = a2;
  id v15 = a3;
  swift_retain();
  sub_100B107F4((uint64_t)v10, (uint64_t)&unk_10167A238, (uint64_t)v12);
  swift_release();
  sub_1005E52F0((uint64_t)v10);
  return v3;
}

uint64_t sub_10069BF5C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100528488;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100528D08;
  return sub_10069B368();
}

void sub_10069C030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, char a10)
{
  if (a10 != 2)
  {
    sub_100514260(a6, a7);
    sub_100514260(a8, a9);
  }
}

uint64_t sub_10069C090()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10069C0CC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_100528488;
  v5[15] = a1;
  unsigned char v5[16] = v4;
  return _swift_task_switch(sub_10069B9C4, 0, 0);
}

uint64_t sub_10069C17C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_10169A2A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_10069C248()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v2 = Strong;
  if (Strong)
  {
    id v3 = [Strong layoutForInfo:*(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage)];

    if (v3)
    {
      type metadata accessor for CRLWPLayout();
      uint64_t v4 = (void *)swift_dynamicCastClass();
      uint64_t v2 = v4;
      if (v4)
      {
        if (([v4 layoutIsValid] & 1) == 0) {
          [v2 validate];
        }
      }
      else
      {
      }
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

char *sub_10069C344()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
  uint64_t v2 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange);
  if (!v2) {
    return 0;
  }
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_selectedMarkedTextRangeFromOS);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = *(void *)&v2[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  id v5 = objc_allocWithZone((Class)type metadata accessor for CRLTextPosition());
  uint64_t v6 = v2;
  id v7 = v3;
  uint64_t v8 = (char *)[v5 init:v4 caretAffinity:0];
  NSNotFound.getter();
  uint64_t v9 = *(void *)&v8[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  uint64_t v10 = *(void *)&v8[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  uint64_t v11 = (objc_class *)type metadata accessor for CRLTextRange();
  uint64_t v12 = (char *)objc_allocWithZone(v11);
  uint64_t v13 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(void *)&v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(void *)&v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  id v14 = &v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(void *)id v14 = v9;
  *((void *)v14 + 1) = v9;
  *(void *)&v12[v13] = v10;
  v20.receiver = v12;
  v20.super_class = v11;
  id v15 = [super init];

  long long v16 = (char *)[v7 start];
  uint64_t v17 = *(char **)&v16[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  uint64_t v18 = sub_1006CD32C(v17);
  return v18;
}

char *sub_10069C510()
{
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v2 = Strong[OBJC_IVAR____TtC8Freeform11CRLWPEditor_isResigning];

    if (v2) {
      return 0;
    }
  }
  if (!*(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage)
                  + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
  {
    id v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager__selectedTextRange);
    id v5 = v3;
    return (char *)v3;
  }

  return sub_10069C344();
}

void sub_10069C6BC()
{
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (!Strong || (char v2 = Strong[OBJC_IVAR____TtC8Freeform11CRLWPEditor_isResigning], Strong, (v2 & 1) == 0))
  {
    if (*(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage)
                   + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
    {
      id v3 = sub_10069C344();
      if (!v3) {
        return;
      }
    }
    else
    {
      id v3 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager__selectedTextRange);
      uint64_t v6 = v3;
      if (!v3) {
        return;
      }
    }
    uint64_t v4 = (char *)[v3 start];
    uint64_t v5 = *(void *)&v4[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

    if (v5 == NSNotFound.getter())
    {
    }
    else
    {
      uint64_t v7 = *(void *)&v3[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      uint64_t v8 = *(void *)&v3[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];

      if (__OFSUB__(v8, v7)) {
        __break(1u);
      }
    }
  }
}

void sub_10069C944()
{
  uint64_t v1 = sub_1005057FC(&qword_101687AE0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (!Strong
    || (char v15 = Strong[OBJC_IVAR____TtC8Freeform11CRLWPEditor_isResigning], Strong, (v15 & 1) == 0))
  {
    uint64_t v16 = OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage;
    if (*(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage)
                   + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
    {
      uint64_t v17 = sub_10069C344();
      if (!v17) {
        return;
      }
    }
    else
    {
      uint64_t v17 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager__selectedTextRange);
      unint64_t v26 = v17;
      if (!v17) {
        return;
      }
    }
    uint64_t v28 = v2;
    uint64_t v18 = *(void *)&v17[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    uint64_t v19 = *(void *)&v17[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];

    id v20 = *(id *)(v0 + v16);
    uint64_t v21 = (void *)sub_1008FC744();

    sub_10090059C(v18, v19, &v29);
    id v22 = v29;
    uint64_t v23 = *(void *)&v29[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (v23)
    {
      (*(void (**)(void))(*(void *)v23 + 760))();
      sub_1005D3C94((uint64_t)&v9[*(int *)(v6 + 20)], (uint64_t)v13);
      sub_1005D3CF8((uint64_t)v9, type metadata accessor for CRLWPShapeItemCRDTData);
      sub_1005057FC((uint64_t *)&unk_10167BC20);
      CRAttributedString.subscript.getter();
      sub_1005D3CF8((uint64_t)v13, type metadata accessor for CRLWPStorageCRDTData);
      uint64_t v24 = (void *)CRAttributedString.Substring.attributedString.getter();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v1);
      id v25 = [v24 string];

      if (v25)
      {

        long long v32 = v30;
        uint64_t v33 = v31;
        sub_1006436E8((id *)&v32);
        String.init(_:)(v25);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

id sub_10069CCD0()
{
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
  uint64_t v2 = (void *)sub_1008FC744();

  uint64_t v3 = (char *)[objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()) init:0 caretAffinity:0];
  NSNotFound.getter();
  uint64_t v4 = *(void *)&v3[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  uint64_t v5 = *(void *)&v3[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  uint64_t v6 = (objc_class *)type metadata accessor for CRLTextRange();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  uint64_t v8 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  uint64_t v9 = &v7[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(void *)uint64_t v9 = v4;
  *((void *)v9 + 1) = v4;
  *(void *)&v7[v8] = v5;
  v13.receiver = v7;
  v13.super_class = v6;
  id v10 = [super init];

  id v11 = [v10 start];
  return v11;
}

id sub_10069CE3C()
{
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
  uint64_t v2 = (void *)sub_1008FC744();

  uint64_t v3 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", objc_msgSend(v2, "length"), 0);
  NSNotFound.getter();
  uint64_t v4 = *(void *)&v3[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  uint64_t v5 = *(void *)&v3[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  uint64_t v6 = (objc_class *)type metadata accessor for CRLTextRange();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  uint64_t v8 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  uint64_t v9 = &v7[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(void *)uint64_t v9 = v4;
  *((void *)v9 + 1) = v4;
  *(void *)&v7[v8] = v5;
  v13.receiver = v7;
  v13.super_class = v6;
  id v10 = [super init];

  id v11 = [v10 start];
  return v11;
}

void *sub_10069CF78(double a1, double a2)
{
  uint64_t v3 = v2;
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_10171A478;
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  type metadata accessor for CGPoint(0);
  *(void *)(inited + 56) = v8;
  *(double *)(inited + 32) = a1;
  *(double *)(inited + 40) = a2;
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  id v10 = v6;
  if (Strong)
  {
    uint64_t v11 = sub_10069EED0(0, a1, a2);
    id v12 = [*(id *)&Strong[OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper] rangeForSelectionAtCharIndex:v11 caretIndex:v11];
    uint64_t v14 = v13;
    id v15 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
    uint64_t v16 = (void *)sub_1006CC83C((uint64_t)v12, v14);
    uint64_t v17 = *(void **)((char *)v3 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager__selectedTextRange);
    *(void *)((char *)v3 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager__selectedTextRange) = v16;
    id v18 = v16;

    (*(void (**)(void))((swift_isaMask & *v3) + 0x268))();
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v16 = 0;
  }

  return v16;
}

id sub_10069D1A8(void *a1, void *a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_minimumCaretHitRegionWidth] = 0;
  uint64_t v6 = OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager__selectedTextRange;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager__selectedTextRange] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  uint64_t v7 = OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_selectionViewController;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_selectionViewController] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_lastEditingShape] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage] = a1;
  uint64_t v24 = v3;
  id v25 = a1;
  uint64_t v8 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", objc_msgSend(v25, "length"), 0);
  NSNotFound.getter();
  uint64_t v9 = *(void *)&v8[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  uint64_t v10 = *(void *)&v8[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  uint64_t v11 = (objc_class *)type metadata accessor for CRLTextRange();
  id v12 = (char *)objc_allocWithZone(v11);
  uint64_t v13 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(void *)&v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(void *)&v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  uint64_t v14 = &v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(void *)uint64_t v14 = v9;
  *((void *)v14 + 1) = v9;
  *(void *)&v12[v13] = v10;
  v28.receiver = v12;
  v28.super_class = v11;
  id v15 = [super init];

  uint64_t v16 = *(void **)&v3[v6];
  *(void *)&v3[v6] = v15;

  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    id v17 = a2;
    id v18 = sub_1007FFB5C(v17);
    uint64_t v19 = *(void **)&v3[v7];
    *(void *)&v3[v7] = v18;

    v26.receiver = v24;
    v26.super_class = (Class)type metadata accessor for CRLWPTextSelectionManager();
    [super init];
  }
  else
  {

    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(with:in:backLinkTo:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPTextSelectionManager.swift", 98, 2, 150, (uint64_t)"Need an icc here!", 17, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v22) = 2;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(with:in:backLinkTo:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPTextSelectionManager.swift", 98, 2, 150);
    v27.receiver = v24;
    v27.super_class = (Class)type metadata accessor for CRLWPTextSelectionManager();
    id v20 = [super init:@"Need an icc here!" :17 :v22];
    id v17 = v25;
  }

  return v20;
}

id sub_10069D464()
{
  id v1 = v0;
  uint64_t v2 = *(char **)&v0[OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_selectionViewController];
  if (v2)
  {
    uint64_t v3 = *(void **)&v2[OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_icc];
    uint64_t v4 = v2;
    id v5 = [v3 removeDecorator:v4];
    (*(void (**)(id))((swift_isaMask & *(void *)v4) + 0x180))(v5);
    sub_1007FF758();
  }
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for CRLWPTextSelectionManager();
  return [super dealloc];
}

void sub_10069D5EC(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101687AE0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  objc_super v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v12 - 8, v13);
  id v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = *(id *)(v1 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
  id v17 = (void *)sub_1008FC744();

  sub_10090059C(*(void *)(a1 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range), *(void *)(a1 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8), &v22);
  id v18 = v22;
  uint64_t v19 = *(void *)&v22[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (v19)
  {
    (*(void (**)(void))(*(void *)v19 + 760))();
    sub_1005D3C94((uint64_t)&v11[*(int *)(v8 + 20)], (uint64_t)v15);
    sub_1005D3CF8((uint64_t)v11, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1005057FC((uint64_t *)&unk_10167BC20);
    CRAttributedString.subscript.getter();
    sub_1005D3CF8((uint64_t)v15, type metadata accessor for CRLWPStorageCRDTData);
    id v20 = (void *)CRAttributedString.Substring.attributedString.getter();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    id v21 = [v20 string];

    if (v21)
    {

      long long v25 = v23;
      uint64_t v26 = v24;
      sub_1006436E8((id *)&v25);
      String.init(_:)(v21);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_10069D9A4(char *a1, uint64_t a2)
{
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_10171A478;
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  uint64_t v7 = type metadata accessor for CRLTextPosition();
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 88) = &type metadata for Int;
  *(void *)(inited + 56) = v7;
  *(void *)(inited + 64) = a2;
  uint64_t v8 = *(void *)&a1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  id v9 = v5;
  a1;
  if (v8 == NSNotFound.getter())
  {
    swift_release();
    id v10 = 0;
  }
  else
  {
    id v11 = *(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
    uint64_t v12 = (void *)sub_1008FC744();

    id v10 = sub_100A0713C(a2, (uint64_t)v12);
    swift_release();
  }
  return v10;
}

double sub_10069DC54(void *a1)
{
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)qword_10171A478;
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117E810;
  *(void *)(v4 + 56) = type metadata accessor for CRLTextRange();
  *(void *)(v4 + 32) = a1;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = sub_1005057FC((uint64_t *)&unk_10167C8C0);
  *(void *)(inited + 32) = v4;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    id v18 = v3;
    id v19 = a1;
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  uint64_t v7 = (void *)Strong;
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
  id v9 = v3;
  id v10 = a1;
  swift_bridgeObjectRetain();
  id v11 = [v7 layoutForInfo:v8];

  if (!v11)
  {
LABEL_11:
    double x = CGRectInfinite.origin.x;
    goto LABEL_12;
  }
  type metadata accessor for CRLWPLayout();
  uint64_t v12 = (void *)swift_dynamicCastClass();
  if (!v12)
  {

    goto LABEL_11;
  }
  uint64_t v13 = v12;
  if (([v12 layoutIsValid] & 1) == 0) {
    [v13 validate];
  }
  uint64_t v14 = (void *)qword_10171A478;
  id v15 = (char *)v10;
  id v16 = v14;
  sub_1006E8D20((char *)v13, v15, &v21);

  double x = v21;
LABEL_12:
  swift_release();

  swift_bridgeObjectRelease();
  return x;
}

void sub_10069DE84(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v61 = a4;
  id v63 = (id)a2;
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v62 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v9);
  id v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v12, v13);
  id v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v16 - 8, v17);
  id v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_8;
  }
  double v21 = Strong;
  uint64_t v60 = OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage;
  id v22 = [Strong layoutForInfo:*(void *)(a1 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage)];

  if (!v22) {
    goto LABEL_8;
  }
  long long v23 = v22;
  type metadata accessor for CRLWPLayout();
  uint64_t v24 = (void *)swift_dynamicCastClass();
  if (!v24) {
    goto LABEL_7;
  }
  long long v25 = v24;
  if (([v24 layoutIsValid] & 1) == 0) {
    [v25 validate];
  }
  if ((id)NSNotFound.getter() == v63)
  {
LABEL_7:

LABEL_8:
    *a5 = 0u;
    a5[1] = 0u;
    return;
  }
  uint64_t v54 = (char *)v25;
  id v58 = v23;
  uint64_t v59 = a3;
  id v26 = *(id *)(a1 + v60);
  uint64_t v27 = sub_1008FC744();

  uint64_t v28 = *(void *)(v27 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v28)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v29 = (void *)v27;
  (*(void (**)(void))(*(void *)v28 + 760))();
  sub_1005D3C94((uint64_t)&v15[*(int *)(v12 + 20)], (uint64_t)v19);
  sub_1005D3CF8((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v30 = v62;
  uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
  uint64_t v57 = v62 + 16;
  v56(v11, v19, v8);
  sub_1005D3CF8((uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v31 = (void *)CRAttributedString.attributedString.getter();
  long long v32 = *(void (**)(char *, uint64_t))(v30 + 8);
  uint64_t v62 = v30 + 8;
  uint64_t v55 = v32;
  v32(v11, v8);
  id v33 = [v31 length];

  if ((uint64_t)v33 < (uint64_t)v63)
  {

    goto LABEL_8;
  }
  id v34 = *(id *)(a1 + v60);
  char v35 = (char *)sub_1008FC744();

  uint64_t v36 = *(void *)&v35[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v36) {
    goto LABEL_22;
  }
  uint64_t v53 = (uint64_t)v63 + v59;
  (*(void (**)(void))(*(void *)v36 + 760))();
  sub_1005D3C94((uint64_t)&v15[*(int *)(v12 + 20)], (uint64_t)v19);
  sub_1005D3CF8((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData);
  v56(v11, v19, v8);
  sub_1005D3CF8((uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v37 = (void *)CRAttributedString.attributedString.getter();
  v55(v11, v8);
  id v38 = [v37 length];

  uint64_t v39 = v59;
  id v40 = v63;
  if ((uint64_t)v38 < v53)
  {
    id v41 = *(id *)(a1 + v60);
    uint64_t v42 = (char *)sub_1008FC744();

    uint64_t v43 = *(void *)&v42[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (v43)
    {
      (*(void (**)(void))(*(void *)v43 + 760))();
      sub_1005D3C94((uint64_t)&v15[*(int *)(v12 + 20)], (uint64_t)v19);
      sub_1005D3CF8((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData);
      v56(v11, v19, v8);
      sub_1005D3CF8((uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
      uint64_t v44 = (void *)CRAttributedString.attributedString.getter();
      v55(v11, v8);
      id v40 = [v44 length];

      uint64_t v39 = 0;
      goto LABEL_16;
    }
LABEL_23:
    __break(1u);
    return;
  }
LABEL_16:
  id v45 = v61;
  if (v61)
  {
    *uint64_t v61 = v40;
    v45[1] = v39;
  }
  id v46 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
  long long v47 = (void *)sub_1006CC83C((uint64_t)v63, v59);
  uint64_t v48 = v54;
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  id v49 = (id)qword_10171A478;
  uint64_t v50 = v47;
  sub_1006E8D20(v48, v50, (double *)v64);

  long long v51 = v64[1];
  *a5 = v64[0];
  a5[1] = v51;
}

double sub_10069E570(void *a1)
{
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)qword_10171A478;
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117E810;
  *(void *)(v4 + 56) = type metadata accessor for CRLTextPosition();
  *(void *)(v4 + 32) = a1;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = sub_1005057FC((uint64_t *)&unk_10167C8C0);
  *(void *)(inited + 32) = v4;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    id v15 = v3;
    id v16 = a1;
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  uint64_t v7 = (void *)Strong;
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
  id v9 = v3;
  id v10 = a1;
  swift_bridgeObjectRetain();
  id v11 = [v7 layoutForInfo:v8];

  if (!v11)
  {
LABEL_11:
    double x = CGRectInfinite.origin.x;
    swift_release();
    goto LABEL_12;
  }
  type metadata accessor for CRLWPLayout();
  uint64_t v12 = (void *)swift_dynamicCastClass();
  if (!v12)
  {

    goto LABEL_11;
  }
  uint64_t v13 = v12;
  if (([v12 layoutIsValid] & 1) == 0) {
    [v13 validate];
  }
  double x = sub_1006E95EC(v10);
  swift_release();

LABEL_12:
  swift_bridgeObjectRelease();
  return x;
}

double sub_10069E790(void *a1, uint64_t a2, void *a3, double (*a4)(id))
{
  id v6 = a3;
  id v7 = a1;
  double v8 = a4(v6);

  return v8;
}

void *sub_10069E810(double a1, double a2)
{
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_10171A478;
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10117E810;
  type metadata accessor for CGPoint(0);
  *(void *)(v6 + 56) = v7;
  *(double *)(v6 + 32) = a1;
  *(double *)(v6 + 40) = a2;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = sub_1005057FC((uint64_t *)&unk_10167C8C0);
  *(void *)(inited + 32) = v6;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    id v17 = v5;
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  id v10 = (void *)Strong;
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
  id v12 = v5;
  swift_bridgeObjectRetain();
  id v13 = [v10 layoutForInfo:v11];

  if (!v13)
  {
LABEL_11:
    swift_release();
    id v15 = 0;
    goto LABEL_12;
  }
  type metadata accessor for CRLWPLayout();
  uint64_t v14 = (void *)swift_dynamicCastClass();
  id v15 = v14;
  if (v14)
  {
    if (([v14 layoutIsValid] & 1) == 0) {
      [v15 validate];
    }
    id v16 = (id)qword_10171A478;
    sub_1006EAD90(v15, &v19);

    id v15 = v19;
  }
  swift_release();

LABEL_12:
  swift_bridgeObjectRelease();
  return v15;
}

char *sub_10069EA60(void *a1, double a2, double a3)
{
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)qword_10171A478;
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10117D8C0;
  type metadata accessor for CGPoint(0);
  uint64_t v10 = v9;
  *(void *)(v8 + 56) = v9;
  *(double *)(v8 + 32) = a2;
  *(double *)(v8 + 40) = a3;
  *(void *)(v8 + 88) = type metadata accessor for CRLTextRange();
  *(void *)(v8 + 64) = a1;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_10167C8C0);
  *(void *)(inited + 56) = v12;
  *(void *)(inited + 32) = v8;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    id v34 = v7;
    id v35 = a1;
    swift_bridgeObjectRetain();
    goto LABEL_16;
  }
  uint64_t v14 = (void *)Strong;
  uint64_t v15 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
  id v16 = v7;
  id v17 = a1;
  swift_bridgeObjectRetain();
  id v18 = [v14 layoutForInfo:v15];

  if (!v18)
  {
LABEL_16:
    swift_release();
LABEL_17:
    id v20 = 0;
    goto LABEL_18;
  }
  type metadata accessor for CRLWPLayout();
  id v19 = (char *)swift_dynamicCastClass();
  id v20 = v19;
  if (!v19)
  {
    swift_release();

    goto LABEL_18;
  }
  if (([v19 layoutIsValid] & 1) == 0) {
    [v20 validate];
  }
  double v21 = (void *)qword_10171A478;
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_10117E810;
  *(void *)(v22 + 56) = v10;
  *(double *)(v22 + 32) = a2;
  *(double *)(v22 + 40) = a3;
  long long v38 = xmmword_10117E810;
  uint64_t v40 = v12;
  uint64_t v39 = v22;
  id v23 = v21;
  swift_bridgeObjectRetain();
  id v24 = v23;
  sub_1006EAD90(v20, &v37);

  if (!v37)
  {
    swift_arrayDestroy();
    swift_release();

    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  long long v25 = *(void **)&v20[OBJC_IVAR____TtC8Freeform11CRLWPLayout_wpStorage];
  id v26 = (char *)v37;
  id v27 = v25;
  uint64_t v28 = (void *)sub_1008FC744();

  uint64_t v29 = (char *)[v28 range];
  uint64_t v30 = *(void *)&v26[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  long long v32 = &v29[v31];
  if ((uint64_t)&v29[v31] >= v30) {
    long long v32 = *(char **)&v26[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  }
  if (v30 >= (uint64_t)v29) {
    id v33 = v32;
  }
  else {
    id v33 = v29;
  }
  id v20 = (char *)[objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()) init:v33 caretAffinity:0];

  swift_arrayDestroy();
  swift_release();

  swift_bridgeObjectRelease();
LABEL_18:

  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_10069EED0(char a1, double a2, double a3)
{
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)qword_10171A478;
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10117D8C0;
  type metadata accessor for CGPoint(0);
  *(void *)(v8 + 56) = v9;
  *(double *)(v8 + 32) = a2;
  *(double *)(v8 + 40) = a3;
  *(void *)(v8 + 88) = &type metadata for Bool;
  *(unsigned char *)(v8 + 64) = a1 & 1;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = sub_1005057FC((uint64_t *)&unk_10167C8C0);
  *(void *)(inited + 32) = v8;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    id v21 = v7;
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
  uint64_t v12 = (void *)Strong;
  uint64_t v13 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
  id v14 = v7;
  swift_bridgeObjectRetain();
  id v15 = [v12 layoutForInfo:v13];

  if (!v15)
  {
LABEL_12:
    uint64_t v20 = NSNotFound.getter();
    swift_release();
    goto LABEL_13;
  }
  type metadata accessor for CRLWPLayout();
  id v16 = (void *)swift_dynamicCastClass();
  if (!v16)
  {

    goto LABEL_12;
  }
  id v17 = v16;
  if (([v16 layoutIsValid] & 1) == 0) {
    [v17 validate];
  }
  id v18 = (id)qword_10171A478;
  sub_1006EAD90(v17, &v23);

  id v19 = v23;
  if (!v23) {
    goto LABEL_12;
  }
  uint64_t v20 = *(void *)&v23[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  swift_release();

LABEL_13:
  swift_bridgeObjectRelease();
  return v20;
}

void sub_10069F16C(double a1, double a2)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v6 = Strong;
  id v28 = [Strong layoutForInfo:*(void *)((char *)v2 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage)];

  if (!v28) {
    return;
  }
  type metadata accessor for CRLWPLayout();
  uint64_t v7 = (void *)swift_dynamicCastClass();
  if (!v7) {
    goto LABEL_17;
  }
  uint64_t v8 = v7;
  if (([v7 layoutIsValid] & 1) == 0) {
    [v8 validate];
  }
  uint64_t v9 = swift_unknownObjectWeakLoadStrong();
  if (!v9)
  {
LABEL_17:
    long long v25 = v28;
    goto LABEL_20;
  }
  id v27 = (id)v9;
  uint64_t v10 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v10
    || (uint64_t v11 = v10,
        id v26 = objc_msgSend(v10, "hitRep:", a1, a2),
        v11,
        !v26))
  {
LABEL_19:

    long long v25 = v27;
    goto LABEL_20;
  }
  self;
  uint64_t v12 = swift_dynamicCastObjCClass();
  if (!v12)
  {

    goto LABEL_19;
  }
  uint64_t v13 = (void *)v12;
  [v8 convertNaturalPointFromUnscaledCanvas:a1, a2];
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  id v14 = (id)qword_10171A478;
  sub_1006EAD90(v8, &v30);

  id v15 = v30;
  if (v30)
  {
    uint64_t v16 = *(void *)&v30[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
    if ((sub_10069FC80(v16, v13, a1, a2) & 1) != 0 && (BOOL v17 = __OFSUB__(v16, 1), --v16, v17))
    {
      __break(1u);
    }
    else
    {
      id v18 = (objc_class *)type metadata accessor for CRLTextRange();
      id v19 = (char *)objc_allocWithZone(v18);
      uint64_t v20 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
      *(void *)&v19[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
      *(void *)&v19[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
      id v21 = (uint64_t *)&v19[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      *id v21 = v16;
      v21[1] = v16;
      *(void *)&v19[v20] = 0;
      v29.receiver = v19;
      v29.super_class = v18;
      [super init];
      id v23 = *(void **)((char *)v2 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager__selectedTextRange);
      *(void *)((char *)v2 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager__selectedTextRange) = v22;
      id v24 = v22;

      (*(void (**)(void))((swift_isaMask & *v2) + 0x268))();
      sub_10082A400(0, 1);
    }
    return;
  }

  long long v25 = v26;
LABEL_20:
}

void sub_10069F638()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_selectionViewController);
  if (v1)
  {
    uint64_t v2 = *(void (**)(void))((swift_isaMask & *v1) + 0x188);
    uint64_t v3 = v1;
    v2();
  }
}

uint64_t type metadata accessor for CRLWPTextSelectionManager()
{
  return self;
}

char *sub_10069FBC4(void *a1, void *a2, void *a3)
{
  uint64_t v12 = &type metadata for CRLUIKitFeatureFlags;
  unint64_t v13 = sub_10069FE88();
  char v6 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v11);
  if (v6) {
    uint64_t v7 = (objc_class *)type metadata accessor for CRLWPTextSelectionManager_i();
  }
  else {
    uint64_t v7 = (objc_class *)type metadata accessor for CRLWPTextSelectionManager_x();
  }
  uint64_t v8 = (char *)objc_allocWithZone(v7);
  *(void *)&v8[OBJC_IVAR____TtC8Freeform27CRLWPTextSelectionManager_i_loupeSession] = 0;
  id v9 = a2;
  unint64_t result = (char *)sub_10069D1A8(a1, a2, a3);
  *(void *)&result[OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_minimumCaretHitRegionWidth] = 0x4044000000000000;
  return result;
}

id sub_10069FC80(uint64_t a1, id a2, double a3, double a4)
{
  uint64_t v4 = a1 - 1;
  if (a1 < 1) {
    return 0;
  }
  id result = [a2 selection];
  if (!result) {
    return result;
  }
  id v10 = result;
  id v11 = [result caretAffinity];

  [a2 convertNaturalPointFromUnscaledCanvas:a3, a4];
  double v39 = v13;
  double v40 = v12;
  [a2 caretRectForCharIndex:a1 caretAffinity:v11];
  CGFloat v15 = v14;
  CGFloat v41 = v16;
  CGFloat v18 = v17;
  CGFloat v20 = v19;
  [a2 caretRectForCharIndex:v4 caretAffinity:v11];
  CGFloat v22 = v21;
  CGFloat v24 = v23;
  CGFloat v26 = v25;
  CGFloat v28 = v27;
  [a2 caretRect];
  double v30 = v29 * 0.5;
  v42.origin.double x = v22;
  v42.origin.y = v24;
  CGFloat v37 = v26;
  v42.size.width = v26;
  v42.size.height = v28;
  double MidY = CGRectGetMidY(v42);
  CGFloat v38 = v20;
  v43.origin.double x = v15;
  v43.origin.y = v41;
  v43.size.width = v18;
  v43.size.height = v20;
  if (v30 > vabdd_f64(MidY, CGRectGetMidY(v43))) {
    return 0;
  }
  double v32 = sub_100065738(v22, v24, v37, v28);
  double v34 = sub_1000653B4(v40, v39, v32, v33);
  double v35 = sub_100065738(v15, v41, v18, v38);
  return (id)(v34 < sub_1000653B4(v40, v39, v35, v36));
}

unint64_t sub_10069FE48()
{
  unint64_t result = qword_10167A2B0;
  if (!qword_10167A2B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10167A2B0);
  }
  return result;
}

unint64_t sub_10069FE88()
{
  unint64_t result = qword_101682140;
  if (!qword_101682140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101682140);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLTipStencilLibraryCompact()
{
  return &type metadata for CRLTipStencilLibraryCompact;
}

void *sub_10069FEEC()
{
  return &protocol witness table for String;
}

uint64_t sub_10069FEF8(uint64_t a1)
{
  return sub_10069FF90(a1, qword_10171A300);
}

uint64_t sub_10069FF1C(uint64_t a1)
{
  return sub_10069FF90(a1, qword_10171A318);
}

uint64_t sub_10069FF40(uint64_t a1)
{
  return sub_10069FF90(a1, qword_10171A330);
}

uint64_t sub_10069FF64(uint64_t a1)
{
  return sub_10069FF90(a1, qword_10171A348);
}

uint64_t sub_10069FF90(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1005057FC(&qword_10169FA10);
  sub_100568B28(v3, a2);
  sub_100556B74(v3, (uint64_t)a2);
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_1006A0034()
{
  uint64_t v0 = sub_1005057FC(&qword_10167A2C0);
  sub_100568B28(v0, qword_10171A360);
  sub_100556B74(v0, (uint64_t)qword_10171A360);
  return Tips.Event.init<>(id:)();
}

uint64_t sub_1006A009C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1006A00A4(0, a1);
}

uint64_t sub_1006A00A4@<X0>(char a1@<W1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1005057FC(&qword_10167A358);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1005057FC(&qword_10167A360);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  double v13 = &v15[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100523288(&qword_10167A368, &qword_10167A360);
  static PredicateExpressions.build_Arg<A>(_:)();
  v15[15] = a1;
  static PredicateExpressions.build_Arg<A>(_:)();
  a2[3] = sub_1005057FC(&qword_10167A370);
  a2[4] = sub_1006A14B4();
  sub_1005767BC(a2);
  sub_100523288(&qword_10167A390, &qword_10167A358);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_1006A02E8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1006A00A4(1, a1);
}

uint64_t sub_1006A02F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v1 = type metadata accessor for PredicateExpressions.ComparisonOperator();
  uint64_t v52 = *(void *)(v1 - 8);
  uint64_t v53 = v1;
  __chkstk_darwin(v1, v2);
  long long v51 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC(&qword_10167A2D8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  uint64_t v56 = v5;
  __chkstk_darwin(v4, v6);
  uint64_t v50 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Tips.DonationTimeRange();
  uint64_t v46 = *(void *)(v8 - 8);
  uint64_t v47 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_10167A2E0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  double v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC(&qword_10167A2E8);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  double v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1005057FC(&qword_10167A2F0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v44 = v22;
  uint64_t v45 = v23;
  __chkstk_darwin(v22, v24);
  CGFloat v26 = (char *)&v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1005057FC(&qword_10167A2F8);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v48 = v27;
  uint64_t v49 = v28;
  __chkstk_darwin(v27, v29);
  CGRect v43 = (char *)&v42 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100523288(&qword_10167A300, &qword_10167A2E0);
  static PredicateExpressions.build_Arg<A>(_:)();
  swift_getKeyPath();
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  static Tips.DonationTimeRange.day.getter();
  type metadata accessor for Tips.EmptyDonation();
  sub_1006A1230(&qword_10167A2C8);
  sub_1006A1230(&qword_10167A2D0);
  sub_1006A12E0();
  static PredicateExpressions.build_donatedWithin<A, B>(_:_:)();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v47);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  swift_getKeyPath();
  sub_100523288(&qword_10167A318, &qword_10167A2F0);
  double v32 = v43;
  uint64_t v31 = v44;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v31);
  uint64_t v57 = 1;
  double v33 = v50;
  static PredicateExpressions.build_Arg<A>(_:)();
  double v35 = v51;
  uint64_t v34 = v52;
  uint64_t v36 = v53;
  (*(void (**)(char *, void, uint64_t))(v52 + 104))(v51, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v53);
  uint64_t v37 = sub_1005057FC(&qword_10167A320);
  CGFloat v38 = v54;
  v54[3] = v37;
  v38[4] = sub_1006A137C();
  sub_1005767BC(v38);
  sub_100523288(&qword_10167A348, &qword_10167A2F8);
  sub_100523288(&qword_10167A350, &qword_10167A2D8);
  uint64_t v39 = v48;
  uint64_t v40 = v55;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v33, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v32, v39);
}

uint64_t sub_1006A099C()
{
  return sub_1006A162C();
}

uint64_t sub_1006A09C0()
{
  return sub_1006A1730();
}

uint64_t sub_1006A09D8()
{
  uint64_t v0 = sub_1005057FC(&qword_10167A398);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Image.init(systemName:)();
  static SymbolRenderingMode.multicolor.getter();
  uint64_t v4 = type metadata accessor for SymbolRenderingMode();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 0, 1, v4);
  uint64_t v5 = Image.symbolRenderingMode(_:)();
  swift_release();
  sub_1006A15C8((uint64_t)v3);
  return v5;
}

uint64_t sub_1006A0AE8@<X0>(uint64_t *a1@<X8>)
{
  sub_1005C76AC();
  uint64_t result = Tip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1006A0B2C()
{
  unint64_t result = qword_10167A2B8;
  if (!qword_10167A2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167A2B8);
  }
  return result;
}

unint64_t sub_1006A0B80(uint64_t a1)
{
  unint64_t result = sub_1005C76AC();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1006A0BA8()
{
  uint64_t v0 = sub_1005057FC(&qword_10167A2C0);
  uint64_t v25 = *(void *)(v0 - 8);
  uint64_t v26 = v0;
  __chkstk_darwin(v0, v1);
  uint64_t v27 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1005057FC(&qword_10169FA10);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Tips.Rule();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166EE28 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_100556B74(v3, (uint64_t)qword_10171A300);
  swift_beginAccess();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v14(v7, v13, v3);
  Tips.Rule.init<A>(_:_:)();
  v24[2] = static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v12, v8);
  if (qword_10166EE30 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_100556B74(v3, (uint64_t)qword_10171A318);
  swift_beginAccess();
  v14(v7, v16, v3);
  Tips.Rule.init<A>(_:_:)();
  v24[1] = static Tips.RuleBuilder.buildExpression(_:)();
  v15(v12, v8);
  if (qword_10166EE38 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_100556B74(v3, (uint64_t)qword_10171A330);
  swift_beginAccess();
  v14(v7, v17, v3);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v15(v12, v8);
  uint64_t v18 = v8;
  if (qword_10166EE40 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100556B74(v3, (uint64_t)qword_10171A348);
  swift_beginAccess();
  v14(v7, v19, v3);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v15(v12, v18);
  if (qword_10166EE48 != -1) {
    swift_once();
  }
  uint64_t v20 = v26;
  uint64_t v21 = sub_100556B74(v26, (uint64_t)qword_10171A360);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v27, v21, v20);
  type metadata accessor for Tips.EmptyDonation();
  sub_1006A1230(&qword_10167A2C8);
  sub_1006A1230(&qword_10167A2D0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v15(v12, v18);
  static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1006A1230(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Tips.EmptyDonation();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006A1274()
{
  return sub_1006A1230(&qword_10167A2C8);
}

uint64_t sub_1006A12A8()
{
  return sub_1006A1230(&qword_10167A2D0);
}

unint64_t sub_1006A12E0()
{
  unint64_t result = qword_10167A308;
  if (!qword_10167A308)
  {
    sub_100522D34(&qword_10167A2E8);
    sub_100523288(&qword_10167A310, &qword_10167A2E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167A308);
  }
  return result;
}

unint64_t sub_1006A137C()
{
  unint64_t result = qword_10167A328;
  if (!qword_10167A328)
  {
    sub_100522D34(&qword_10167A320);
    sub_1006A141C();
    sub_100523288(&qword_10167A340, &qword_10167A2D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167A328);
  }
  return result;
}

unint64_t sub_1006A141C()
{
  unint64_t result = qword_10167A330;
  if (!qword_10167A330)
  {
    sub_100522D34(&qword_10167A2F8);
    sub_100523288(&qword_10167A338, &qword_10167A2F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167A330);
  }
  return result;
}

unint64_t sub_1006A14B4()
{
  unint64_t result = qword_10167A378;
  if (!qword_10167A378)
  {
    sub_100522D34(&qword_10167A370);
    sub_100523288(&qword_10167A380, &qword_10167A360);
    sub_1006A1554();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167A378);
  }
  return result;
}

unint64_t sub_1006A1554()
{
  unint64_t result = qword_10167A388;
  if (!qword_10167A388)
  {
    sub_100522D34(&qword_10167A358);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167A388);
  }
  return result;
}

uint64_t sub_1006A15C8(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10167A398);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1006A162C()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10052E310();
  return Text.init<A>(_:)();
}

uint64_t sub_1006A1730()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10052E310();
  return Text.init<A>(_:)();
}

uint64_t sub_1006A1820@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v65 = a1;
  uint64_t v63 = a4;
  uint64_t v70 = type metadata accessor for URL();
  uint64_t v68 = *(void *)(v70 - 8);
  __chkstk_darwin(v70, v7);
  uint64_t v66 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v67 = (char *)&v59 - v11;
  uint64_t v62 = type metadata accessor for UUID();
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin(v62, v12);
  uint64_t v60 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UTType();
  uint64_t v71 = *(void *)(v14 - 8);
  uint64_t v72 = v14;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v20 = __chkstk_darwin(v18, v19).n128_u64[0];
  uint64_t v22 = (char *)&v59 - v21;
  id v23 = [v4 length:v20];
  sub_1005057FC(&qword_10167A3A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 32) = NSDocumentTypeDocumentAttribute;
  if ((unint64_t)a3 >= 3)
  {
    id v73 = a3;
    id v58 = NSDocumentTypeDocumentAttribute;
    while (1)
    {
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      id v73 = a3;
    }
  }
  uint64_t v25 = inited;
  uint64_t v26 = *(void **)*(&off_10150EF28 + (void)a3);
  type metadata accessor for DocumentType(0);
  *(void *)(v25 + 64) = v27;
  *(void *)(v25 + 40) = v26;
  uint64_t v28 = NSDocumentTypeDocumentAttribute;
  id v29 = v26;
  sub_100A3ABE4(v25);
  type metadata accessor for DocumentAttributeKey(0);
  sub_1006A1FE0();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v73 = 0;
  id v31 = [v4 dataFromRange:0 documentAttributes:v23 error:&v73];

  id v32 = v73;
  if (v31)
  {
    uint64_t v33 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v35 = v34;

    if (a3 == (void *)2)
    {
      static UTType.flatRTFD.getter();
      uint64_t v36 = v71;
      uint64_t v37 = v72;
    }
    else
    {
      uint64_t v36 = v71;
      uint64_t v37 = v72;
      if (a3 == (void *)1) {
        static UTType.rtfd.getter();
      }
      else {
        static UTType.rtf.getter();
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v22, v17, v37);
    uint64_t v40 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0) {
      uint64_t v40 = v65 & 0xFFFFFFFFFFFFLL;
    }
    CGFloat v41 = v22;
    unint64_t v64 = v35;
    if (v40)
    {
      uint64_t v42 = v22;
      uint64_t v43 = v33;
      NSString v44 = String._bridgeToObjectiveC()();
      NSString v45 = String._bridgeToObjectiveC()();
      id v46 = [v44 crl_filenameFromDisplayNameWithExtension:v45];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      uint64_t v43 = v33;
      uint64_t v42 = v41;
      UTType.localizedDescription.getter();
      if (!v47)
      {
        uint64_t v48 = v60;
        UUID.init()();
        UUID.uuidString.getter();
        (*(void (**)(char *, uint64_t))(v61 + 8))(v48, v62);
        sub_100E704DC(5);
        swift_bridgeObjectRelease();
        static String._fromSubstring(_:)();
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v50 = v67;
    uint64_t v49 = v68;
    id v51 = [objc_allocWithZone((Class)NSFileManager) init];
    id v52 = [v51 temporaryDirectory];

    uint64_t v53 = v66;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    URL.appendingPathComponent(_:conformingTo:)();
    swift_bridgeObjectRelease();
    uint64_t v54 = *(void (**)(char *, uint64_t))(v49 + 8);
    uint64_t v55 = v70;
    v54(v53, v70);
    unint64_t v56 = v64;
    uint64_t v57 = v69;
    Data.write(to:options:)();
    if (v57) {
      v54(v50, v55);
    }
    else {
      (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v63, v50, v55);
    }
    (*(void (**)(char *, uint64_t))(v71 + 8))(v42, v72);
    return sub_100510084(v43, v56);
  }
  else
  {
    CGFloat v38 = v32;
    _convertNSErrorToError(_:)();

    return swift_willThrow();
  }
}

unint64_t sub_1006A1FE0()
{
  unint64_t result = qword_1016716E0;
  if (!qword_1016716E0)
  {
    type metadata accessor for DocumentAttributeKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016716E0);
  }
  return result;
}

BOOL sub_1006A2038(void *a1)
{
  if (![a1 isEmpty]) {
    return 0;
  }
  sub_1006A21C4(a1, (uint64_t)v4);
  sub_10051B3EC((uint64_t)v4, (uint64_t)&v5, &qword_10167A3A8);
  if (!*((void *)&v6 + 1)) {
    return 0;
  }
  v15[1] = v9;
  v16[0] = v10;
  v16[1] = v11;
  long long v12 = v5;
  long long v13 = v6;
  long long v14 = v7;
  v15[0] = v8;
  sub_10051B3EC((uint64_t)&v14, (uint64_t)v17, &qword_10167A3B0);
  sub_10051B3EC((uint64_t)v17, (uint64_t)&v24, &qword_10167A3B0);
  if (v25)
  {
    sub_10051B3EC((uint64_t)v15, (uint64_t)v18, &qword_10167A3B8);
    sub_10051B3EC((uint64_t)v18, (uint64_t)v22, &qword_10167A3B8);
    if (v23)
    {
      sub_1006A2790(v4);
      return 0;
    }
    else
    {
      sub_10051B3EC((uint64_t)v16, (uint64_t)v19, &qword_10167A3B8);
      sub_10051B3EC((uint64_t)v19, (uint64_t)v20, &qword_10167A3B8);
      BOOL v2 = v21 != 0;
      sub_1006A2790(v4);
    }
  }
  else
  {
    BOOL v2 = v24;
    sub_1006A2790(v4);
  }
  return v2;
}

void sub_1006A21C4(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1005057FC(&qword_10167A3C0);
  __chkstk_darwin(v4 - 8, v5);
  long long v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10167A3C8);
  uint64_t v58 = *(void *)(v8 - 8);
  uint64_t v59 = v8;
  __chkstk_darwin(v8, v9);
  unint64_t v56 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_10167A3D0);
  uint64_t v57 = *(void *)(v11 - 8);
  *(void *)&double v13 = __chkstk_darwin(v11, v12).n128_u64[0];
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v55 = a1;
  uint64_t v16 = [a1 start:v13];
  uint64_t v17 = *(void *)&v16[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  sub_1008F1D9C(v17);
  long long v21 = 0uLL;
  if (!v18)
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    long long v29 = 0uLL;
    long long v30 = 0uLL;
    long long v31 = 0uLL;
    long long v32 = 0uLL;
LABEL_7:
    *(_OWORD *)a2 = v21;
    *(void *)(a2 + 16) = v25;
    *(void *)(a2 + 24) = v26;
    *(void *)(a2 + 32) = v27;
    *(void *)(a2 + 40) = v28;
    *(_OWORD *)(a2 + 48) = v29;
    *(_OWORD *)(a2 + 64) = v30;
    *(_OWORD *)(a2 + 80) = v31;
    *(_OWORD *)(a2 + 96) = v32;
    return;
  }
  uint64_t v22 = v18;
  uint64_t v23 = v19;
  uint64_t v24 = v20;
  sub_1005057FC(&qword_10167A3D8);
  sub_100523288(&qword_10167A3E0, &qword_10167A3D0);
  Regex.init<A>(_:)();
  Regex.firstMatch(in:)();
  uint64_t v34 = v58;
  uint64_t v33 = v59;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v7, 1, v59) == 1)
  {

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v15, v11);
    sub_100522F00((uint64_t)v7, &qword_10167A3C0);
LABEL_6:
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    long long v29 = 0uLL;
    long long v30 = 0uLL;
    long long v31 = 0uLL;
    long long v32 = 0uLL;
    long long v21 = 0uLL;
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v56, v7, v33);
  *(void *)&long long v68 = Regex.Match.range.getter();
  *((void *)&v68 + 1) = v35;
  uint64_t v64 = v23;
  uint64_t v65 = v24;
  sub_1005057FC(&qword_10167A3E8);
  sub_100523288((unint64_t *)&qword_10167A3F0, &qword_10167A3E8);
  sub_10052E310();
  uint64_t v36 = _NSRange.init<A, B>(_:in:)();
  uint64_t v38 = v37;
  uint64_t v39 = (char *)[v22 start];
  uint64_t v40 = *(void *)&v39[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  uint64_t v41 = NSNotFound.getter();
  uint64_t v42 = (long long *)&v22[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  if (v40 == v41) {
    uint64_t v42 = &xmmword_101176F48;
  }
  uint64_t v43 = *(void *)v42;
  BOOL v44 = __OFADD__(v36, v43);
  uint64_t v45 = v36 + v43;
  if (!v44)
  {
    uint64_t v46 = v45 + v38;
    uint64_t v47 = v55;
    uint64_t v48 = (char *)[(id)v55 start];
    uint64_t v49 = *(void *)&v48[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

    uint64_t v50 = NSNotFound.getter();
    id v51 = (long long *)(v47 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range);
    if (v49 == v50) {
      id v51 = &xmmword_101176F48;
    }
    if (v46 == *(void *)v51)
    {
      id v52 = v56;
      Regex.Match.output.getter();
      long long v55 = v68;
      uint64_t v25 = v69;
      uint64_t v26 = v70;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      Regex.Match.output.getter();
      swift_bridgeObjectRelease();
      uint64_t v27 = v66;
      uint64_t v28 = v67;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      Regex.Match.output.getter();
      swift_bridgeObjectRelease();
      long long v53 = v63;
      long long v54 = v62;
      swift_bridgeObjectRelease();
      Regex.Match.output.getter();

      (*(void (**)(char *, uint64_t))(v58 + 8))(v52, v59);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v15, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v30 = v53;
      long long v29 = v54;
      long long v21 = v55;
      long long v31 = v60;
      long long v32 = v61;
      goto LABEL_7;
    }

    (*(void (**)(char *, uint64_t))(v58 + 8))(v56, v59);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v15, v11);
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t *sub_1006A2790(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1006A27E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1006A2834()
{
  uint64_t v0 = sub_1005057FC(&qword_10167A3F8);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v11 - v7;
  sub_1005057FC(&qword_10167A3D8);
  ChoiceOf.init(_:)();
  sub_100523288(&qword_10167A400, &qword_10167A3F8);
  static RegexComponentBuilder.buildExpression<A>(_:)();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v4, v0);
  static RegexComponentBuilder.buildPartialBlock<A>(first:)();
  return ((uint64_t (*)(char *, uint64_t))v9)(v8, v0);
}

uint64_t sub_1006A29C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v60 = a1;
  uint64_t v1 = sub_1005057FC(&qword_10167A3D0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v59 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC(&qword_10167A408);
  __chkstk_darwin(v4 - 8, v5);
  long long v54 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_10167A410);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  uint64_t v58 = v8;
  __chkstk_darwin(v7, v9);
  long long v55 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_10167A418);
  __chkstk_darwin(v11 - 8, v12);
  long long v53 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for _RegexFactory();
  uint64_t v68 = *(void *)(v64 - 8);
  __chkstk_darwin(v64, v14);
  uint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1005057FC(&qword_10167A420);
  uint64_t v56 = *(void *)(v65 - 8);
  __chkstk_darwin(v65, v17);
  long long v62 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1005057FC(&qword_10167A428);
  uint64_t v66 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  long long v61 = (char *)&v48 - v25;
  __chkstk_darwin(v26, v27);
  unsigned __int8 v67 = (char *)&v48 - v28;
  uint64_t v29 = sub_1005057FC(&qword_10167A430);
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29, v31);
  uint64_t v33 = (char *)&v48 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34, v35);
  long long v63 = (char *)&v48 - v36;
  sub_1005057FC(&qword_10167A438);
  sub_100523288(&qword_10167A440, &qword_10167A430);
  Regex.init<A>(_:)();
  static AlternationBuilder.buildExpression<A>(_:)();
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t))(v30 + 8);
  uint64_t v51 = v30 + 8;
  id v52 = v37;
  uint64_t v49 = v29;
  v37(v33, v29);
  sub_1005057FC(&qword_10167A448);
  sub_100523288(&qword_10167A450, &qword_10167A428);
  uint64_t v38 = v61;
  Regex.init<A>(_:)();
  static AlternationBuilder.buildExpression<A>(_:)();
  uint64_t v39 = v66 + 8;
  uint64_t v40 = *(void (**)(char *, uint64_t))(v66 + 8);
  v40(v38, v19);
  uint64_t v50 = v40;
  uint64_t v66 = v39;
  Regex.init<A>(_:)();
  static AlternationBuilder.buildExpression<A>(_:)();
  v40(v22, v19);
  makeFactory()();
  sub_1005057FC(&qword_10167A458);
  _RegexFactory.orderedChoice<A, B>(_:)();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v68 + 8);
  v68 += 8;
  uint64_t v42 = v64;
  v41(v16, v64);
  ChoiceOf.init(_:)();
  makeFactory()();
  sub_1005057FC(&qword_10167A460);
  sub_100523288(&qword_10167A468, &qword_10167A420);
  _RegexFactory.accumulateAlternation<A, B, C>(_:_:)();
  v41(v16, v42);
  uint64_t v43 = v55;
  ChoiceOf.init(_:)();
  makeFactory()();
  sub_1005057FC(&qword_10167A3D8);
  sub_100523288(&qword_10167A470, &qword_10167A410);
  BOOL v44 = v61;
  uint64_t v45 = v57;
  _RegexFactory.accumulateAlternation<A, B, C>(_:_:)();
  v41(v16, v64);
  ChoiceOf.init(_:)();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v43, v45);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v62, v65);
  uint64_t v46 = v50;
  v50(v44, v19);
  v46(v67, v19);
  return v52(v63, v49);
}

uint64_t sub_1006A315C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v94 = a1;
  uint64_t v1 = sub_1005057FC(&qword_10167A4A0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v105 = v1;
  uint64_t v106 = v2;
  __chkstk_darwin(v1, v3);
  long long v91 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v104 = (char *)&v77 - v7;
  uint64_t v8 = sub_1005057FC(&qword_10167A4B0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for CharacterClass();
  uint64_t v87 = *(void (***)(char *, uint64_t))(v83 - 8);
  __chkstk_darwin(v83, v12);
  uint64_t v14 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC(&qword_10167A4B8);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v15 - 8);
  uint64_t v88 = (void (*)(void, void))v15;
  long long v89 = v16;
  __chkstk_darwin(v15, v17);
  uint64_t v84 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  long long v86 = (char *)&v77 - v21;
  uint64_t v22 = sub_1005057FC(&qword_10167A430);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v92 = v22;
  uint64_t v93 = v23;
  __chkstk_darwin(v22, v24);
  uint64_t v102 = (char *)&v77 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for _RegexFactory();
  uint64_t v107 = *(void *)(v95 - 8);
  __chkstk_darwin(v95, v26);
  uint64_t v28 = (char *)&v77 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29, v30);
  uint64_t v82 = (char *)&v77 - v31;
  uint64_t v99 = sub_1005057FC(&qword_10167A4C0);
  uint64_t v103 = *(void *)(v99 - 8);
  __chkstk_darwin(v99, v32);
  long long v85 = (char *)&v77 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34, v35);
  uint64_t v96 = (char *)&v77 - v36;
  uint64_t v37 = sub_1005057FC(&qword_10167A480);
  uint64_t v79 = *(void *)(v37 - 8);
  uint64_t v38 = v79;
  __chkstk_darwin(v37, v39);
  uint64_t v41 = (char *)&v77 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42, v43);
  uint64_t v45 = (char *)&v77 - v44;
  __chkstk_darwin(v46, v47);
  uint64_t v100 = (char *)&v77 - v48;
  Regex.init(_regexString:version:)();
  long long v90 = &protocol conformance descriptor for Regex<A>;
  uint64_t v101 = sub_100523288(&qword_10167A488, &qword_10167A480);
  uint64_t v80 = v37;
  static RegexComponentBuilder.buildExpression<A>(_:)();
  uint64_t v49 = *(void (**)(char *, uint64_t))(v38 + 8);
  uint64_t v97 = v38 + 8;
  uint64_t v98 = v49;
  v49(v45, v37);
  makeFactory()();
  static RegexComponent<>.digit.getter();
  uint64_t v50 = type metadata accessor for RegexRepetitionBehavior();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v11, 1, 1, v50);
  makeFactory()();
  sub_1006A4AFC();
  uint64_t v51 = v41;
  uint64_t v52 = v83;
  _RegexFactory.oneOrMore<A, B>(_:_:)();
  sub_100522F00((uint64_t)v11, &qword_10167A4B0);
  v87[1](v14, v52);
  long long v53 = *(void (***)(char *, uint64_t))(v107 + 8);
  v107 += 8;
  uint64_t v54 = v95;
  ((void (*)(char *, uint64_t))v53)(v28, v95);
  uint64_t v87 = v53;
  long long v55 = v84;
  OneOrMore.init(_:)();
  sub_100523288(&qword_10167A4D0, &qword_10167A4B8);
  uint64_t v56 = v86;
  uint64_t v57 = v55;
  uint64_t v58 = v88;
  static RegexComponentBuilder.buildExpression<A>(_:)();
  uint64_t v59 = (void (*)(char *, void))*((void *)v89 + 1);
  v59(v57, v58);
  long long v81 = v51;
  static RegexComponentBuilder.buildPartialBlock<A>(first:)();
  v59(v56, v58);
  uint64_t v60 = v51;
  uint64_t v61 = v80;
  (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v45, v60, v80);
  uint64_t v62 = sub_1005057FC(&qword_10167A438);
  long long v63 = v82;
  _RegexFactory.capture<A, B, C, D>(_:_:_:)();
  v98(v45, v61);
  ((void (*)(char *, uint64_t))v53)(v63, v54);
  uint64_t v64 = v85;
  uint64_t v84 = (char *)v62;
  Capture.init(_:)();
  sub_100523288(&qword_10167A4D8, &qword_10167A4C0);
  uint64_t v65 = v99;
  static RegexComponentBuilder.buildExpression<A>(_:)();
  uint64_t v66 = *(void (**)(char *, uint64_t))(v103 + 8);
  v103 += 8;
  long long v89 = v66;
  v66(v64, v65);
  unsigned __int8 v67 = v91;
  ChoiceOf.init(_:)();
  long long v86 = (char *)sub_100523288(&qword_10167A4A8, &qword_10167A4A0);
  uint64_t v68 = v105;
  static RegexComponentBuilder.buildExpression<A>(_:)();
  uint64_t v69 = *(void (**)(void, void))(v106 + 8);
  v106 += 8;
  uint64_t v88 = v69;
  v69(v67, v68);
  uint64_t v78 = v45;
  static RegexComponentBuilder.buildPartialBlock<A>(first:)();
  makeFactory()();
  uint64_t v70 = v81;
  _RegexFactory.ignoreCapturesInTypedOutput<A>(_:)();
  _RegexFactory.accumulate<A, B, C>(_:_:)();
  uint64_t v71 = v61;
  uint64_t v72 = v98;
  v98(v70, v61);
  uint64_t v73 = v95;
  uint64_t v74 = v87;
  ((void (*)(char *, uint64_t))v87)(v63, v95);
  makeFactory()();
  _RegexFactory.ignoreCapturesInTypedOutput<A>(_:)();
  sub_100523288(&qword_10167A440, &qword_10167A430);
  uint64_t v75 = v92;
  _RegexFactory.accumulate<A, B, C>(_:_:)();
  v72(v70, v71);
  ((void (*)(char *, uint64_t))v74)(v63, v73);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v102, v75);
  v72(v78, v71);
  v88(v104, v105);
  v89(v96, v99);
  return ((uint64_t (*)(char *, uint64_t))v72)(v100, v71);
}

unint64_t *sub_1006A3BF4@<X0>(unint64_t *result@<X0>, unsigned __int8 **a2@<X8>)
{
  uint64_t v3 = *result;
  unint64_t v4 = result[1];
  if ((v4 ^ *result) < 0x4000) {
    goto LABEL_6;
  }
  unint64_t v6 = result[2];
  unint64_t v5 = result[3];
  uint64_t result = (unint64_t *)sub_100D3A6D8(*result, v4, v6, v5, 10);
  if ((v7 & 0x100) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_100D3A348(v3, v4, v6, v5, 10);
    char v10 = v9;
    uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
    if ((v10 & 1) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    uint64_t v8 = 0;
    goto LABEL_7;
  }
  if (v7) {
    goto LABEL_6;
  }
  uint64_t v8 = (unsigned __int8 *)result;
LABEL_7:
  *a2 = v8;
  return result;
}

uint64_t sub_1006A3CB4@<X0>(uint64_t a1@<X8>)
{
  return sub_1006A4308(46, 41, 0xE100000000000000, a1);
}

uint64_t sub_1006A3CC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v1 = sub_1005057FC(&qword_10167A4A0);
  uint64_t v51 = *(void (**)(char *, uint64_t))(v1 - 8);
  __chkstk_darwin(v1, v2);
  unint64_t v4 = (char *)v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)v45 - v7;
  uint64_t v9 = sub_1005057FC(&qword_10167A428);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v50 = (void (*)(char *, uint64_t))((char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for _RegexFactory();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v57 = v12;
  uint64_t v58 = v13;
  __chkstk_darwin(v12, v14);
  uint64_t v46 = (char *)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1005057FC(&qword_10167A478);
  uint64_t v59 = *(void *)(v52 - 8);
  __chkstk_darwin(v52, v16);
  uint64_t v48 = (char *)v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v49 = (char *)v45 - v20;
  uint64_t v21 = sub_1005057FC(&qword_10167A480);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v23);
  uint64_t v54 = (char *)v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v26);
  uint64_t v28 = (char *)v45 - v27;
  __chkstk_darwin(v29, v30);
  uint64_t v47 = (char *)v45 - v31;
  Regex.init(_regexString:version:)();
  uint64_t v55 = sub_100523288(&qword_10167A488, &qword_10167A480);
  static RegexComponentBuilder.buildExpression<A>(_:)();
  uint64_t v56 = *(void (**)(char *, uint64_t))(v22 + 8);
  v56(v28, v21);
  v45[1] = v22 + 8;
  makeFactory()();
  uint64_t v32 = v4;
  ChoiceOf.init(_:)();
  sub_100523288(&qword_10167A4A8, &qword_10167A4A0);
  static RegexComponentBuilder.buildExpression<A>(_:)();
  uint64_t v33 = (void (*)(char *, uint64_t))*((void *)v51 + 1);
  v33(v32, v1);
  uint64_t v34 = v54;
  static RegexComponentBuilder.buildPartialBlock<A>(first:)();
  v33(v8, v1);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v28, v34, v21);
  sub_1005057FC(&qword_10167A448);
  uint64_t v35 = v46;
  _RegexFactory.capture<A, B>(_:)();
  v56(v28, v21);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v58 + 8);
  v58 += 8;
  uint64_t v51 = v36;
  v36(v35, v57);
  uint64_t v37 = v48;
  Capture.init(_:)();
  sub_100523288(&qword_10167A498, &qword_10167A478);
  uint64_t v38 = v49;
  uint64_t v39 = v52;
  static RegexComponentBuilder.buildExpression<A>(_:)();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v59 + 8);
  v59 += 8;
  uint64_t v50 = v40;
  v40(v37, v39);
  uint64_t v41 = v47;
  static RegexComponentBuilder.buildPartialBlock<A>(first:)();
  makeFactory()();
  uint64_t v42 = v54;
  _RegexFactory.ignoreCapturesInTypedOutput<A>(_:)();
  _RegexFactory.accumulate<A, B, C>(_:_:)();
  uint64_t v43 = v56;
  v56(v42, v21);
  v51(v35, v57);
  v43(v28, v21);
  v50(v38, v39);
  return ((uint64_t (*)(char *, uint64_t))v43)(v41, v21);
}

uint64_t sub_1006A42F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1006A4308(42, 10649826, 0xA300000000000000, a1);
}

uint64_t sub_1006A4308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v19[1] = a4;
  uint64_t v7 = sub_1005057FC(&qword_10167A480);
  __chkstk_darwin(v7 - 8, v8);
  v19[0] = type metadata accessor for _RegexFactory();
  uint64_t v9 = *(void *)(v19[0] - 8);
  __chkstk_darwin(v19[0], v10);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_10167A4A0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1;
  unint64_t v23 = 0xE100000000000000;
  sub_1006A4AA8();
  static AlternationBuilder.buildExpression<A>(_:)();
  uint64_t v20 = a2;
  unint64_t v21 = a3;
  static AlternationBuilder.buildExpression<A>(_:)();
  uint64_t v20 = v24;
  unint64_t v21 = v25;
  static AlternationBuilder.buildPartialBlock<A>(first:)();
  swift_bridgeObjectRelease();
  uint64_t v20 = v22;
  unint64_t v21 = v23;
  makeFactory()();
  sub_100523288(&qword_10167A4A8, &qword_10167A4A0);
  _RegexFactory.accumulateAlternation<A, B, C>(_:_:)();
  (*(void (**)(char *, void))(v9 + 8))(v12, v19[0]);
  ChoiceOf.init(_:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
}

uint64_t sub_1006A45AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v1 = sub_1005057FC(&qword_10167A428);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v40 = (void (*)(char *, uint64_t))((char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for _RegexFactory();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v45 = v4;
  uint64_t v46 = v5;
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1005057FC(&qword_10167A478);
  uint64_t v47 = *(void *)(v43 - 8);
  __chkstk_darwin(v43, v9);
  uint64_t v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v41 = (char *)v35 - v14;
  uint64_t v15 = sub_1005057FC(&qword_10167A480);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v42 = (char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)v35 - v21;
  __chkstk_darwin(v23, v24);
  uint64_t v39 = (char *)v35 - v25;
  Regex.init(_regexString:version:)();
  v35[1] = sub_100523288(&qword_10167A488, &qword_10167A480);
  static RegexComponentBuilder.buildExpression<A>(_:)();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v16 + 8);
  v26(v22, v15);
  uint64_t v37 = v16 + 8;
  uint64_t v38 = v26;
  makeFactory()();
  uint64_t v48 = 45;
  unint64_t v49 = 0xE100000000000000;
  sub_1006A4AA8();
  static RegexComponentBuilder.buildExpression<A>(_:)();
  uint64_t v48 = v50;
  unint64_t v49 = v51;
  static RegexComponentBuilder.buildPartialBlock<A>(first:)();
  swift_bridgeObjectRelease();
  sub_1005057FC(&qword_10167A448);
  _RegexFactory.capture<A, B>(_:)();
  v26(v22, v15);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v46 + 8);
  v46 += 8;
  uint64_t v36 = v27;
  v27(v8, v45);
  Capture.init(_:)();
  sub_100523288(&qword_10167A498, &qword_10167A478);
  uint64_t v28 = v41;
  uint64_t v29 = v43;
  static RegexComponentBuilder.buildExpression<A>(_:)();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v47 + 8);
  v47 += 8;
  uint64_t v40 = v30;
  v30(v11, v29);
  uint64_t v31 = v39;
  static RegexComponentBuilder.buildPartialBlock<A>(first:)();
  makeFactory()();
  uint64_t v32 = v42;
  _RegexFactory.ignoreCapturesInTypedOutput<A>(_:)();
  _RegexFactory.accumulate<A, B, C>(_:_:)();
  uint64_t v33 = v38;
  v38(v32, v15);
  v36(v8, v45);
  v33(v22, v15);
  v40(v28, v29);
  return ((uint64_t (*)(char *, uint64_t))v33)(v31, v15);
}

unint64_t sub_1006A4AA8()
{
  unint64_t result = qword_10167A490;
  if (!qword_10167A490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167A490);
  }
  return result;
}

unint64_t sub_1006A4AFC()
{
  unint64_t result = qword_10167A4C8;
  if (!qword_10167A4C8)
  {
    type metadata accessor for CharacterClass();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167A4C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLWPSmartListGenerator()
{
  return &type metadata for CRLWPSmartListGenerator;
}

uint64_t destroy for CRLWPSmartListGenerator.RegexMatch()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CRLWPSmartListGenerator.RegexMatch(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v4;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  uint64_t v5 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLWPSmartListGenerator.RegexMatch(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for CRLFillData(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for CRLWPSmartListGenerator.RegexMatch(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLWPSmartListGenerator.RegexMatch(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLWPSmartListGenerator.RegexMatch(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLWPSmartListGenerator.RegexMatch()
{
  return &type metadata for CRLWPSmartListGenerator.RegexMatch;
}

id CRLiOSAlignmentToolsController.__allocating_init(delegate:)()
{
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSAlignmentToolsController____lazy_storage___viewController] = 0;
  swift_unknownObjectWeakAssign();
  v4.receiver = v1;
  v4.super_class = v0;
  [super init];
  swift_unknownObjectRelease();
  return v2;
}

id CRLiOSAlignmentToolsController.init(delegate:)()
{
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSAlignmentToolsController____lazy_storage___viewController] = 0;
  swift_unknownObjectWeakAssign();
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for CRLiOSAlignmentToolsController();
  [super init];
  swift_unknownObjectRelease();
  return v1;
}

uint64_t type metadata accessor for CRLiOSAlignmentToolsController()
{
  return self;
}

id sub_1006A5024()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform30CRLiOSAlignmentToolsController____lazy_storage___viewController;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSAlignmentToolsController____lazy_storage___viewController];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSAlignmentToolsController____lazy_storage___viewController];
  }
  else
  {
    objc_super v4 = v0;
    uint64_t v5 = v0;
    sub_1006A5154(v0, v13);
    id v6 = objc_allocWithZone((Class)sub_1005057FC(&qword_10167A518));
    uint64_t v7 = (void *)UIHostingController.init(rootView:)();
    [v7 setModalPresentationStyle:2];
    id v8 = [v7 presentationController];
    if (v8)
    {
      uint64_t v9 = v8;
      [v8 setDelegate:v5];
    }
    uint64_t v10 = *(void **)&v4[v1];
    *(void *)&v4[v1] = v7;
    id v3 = v7;

    id v2 = 0;
  }
  id v11 = v2;
  return v3;
}

void sub_1006A5154(void *a1@<X0>, void *a2@<X8>)
{
  swift_unknownObjectWeakInit();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  a2[1] = AppStorage.init<A>(wrappedValue:_:store:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  a2[2] = AppStorage.init<A>(wrappedValue:_:store:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  a2[3] = AppStorage.init<A>(wrappedValue:_:store:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  a2[4] = AppStorage.init<A>(wrappedValue:_:store:)();
  id v3 = self;
  id v4 = [v3 mainBundle];
  NSString v5 = String._bridgeToObjectiveC()();
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v4 localizedStringForKey:v5 value:v6 table:0];

  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  a2[5] = v8;
  a2[6] = v10;
  id v11 = [v3 mainBundle];
  NSString v12 = String._bridgeToObjectiveC()();
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v11 localizedStringForKey:v12 value:v13 table:0];

  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  a2[7] = v15;
  a2[8] = v17;
  id v18 = [v3 mainBundle];
  NSString v19 = String._bridgeToObjectiveC()();
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v18 localizedStringForKey:v19 value:v20 table:0];

  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;

  a2[9] = v22;
  a2[10] = v24;
  id v25 = [v3 mainBundle];
  NSString v26 = String._bridgeToObjectiveC()();
  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = [v25 localizedStringForKey:v26 value:v27 table:0];

  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = v30;

  a2[11] = v29;
  a2[12] = v31;
  id v32 = [v3 mainBundle];
  NSString v33 = String._bridgeToObjectiveC()();
  NSString v34 = String._bridgeToObjectiveC()();
  id v35 = [v32 localizedStringForKey:v33 value:v34 table:0];

  uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v38 = v37;

  a2[13] = v36;
  a2[14] = v38;
  id v39 = [v3 mainBundle];
  NSString v40 = String._bridgeToObjectiveC()();
  NSString v41 = String._bridgeToObjectiveC()();
  id v42 = [v39 localizedStringForKey:v40 value:v41 table:0];

  uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v45 = v44;

  a2[15] = v43;
  a2[16] = v45;
  id v46 = [v3 mainBundle];
  NSString v47 = String._bridgeToObjectiveC()();
  NSString v48 = String._bridgeToObjectiveC()();
  id v49 = [v46 localizedStringForKey:v47 value:v48 table:0];

  uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v52 = v51;

  a2[17] = v50;
  a2[18] = v52;
  id v53 = [v3 mainBundle];
  NSString v54 = String._bridgeToObjectiveC()();
  NSString v55 = String._bridgeToObjectiveC()();
  id v56 = [v53 localizedStringForKey:v54 value:v55 table:0];

  uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v59 = v58;

  a2[19] = v57;
  a2[20] = v59;
  swift_unknownObjectWeakAssign();
}

Swift::Void __swiftcall CRLiOSAlignmentToolsController.dismissAlignmentTools()()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong alignmentToolsControllerShouldDismiss:v0];
    swift_unknownObjectRelease();
  }
}

void CRLiOSAlignmentToolsController.init()()
{
}

id CRLiOSAlignmentToolsController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSAlignmentToolsController();
  return [super dealloc];
}

Swift::Void __swiftcall CRLiOSAlignmentToolsController.presentationControllerDidDismiss(_:)(UIPresentationController a1)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong userDismissedAlignmentToolsController:v1];
    swift_unknownObjectRelease();
  }
}

uint64_t destroy for CRLiOSAlignmentToolsView()
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CRLiOSAlignmentToolsView(void *a1, void *a2)
{
  swift_unknownObjectWeakCopyInit();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  uint64_t v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  uint64_t v7 = a2[8];
  a1[7] = a2[7];
  a1[8] = v7;
  uint64_t v8 = a2[10];
  a1[9] = a2[9];
  a1[10] = v8;
  uint64_t v9 = a2[12];
  a1[11] = a2[11];
  a1[12] = v9;
  uint64_t v10 = a2[14];
  a1[13] = a2[13];
  a1[14] = v10;
  uint64_t v11 = a2[16];
  a1[15] = a2[15];
  a1[16] = v11;
  uint64_t v12 = a2[18];
  a1[17] = a2[17];
  a1[18] = v12;
  uint64_t v13 = a2[19];
  uint64_t v14 = a2[20];
  a1[19] = v13;
  a1[20] = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CRLiOSAlignmentToolsView(void *a1, void *a2)
{
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  a1[18] = a2[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[19] = a2[19];
  a1[20] = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for CRLiOSAlignmentToolsView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_unknownObjectWeakTakeInit();
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v3 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(v3 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(v3 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(v3 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(v3 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(v3 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(v3 + 136) = *(_OWORD *)(a2 + 136);
  __n128 result = *(__n128 *)(a2 + 152);
  *(__n128 *)(v3 + 152) = result;
  return result;
}

void *assignWithTake for CRLiOSAlignmentToolsView(void *a1, void *a2)
{
  swift_unknownObjectWeakTakeAssign();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  uint64_t v4 = a2[6];
  a1[5] = a2[5];
  a1[6] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[8];
  a1[7] = a2[7];
  a1[8] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[10];
  a1[9] = a2[9];
  a1[10] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[12];
  a1[11] = a2[11];
  a1[12] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[14];
  a1[13] = a2[13];
  a1[14] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[16];
  a1[15] = a2[15];
  a1[16] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[18];
  a1[17] = a2[17];
  a1[18] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[20];
  a1[19] = a2[19];
  a1[20] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLiOSAlignmentToolsView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 168)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLiOSAlignmentToolsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 168) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLiOSAlignmentToolsView()
{
  return &type metadata for CRLiOSAlignmentToolsView;
}

uint64_t sub_1006A5FA0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006A5FBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v36 = type metadata accessor for ToolbarTitleDisplayMode();
  uint64_t v34 = *(void *)(v36 - 8);
  __chkstk_darwin(v36, v3);
  NSString v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_10167A540);
  uint64_t v29 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_10167A538);
  uint64_t v30 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_10167A530);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v31 = v13;
  uint64_t v32 = v14;
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = a1;
  sub_1005057FC(&qword_10167A578);
  sub_100523288(&qword_10167A580, &qword_10167A578);
  Form.init(content:)();
  uint64_t v37 = a1;
  uint64_t v18 = sub_1005057FC(&qword_10167A548);
  uint64_t v19 = sub_100523288((unint64_t *)&unk_10167A550, &qword_10167A540);
  uint64_t v20 = sub_100522D34(&qword_10167D8B0);
  uint64_t v21 = sub_100523288((unint64_t *)&unk_10167A560, &qword_10167D8B0);
  uint64_t v39 = v20;
  NSString v40 = (void *)v21;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  View.toolbar<A>(content:)();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v5);
  uint64_t v23 = *(void *)(a1 + 48);
  uint64_t v43 = *(void *)(a1 + 40);
  uint64_t v44 = v23;
  uint64_t v39 = v5;
  NSString v40 = (void *)v18;
  uint64_t v41 = v19;
  unint64_t v42 = OpaqueTypeConformance2;
  uint64_t v24 = swift_getOpaqueTypeConformance2();
  unint64_t v25 = sub_10052E310();
  View.navigationTitle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v9);
  NSString v26 = v33;
  static ToolbarTitleDisplayMode.inline.getter();
  uint64_t v39 = v9;
  NSString v40 = &type metadata for String;
  uint64_t v41 = v24;
  unint64_t v42 = v25;
  swift_getOpaqueTypeConformance2();
  uint64_t v27 = v31;
  View.toolbarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v17, v27);
}

uint64_t sub_1006A6450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v53 = sub_1005057FC(&qword_10167A5C0);
  uint64_t v56 = *(void *)(v53 - 8);
  __chkstk_darwin(v53, v3);
  uint64_t v52 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  NSString v55 = (char *)&v45 - v7;
  uint64_t v51 = sub_1005057FC(&qword_10167A5C8);
  uint64_t v48 = *(void *)(v51 - 8);
  uint64_t v8 = v48;
  __chkstk_darwin(v51, v9);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v45 - v14;
  uint64_t v16 = sub_1005057FC(&qword_10167A5D0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1005057FC(&qword_10167A5D8);
  __chkstk_darwin(v21 - 8, v22);
  uint64_t v24 = (char *)&v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v26);
  id v28 = (char *)&v45 - v27;
  uint64_t v59 = a1;
  sub_1005057FC(&qword_10167A5E0);
  sub_1006A7B28();
  Section<>.init(content:)();
  static Alignment.center.getter();
  uint64_t v29 = (uint64_t)v24;
  __n128 v30 = sub_1007B5634(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v24, 0.0, 1, 0.0, 1);
  (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v20, v16, v30);
  uint64_t v50 = v28;
  sub_1006A7BC8((uint64_t)v24, (uint64_t)v28);
  uint64_t v58 = a1;
  sub_1005057FC(&qword_10167A600);
  sub_100523288(&qword_10167A608, &qword_10167A600);
  NSString v47 = v15;
  Section<>.init(content:)();
  uint64_t v31 = *(void *)(a1 + 96);
  uint64_t v60 = *(void *)(a1 + 88);
  uint64_t v61 = v31;
  sub_10052E310();
  swift_bridgeObjectRetain();
  uint64_t v60 = Text.init<A>(_:)();
  uint64_t v61 = v32;
  char v62 = v33 & 1;
  uint64_t v63 = v34;
  uint64_t v57 = a1;
  sub_1005057FC(&qword_10167A610);
  sub_100523288(&qword_10167A618, &qword_10167A610);
  uint64_t v35 = v55;
  Section<>.init(header:content:)();
  id v49 = v24;
  sub_1006A7C40((uint64_t)v28, (uint64_t)v24);
  id v46 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v36 = v51;
  v46(v11, v15, v51);
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
  uint64_t v39 = v52;
  uint64_t v38 = v53;
  v37(v52, v35, v53);
  uint64_t v40 = v54;
  sub_1006A7C40(v29, v54);
  uint64_t v41 = sub_1005057FC(&qword_10167A620);
  v46((char *)(v40 + *(int *)(v41 + 48)), v11, v36);
  v37((char *)(v40 + *(int *)(v41 + 64)), v39, v38);
  unint64_t v42 = *(void (**)(char *, uint64_t))(v56 + 8);
  v42(v55, v38);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v48 + 8);
  v43(v47, v36);
  sub_1006A7CA8((uint64_t)v50);
  v42(v39, v38);
  v43(v11, v36);
  return sub_1006A7CA8((uint64_t)v49);
}

uint64_t sub_1006A69EC@<X0>(uint64_t a1@<X8>)
{
  sub_10052E310();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Font.footnote.getter();
  uint64_t v7 = Text.font(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  sub_1006A7D28(v2, v4, v6);
  swift_bridgeObjectRelease();
  static HierarchicalShapeStyle.secondary.getter();
  uint64_t v12 = Text.foregroundStyle<A>(_:)();
  uint64_t v14 = v13;
  char v16 = v15;
  uint64_t v18 = v17;
  sub_1006A7D28(v7, v9, v11 & 1);
  swift_bridgeObjectRelease();
  static Color.clear.getter();
  uint64_t result = AnyView.init<A>(_:)();
  *(void *)a1 = v12;
  *(void *)(a1 + 8) = v14;
  *(unsigned char *)(a1 + 16) = v16 & 1;
  *(void *)(a1 + 24) = v18;
  *(void *)(a1 + 32) = result;
  return result;
}

uint64_t sub_1006A6B48()
{
  return Toggle.init(isOn:label:)();
}

uint64_t sub_1006A6BC4@<X0>(uint64_t a1@<X8>)
{
  sub_10052E310();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1006A6C30@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = sub_1005057FC(&qword_10167A600);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v38 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v37 = (char *)&v34 - v9;
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v34 - v12;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v34 - v16;
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v34 - v20;
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v34 - v24;
  AppStorage.projectedValue.getter();
  uint64_t v42 = a1;
  uint64_t v36 = v25;
  Toggle.init(isOn:label:)();
  AppStorage.projectedValue.getter();
  uint64_t v41 = a1;
  uint64_t v34 = v21;
  Toggle.init(isOn:label:)();
  AppStorage.projectedValue.getter();
  uint64_t v40 = a1;
  Toggle.init(isOn:label:)();
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v27 = v13;
  uint64_t v35 = v13;
  v26(v13, v25, v3);
  id v28 = v37;
  v26(v37, v21, v3);
  uint64_t v29 = v38;
  v26(v38, v17, v3);
  __n128 v30 = v39;
  v26(v39, v27, v3);
  uint64_t v31 = sub_1005057FC(&qword_10167A628);
  v26(&v30[*(int *)(v31 + 48)], v28, v3);
  v26(&v30[*(int *)(v31 + 64)], v29, v3);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v4 + 8);
  v32(v17, v3);
  v32(v34, v3);
  v32(v36, v3);
  v32(v29, v3);
  v32(v28, v3);
  return ((uint64_t (*)(char *, uint64_t))v32)(v35, v3);
}

uint64_t sub_1006A6FD4@<X0>(uint64_t a1@<X8>)
{
  sub_10052E310();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1006A7040@<X0>(uint64_t a1@<X8>)
{
  sub_10052E310();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1006A70AC@<X0>(uint64_t a1@<X8>)
{
  sub_10052E310();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1006A7118(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v4 = sub_1005057FC(&qword_10167D8B0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.topBarTrailing.getter();
  uint64_t v11 = a1;
  sub_1005057FC(&qword_10167A588);
  sub_1006A7908();
  ToolbarItem<>.init(placement:content:)();
  sub_100523288((unint64_t *)&unk_10167A560, &qword_10167D8B0);
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1006A72BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = sub_1005057FC(&qword_10167A598);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10167A5B8);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[20];
  v22[21] = a1[19];
  v22[22] = v13;
  sub_1006A7A08(a1, v22);
  uint64_t v14 = swift_allocObject();
  sub_1006A7AD8((uint64_t)v22, v14 + 16);
  sub_10052E310();
  swift_bridgeObjectRetain();
  Button<>.init<A>(_:action:)();
  static Font.Weight.bold.getter();
  sub_100523288(&qword_10167A5A0, &qword_10167A598);
  View.fontWeight(_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  uint64_t v15 = static Color.accentColor.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v21, v12, v8);
  uint64_t v18 = (uint64_t *)(v17 + *(int *)(sub_1005057FC(&qword_10167A588) + 36));
  *uint64_t v18 = KeyPath;
  v18[1] = v15;
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

void sub_1006A7550()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v2 = (id)Strong;
    uint64_t v1 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v1)
    {
      [v1 alignmentToolsControllerShouldDismiss:v2];

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_1006A7600()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_1006A761C@<X0>(uint64_t a1@<X8>)
{
  v20[1] = a1;
  uint64_t v2 = sub_1005057FC(&qword_10167A520);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v1;
  v20[0] = sub_1005057FC(&qword_10167A528);
  uint64_t v7 = sub_100522D34(&qword_10167A530);
  uint64_t v8 = sub_100522D34(&qword_10167A538);
  uint64_t v9 = sub_100522D34(&qword_10167A540);
  uint64_t v10 = sub_100522D34(&qword_10167A548);
  uint64_t v11 = sub_100523288((unint64_t *)&unk_10167A550, &qword_10167A540);
  uint64_t v12 = sub_100522D34(&qword_10167D8B0);
  uint64_t v13 = sub_100523288((unint64_t *)&unk_10167A560, &qword_10167D8B0);
  uint64_t v22 = v12;
  uint64_t v23 = (void *)v13;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v22 = v9;
  uint64_t v23 = (void *)v10;
  uint64_t v24 = v11;
  unint64_t v25 = OpaqueTypeConformance2;
  uint64_t v15 = swift_getOpaqueTypeConformance2();
  unint64_t v16 = sub_10052E310();
  uint64_t v22 = v8;
  uint64_t v23 = &type metadata for String;
  uint64_t v24 = v15;
  unint64_t v25 = v16;
  uint64_t v17 = swift_getOpaqueTypeConformance2();
  uint64_t v22 = v7;
  uint64_t v23 = (void *)v17;
  swift_getOpaqueTypeConformance2();
  NavigationStack.init<>(root:)();
  id v18 = [self standardUserDefaults];
  sub_100523288(&qword_10167A570, &qword_10167A520);
  View.defaultAppStorage(_:)();

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_1006A78E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1006A5FBC(*(void *)(v1 + 16), a1);
}

uint64_t sub_1006A78F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1006A6450(*(void *)(v1 + 16), a1);
}

uint64_t sub_1006A78F8()
{
  return sub_1006A7118(*(void *)(v0 + 16));
}

uint64_t sub_1006A7900@<X0>(uint64_t a1@<X8>)
{
  return sub_1006A72BC(*(void **)(v1 + 16), a1);
}

unint64_t sub_1006A7908()
{
  unint64_t result = qword_10167A590;
  if (!qword_10167A590)
  {
    sub_100522D34(&qword_10167A588);
    sub_100522D34(&qword_10167A598);
    sub_100523288(&qword_10167A5A0, &qword_10167A598);
    swift_getOpaqueTypeConformance2();
    sub_100523288(&qword_10167A5A8, &qword_10167A5B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167A590);
  }
  return result;
}

void *sub_1006A7A08(void *a1, void *a2)
{
  return a2;
}

uint64_t sub_1006A7A40()
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 184, 7);
}

uint64_t sub_1006A7AD8(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1006A7B10()
{
}

uint64_t sub_1006A7B20@<X0>(uint64_t a1@<X8>)
{
  return sub_1006A69EC(a1);
}

unint64_t sub_1006A7B28()
{
  unint64_t result = qword_10167A5E8;
  if (!qword_10167A5E8)
  {
    sub_100522D34(&qword_10167A5E0);
    sub_100523288(&qword_10167A5F0, &qword_10167A5F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167A5E8);
  }
  return result;
}

uint64_t sub_1006A7BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10167A5D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006A7C30()
{
  return sub_1006A6B48();
}

uint64_t sub_1006A7C38@<X0>(char *a1@<X8>)
{
  return sub_1006A6C30(*(void *)(v1 + 16), a1);
}

uint64_t sub_1006A7C40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10167A5D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006A7CA8(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10167A5D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1006A7D08@<X0>(uint64_t a1@<X8>)
{
  return sub_1006A6FD4(a1);
}

uint64_t sub_1006A7D10@<X0>(uint64_t a1@<X8>)
{
  return sub_1006A7040(a1);
}

uint64_t sub_1006A7D18@<X0>(uint64_t a1@<X8>)
{
  return sub_1006A70AC(a1);
}

uint64_t sub_1006A7D20@<X0>(uint64_t a1@<X8>)
{
  return sub_1006A6BC4(a1);
}

uint64_t sub_1006A7D28(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1006A7D38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006A7DB8(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10169A270);
  uint64_t v4 = __chkstk_darwin(v2, v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v23 - v8;
  unint64_t v27 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v25 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v26 = (unint64_t)(v11 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  uint64_t v24 = a1;
  if (v13) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v18 = v15 + 1;
  if (!__OFADD__(v15, 1))
  {
    if (v18 < v26)
    {
      unint64_t v19 = *(void *)(v25 + 8 * v18);
      ++v15;
      if (v19) {
        goto LABEL_22;
      }
      int64_t v15 = v18 + 1;
      if (v18 + 1 >= v26) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v25 + 8 * v15);
      if (v19) {
        goto LABEL_22;
      }
      int64_t v15 = v18 + 2;
      if (v18 + 2 >= v26) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v25 + 8 * v15);
      if (v19) {
        goto LABEL_22;
      }
      int64_t v15 = v18 + 3;
      if (v18 + 3 >= v26) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v25 + 8 * v15);
      if (v19)
      {
LABEL_22:
        unint64_t v13 = (v19 - 1) & v19;
        for (unint64_t i = __clz(__rbit64(v19)) + (v15 << 6); ; unint64_t i = v16 | (v15 << 6))
        {
          uint64_t v21 = *(void *)(a1 + 48);
          uint64_t v22 = type metadata accessor for UUID();
          (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v9, v21 + *(void *)(*(void *)(v22 - 8) + 72) * i, v22);
          *(void *)&v9[*(int *)(v2 + 48)] = *(void *)(*(void *)(a1 + 56) + 8 * i);
          sub_1006B61A0((uint64_t)v9, (uint64_t)v6);
          if ((*(void *)(*(void *)&v6[*(int *)(v2 + 48)] + OBJC_IVAR____TtC8Freeform19CRLTransactableData_data) & 0x8000000000000000) != 0)
          {
            swift_retain();
            swift_retain();
            sub_100522F00((uint64_t)v6, &qword_10169A270);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            uint64_t result = specialized Array._endMutation()();
            a1 = v24;
            if (!v13) {
              goto LABEL_7;
            }
          }
          else
          {
            swift_retain();
            uint64_t result = sub_100522F00((uint64_t)v6, &qword_10169A270);
            if (!v13) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v16 = __clz(__rbit64(v13));
          v13 &= v13 - 1;
        }
      }
      int64_t v20 = v18 + 4;
      if (v20 < v26)
      {
        unint64_t v19 = *(void *)(v25 + 8 * v20);
        if (v19)
        {
          int64_t v15 = v20;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v15 = v20 + 1;
          if (__OFADD__(v20, 1)) {
            goto LABEL_30;
          }
          if (v15 >= v26) {
            break;
          }
          unint64_t v19 = *(void *)(v25 + 8 * v15);
          ++v20;
          if (v19) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_28:
    swift_release();
    return v27;
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1006A80E8(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_1016892B0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v58 = (uint64_t)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v61 - 8);
  uint64_t v11 = __chkstk_darwin(v61, v10);
  uint64_t v52 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v13);
  uint64_t v48 = (char *)&v47 - v14;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLTransactableHashableWrapper();
    sub_1006B62F8((unint64_t *)&qword_10169A0A0, (void (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    a1 = v63;
    uint64_t v57 = v64;
    uint64_t v16 = v65;
    uint64_t v17 = v66;
    unint64_t v18 = v67;
  }
  else
  {
    uint64_t v19 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v20 = *(void *)(a1 + 56);
    uint64_t v57 = a1 + 56;
    uint64_t v16 = ~v19;
    uint64_t v21 = -v19;
    if (v21 < 64) {
      uint64_t v22 = ~(-1 << v21);
    }
    else {
      uint64_t v22 = -1;
    }
    unint64_t v18 = v22 & v20;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v17 = 0;
  }
  uint64_t v55 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v50 = v16;
  int64_t v56 = (unint64_t)(v16 + 64) >> 6;
  uint64_t v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  uint64_t v53 = _swiftEmptyArrayStorage;
  uint64_t v49 = v9;
  uint64_t v51 = (void (**)(char *, char *, uint64_t))(v9 + 32);
  uint64_t v54 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v60 = a1;
  while (1)
  {
    uint64_t v24 = v17;
    if ((a1 & 0x8000000000000000) == 0) {
      break;
    }
    uint64_t v27 = __CocoaSet.Iterator.next()();
    if (!v27) {
      goto LABEL_44;
    }
    uint64_t v62 = v27;
    type metadata accessor for CRLTransactableHashableWrapper();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v28 = v68;
    swift_unknownObjectRelease();
    a1 = v60;
    if (!v28) {
      goto LABEL_44;
    }
LABEL_31:
    type metadata accessor for CRLFreehandDrawingShapeItem();
    uint64_t v33 = swift_dynamicCastClass();
    if (v33)
    {
      if (**(_UNKNOWN *****)(v33 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) == &off_101676660) {
        uint64_t v34 = *(void *)(v33 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      }
      else {
        uint64_t v34 = 0;
      }
      uint64_t v35 = v34 + *(void *)(*(void *)v34 + 632);
      swift_beginAccess();
      uint64_t v36 = v35;
      uint64_t v37 = v58;
      sub_1006087A4(v36, v58);
      swift_unknownObjectRetain();
      swift_retain();
      sub_1005057FC(&qword_101674550);
      CRRegister.wrappedValue.getter();
      a1 = v60;
      sub_100522F00(v37, &qword_1016892B0);
      swift_release();
      swift_unknownObjectRelease();
      uint64_t v38 = 0;
    }
    else
    {
      uint64_t v38 = 1;
    }
    uint64_t v39 = v61;
    (*v59)(v8, v38, 1, v61);
    swift_release();
    if ((*v23)(v8, 1, v39) == 1)
    {
      uint64_t result = sub_100522F00((uint64_t)v8, (uint64_t *)&unk_101674520);
    }
    else
    {
      uint64_t v40 = *v51;
      uint64_t v41 = v48;
      uint64_t v42 = v61;
      (*v51)(v48, v8, v61);
      v40(v52, v41, v42);
      unint64_t v43 = (unint64_t)v53;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v43 = sub_100F617D8(0, *(void *)(v43 + 16) + 1, 1, v43);
      }
      unint64_t v45 = *(void *)(v43 + 16);
      unint64_t v44 = *(void *)(v43 + 24);
      if (v45 >= v44 >> 1) {
        unint64_t v43 = sub_100F617D8(v44 > 1, v45 + 1, 1, v43);
      }
      *(void *)(v43 + 16) = v45 + 1;
      unint64_t v46 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
      uint64_t v53 = (double *)v43;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v40)(v43 + v46 + *(void *)(v49 + 72) * v45, v52, v61);
      a1 = v60;
    }
  }
  if (v18)
  {
    unint64_t v25 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    unint64_t v26 = v25 | (v17 << 6);
LABEL_30:
    uint64_t v32 = *(void *)(*(void *)(a1 + 48) + 8 * v26);
    swift_retain();
    if (!v32) {
      goto LABEL_44;
    }
    goto LABEL_31;
  }
  int64_t v29 = v17 + 1;
  if (!__OFADD__(v17, 1))
  {
    if (v29 >= v56) {
      goto LABEL_44;
    }
    unint64_t v30 = *(void *)(v57 + 8 * v29);
    ++v17;
    if (!v30)
    {
      uint64_t v17 = v24 + 2;
      if (v24 + 2 >= v56) {
        goto LABEL_44;
      }
      unint64_t v30 = *(void *)(v57 + 8 * v17);
      if (!v30)
      {
        uint64_t v17 = v24 + 3;
        if (v24 + 3 >= v56) {
          goto LABEL_44;
        }
        unint64_t v30 = *(void *)(v57 + 8 * v17);
        if (!v30)
        {
          uint64_t v17 = v24 + 4;
          if (v24 + 4 >= v56) {
            goto LABEL_44;
          }
          unint64_t v30 = *(void *)(v57 + 8 * v17);
          if (!v30)
          {
            uint64_t v17 = v24 + 5;
            if (v24 + 5 >= v56) {
              goto LABEL_44;
            }
            unint64_t v30 = *(void *)(v57 + 8 * v17);
            if (!v30)
            {
              uint64_t v31 = v24 + 6;
              while (v56 != v31)
              {
                unint64_t v30 = *(void *)(v57 + 8 * v31++);
                if (v30)
                {
                  uint64_t v17 = v31 - 1;
                  goto LABEL_29;
                }
              }
LABEL_44:
              sub_10052E1EC();
              return (uint64_t)v53;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v18 = (v30 - 1) & v30;
    unint64_t v26 = __clz(__rbit64(v30)) + (v17 << 6);
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

double *sub_1006A876C(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)&unk_101674520;
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v9 = __chkstk_darwin(v7, v8);
  uint64_t v42 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  uint64_t v41 = (char *)&v38 - v13;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v46 = a1 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v47 = (unint64_t)(v15 + 63) >> 6;
  unint64_t v18 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  unint64_t v44 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  unint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v39 = v12;
  uint64_t v40 = (void (**)(char *, char *, uint64_t))(v12 + 32);
  uint64_t result = (double *)swift_bridgeObjectRetain();
  int64_t v20 = 0;
  unint64_t v43 = _swiftEmptyArrayStorage;
  if (v17) {
    goto LABEL_7;
  }
LABEL_8:
  while (2)
  {
    int64_t v23 = v20 + 1;
    if (!__OFADD__(v20, 1))
    {
      if (v23 < v47)
      {
        unint64_t v24 = *(void *)(v46 + 8 * v23);
        ++v20;
        if (v24) {
          goto LABEL_23;
        }
        int64_t v20 = v23 + 1;
        if (v23 + 1 >= v47) {
          goto LABEL_34;
        }
        unint64_t v24 = *(void *)(v46 + 8 * v20);
        if (v24) {
          goto LABEL_23;
        }
        int64_t v20 = v23 + 2;
        if (v23 + 2 >= v47) {
          goto LABEL_34;
        }
        unint64_t v24 = *(void *)(v46 + 8 * v20);
        if (v24) {
          goto LABEL_23;
        }
        int64_t v20 = v23 + 3;
        if (v23 + 3 >= v47) {
          goto LABEL_34;
        }
        unint64_t v24 = *(void *)(v46 + 8 * v20);
        if (v24)
        {
LABEL_23:
          unint64_t v17 = (v24 - 1) & v24;
          for (unint64_t i = __clz(__rbit64(v24)) + (v20 << 6); ; unint64_t i = v21 | (v20 << 6))
          {
            uint64_t v26 = *(void *)(*(void *)(a1 + 56) + 8 * i);
            uint64_t v27 = *(void *)(v26 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_data);
            if ((v27 & 0x8000000000000000) == 0) {
              break;
            }
            uint64_t v28 = v2;
            uint64_t v29 = (*(uint64_t (**)(double *))(*(void *)(v27 & 0x7FFFFFFFFFFFFFFFLL) + 408))(result);
            if ((v30 & 1) != 0 && v29 == 9) {
              break;
            }
            (*v45)(v6, v26 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_id, v7);
            (*v18)(v6, 0, 1, v7);
            if ((*v44)(v6, 1, v7) == 1) {
              goto LABEL_6;
            }
            uint64_t v31 = *v40;
            (*v40)(v41, v6, v7);
            v31(v42, v41, v7);
            uint64_t v32 = v31;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v43 = (double *)sub_100F617D8(0, *((void *)v43 + 2) + 1, 1, (unint64_t)v43);
            }
            unint64_t v34 = *((void *)v43 + 2);
            unint64_t v33 = *((void *)v43 + 3);
            unint64_t v35 = v34 + 1;
            if (v34 >= v33 >> 1)
            {
              unint64_t v38 = v34 + 1;
              uint64_t v37 = (double *)sub_100F617D8(v33 > 1, v34 + 1, 1, (unint64_t)v43);
              unint64_t v35 = v38;
              unint64_t v43 = v37;
            }
            uint64_t v36 = v43;
            *((void *)v43 + 2) = v35;
            uint64_t result = (double *)((uint64_t (*)(char *, char *, uint64_t))v32)((char *)v36+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v34, v42, v7);
            uint64_t v2 = v28;
            if (!v17) {
              goto LABEL_8;
            }
LABEL_7:
            unint64_t v21 = __clz(__rbit64(v17));
            v17 &= v17 - 1;
          }
          (*v18)(v6, 1, 1, v7);
LABEL_6:
          uint64_t result = (double *)sub_100522F00((uint64_t)v6, v2);
          if (!v17) {
            continue;
          }
          goto LABEL_7;
        }
        int64_t v25 = v23 + 4;
        if (v25 < v47)
        {
          unint64_t v24 = *(void *)(v46 + 8 * v25);
          if (v24)
          {
            int64_t v20 = v25;
            goto LABEL_23;
          }
          while (1)
          {
            int64_t v20 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_36;
            }
            if (v20 >= v47) {
              break;
            }
            unint64_t v24 = *(void *)(v46 + 8 * v20);
            ++v25;
            if (v24) {
              goto LABEL_23;
            }
          }
        }
      }
LABEL_34:
      swift_release();
      return v43;
    }
    break;
  }
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1006A8BF4(uint64_t a1)
{
  uint64_t v58 = sub_1005057FC(&qword_10169A270);
  uint64_t v4 = __chkstk_darwin(v58, v3);
  uint64_t v57 = (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  int64_t v56 = (char *)&v45 - v8;
  __chkstk_darwin(v7, v9);
  uint64_t v55 = (char *)&v45 - v10;
  uint64_t v62 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v62 - 8);
  __chkstk_darwin(v62, v12);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = _swiftEmptyArrayStorage;
  if (!v15) {
    return (uint64_t)v16;
  }
  uint64_t v45 = v1;
  uint64_t v63 = _swiftEmptyArrayStorage;
  sub_1006BB544(0, v15, 0);
  uint64_t result = sub_10058EAB4(a1);
  uint64_t v19 = result;
  uint64_t v20 = 0;
  uint64_t v21 = a1 + 64;
  uint64_t v52 = v11 + 16;
  uint64_t v53 = v11;
  uint64_t v49 = a1 + 64;
  uint64_t v50 = v11 + 32;
  uint64_t v46 = a1 + 80;
  int64_t v47 = v15;
  uint64_t v54 = a1;
  uint64_t v48 = v18;
  uint64_t v51 = v14;
  while ((v19 & 0x8000000000000000) == 0 && v19 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v24 = (unint64_t)v19 >> 6;
    if ((*(void *)(v21 + 8 * ((unint64_t)v19 >> 6)) & (1 << v19)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v18) {
      goto LABEL_26;
    }
    uint64_t v59 = v20;
    uint64_t v60 = 1 << v19;
    uint64_t v25 = v58;
    uint64_t v26 = *(int *)(v58 + 48);
    uint64_t v27 = *(void *)(a1 + 48);
    uint64_t v28 = a1;
    uint64_t v61 = *(void *)(v11 + 72);
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v30 = (uint64_t)v55;
    uint64_t v31 = v62;
    v29(v55, v27 + v61 * v19, v62);
    uint64_t v32 = *(void *)(*(void *)(v28 + 56) + 8 * v19);
    *(void *)(v30 + v26) = v32;
    unint64_t v33 = v56;
    v29(v56, v30, v31);
    *(void *)&v33[*(int *)(v25 + 48)] = v32;
    uint64_t v34 = (uint64_t)v33;
    uint64_t v35 = v57;
    sub_1006B61A0(v34, v57);
    swift_retain_n();
    sub_100522F00(v30, &qword_10169A270);
    uint64_t v36 = *(int *)(v25 + 48);
    uint64_t v37 = v51;
    v29(v51, *(void *)(v35 + v36) + OBJC_IVAR____TtC8Freeform19CRLTransactableData_id, v31);
    sub_100522F00(v35, &qword_10169A270);
    uint64_t v16 = v63;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1006BB544(0, *((void *)v16 + 2) + 1, 1);
      uint64_t v16 = v63;
    }
    unint64_t v39 = *((void *)v16 + 2);
    unint64_t v38 = *((void *)v16 + 3);
    uint64_t v11 = v53;
    if (v39 >= v38 >> 1)
    {
      sub_1006BB544(v38 > 1, v39 + 1, 1);
      uint64_t v16 = v63;
    }
    *((void *)v16 + 2) = v39 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 32))((unint64_t)v16+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ v39 * v61, v37, v62);
    uint64_t v63 = v16;
    a1 = v54;
    int64_t v22 = 1 << *(unsigned char *)(v54 + 32);
    if (v19 >= v22) {
      goto LABEL_27;
    }
    uint64_t v21 = v49;
    uint64_t v40 = *(void *)(v49 + 8 * v24);
    if ((v40 & v60) == 0) {
      goto LABEL_28;
    }
    LODWORD(v18) = v48;
    if (*(_DWORD *)(v54 + 36) != v48) {
      goto LABEL_29;
    }
    unint64_t v41 = v40 & (-2 << (v19 & 0x3F));
    if (v41)
    {
      int64_t v22 = __clz(__rbit64(v41)) | v19 & 0xFFFFFFFFFFFFFFC0;
      int64_t v23 = v47;
    }
    else
    {
      unint64_t v42 = v24 + 1;
      unint64_t v43 = (unint64_t)(v22 + 63) >> 6;
      int64_t v23 = v47;
      if (v24 + 1 < v43)
      {
        unint64_t v44 = *(void *)(v49 + 8 * v42);
        if (v44)
        {
LABEL_22:
          int64_t v22 = __clz(__rbit64(v44)) + (v42 << 6);
        }
        else
        {
          while (v43 - 2 != v24)
          {
            unint64_t v44 = *(void *)(v46 + 8 * v24++);
            if (v44)
            {
              unint64_t v42 = v24 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v20 = v59 + 1;
    uint64_t v19 = v22;
    if (v59 + 1 == v23) {
      return (uint64_t)v16;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1006A9054(uint64_t *a1, uint64_t *a2)
{
  return sub_1006B31B0(*a1, *a2);
}

uint64_t sub_1006A9060()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1006A9114()
{
  return type metadata accessor for CRLTransactableData(0);
}

uint64_t type metadata accessor for CRLTransactableData(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10167A658);
}

uint64_t sub_1006A913C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1006A91D4(uint64_t *a1, uint64_t *a2)
{
  return sub_1006B2FAC(*a1, *a2);
}

uint64_t sub_1006A91E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(sub_1005057FC(&qword_10169A270) + 48))
     + OBJC_IVAR____TtC8Freeform19CRLTransactableData_id;
  uint64_t v4 = type metadata accessor for UUID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_1006A9270@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1005057FC(&qword_10167AAB8);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_data);
  if ((v15 & 0x8000000000000000) == 0) {
    goto LABEL_14;
  }
  uint64_t v16 = v15 & 0x7FFFFFFFFFFFFFFFLL;
  unint64_t v17 = self;
  swift_retain();
  id v18 = [v17 standardUserDefaults];
  unsigned __int8 v19 = [v18 BOOLForKey:@"CRLAllowInteractionWithUnsupportedBoardAndBoardItemsUserDefault"];

  if (*(_UNKNOWN ****)v16 != &off_101694008 || (v19 & 1) != 0)
  {
    (*(void (**)(void))(*(void *)v16 + 256))();
    if (*(void *)(a2 + 16)
      && (unint64_t v22 = sub_100955FC8((uint64_t)v14), (v23 & 1) != 0)
      && (uint64_t v24 = *(void *)(*(void *)(a2 + 56) + 16 * v22),
          type metadata accessor for CRLBoardItemBase(0),
          (uint64_t v25 = swift_dynamicCastClass()) != 0))
    {
      uint64_t v26 = *(void **)(*(void *)(v25 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store)
                     + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_crdtContext);
      swift_unknownObjectRetain();
      id v27 = v26;
      uint64_t v28 = swift_retain();
      v39[2] = v24;
      sub_1006858D0(v28, (uint64_t)v27, (uint64_t)v9);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      swift_unknownObjectRelease();

      swift_release();
      swift_release();
      uint64_t v37 = type metadata accessor for CRLBoardItemDeltaChange(0);
      uint64_t v38 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v9, 1, v37) != 1)
      {
        sub_1006B6230((uint64_t)v9, a3, type metadata accessor for CRLBoardItemDeltaChange);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(a3, 0, 1, v37);
      }
      sub_100522F00((uint64_t)v9, &qword_10167AAB8);
    }
    else
    {
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v29 = (void *)static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      id v31 = v29;
      uint64_t v32 = UUID.uuidString.getter();
      uint64_t v34 = v33;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v32;
      *(void *)(inited + 40) = v34;
      uint64_t v35 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v31, (uint64_t)&_mh_execute_header, v35, (uint64_t)"Could not calculate delta for board item %@ without snapshot.", 61, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
      swift_release();

      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    }
LABEL_14:
    uint64_t v36 = type metadata accessor for CRLBoardItemDeltaChange(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(a3, 1, 1, v36);
  }
  uint64_t v20 = type metadata accessor for CRLBoardItemDeltaChange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a3, 1, 1, v20);

  return swift_release();
}

Swift::Int sub_1006A9918()
{
  int v1 = *v0;
  uint64_t v2 = *((void *)v0 + 2);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1 + 5);
  if (v2)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

void sub_1006A99A8()
{
  uint64_t v1 = *((void *)v0 + 2);
  Hasher._combine(_:)(*v0 + 5);
  if (v1)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_1006A9A34()
{
  int v1 = *v0;
  uint64_t v2 = *((void *)v0 + 2);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1 + 5);
  if (v2)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

uint64_t sub_1006A9AC0(uint64_t a1, uint64_t a2)
{
  return sub_1006B2F34(*(unsigned char *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16));
}

uint64_t (*sub_1006A9AD8())()
{
  return j__swift_endAccess;
}

BOOL sub_1006A9B34()
{
  if (*(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas) + 16)) {
    return 1;
  }
  if (*(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_modifiedItemDatas) + 16)) {
    return 1;
  }
  if (*(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas) + 16)) {
    return 1;
  }
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_boardAuxiliaryChanges;
  swift_beginAccess();
  if (*(void *)(*(void *)v1 + 16)) {
    return 1;
  }
  uint64_t v2 = v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_coalescableBoardAuxiliaryChanges;
  swift_beginAccess();
  if (*(void *)(*(void *)v2 + 16)) {
    return 1;
  }
  uint64_t v3 = v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds;
  swift_beginAccess();
  if (*(void *)(*(void *)v3 + 16)) {
    return 1;
  }
  uint64_t v5 = v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatas;
  swift_beginAccess();
  return *(void *)(*(void *)v5 + 16) != 0;
}

uint64_t sub_1006A9C50(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  int v26 = a3;
  uint64_t v25 = a2;
  uint64_t v23 = a1;
  uint64_t v24 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v22 = *(void *)(v24 - 8);
  __chkstk_darwin(v24, v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v8, v9);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v10 - 8, v11);
  *(void *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatas) = _swiftEmptyDictionarySingleton;
  *(void *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatasToProcessAfterUnlock) = _swiftEmptyDictionarySingleton;
  *(void *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_processingQueue) = _swiftEmptyArrayStorage;
  *(void *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas) = _swiftEmptyDictionarySingleton;
  *(void *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_modifiedItemDatas) = _swiftEmptyDictionarySingleton;
  *(void *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_undoableModifiedItemDatas) = _swiftEmptyDictionarySingleton;
  *(void *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_snapshots) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas) = _swiftEmptyDictionarySingleton;
  *(void *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds) = &_swiftEmptySetSingleton;
  *(void *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedFreehandItemIDsSubset) = &_swiftEmptySetSingleton;
  *(void *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedAsOrphanItemIDs) = &_swiftEmptySetSingleton;
  uint64_t v12 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_uncommittedChangeAvailablePublisher;
  sub_1005057FC(&qword_10167AAC0);
  swift_allocObject();
  *(void *)(v3 + v12) = PassthroughSubject.init()();
  *(void *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas) = _swiftEmptyDictionarySingleton;
  *(void *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerDeletedItemIds) = &_swiftEmptySetSingleton;
  sub_100656064();
  static DispatchQoS.unspecified.getter();
  id v27 = _swiftEmptyArrayStorage;
  sub_1006B62F8((unint64_t *)&qword_101676560, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1005057FC(&qword_101693440);
  sub_100636834((unint64_t *)&qword_101676568, &qword_101693440);
  uint64_t v13 = v23;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v24);
  uint64_t v14 = v25;
  *(void *)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  sub_100539548(v13, v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
  uint64_t v15 = v3 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_rootContainerUUID;
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, v14, v16);
  unint64_t v18 = 0;
  if (v26) {
    unint64_t v18 = sub_100A38BD8((uint64_t)_swiftEmptyArrayStorage);
  }
  unsigned __int8 v19 = (unint64_t *)(v4 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_snapshots);
  swift_beginAccess();
  *unsigned __int8 v19 = v18;
  swift_bridgeObjectRelease();
  *(void *)(v4 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_boardAuxiliaryChanges) = _swiftEmptyArrayStorage;
  unint64_t v20 = sub_100A38DCC((uint64_t)_swiftEmptyArrayStorage);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  sub_1005387C0(v13, type metadata accessor for CRLBoardIdentifier);
  *(void *)(v4 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_coalescableBoardAuxiliaryChanges) = v20;
  return v4;
}

uint64_t sub_1006AA0CC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas) = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  *(void *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_undoableModifiedItemDatas) = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  *(void *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas) = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds);
  swift_beginAccess();
  *uint64_t v4 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  *(void *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedFreehandItemIDsSubset) = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  *(void *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedAsOrphanItemIDs) = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  *(void *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_modifiedItemDatas) = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1006A9AD8();
  if (*v5)
  {
    uint64_t v7 = v5;
    swift_bridgeObjectRelease();
    *uint64_t v7 = _swiftEmptyDictionarySingleton;
  }
  ((void (*)(unsigned char *, void))v6)(v10, 0);
  uint64_t v8 = (void *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatas);
  swift_beginAccess();
  *uint64_t v8 = _swiftEmptyDictionarySingleton;
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    swift_beginAccess();
    sub_1006AA254(a2);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1006AA254(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  unint64_t v39 = (char *)&v33 - v11;
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v35 = a1 + 56;
  uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
  if (-v13 < 64) {
    uint64_t v14 = ~(-1 << -(char)v13);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v12;
  uint64_t v33 = -1 << *(unsigned char *)(a1 + 32);
  int64_t v34 = (unint64_t)(63 - v13) >> 6;
  uint64_t v37 = v5 + 32;
  uint64_t v38 = v5 + 16;
  uint64_t v36 = (uint64_t (**)(unint64_t, uint64_t))(v5 + 8);
  uint64_t v40 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v41 = 0;
  while (v15)
  {
    unint64_t v17 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v18 = v17 | (v41 << 6);
LABEL_22:
    uint64_t v23 = v39;
    uint64_t v24 = *(void *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v39, *(void *)(v40 + 48) + v24 * v18, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v9, v23, v4);
    swift_bridgeObjectRetain();
    unint64_t v25 = sub_100955FC8((uint64_t)v9);
    char v27 = v26;
    swift_bridgeObjectRelease();
    if (v27)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v29 = *v2;
      uint64_t v42 = *v2;
      *uint64_t v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_10097C6F8();
        uint64_t v29 = v42;
      }
      unint64_t v30 = *(void *)(v29 + 48) + v25 * v24;
      id v31 = *v36;
      (*v36)(v30, v4);
      uint64_t v32 = v42;
      sub_10058822C(v25, v42);
      *uint64_t v2 = v32;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = v31((unint64_t)v9, v4);
    }
    else
    {
      uint64_t result = (*v36)((unint64_t)v9, v4);
    }
  }
  int64_t v19 = v41 + 1;
  if (__OFADD__(v41, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v19 >= v34) {
    return sub_10052E1EC();
  }
  unint64_t v20 = *(void *)(v35 + 8 * v19);
  int64_t v21 = v41 + 1;
  if (v20) {
    goto LABEL_21;
  }
  int64_t v21 = v41 + 2;
  if (v41 + 2 >= v34) {
    return sub_10052E1EC();
  }
  unint64_t v20 = *(void *)(v35 + 8 * v21);
  if (v20) {
    goto LABEL_21;
  }
  int64_t v21 = v41 + 3;
  if (v41 + 3 >= v34) {
    return sub_10052E1EC();
  }
  unint64_t v20 = *(void *)(v35 + 8 * v21);
  if (v20)
  {
LABEL_21:
    unint64_t v15 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
    int64_t v41 = v21;
    goto LABEL_22;
  }
  int64_t v22 = v41 + 4;
  if (v41 + 4 >= v34) {
    return sub_10052E1EC();
  }
  unint64_t v20 = *(void *)(v35 + 8 * v22);
  if (v20)
  {
    int64_t v21 = v41 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v21 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v21 >= v34) {
      return sub_10052E1EC();
    }
    unint64_t v20 = *(void *)(v35 + 8 * v21);
    ++v22;
    if (v20) {
      goto LABEL_21;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1006AA5B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter);
  BOOL v2 = __OFADD__(v1, 1);
  uint64_t v3 = v1 + 1;
  if (v2)
  {
    __break(1u);
    goto LABEL_5;
  }
  *(void *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter) = v3;
  if (qword_10166FBA0 != -1) {
LABEL_5:
  }
    swift_once();
  swift_beginAccess();
  uint64_t v4 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v6 = v4;
  uint64_t v7 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v9 = v8;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v9;
  uint64_t v10 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v10, (uint64_t)"CRLBoardChangeSet lock() lockCounter: %{public}@", 48, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

void sub_1006AA720(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter;
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter);
  if (v3 <= 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"unlock()", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 274, (uint64_t)"Cannot unlock if lockCounter is already 0, we're already unlocked", 65, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"unlock()", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 274);
    uint64_t v3 = *(void *)(a1 + v2);
  }
  BOOL v4 = __OFSUB__(v3, 1);
  uint64_t v5 = v3 - 1;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a1 + v2) = v5;
    if (qword_10166FBA0 == -1) {
      goto LABEL_5;
    }
  }
  swift_once();
LABEL_5:
  swift_beginAccess();
  id v6 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v8 = v6;
  uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v11 = v10;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v9;
  *(void *)(inited + 40) = v11;
  uint64_t v12 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v12, (uint64_t)"CRLBoardChangeSet unlock() lockCounter: %{public}@", 50, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  if (*(void *)(a1 + v2)) {
    return;
  }
  uint64_t v13 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_processingQueue);
  swift_beginAccess();
  if ((unint64_t)*v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v22 >= 1)
    {
LABEL_8:
      uint64_t v14 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas;
      uint64_t v15 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas);
      uint64_t v38 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas;
      uint64_t v16 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas);
      unint64_t v17 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds);
      swift_beginAccess();
      uint64_t v36 = v17;
      uint64_t v37 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_modifiedItemDatas;
      uint64_t v18 = *v13;
      uint64_t v39 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_modifiedItemDatas);
      uint64_t v40 = *v17;
      if ((unint64_t)*v13 >> 62)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
        if (!v19) {
          goto LABEL_21;
        }
      }
      else
      {
        uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (!v19) {
          goto LABEL_21;
        }
      }
      if (v19 < 1)
      {
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v19; ++i)
      {
        if ((v18 & 0xC000000000000001) != 0)
        {
          uint64_t v21 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v21 = *(void *)(v18 + 8 * i + 32);
          swift_retain();
        }
        sub_1006AAEDC(v21);
        swift_release();
      }
LABEL_21:
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void *)(a1 + v14);
      swift_bridgeObjectRetain();
      char v25 = sub_100ED6FA4(v15, v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v25)
      {
        uint64_t v26 = *(void *)(a1 + v38);
        swift_bridgeObjectRetain();
        char v27 = sub_100ED6FA4(v16, v26);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v27)
        {
          uint64_t v28 = *(void *)(a1 + v37);
          swift_bridgeObjectRetain();
          char v29 = sub_100ED6FA4(v39, v28);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v29)
          {
            uint64_t v30 = *v36;
            swift_bridgeObjectRetain();
            char v31 = sub_100A3E88C(v40, v30);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            char v23 = v31 ^ 1;
            goto LABEL_28;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      char v23 = 1;
      goto LABEL_28;
    }
  }
  else if (*(uint64_t *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
    goto LABEL_8;
  }
  char v23 = 0;
LABEL_28:
  *uint64_t v13 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v32 = a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatasToProcessAfterUnlock;
  swift_beginAccess();
  if (*(void *)(*(void *)v32 + 16))
  {
    uint64_t v33 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatas);
    swift_beginAccess();
    uint64_t v34 = *v33;
    swift_bridgeObjectRetain();
    uint64_t v35 = swift_bridgeObjectRetain();
    *uint64_t v33 = sub_1006B15E8(v35, v34, (uint64_t)sub_1006B1A7C, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *))sub_1006B26C0);
    swift_bridgeObjectRelease();
  }
  *(void *)uint64_t v32 = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  if (v23) {
    sub_1006ACF50();
  }
}

uint64_t sub_1006AACD4(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active) == 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateWithChange(from:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 315, (uint64_t)"Pending changes should only come from closed transactions.", 58, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateWithChange(from:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 315);
  }
  if (*(uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter) <= 0)
  {
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v6 = (id)static OS_os_log.realTimeSync;
    uint64_t v7 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v7, (uint64_t)"CRLBoardChangeSet updateWithChange()", 36, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t result = sub_1006AAEDC(a1);
    if (result) {
      return sub_1006ACF50();
    }
  }
  else
  {
    BOOL v4 = (void *)(a2 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_processingQueue);
    swift_beginAccess();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1006AAEDC(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for CRLBoardCRDTData(0);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  v244 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char, uint64_t *))((char *)v228
                                                                            - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6, v8);
  v243 = (char *)v228 - v9;
  uint64_t v256 = type metadata accessor for UUID();
  uint64_t v242 = *(void *)(v256 - 8);
  uint64_t v11 = __chkstk_darwin(v256, v10);
  v248 = (void *)((char *)v228 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11, v13);
  uint64_t v252 = (uint64_t)v228 - v14;
  uint64_t v15 = type metadata accessor for DispatchPredicate();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (void *)((char *)v228 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v233 = v1;
  unint64_t v20 = *(void **)((char *)v1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
  *uint64_t v19 = v20;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v15);
  id v21 = v20;
  LOBYTE(v20) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v16 + 8))(v19, v15);
  if ((v20 & 1) == 0)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  uint64_t v22 = a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects;
  swift_beginAccess();
  uint64_t v230 = v22;
  uint64_t v23 = swift_bridgeObjectRetain();
  uint64_t v236 = sub_101022968(v23);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v24 = swift_bridgeObjectRetain();
  uint64_t v235 = sub_101022968(v24);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v25 = swift_bridgeObjectRetain();
  uint64_t v232 = sub_100CDCB64(v25);
  swift_bridgeObjectRelease();
  uint64_t v26 = a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects;
  swift_beginAccess();
  uint64_t v27 = swift_bridgeObjectRetain();
  uint64_t v231 = sub_101022968(v27);
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v28 = swift_bridgeObjectRetain();
  Swift::Int v29 = sub_1006B69AC(v28, a1);
  uint64_t v234 = a1;
  swift_release();
  v229 = 0;
  v228[0] = v26;
  if ((v29 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLTransactableHashableWrapper();
    sub_1006B62F8((unint64_t *)&qword_10169A0A0, (void (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper);
    Set.Iterator.init(_cocoa:)();
    Swift::Int v29 = v260;
    Swift::Int v240 = v261;
    uint64_t v30 = v262;
    uint64_t v31 = v263;
    unint64_t v32 = v264;
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v33 = -1 << *(unsigned char *)(v29 + 32);
    uint64_t v34 = *(void *)(v29 + 56);
    Swift::Int v240 = v29 + 56;
    uint64_t v30 = ~v33;
    uint64_t v35 = -v33;
    if (v35 < 64) {
      uint64_t v36 = ~(-1 << v35);
    }
    else {
      uint64_t v36 = -1;
    }
    unint64_t v32 = v36 & v34;
  }
  v228[1] = v30;
  uint64_t v238 = v29 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v239 = (unint64_t)(v30 + 64) >> 6;
  v247 = (void (**)(uint64_t, char *, uint64_t))(v242 + 32);
  v241 = (void *)(v242 + 16);
  v245 = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v242 + 8);
  uint64_t v2 = (uint64_t)&_swiftEmptyDictionarySingleton;
  v237 = (char *)&type metadata for Swift.AnyObject + 8;
  v246 = (void (*)(uint64_t, char *, uint64_t))v29;
  while (v29 < 0)
  {
    uint64_t v41 = __CocoaSet.Iterator.next()();
    if (!v41) {
      goto LABEL_45;
    }
    v258[9] = v41;
    type metadata accessor for CRLTransactableHashableWrapper();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v42 = (uint64_t)v259;
    swift_unknownObjectRelease();
    uint64_t v40 = v31;
    uint64_t v38 = v32;
    if (!v42) {
      goto LABEL_45;
    }
LABEL_32:
    uint64_t v254 = v38;
    uint64_t v255 = v40;
    uint64_t v253 = v42;
    uint64_t v46 = *(void *)(v42 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v46 + 32);
    v48(ObjectType, v46);
    type metadata accessor for CRLTransactableData(0);
    uint64_t v49 = swift_allocObject();
    swift_unknownObjectRetain();
    uint64_t v50 = (char *)v248;
    v48(ObjectType, v46);
    (*v247)(v49 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_id, v50, v256);
    type metadata accessor for CRLBoard(0);
    uint64_t v51 = swift_dynamicCastClass();
    if (v51)
    {
      uint64_t v52 = *(void *)(v51 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
      uint64_t v53 = v52 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      uint64_t v250 = v49;
      uint64_t v54 = (uint64_t)v243;
      sub_100539548(v53, (uint64_t)v243, type metadata accessor for CRLBoardCRDTData);
      long long v249 = *(_OWORD *)(v52 + 24);
      uint64_t v55 = *(void *)(v52 + 40);
      int64_t v56 = v244;
      sub_100539548(v54, (uint64_t)v244, type metadata accessor for CRLBoardCRDTData);
      v251 = (void *)v2;
      uint64_t v58 = *(void *)(v52 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      uint64_t v57 = *(void *)(v52 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName + 8);
      type metadata accessor for CRLBoardData(0);
      unint64_t v59 = swift_allocObject();
      *(void *)(v59 + 16) = 7;
      *(_OWORD *)(v59 + 24) = v249;
      *(void *)(v59 + 40) = v55;
      sub_1006B6230((uint64_t)v56, v59 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, type metadata accessor for CRLBoardCRDTData);
      uint64_t v60 = (void *)(v59 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      *uint64_t v60 = v58;
      v60[1] = v57;
      uint64_t v2 = (uint64_t)v251;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v61 = v54;
      uint64_t v49 = v250;
      sub_1005387C0(v61, type metadata accessor for CRLBoardCRDTData);
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      type metadata accessor for CRLBoardItem(0);
      uint64_t v62 = (void *)swift_dynamicCastClass();
      if (!v62) {
        goto LABEL_73;
      }
      uint64_t v63 = *(uint64_t (**)(void))((swift_isaMask & *v62) + 0x1C0);
      swift_unknownObjectRetain();
      uint64_t v64 = v63(0);
      swift_unknownObjectRelease_n();
      unint64_t v59 = v64 | 0x8000000000000000;
    }
    uint64_t v65 = v252;
    *(void *)(v49 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_data) = v59;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v259 = (void *)v2;
    unint64_t v68 = sub_100955FC8(v65);
    uint64_t v69 = *(void *)(v2 + 16);
    BOOL v70 = (v67 & 1) == 0;
    uint64_t v71 = v69 + v70;
    if (__OFADD__(v69, v70))
    {
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    char v72 = v67;
    if (*(void *)(v2 + 24) >= v71)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_10097C6F8();
      }
    }
    else
    {
      sub_10095FB94(v71, isUniquelyReferenced_nonNull_native);
      unint64_t v73 = sub_100955FC8(v65);
      if ((v72 & 1) != (v74 & 1))
      {
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
LABEL_73:
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 42, (uint64_t)"Invalid/unknown transactable type", 33, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Invalid/unknown transactable type");
        sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 42);
        SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v226, v227);
        uint64_t result = _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        return result;
      }
      unint64_t v68 = v73;
    }
    Swift::Int v29 = (Swift::Int)v246;
    uint64_t v2 = (uint64_t)v259;
    if (v72)
    {
      uint64_t v37 = v259[7];
      swift_release();
      *(void *)(v37 + 8 * v68) = v49;
    }
    else
    {
      v259[(v68 >> 6) + 8] |= 1 << v68;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v242 + 16))(*(void *)(v2 + 48) + *(void *)(v242 + 72) * v68, v65, v256);
      *(void *)(*(void *)(v2 + 56) + 8 * v68) = v49;
      uint64_t v75 = *(void *)(v2 + 16);
      BOOL v76 = __OFADD__(v75, 1);
      uint64_t v77 = v75 + 1;
      if (v76) {
        goto LABEL_68;
      }
      *(void *)(v2 + 16) = v77;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))v245)(v65, v256);
    swift_release();
    unint64_t v32 = v254;
    uint64_t v31 = v255;
  }
  if (v32)
  {
    uint64_t v38 = (v32 - 1) & v32;
    unint64_t v39 = __clz(__rbit64(v32)) | (v31 << 6);
    uint64_t v40 = v31;
    goto LABEL_31;
  }
  int64_t v43 = v31 + 1;
  if (__OFADD__(v31, 1)) {
    goto LABEL_69;
  }
  if (v43 >= v239) {
    goto LABEL_45;
  }
  unint64_t v44 = *(void *)(v240 + 8 * v43);
  uint64_t v40 = v31 + 1;
  if (v44) {
    goto LABEL_30;
  }
  uint64_t v40 = v31 + 2;
  if (v31 + 2 >= v239) {
    goto LABEL_45;
  }
  unint64_t v44 = *(void *)(v240 + 8 * v40);
  if (v44) {
    goto LABEL_30;
  }
  uint64_t v40 = v31 + 3;
  if (v31 + 3 >= v239) {
    goto LABEL_45;
  }
  unint64_t v44 = *(void *)(v240 + 8 * v40);
  if (v44) {
    goto LABEL_30;
  }
  uint64_t v40 = v31 + 4;
  if (v31 + 4 >= v239) {
    goto LABEL_45;
  }
  unint64_t v44 = *(void *)(v240 + 8 * v40);
  if (v44)
  {
LABEL_30:
    uint64_t v38 = (v44 - 1) & v44;
    unint64_t v39 = __clz(__rbit64(v44)) + (v40 << 6);
LABEL_31:
    uint64_t v42 = *(void *)(*(void *)(v29 + 48) + 8 * v39);
    swift_retain();
    if (!v42) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  uint64_t v45 = v31 + 5;
  while (v239 != v45)
  {
    unint64_t v44 = *(void *)(v240 + 8 * v45++);
    if (v44)
    {
      uint64_t v40 = v45 - 1;
      goto LABEL_30;
    }
  }
LABEL_45:
  sub_10052E1EC();
  uint64_t v78 = v234;
  if (*(unsigned char *)(v234 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_trackChanges) != 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v100 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas;
    uint64_t v101 = v233;
    uint64_t v102 = *(void *)((char *)v233 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas);
    swift_bridgeObjectRetain();
    uint64_t v103 = v236;
    uint64_t v104 = sub_1006AC8B4(v236, v102);
    swift_bridgeObjectRelease();
    *(void *)((char *)v101 + v100) = v104;
    swift_bridgeObjectRelease();
    uint64_t v105 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas;
    uint64_t v106 = *(void *)((char *)v101 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas);
    swift_bridgeObjectRetain();
    uint64_t v107 = sub_1006AC8B4(v103, v106);
    swift_bridgeObjectRelease();
    *(void *)((char *)v101 + v105) = v107;
    swift_bridgeObjectRelease();
    uint64_t v108 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_modifiedItemDatas;
    uint64_t v109 = *(void *)((char *)v101 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_modifiedItemDatas);
    swift_bridgeObjectRetain();
    uint64_t v110 = sub_1006AC8B4(v103, v109);
    swift_bridgeObjectRelease();
    *(void *)((char *)v101 + v108) = v110;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_1010295C8(v235);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v111 = (void *)((char *)v101 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas);
    swift_beginAccess();
    uint64_t v112 = swift_bridgeObjectRetain();
    sub_1006AA254(v112);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_beginAccess();
    uint64_t v113 = swift_bridgeObjectRetain();
    sub_1010295C8(v113);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char v114 = swift_isUniquelyReferenced_nonNull_native();
    v258[0] = *v111;
    *uint64_t v111 = 0x8000000000000000;
    sub_1006B1B20(v2, (uint64_t)sub_100D19A60, 0, v114, (uint64_t)v258);
    *uint64_t v111 = v258[0];
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v115 = swift_bridgeObjectRetain();
    sub_10057CB20(v115);
    swift_endAccess();
    uint64_t v116 = (void *)((char *)v101 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_snapshots);
    swift_beginAccess();
    uint64_t v117 = *v116;
    if (*v116)
    {
      uint64_t v118 = v232;
      if (*(void *)(v232 + 16) <= *(void *)(v103 + 16) >> 3)
      {
        v258[0] = v103;
        swift_bridgeObjectRetain();
        sub_1010295C8(v118);
        swift_bridgeObjectRelease();
        unint64_t v119 = (void *)v258[0];
      }
      else
      {
        swift_bridgeObjectRetain();
        unint64_t v119 = sub_10102AA0C(v118, v103);
        swift_bridgeObjectRelease();
      }
      uint64_t v224 = sub_1006ACC00((uint64_t)v119, v117);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v178 = 0;
      *uint64_t v116 = v224;
    }
    else
    {
      swift_bridgeObjectRelease();
      char v178 = 0;
    }
    goto LABEL_66;
  }
  v251 = (void *)v2;
  uint64_t v79 = swift_bridgeObjectRetain();
  uint64_t v254 = sub_1006B3E34(v79);
  swift_bridgeObjectRelease();
  uint64_t v80 = swift_bridgeObjectRetain();
  uint64_t v250 = sub_1006B3E34(v80);
  swift_bridgeObjectRelease();
  long long v81 = (uint64_t *)(v78 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedDeletedObjectIds);
  swift_beginAccess();
  v248 = v81;
  uint64_t v82 = *v81;
  Swift::Int v83 = v78 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_modifications;
  swift_beginAccess();
  uint64_t v252 = v82;
  swift_bridgeObjectRetain();
  uint64_t v84 = swift_bridgeObjectRetain();
  uint64_t v85 = sub_100C312D8(v84);
  uint64_t v86 = sub_1006B3E34(v85);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v87 = swift_bridgeObjectRetain();
  uint64_t v88 = sub_100C312D8(v87);
  uint64_t v89 = sub_1006B3E34(v88);
  swift_bridgeObjectRelease();
  uint64_t v90 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas;
  long long v91 = v233;
  swift_bridgeObjectRetain();
  uint64_t v92 = swift_bridgeObjectRetain();
  uint64_t v93 = sub_100C314A4(v92);
  uint64_t v94 = swift_bridgeObjectRetain();
  uint64_t v95 = sub_100A43DA4(v94, v93);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v96 = v229;
  uint64_t v97 = sub_1006B741C(v86, v95);
  swift_bridgeObjectRelease();
  *(void *)&long long v249 = v86;
  swift_bridgeObjectRelease();
  swift_release_n();
  uint64_t v98 = *(void *)(v97 + 16);
  Swift::Int v240 = v83;
  v246 = (void (*)(uint64_t, char *, uint64_t))v89;
  if (v98)
  {
    uint64_t v99 = *(void *)((char *)v91 + v90);
    swift_bridgeObjectRetain();
    *(void *)((char *)v91 + v90) = sub_1006B15E8(v97, v99, (uint64_t)sub_100D19A60, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *))sub_1006B1EF8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
  uint64_t v120 = v236;
  uint64_t v255 = v90;
  uint64_t v121 = *(void *)((char *)v91 + v90);
  swift_bridgeObjectRetain();
  uint64_t v122 = v254;
  uint64_t v123 = swift_bridgeObjectRetain();
  v245 = sub_100D19A60;
  v244 = sub_1006B1EF8;
  uint64_t v124 = sub_1006B15E8(v123, v121, (uint64_t)sub_100D19A60, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *))sub_1006B1EF8);
  uint64_t v125 = sub_1006AC8B4(v120, v124);
  swift_bridgeObjectRelease();
  uint64_t v126 = v235;
  uint64_t v127 = sub_1006AC8B4(v235, v125);
  swift_bridgeObjectRelease();
  uint64_t v128 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas;
  uint64_t v253 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas;
  uint64_t v129 = swift_bridgeObjectRetain();
  uint64_t v130 = sub_1006A8BF4(v129);
  uint64_t v131 = sub_100CDCB64(v130);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v243 = (char *)sub_1006AC8B4(v131, v127);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v132 = *(void *)((char *)v91 + v128);
  swift_bridgeObjectRetain();
  uint64_t v133 = sub_1006B155C(v250, v132);
  uint64_t v134 = sub_1006A8BF4(v122);
  uint64_t v135 = sub_100CDCB64(v134);
  swift_bridgeObjectRelease();
  uint64_t v136 = sub_1006AC8B4(v135, v133);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v137 = swift_bridgeObjectRetain();
  uint64_t v138 = sub_1006A8BF4(v137);
  uint64_t v139 = sub_100CDCB64(v138);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v140 = sub_1006AC8B4(v139, v136);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v242 = sub_1006AC8B4(v252, v140);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v141 = (void *)((char *)v91 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds);
  uint64_t v252 = 1;
  swift_beginAccess();
  uint64_t v142 = *v141;
  swift_bridgeObjectRetain();
  uint64_t v143 = swift_bridgeObjectRetain();
  uint64_t v144 = sub_100ED8C0C(v143, v142);
  uint64_t v145 = swift_bridgeObjectRetain();
  v146 = sub_10102C4F0(v145, v144);
  swift_bridgeObjectRelease();
  uint64_t v147 = swift_bridgeObjectRetain();
  v241 = sub_10102C4F0(v147, (uint64_t)v146);
  swift_bridgeObjectRelease();
  uint64_t v250 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_modifiedItemDatas;
  uint64_t v148 = *(void *)((char *)v91 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_modifiedItemDatas);
  swift_bridgeObjectRetain();
  v149 = v244;
  uint64_t v150 = (uint64_t)v245;
  uint64_t v151 = sub_1006B15E8(v249, v148, (uint64_t)v245, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *))v244);
  uint64_t v152 = v236;
  uint64_t v153 = sub_1006AC8B4(v236, v151);
  swift_bridgeObjectRelease();
  uint64_t v154 = sub_1006AC8B4(v126, v153);
  swift_bridgeObjectRelease();
  uint64_t v155 = swift_bridgeObjectRetain();
  uint64_t v156 = sub_100C314A4(v155);
  *(void *)&long long v249 = sub_1006AC8B4(v156, v154);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v247 = (void (**)(uint64_t, char *, uint64_t))OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_undoableModifiedItemDatas;
  uint64_t v157 = *(void *)((char *)v91 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_undoableModifiedItemDatas);
  swift_bridgeObjectRetain();
  uint64_t v158 = v149;
  uint64_t v159 = (uint64_t)v241;
  uint64_t v160 = sub_1006B15E8((uint64_t)v246, v157, v150, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *))v158);
  v245 = v96;
  uint64_t v161 = v155;
  uint64_t v162 = v152;
  uint64_t v163 = v255;
  uint64_t v164 = sub_1006AC8B4(v162, v160);
  swift_bridgeObjectRelease();
  uint64_t v165 = sub_1006AC8B4(v235, v164);
  uint64_t v166 = v242;
  swift_bridgeObjectRelease();
  uint64_t v167 = swift_bridgeObjectRetain();
  uint64_t v168 = sub_100C314A4(v167);
  v246 = (void (*)(uint64_t, char *, uint64_t))sub_1006AC8B4(v168, v165);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v169 = *(void *)((char *)v91 + v163);
  swift_bridgeObjectRetain();
  LOBYTE(v150) = sub_100ED6FA4(v155, v169);
  swift_bridgeObjectRelease();
  uint64_t v2 = (uint64_t)v91;
  uint64_t v170 = v253;
  if (v150)
  {
    uint64_t v171 = *(void *)(v2 + v253);
    swift_bridgeObjectRetain();
    char v172 = sub_100ED6FA4(v166, v171);
    swift_bridgeObjectRelease();
    if ((v172 & 1) != 0
      && (uint64_t v173 = *(void *)(v2 + v250),
          swift_bridgeObjectRetain(),
          char v174 = sub_100ED6FA4(v249, v173),
          swift_bridgeObjectRelease(),
          (v174 & 1) != 0))
    {
      uint64_t v175 = *v141;
      swift_bridgeObjectRetain();
      int v176 = sub_100A3E88C(v159, v175);
      swift_bridgeObjectRelease();
      uint64_t v177 = v176 ^ 1u;
    }
    else
    {
      uint64_t v177 = 1;
    }
    uint64_t v252 = v177;
  }
  *(void *)(v2 + v163) = v161;
  swift_bridgeObjectRelease();
  *(void *)(v2 + v170) = v166;
  swift_bridgeObjectRelease();
  *uint64_t v141 = v159;
  swift_bridgeObjectRelease();
  v244 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char, uint64_t *))v141;
  if (qword_10166FBA0 != -1) {
LABEL_71:
  }
    swift_once();
  swift_beginAccess();
  uint64_t v179 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  type metadata accessor for CRLTransactableData(0);
  sub_1006B62F8((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  v243 = v179;
  swift_bridgeObjectRetain();
  uint64_t v181 = Dictionary.Keys.description.getter();
  uint64_t v183 = v182;
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v184 = sub_100528BE4();
  *(void *)(inited + 64) = v184;
  *(void *)(inited + 32) = v181;
  *(void *)(inited + 40) = v183;
  swift_bridgeObjectRetain();
  uint64_t v185 = Dictionary.Keys.description.getter();
  uint64_t v187 = v186;
  swift_bridgeObjectRelease();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v184;
  *(void *)(inited + 72) = v185;
  *(void *)(inited + 80) = v187;
  swift_bridgeObjectRetain();
  uint64_t v188 = Set.description.getter();
  uint64_t v190 = v189;
  swift_bridgeObjectRelease();
  *(void *)(inited + 136) = &type metadata for String;
  *(void *)(inited + 144) = v184;
  *(void *)(inited + 112) = v188;
  *(void *)(inited + 120) = v190;
  uint64_t v191 = static os_log_type_t.default.getter();
  id v192 = v243;
  sub_100BAC898((uint64_t)v243, (uint64_t)&_mh_execute_header, v191, (uint64_t)"CRLBoardChangeSet _applyChange addedItemDatas: %{public}@, removedItemDatas: %{public}@, removedNewlyCreatedItemIds: %{public}@", 127, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v193 = swift_bridgeObjectRetain();
  uint64_t v194 = sub_1006A80E8(v193);
  swift_bridgeObjectRelease();
  uint64_t v195 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedFreehandItemIDsSubset;
  uint64_t v196 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedFreehandItemIDsSubset);
  swift_bridgeObjectRetain();
  uint64_t v197 = sub_100F2DBBC(v194, v196);
  swift_bridgeObjectRelease();
  uint64_t v198 = v254;
  uint64_t v199 = swift_bridgeObjectRetain();
  v200 = sub_10102C4F0(v199, v197);
  swift_bridgeObjectRelease();
  uint64_t v201 = swift_bridgeObjectRetain();
  v202 = sub_10102C4F0(v201, (uint64_t)v200);
  swift_bridgeObjectRelease();
  *(void *)(v2 + v195) = v202;
  swift_bridgeObjectRelease();
  uint64_t v203 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedAsOrphanItemIDs;
  uint64_t v204 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedAsOrphanItemIDs);
  swift_bridgeObjectRetain();
  uint64_t v205 = sub_100ED8C0C(v232, v204);
  v206 = sub_10102C4F0(v198, v205);
  swift_bridgeObjectRelease();
  uint64_t v207 = swift_bridgeObjectRetain();
  v208 = sub_10102C4F0(v207, (uint64_t)v206);
  swift_bridgeObjectRelease();
  *(void *)(v2 + v203) = v208;
  swift_bridgeObjectRelease();
  *(void *)(v2 + v250) = v249;
  swift_bridgeObjectRelease();
  *(void (**)(uint64_t, char *, uint64_t))((char *)v247 + v2) = v246;
  swift_bridgeObjectRelease();
  v209 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas);
  swift_beginAccess();
  uint64_t v210 = v231;
  sub_1006AA254(v231);
  uint64_t v211 = swift_bridgeObjectRetain();
  sub_1006AA254(v211);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_beginAccess();
  uint64_t v212 = swift_bridgeObjectRetain();
  sub_1010295C8(v212);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v213 = (uint64_t)v251;
  swift_bridgeObjectRetain();
  char v214 = swift_isUniquelyReferenced_nonNull_native();
  v257[0] = *v209;
  uint64_t *v209 = 0x8000000000000000;
  sub_1006B1B20(v213, (uint64_t)sub_100D19A60, 0, v214, (uint64_t)v257);
  uint64_t *v209 = v257[0];
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v215 = swift_bridgeObjectRetain();
  sub_10057CB20(v215);
  swift_endAccess();
  v216 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_snapshots);
  swift_beginAccess();
  uint64_t v217 = *v216;
  if (*v216)
  {
    swift_bridgeObjectRetain();
    uint64_t v218 = swift_bridgeObjectRetain();
    uint64_t v219 = sub_101022CC0(v218);
    swift_bridgeObjectRelease();
    uint64_t v220 = sub_1006B15E8(v219, v217, (uint64_t)sub_1006B19C8, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *))sub_1006B22C8);
    uint64_t v221 = sub_1006ACC00(v236, v220);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v222 = sub_1006ACC00(v235, v221);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v223 = sub_1006ACC00(v210, v222);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t *v216 = v223;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  char v178 = v252;
LABEL_66:
  swift_bridgeObjectRelease();
  return v178 & 1;
}

uint64_t sub_1006AC8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v37 = (char *)v32 - v11;
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v34 = a1 + 56;
  uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
  if (-v13 < 64) {
    uint64_t v14 = ~(-1 << -(char)v13);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v12;
  v32[1] = -1 << *(unsigned char *)(a1 + 32);
  int64_t v33 = (unint64_t)(63 - v13) >> 6;
  uint64_t v35 = v5 + 32;
  uint64_t v36 = v5 + 16;
  uint64_t v16 = (uint64_t (**)(unint64_t, uint64_t))(v5 + 8);
  swift_bridgeObjectRetain();
  uint64_t v38 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v39 = 0;
  while (v15)
  {
    unint64_t v18 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v19 = v18 | (v39 << 6);
LABEL_22:
    uint64_t v24 = v37;
    uint64_t v25 = *(void *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v37, *(void *)(v38 + 48) + v25 * v19, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v9, v24, v4);
    swift_bridgeObjectRetain();
    unint64_t v26 = sub_100955FC8((uint64_t)v9);
    char v28 = v27;
    swift_bridgeObjectRelease();
    if (v28)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v40 = a2;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_10097C6F8();
        a2 = v40;
      }
      unint64_t v30 = *(void *)(a2 + 48) + v26 * v25;
      uint64_t v31 = *v16;
      (*v16)(v30, v4);
      a2 = v40;
      sub_10058822C(v26, v40);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = v31((unint64_t)v9, v4);
    }
    else
    {
      uint64_t result = (*v16)((unint64_t)v9, v4);
    }
  }
  int64_t v20 = v39 + 1;
  if (__OFADD__(v39, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v20 >= v33) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v20);
  int64_t v22 = v39 + 1;
  if (v21) {
    goto LABEL_21;
  }
  int64_t v22 = v39 + 2;
  if (v39 + 2 >= v33) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v22);
  if (v21) {
    goto LABEL_21;
  }
  int64_t v22 = v39 + 3;
  if (v39 + 3 >= v33) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v22);
  if (v21)
  {
LABEL_21:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
    int64_t v39 = v22;
    goto LABEL_22;
  }
  int64_t v23 = v39 + 4;
  if (v39 + 4 >= v33)
  {
LABEL_26:
    sub_10052E1EC();
    return a2;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v23);
  if (v21)
  {
    int64_t v22 = v39 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v22 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v22 >= v33) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v34 + 8 * v22);
    ++v23;
    if (v21) {
      goto LABEL_21;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1006ACC00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v37 = (char *)v32 - v11;
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v34 = a1 + 56;
  uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
  if (-v13 < 64) {
    uint64_t v14 = ~(-1 << -(char)v13);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v12;
  v32[1] = -1 << *(unsigned char *)(a1 + 32);
  int64_t v33 = (unint64_t)(63 - v13) >> 6;
  uint64_t v35 = v5 + 32;
  uint64_t v36 = v5 + 16;
  uint64_t v16 = (uint64_t (**)(unint64_t, uint64_t))(v5 + 8);
  swift_bridgeObjectRetain();
  uint64_t v38 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v39 = 0;
  while (v15)
  {
    unint64_t v18 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v19 = v18 | (v39 << 6);
LABEL_22:
    uint64_t v24 = v37;
    uint64_t v25 = *(void *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v37, *(void *)(v38 + 48) + v25 * v19, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v9, v24, v4);
    swift_bridgeObjectRetain();
    unint64_t v26 = sub_100955FC8((uint64_t)v9);
    char v28 = v27;
    swift_bridgeObjectRelease();
    if (v28)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v40 = a2;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_10097BB14();
        a2 = v40;
      }
      unint64_t v30 = *(void *)(a2 + 48) + v26 * v25;
      uint64_t v31 = *v16;
      (*v16)(v30, v4);
      a2 = v40;
      sub_100587488(v26, v40);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = v31((unint64_t)v9, v4);
    }
    else
    {
      uint64_t result = (*v16)((unint64_t)v9, v4);
    }
  }
  int64_t v20 = v39 + 1;
  if (__OFADD__(v39, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v20 >= v33) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v20);
  int64_t v22 = v39 + 1;
  if (v21) {
    goto LABEL_21;
  }
  int64_t v22 = v39 + 2;
  if (v39 + 2 >= v33) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v22);
  if (v21) {
    goto LABEL_21;
  }
  int64_t v22 = v39 + 3;
  if (v39 + 3 >= v33) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v22);
  if (v21)
  {
LABEL_21:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
    int64_t v39 = v22;
    goto LABEL_22;
  }
  int64_t v23 = v39 + 4;
  if (v39 + 4 >= v33)
  {
LABEL_26:
    sub_10052E1EC();
    return a2;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v23);
  if (v21)
  {
    int64_t v22 = v39 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v22 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v22 >= v33) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v34 + 8 * v22);
    ++v23;
    if (v21) {
      goto LABEL_21;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1006ACF50()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
  void *v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v1);
  id v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v2 + 8))(v5, v1);
  if (v6)
  {
    uint64_t result = sub_1006A9B34();
    if (result)
    {
      if (*(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas) + 16)
        || *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas) + 16))
      {
        BOOL v9 = 1;
      }
      else
      {
        uint64_t v10 = v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds;
        swift_beginAccess();
        BOOL v9 = *(void *)(*(void *)v10 + 16) != 0;
      }
      v11[31] = v9;
      swift_retain();
      PassthroughSubject.send(_:)();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006AD0F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v233 = a2;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v255 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8, v9);
  uint64_t v12 = (char *)&v227 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v10, v13);
  uint64_t v238 = (char *)&v227 - v15;
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v234 = (char *)&v227 - v18;
  uint64_t v20 = __chkstk_darwin(v17, v19);
  uint64_t v235 = (double *)((char *)&v227 - v21);
  uint64_t v23 = __chkstk_darwin(v20, v22);
  v237 = (char *)&v227 - v24;
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v242 = (char *)&v227 - v27;
  uint64_t v29 = __chkstk_darwin(v26, v28);
  uint64_t v31 = (char *)&v227 - v30;
  __chkstk_darwin(v29, v32);
  uint64_t v236 = (char *)&v227 - v33;
  uint64_t v34 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v34 - 8, v35);
  uint64_t v37 = (uint64_t)&v227 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!sub_1006A9B34() || *(uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter) > 0)
  {
    uint64_t v38 = type metadata accessor for CRLBoardDataStoreChangeSet(0);
    return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(a4, 1, 1, v38);
  }
  v247 = v12;
  Swift::String v227 = a3;
  uint64_t v230 = a4;
  unint64_t v262 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v40 = a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas;
  swift_beginAccess();
  uint64_t v229 = v40;
  uint64_t v41 = swift_bridgeObjectRetain();
  uint64_t v42 = sub_1006A8BF4(v41);
  uint64_t v228 = v4;
  uint64_t v43 = sub_100CDCB64(v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v44 = *(void *)(v43 + 56);
  uint64_t v244 = v43 + 56;
  uint64_t v251 = v43;
  uint64_t v45 = 1 << *(unsigned char *)(v43 + 32);
  uint64_t v46 = -1;
  if (v45 < 64) {
    uint64_t v46 = ~(-1 << v45);
  }
  int64_t v47 = v46 & v44;
  Swift::Int v240 = (void *)OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas;
  unint64_t v239 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_modifiedItemDatas;
  v248 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatas);
  swift_beginAccess();
  int64_t v48 = 0;
  int64_t v245 = (unint64_t)(v45 + 63) >> 6;
  uint64_t v49 = v255 + 16;
  uint64_t v250 = (double *)(v255 + 56);
  uint64_t v249 = v255 + 48;
  uint64_t v254 = (void (**)(char *, uint64_t, uint64_t))(v255 + 32);
  uint64_t v252 = v255 + 8;
  uint64_t v246 = a1;
  uint64_t v243 = v255 + 16;
  uint64_t v231 = v31;
  while (v47)
  {
    unint64_t v50 = __clz(__rbit64(v47));
    v47 &= v47 - 1;
    unint64_t v51 = v50 | (v48 << 6);
LABEL_25:
    uint64_t v55 = v255;
    uint64_t v42 = *(void *)(v255 + 16);
    ((void (*)(uint64_t, unint64_t, uint64_t))v42)(v37, *(void *)(v251 + 48) + *(void *)(v255 + 72) * v51, v8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v37, 0, 1, v8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v37, 1, v8) == 1)
    {
      uint64_t v49 = v49 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      swift_release();
      goto LABEL_41;
    }
    (*v254)(v31, v37, v8);
    uint64_t v45 = *v248;
    if (*(void *)(*v248 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v56 = sub_100955FC8((uint64_t)v31);
      if ((v57 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      uint64_t v241 = *(void *)(*(void *)(v45 + 56) + 8 * v56);
      swift_retain();
      swift_bridgeObjectRelease();
      if (*(void *)(*(void *)((char *)v240 + a1) + 16))
      {
        swift_bridgeObjectRetain();
        sub_100955FC8((uint64_t)v31);
        char v59 = v58;
        swift_bridgeObjectRelease();
        if (v59)
        {
          uint64_t v60 = v8;
          uint64_t v61 = v242;
          uint64_t v49 = v243;
          ((void (*)(char *, char *, uint64_t))v42)(v242, v231, v60);
          uint64_t v45 = *(void *)v252;
          uint64_t v62 = v61;
          uint64_t v8 = v60;
          uint64_t v31 = v231;
          (*(void (**)(char *, uint64_t))v252)(v62, v8);
          goto LABEL_34;
        }
      }
      uint64_t v63 = (uint64_t)v242;
      ((void (*)(char *, char *, uint64_t))v42)(v242, v31, v8);
      uint64_t v42 = v252;
      if (*(void *)(*(void *)(v246 + v239) + 16))
      {
        swift_bridgeObjectRetain();
        sub_100955FC8(v63);
        if ((v64 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_36;
        }
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v45 = *(void *)v42;
        (*(void (**)(char *, uint64_t))v42)(v242, v8);
        uint64_t v49 = v243;
        swift_release();
LABEL_34:
        ((void (*)(char *, uint64_t))v45)(v31, v8);
        swift_release();
        a1 = v246;
      }
      else
      {
LABEL_36:
        uint64_t v232 = *(void (**)(uint64_t, uint64_t))v42;
        v232(v63, v8);
        swift_retain();
        uint64_t v45 = (uint64_t)&v262;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v262 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v262 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_release();
        v232((uint64_t)v31, v8);
        a1 = v246;
        uint64_t v49 = v243;
      }
    }
    else
    {
LABEL_8:
      (*(void (**)(char *, uint64_t))v252)(v31, v8);
    }
  }
  int64_t v52 = v48 + 1;
  if (__OFADD__(v48, 1)) {
    goto LABEL_199;
  }
  if (v52 >= v245) {
    goto LABEL_40;
  }
  unint64_t v53 = *(void *)(v244 + 8 * v52);
  ++v48;
  if (v53) {
    goto LABEL_24;
  }
  int64_t v48 = v52 + 1;
  if (v52 + 1 >= v245) {
    goto LABEL_40;
  }
  unint64_t v53 = *(void *)(v244 + 8 * v48);
  if (v53) {
    goto LABEL_24;
  }
  int64_t v48 = v52 + 2;
  if (v52 + 2 >= v245) {
    goto LABEL_40;
  }
  unint64_t v53 = *(void *)(v244 + 8 * v48);
  if (v53)
  {
LABEL_24:
    int64_t v47 = (v53 - 1) & v53;
    unint64_t v51 = __clz(__rbit64(v53)) + (v48 << 6);
    goto LABEL_25;
  }
  int64_t v54 = v52 + 3;
  if (v54 >= v245) {
    goto LABEL_40;
  }
  unint64_t v53 = *(void *)(v244 + 8 * v54);
  if (v53)
  {
    int64_t v48 = v54;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v48 = v54 + 1;
    if (__OFADD__(v54, 1)) {
      goto LABEL_200;
    }
    if (v48 >= v245) {
      break;
    }
    unint64_t v53 = *(void *)(v244 + 8 * v48);
    ++v54;
    if (v53) {
      goto LABEL_24;
    }
  }
LABEL_40:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v250)(v37, 1, 1, v8);
  swift_release();
  uint64_t v42 = *(void *)v49;
  uint64_t v49 = v49 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
LABEL_41:
  uint64_t v65 = (uint64_t)v236;
  v248 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_boardIdentifier);
  ((void (*)(char *))v42)(v236);
  uint64_t v66 = *(void *)((char *)v240 + a1);
  uint64_t v67 = (uint64_t)v237;
  if (!*(void *)(v66 + 16))
  {
LABEL_46:
    int64_t v71 = *(void *)v252;
    (*(void (**)(uint64_t, uint64_t))v252)(v65, v8);
    LODWORD(v244) = 0;
    int64_t v245 = 0;
    uint64_t v241 = 0;
    goto LABEL_47;
  }
  swift_bridgeObjectRetain();
  unint64_t v68 = sub_100955FC8(v65);
  if ((v69 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  uint64_t v70 = *(void *)(*(void *)(v66 + 56) + 8 * v68);
  swift_retain();
  swift_bridgeObjectRelease();
  int64_t v71 = *(void *)v252;
  (*(void (**)(uint64_t, uint64_t))v252)(v65, v8);
  uint64_t v241 = v70;
  if ((*(void *)(v70 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_data) & 0x8000000000000000) != 0) {
    goto LABEL_315;
  }
  int64_t v245 = *(void *)(v70 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_data);
  swift_retain();
  LODWORD(v244) = 1;
LABEL_47:
  ((void (*)(uint64_t, uint64_t *, uint64_t))v42)(v67, v248, v8);
  uint64_t v72 = *(void *)(a1 + v239);
  uint64_t v73 = *(void *)(v72 + 16);
  uint64_t v242 = (char *)v42;
  if (!v73) {
    goto LABEL_54;
  }
  swift_bridgeObjectRetain();
  unint64_t v74 = sub_100955FC8(v67);
  if ((v75 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_54:
    ((void (*)(uint64_t, uint64_t))v71)(v67, v8);
    v237 = 0;
    goto LABEL_55;
  }
  BOOL v76 = *(char **)(*(void *)(v72 + 56) + 8 * v74);
  swift_retain();
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t, uint64_t))v71)(v67, v8);
  swift_retain();
  if (v244)
  {
    int64_t v71 = (int64_t)"getBoardDataStoreChangeSet(freehandDrawingBucketManager:ancestorDependencyProvider:)";
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"getBoardDataStoreChangeSet(freehandDrawingBucketManager:ancestorDependencyProvider:)", 84, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 490, (uint64_t)"Shouldn't have a board modification if we're creating the board.", 64, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"getBoardDataStoreChangeSet(freehandDrawingBucketManager:ancestorDependencyProvider:)", 84, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 490);
  }
  swift_release();
  if ((*(void *)&v76[OBJC_IVAR____TtC8Freeform19CRLTransactableData_data] & 0x8000000000000000) != 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"getBoardDataStoreChangeSet(freehandDrawingBucketManager:ancestorDependencyProvider:)", 84, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 494, (uint64_t)"Non-board data found associted with boardUUID", 45, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Non-board data found associted with boardUUID");
    uint64_t v224 = 494;
    goto LABEL_317;
  }
  int64_t v245 = *(void *)&v76[OBJC_IVAR____TtC8Freeform19CRLTransactableData_data];
  swift_retain();
  v237 = v76;
  swift_release();
LABEL_55:
  uint64_t v77 = v228;
  uint64_t v78 = swift_bridgeObjectRetain();
  uint64_t v79 = sub_1006A7DB8(v78);
  uint64_t v37 = v77;
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t v261 = v79;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v79 < 0 || (v79 & 0x4000000000000000) != 0)
  {
    uint64_t v79 = sub_100F68540(v79);
    unint64_t v261 = v79;
  }
  uint64_t v81 = v79 & 0xFFFFFFFFFFFFFF8;
  uint64_t v82 = *(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v42 = 0;
  if (v82)
  {
    uint64_t v83 = v81 + 32;
    uint64_t v84 = v81 + 24;
    do
    {
      uint64_t v85 = *(_UNKNOWN *****)(v83 + 8 * v42);
      if (*v85 == &off_101676660)
      {
        if (v42 >= v82 - 1) {
          break;
        }
        while (1)
        {
          uint64_t v86 = *(_UNKNOWN *****)(v84 + 8 * v82);
          if (*v86 != &off_101676660) {
            break;
          }
          uint64_t v87 = v82 - 2;
          --v82;
          if (v42 >= v87) {
            goto LABEL_67;
          }
        }
        *(void *)(v83 + 8 * v42) = v86;
        *(void *)(v84 + 8 * v82--) = v85;
      }
      ++v42;
    }
    while (v42 < v82);
  }
LABEL_67:
  specialized Array._endMutation()();
  uint64_t v45 = v261;
  int64_t v47 = v261 >> 62;
  uint64_t v253 = v8;
  if (v261 >> 62) {
    goto LABEL_201;
  }
  uint64_t v88 = *(void *)((v261 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v89 = v88;
  if (v88 < v42) {
    goto LABEL_205;
  }
  while (2)
  {
    if (v88 < 0) {
      goto LABEL_206;
    }
    if ((v45 & 0xC000000000000001) == 0 || v42 == v88)
    {
LABEL_75:
      uint64_t v8 = v37;
      uint64_t v243 = v49;
      if (v47)
      {
        swift_bridgeObjectRetain();
        uint64_t v89 = _CocoaArrayWrapper.subscript.getter();
        uint64_t v49 = v93;
        uint64_t v37 = v94;
        unint64_t v92 = v95;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v89 = v45 & 0xFFFFFFFFFFFFFF8;
        uint64_t v49 = (v45 & 0xFFFFFFFFFFFFFF8) + 32;
        unint64_t v92 = (2 * v88) | 1;
        swift_bridgeObjectRetain();
        uint64_t v37 = v42;
      }
      int64_t v71 = v92 >> 1;
      BOOL v96 = __OFSUB__(v92 >> 1, v37);
      uint64_t v88 = (v92 >> 1) - v37;
      if (v96) {
        goto LABEL_207;
      }
      if (!v88)
      {
        swift_unknownObjectRelease();
        uint64_t v49 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_92:
        uint64_t v89 = v261;
        int64_t v47 = v261 >> 62;
        uint64_t v37 = v8;
        if (!(v261 >> 62))
        {
          uint64_t v100 = *(void *)((v261 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v100 >= v42) {
            goto LABEL_94;
          }
          goto LABEL_210;
        }
LABEL_208:
        swift_bridgeObjectRetain();
        uint64_t v171 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v171 < 0) {
          goto LABEL_310;
        }
        swift_bridgeObjectRetain();
        uint64_t v100 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v100 >= v42)
        {
LABEL_94:
          if (v42 && (v89 & 0xC000000000000001) != 0)
          {
            type metadata accessor for CRLBoardItemData();
            Swift::Int v101 = 0;
            do
            {
              Swift::Int v102 = v101 + 1;
              _ArrayBuffer._typeCheckSlowPath(_:)(v101);
              Swift::Int v101 = v102;
            }
            while (v42 != v102);
          }
          uint64_t v8 = v49;
          if (v47)
          {
            swift_bridgeObjectRetain();
            uint64_t v45 = _CocoaArrayWrapper.subscript.getter();
            uint64_t v88 = v103;
            uint64_t v49 = v104;
            uint64_t v42 = v105;
            swift_bridgeObjectRelease();
            if (v42)
            {
LABEL_103:
              type metadata accessor for __ContiguousArrayStorageBase();
              swift_unknownObjectRetain_n();
              uint64_t v107 = (double *)swift_dynamicCastClass();
              if (!v107)
              {
                swift_unknownObjectRelease();
                uint64_t v107 = _swiftEmptyArrayStorage;
              }
              uint64_t v108 = *((void *)v107 + 2);
              swift_release();
              if (!__OFSUB__((unint64_t)v42 >> 1, v49))
              {
                if (v108 == ((unint64_t)v42 >> 1) - v49)
                {
                  uint64_t v106 = (double *)swift_dynamicCastClass();
                  if (!v106)
                  {
                    swift_unknownObjectRelease();
                    uint64_t v106 = _swiftEmptyArrayStorage;
                  }
                  goto LABEL_109;
                }
                goto LABEL_301;
              }
              goto LABEL_300;
            }
          }
          else
          {
            uint64_t v45 = v89 & 0xFFFFFFFFFFFFFF8;
            uint64_t v88 = (v89 & 0xFFFFFFFFFFFFFF8) + 32;
            uint64_t v42 = (2 * v42) | 1;
            swift_bridgeObjectRetain();
            uint64_t v49 = 0;
            if (v42) {
              goto LABEL_103;
            }
          }
          goto LABEL_102;
        }
LABEL_210:
        __break(1u);
LABEL_211:
        swift_bridgeObjectRetain();
        uint64_t v119 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v119 < v71) {
          goto LABEL_311;
        }
        swift_bridgeObjectRetain();
        uint64_t v88 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v88 < v71) {
          goto LABEL_312;
        }
        swift_bridgeObjectRetain();
        uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v42 >= v119) {
          goto LABEL_125;
        }
        __break(1u);
LABEL_215:
        __break(1u);
LABEL_216:
        __break(1u);
LABEL_217:
        __break(1u);
        goto LABEL_218;
      }
      v256[0] = _swiftEmptyArrayStorage;
      uint64_t v45 = (uint64_t)v256;
      specialized ContiguousArray.reserveCapacity(_:)();
      if (v88 < 0)
      {
        __break(1u);
        goto LABEL_294;
      }
      if (v37 <= v71) {
        int64_t v97 = v71;
      }
      else {
        int64_t v97 = v37;
      }
      int64_t v47 = v97 - v37;
      int64_t v71 = v49 + 8 * v37;
      while (v47)
      {
        uint64_t v99 = *(_UNKNOWN *****)v71;
        v71 += 8;
        uint64_t v98 = v99;
        if (*v99 == &off_101676660) {
          uint64_t v49 = (uint64_t)v98;
        }
        else {
          uint64_t v49 = 0;
        }
        swift_retain();
        uint64_t v45 = (uint64_t)v256;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v37 = *(void *)(v256[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        --v47;
        if (!--v88)
        {
          uint64_t v49 = v256[0];
          swift_unknownObjectRelease();
          goto LABEL_92;
        }
      }
      __break(1u);
    }
    else
    {
      if (v42 < (unint64_t)v88)
      {
        type metadata accessor for CRLBoardItemData();
        Swift::Int v90 = v42;
        do
        {
          Swift::Int v91 = v90 + 1;
          _ArrayBuffer._typeCheckSlowPath(_:)(v90);
          Swift::Int v90 = v91;
        }
        while (v88 != v91);
        goto LABEL_75;
      }
      while (1)
      {
        __break(1u);
LABEL_300:
        __break(1u);
LABEL_301:
        swift_unknownObjectRelease();
LABEL_102:
        uint64_t v106 = sub_1006B9FB8(v45, v88, v49, v42);
LABEL_109:
        swift_unknownObjectRelease();
        uint64_t v109 = swift_bridgeObjectRetain();
        uint64_t v110 = sub_1006A7DB8(v109);
        uint64_t v49 = v37;
        swift_bridgeObjectRelease();
        char v111 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        unint64_t v260 = v110;
        if ((v111 & 1) == 0 || v110 < 0 || (v110 & 0x4000000000000000) != 0)
        {
          uint64_t v110 = sub_100F68540(v110);
          unint64_t v260 = v110;
        }
        uint64_t v112 = v110 & 0xFFFFFFFFFFFFFF8;
        int64_t v113 = *(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v113)
        {
          int64_t v71 = 0;
          uint64_t v114 = v112 + 32;
          uint64_t v115 = v112 + 24;
          while (1)
          {
            uint64_t v116 = *(_UNKNOWN *****)(v114 + 8 * v71);
            if (*v116 == &off_101676660)
            {
              if (v71 >= v113 - 1) {
                goto LABEL_123;
              }
              while (1)
              {
                uint64_t v117 = *(_UNKNOWN *****)(v115 + 8 * v113);
                if (*v117 != &off_101676660) {
                  break;
                }
                int64_t v118 = v113 - 2;
                --v113;
                if (v71 >= v118) {
                  goto LABEL_123;
                }
              }
              *(void *)(v114 + 8 * v71) = v117;
              *(void *)(v115 + 8 * v113--) = v116;
            }
            if (++v71 >= v113) {
              goto LABEL_123;
            }
          }
        }
        int64_t v71 = 0;
LABEL_123:
        specialized Array._endMutation()();
        uint64_t v100 = v260;
        int64_t v47 = v260 >> 62;
        uint64_t v250 = v106;
        if (v260 >> 62) {
          goto LABEL_211;
        }
        uint64_t v119 = *(void *)((v260 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v42 = v119;
        if (v119 < v71) {
          goto LABEL_215;
        }
LABEL_125:
        if (v119 < 0) {
          goto LABEL_216;
        }
        if ((v100 & 0xC000000000000001) != 0 && v71 != v119)
        {
          if (v71 >= (unint64_t)v119)
          {
            __break(1u);
            goto LABEL_303;
          }
          type metadata accessor for CRLBoardItemData();
          Swift::Int v120 = v71;
          do
          {
            Swift::Int v121 = v120 + 1;
            _ArrayBuffer._typeCheckSlowPath(_:)(v120);
            Swift::Int v120 = v121;
          }
          while (v119 != v121);
        }
        uint64_t v251 = v49;
        if (v47)
        {
          swift_bridgeObjectRetain();
          uint64_t v42 = _CocoaArrayWrapper.subscript.getter();
          uint64_t v88 = v123;
          uint64_t v49 = v124;
          unint64_t v122 = v125;
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v42 = v100 & 0xFFFFFFFFFFFFFF8;
          uint64_t v88 = (v100 & 0xFFFFFFFFFFFFFF8) + 32;
          unint64_t v122 = (2 * v119) | 1;
          swift_bridgeObjectRetain();
          uint64_t v49 = v71;
        }
        int64_t v47 = v122 >> 1;
        BOOL v96 = __OFSUB__(v122 >> 1, v49);
        uint64_t v126 = (v122 >> 1) - v49;
        if (v96) {
          goto LABEL_217;
        }
        Swift::Int v240 = (void *)v8;
        if (!v126)
        {
          swift_unknownObjectRelease();
          uint64_t v49 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_148:
          uint64_t v42 = v260;
          int64_t v47 = v260 >> 62;
          uint64_t v8 = v246;
          uint64_t v130 = v260 & 0xFFFFFFFFFFFFFF8;
          if (!(v260 >> 62))
          {
            uint64_t v131 = *(void *)((v260 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v131 >= v71) {
              goto LABEL_150;
            }
LABEL_220:
            __break(1u);
LABEL_221:
            if (v131 < 0) {
              uint64_t v42 = v131;
            }
            else {
              uint64_t v42 = v130;
            }
            swift_bridgeObjectRetain();
            uint64_t v172 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v172 < 0) {
              goto LABEL_314;
            }
            swift_bridgeObjectRetain();
            uint64_t v173 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v173 < v88)
            {
LABEL_226:
              __break(1u);
              goto LABEL_227;
            }
LABEL_179:
            if (v88 && (v131 & 0xC000000000000001) != 0)
            {
              type metadata accessor for CRLBoardItemData();
              Swift::Int v155 = 0;
              do
              {
                Swift::Int v156 = v155 + 1;
                _ArrayBuffer._typeCheckSlowPath(_:)(v155);
                Swift::Int v155 = v156;
              }
              while (v88 != v156);
            }
            uint64_t v232 = (void (*)(uint64_t, uint64_t))v37;
            uint64_t v236 = (char *)v49;
            if (v47)
            {
              swift_bridgeObjectRetain();
              uint64_t v157 = _CocoaArrayWrapper.subscript.getter();
              uint64_t v158 = v160;
              uint64_t v37 = v161;
              unint64_t v159 = v162;
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v157 = v131 & 0xFFFFFFFFFFFFFF8;
              uint64_t v158 = (v131 & 0xFFFFFFFFFFFFFF8) + 32;
              unint64_t v159 = (2 * v88) | 1;
              swift_bridgeObjectRetain();
              uint64_t v37 = 0;
            }
            uint64_t v163 = sub_1006B6088(v157, v158, v37, v159);
            swift_unknownObjectRelease();
            uint64_t v164 = v246;
            swift_retain();
            uint64_t v88 = (uint64_t)sub_1006B52A0((unint64_t)v163, v164);
            uint64_t v42 = v126;
            swift_bridgeObjectRelease();
            swift_release();
            if ((unint64_t)v88 >> 62)
            {
LABEL_227:
              uint64_t v49 = _CocoaArrayWrapper.endIndex.getter();
              if (!v49) {
                goto LABEL_228;
              }
LABEL_188:
              uint64_t v249 = v42;
              v256[0] = _swiftEmptyArrayStorage;
              uint64_t v45 = (uint64_t)v256;
              sub_1006BB544(0, v49 & ~(v49 >> 63), 0);
              if (v49 < 0) {
                goto LABEL_295;
              }
              uint64_t v165 = 0;
              uint64_t v166 = (double *)v256[0];
              do
              {
                if ((v88 & 0xC000000000000001) != 0)
                {
                  uint64_t v167 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else
                {
                  uint64_t v167 = *(void *)(v88 + 8 * v165 + 32);
                  swift_retain();
                }
                (*(void (**)(void))(*(void *)v167 + 256))();
                swift_release();
                v256[0] = v166;
                unint64_t v169 = *((void *)v166 + 2);
                unint64_t v168 = *((void *)v166 + 3);
                if (v169 >= v168 >> 1)
                {
                  sub_1006BB544(v168 > 1, v169 + 1, 1);
                  uint64_t v166 = (double *)v256[0];
                }
                ++v165;
                *((void *)v166 + 2) = v169 + 1;
                (*(void (**)(unint64_t, uint64_t, uint64_t))(v255 + 32))((unint64_t)v166+ ((*(unsigned __int8 *)(v255 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v255 + 80))+ *(void *)(v255 + 72) * v169, v8, v253);
              }
              while (v49 != v165);
              swift_bridgeObjectRelease();
              uint64_t v42 = v249;
            }
            else
            {
              uint64_t v49 = *(void *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (v49) {
                goto LABEL_188;
              }
LABEL_228:
              swift_bridgeObjectRelease();
              uint64_t v166 = _swiftEmptyArrayStorage;
            }
            uint64_t v174 = sub_100CDCB64((uint64_t)v166);
            swift_bridgeObjectRelease();
            uint64_t v175 = swift_bridgeObjectRetain();
            uint64_t v176 = v42;
            uint64_t v177 = sub_1006A876C(v175);
            uint64_t v88 = v176;
            swift_bridgeObjectRelease();
            uint64_t v178 = sub_100F2DBBC((uint64_t)v177, v174);
            swift_bridgeObjectRelease();
            uint64_t v235 = sub_1006B9E84(v178);
            swift_bridgeObjectRelease();
            unint64_t v179 = (unint64_t)v240;
            if (v233)
            {
              swift_retain();
              sub_100BE1AB4(v179, v239, v251);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v258 = (double *)_swiftEmptyDictionarySingleton;
              uint64_t v180 = swift_beginAccess();
              __chkstk_darwin(v180, v181);
              swift_retain();
              uint64_t v182 = swift_bridgeObjectRetain();
              sub_1006B4754(v182, (void (*)(uint64_t, uint64_t))sub_1006B6198);
              swift_release();
              swift_bridgeObjectRelease();
              Swift::Int v240 = (void *)sub_1006B2A98((uint64_t)v258);
              uint64_t v249 = v176;
              swift_release();
            }
            else
            {
              uint64_t v249 = v176;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              Swift::Int v240 = _swiftEmptyDictionarySingleton;
            }
            uint64_t v183 = v230;
            uint64_t v8 = (uint64_t)v234;
            uint64_t v37 = (uint64_t)v250;
            uint64_t v184 = v252;
            swift_bridgeObjectRelease();
            BOOL v185 = v37 < 0 || (v37 & 0x4000000000000000) != 0;
            if (!v185)
            {
              if (*(void *)(v37 + 16)) {
                goto LABEL_240;
              }
LABEL_237:
              if ((v184 & 0x8000000000000000) == 0 && (v184 & 0x4000000000000000) == 0)
              {
                if (!*(void *)(v184 + 16)) {
                  goto LABEL_306;
                }
                goto LABEL_240;
              }
              swift_bridgeObjectRetain();
              uint64_t v223 = _CocoaArrayWrapper.endIndex.getter();
              swift_release();
              if (v223) {
                goto LABEL_240;
              }
LABEL_306:
              uint64_t v219 = 0;
              char v220 = v244;
              uint64_t v213 = v253;
              if (!v244)
              {
LABEL_292:
                swift_release();
                swift_release();
                uint64_t v221 = (int *)type metadata accessor for CRLBoardDataStoreChangeSet(0);
                sub_100539548((uint64_t)v248, (uint64_t)&v183[v221[5]], type metadata accessor for CRLBoardIdentifier);
                ((void (*)(unsigned char *, uint64_t, uint64_t))v242)(&v183[v221[6]], v246 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_rootContainerUUID, v213);
                unint64_t v222 = v262;
                *uint64_t v183 = v220;
                *(void *)&v183[v221[7]] = v245;
                *(void *)&v183[v221[8]] = v37;
                *(void *)&v183[v221[9]] = v184;
                *(void *)&v183[v221[10]] = v236;
                *(void *)&v183[v221[11]] = v235;
                *(void *)&v183[v221[12]] = v240;
                *(void *)&v183[v221[13]] = v219;
                *(void *)&v183[v221[14]] = v222;
                (*(void (**)(unsigned char *, void, uint64_t, int *))(*((void *)v221 - 1) + 56))(v183, 0, 1, v221);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                return swift_bridgeObjectRelease();
              }
LABEL_290:
              if (*(void *)(*(void *)((char *)v232 + v246) + 16))
              {
                sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"getBoardDataStoreChangeSet(freehandDrawingBucketManager:ancestorDependencyProvider:)", 84, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 572, (uint64_t)"A board creation should not include deleted items", 49, 2u, (uint64_t)_swiftEmptyArrayStorage);
                uint64_t v184 = v252;
                uint64_t v37 = (uint64_t)v250;
                uint64_t v183 = v230;
                sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"getBoardDataStoreChangeSet(freehandDrawingBucketManager:ancestorDependencyProvider:)", 84, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 572);
              }
              goto LABEL_292;
            }
            swift_bridgeObjectRetain();
            uint64_t v206 = _CocoaArrayWrapper.endIndex.getter();
            swift_release();
            if (!v206) {
              goto LABEL_237;
            }
LABEL_240:
            v258 = _swiftEmptyArrayStorage;
            if (v185)
            {
              swift_bridgeObjectRetain();
              uint64_t v186 = _CocoaArrayWrapper.endIndex.getter();
              swift_release();
            }
            else
            {
              uint64_t v186 = *(void *)(v37 + 16);
            }
            uint64_t v187 = v238;
            uint64_t v42 = (uint64_t)_swiftEmptyArrayStorage;
            if (v186)
            {
              v257 = _swiftEmptyArrayStorage;
              uint64_t v45 = (uint64_t)&v257;
              sub_1006BB544(0, v186 & ~(v186 >> 63), 0);
              if (v186 < 0) {
                goto LABEL_296;
              }
              uint64_t v49 = 0;
              uint64_t v42 = (uint64_t)v257;
              do
              {
                if ((v37 & 0xC000000000000001) != 0)
                {
                  uint64_t v188 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else
                {
                  uint64_t v188 = *(void *)(v37 + 8 * v49 + 32);
                  swift_retain();
                }
                (*(void (**)(void))(*(void *)v188 + 256))();
                swift_release();
                v257 = (double *)v42;
                unint64_t v190 = *(void *)(v42 + 16);
                unint64_t v189 = *(void *)(v42 + 24);
                uint64_t v88 = v190 + 1;
                if (v190 >= v189 >> 1)
                {
                  sub_1006BB544(v189 > 1, v190 + 1, 1);
                  uint64_t v42 = (uint64_t)v257;
                }
                ++v49;
                *(void *)(v42 + 16) = v88;
                (*(void (**)(unint64_t, uint64_t, uint64_t))(v255 + 32))(v42+ ((*(unsigned __int8 *)(v255 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v255 + 80))+ *(void *)(v255 + 72) * v190, v8, v253);
              }
              while (v186 != v49);
              uint64_t v187 = v238;
            }
            uint64_t v191 = swift_bridgeObjectRetain();
            sub_1006E2640(v191);
            if (v252 < 0 || (v252 & 0x4000000000000000) != 0)
            {
              swift_bridgeObjectRetain();
              uint64_t v192 = _CocoaArrayWrapper.endIndex.getter();
              swift_release();
            }
            else
            {
              uint64_t v192 = *(void *)(v252 + 16);
            }
            if (v192)
            {
              v257 = _swiftEmptyArrayStorage;
              uint64_t v45 = (uint64_t)&v257;
              sub_1006BB544(0, v192 & ~(v192 >> 63), 0);
              if (v192 < 0) {
                goto LABEL_297;
              }
              uint64_t v37 = 0;
              uint64_t v49 = (uint64_t)v257;
              unint64_t v193 = v252 & 0xC000000000000001;
              do
              {
                if (v193)
                {
                  uint64_t v194 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else
                {
                  uint64_t v194 = *(void *)(v252 + 8 * v37 + 32);
                  swift_retain();
                }
                (*(void (**)(void))(*(void *)v194 + 256))();
                swift_release();
                v257 = (double *)v49;
                uint64_t v8 = (uint64_t)v187;
                unint64_t v196 = *(void *)(v49 + 16);
                unint64_t v195 = *(void *)(v49 + 24);
                uint64_t v88 = v196 + 1;
                if (v196 >= v195 >> 1)
                {
                  sub_1006BB544(v195 > 1, v196 + 1, 1);
                  uint64_t v49 = (uint64_t)v257;
                }
                ++v37;
                *(void *)(v49 + 16) = v88;
                (*(void (**)(unint64_t, uint64_t, uint64_t))(v255 + 32))(v49+ ((*(unsigned __int8 *)(v255 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v255 + 80))+ *(void *)(v255 + 72) * v196, v8, v253);
                uint64_t v187 = (char *)v8;
              }
              while (v192 != v37);
            }
            else
            {
              uint64_t v49 = (uint64_t)_swiftEmptyArrayStorage;
            }
            sub_1006E2640(v49);
            unint64_t v197 = v262;
            if (v262 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v198 = _CocoaArrayWrapper.endIndex.getter();
              if (v198) {
                goto LABEL_269;
              }
LABEL_282:
              swift_bridgeObjectRelease();
              v200 = _swiftEmptyArrayStorage;
            }
            else
            {
              uint64_t v198 = *(void *)((v262 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!v198) {
                goto LABEL_282;
              }
LABEL_269:
              v257 = _swiftEmptyArrayStorage;
              uint64_t v45 = (uint64_t)&v257;
              sub_1006BB544(0, v198 & ~(v198 >> 63), 0);
              if (v198 < 0) {
                goto LABEL_298;
              }
              uint64_t v199 = 0;
              v200 = v257;
              uint64_t v251 = v197 & 0xC000000000000001;
              unint64_t v201 = v197;
              do
              {
                if (v251)
                {
                  uint64_t v202 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else
                {
                  uint64_t v202 = *(void *)(v197 + 8 * v199 + 32);
                  swift_retain();
                }
                uint64_t v203 = v247;
                (*(void (**)(void))(*(void *)v202 + 256))();
                swift_release();
                v257 = v200;
                unint64_t v205 = *((void *)v200 + 2);
                unint64_t v204 = *((void *)v200 + 3);
                if (v205 >= v204 >> 1)
                {
                  sub_1006BB544(v204 > 1, v205 + 1, 1);
                  v200 = v257;
                }
                ++v199;
                *((void *)v200 + 2) = v205 + 1;
                (*(void (**)(unint64_t, char *, uint64_t))(v255 + 32))((unint64_t)v200+ ((*(unsigned __int8 *)(v255 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v255 + 80))+ *(void *)(v255 + 72) * v205, v203, v253);
                unint64_t v197 = v201;
              }
              while (v198 != v199);
              swift_bridgeObjectRelease();
            }
            sub_1006E2640((uint64_t)v200);
            uint64_t v207 = v227[3];
            uint64_t v208 = v227[4];
            sub_10050F848(v227, v207);
            v209 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v208 + 8);
            uint64_t v210 = swift_bridgeObjectRetain();
            uint64_t v211 = v209(v210, v42, v207, v208);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v211 & 0xC000000000000001) != 0) {
              uint64_t v212 = __CocoaSet.count.getter();
            }
            else {
              uint64_t v212 = *(void *)(v211 + 16);
            }
            uint64_t v37 = (uint64_t)v250;
            uint64_t v213 = v253;
            if (v212)
            {
              uint64_t v214 = swift_bridgeObjectRetain();
              uint64_t v215 = v249;
              uint64_t v216 = sub_1006A8BF4(v214);
              uint64_t v217 = sub_100CDCB64(v216);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRetain();
              sub_1006B3814(v211, v217);
              uint64_t v219 = v218;
              uint64_t v249 = v215;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v213 = v253;
              swift_bridgeObjectRelease_n();
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v219 = 0;
            }
            uint64_t v183 = v230;
            char v220 = v244;
            uint64_t v184 = v252;
            if (!v244) {
              goto LABEL_292;
            }
            goto LABEL_290;
          }
LABEL_218:
          swift_bridgeObjectRetain();
          uint64_t v126 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v126 < 0) {
            goto LABEL_313;
          }
          swift_bridgeObjectRetain();
          uint64_t v131 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v131 < v71) {
            goto LABEL_220;
          }
LABEL_150:
          if (v71 && (v42 & 0xC000000000000001) != 0)
          {
            type metadata accessor for CRLBoardItemData();
            Swift::Int v132 = 0;
            do
            {
              Swift::Int v133 = v132 + 1;
              _ArrayBuffer._typeCheckSlowPath(_:)(v132);
              Swift::Int v132 = v133;
            }
            while (v71 != v133);
          }
          if (v47)
          {
            swift_bridgeObjectRetain();
            uint64_t v100 = _CocoaArrayWrapper.subscript.getter();
            uint64_t v119 = v134;
            uint64_t v88 = v135;
            int64_t v71 = v136;
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v100 = v42 & 0xFFFFFFFFFFFFFF8;
            uint64_t v119 = (v42 & 0xFFFFFFFFFFFFFF8) + 32;
            int64_t v71 = (2 * v71) | 1;
            swift_bridgeObjectRetain();
            uint64_t v88 = 0;
          }
          unint64_t v239 = v49;
          if ((v71 & 1) == 0)
          {
LABEL_158:
            uint64_t v137 = sub_1006B9FB8(v100, v119, v88, v71);
            goto LABEL_165;
          }
          type metadata accessor for __ContiguousArrayStorageBase();
          swift_unknownObjectRetain_n();
          uint64_t v138 = (double *)swift_dynamicCastClass();
          if (!v138)
          {
            swift_unknownObjectRelease();
            uint64_t v138 = _swiftEmptyArrayStorage;
          }
          uint64_t v139 = *((void *)v138 + 2);
          swift_release();
          if (!__OFSUB__((unint64_t)v71 >> 1, v88))
          {
            if (v139 == ((unint64_t)v71 >> 1) - v88)
            {
              uint64_t v137 = (double *)swift_dynamicCastClass();
              if (!v137)
              {
                swift_unknownObjectRelease();
                uint64_t v137 = _swiftEmptyArrayStorage;
              }
LABEL_165:
              uint64_t v252 = (uint64_t)v137;
              swift_unknownObjectRelease();
              uint64_t v37 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas;
              uint64_t v140 = swift_bridgeObjectRetain();
              uint64_t v141 = v251;
              unint64_t v142 = sub_1006A7DB8(v140);
              swift_bridgeObjectRelease();
              swift_retain();
              uint64_t v49 = (uint64_t)sub_1006B52A0(v142, v8);
              swift_bridgeObjectRelease();
              swift_release();
              uint64_t v143 = swift_bridgeObjectRetain();
              uint64_t v144 = sub_1006B9E84(v143);
              swift_bridgeObjectRelease();
              swift_retain();
              uint64_t v251 = sub_1006B48E0((uint64_t)v144, v8);
              swift_release();
              uint64_t v42 = *(void *)(v8 + v37);
              uint64_t v145 = swift_bridgeObjectRetain();
              uint64_t v146 = sub_1006A7DB8(v145);
              uint64_t v126 = v141;
              swift_bridgeObjectRelease();
              char v147 = swift_isUniquelyReferenced_nonNull_bridgeObject();
              unint64_t v259 = v146;
              if ((v147 & 1) == 0 || v146 < 0 || (v146 & 0x4000000000000000) != 0)
              {
                uint64_t v146 = sub_100F68540(v146);
                unint64_t v259 = v146;
              }
              uint64_t v148 = v146 & 0xFFFFFFFFFFFFFF8;
              uint64_t v149 = *(void *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10);
              uint64_t v8 = (uint64_t)v235;
              uint64_t v88 = 0;
              if (v149)
              {
                uint64_t v150 = v148 + 32;
                uint64_t v151 = v148 + 24;
                do
                {
                  uint64_t v152 = *(_UNKNOWN *****)(v150 + 8 * v88);
                  if (*v152 == &off_101676660)
                  {
                    if (v88 >= v149 - 1) {
                      break;
                    }
                    while (1)
                    {
                      uint64_t v153 = *(_UNKNOWN *****)(v151 + 8 * v149);
                      if (*v153 != &off_101676660) {
                        break;
                      }
                      uint64_t v154 = v149 - 2;
                      --v149;
                      if (v88 >= v154) {
                        goto LABEL_177;
                      }
                    }
                    *(void *)(v150 + 8 * v88) = v153;
                    *(void *)(v151 + 8 * v149--) = v152;
                  }
                  ++v88;
                }
                while (v88 < v149);
              }
LABEL_177:
              specialized Array._endMutation()();
              uint64_t v131 = v259;
              uint64_t v130 = v259 & 0xFFFFFFFFFFFFFF8;
              int64_t v47 = v259 >> 62;
              if (v259 >> 62) {
                goto LABEL_221;
              }
              if (*(void *)((v259 & 0xFFFFFFFFFFFFFF8) + 0x10) < v88) {
                goto LABEL_226;
              }
              goto LABEL_179;
            }
LABEL_304:
            swift_unknownObjectRelease();
            goto LABEL_158;
          }
LABEL_303:
          __break(1u);
          goto LABEL_304;
        }
        v256[0] = _swiftEmptyArrayStorage;
        uint64_t v45 = (uint64_t)v256;
        specialized ContiguousArray.reserveCapacity(_:)();
        if ((v126 & 0x8000000000000000) == 0) {
          break;
        }
LABEL_294:
        __break(1u);
LABEL_295:
        __break(1u);
LABEL_296:
        __break(1u);
LABEL_297:
        __break(1u);
LABEL_298:
        __break(1u);
      }
      if (v49 <= v47) {
        int64_t v127 = v47;
      }
      else {
        int64_t v127 = v49;
      }
      int64_t v47 = v127 - v49;
      uint64_t v37 = v88 + 8 * v49;
      while (v47)
      {
        uint64_t v129 = *(_UNKNOWN *****)v37;
        v37 += 8;
        uint64_t v128 = v129;
        if (*v129 == &off_101676660) {
          uint64_t v88 = (uint64_t)v128;
        }
        else {
          uint64_t v88 = 0;
        }
        swift_retain();
        uint64_t v45 = (uint64_t)v256;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v49 = *(void *)(v256[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        --v47;
        if (!--v126)
        {
          uint64_t v49 = v256[0];
          swift_unknownObjectRelease();
          goto LABEL_148;
        }
      }
    }
    __break(1u);
LABEL_199:
    __break(1u);
LABEL_200:
    __break(1u);
LABEL_201:
    int64_t v71 = v49;
    swift_bridgeObjectRetain();
    uint64_t v88 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v88 >= v42)
    {
      swift_bridgeObjectRetain();
      uint64_t v170 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v170 < v42) {
        goto LABEL_309;
      }
      swift_bridgeObjectRetain();
      uint64_t v89 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v49 = v71;
      if (v89 < v88)
      {
        __break(1u);
LABEL_205:
        __break(1u);
LABEL_206:
        __break(1u);
LABEL_207:
        __break(1u);
        goto LABEL_208;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_309:
  __break(1u);
LABEL_310:
  __break(1u);
LABEL_311:
  __break(1u);
LABEL_312:
  __break(1u);
LABEL_313:
  __break(1u);
LABEL_314:
  __break(1u);
LABEL_315:
  swift_retain();
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"getBoardDataStoreChangeSet(freehandDrawingBucketManager:ancestorDependencyProvider:)", 84, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 483, (uint64_t)"Non-board data found associted with boardUUID", 45, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Non-board data found associted with boardUUID");
  uint64_t v224 = 483;
LABEL_317:
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"getBoardDataStoreChangeSet(freehandDrawingBucketManager:ancestorDependencyProvider:)", 84, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, v224);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v225, v226);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006AF68C(uint64_t a1, uint64_t a2)
{
  sub_1005498A4(a2, (uint64_t)v16);
  uint64_t v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_boardAuxiliaryChanges);
  swift_beginAccess();
  uint64_t v4 = (double *)*v3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = (uint64_t)v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v4 = sub_100F63C34(0, *((void *)v4 + 2) + 1, 1, v4);
    *uint64_t v3 = (uint64_t)v4;
  }
  unint64_t v7 = *((void *)v4 + 2);
  unint64_t v6 = *((void *)v4 + 3);
  if (v7 >= v6 >> 1) {
    *uint64_t v3 = (uint64_t)sub_100F63C34((double *)(v6 > 1), v7 + 1, 1, v4);
  }
  uint64_t v8 = v17;
  uint64_t v9 = v18;
  uint64_t v10 = sub_1005231B4((uint64_t)v16, v17);
  __chkstk_darwin(v10, v10);
  uint64_t v12 = v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0) + 22;
  (*(void (**)(unsigned char *))(v13 + 16))(v12);
  sub_100667930(v7, (uint64_t)v12, v3, v8, v9);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v16);
  uint64_t result = swift_endAccess();
  if (*(uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter) <= 0) {
    return sub_1006ACF50();
  }
  return result;
}

uint64_t sub_1006AF840(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_1006E266C(v2);
  uint64_t result = swift_endAccess();
  if (*(uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter) <= 0) {
    return sub_1006ACF50();
  }
  return result;
}

uint64_t sub_1006AF8C8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  sub_1005498A4((uint64_t)a5, (uint64_t)v24);
  uint64_t v11 = (void *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_coalescableBoardAuxiliaryChanges);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v23[0] = *v11;
  uint64_t v13 = *(void *)&v23[0];
  *uint64_t v11 = 0x8000000000000000;
  unint64_t v15 = sub_100956130(a2, a3, a4);
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_12;
  }
  char v5 = v14;
  if (*(void *)(v13 + 24) >= v18)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_6;
    }
LABEL_12:
    sub_100980430();
    uint64_t v13 = *(void *)&v23[0];
    goto LABEL_6;
  }
  sub_100967688(v18, isUniquelyReferenced_nonNull_native);
  uint64_t v13 = *(void *)&v23[0];
  unint64_t v19 = sub_100956130(a2, a3, a4);
  if ((v5 & 1) != (v20 & 1))
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v24);
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v15 = v19;
LABEL_6:
  *uint64_t v11 = v13;
  swift_bridgeObjectRelease();
  uint64_t v21 = (void *)*v11;
  if ((v5 & 1) == 0)
  {
    sub_1005498A4((uint64_t)v24, (uint64_t)v23);
    sub_10097ADBC(v15, a2, a3, a4, v23, v21);
    swift_bridgeObjectRetain();
  }
  sub_10054BB2C((uint64_t *)(v21[7] + 40 * v15), a5);
  swift_endAccess();
  swift_bridgeObjectRelease();
  if (*(uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter) <= 0) {
    sub_1006ACF50();
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v24);
}

uint64_t sub_1006AFA9C@<X0>(unint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  char v14 = (char *)&v78 - v13;
  if (!sub_1006A9B34() || *(uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter) > 0)
  {
    uint64_t v15 = type metadata accessor for CRLBoardPeerChangeSet(0);
    return (*(uint64_t (**)(double *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 1, 1, v15);
  }
  uint64_t v84 = a2;
  uint64_t v85 = 0x2000400000000;
  BOOL v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
  uint64_t v88 = v7 + 16;
  unint64_t v89 = a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_boardIdentifier;
  uint64_t v87 = v17;
  ((void (*)(char *))v17)(v14);
  uint64_t v81 = (double *)OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_undoableModifiedItemDatas;
  uint64_t v18 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_undoableModifiedItemDatas);
  uint64_t v19 = *(void *)(v18 + 16);
  uint64_t v90 = 0x1000000000000;
  uint64_t v86 = v6;
  if (v19)
  {
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_100955FC8((uint64_t)v14);
    if (v21)
    {
      uint64_t v79 = *(void *)(*(void *)(v18 + 56) + 8 * v20);
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v83 = *(char **)(v7 + 8);
      ((void (*)(char *, uint64_t))v83)(v14, v6);
      uint64_t v22 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_snapshots);
      swift_beginAccess();
      uint64_t v23 = *v22;
      uint64_t v24 = v84;
      if (v23)
      {
        v87(v10, v89, v6);
        uint64_t v25 = v90;
        if (*(void *)(v23 + 16))
        {
          swift_retain();
          swift_bridgeObjectRetain();
          unint64_t v26 = sub_100955FC8((uint64_t)v10);
          if (v27)
          {
            uint64_t v28 = *(void *)(*(void *)(v23 + 56) + 16 * v26);
            swift_unknownObjectRetain();
            ((void (*)(char *, uint64_t))v83)(v10, v86);
            swift_bridgeObjectRelease();
            type metadata accessor for CRLBoard(0);
            uint64_t v29 = swift_dynamicCastClass();
            if (v29)
            {
              uint64_t v78 = v28;
              unint64_t v30 = *(void *)(v79 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_data);
              if ((v30 & 0x8000000000000000) != 0)
              {
LABEL_31:
                sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"getBoardPeerChangeSet()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 642, (uint64_t)"Non-board data found associted with boardUUID", 45, 2u, (uint64_t)_swiftEmptyArrayStorage);
                sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Non-board data found associted with boardUUID");
                sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"getBoardPeerChangeSet()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 642);
                SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v75, v76);
                uint64_t result = _assertionFailure(_:_:file:line:flags:)();
                __break(1u);
                return result;
              }
              uint64_t v31 = *(void *)(v29 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
              uint64_t v90 = *(void *)(v30 + 24);
              uint64_t v85 = *(void *)(v30 + 32);
              uint64_t v32 = *(void **)(v31 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_crdtContext);
              uint64_t v80 = *(void *)(v30 + 40);
              swift_retain();
              uint64_t v33 = v32;
              uint64_t v34 = swift_retain();
              uint64_t v35 = sub_101048710(v34, (uint64_t)v33);
              if (v3)
              {
                uint64_t v83 = v33;
                swift_release();
                if (qword_10166FBA0 != -1) {
                  swift_once();
                }
                swift_beginAccess();
                uint64_t v37 = (void *)static OS_os_log.realTimeSync;
                sub_1005057FC((uint64_t *)&unk_101672B40);
                uint64_t inited = swift_initStackObject();
                *(_OWORD *)(inited + 16) = xmmword_10117E810;
                swift_getErrorValue();
                unint64_t v82 = v91;
                id v39 = v37;
                uint64_t v40 = Error.localizedDescription.getter();
                unint64_t v82 = v41;
                *(void *)(inited + 56) = &type metadata for String;
                *(void *)(inited + 64) = sub_100528BE4();
                *(void *)(inited + 32) = v40;
                *(void *)(inited + 40) = v82;
                uint64_t v42 = static os_log_type_t.error.getter();
                sub_100BAC898((uint64_t)v39, (uint64_t)&_mh_execute_header, v42, (uint64_t)"Failed to serialize delta for board with error: %@", 50, 2, inited);
                swift_release();
                swift_release();
                swift_unknownObjectRelease();

                swift_setDeallocating();
                sub_1005057FC(&qword_101672B50);
                swift_arrayDestroy();

                swift_errorRelease();
                unint64_t v82 = 0xF000000000000000;
                uint64_t v83 = 0;
              }
              else
              {
                unint64_t v82 = v36;
                uint64_t v83 = v35;
                swift_release();
                swift_release();
                swift_unknownObjectRelease();

                swift_release();
              }
            }
            else
            {
              swift_unknownObjectRelease();
              swift_release();
              unint64_t v82 = 0xF000000000000000;
              uint64_t v83 = 0;
              uint64_t v80 = v90;
            }
          }
          else
          {
            ((void (*)(char *, uint64_t))v83)(v10, v86);
            swift_release();
            swift_bridgeObjectRelease();
            unint64_t v82 = 0xF000000000000000;
            uint64_t v83 = 0;
            uint64_t v80 = v90;
          }
        }
        else
        {
          ((void (*)(char *, uint64_t))v83)(v10, v6);
          unint64_t v82 = 0xF000000000000000;
          uint64_t v83 = 0;
          uint64_t v80 = v25;
        }
      }
      else
      {
        unint64_t v82 = 0xF000000000000000;
        uint64_t v83 = 0;
        uint64_t v80 = v90;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
      unint64_t v82 = 0xF000000000000000;
      uint64_t v83 = 0;
      uint64_t v80 = v90;
      uint64_t v24 = v84;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
    unint64_t v82 = 0xF000000000000000;
    uint64_t v83 = 0;
    uint64_t v80 = 0x1000000000000;
    uint64_t v24 = v84;
  }
  uint64_t v43 = swift_bridgeObjectRetain();
  unint64_t v44 = sub_1006A7DB8(v43);
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v84 = sub_1006B59F0(v44, a1);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v45 = *(void *)((char *)v81 + a1);
  uint64_t v46 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_snapshots);
  uint64_t v47 = swift_beginAccess();
  uint64_t v49 = *v46;
  if (!v49)
  {
    swift_bridgeObjectRetain();
    sub_100514260((uint64_t)v83, v82);
    __break(1u);
    goto LABEL_31;
  }
  __chkstk_darwin(v47, v48);
  v77[2] = v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v81 = sub_1006B338C(v45, (void (*)(char *, uint64_t))sub_1006B6228, (uint64_t)v77);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v50 = swift_bridgeObjectRetain();
  uint64_t v51 = sub_1006A8BF4(v50);
  uint64_t v52 = sub_100CDCB64(v51);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v53 = swift_bridgeObjectRetain();
  uint64_t v54 = sub_1006A8BF4(v53);
  uint64_t v55 = sub_100CDCB64(v54);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v56 = swift_bridgeObjectRetain();
  uint64_t v57 = sub_100F261B0(v56, v55);
  swift_bridgeObjectRelease();
  unint64_t v58 = a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerDeletedItemIds;
  swift_beginAccess();
  if (*(void *)(*(void *)v58 + 16) <= *(void *)(v57 + 16) >> 3)
  {
    unint64_t v92 = (void *)v57;
    uint64_t v61 = swift_bridgeObjectRetain();
    sub_1010295C8(v61);
    swift_bridgeObjectRelease();
    uint64_t v60 = v92;
  }
  else
  {
    uint64_t v59 = swift_bridgeObjectRetain();
    uint64_t v60 = sub_10102AA0C(v59, v57);
    swift_bridgeObjectRelease();
  }
  if (v60[2] <= *(void *)(v52 + 16) >> 3)
  {
    unint64_t v92 = (void *)v52;
    sub_1010295C8((uint64_t)v60);
    swift_bridgeObjectRelease();
    uint64_t v62 = v92;
  }
  else
  {
    uint64_t v62 = sub_10102AA0C((uint64_t)v60, v52);
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v63 = swift_bridgeObjectRetain();
  uint64_t v64 = sub_100ED8C0C(v63, (uint64_t)v62);
  uint64_t v65 = sub_1006B9E84(v64);
  swift_bridgeObjectRelease();
  uint64_t v66 = (unint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_coalescableBoardAuxiliaryChanges);
  swift_beginAccess();
  uint64_t v67 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_boardAuxiliaryChanges);
  swift_beginAccess();
  uint64_t v68 = swift_bridgeObjectRetain();
  sub_1006E2808(v68);
  swift_endAccess();
  *uint64_t v66 = sub_100A38DCC((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  uint64_t v69 = *v67;
  swift_bridgeObjectRetain();
  swift_release();
  *uint64_t v67 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  v87((char *)v24, v89, v86);
  uint64_t v70 = (int *)type metadata accessor for CRLBoardPeerChangeSet(0);
  int64_t v71 = (uint64_t *)((char *)v24 + v70[5]);
  uint64_t v72 = v85;
  *int64_t v71 = v90;
  v71[1] = v72;
  v71[2] = v80;
  uint64_t v73 = (char **)((char *)v24 + v70[6]);
  unint64_t v74 = v82;
  *uint64_t v73 = v83;
  v73[1] = (char *)v74;
  *(void *)((char *)v24 + v70[7]) = v81;
  *(void *)((char *)v24 + v70[8]) = v84;
  *(void *)((char *)v24 + v70[9]) = v65;
  *(void *)((char *)v24 + v70[10]) = v69;
  return (*(uint64_t (**)(double *, void, uint64_t, int *))(*((void *)v70 - 1) + 56))(v24, 0, 1, v70);
}

uint64_t sub_1006B05C4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(void *)(v2 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v2;
  *(void *)(v14 + 24) = a1;
  aBlock[4] = sub_1006B62D8;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = &unk_10150F1F8;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  v17[1] = _swiftEmptyArrayStorage;
  sub_1006B62F8((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100636834((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return swift_release();
}

uint64_t sub_1006B0884(uint64_t a1, unint64_t a2)
{
  uint64_t result = sub_1006B08C4(a2);
  if (*(uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter) <= 0) {
    return sub_1006ACF50();
  }
  return result;
}

uint64_t sub_1006B08C4(unint64_t a1)
{
  uint64_t v59 = type metadata accessor for UUID();
  uint64_t v53 = *(void *)(v59 - 8);
  __chkstk_darwin(v59, v3);
  uint64_t v60 = (uint64_t)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v58 = (uint64_t)v52 - v7;
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v11 = __chkstk_darwin(v8, v10);
  uint64_t v13 = (void *)((char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = *(void **)((char *)v1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
  *uint64_t v13 = v14;
  (*(void (**)(void *, void, uint64_t, __n128))(v9 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v8, v11);
  id v15 = v14;
  char v16 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v9 + 8))(v13, v8);
  if ((v16 & 1) == 0)
  {
LABEL_42:
    __break(1u);
LABEL_43:
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    if (v17) {
      goto LABEL_4;
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v57 = *(void *)((char *)v1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_lockCounter);
  if (a1 >> 62) {
    goto LABEL_43;
  }
  uint64_t v17 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v17) {
    return swift_bridgeObjectRelease();
  }
LABEL_4:
  uint64_t v18 = (void *)((char *)v1 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatas);
  uint64_t v19 = (void *)((char *)v1
                 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_peerServerSyncedItemDatasToProcessAfterUnlock);
  unint64_t v55 = a1;
  unint64_t v56 = a1 & 0xC000000000000001;
  v52[1] = v53 + 16;
  uint64_t v54 = (void (**)(uint64_t, uint64_t))(v53 + 8);
  for (uint64_t i = 4; ; ++i)
  {
    uint64_t v22 = i - 4;
    if (v56)
    {
      a1 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v23 = i - 3;
      if (__OFADD__(v22, 1)) {
        goto LABEL_37;
      }
    }
    else
    {
      a1 = *(void *)(a1 + 8 * i);
      swift_retain();
      uint64_t v23 = i - 3;
      if (__OFADD__(v22, 1))
      {
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    uint64_t v24 = *(void (**)(void))(*(void *)a1 + 256);
    if (v57 <= 0) {
      break;
    }
    uint64_t v25 = v60;
    v24();
    swift_beginAccess();
    swift_retain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v61 = (void *)*v19;
    uint64_t v1 = v61;
    *uint64_t v19 = 0x8000000000000000;
    unint64_t v28 = sub_100955FC8(v25);
    uint64_t v29 = v1[2];
    BOOL v30 = (v27 & 1) == 0;
    uint64_t v31 = v29 + v30;
    if (__OFADD__(v29, v30)) {
      goto LABEL_38;
    }
    char v32 = v27;
    if (v1[3] >= v31)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v1 = v61;
        if ((v27 & 1) == 0) {
          goto LABEL_26;
        }
      }
      else
      {
        sub_100980424();
        uint64_t v1 = v61;
        if ((v32 & 1) == 0) {
          goto LABEL_26;
        }
      }
    }
    else
    {
      sub_10096767C(v31, isUniquelyReferenced_nonNull_native);
      unint64_t v33 = sub_100955FC8(v60);
      if ((v32 & 1) != (v34 & 1)) {
        goto LABEL_45;
      }
      unint64_t v28 = v33;
      uint64_t v1 = v61;
      if ((v32 & 1) == 0)
      {
LABEL_26:
        v1[(v28 >> 6) + 8] |= 1 << v28;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v53 + 16))(v1[6] + *(void *)(v53 + 72) * v28, v60, v59);
        *(void *)(v1[7] + 8 * v28) = a1;
        uint64_t v45 = v1[2];
        BOOL v46 = __OFADD__(v45, 1);
        uint64_t v47 = v45 + 1;
        if (v46) {
          goto LABEL_40;
        }
        v1[2] = v47;
        goto LABEL_6;
      }
    }
    uint64_t v21 = v1[7];
    swift_release();
    *(void *)(v21 + 8 * v28) = a1;
LABEL_6:
    *uint64_t v19 = v1;
    swift_bridgeObjectRelease();
    (*v54)(v60, v59);
LABEL_7:
    swift_endAccess();
    swift_release();
    a1 = v55;
    if (v23 == v17) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v35 = v58;
  v24();
  swift_beginAccess();
  swift_retain();
  int v36 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v61 = (void *)*v18;
  uint64_t v1 = v61;
  *uint64_t v18 = 0x8000000000000000;
  unint64_t v38 = sub_100955FC8(v35);
  uint64_t v39 = v1[2];
  BOOL v40 = (v37 & 1) == 0;
  uint64_t v41 = v39 + v40;
  if (__OFADD__(v39, v40)) {
    goto LABEL_39;
  }
  char v42 = v37;
  if (v1[3] >= v41)
  {
    if (v36)
    {
      uint64_t v1 = v61;
      if ((v37 & 1) == 0) {
        goto LABEL_34;
      }
    }
    else
    {
      sub_100980424();
      uint64_t v1 = v61;
      if ((v42 & 1) == 0) {
        goto LABEL_34;
      }
    }
    goto LABEL_30;
  }
  sub_10096767C(v41, v36);
  unint64_t v43 = sub_100955FC8(v58);
  if ((v42 & 1) == (v44 & 1))
  {
    unint64_t v38 = v43;
    uint64_t v1 = v61;
    if ((v42 & 1) == 0)
    {
LABEL_34:
      v1[(v38 >> 6) + 8] |= 1 << v38;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v53 + 16))(v1[6] + *(void *)(v53 + 72) * v38, v58, v59);
      *(void *)(v1[7] + 8 * v38) = a1;
      uint64_t v49 = v1[2];
      BOOL v46 = __OFADD__(v49, 1);
      uint64_t v50 = v49 + 1;
      if (v46) {
        goto LABEL_41;
      }
      v1[2] = v50;
      goto LABEL_36;
    }
LABEL_30:
    uint64_t v48 = v1[7];
    swift_release();
    *(void *)(v48 + 8 * v38) = a1;
LABEL_36:
    *uint64_t v18 = v1;
    swift_bridgeObjectRelease();
    (*v54)(v58, v59);
    goto LABEL_7;
  }
LABEL_45:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1006B0E9C()
{
  sub_1005387C0(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_rootContainerUUID;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1006B1034()
{
  sub_1006B0E9C();

  return swift_deallocClassInstance();
}

uint64_t sub_1006B108C()
{
  return type metadata accessor for CRLBoardChangeSet(0);
}

uint64_t type metadata accessor for CRLBoardChangeSet(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10167A740);
}

uint64_t sub_1006B10B4()
{
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for UUID();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_1006B11DC(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLBoardCoalescableAuxiliaryChangeIdentity(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLBoardCoalescableAuxiliaryChangeIdentity(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLBoardCoalescableAuxiliaryChangeIdentity(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLBoardCoalescableAuxiliaryChangeIdentity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardCoalescableAuxiliaryChangeIdentity()
{
  return &type metadata for CRLBoardCoalescableAuxiliaryChangeIdentity;
}

void *initializeBufferWithCopyOfBuffer for CRLTransactableData.DataType(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for CRLTransactableData.DataType()
{
  return swift_release();
}

void *assignWithCopy for CRLTransactableData.DataType(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for CRLTransactableData.DataType(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLTransactableData.DataType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 6) | (2 * ((*(void *)a1 >> 57) & 0x38 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CRLTransactableData.DataType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)uint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1006B14C4(void *a1)
{
  return *a1 >> 63;
}

void *sub_1006B14D0(void *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_1006B14E0(uint64_t *result, uint64_t a2)
{
  *uint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for CRLTransactableData.DataType()
{
  return &type metadata for CRLTransactableData.DataType;
}

unint64_t sub_1006B1508()
{
  unint64_t result = qword_10167AA98;
  if (!qword_10167AA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167AA98);
  }
  return result;
}

uint64_t sub_1006B155C(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_1006B1B20(a1, (uint64_t)sub_100D19A60, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1006B15E8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, void, uint64_t, uint64_t *))
{
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = a2;
  a4(a1, a3, 0, isUniquelyReferenced_nonNull_native, &v12);
  uint64_t v10 = v12;
  swift_bridgeObjectRelease();
  if (v4) {
    swift_bridgeObjectRelease();
  }
  return v10;
}

uint64_t sub_1006B1678(uint64_t result, uint64_t a2, uint64_t *a3)
{
  if (*(unsigned char *)(a2 + *(void *)(*(void *)a2 + 136)) == 1)
  {
    uint64_t v5 = result;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v7 = *a3;
    *a3 = 0x8000000000000000;
    sub_100972960(a2, v5, isUniquelyReferenced_nonNull_native);
    *a3 = v7;
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1006B1714(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC(&qword_10169A1D0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v13 = (char *)v2 + *(void *)(*v2 + 120);
  uint64_t v14 = (void (**)(char *, char *, uint64_t))(v5 + 16);
  swift_beginAccess();
  if (a1)
  {
    id v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v15(v9, v13, v4);
    Capsule.copy()();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    char v16 = 0;
  }
  else
  {
    id v15 = *v14;
    (*v14)(v12, v13, v4);
    char v16 = *((unsigned char *)v2 + *(void *)(*v2 + 136));
  }
  uint64_t v17 = v2[2];
  v15(v9, v12, v4);
  uint64_t v18 = (char *)v2 + *(void *)(*v2 + 128);
  long long v19 = *(_OWORD *)v18;
  long long v25 = *((_OWORD *)v18 + 1);
  long long v26 = v19;
  uint64_t v20 = *((void *)v18 + 4);
  sub_1005057FC((uint64_t *)&unk_1016A8B70);
  uint64_t v21 = (void *)swift_allocObject();
  *((unsigned char *)v21 + *(void *)(*v21 + 136)) = 0;
  v21[2] = v17;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))((char *)v21 + *(void *)(*v21 + 120), v9, v4);
  *((unsigned char *)v21 + *(void *)(*v21 + 136)) = v16;
  uint64_t v22 = (char *)v21 + *(void *)(*v21 + 128);
  long long v23 = v25;
  *(_OWORD *)uint64_t v22 = v26;
  *((_OWORD *)v22 + 1) = v23;
  *((void *)v22 + 4) = v20;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
  return v21;
}

uint64_t sub_1006B19C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(int *)(sub_1005057FC(&qword_10167AAC8) + 48);
  uint64_t v5 = *(int *)(sub_1005057FC(&qword_10167AAD0) + 48);
  uint64_t v6 = type metadata accessor for UUID();
  long long v8 = *(_OWORD *)(a1 + v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  *(_OWORD *)(a2 + v5) = v8;

  return swift_unknownObjectRetain();
}

uint64_t sub_1006B1A7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(int *)(sub_1005057FC(&qword_10167AAA0) + 48);
  uint64_t v5 = *(int *)(sub_1005057FC(&qword_10167AAA8) + 48);
  uint64_t v6 = *(void *)(a1 + v4);
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  *(void *)(a2 + v5) = v6;

  return swift_retain();
}

uint64_t sub_1006B1B20(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v52 = type metadata accessor for UUID();
  uint64_t v43 = *(void *)(v52 - 8);
  __chkstk_darwin(v52, v10);
  uint64_t v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_10167AAE0);
  __chkstk_darwin(v13 - 8, v14);
  char v16 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = ~v17;
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v20 = -v17;
  uint64_t v45 = a1;
  uint64_t v46 = a1 + 64;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  else {
    uint64_t v21 = -1;
  }
  uint64_t v47 = v18;
  uint64_t v48 = 0;
  uint64_t v49 = v21 & v19;
  uint64_t v50 = a2;
  uint64_t v51 = a3;
  v41[2] = a1;
  swift_bridgeObjectRetain();
  v41[1] = a3;
  swift_retain();
  sub_100F27C20((uint64_t)v16);
  uint64_t v22 = sub_1005057FC((uint64_t *)&unk_10169A260);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v16, 1, v22) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_10052E1EC();
    return swift_release();
  }
  char v44 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
  char v42 = (void (**)(char *, uint64_t))(v43 + 8);
  while (1)
  {
    uint64_t v26 = *(int *)(v22 + 48);
    v44(v12, v16, v52);
    uint64_t v27 = *(void *)&v16[v26];
    unint64_t v28 = *(void **)a5;
    unint64_t v30 = sub_100955FC8((uint64_t)v12);
    uint64_t v31 = v28[2];
    BOOL v32 = (v29 & 1) == 0;
    uint64_t v33 = v31 + v32;
    if (__OFADD__(v31, v32)) {
      break;
    }
    char v34 = v29;
    if (v28[3] >= v33)
    {
      if (a4)
      {
        char v37 = *(void **)a5;
        if (v29) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_10097C6F8();
        char v37 = *(void **)a5;
        if (v34) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_10095FB94(v33, a4 & 1);
      unint64_t v35 = sub_100955FC8((uint64_t)v12);
      if ((v34 & 1) != (v36 & 1)) {
        goto LABEL_22;
      }
      unint64_t v30 = v35;
      char v37 = *(void **)a5;
      if (v34)
      {
LABEL_7:
        uint64_t v24 = *(void *)(v37[7] + 8 * v30);
        swift_retain();
        swift_release();
        (*v42)(v12, v52);
        uint64_t v25 = *(void *)(*(void *)a5 + 56);
        swift_release();
        *(void *)(v25 + 8 * v30) = v24;
        goto LABEL_8;
      }
    }
    v37[(v30 >> 6) + 8] |= 1 << v30;
    v44((char *)(v37[6] + *(void *)(v43 + 72) * v30), v12, v52);
    *(void *)(v37[7] + 8 * v30) = v27;
    uint64_t v38 = v37[2];
    BOOL v39 = __OFADD__(v38, 1);
    uint64_t v40 = v38 + 1;
    if (v39) {
      goto LABEL_21;
    }
    v37[2] = v40;
LABEL_8:
    sub_100F27C20((uint64_t)v16);
    uint64_t v22 = sub_1005057FC((uint64_t *)&unk_10169A260);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v16, 1, v22) == 1) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1006B1EF8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v44 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_10167AAE0);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = ~v18;
  uint64_t v20 = *(void *)(a1 + 64);
  uint64_t v21 = -v18;
  uint64_t v46 = a1;
  uint64_t v47 = a1 + 64;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  uint64_t v48 = v19;
  uint64_t v49 = 0;
  uint64_t v50 = v22 & v20;
  uint64_t v51 = a2;
  uint64_t v52 = a3;
  v42[2] = a1;
  swift_bridgeObjectRetain();
  v42[1] = a3;
  swift_retain();
  sub_100F27C20((uint64_t)v17);
  uint64_t v23 = sub_1005057FC((uint64_t *)&unk_10169A260);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v17, 1, v23) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_10052E1EC();
    return swift_release();
  }
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
  uint64_t v53 = v44 + 32;
  uint64_t v43 = (void (**)(char *, uint64_t))(v44 + 8);
  while (1)
  {
    uint64_t v26 = *(int *)(v23 + 48);
    uint64_t v27 = v10;
    v45(v13, v17, v10);
    uint64_t v28 = *(void *)&v17[v26];
    uint64_t v29 = *a5;
    unint64_t v31 = sub_100955FC8((uint64_t)v13);
    uint64_t v32 = *(void *)(v29 + 16);
    BOOL v33 = (v30 & 1) == 0;
    uint64_t v34 = v32 + v33;
    if (__OFADD__(v32, v33)) {
      break;
    }
    char v35 = v30;
    if (*(void *)(v29 + 24) >= v34)
    {
      if (a4)
      {
        if (v30) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_10097C6F8();
        if (v35) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_10095FB94(v34, a4 & 1);
      unint64_t v36 = sub_100955FC8((uint64_t)v13);
      if ((v35 & 1) != (v37 & 1)) {
        goto LABEL_22;
      }
      unint64_t v31 = v36;
      if (v35)
      {
LABEL_7:
        uint64_t v10 = v27;
        (*v43)(v13, v27);
        uint64_t v25 = *(void *)(*a5 + 56);
        swift_release();
        *(void *)(v25 + 8 * v31) = v28;
        goto LABEL_8;
      }
    }
    uint64_t v38 = (void *)*a5;
    *(void *)(*a5 + 8 * (v31 >> 6) + 64) |= 1 << v31;
    uint64_t v10 = v27;
    v45((char *)(v38[6] + *(void *)(v44 + 72) * v31), v13, v27);
    *(void *)(v38[7] + 8 * v31) = v28;
    uint64_t v39 = v38[2];
    BOOL v40 = __OFADD__(v39, 1);
    uint64_t v41 = v39 + 1;
    if (v40) {
      goto LABEL_21;
    }
    void v38[2] = v41;
LABEL_8:
    sub_100F27C20((uint64_t)v17);
    uint64_t v23 = sub_1005057FC((uint64_t *)&unk_10169A260);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v17, 1, v23) == 1) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1006B22C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v43 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_10167AAD8);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = ~v18;
  uint64_t v20 = *(void *)(a1 + 64);
  uint64_t v21 = -v18;
  uint64_t v46 = a1;
  uint64_t v47 = a1 + 64;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  uint64_t v48 = v19;
  uint64_t v49 = 0;
  uint64_t v50 = v22 & v20;
  uint64_t v51 = a2;
  uint64_t v52 = a3;
  v41[2] = a1;
  swift_bridgeObjectRetain();
  v41[1] = a3;
  swift_retain();
  sub_100F28464((uint64_t)v17);
  uint64_t v23 = sub_1005057FC(&qword_10167AAD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v17, 1, v23) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_10052E1EC();
    return swift_release();
  }
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
  char v42 = (void (**)(char *, uint64_t))(v43 + 8);
  while (1)
  {
    uint64_t v26 = *(int *)(v23 + 48);
    uint64_t v27 = v10;
    v53(v13, v17, v10);
    long long v45 = *(_OWORD *)&v17[v26];
    uint64_t v28 = *(void **)a5;
    unint64_t v30 = sub_100955FC8((uint64_t)v13);
    uint64_t v31 = v28[2];
    BOOL v32 = (v29 & 1) == 0;
    uint64_t v33 = v31 + v32;
    if (__OFADD__(v31, v32)) {
      break;
    }
    char v34 = v29;
    if (v28[3] >= v33)
    {
      if (a4)
      {
        char v37 = *(void **)a5;
        if (v29) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_10097BB14();
        char v37 = *(void **)a5;
        if (v34) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_10095DFBC(v33, a4 & 1);
      unint64_t v35 = sub_100955FC8((uint64_t)v13);
      if ((v34 & 1) != (v36 & 1)) {
        goto LABEL_22;
      }
      unint64_t v30 = v35;
      char v37 = *(void **)a5;
      if (v34)
      {
LABEL_7:
        long long v44 = *(_OWORD *)(v37[7] + 16 * v30);
        swift_unknownObjectRetain();
        swift_unknownObjectRelease();
        uint64_t v10 = v27;
        (*v42)(v13, v27);
        uint64_t v25 = *(void *)(*(void *)a5 + 56);
        swift_unknownObjectRelease();
        *(_OWORD *)(v25 + 16 * v30) = v44;
        goto LABEL_8;
      }
    }
    v37[(v30 >> 6) + 8] |= 1 << v30;
    uint64_t v10 = v27;
    v53((char *)(v37[6] + *(void *)(v43 + 72) * v30), v13, v27);
    *(_OWORD *)(v37[7] + 16 * v30) = v45;
    uint64_t v38 = v37[2];
    BOOL v39 = __OFADD__(v38, 1);
    uint64_t v40 = v38 + 1;
    if (v39) {
      goto LABEL_21;
    }
    v37[2] = v40;
LABEL_8:
    sub_100F28464((uint64_t)v17);
    uint64_t v23 = sub_1005057FC(&qword_10167AAD0);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v17, 1, v23) == 1) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1006B26C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v52 = type metadata accessor for UUID();
  uint64_t v43 = *(void *)(v52 - 8);
  __chkstk_darwin(v52, v10);
  uint64_t v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_10167AAB0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = ~v17;
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v20 = -v17;
  uint64_t v45 = a1;
  uint64_t v46 = a1 + 64;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  else {
    uint64_t v21 = -1;
  }
  uint64_t v47 = v18;
  uint64_t v48 = 0;
  uint64_t v49 = v21 & v19;
  uint64_t v50 = a2;
  uint64_t v51 = a3;
  v41[2] = a1;
  swift_bridgeObjectRetain();
  v41[1] = a3;
  swift_retain();
  sub_100F28874((uint64_t)v16);
  uint64_t v22 = sub_1005057FC(&qword_10167AAA8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v16, 1, v22) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_10052E1EC();
    return swift_release();
  }
  long long v44 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
  char v42 = (void (**)(char *, uint64_t))(v43 + 8);
  while (1)
  {
    uint64_t v26 = *(int *)(v22 + 48);
    v44(v12, v16, v52);
    uint64_t v27 = *(void *)&v16[v26];
    uint64_t v28 = *(void **)a5;
    unint64_t v30 = sub_100955FC8((uint64_t)v12);
    uint64_t v31 = v28[2];
    BOOL v32 = (v29 & 1) == 0;
    uint64_t v33 = v31 + v32;
    if (__OFADD__(v31, v32)) {
      break;
    }
    char v34 = v29;
    if (v28[3] >= v33)
    {
      if (a4)
      {
        char v37 = *(void **)a5;
        if (v29) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_100980424();
        char v37 = *(void **)a5;
        if (v34) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_10096767C(v33, a4 & 1);
      unint64_t v35 = sub_100955FC8((uint64_t)v12);
      if ((v34 & 1) != (v36 & 1)) {
        goto LABEL_22;
      }
      unint64_t v30 = v35;
      char v37 = *(void **)a5;
      if (v34)
      {
LABEL_7:
        uint64_t v24 = *(void *)(v37[7] + 8 * v30);
        swift_retain();
        swift_release();
        (*v42)(v12, v52);
        uint64_t v25 = *(void *)(*(void *)a5 + 56);
        swift_release();
        *(void *)(v25 + 8 * v30) = v24;
        goto LABEL_8;
      }
    }
    v37[(v30 >> 6) + 8] |= 1 << v30;
    v44((char *)(v37[6] + *(void *)(v43 + 72) * v30), v12, v52);
    *(void *)(v37[7] + 8 * v30) = v27;
    uint64_t v38 = v37[2];
    BOOL v39 = __OFADD__(v38, 1);
    uint64_t v40 = v38 + 1;
    if (v39) {
      goto LABEL_21;
    }
    v37[2] = v40;
LABEL_8:
    sub_100F28874((uint64_t)v16);
    uint64_t v22 = sub_1005057FC(&qword_10167AAA8);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v16, 1, v22) == 1) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1006B2A98(uint64_t a1)
{
  uint64_t v48 = sub_1005057FC(&qword_10169A1D0);
  uint64_t v2 = *(void *)(v48 - 8);
  uint64_t v4 = __chkstk_darwin(v48, v3);
  uint64_t v47 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v6);
  uint64_t v46 = (char *)&v38 - v7;
  sub_1005057FC((uint64_t *)&unk_10169A250);
  uint64_t result = static _DictionaryStorage.copy(original:)();
  int64_t v9 = 0;
  uint64_t v49 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v39 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v43 = (void (**)(char *, char *, uint64_t))(v2 + 32);
  uint64_t v44 = v2 + 16;
  char v42 = (void (**)(char *, uint64_t))(v2 + 8);
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v41 = result + 64;
  uint64_t v45 = result;
  uint64_t v14 = (void (**)(char *, char *, uint64_t))(v2 + 16);
  uint64_t v16 = v46;
  uint64_t v15 = v47;
  uint64_t v17 = v48;
  if (!v13) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v50 = (v13 - 1) & v13;
  int64_t v51 = v9;
  for (unint64_t i = __clz(__rbit64(v13)) | (v9 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v21 << 6))
  {
    unint64_t v55 = i;
    uint64_t v23 = 8 * i;
    uint64_t v24 = *(void *)(v49 + 56);
    uint64_t v56 = *(void *)(*(void *)(v49 + 48) + 8 * i);
    uint64_t v25 = *(void **)(v24 + 8 * i);
    uint64_t v26 = (char *)v25 + *(void *)(*v25 + 120);
    swift_beginAccess();
    uint64_t v27 = *v14;
    (*v14)(v16, v26, v17);
    int v54 = *((unsigned __int8 *)v25 + *(void *)(*v25 + 136));
    uint64_t v28 = v25[2];
    v27(v15, v16, v17);
    char v29 = (char *)v25 + *(void *)(*v25 + 128);
    long long v30 = *(_OWORD *)v29;
    long long v52 = *((_OWORD *)v29 + 1);
    long long v53 = v30;
    uint64_t v31 = *((void *)v29 + 4);
    sub_1005057FC((uint64_t *)&unk_1016A8B70);
    BOOL v32 = (void *)swift_allocObject();
    *((unsigned char *)v32 + *(void *)(*v32 + 136)) = 0;
    void v32[2] = v28;
    (*v43)((char *)v32 + *(void *)(*v32 + 120), v15, v17);
    *((unsigned char *)v32 + *(void *)(*v32 + 136)) = v54;
    uint64_t v33 = (char *)v32 + *(void *)(*v32 + 128);
    long long v34 = v52;
    *(_OWORD *)uint64_t v33 = v53;
    *((_OWORD *)v33 + 1) = v34;
    *((void *)v33 + 4) = v31;
    (*v42)(v16, v17);
    *(void *)(v41 + ((v55 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v55;
    uint64_t result = v45;
    *(void *)(*(void *)(v45 + 48) + v23) = v56;
    *(void *)(*(void *)(result + 56) + v23) = v32;
    uint64_t v35 = *(void *)(result + 16);
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    *(void *)(result + 16) = v37;
    unint64_t v13 = v50;
    int64_t v9 = v51;
    if (v50) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_24;
    }
    if (v19 >= v40) {
      return result;
    }
    unint64_t v20 = *(void *)(v39 + 8 * v19);
    int64_t v21 = v9 + 1;
    if (!v20)
    {
      int64_t v21 = v9 + 2;
      if (v9 + 2 >= v40) {
        return result;
      }
      unint64_t v20 = *(void *)(v39 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v9 + 3;
        if (v9 + 3 >= v40) {
          return result;
        }
        unint64_t v20 = *(void *)(v39 + 8 * v21);
        if (!v20) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v50 = (v20 - 1) & v20;
    int64_t v51 = v21;
  }
  uint64_t v22 = v9 + 4;
  if (v9 + 4 >= v40) {
    return result;
  }
  unint64_t v20 = *(void *)(v39 + 8 * v22);
  if (v20)
  {
    int64_t v21 = v9 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v21 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v21 >= v40) {
      return result;
    }
    unint64_t v20 = *(void *)(v39 + 8 * v21);
    ++v22;
    if (v20) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1006B2EF8(void *a1, uint64_t (*a2)(void, void))
{
  return a2(*a1, a1[1]);
}

uint64_t sub_1006B2F34(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  if (a1 == a4)
  {
    if (a3)
    {
      if (a6)
      {
        if (a2 == a5 && a3 == a6) {
          return 1;
        }
        if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
          return 1;
        }
      }
    }
    else if (!a6)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1006B2FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8, v9);
  uint64_t v11 = &v20[-v10];
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_data);
  uint64_t v13 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_data);
  if (v12 < 0)
  {
    if (v13 < 0)
    {
      uint64_t v18 = *(uint64_t (**)(uint64_t))(*(void *)(v12 & 0x7FFFFFFFFFFFFFFFLL) + 448);
      swift_retain();
      uint64_t v19 = swift_retain();
      LOBYTE(v18) = v18(v19);
      swift_release();
      swift_release();
      return v18 & 1;
    }
    goto LABEL_6;
  }
  if (v13 < 0)
  {
LABEL_6:
    char v16 = 0;
    return v16 & 1;
  }
  uint64_t v14 = v12 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100539548(v14, (uint64_t)v11, type metadata accessor for CRLBoardCRDTData);
  uint64_t v15 = v13 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100539548(v15, (uint64_t)v7, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  swift_retain();
  char v16 = sub_101049AF4((uint64_t)v11, (uint64_t)v7);
  sub_1005387C0((uint64_t)v7, type metadata accessor for CRLBoardCRDTData);
  sub_1005387C0((uint64_t)v11, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  swift_release();
  return v16 & 1;
}

uint64_t sub_1006B31B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8, v9);
  uint64_t v11 = &v18[-v10];
  if (a1 < 0)
  {
    if (a2 < 0)
    {
      char v16 = *(uint64_t (**)(uint64_t))(*(void *)(a1 & 0x7FFFFFFFFFFFFFFFLL) + 448);
      swift_retain();
      uint64_t v17 = swift_retain();
      LOBYTE(v16) = v16(v17);
      swift_release();
      swift_release();
      return v16 & 1;
    }
    goto LABEL_5;
  }
  if (a2 < 0)
  {
LABEL_5:
    char v14 = 0;
    return v14 & 1;
  }
  uint64_t v12 = a1 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100539548(v12, (uint64_t)v11, type metadata accessor for CRLBoardCRDTData);
  uint64_t v13 = a2 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100539548(v13, (uint64_t)v7, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  swift_retain();
  char v14 = sub_101049AF4((uint64_t)v11, (uint64_t)v7);
  sub_1005387C0((uint64_t)v7, type metadata accessor for CRLBoardCRDTData);
  sub_1005387C0((uint64_t)v11, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  swift_release();
  return v14 & 1;
}

double *sub_1006B338C(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3)
{
  uint64_t v47 = a3;
  uint64_t v46 = a2;
  uint64_t v4 = sub_1005057FC(&qword_10167AAB8);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for CRLBoardItemDeltaChange(0);
  uint64_t v8 = *(void *)(v45 - 8);
  __chkstk_darwin(v45, v9);
  uint64_t v41 = (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v39 = (uint64_t)&v38 - v13;
  uint64_t v14 = sub_1005057FC(&qword_10169A270);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v43 = a1 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  int64_t v44 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v40 = v8;
  uint64_t v22 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  uint64_t result = (double *)swift_bridgeObjectRetain();
  int64_t v24 = 0;
  char v42 = _swiftEmptyArrayStorage;
  if (!v21) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v25 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  for (unint64_t i = v25 | (v24 << 6); ; unint64_t i = __clz(__rbit64(v31)) + (v24 << 6))
  {
    uint64_t v27 = *(void *)(a1 + 48);
    uint64_t v28 = type metadata accessor for UUID();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v17, v27 + *(void *)(*(void *)(v28 - 8) + 72) * i, v28);
    uint64_t v29 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    *(void *)&v17[*(int *)(v14 + 48)] = v29;
    swift_retain();
    v46(v17, v29);
    sub_100522F00((uint64_t)v17, &qword_10169A270);
    if ((*v22)(v7, 1, v45) == 1)
    {
      uint64_t result = (double *)sub_100522F00((uint64_t)v7, &qword_10167AAB8);
      if (v21) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v33 = v39;
      sub_1006B6230((uint64_t)v7, v39, type metadata accessor for CRLBoardItemDeltaChange);
      sub_1006B6230(v33, v41, type metadata accessor for CRLBoardItemDeltaChange);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v42 = (double *)sub_100F63C00(0, *((void *)v42 + 2) + 1, 1, (unint64_t)v42);
      }
      unint64_t v35 = *((void *)v42 + 2);
      unint64_t v34 = *((void *)v42 + 3);
      if (v35 >= v34 >> 1) {
        char v42 = (double *)sub_100F63C00(v34 > 1, v35 + 1, 1, (unint64_t)v42);
      }
      uint64_t v36 = v41;
      uint64_t v37 = v42;
      *((void *)v42 + 2) = v35 + 1;
      uint64_t result = (double *)sub_1006B6230(v36, (uint64_t)v37+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v35, type metadata accessor for CRLBoardItemDeltaChange);
      if (v21) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v30 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v30 >= v44) {
      goto LABEL_29;
    }
    unint64_t v31 = *(void *)(v43 + 8 * v30);
    ++v24;
    if (!v31)
    {
      int64_t v24 = v30 + 1;
      if (v30 + 1 >= v44) {
        goto LABEL_29;
      }
      unint64_t v31 = *(void *)(v43 + 8 * v24);
      if (!v31)
      {
        int64_t v24 = v30 + 2;
        if (v30 + 2 >= v44) {
          goto LABEL_29;
        }
        unint64_t v31 = *(void *)(v43 + 8 * v24);
        if (!v31)
        {
          int64_t v24 = v30 + 3;
          if (v30 + 3 >= v44) {
            goto LABEL_29;
          }
          unint64_t v31 = *(void *)(v43 + 8 * v24);
          if (!v31) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v21 = (v31 - 1) & v31;
  }
  int64_t v32 = v30 + 4;
  if (v32 >= v44)
  {
LABEL_29:
    swift_release();
    return v42;
  }
  unint64_t v31 = *(void *)(v43 + 8 * v32);
  if (v31)
  {
    int64_t v24 = v32;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v24 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v24 >= v44) {
      goto LABEL_29;
    }
    unint64_t v31 = *(void *)(v43 + 8 * v24);
    ++v32;
    if (v31) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_1006B3814(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = a2;
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3, v4);
  uint64_t v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v46 = (char *)v35 - v9;
  unint64_t v54 = (unint64_t)_swiftEmptyArrayStorage;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLBoardItem(0);
    sub_1006B62F8((unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
    Set.Iterator.init(_cocoa:)();
    a1 = v49;
    uint64_t v38 = v50;
    uint64_t v10 = v51;
    uint64_t v11 = v52;
    unint64_t v12 = v53;
  }
  else
  {
    uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v14 = *(void *)(a1 + 56);
    uint64_t v38 = a1 + 56;
    uint64_t v15 = ~v13;
    uint64_t v16 = -v13;
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v12 = v17 & v14;
    swift_bridgeObjectRetain();
    uint64_t v10 = v15;
    uint64_t v11 = 0;
  }
  v35[4] = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v35[1] = v10;
  int64_t v36 = (unint64_t)(v10 + 64) >> 6;
  uint64_t v42 = v37 + 16;
  uint64_t v43 = v45 + 56;
  int64_t v44 = (void (**)(char *, uint64_t))(v37 + 8);
  v35[3] = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v39 = a1;
  if ((a1 & 0x8000000000000000) == 0) {
    goto LABEL_10;
  }
LABEL_30:
  uint64_t v25 = __CocoaSet.Iterator.next()();
  if (!v25) {
    goto LABEL_42;
  }
  uint64_t v47 = v25;
  type metadata accessor for CRLBoardItem(0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  int64_t v24 = v48;
  swift_unknownObjectRelease();
  uint64_t v20 = v11;
  uint64_t v18 = v12;
  if (!v24) {
    goto LABEL_42;
  }
  while (1)
  {
    unint64_t v40 = v18;
    uint64_t v41 = v20;
    (*(void (**)(void))((swift_isaMask & *v24) + 0x88))();
    if (!*(void *)(v45 + 16)) {
      goto LABEL_46;
    }
    uint64_t v26 = v45;
    sub_1006B62F8((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v27 = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v28 = -1 << *(unsigned char *)(v26 + 32);
    unint64_t v29 = v27 & ~v28;
    if ((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29))
    {
      uint64_t v30 = ~v28;
      uint64_t v31 = *(void *)(v37 + 72);
      int64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
      while (1)
      {
        v32(v7, *(void *)(v45 + 48) + v31 * v29, v3);
        sub_1006B62F8((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v33 = dispatch thunk of static Equatable.== infix(_:_:)();
        unint64_t v34 = *v44;
        (*v44)(v7, v3);
        if (v33) {
          break;
        }
        unint64_t v29 = (v29 + 1) & v30;
        if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0) {
          goto LABEL_9;
        }
      }
      v34(v46, v3);
      (*(void (**)(void))((swift_isaMask & *v24) + 0x1C0))(0);

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      a1 = v39;
      if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      unint64_t v12 = v40;
      uint64_t v11 = v41;
      if (a1 < 0) {
        goto LABEL_30;
      }
    }
    else
    {
LABEL_46:
    {
LABEL_9:
      (*v44)(v46, v3);

      unint64_t v12 = v40;
      uint64_t v11 = v41;
      a1 = v39;
      if (v39 < 0) {
        goto LABEL_30;
      }
    }
    }
LABEL_10:
    if (!v12) {
      break;
    }
    uint64_t v18 = (v12 - 1) & v12;
    unint64_t v19 = __clz(__rbit64(v12)) | (v11 << 6);
    uint64_t v20 = v11;
LABEL_28:
    int64_t v24 = *(id *)(*(void *)(a1 + 48) + 8 * v19);
    if (!v24) {
      goto LABEL_42;
    }
  }
  int64_t v21 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    return;
  }
  if (v21 >= v36) {
    goto LABEL_42;
  }
  unint64_t v22 = *(void *)(v38 + 8 * v21);
  uint64_t v20 = v11 + 1;
  if (v22) {
    goto LABEL_27;
  }
  uint64_t v20 = v11 + 2;
  if (v11 + 2 >= v36) {
    goto LABEL_42;
  }
  unint64_t v22 = *(void *)(v38 + 8 * v20);
  if (v22) {
    goto LABEL_27;
  }
  uint64_t v20 = v11 + 3;
  if (v11 + 3 >= v36) {
    goto LABEL_42;
  }
  unint64_t v22 = *(void *)(v38 + 8 * v20);
  if (v22) {
    goto LABEL_27;
  }
  uint64_t v20 = v11 + 4;
  if (v11 + 4 >= v36) {
    goto LABEL_42;
  }
  unint64_t v22 = *(void *)(v38 + 8 * v20);
  if (v22) {
    goto LABEL_27;
  }
  uint64_t v20 = v11 + 5;
  if (v11 + 5 >= v36) {
    goto LABEL_42;
  }
  unint64_t v22 = *(void *)(v38 + 8 * v20);
  if (v22)
  {
LABEL_27:
    uint64_t v18 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v20 << 6);
    goto LABEL_28;
  }
  uint64_t v23 = v11 + 6;
  while (v36 != v23)
  {
    unint64_t v22 = *(void *)(v38 + 8 * v23++);
    if (v22)
    {
      uint64_t v20 = v23 - 1;
      goto LABEL_27;
    }
  }
LABEL_42:
  sub_10052E1EC();
}

uint64_t sub_1006B3E34(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardCRDTData(0);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v72 = (uint64_t)v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v6);
  uint64_t v71 = (uint64_t)v66 - v7;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v70 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8, v9);
  uint64_t v77 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v12);
  uint64_t v83 = (uint64_t)v66 - v13;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLTransactableHashableWrapper();
    sub_1006B62F8((unint64_t *)&qword_10169A0A0, (void (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper);
    Set.Iterator.init(_cocoa:)();
    a1 = v86;
    uint64_t v68 = v87;
    uint64_t v14 = v88;
    uint64_t v15 = v89;
    unint64_t v16 = v90;
  }
  else
  {
    uint64_t v17 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v18 = *(void *)(a1 + 56);
    uint64_t v68 = a1 + 56;
    uint64_t v14 = ~v17;
    uint64_t v19 = -v17;
    if (v19 < 64) {
      uint64_t v20 = ~(-1 << v19);
    }
    else {
      uint64_t v20 = -1;
    }
    unint64_t v16 = v20 & v18;
    swift_bridgeObjectRetain();
    uint64_t v15 = 0;
  }
  v66[2] = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v66[0] = v14;
  int64_t v67 = (unint64_t)(v14 + 64) >> 6;
  Swift::String v76 = (void (**)(uint64_t, char *, uint64_t))(v70 + 32);
  uint64_t v69 = v70 + 16;
  uint64_t v73 = (void (**)(uint64_t, uint64_t))(v70 + 8);
  int64_t v21 = &_swiftEmptyDictionarySingleton;
  v66[1] = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v74 = a1;
  uint64_t v75 = v8;
  while (1)
  {
    if (a1 < 0)
    {
      uint64_t v26 = __CocoaSet.Iterator.next()();
      if (!v26) {
        goto LABEL_46;
      }
      uint64_t v84 = v26;
      type metadata accessor for CRLTransactableHashableWrapper();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v27 = v85;
      swift_unknownObjectRelease();
      uint64_t v25 = v15;
      uint64_t v23 = v16;
      if (!v27) {
        goto LABEL_46;
      }
    }
    else
    {
      if (v16)
      {
        uint64_t v23 = (v16 - 1) & v16;
        unint64_t v24 = __clz(__rbit64(v16)) | (v15 << 6);
        uint64_t v25 = v15;
      }
      else
      {
        int64_t v28 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_49;
        }
        if (v28 >= v67) {
          goto LABEL_46;
        }
        unint64_t v29 = *(void *)(v68 + 8 * v28);
        uint64_t v25 = v15 + 1;
        if (!v29)
        {
          uint64_t v25 = v15 + 2;
          if (v15 + 2 >= v67) {
            goto LABEL_46;
          }
          unint64_t v29 = *(void *)(v68 + 8 * v25);
          if (!v29)
          {
            uint64_t v25 = v15 + 3;
            if (v15 + 3 >= v67) {
              goto LABEL_46;
            }
            unint64_t v29 = *(void *)(v68 + 8 * v25);
            if (!v29)
            {
              uint64_t v25 = v15 + 4;
              if (v15 + 4 >= v67) {
                goto LABEL_46;
              }
              unint64_t v29 = *(void *)(v68 + 8 * v25);
              if (!v29)
              {
                uint64_t v30 = v15 + 5;
                while (v67 != v30)
                {
                  unint64_t v29 = *(void *)(v68 + 8 * v30++);
                  if (v29)
                  {
                    uint64_t v25 = v30 - 1;
                    goto LABEL_29;
                  }
                }
LABEL_46:
                sub_10052E1EC();
                return (uint64_t)v21;
              }
            }
          }
        }
LABEL_29:
        uint64_t v23 = (v29 - 1) & v29;
        unint64_t v24 = __clz(__rbit64(v29)) + (v25 << 6);
      }
      uint64_t v27 = *(void **)(*(void *)(a1 + 48) + 8 * v24);
      swift_retain();
      if (!v27) {
        goto LABEL_46;
      }
    }
    unint64_t v80 = v23;
    uint64_t v81 = v25;
    uint64_t v31 = v27[3];
    unint64_t v82 = v27;
    uint64_t ObjectType = swift_getObjectType();
    char v33 = *(void (**)(uint64_t, uint64_t))(v31 + 32);
    v33(ObjectType, v31);
    type metadata accessor for CRLTransactableData(0);
    uint64_t v34 = swift_allocObject();
    swift_unknownObjectRetain();
    unint64_t v35 = v77;
    v33(ObjectType, v31);
    uint64_t v36 = v34;
    (*v76)(v34 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_id, v35, v8);
    type metadata accessor for CRLBoard(0);
    uint64_t v37 = swift_dynamicCastClass();
    if (v37)
    {
      uint64_t v38 = *(void *)(v37 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
      uint64_t v39 = v38 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      uint64_t v40 = v71;
      sub_100539548(v39, v71, type metadata accessor for CRLBoardCRDTData);
      long long v78 = *(_OWORD *)(v38 + 24);
      uint64_t v41 = *(void *)(v38 + 40);
      uint64_t v42 = v72;
      sub_100539548(v40, v72, type metadata accessor for CRLBoardCRDTData);
      uint64_t v79 = v21;
      uint64_t v43 = v36;
      uint64_t v44 = *(void *)(v38 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      uint64_t v45 = *(void *)(v38 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName + 8);
      type metadata accessor for CRLBoardData(0);
      unint64_t v46 = swift_allocObject();
      *(void *)(v46 + 16) = 7;
      *(_OWORD *)(v46 + 24) = v78;
      *(void *)(v46 + 40) = v41;
      sub_1006B6230(v42, v46 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, type metadata accessor for CRLBoardCRDTData);
      uint64_t v47 = (void *)(v46 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      *uint64_t v47 = v44;
      v47[1] = v45;
      swift_retain();
      uint64_t v36 = v43;
      int64_t v21 = v79;
      swift_bridgeObjectRetain();
      sub_1005387C0(v40, type metadata accessor for CRLBoardCRDTData);
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      type metadata accessor for CRLBoardItem(0);
      uint64_t v48 = (void *)swift_dynamicCastClass();
      if (!v48) {
        goto LABEL_51;
      }
      uint64_t v49 = *(uint64_t (**)(void))((swift_isaMask & *v48) + 0x1C0);
      swift_unknownObjectRetain();
      uint64_t v50 = v49(0);
      swift_unknownObjectRelease_n();
      unint64_t v46 = v50 | 0x8000000000000000;
    }
    *(void *)(v36 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_data) = v46;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v85 = v21;
    unint64_t v53 = sub_100955FC8(v83);
    uint64_t v54 = v21[2];
    BOOL v55 = (v52 & 1) == 0;
    uint64_t v56 = v54 + v55;
    if (__OFADD__(v54, v55)) {
      break;
    }
    char v57 = v52;
    if (v21[3] >= v56)
    {
      uint64_t v8 = v75;
      if (isUniquelyReferenced_nonNull_native)
      {
        int64_t v21 = v85;
        if (v52) {
          goto LABEL_8;
        }
      }
      else
      {
        sub_10097C6F8();
        int64_t v21 = v85;
        if (v57) {
          goto LABEL_8;
        }
      }
    }
    else
    {
      sub_10095FB94(v56, isUniquelyReferenced_nonNull_native);
      unint64_t v58 = sub_100955FC8(v83);
      uint64_t v8 = v75;
      if ((v57 & 1) != (v59 & 1)) {
        goto LABEL_50;
      }
      unint64_t v53 = v58;
      int64_t v21 = v85;
      if (v57)
      {
LABEL_8:
        uint64_t v22 = v21[7];
        swift_release();
        *(void *)(v22 + 8 * v53) = v36;
        goto LABEL_9;
      }
    }
    v21[(v53 >> 6) + 8] |= 1 << v53;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v70 + 16))(v21[6] + *(void *)(v70 + 72) * v53, v83, v8);
    *(void *)(v21[7] + 8 * v53) = v36;
    uint64_t v60 = v21[2];
    BOOL v61 = __OFADD__(v60, 1);
    uint64_t v62 = v60 + 1;
    if (v61) {
      goto LABEL_48;
    }
    v21[2] = v62;
LABEL_9:
    swift_bridgeObjectRelease();
    (*v73)(v83, v8);
    swift_release();
    unint64_t v16 = v80;
    uint64_t v15 = v81;
    a1 = v74;
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_51:
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 42, (uint64_t)"Invalid/unknown transactable type", 33, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Invalid/unknown transactable type");
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardChangeSet.swift", 89, 2, 42);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v64, v65);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006B4754(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v8) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v4 + 8 * v16);
    ++v10;
    if (!v17)
    {
      int64_t v10 = v16 + 1;
      if (v16 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v4 + 8 * v10);
      if (!v17)
      {
        int64_t v10 = v16 + 2;
        if (v16 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v17 = *(void *)(v4 + 8 * v10);
        if (!v17)
        {
          int64_t v10 = v16 + 3;
          if (v16 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v17 = *(void *)(v4 + 8 * v10);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v17 - 1) & v17;
    unint64_t v12 = __clz(__rbit64(v17)) + (v10 << 6);
LABEL_5:
    uint64_t v13 = 8 * v12;
    uint64_t v14 = *(void *)(*(void *)(a1 + 48) + v13);
    uint64_t v15 = *(void *)(*(void *)(a1 + 56) + v13);
    swift_retain();
    a2(v14, v15);
    uint64_t result = swift_release();
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v8) {
    return swift_release();
  }
  unint64_t v17 = *(void *)(v4 + 8 * v18);
  if (v17)
  {
    int64_t v10 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v4 + 8 * v10);
    ++v18;
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1006B48E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  int64_t v8 = (char *)v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  unint64_t v11 = (char *)v62 - v10;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v15 = __chkstk_darwin(v12, v14);
  uint64_t v72 = (char *)v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v87 = (char *)v62 - v19;
  uint64_t v21 = __chkstk_darwin(v18, v20);
  uint64_t v23 = (char *)v62 - v22;
  uint64_t v25 = __chkstk_darwin(v21, v24);
  uint64_t v71 = (char *)v62 - v26;
  __chkstk_darwin(v25, v27);
  unint64_t v29 = (char *)v62 - v28;
  uint64_t v93 = _swiftEmptyArrayStorage;
  uint64_t v30 = *(void *)(a1 + 16);
  uint64_t v68 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedAsOrphanItemIDs;
  uint64_t v70 = a2;
  v62[1] = a2 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas;
  uint64_t result = swift_beginAccess();
  uint64_t v69 = v30;
  if (v30)
  {
    unint64_t v32 = 0;
    uint64_t v91 = v13 + 16;
    uint64_t v82 = v13 + 56;
    uint64_t v80 = v13 + 48;
    uint64_t v84 = (void (**)(char *, char *, uint64_t))(v13 + 32);
    uint64_t v88 = (void (**)(char *, uint64_t))(v13 + 8);
    uint64_t v74 = v8;
    uint64_t v86 = v29;
    uint64_t v67 = a1;
    uint64_t v66 = v11;
    uint64_t v65 = v13;
    while (1)
    {
      if (v32 >= *(void *)(a1 + 16))
      {
        __break(1u);
        return result;
      }
      unint64_t v75 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v89 = *(void *)(v13 + 72);
      unint64_t v90 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
      v90(v11, a1 + v75 + v89 * v32, v12);
      uint64_t v81 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
      v81(v11, 0, 1, v12);
      uint64_t v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      if (v79(v11, 1, v12) == 1) {
        goto LABEL_36;
      }
      unint64_t v73 = v32;
      uint64_t v83 = *v84;
      v83(v29, v11, v12);
      uint64_t v33 = *(void *)(v70 + v68);
      if (!*(void *)(v33 + 16)) {
        goto LABEL_11;
      }
      uint64_t v34 = sub_1006B62F8((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
      swift_bridgeObjectRetain();
      uint64_t v78 = v34;
      uint64_t v35 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v36 = -1 << *(unsigned char *)(v33 + 32);
      unint64_t v37 = v35 & ~v36;
      if (((*(void *)(v33 + 56 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37) & 1) == 0) {
        break;
      }
      uint64_t v85 = ~v36;
      while (1)
      {
        v90(v23, *(void *)(v33 + 48) + v37 * v89, v12);
        sub_1006B62F8((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v38 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v39 = *v88;
        (*v88)(v23, v12);
        if (v38) {
          break;
        }
        unint64_t v37 = (v37 + 1) & v85;
        if (((*(void *)(v33 + 56 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37) & 1) == 0) {
          goto LABEL_10;
        }
      }
      swift_bridgeObjectRelease();
      v90(v71, (unint64_t)v86, v12);
      uint64_t v63 = swift_bridgeObjectRetain();
      uint64_t v44 = v64;
      uint64_t v45 = sub_1006A8BF4(v63);
      uint64_t v64 = v44;
      uint64_t v46 = *(void *)(v45 + 16);
      uint64_t v47 = Set.init(minimumCapacity:)();
      uint64_t v77 = v46;
      v62[2] = v45;
      if (v46)
      {
        uint64_t v48 = 0;
        unint64_t v76 = v45 + v75;
        uint64_t v49 = v87;
        uint64_t v50 = v81;
        while (1)
        {
          uint64_t v85 = v48;
          v90(v8, v76 + v48 * v89, v12);
          v50(v8, 0, 1, v12);
          if (v79(v8, 1, v12) == 1) {
            break;
          }
          v83(v49, v8, v12);
          swift_bridgeObjectRetain();
          uint64_t v55 = dispatch thunk of Hashable._rawHashValue(seed:)();
          uint64_t v56 = -1 << *(unsigned char *)(v47 + 32);
          unint64_t v57 = v55 & ~v56;
          if ((*(void *)(v47 + 56 + ((v57 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v57))
          {
            uint64_t v58 = ~v56;
            while (1)
            {
              v90(v23, *(void *)(v47 + 48) + v57 * v89, v12);
              char v59 = dispatch thunk of static Equatable.== infix(_:_:)();
              v39(v23, v12);
              if (v59) {
                break;
              }
              unint64_t v57 = (v57 + 1) & v58;
              if (((*(void *)(v47 + 56 + ((v57 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v57) & 1) == 0) {
                goto LABEL_21;
              }
            }
            swift_bridgeObjectRelease();
            char v52 = v74;
            uint64_t v49 = v87;
          }
          else
          {
LABEL_21:
            swift_bridgeObjectRelease();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v49 = v87;
            v90(v23, (unint64_t)v87, v12);
            uint64_t v92 = v47;
            sub_100CC5688((uint64_t)v23, v57, isUniquelyReferenced_nonNull_native);
            uint64_t v47 = v92;
            swift_bridgeObjectRelease();
            char v52 = v74;
          }
          uint64_t v50 = v81;
          uint64_t v53 = v85 + 1;
          v39(v49, v12);
          uint64_t v48 = v53;
          BOOL v54 = v53 == v77;
          int64_t v8 = v52;
          if (v54) {
            goto LABEL_31;
          }
        }
      }
      else
      {
        uint64_t v50 = v81;
LABEL_31:
        v50(v8, 1, 1, v12);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v60 = (uint64_t)v71;
      char v61 = sub_1006E3E24((uint64_t)v71, v47);
      swift_bridgeObjectRelease();
      v39((char *)v60, v12);
      if ((v61 & 1) == 0)
      {
        a1 = v67;
        unint64_t v11 = v66;
        uint64_t v13 = v65;
        unint64_t v29 = v86;
        goto LABEL_12;
      }
      unint64_t v29 = v86;
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v39)(v86, v12);
      a1 = v67;
      unint64_t v11 = v66;
      uint64_t v13 = v65;
LABEL_17:
      unint64_t v32 = v73 + 1;
      if (v73 + 1 == v69)
      {
        v81(v11, 1, 1, v12);
        goto LABEL_36;
      }
    }
LABEL_10:
    swift_bridgeObjectRelease();
    a1 = v67;
    unint64_t v11 = v66;
    uint64_t v13 = v65;
    unint64_t v29 = v86;
LABEL_11:
    uint64_t v40 = (uint64_t)v71;
    v90(v71, (unint64_t)v29, v12);
    (*v88)((char *)v40, v12);
LABEL_12:
    v83(v72, v29, v12);
    uint64_t v41 = v93;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1006BB544(0, *((void *)v41 + 2) + 1, 1);
      uint64_t v41 = v93;
    }
    unint64_t v43 = *((void *)v41 + 2);
    unint64_t v42 = *((void *)v41 + 3);
    if (v43 >= v42 >> 1)
    {
      sub_1006BB544(v42 > 1, v43 + 1, 1);
      uint64_t v41 = v93;
    }
    *((void *)v41 + 2) = v43 + 1;
    uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v83)((char *)v41 + v75 + v43 * v89, v72, v12);
    uint64_t v93 = v41;
    unint64_t v29 = v86;
    goto LABEL_17;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
LABEL_36:
  swift_bridgeObjectRelease();
  sub_100522F00((uint64_t)v11, (uint64_t *)&unk_101674520);
  return (uint64_t)v93;
}

double *sub_1006B52A0(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v71 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9, v10);
  unint64_t v73 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v47 - v14;
  uint64_t v78 = _swiftEmptyArrayStorage;
  unint64_t v47 = a1;
  if (a1 >> 62) {
LABEL_35:
  }
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
  else {
    uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v17 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedAsOrphanItemIDs;
  uint64_t v53 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas);
  swift_beginAccess();
  if (v16)
  {
    unint64_t v18 = 0;
    unint64_t v59 = v47 & 0xC000000000000001;
    uint64_t v58 = v47 & 0xFFFFFFFFFFFFFF8;
    unint64_t v57 = v47 + 32;
    unint64_t v75 = (void (**)(char *, uint64_t))(v50 + 8);
    uint64_t v76 = v50 + 16;
    uint64_t v70 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56);
    uint64_t v64 = (void (**)(char *, char *, uint64_t))(v50 + 32);
    uint64_t v65 = (unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
    uint64_t v49 = a2;
    uint64_t v48 = v16;
    uint64_t v52 = v17;
    while (1)
    {
      if (v59)
      {
        uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v20 = __OFADD__(v18, 1);
        unint64_t v21 = v18 + 1;
        if (v20)
        {
LABEL_31:
          __break(1u);
          return v78;
        }
      }
      else
      {
        if (v18 >= *(void *)(v58 + 16))
        {
          __break(1u);
          goto LABEL_35;
        }
        uint64_t v19 = *(void *)(v57 + 8 * v18);
        swift_retain();
        BOOL v20 = __OFADD__(v18, 1);
        unint64_t v21 = v18 + 1;
        if (v20) {
          goto LABEL_31;
        }
      }
      unint64_t v62 = v21;
      uint64_t v22 = *(void *)(a2 + v17);
      uint64_t v23 = *(void (**)(uint64_t))(*(void *)v19 + 256);
      uint64_t v24 = *(void *)v19 + 256;
      uint64_t v25 = swift_bridgeObjectRetain();
      uint64_t v63 = v19;
      char v61 = v23;
      uint64_t v60 = v24;
      v23(v25);
      char v26 = sub_1006E3E24((uint64_t)v15, v22);
      swift_bridgeObjectRelease();
      uint64_t v74 = *v75;
      v74(v15, v9);
      if (v26)
      {
        uint64_t v27 = *v53;
        uint64_t v28 = swift_bridgeObjectRetain();
        uint64_t v29 = sub_1006A8BF4(v28);
        uint64_t v30 = *(void *)(v29 + 16);
        uint64_t v68 = sub_1006B62F8((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v31 = Set.init(minimumCapacity:)();
        uint64_t v69 = v30;
        if (v30)
        {
          unint64_t v51 = (unint64_t)v70 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
          uint64_t v55 = v27;
          uint64_t v56 = v3;
          uint64_t v32 = 0;
          unint64_t v33 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
          uint64_t v54 = v29;
          unint64_t v67 = v29 + v33;
          uint64_t v34 = *(void *)(v50 + 72);
          uint64_t v35 = *(void (**)(char *, unint64_t, uint64_t))(v50 + 16);
          uint64_t v36 = v71;
          unint64_t v37 = v73;
          v35(v71, v29 + v33, v9);
          while (1)
          {
            uint64_t v66 = *v70;
            v66(v36, 0, 1, v9);
            if ((*v65)(v36, 1, v9) == 1)
            {
              uint64_t v3 = v56;
              a2 = v49;
              uint64_t v16 = v48;
              goto LABEL_27;
            }
            uint64_t v72 = v32;
            (*v64)(v37, v36, v9);
            swift_bridgeObjectRetain();
            uint64_t v39 = dispatch thunk of Hashable._rawHashValue(seed:)();
            uint64_t v40 = -1 << *(unsigned char *)(v31 + 32);
            unint64_t v41 = v39 & ~v40;
            if ((*(void *)(v31 + 56 + ((v41 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v41))
            {
              uint64_t v42 = ~v40;
              while (1)
              {
                v35(v15, *(void *)(v31 + 48) + v41 * v34, v9);
                sub_1006B62F8((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
                char v43 = dispatch thunk of static Equatable.== infix(_:_:)();
                v74(v15, v9);
                if (v43) {
                  break;
                }
                unint64_t v41 = (v41 + 1) & v42;
                if (((*(void *)(v31 + 56 + ((v41 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v41) & 1) == 0) {
                  goto LABEL_14;
                }
              }
              swift_bridgeObjectRelease();
              unint64_t v37 = v73;
            }
            else
            {
LABEL_14:
              swift_bridgeObjectRelease();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              unint64_t v37 = v73;
              v35(v15, (unint64_t)v73, v9);
              uint64_t v77 = v31;
              sub_100CC5688((uint64_t)v15, v41, isUniquelyReferenced_nonNull_native);
              uint64_t v31 = v77;
              swift_bridgeObjectRelease();
            }
            uint64_t v32 = v72 + 1;
            v74(v37, v9);
            uint64_t v36 = v71;
            if (v32 == v69) {
              break;
            }
            v35(v71, v67 + v34 * v32, v9);
          }
          uint64_t v3 = v56;
          a2 = v49;
          uint64_t v16 = v48;
          v66(v71, 1, 1, v9);
        }
        else
        {
          (*v70)(v71, 1, 1, v9);
        }
LABEL_27:
        swift_bridgeObjectRelease();
        uint64_t v44 = swift_bridgeObjectRelease();
        v61(v44);
        char v45 = sub_1006E3E24((uint64_t)v15, v31);
        swift_bridgeObjectRelease();
        v74(v15, v9);
        if (v45)
        {
          swift_release();
          uint64_t v17 = v52;
          goto LABEL_7;
        }
        uint64_t v17 = v52;
      }
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
LABEL_7:
      unint64_t v18 = v62;
      if (v62 == v16) {
        return v78;
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

double *sub_1006B59F0(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v38 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  unint64_t v62 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v37 - v11;
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
LABEL_33:
  }
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  else {
    uint64_t v17 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v44 = a2 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas;
  swift_beginAccess();
  if (v17)
  {
    a2 = 0;
    unint64_t v43 = a1 & 0xC000000000000001;
    uint64_t v42 = a1 & 0xFFFFFFFFFFFFFF8;
    unint64_t v40 = a1 + 32;
    unint64_t v51 = (unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
    uint64_t v49 = (void (**)(char *, char *, uint64_t))(v38 + 32);
    uint64_t v60 = (void (**)(char *, uint64_t))(v38 + 8);
    uint64_t v61 = v38 + 16;
    uint64_t v54 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
    unint64_t v39 = (v38 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    unint64_t v37 = a1;
    uint64_t v50 = v16;
    uint64_t v41 = v17;
    while (1)
    {
      if (v43)
      {
        uint64_t v18 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v19 = __OFADD__(a2, 1);
        unint64_t v20 = a2 + 1;
        if (v19)
        {
LABEL_29:
          __break(1u);
          return v64;
        }
      }
      else
      {
        if (a2 >= *(void *)(v42 + 16))
        {
          __break(1u);
          goto LABEL_33;
        }
        uint64_t v18 = swift_retain();
        BOOL v19 = __OFADD__(a2, 1);
        unint64_t v20 = a2 + 1;
        if (v19) {
          goto LABEL_29;
        }
      }
      uint64_t v47 = v18;
      unint64_t v48 = v20;
      uint64_t v46 = swift_bridgeObjectRetain();
      uint64_t v21 = sub_1006A8BF4(v46);
      uint64_t v22 = *(void *)(v21 + 16);
      uint64_t v56 = sub_1006B62F8((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v23 = Set.init(minimumCapacity:)();
      uint64_t v57 = v22;
      if (v22)
      {
        uint64_t v45 = v3;
        uint64_t v24 = 0;
        unint64_t v55 = v21 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
        uint64_t v59 = *(void *)(v38 + 72);
        uint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
        uint64_t v53 = v21;
        v25(v16, v55, v6);
        while (1)
        {
          uint64_t v52 = *v54;
          v52(v16, 0, 1, v6);
          if ((*v51)(v16, 1, v6) == 1)
          {
            uint64_t v3 = v45;
            a1 = v37;
            goto LABEL_25;
          }
          uint64_t v58 = v24;
          (*v49)(v62, v16, v6);
          swift_bridgeObjectRetain();
          uint64_t v28 = dispatch thunk of Hashable._rawHashValue(seed:)();
          uint64_t v29 = -1 << *(unsigned char *)(v23 + 32);
          unint64_t v30 = v28 & ~v29;
          if ((*(void *)(v23 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30))
          {
            uint64_t v31 = ~v29;
            while (1)
            {
              v25(v12, *(void *)(v23 + 48) + v30 * v59, v6);
              sub_1006B62F8((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
              char v32 = dispatch thunk of static Equatable.== infix(_:_:)();
              unint64_t v33 = *v60;
              (*v60)(v12, v6);
              if (v32) {
                break;
              }
              unint64_t v30 = (v30 + 1) & v31;
              if (((*(void *)(v23 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
                goto LABEL_12;
              }
            }
            swift_bridgeObjectRelease();
            v33(v62, v6);
          }
          else
          {
LABEL_12:
            swift_bridgeObjectRelease();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v27 = v62;
            v25(v12, (unint64_t)v62, v6);
            uint64_t v63 = v23;
            sub_100CC5688((uint64_t)v12, v30, isUniquelyReferenced_nonNull_native);
            uint64_t v23 = v63;
            swift_bridgeObjectRelease();
            (*v60)(v27, v6);
          }
          uint64_t v24 = v58 + 1;
          uint64_t v16 = v50;
          if (v58 + 1 == v57) {
            break;
          }
          v25(v50, v55 + v59 * v24, v6);
        }
        uint64_t v3 = v45;
        a1 = v37;
        v52(v50, 1, 1, v6);
      }
      else
      {
        (*v54)(v16, 1, 1, v6);
      }
LABEL_25:
      swift_bridgeObjectRelease();
      uint64_t v34 = swift_bridgeObjectRelease();
      (*(void (**)(uint64_t))(*(void *)v47 + 256))(v34);
      char v35 = sub_1006E3E24((uint64_t)v12, v23);
      swift_bridgeObjectRelease();
      (*v60)(v12, v6);
      if (v35)
      {
        swift_release();
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      a2 = v48;
      if (v48 == v41) {
        return v64;
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

double *sub_1006B6088(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if ((a4 & 1) == 0)
  {
LABEL_2:
    return sub_1006B9FB8(a1, a2, a3, a4);
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain_n();
  uint64_t v9 = (double *)swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    uint64_t v9 = _swiftEmptyArrayStorage;
  }
  uint64_t v10 = *((void *)v9 + 2);
  swift_release();
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v10 != (a4 >> 1) - a3)
  {
LABEL_13:
    swift_unknownObjectRelease();
    goto LABEL_2;
  }
  uint64_t result = (double *)swift_dynamicCastClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t type metadata accessor for CRLBoardDataStoreChangeSet(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10167ABE8);
}

uint64_t sub_1006B6198(uint64_t a1, uint64_t a2)
{
  return sub_1006B1678(a1, a2, *(uint64_t **)(v2 + 16));
}

uint64_t sub_1006B61A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10169A270);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for CRLBoardPeerChangeSet(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10167AB40);
}

uint64_t sub_1006B6228@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1006A9270(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1006B6230(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1006B6298()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006B62D8()
{
  return sub_1006B0884(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1006B62E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1006B62F0()
{
  return swift_release();
}

uint64_t sub_1006B62F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006B6340(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v40 = a2;
  uint64_t v41 = a1;
  uint64_t v56 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v56 - 8);
  uint64_t v8 = __chkstk_darwin(v56, v7);
  uint64_t v53 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v57 = (char *)&v40 - v11;
  uint64_t v47 = a3;
  uint64_t v12 = *(void *)(a3 + 56);
  uint64_t v44 = a3 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v12;
  uint64_t v46 = (uint64_t *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedCreatedObjectIds);
  uint64_t result = swift_beginAccess();
  uint64_t v42 = v6;
  uint64_t v43 = 0;
  int64_t v17 = 0;
  int64_t v45 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v52 = v6 + 16;
  unint64_t v55 = (void (**)(char *, uint64_t))(v6 + 8);
  while (1)
  {
    if (v15)
    {
      uint64_t v50 = (v15 - 1) & v15;
      int64_t v51 = v17;
      unint64_t v18 = __clz(__rbit64(v15)) | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v19 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v19 >= v45) {
      goto LABEL_31;
    }
    unint64_t v20 = *(void *)(v44 + 8 * v19);
    int64_t v21 = v17 + 1;
    if (!v20)
    {
      int64_t v21 = v17 + 2;
      if (v17 + 2 >= v45) {
        goto LABEL_31;
      }
      unint64_t v20 = *(void *)(v44 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v17 + 3;
        if (v17 + 3 >= v45) {
          goto LABEL_31;
        }
        unint64_t v20 = *(void *)(v44 + 8 * v21);
        if (!v20) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v50 = (v20 - 1) & v20;
    int64_t v51 = v21;
    unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
LABEL_22:
    uint64_t v23 = *(void *)(v47 + 48);
    unint64_t v48 = v18;
    uint64_t v24 = *(void *)(v23 + 8 * v18);
    uint64_t v25 = *v46;
    uint64_t v26 = *(void *)(v24 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v26 + 32);
    uint64_t v49 = v24;
    swift_retain();
    swift_bridgeObjectRetain();
    v28(ObjectType, v26);
    if (*(void *)(v25 + 16)
      && (sub_1006B62F8((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID), v29 = dispatch thunk of Hashable._rawHashValue(seed:)(), uint64_t v30 = -1 << *(unsigned char *)(v25 + 32), v31 = v29 & ~v30, ((*(void *)(v25 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) != 0))
    {
      uint64_t v54 = ~v30;
      uint64_t v32 = *(void *)(v42 + 72);
      unint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v42 + 16);
      while (1)
      {
        uint64_t v34 = v53;
        uint64_t v35 = v56;
        v33(v53, *(void *)(v25 + 48) + v32 * v31, v56);
        sub_1006B62F8((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v36 = dispatch thunk of static Equatable.== infix(_:_:)();
        unint64_t v37 = *v55;
        (*v55)(v34, v35);
        if (v36) {
          break;
        }
        unint64_t v31 = (v31 + 1) & v54;
        if (((*(void *)(v25 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
          goto LABEL_5;
        }
      }
      swift_bridgeObjectRelease();
      v37(v57, v56);
      uint64_t result = swift_release();
      *(unint64_t *)((char *)v41 + ((v48 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v48;
      BOOL v38 = __OFADD__(v43++, 1);
      unint64_t v15 = v50;
      int64_t v17 = v51;
      if (v38)
      {
        __break(1u);
LABEL_31:
        uint64_t v39 = v47;
        swift_retain();
        return sub_10052B490(v41, v40, v43, v39);
      }
    }
    else
    {
LABEL_5:
      swift_bridgeObjectRelease();
      (*v55)(v57, v56);
      uint64_t result = swift_release();
      unint64_t v15 = v50;
      int64_t v17 = v51;
    }
  }
  uint64_t v22 = v17 + 4;
  if (v17 + 4 >= v45) {
    goto LABEL_31;
  }
  unint64_t v20 = *(void *)(v44 + 8 * v22);
  if (v20)
  {
    int64_t v21 = v17 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v21 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v21 >= v45) {
      goto LABEL_31;
    }
    unint64_t v20 = *(void *)(v44 + 8 * v21);
    ++v22;
    if (v20) {
      goto LABEL_21;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1006B67E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  char v6 = *(unsigned char *)(a1 + 32);
  unsigned int v7 = v6 & 0x3F;
  unint64_t v8 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v9 = 8 * v8;
  uint64_t isStackAllocationSafe = swift_retain_n();
  if (v7 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, v11);
    bzero((char *)&v15 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    swift_retain();
    uint64_t v12 = sub_1006B6340((unint64_t *)((char *)&v15 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a1, a2);
    swift_release();
    swift_release();
    if (v3) {
      swift_willThrow();
    }
    swift_release_n();
  }
  else
  {
    uint64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, v9);
    swift_retain();
    uint64_t v12 = sub_1006B6340((unint64_t *)v13, v8, a1, a2);
    swift_release();
    swift_release();
    swift_slowDealloc();
    swift_release_n();
  }
  return v12;
}

Swift::Int sub_1006B69AC(uint64_t a1, uint64_t a2)
{
  uint64_t v55 = type metadata accessor for UUID();
  uint64_t v45 = *(void *)(v55 - 8);
  uint64_t v7 = __chkstk_darwin(v55, v6);
  uint64_t v53 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v9);
  uint64_t v56 = (char *)v44 - v10;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = &_swiftEmptySetSingleton;
    uint64_t v59 = &_swiftEmptySetSingleton;
    swift_retain();
    uint64_t v11 = __CocoaSet.makeIterator()();
    uint64_t v49 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedCreatedObjectIds);
    swift_beginAccess();
    uint64_t v50 = v11;
    uint64_t v12 = __CocoaSet.Iterator.next()();
    if (v12)
    {
      uint64_t v13 = v12;
      v44[0] = a2;
      v44[1] = v3;
      uint64_t v48 = type metadata accessor for CRLTransactableHashableWrapper();
      uint64_t v51 = v45 + 16;
      uint64_t v54 = (void (**)(char *, uint64_t))(v45 + 8);
      uint64_t v47 = (char *)&type metadata for Swift.AnyObject + 8;
      do
      {
        uint64_t v57 = v13;
        swift_dynamicCast();
        uint64_t v14 = *v49;
        uint64_t v15 = *(void *)(v58 + 24);
        uint64_t ObjectType = swift_getObjectType();
        int64_t v17 = *(void (**)(uint64_t, uint64_t))(v15 + 32);
        swift_bridgeObjectRetain();
        v17(ObjectType, v15);
        if (*(void *)(v14 + 16)
          && (v46 = sub_1006B62F8((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID), uint64_t v18 = dispatch thunk of Hashable._rawHashValue(seed:)(), v19 = -1 << *(unsigned char *)(v14 + 32), v20 = v18 & ~v19, ((*(void *)(v14 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) != 0))
        {
          uint64_t v52 = ~v19;
          uint64_t v21 = *(void *)(v45 + 72);
          uint64_t v22 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
          while (1)
          {
            uint64_t v23 = v53;
            uint64_t v24 = v55;
            v22(v53, *(void *)(v14 + 48) + v21 * v20, v55);
            sub_1006B62F8((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
            char v25 = dispatch thunk of static Equatable.== infix(_:_:)();
            uint64_t v26 = *v54;
            (*v54)(v23, v24);
            if (v25) {
              break;
            }
            unint64_t v20 = (v20 + 1) & v52;
            if (((*(void *)(v14 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
              goto LABEL_4;
            }
          }
          swift_bridgeObjectRelease();
          v26(v56, v55);
          uint64_t v27 = v58;
          uint64_t v28 = v59;
          if (v59[3] <= v59[2])
          {
            sub_100CBD9B4();
            uint64_t v28 = v59;
          }
          Hasher.init(_seed:)();
          uint64_t v29 = *(void *)(v27 + 24);
          uint64_t v30 = swift_getObjectType();
          unint64_t v31 = v53;
          (*(void (**)(uint64_t, uint64_t))(v29 + 32))(v30, v29);
          uint64_t v32 = v55;
          dispatch thunk of Hashable.hash(into:)();
          v26(v31, v32);
          Swift::Int result = Hasher._finalize()();
          uint64_t v34 = v28 + 7;
          uint64_t v35 = -1 << *((unsigned char *)v28 + 32);
          unint64_t v36 = result & ~v35;
          unint64_t v37 = v36 >> 6;
          if (((-1 << v36) & ~v28[(v36 >> 6) + 7]) != 0)
          {
            unint64_t v38 = __clz(__rbit64((-1 << v36) & ~v28[(v36 >> 6) + 7])) | v36 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            char v39 = 0;
            unint64_t v40 = (unint64_t)(63 - v35) >> 6;
            do
            {
              if (++v37 == v40 && (v39 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              BOOL v41 = v37 == v40;
              if (v37 == v40) {
                unint64_t v37 = 0;
              }
              v39 |= v41;
              uint64_t v42 = v34[v37];
            }
            while (v42 == -1);
            unint64_t v38 = __clz(__rbit64(~v42)) + (v37 << 6);
          }
          *(void *)((char *)v34 + ((v38 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v38;
          *(void *)(v28[6] + 8 * v38) = v27;
          ++v28[2];
        }
        else
        {
LABEL_4:
          swift_bridgeObjectRelease();
          (*v54)(v56, v55);
          swift_release();
        }
        uint64_t v13 = __CocoaSet.Iterator.next()();
      }
      while (v13);
      uint64_t v2 = v59;
    }
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v43 = sub_1006B67E0(a1, a2);
    if (!v3) {
      return v43;
    }
  }
  return (Swift::Int)v2;
}

uint64_t sub_1006B6F14(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v46 = a2;
  uint64_t v47 = a1;
  uint64_t v53 = sub_1005057FC(&qword_10169A270);
  __chkstk_darwin(v53, v6);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v11 = __chkstk_darwin(v9, v10);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v11, v14);
  uint64_t v18 = (char *)&v45 - v17;
  int64_t v19 = 0;
  uint64_t v54 = (void *)a3;
  uint64_t v20 = *(void *)(a3 + 64);
  uint64_t v48 = 0;
  uint64_t v49 = a3 + 64;
  uint64_t v21 = 1 << *(unsigned char *)(a3 + 32);
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v23 = v22 & v20;
  int64_t v50 = (unint64_t)(v21 + 63) >> 6;
  uint64_t v51 = v18;
  uint64_t v59 = a4 + 56;
  uint64_t v52 = v16;
  uint64_t v60 = (uint64_t (**)(char *, uint64_t))(v16 + 8);
  uint64_t v61 = v16 + 16;
  unint64_t v62 = v8;
  while (1)
  {
    if (v23)
    {
      uint64_t v57 = (v23 - 1) & v23;
      int64_t v58 = v19;
      unint64_t v24 = __clz(__rbit64(v23)) | (v19 << 6);
      goto LABEL_23;
    }
    int64_t v25 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v25 >= v50) {
      return sub_1009462F8(v47, v46, v48, v54);
    }
    unint64_t v26 = *(void *)(v49 + 8 * v25);
    int64_t v27 = v19 + 1;
    if (!v26)
    {
      int64_t v27 = v19 + 2;
      if (v19 + 2 >= v50) {
        return sub_1009462F8(v47, v46, v48, v54);
      }
      unint64_t v26 = *(void *)(v49 + 8 * v27);
      if (!v26)
      {
        int64_t v27 = v19 + 3;
        if (v19 + 3 >= v50) {
          return sub_1009462F8(v47, v46, v48, v54);
        }
        unint64_t v26 = *(void *)(v49 + 8 * v27);
        if (!v26) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v57 = (v26 - 1) & v26;
    int64_t v58 = v27;
    unint64_t v24 = __clz(__rbit64(v26)) + (v27 << 6);
LABEL_23:
    uint64_t v29 = v54;
    uint64_t v30 = *(void *)(v52 + 72);
    unint64_t v31 = *(void (**)(char *, unint64_t, uint64_t))(v52 + 16);
    v31(v18, v54[6] + v30 * v24, v9);
    uint64_t v32 = v29[7];
    unint64_t v55 = v24;
    uint64_t v33 = *(void *)(v32 + 8 * v24);
    uint64_t v34 = (uint64_t)v62;
    v31(v62, (unint64_t)v18, v9);
    *(void *)(v34 + *(int *)(v53 + 48)) = v33;
    uint64_t v35 = *(void *)(a4 + 16);
    uint64_t v56 = v33;
    if (!v35)
    {
      swift_retain_n();
      goto LABEL_6;
    }
    sub_1006B62F8((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
    swift_retain_n();
    uint64_t v36 = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v37 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v38 = v36 & ~v37;
    if ((*(void *)(v59 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38))
    {
      uint64_t v39 = ~v37;
      while (1)
      {
        uint64_t v40 = a4;
        v31(v13, *(void *)(a4 + 48) + v38 * v30, v9);
        sub_1006B62F8((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v41 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v42 = *v60;
        (*v60)(v13, v9);
        if (v41) {
          break;
        }
        unint64_t v38 = (v38 + 1) & v39;
        a4 = v40;
        if (((*(void *)(v59 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38) & 1) == 0) {
          goto LABEL_6;
        }
      }
      sub_100522F00((uint64_t)v62, &qword_10169A270);
      swift_release();
      uint64_t v43 = v51;
      uint64_t result = v42(v51, v9);
      *(unint64_t *)((char *)v47 + ((v55 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v55;
      BOOL v44 = __OFADD__(v48++, 1);
      a4 = v40;
      uint64_t v18 = v43;
      unint64_t v23 = v57;
      int64_t v19 = v58;
      if (v44)
      {
        __break(1u);
        return sub_1009462F8(v47, v46, v48, v54);
      }
    }
    else
    {
LABEL_6:
      sub_100522F00((uint64_t)v62, &qword_10169A270);
      swift_release();
      uint64_t v18 = v51;
      uint64_t result = (*v60)(v51, v9);
      unint64_t v23 = v57;
      int64_t v19 = v58;
    }
  }
  uint64_t v28 = v19 + 4;
  if (v19 + 4 >= v50) {
    return sub_1009462F8(v47, v46, v48, v54);
  }
  unint64_t v26 = *(void *)(v49 + 8 * v28);
  if (v26)
  {
    int64_t v27 = v19 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v27 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v27 >= v50) {
      return sub_1009462F8(v47, v46, v48, v54);
    }
    unint64_t v26 = *(void *)(v49 + 8 * v27);
    ++v28;
    if (v26) {
      goto LABEL_22;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1006B741C(uint64_t a1, uint64_t a2)
{
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, v10);
    bzero((char *)&v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1006B6F14((unint64_t *)((char *)&v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1006B6F14((unint64_t *)v12, v7, a1, a2);
    swift_bridgeObjectRelease();
    swift_slowDealloc();
    swift_bridgeObjectRelease_n();
  }
  return v11;
}

uint64_t *sub_1006B75D8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    *((void *)v10 + 2) = *((void *)v11 + 2);
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (uint64_t *)((char *)a2 + v9);
    unint64_t v14 = *(uint64_t *)((char *)a2 + v9 + 8);
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    }
    else
    {
      uint64_t v16 = *v13;
      sub_100510D4C(*v13, v14);
      *(void *)uint64_t v12 = v16;
      *((void *)v12 + 1) = v14;
    }
    uint64_t v17 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v17) = *(uint64_t *)((char *)a2 + v17);
    uint64_t v18 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)a1 + v18) = *(uint64_t *)((char *)a2 + v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1006B7738(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  unint64_t v6 = v5[1];
  if (v6 >> 60 != 15) {
    sub_100510084(*v5, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1006B77F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = (uint64_t *)(a2 + v8);
  unint64_t v13 = *(void *)(a2 + v8 + 8);
  if (v13 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  }
  else
  {
    uint64_t v14 = *v12;
    sub_100510D4C(*v12, v13);
    *(void *)uint64_t v11 = v14;
    *(void *)(v11 + 8) = v13;
  }
  uint64_t v15 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1006B7900(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  uint64_t v10 = a3[6];
  uint64_t v11 = (uint64_t *)(a1 + v10);
  uint64_t v12 = (uint64_t *)(a2 + v10);
  unint64_t v13 = *(void *)(a2 + v10 + 8);
  if (*(void *)(a1 + v10 + 8) >> 60 != 15)
  {
    if (v13 >> 60 != 15)
    {
      uint64_t v15 = *v12;
      sub_100510D4C(v15, v13);
      uint64_t v16 = *v11;
      unint64_t v17 = v11[1];
      *uint64_t v11 = v15;
      v11[1] = v13;
      sub_100510084(v16, v17);
      goto LABEL_8;
    }
    sub_10060C134((uint64_t)v11);
    goto LABEL_6;
  }
  if (v13 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    goto LABEL_8;
  }
  uint64_t v14 = *v12;
  sub_100510D4C(v14, v13);
  *uint64_t v11 = v14;
  v11[1] = v13;
LABEL_8:
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1006B7A8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v11 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  return a1;
}

uint64_t sub_1006B7B48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  uint64_t v11 = (uint64_t *)(a1 + v8);
  uint64_t v12 = (uint64_t *)(a2 + v8);
  unint64_t v13 = *(void *)(a1 + v8 + 8);
  if (v13 >> 60 != 15)
  {
    unint64_t v14 = v12[1];
    if (v14 >> 60 != 15)
    {
      uint64_t v15 = *v11;
      *uint64_t v11 = *v12;
      v11[1] = v14;
      sub_100510084(v15, v13);
      goto LABEL_6;
    }
    sub_10060C134((uint64_t)v11);
  }
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
LABEL_6:
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1006B7C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006B7C8C);
}

uint64_t sub_1006B7C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1006B7D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006B7D60);
}

uint64_t sub_1006B7D60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1006B7E1C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1006B7ED0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for UUID();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    unint64_t v13 = &v8[v12];
    unint64_t v14 = &v9[v12];
    uint64_t v15 = *((void *)v14 + 1);
    *(void *)unint64_t v13 = *(void *)v14;
    *((void *)v13 + 1) = v15;
    uint64_t v16 = a3[6];
    unint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    swift_bridgeObjectRetain();
    v11(v17, v18, v10);
    uint64_t v19 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)v4 + v19) = *(uint64_t *)((char *)a2 + v19);
    uint64_t v20 = a3[10];
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)v4 + v20) = *(uint64_t *)((char *)a2 + v20);
    uint64_t v21 = a3[12];
    *(uint64_t *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)v4 + v21) = *(uint64_t *)((char *)a2 + v21);
    uint64_t v22 = a3[14];
    *(uint64_t *)((char *)v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    *(uint64_t *)((char *)v4 + v22) = *(uint64_t *)((char *)a2 + v22);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1006B8088(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  v6(a1 + *(int *)(a2 + 24), v5);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

unsigned char *sub_1006B819C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v12 = &v7[v11];
  unint64_t v13 = &v8[v11];
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  unint64_t v17 = &a2[v15];
  swift_bridgeObjectRetain();
  v10(v16, v17, v9);
  uint64_t v18 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  uint64_t v19 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[v19] = *(void *)&a2[v19];
  uint64_t v20 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  *(void *)&a1[v20] = *(void *)&a2[v20];
  uint64_t v21 = a3[14];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  *(void *)&a1[v21] = *(void *)&a2[v21];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *sub_1006B8304(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v12 = &v7[v11];
  unint64_t v13 = &v8[v11];
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_retain();
  swift_release();
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *sub_1006B84CC(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = type metadata accessor for CRLBoardIdentifierStorage(0);
  *(_OWORD *)&v7[*(int *)(v11 + 20)] = *(_OWORD *)&v8[*(int *)(v11 + 20)];
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v12 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  uint64_t v13 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  uint64_t v14 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  uint64_t v15 = a3[14];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  *(void *)&a1[v15] = *(void *)&a2[v15];
  return a1;
}

unsigned char *sub_1006B85E4(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v12 = &v7[v11];
  uint64_t v13 = (uint64_t *)&v8[v11];
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_release();
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1006B875C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006B8770);
}

uint64_t sub_1006B8770(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = type metadata accessor for UUID();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[8]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_1006B8880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006B8894);
}

uint64_t sub_1006B8894(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for CRLBoardIdentifier(0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t result = type metadata accessor for UUID();
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[8]) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[6];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

uint64_t sub_1006B89A0()
{
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for UUID();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1006B8A9C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1006B8B74(a1, a2, a3, &qword_101671E38, (void (*)(uint64_t))type metadata accessor for CRLTombstoneBoardItemRealTimeChangeRecord);
}

uint64_t sub_1006B8AE4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1006B8CF4(a1, a2, a3, &qword_101677DF0, (void (*)(uint64_t))type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord);
}

uint64_t sub_1006B8B2C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1006B8B74(a1, a2, a3, &qword_10167AC48, (void (*)(uint64_t))type metadata accessor for CRLBoardRealTimeChangeRecord);
}

uint64_t sub_1006B8B74(void *a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  uint64_t v14 = *v5;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_10050F848(a1, v9);
  uint64_t v11 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8);
  uint64_t v12 = sub_1006B8D98(a4, a5);
  return v11(&v14, a2, v12, v9, v10);
}

uint64_t sub_1006B8C1C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1006B8B74(a1, a2, a3, &qword_10167AC50, (void (*)(uint64_t))type metadata accessor for CRLSharePlayRealTimeChangeRecord);
}

uint64_t sub_1006B8C64(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1006B8B74(a1, a2, a3, &qword_10167AC58, (void (*)(uint64_t))type metadata accessor for CRLBoardItemRealTimeChangeRecord);
}

uint64_t sub_1006B8CAC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1006B8CF4(a1, a2, a3, (unint64_t *)&unk_10167AC60, (void (*)(uint64_t))type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy);
}

uint64_t sub_1006B8CF4(void *a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  uint64_t v9 = a1[3];
  uint64_t v8 = a1[4];
  sub_10050F848(a1, v9);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8);
  uint64_t v11 = sub_1006B8D98(a4, a5);
  return v10(v5, a2, v11, v9, v8);
}

uint64_t sub_1006B8D98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006B8DE0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    type metadata accessor for __ContiguousArrayStorageBase();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    uint64_t v3 = (double *)swift_dynamicCastClass();
    if (!v3)
    {
      swift_bridgeObjectRelease();
      uint64_t v3 = _swiftEmptyArrayStorage;
    }
    uint64_t v4 = *((void *)v3 + 2);
    swift_release();
    if (v4 == v2 - 1)
    {
      uint64_t v5 = (double *)swift_dynamicCastClass();
      if (!v5)
      {
        swift_bridgeObjectRelease();
        uint64_t v5 = _swiftEmptyArrayStorage;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v5 = sub_1006BA13C(a1, a1 + 32, 1, (2 * v2) | 1);
    }
    swift_bridgeObjectRelease();
    long long v6 = *(_OWORD *)(a1 + 48);
    v15[0] = *(_OWORD *)(a1 + 32);
    v15[1] = v6;
    uint64_t v7 = sub_1006B8DE0(v5);
    uint64_t v8 = swift_release();
    __chkstk_darwin(v8, v9);
    v13[2] = v15;
    uint64_t v10 = sub_100CFB4D8((void (*)(double *__return_ptr, uint64_t *))sub_1006BFAB4, (uint64_t)v13, v7);
    uint64_t v14 = v7;
    sub_1006E2D18((uint64_t)v10);
    return v14;
  }
  else
  {
    sub_1005057FC(&qword_10167AFB8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_10117E810;
    *(void *)(v11 + 32) = a1;
    swift_bridgeObjectRetain();
  }
  return v11;
}

double CRLImageFaceAnalyzerResult.interestingFacesRect.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC8Freeform26CRLImageFaceAnalyzerResult_interestingFacesRect);
}

uint64_t CRLImageFaceAnalyzerResult.__allocating_init(faceRectValues:)(unint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return CRLImageFaceAnalyzerResult.init(faceRectValues:)(a1);
}

uint64_t CRLImageFaceAnalyzerResult.init(faceRectValues:)(unint64_t a1)
{
  uint64_t v2 = v1;
  if (!a1) {
    goto LABEL_23;
  }
  id v3 = (double *)(a1 & 0xFFFFFFFFFFFFFF8);
  if (a1 >> 62)
  {
    id v32 = v1;
    swift_bridgeObjectRetain();
    uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v33)
    {
      unint64_t v34 = swift_bridgeObjectRetain();
      id v3 = sub_1006BA884(v34, (void (*)(double *, uint64_t, unint64_t))sub_1006BE1C0);
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    goto LABEL_22;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v5 = v1;
  if (!v4)
  {
LABEL_22:
    swift_bridgeObjectRelease();

LABEL_23:
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  swift_bridgeObjectRetain();
LABEL_5:
  unint64_t v42 = (unint64_t)v3;
  sub_1006BBC24((uint64_t *)&v42);
  swift_bridgeObjectRelease();
  unint64_t v6 = v42;
  if ((v42 & 0x8000000000000000) == 0 && (v42 & 0x4000000000000000) == 0)
  {
    uint64_t v7 = *(void *)(v42 + 16);
    if (v7) {
      goto LABEL_8;
    }
LABEL_25:
    swift_release();
    uint64_t v9 = _swiftEmptyArrayStorage;
    double v23 = _swiftEmptyArrayStorage[2];
    if (v23 != 0.0)
    {
LABEL_17:
      unint64_t v24 = v9 + 7;
      double v25 = 0.0;
      double v26 = 0.0;
      double v27 = 0.0;
      double v28 = 0.0;
      do
      {
        double v27 = sub_100064F28(v27, v28, v25, v26, *(v24 - 3), *(v24 - 2), *(v24 - 1), *v24);
        double v28 = v29;
        double v25 = v30;
        double v26 = v31;
        v24 += 4;
        --*(void *)&v23;
      }
      while (v23 != 0.0);
      goto LABEL_27;
    }
LABEL_26:
    double v25 = 0.0;
    double v26 = 0.0;
    double v27 = 0.0;
    double v28 = 0.0;
LABEL_27:
    uint64_t v36 = sub_1006BF744((uint64_t)v9);

    swift_bridgeObjectRelease();
    uint64_t v37 = (objc_class *)type metadata accessor for CRLImageFaceAnalyzerResult();
    unint64_t v38 = (char *)objc_allocWithZone(v37);
    uint64_t v39 = (double *)&v38[OBJC_IVAR____TtC8Freeform26CRLImageFaceAnalyzerResult_interestingFacesRect];
    *uint64_t v39 = v27;
    v39[1] = v28;
    v39[2] = v25;
    void v39[3] = v26;
    *(void *)&v38[OBJC_IVAR____TtC8Freeform26CRLImageFaceAnalyzerResult_faceRectCombinations] = v36;
    v41.receiver = v38;
    v41.super_class = v37;
    id v35 = [super init];
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return (uint64_t)v35;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
  if (!v7) {
    goto LABEL_25;
  }
LABEL_8:
  unint64_t v42 = (unint64_t)_swiftEmptyArrayStorage;
  sub_1006BB904(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = 0;
    uint64_t v9 = (double *)v42;
    do
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v10 = *(id *)(v6 + 8 * v8 + 32);
      }
      uint64_t v11 = v10;
      [v10 CGRectValue];
      uint64_t v13 = v12;
      uint64_t v15 = v14;
      uint64_t v17 = v16;
      uint64_t v19 = v18;

      unint64_t v42 = (unint64_t)v9;
      unint64_t v21 = *((void *)v9 + 2);
      unint64_t v20 = *((void *)v9 + 3);
      if (v21 >= v20 >> 1)
      {
        sub_1006BB904(v20 > 1, v21 + 1, 1);
        uint64_t v9 = (double *)v42;
      }
      ++v8;
      *((void *)v9 + 2) = v21 + 1;
      uint64_t v22 = &v9[4 * v21];
      *((void *)v22 + 4) = v13;
      *((void *)v22 + 5) = v15;
      *((void *)v22 + 6) = v17;
      *((void *)v22 + 7) = v19;
    }
    while (v7 != v8);
    swift_release();
    double v23 = v9[2];
    if (v23 != 0.0) {
      goto LABEL_17;
    }
    goto LABEL_26;
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void CRLImageFaceAnalyzerResult.maskCenterForFaces(imageSize:maskSize:defaultCenter:)(float64_t a1, float64_t a2, double a3, double a4)
{
  uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform26CRLImageFaceAnalyzerResult_faceRectCombinations);
  int64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_1006BB904(0, v6, 0);
    unint64_t v9 = 0;
    double v10 = _swiftEmptyArrayStorage[2];
    v11.f64[0] = a1;
    v11.f64[1] = a2;
    uint64_t v12 = 4 * *(void *)&v10;
    do
    {
      float64x2_t v13 = *(float64x2_t *)(v5 + v9 + 32);
      float64x2_t v14 = *(float64x2_t *)(v5 + v9 + 48);
      double v15 = _swiftEmptyArrayStorage[3];
      *(void *)&double v16 = *(void *)&v10 + 1;
      if (*(void *)&v10 >= *(void *)&v15 >> 1)
      {
        float64x2_t v57 = *(float64x2_t *)(v5 + v9 + 32);
        float64x2_t v60 = v11;
        float64x2_t v54 = *(float64x2_t *)(v5 + v9 + 48);
        sub_1006BB904(*(void *)&v15 > 1uLL, *(void *)&v10 + 1, 1);
        float64x2_t v14 = v54;
        float64x2_t v13 = v57;
        float64x2_t v11 = v60;
      }
      _swiftEmptyArrayStorage[2] = v16;
      uint64_t v17 = (float64x2_t *)&_swiftEmptyArrayStorage[v12 + v9 / 8];
      void v17[2] = vmulq_f64(v13, v11);
      v17[3] = vmulq_f64(v14, v11);
      v9 += 32;
      double v10 = v16;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    double v18 = _swiftEmptyArrayStorage[2];
    if (v18 == 0.0)
    {
      double v25 = &_swiftEmptyArrayStorage[2];
      double v26 = _swiftEmptyArrayStorage[2];
      if (v26 == 0.0)
      {
LABEL_36:
        swift_release();
        swift_release();
        __break(1u);
        return;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = &_swiftEmptyArrayStorage[6];
      do
      {
        if (*v19 <= a3 && v19[1] <= a4)
        {
          long long v58 = *((_OWORD *)v19 - 1);
          long long v61 = *(_OWORD *)v19;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1006BB904(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
          }
          double v21 = _swiftEmptyArrayStorage[2];
          double v20 = _swiftEmptyArrayStorage[3];
          long long v22 = v61;
          if (*(void *)&v21 >= *(void *)&v20 >> 1)
          {
            sub_1006BB904(*(void *)&v20 > 1uLL, *(void *)&v21 + 1, 1);
            long long v22 = v61;
          }
          *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v21 + 1;
          double v23 = &_swiftEmptyArrayStorage[4 * *(void *)&v21];
          *((_OWORD *)v23 + 2) = v58;
          *((_OWORD *)v23 + 3) = v22;
        }
        v19 += 4;
        --*(void *)&v18;
      }
      while (v18 != 0.0);
      swift_release();
      double v25 = &_swiftEmptyArrayStorage[2];
      double v26 = _swiftEmptyArrayStorage[2];
      if (v26 == 0.0)
      {
        swift_release();
        if (*(void *)&_swiftEmptyArrayStorage[2])
        {
          CGFloat v27 = _swiftEmptyArrayStorage[4];
          CGFloat v28 = _swiftEmptyArrayStorage[5];
          CGFloat v29 = _swiftEmptyArrayStorage[6];
          CGFloat v30 = _swiftEmptyArrayStorage[7];
LABEL_31:
          swift_release();
          double v39 = sub_100064070();
          CGFloat v41 = v40;
          CGFloat v62 = v42;
          CGFloat v59 = v43;
          double v44 = sub_100065738(v27, v28, v29, v30);
          double v46 = sub_10006402C(v44, v45, a3);
          double v50 = sub_100065E4C(v46, v47, v48, v49, v39, v41, v62, v59);
          sub_100065738(v50, v51, v52, v53);
          return;
        }
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
    }
    swift_release();
    unint64_t v31 = 0;
    unint64_t v32 = 0;
    uint64_t v33 = &_swiftEmptyArrayStorage[7];
    double v34 = 1.79769313e308;
    do
    {
      double v35 = a4 - *v33;
      double v36 = a3 - *(v33 - 1) + v35;
      if (v36 < v34) {
        unint64_t v31 = v32;
      }
      unint64_t v37 = v32 + 1;
      if (v36 < v34) {
        double v34 = a3 - *(v33 - 1) + v35;
      }
      v33 += 4;
      ++v32;
    }
    while (*(void *)&v26 != v37);
    if ((v31 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v31 < *(void *)v25)
    {
      unint64_t v38 = &_swiftEmptyArrayStorage[4 * v31 + 4];
      CGFloat v27 = *v38;
      CGFloat v28 = v38[1];
      CGFloat v29 = v38[2];
      CGFloat v30 = v38[3];
      goto LABEL_31;
    }
    __break(1u);
    goto LABEL_35;
  }
}

void CRLImageFaceAnalyzerResult.init()()
{
}

id CRLImageFaceAnalyzerResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLImageFaceAnalyzerResult();
  [super dealloc];
}

double *sub_1006B97C8(unint64_t a1)
{
  return sub_1006BA884(a1, (void (*)(double *, uint64_t, unint64_t))&specialized _ArrayBuffer._copyContents(initializing:));
}

double *sub_1006B97E0(uint64_t a1)
{
  return sub_1006BA5CC(a1, sub_1006EEFDC);
}

double *sub_1006B97F8(uint64_t a1)
{
  return sub_1006BB3F8(a1, (uint64_t (*)(uint64_t *, double *, uint64_t, uint64_t))sub_1006EF3D0);
}

double *sub_1006B9810(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t v8 = v5;
    if (v5 <= 0)
    {
      unint64_t v9 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        sub_10050BF48(0, (unint64_t *)&unk_101672590);
        swift_arrayInitWithCopy();
        return v9;
      }
    }
    else
    {
      sub_1005057FC((uint64_t *)&unk_101676C10);
      unint64_t v9 = (double *)swift_allocObject();
      int64_t v10 = j__malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      *((void *)v9 + 2) = v5;
      *((void *)v9 + 3) = (2 * (v11 >> 3)) | 1;
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = (double *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

double *sub_1006B99A4(unint64_t a1)
{
  return sub_1006BA884(a1, (void (*)(double *, uint64_t, unint64_t))sub_1006BD778);
}

double *sub_1006B99BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1005057FC(&qword_10167ACE8);
  id v3 = (void *)swift_allocObject();
  size_t v4 = j__malloc_size(v3);
  _OWORD v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  uint64_t v5 = sub_1006EF438((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_10052E1EC();
  if (v5 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (double *)v3;
}

double *sub_1006B9AB0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1005057FC(&qword_10167AF30);
  id v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  _OWORD v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  int64_t v6 = sub_1006EF644(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_10052E1EC();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (double *)v3;
}

double *sub_1006B9B98(unint64_t a1)
{
  return sub_1006BA884(a1, (void (*)(double *, uint64_t, unint64_t))sub_1006BDA4C);
}

double *sub_1006B9BB0(char *a1, uint64_t a2)
{
  if (!a2) {
    return _swiftEmptyArrayStorage;
  }
  if (a2 > 0)
  {
    sub_1005057FC(&qword_10167AD10);
    uint64_t v4 = 4 * a2;
    uint64_t v5 = (char *)swift_allocObject();
    int64_t v6 = j__malloc_size(v5);
    uint64_t v7 = v6 - 32;
    if (v6 < 32) {
      uint64_t v7 = v6 - 29;
    }
    *((void *)v5 + 2) = a2;
    *((void *)v5 + 3) = 2 * (v7 >> 2);
    uint64_t v8 = v5 + 32;
    if (&v5[v4 + 32] <= a1 || v8 >= &a1[v4])
    {
      memcpy(v8, a1, 4 * a2);
      return (double *)v5;
    }
  }
  uint64_t result = (double *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

double *sub_1006B9CE8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1005057FC((uint64_t *)&unk_101676C10);
  id v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  _OWORD v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  uint64_t v6 = sub_1006EF7D8((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_10052E1EC();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (double *)v3;
}

double *sub_1006B9DD4(uint64_t a1)
{
  return sub_1006BB3F8(a1, (uint64_t (*)(uint64_t *, double *, uint64_t, uint64_t))sub_1006EF9D4);
}

double *sub_1006B9DEC(unint64_t a1)
{
  return sub_1006BA744(a1, (void (*)(void))type metadata accessor for CRLBoardItem, &qword_10167ADC8, &qword_10167ADC0, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1006BC8A8);
}

double *sub_1006B9E28(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1006BACA4(a1, a2, a3, a4, &qword_10167AF40, (uint64_t (*)(void))&type metadata accessor for IntentFile);
}

double *sub_1006B9E48(unint64_t a1)
{
  return sub_1006BA744(a1, (void (*)(void))type metadata accessor for CRLBoardLibraryViewModelItemNode, &qword_10167ACD0, &qword_10167ACC8, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1006BC8A8);
}

double *sub_1006B9E84(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1005057FC(&qword_10167AD08);
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t result = (double *)j__malloc_size(v6);
  if (v4)
  {
    if ((double *)((char *)result - v5) != (double *)0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1006EFA08(&v10, (char *)v6 + v5, v1, a1);
      sub_10052E1EC();
      if (v9 == v1) {
        return (double *)v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

double *sub_1006B9FB8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t v8 = v5;
    if (v5 <= 0)
    {
      uint64_t v9 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        type metadata accessor for CRLBoardItemData();
        swift_arrayInitWithCopy();
        return v9;
      }
    }
    else
    {
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v9 = (double *)swift_allocObject();
      int64_t v10 = j__malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      *((void *)v9 + 2) = v5;
      *((void *)v9 + 3) = (2 * (v11 >> 3)) | 1;
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = (double *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

double *sub_1006BA13C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t v8 = 4 * v5;
    if (v5 <= 0)
    {
      uint64_t v9 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = (char *)(v9 + 4);
        float64x2_t v13 = (double *)(a2 + 32 * a3);
        if (v13 < &v9[v8 + 4] && v12 < (char *)&v13[v8]) {
          goto LABEL_19;
        }
        memcpy(v12, v13, 32 * v5);
        return v9;
      }
    }
    else
    {
      sub_1005057FC(&qword_10167AFB0);
      uint64_t v9 = (double *)swift_allocObject();
      int64_t v10 = j__malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 1;
      }
      *((void *)v9 + 2) = v5;
      *((void *)v9 + 3) = 2 * (v11 >> 5);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = (double *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

double *sub_1006BA2A8(uint64_t a1)
{
  return sub_1006BB0F8(a1, &qword_10167AE38, (uint64_t (*)(void))_s17CategoryViewModelVMa, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_1006F000C);
}

double *sub_1006BA2DC(unint64_t a1)
{
  return sub_1006BA744(a1, (void (*)(void))type metadata accessor for CRLTextSelectionRect, (unint64_t *)&unk_10167AD40, &qword_10167AD38, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1006BC8A8);
}

double *sub_1006BA318(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1006BACA4(a1, a2, a3, a4, &qword_10167AF38, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
}

double *sub_1006BA338(uint64_t a1)
{
  return sub_1006BA9F4(a1, &qword_10167AF38, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_1006F004C);
}

double *sub_1006BA36C(uint64_t a1)
{
  return sub_1006BAFD4(a1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1006F0370);
}

double *sub_1006BA384(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1005057FC((uint64_t *)&unk_101672610);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  _OWORD v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1006F0374((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_10052E1EC();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (double *)v3;
}

double *sub_1006BA46C(uint64_t a1)
{
  return sub_1006BB3F8(a1, (uint64_t (*)(uint64_t *, double *, uint64_t, uint64_t))sub_1006EF404);
}

double *sub_1006BA484(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1005057FC(&qword_10167AE90);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 + 31;
  }
  _OWORD v3[2] = v1;
  v3[3] = 2 * (v5 >> 6);
  uint64_t v6 = sub_1006F0574(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_10052E1EC();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (double *)v3;
}

double *sub_1006BA56C(uint64_t a1)
{
  return sub_1006BB3F8(a1, (uint64_t (*)(uint64_t *, double *, uint64_t, uint64_t))sub_1006F080C);
}

double *sub_1006BA584(uint64_t a1)
{
  return sub_1006BB3F8(a1, (uint64_t (*)(uint64_t *, double *, uint64_t, uint64_t))sub_1006F0B28);
}

double *sub_1006BA59C(uint64_t a1)
{
  return sub_1006BB3F8(a1, (uint64_t (*)(uint64_t *, double *, uint64_t, uint64_t))sub_1006F0E40);
}

double *sub_1006BA5B4(uint64_t a1)
{
  return sub_1006BA5CC(a1, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_1006F0E5C);
}

double *sub_1006BA5CC(uint64_t a1, uint64_t (*a2)(uint64_t *, char *, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_1005057FC(&qword_10167AD08);
  uint64_t v5 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v6 = *(void *)(v5 + 72);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t result = (double *)j__malloc_size(v8);
  if (v6)
  {
    if ((double *)((char *)result - v7) != (double *)0x8000000000000000 || v6 != -1)
    {
      v8[2] = v2;
      v8[3] = 2 * ((uint64_t)((uint64_t)result - v7) / v6);
      swift_bridgeObjectRetain();
      uint64_t v11 = a2(&v12, (char *)v8 + v7, v2, a1);
      sub_10052E1EC();
      if (v11 == v2) {
        return (double *)v8;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

double *sub_1006BA708(unint64_t a1)
{
  return sub_1006BA744(a1, (void (*)(void))type metadata accessor for CRLCommand, &qword_10167AEA0, &qword_10167AE98, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1006BC9E4);
}

double *sub_1006BA744(unint64_t a1, void (*a2)(void), unint64_t *a3, uint64_t *a4, uint64_t (*a5)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v10 <= 0)
    {
      uint64_t v11 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v11 = (double *)swift_allocObject();
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      *((void *)v11 + 2) = v10;
      *((void *)v11 + 3) = (2 * (v13 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1006BCEF4((unint64_t)(v11 + 4), v10, a1, a2, a3, a4, a5);
    a5 = v14;
    swift_bridgeObjectRelease();
    if (a5 == (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))v10) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v10) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v11;
}

double *sub_1006BA86C(unint64_t a1)
{
  return sub_1006BA884(a1, (void (*)(double *, uint64_t, unint64_t))sub_1006BEEE0);
}

double *sub_1006BA884(unint64_t a1, void (*a2)(double *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v4 <= 0)
    {
      uint64_t v5 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v5 = (double *)swift_allocObject();
      int64_t v6 = j__malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      *((void *)v5 + 2) = v4;
      *((void *)v5 + 3) = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(double *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v4) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v5;
}

double *sub_1006BA98C(uint64_t a1)
{
  return sub_1006BB0F8(a1, &qword_101675F70, (uint64_t (*)(void))&type metadata accessor for UTType, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_1006F1250);
}

double *sub_1006BA9C0(uint64_t a1)
{
  return sub_1006BA9F4(a1, &qword_10167ADD0, type metadata accessor for CRLBoardIdentifier, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_1006F1598);
}

double *sub_1006BA9F4(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t *, char *, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  sub_1005057FC(a2);
  uint64_t v8 = *(void *)(a3(0) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t result = (double *)j__malloc_size(v11);
  if (v9)
  {
    if ((double *)((char *)result - v10) != (double *)0x8000000000000000 || v9 != -1)
    {
      _OWORD v11[2] = v4;
      v11[3] = 2 * ((uint64_t)((uint64_t)result - v10) / v9);
      uint64_t v14 = a4(&v15, (char *)v11 + v10, v4, a1);
      swift_bridgeObjectRetain();
      sub_10052E1EC();
      if (v14 == v4) {
        return (double *)v11;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

double *sub_1006BAB54(char *a1, uint64_t a2)
{
  if (!a2) {
    return _swiftEmptyArrayStorage;
  }
  if (a2 > 0)
  {
    sub_1005057FC((uint64_t *)&unk_10167AD18);
    uint64_t v4 = 2 * a2;
    uint64_t v5 = (char *)swift_allocObject();
    int64_t v6 = j__malloc_size(v5);
    int64_t v7 = v6 - 32;
    if (v6 < 32) {
      int64_t v7 = v6 - 31;
    }
    *((void *)v5 + 2) = a2;
    *((void *)v5 + 3) = v7 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = v5 + 32;
    if (&v5[v4 + 32] <= a1 || v8 >= &a1[v4])
    {
      memcpy(v8, a1, 2 * a2);
      return (double *)v5;
    }
  }
  uint64_t result = (double *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

double *sub_1006BAC84(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1006BACA4(a1, a2, a3, a4, &qword_10167AE40, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
}

double *sub_1006BACA4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void))
{
  unint64_t v6 = a4 >> 1;
  uint64_t v7 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_21;
  }
  if (!v7) {
    return _swiftEmptyArrayStorage;
  }
  if (v7 <= 0)
  {
    uint64_t v14 = _swiftEmptyArrayStorage;
    if (v6 != a3)
    {
LABEL_10:
      if (v7 < 0) {
        goto LABEL_24;
      }
      uint64_t v17 = *(void *)(a6(0) - 8);
      double v18 = (char *)v14 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
      uint64_t v19 = *(void *)(v17 + 72);
      unint64_t v20 = a2 + v19 * a3;
      uint64_t v21 = v19 * v7;
      long long v22 = &v18[v21];
      unint64_t v23 = v20 + v21;
      if (v20 < (unint64_t)v22 && (unint64_t)v18 < v23) {
        goto LABEL_24;
      }
      swift_arrayInitWithCopy();
      return v14;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_1005057FC(a5);
  uint64_t v11 = *(void *)(a6(0) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (double *)swift_allocObject();
  size_t v15 = j__malloc_size(v14);
  if (v12)
  {
    if (v15 - v13 == 0x8000000000000000 && v12 == -1) {
      goto LABEL_23;
    }
    *((void *)v14 + 2) = v7;
    *((void *)v14 + 3) = 2 * ((uint64_t)(v15 - v13) / v12);
    if (v6 != a3) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = (double *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

double *sub_1006BAEEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1005057FC(&qword_10167ADD8);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 1;
  }
  _OWORD v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  unint64_t v6 = sub_1006F18BC(&v8, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_10052E1EC();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (double *)v3;
}

double *sub_1006BAFD4(uint64_t a1, uint64_t (*a2)(uint64_t *, void *, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_1005057FC((uint64_t *)&unk_101672610);
  uint64_t v5 = (void *)swift_allocObject();
  int64_t v6 = j__malloc_size(v5);
  uint64_t v7 = v6 - 32;
  if (v6 < 32) {
    uint64_t v7 = v6 - 17;
  }
  v5[2] = v2;
  v5[3] = 2 * (v7 >> 4);
  uint64_t v8 = a2(&v10, v5 + 4, v2, a1);
  swift_bridgeObjectRetain();
  sub_10052E1EC();
  if (v8 != v2)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (double *)v5;
}

double *sub_1006BB0C4(uint64_t a1)
{
  return sub_1006BB0F8(a1, &qword_10167ADD0, type metadata accessor for CRLBoardIdentifier, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_1006F1CCC);
}

double *sub_1006BB0F8(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t *, char *, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  sub_1005057FC(a2);
  uint64_t v8 = *(void *)(a3(0) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t result = (double *)j__malloc_size(v11);
  if (v9)
  {
    if ((double *)((char *)result - v10) != (double *)0x8000000000000000 || v9 != -1)
    {
      _OWORD v11[2] = v4;
      v11[3] = 2 * ((uint64_t)((uint64_t)result - v10) / v9);
      uint64_t v14 = a4(&v15, (char *)v11 + v10, v4, a1);
      swift_bridgeObjectRetain();
      sub_10052E1EC();
      if (v14 == v4) {
        return (double *)v11;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

double *sub_1006BB258(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t v8 = v5;
    if (v5 <= 0)
    {
      uint64_t v9 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        sub_1005057FC(&qword_10167AF48);
        swift_arrayInitWithCopy();
        return v9;
      }
    }
    else
    {
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v9 = (double *)swift_allocObject();
      int64_t v10 = j__malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      *((void *)v9 + 2) = v5;
      *((void *)v9 + 3) = (2 * (v11 >> 3)) | 1;
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = (double *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

double *sub_1006BB3E0(uint64_t a1)
{
  return sub_1006BB3F8(a1, (uint64_t (*)(uint64_t *, double *, uint64_t, uint64_t))sub_1006F2014);
}

double *sub_1006BB3F8(uint64_t a1, uint64_t (*a2)(uint64_t *, double *, uint64_t, uint64_t))
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = __CocoaSet.count.getter();
    if (v4) {
      goto LABEL_3;
    }
    return _swiftEmptyArrayStorage;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
LABEL_3:
  if (v4 <= 0)
  {
    uint64_t v5 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v5 = (double *)swift_allocObject();
    int64_t v6 = j__malloc_size(v5);
    uint64_t v7 = v6 - 32;
    if (v6 < 32) {
      uint64_t v7 = v6 - 25;
    }
    *((void *)v5 + 2) = v4;
    *((void *)v5 + 3) = (2 * (v7 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = a2(&v10, v5 + 4, v4, a1);
  uint64_t result = (double *)sub_10052E1EC();
  if (v8 == v4) {
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1006BB504(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F65700(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1006BB524(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F6588C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1006BB544(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F6586C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BB564(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F659EC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1006BB584(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F65B4C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1006BB5A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F65B58(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1006BB5C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F65B64(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1006BB5E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F65B70(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1006BB604(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F65B7C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1006BB624(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F65CE4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1006BB644(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F65E34(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1006BB664(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F65F94(a1, a2, a3, *v3);
  *uint64_t v3 = (double *)result;
  return result;
}

uint64_t sub_1006BB684(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F65FA8(a1, a2, a3, *v3);
  *uint64_t v3 = (double *)result;
  return result;
}

uint64_t sub_1006BB6A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F65FBC(a1, a2, a3, *v3);
  *uint64_t v3 = (double *)result;
  return result;
}

uint64_t sub_1006BB6C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F66148(a1, a2, a3, *v3);
  *uint64_t v3 = (double *)result;
  return result;
}

uint64_t sub_1006BB6E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F662F0(a1, a2, a3, *v3);
  *uint64_t v3 = (double *)result;
  return result;
}

uint64_t sub_1006BB704(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F66304(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BB724(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F66324(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BB744(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F664A4(a1, a2, a3, *v3);
  *uint64_t v3 = (double *)result;
  return result;
}

uint64_t sub_1006BB764(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F664B8(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BB784(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F66628(a1, a2, a3, *v3);
  *uint64_t v3 = (double *)result;
  return result;
}

uint64_t sub_1006BB7A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F6663C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BB7C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F6665C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BB7E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F6667C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BB804(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F6669C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BB824(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F666BC(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BB844(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F666DC(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BB864(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F666FC(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BB884(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F66708(a1, a2, a3, *v3);
  *uint64_t v3 = (double *)result;
  return result;
}

uint64_t sub_1006BB8A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F6671C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BB8C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F6673C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BB8E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F6675C(a1, a2, a3, *v3);
  *uint64_t v3 = (double *)result;
  return result;
}

uint64_t sub_1006BB904(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F66918(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BB924(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F66A78(a1, a2, a3, *v3);
  *uint64_t v3 = (double *)result;
  return result;
}

uint64_t sub_1006BB944(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F66C38(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BB964(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F66DA0(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BB984(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F66F28(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BB9A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F66F3C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BB9C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F670C0(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BB9E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F670E0(a1, a2, a3, *v3);
  *uint64_t v3 = (double *)result;
  return result;
}

uint64_t sub_1006BBA04(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F6726C(a1, a2, a3, *v3);
  *uint64_t v3 = (double *)result;
  return result;
}

uint64_t sub_1006BBA24(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F67280(a1, a2, a3, *v3);
  *uint64_t v3 = (double *)result;
  return result;
}

uint64_t sub_1006BBA44(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F67424(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BBA64(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F66A8C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BBA84(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F676F4(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BBAA4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F67714(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BBAC4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F67734(a1, a2, a3, *v3);
  *uint64_t v3 = (double *)result;
  return result;
}

uint64_t sub_1006BBAE4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F67748(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BBB04(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F67768(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BBB24(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F67A2C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BBB44(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F67A40(a1, a2, a3, *v3);
  *uint64_t v3 = (double *)result;
  return result;
}

uint64_t sub_1006BBB64(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F67BE4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1006BBB84(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F67D3C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BBBA4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F67D5C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BBBC4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F67FB0(a1, a2, a3, *v3);
  *uint64_t v3 = (double *)result;
  return result;
}

uint64_t sub_1006BBBE4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F68154(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BBC04(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100F683BC(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1006BBC24(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_100F6D440(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1006BBCA0(v6);
  return specialized ContiguousArray._endMutation()();
}

void sub_1006BBCA0(uint64_t *a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = a1[1];
  Swift::Int v5 = _minimumMergeRunLength(_:)(v4);
  if (v5 >= v4)
  {
    if (v4 < 0) {
      goto LABEL_132;
    }
    if (v4) {
      sub_1006BC444(0, v4, 1, a1);
    }
    return;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_140;
  }
  Swift::Int v7 = v5;
  uint64_t v124 = a1;
  if (v4 < 2)
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
    uint64_t v133 = (uint64_t)_swiftEmptyArrayStorage;
    Swift::Int v132 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v13 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_98:
      uint64_t v116 = v10;
      if (v13 >= 2)
      {
        uint64_t v117 = *v124;
        do
        {
          unint64_t v118 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_127;
          }
          if (!v117) {
            goto LABEL_139;
          }
          uint64_t v119 = v116;
          double v120 = v116[2 * v118 + 4];
          double v121 = v116[2 * v13 + 3];
          sub_1006BC554((void **)(v117 + 8 * *(void *)&v120), (id *)(v117 + 8 * *(void *)&v116[2 * v13 + 2]), v117 + 8 * *(void *)&v121, v132);
          if (v2) {
            break;
          }
          if (*(uint64_t *)&v121 < *(uint64_t *)&v120) {
            goto LABEL_128;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v119 = sub_100F69F28((uint64_t)v119);
          }
          if (v118 >= *((void *)v119 + 2)) {
            goto LABEL_129;
          }
          unint64_t v122 = &v119[2 * v118 + 4];
          *unint64_t v122 = v120;
          v122[1] = v121;
          unint64_t v123 = *((void *)v119 + 2);
          if (v13 > v123) {
            goto LABEL_130;
          }
          memmove(&v119[2 * v13 + 2], &v119[2 * v13 + 4], 16 * (v123 - v13));
          uint64_t v116 = v119;
          *((void *)v119 + 2) = v123 - 1;
          unint64_t v13 = v123 - 1;
        }
        while (v123 > 2);
      }
LABEL_95:
      swift_bridgeObjectRelease();
      *(void *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v8 = v6 >> 1;
    sub_10050BF48(0, (unint64_t *)&qword_10167AF10);
    uint64_t v9 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    Swift::Int v132 = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v133 = v9;
  }
  Swift::Int v128 = v7;
  Swift::Int v11 = 0;
  uint64_t v12 = *a1;
  uint64_t v125 = *a1 - 8;
  uint64_t v126 = *a1 + 16;
  uint64_t v10 = _swiftEmptyArrayStorage;
  Swift::Int v129 = v4;
  while (1)
  {
    Swift::Int v14 = v11++;
    Swift::Int v130 = v14;
    if (v11 < v4)
    {
      uint64_t v15 = *(void **)(v12 + 8 * v14);
      id v16 = *(id *)(v12 + 8 * v11);
      id v17 = v15;
      [v16 CGRectValue];
      double v19 = v18;
      double v21 = v20;
      [v17 CGRectValue];
      double v23 = v22;
      double v25 = v24;

      double v26 = v19 * v21;
      double v27 = v23 * v25;
      Swift::Int v11 = v14 + 2;
      if (v14 + 2 < v4)
      {
        CGFloat v28 = (id *)(v126 + 8 * v14);
        while (1)
        {
          CGFloat v29 = *(v28 - 1);
          id v30 = *v28;
          id v31 = v29;
          [v30 CGRectValue];
          double v33 = v32;
          double v35 = v34;
          [v31 CGRectValue];
          double v37 = v36;
          double v39 = v38;

          if (v27 < v26 == v37 * v39 >= v33 * v35) {
            break;
          }
          ++v11;
          ++v28;
          if (v4 == v11)
          {
            Swift::Int v11 = v4;
            break;
          }
        }
        Swift::Int v14 = v130;
      }
      if (v27 < v26)
      {
        if (v11 < v14) {
          goto LABEL_133;
        }
        if (v14 < v11)
        {
          double v40 = (uint64_t *)(v125 + 8 * v11);
          Swift::Int v41 = v11;
          Swift::Int v42 = v14;
          double v43 = (uint64_t *)(v12 + 8 * v14);
          do
          {
            if (v42 != --v41)
            {
              if (!v12) {
                goto LABEL_138;
              }
              uint64_t v44 = *v43;
              *double v43 = *v40;
              uint64_t *v40 = v44;
            }
            ++v42;
            --v40;
            ++v43;
          }
          while (v42 < v41);
        }
      }
    }
    if (v11 >= v4) {
      goto LABEL_47;
    }
    if (__OFSUB__(v11, v14)) {
      goto LABEL_131;
    }
    if (v11 - v14 >= v128) {
      goto LABEL_47;
    }
    if (__OFADD__(v14, v128)) {
      goto LABEL_134;
    }
    Swift::Int v45 = v14 + v128 >= v4 ? v4 : v14 + v128;
    if (v45 < v14) {
      break;
    }
    if (v11 != v45)
    {
      int64_t v127 = v10;
      uint64_t v46 = v125 + 8 * v11;
      do
      {
        CGFloat v47 = *(void **)(v12 + 8 * v11);
        Swift::Int v48 = v14;
        uint64_t v49 = v46;
        do
        {
          double v50 = *(void **)v49;
          id v51 = v47;
          id v52 = v50;
          [v51 CGRectValue];
          double v54 = v53;
          double v56 = v55;
          [v52 CGRectValue];
          double v58 = v57;
          double v60 = v59;

          if (v58 * v60 >= v54 * v56) {
            break;
          }
          if (!v12) {
            goto LABEL_136;
          }
          long long v61 = *(void **)v49;
          CGFloat v47 = *(void **)(v49 + 8);
          *(void *)uint64_t v49 = v47;
          *(void *)(v49 + 8) = v61;
          v49 -= 8;
          ++v48;
        }
        while (v11 != v48);
        ++v11;
        v46 += 8;
        Swift::Int v14 = v130;
      }
      while (v11 != v45);
      Swift::Int v11 = v45;
      uint64_t v10 = v127;
    }
LABEL_47:
    if (v11 < v14) {
      goto LABEL_126;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_100F697E0(0, *((void *)v10 + 2) + 1, 1, (uint64_t)v10);
    }
    unint64_t v63 = *((void *)v10 + 2);
    unint64_t v62 = *((void *)v10 + 3);
    unint64_t v13 = v63 + 1;
    if (v63 >= v62 >> 1) {
      uint64_t v10 = sub_100F697E0((double *)(v62 > 1), v63 + 1, 1, (uint64_t)v10);
    }
    *((void *)v10 + 2) = v13;
    uint64_t v64 = v10 + 4;
    uint64_t v65 = &v10[2 * v63 + 4];
    *(void *)uint64_t v65 = v14;
    *((void *)v65 + 1) = v11;
    if (v63)
    {
      Swift::Int v131 = v11;
      while (1)
      {
        unint64_t v66 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v71 = &v64[2 * v13];
          uint64_t v72 = *((void *)v71 - 8);
          uint64_t v73 = *((void *)v71 - 7);
          BOOL v77 = __OFSUB__(v73, v72);
          uint64_t v74 = v73 - v72;
          if (v77) {
            goto LABEL_115;
          }
          uint64_t v76 = *((void *)v71 - 6);
          uint64_t v75 = *((void *)v71 - 5);
          BOOL v77 = __OFSUB__(v75, v76);
          uint64_t v69 = v75 - v76;
          char v70 = v77;
          if (v77) {
            goto LABEL_116;
          }
          unint64_t v78 = v13 - 2;
          uint64_t v79 = &v64[2 * v13 - 4];
          uint64_t v81 = *(void *)v79;
          uint64_t v80 = *((void *)v79 + 1);
          BOOL v77 = __OFSUB__(v80, v81);
          uint64_t v82 = v80 - v81;
          if (v77) {
            goto LABEL_118;
          }
          BOOL v77 = __OFADD__(v69, v82);
          uint64_t v83 = v69 + v82;
          if (v77) {
            goto LABEL_121;
          }
          if (v83 >= v74)
          {
            Swift::Int v101 = &v64[2 * v66];
            uint64_t v103 = *(void *)v101;
            uint64_t v102 = *((void *)v101 + 1);
            BOOL v77 = __OFSUB__(v102, v103);
            uint64_t v104 = v102 - v103;
            if (v77) {
              goto LABEL_125;
            }
            BOOL v94 = v69 < v104;
            goto LABEL_85;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v95 = *((void *)v10 + 4);
            uint64_t v96 = *((void *)v10 + 5);
            BOOL v77 = __OFSUB__(v96, v95);
            uint64_t v88 = v96 - v95;
            char v89 = v77;
            goto LABEL_79;
          }
          uint64_t v68 = *((void *)v10 + 4);
          uint64_t v67 = *((void *)v10 + 5);
          BOOL v77 = __OFSUB__(v67, v68);
          uint64_t v69 = v67 - v68;
          char v70 = v77;
        }
        if (v70) {
          goto LABEL_117;
        }
        unint64_t v78 = v13 - 2;
        uint64_t v84 = &v64[2 * v13 - 4];
        uint64_t v86 = *(void *)v84;
        uint64_t v85 = *((void *)v84 + 1);
        BOOL v87 = __OFSUB__(v85, v86);
        uint64_t v88 = v85 - v86;
        char v89 = v87;
        if (v87) {
          goto LABEL_120;
        }
        unint64_t v90 = &v64[2 * v66];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v77 = __OFSUB__(v91, v92);
        uint64_t v93 = v91 - v92;
        if (v77) {
          goto LABEL_123;
        }
        if (__OFADD__(v88, v93)) {
          goto LABEL_124;
        }
        if (v88 + v93 >= v69)
        {
          BOOL v94 = v69 < v93;
LABEL_85:
          if (v94) {
            unint64_t v66 = v78;
          }
          goto LABEL_87;
        }
LABEL_79:
        if (v89) {
          goto LABEL_119;
        }
        int64_t v97 = &v64[2 * v66];
        uint64_t v99 = *(void *)v97;
        uint64_t v98 = *((void *)v97 + 1);
        BOOL v77 = __OFSUB__(v98, v99);
        uint64_t v100 = v98 - v99;
        if (v77) {
          goto LABEL_122;
        }
        if (v100 < v88) {
          goto LABEL_14;
        }
LABEL_87:
        unint64_t v105 = v66 - 1;
        if (v66 - 1 >= v13)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        uint64_t v106 = v12;
        if (!v12) {
          goto LABEL_137;
        }
        uint64_t v107 = v10;
        uint64_t v108 = &v64[2 * v105];
        uint64_t v109 = *(void *)v108;
        uint64_t v110 = v64;
        unint64_t v111 = v66;
        uint64_t v112 = &v64[2 * v66];
        double v113 = v112[1];
        uint64_t v114 = v106;
        sub_1006BC554((void **)(v106 + 8 * *(void *)v108), (id *)(v106 + 8 * *(void *)v112), v106 + 8 * *(void *)&v113, v132);
        if (v1) {
          goto LABEL_95;
        }
        if (*(uint64_t *)&v113 < v109) {
          goto LABEL_112;
        }
        if (v111 > *((void *)v107 + 2)) {
          goto LABEL_113;
        }
        *(void *)uint64_t v108 = v109;
        v110[2 * v105 + 1] = v113;
        unint64_t v115 = *((void *)v107 + 2);
        if (v111 >= v115) {
          goto LABEL_114;
        }
        uint64_t v10 = v107;
        unint64_t v13 = v115 - 1;
        memmove(v112, v112 + 2, 16 * (v115 - 1 - v111));
        uint64_t v64 = v110;
        *((void *)v107 + 2) = v115 - 1;
        uint64_t v12 = v114;
        Swift::Int v11 = v131;
        if (v115 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_14:
    Swift::Int v4 = v129;
    if (v11 >= v129)
    {
      uint64_t v2 = v1;
      goto LABEL_98;
    }
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1006BC444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = *a4;
    uint64_t v7 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v8 = *(void **)(v6 + 8 * v4);
    uint64_t v9 = a1;
    uint64_t v10 = v7;
    while (1)
    {
      Swift::Int v11 = *(void **)v10;
      id v12 = v8;
      id v13 = v11;
      [v12 CGRectValue];
      double v15 = v14;
      double v17 = v16;
      [v13 CGRectValue];
      double v19 = v18;
      double v21 = v20;

      if (v19 * v21 >= v15 * v17)
      {
LABEL_4:
        ++v4;
        v7 += 8;
        if (v4 == a2) {
          return;
        }
        goto LABEL_5;
      }
      if (!v6) {
        break;
      }
      double v22 = *(void **)v10;
      uint64_t v8 = *(void **)(v10 + 8);
      *(void *)uint64_t v10 = v8;
      *(void *)(v10 + 8) = v22;
      v10 -= 8;
      if (v4 == ++v9) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1006BC554(void **__src, id *a2, unint64_t a3, void **a4)
{
  Swift::Int v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = (char *)a2 - (char *)__src;
  int64_t v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v8 = (char *)a2 - (char *)__src;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v11 = a3 - (void)a2;
  }
  uint64_t v12 = v11 >> 3;
  CGFloat v47 = __src;
  uint64_t v46 = a4;
  if (v9 >= v11 >> 3)
  {
    if (v10 < -7) {
      goto LABEL_46;
    }
    if (a4 != a2 || &a2[v12] <= a4) {
      memmove(a4, a2, 8 * v12);
    }
    double v27 = &a4[v12];
    Swift::Int v45 = (char *)v27;
    CGFloat v47 = v5;
    if (v6 >= v5 || v10 < 8) {
      goto LABEL_45;
    }
    CGFloat v28 = (id *)(a3 - 8);
    CGFloat v29 = v5;
    while (1)
    {
      id v30 = v28 + 1;
      id v31 = v27 - 1;
      double v32 = *--v29;
      id v33 = *(v27 - 1);
      id v34 = v32;
      [v33 CGRectValue];
      double v36 = v35;
      double v38 = v37;
      [v34 CGRectValue];
      double v40 = v39;
      double v42 = v41;

      if (v40 * v42 < v36 * v38) {
        break;
      }
      Swift::Int v45 = (char *)(v27 - 1);
      if (v30 < v27 || v28 >= v27)
      {
        *CGFloat v28 = *v31;
        CGFloat v29 = v5;
        --v27;
        goto LABEL_43;
      }
      if (v30 != v27) {
        *CGFloat v28 = *v31;
      }
      CGFloat v29 = v5;
      --v27;
      if (v5 <= v6) {
        goto LABEL_45;
      }
LABEL_44:
      --v28;
      Swift::Int v5 = v29;
      if (v27 <= a4) {
        goto LABEL_45;
      }
    }
    if (v30 != v5 || v28 >= v5) {
      *CGFloat v28 = *v29;
    }
    CGFloat v47 = v29;
LABEL_43:
    if (v29 <= v6) {
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  if (v7 >= -7)
  {
    if (a4 != __src || &__src[v9] <= a4) {
      memmove(a4, __src, 8 * v9);
    }
    id v13 = &a4[v9];
    Swift::Int v45 = (char *)v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      double v14 = a4;
      do
      {
        double v15 = *v14;
        id v16 = *v5;
        id v17 = v15;
        [v16 CGRectValue];
        double v19 = v18;
        double v21 = v20;
        [v17 CGRectValue];
        double v23 = v22;
        double v25 = v24;

        if (v23 * v25 >= v19 * v21)
        {
          if (v6 != v14) {
            *uint64_t v6 = *v14;
          }
          uint64_t v46 = ++v14;
          double v26 = v5;
        }
        else
        {
          double v26 = v5 + 1;
          if (v6 < v5 || v6 >= v26 || v6 != v5) {
            *uint64_t v6 = *v5;
          }
        }
        ++v6;
        if (v14 >= v13) {
          break;
        }
        Swift::Int v5 = v26;
      }
      while ((unint64_t)v26 < a3);
      CGFloat v47 = v6;
    }
LABEL_45:
    sub_100F69B50((void **)&v47, (const void **)&v46, &v45);
    return 1;
  }
LABEL_46:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t (*sub_1006BC8A8(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1006BCB64(v6, a2, a3);
  return sub_1006BC910;
}

uint64_t (*sub_1006BC914(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1006BCBE4(v6, a2, a3);
  return sub_1006BC910;
}

uint64_t (*sub_1006BC97C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1006BCC64(v6, a2, a3);
  return sub_1006BC910;
}

uint64_t (*sub_1006BC9E4(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1006BCCE4(v6, a2, a3);
  return sub_1006BC910;
}

uint64_t (*sub_1006BCA4C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1006BCD6C(v6, a2, a3);
  return sub_1006BC910;
}

uint64_t (*sub_1006BCAB4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1006BCDF4(v6, a2, a3);
  return sub_1006BC910;
}

void sub_1006BCB1C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_1006BCB64(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return j__s8Freeform9SyncEventO22FetchedDatabaseChangesV8DeletionVwxx;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1006BCBE4(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_1006BFAD8;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1006BCC64(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return _s11ClientSceneC22InternalAnimationStateOwxx;
  }
  __break(1u);
  return result;
}

void (*sub_1006BCCE4(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for SyncEvent.FetchedDatabaseChanges.Deletion;
  }
  __break(1u);
  return result;
}

void destroy for SyncEvent.FetchedDatabaseChanges.Deletion(id *a1)
{
}

uint64_t (*sub_1006BCD6C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_1006BCDEC;
  }
  __break(1u);
  return result;
}

uint64_t sub_1006BCDEC()
{
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1006BCDF4(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return _s11ClientSceneC15ImageBasedLightVwxx;
  }
  __break(1u);
  return result;
}

uint64_t _s11ClientSceneC15ImageBasedLightVwxx()
{
  return swift_release();
}

uint64_t sub_1006BCE7C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1006BCEF4(a1, a2, a3, (void (*)(void))type metadata accessor for CRLBoardLibraryViewModelItemNode, &qword_10167ACD0, &qword_10167ACC8, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1006BC8A8);
}

uint64_t sub_1006BCEB8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1006BCEF4(a1, a2, a3, (void (*)(void))type metadata accessor for CRLBoardItem, &qword_10167ADC8, &qword_10167ADC0, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1006BC8A8);
}

uint64_t sub_1006BCEF4(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = sub_1006BFA64(a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = sub_1005057FC(a6);
          double v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          id v24 = *v23;
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006BD118(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006BFA64(&qword_10167AD00, &qword_10167ACF8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1005057FC(&qword_10167ACF8);
          uint64_t v12 = sub_1006BC8A8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10050BF48(0, (unint64_t *)&qword_10167ACF0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006BD338(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006BFA64(&qword_10167AE08, &qword_10167AE00);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1005057FC(&qword_10167AE00);
          uint64_t v12 = sub_1006BC8A8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10050BF48(0, (unint64_t *)&qword_101674200);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006BD558(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006BFA64(&qword_10167AD30, &qword_10167AD28);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1005057FC(&qword_10167AD28);
          uint64_t v12 = sub_1006BC8A8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006BD778(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006BFA64(&qword_10167AF28, &qword_10167AF20);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1005057FC(&qword_10167AF20);
          uint64_t v12 = sub_1006BC8A8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006BD998(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1006BCEF4(a1, a2, a3, (void (*)(void))type metadata accessor for CRLiOSMiniFormatterBaseLayerButton, &qword_10167ACE0, &qword_10167ACD8, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1006BC8A8);
}

uint64_t sub_1006BD9D4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1006BF13C(a1, a2, a3, (void (*)(void))type metadata accessor for CRLBoardItemDatabaseResult, (unint64_t *)&unk_10167AE18, &qword_10167AE10, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1006BC97C);
}

uint64_t sub_1006BDA10(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1006BCEF4(a1, a2, a3, (void (*)(void))type metadata accessor for CRLCommandController.CRLCommandControllerCommandGroup, (unint64_t *)&unk_10167AEE0, &qword_10167AED8, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1006BC8A8);
}

uint64_t sub_1006BDA4C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006BFA64(&qword_10167ACB0, (uint64_t *)&unk_101674480);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1005057FC((uint64_t *)&unk_101674480);
          uint64_t v12 = sub_1006BC8A8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10050BF48(0, (unint64_t *)&qword_101674470);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006BDC6C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1006BCEF4(a1, a2, a3, (void (*)(void))type metadata accessor for CRLCommand, &qword_10167AEA0, &qword_10167AE98, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1006BC9E4);
}

uint64_t sub_1006BDCA8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1006BCEF4(a1, a2, a3, (void (*)(void))type metadata accessor for CRLCollaboratorPresence, &qword_10167AF08, &qword_10167AF00, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1006BC8A8);
}

uint64_t sub_1006BDCE4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1006BCEF4(a1, a2, a3, (void (*)(void))type metadata accessor for CRLFreehandDrawingItem, &qword_10167ACC0, &qword_10167ACB8, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1006BC8A8);
}

uint64_t sub_1006BDD20(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1006BDD80(a1, a2, a3, &qword_101673060, &qword_10167AE30, &qword_10167AE28, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1006BC914);
}

uint64_t sub_1006BDD50(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1006BDD80(a1, a2, a3, &qword_10167AE78, &qword_10167AE88, &qword_10167AE80, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1006BCA4C);
}

uint64_t sub_1006BDD80(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = sub_1006BFA64(a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = sub_1005057FC(a6);
          double v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          uint64_t v24 = *v23;
          swift_unknownObjectRetain();
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    sub_1005057FC(a4);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006BDFA0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006BFA64(&qword_10167AF70, &qword_10167AF68);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1005057FC(&qword_10167AF68);
          uint64_t v12 = sub_1006BC8A8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10050BF48(0, &qword_10167AF60);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006BE1C0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006BFA64(&qword_10167AFA8, &qword_10167AFA0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1005057FC(&qword_10167AFA0);
          uint64_t v12 = sub_1006BC8A8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10050BF48(0, (unint64_t *)&qword_10167AF10);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006BE3E0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006BFA64(&qword_10167AF98, &qword_10167AF90);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1005057FC(&qword_10167AF90);
          uint64_t v12 = sub_1006BC8A8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10050BF48(0, (unint64_t *)&qword_101690720);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006BE600(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006BFA64(&qword_10167AEF8, &qword_10167AEF0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1005057FC(&qword_10167AEF0);
          uint64_t v12 = sub_1006BC8A8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10050BF48(0, (unint64_t *)&unk_10167B160);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006BE820(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1006BECC0(a1, a2, a3, &qword_10167AEC0, &qword_10167AED0, &qword_10167AEC8, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1006BC97C);
}

uint64_t sub_1006BE850(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006BFA64((unint64_t *)&unk_10167ADF0, &qword_10167ADE8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1005057FC(&qword_10167ADE8);
          uint64_t v12 = sub_1006BC8A8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10050BF48(0, &qword_10167ADE0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006BEA70(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006BFA64(&qword_10167AD88, &qword_10167AD80);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1005057FC(&qword_10167AD80);
          uint64_t v12 = sub_1006BC8A8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10050BF48(0, &qword_10167BED0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006BEC90(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1006BECC0(a1, a2, a3, &qword_10167AD90, &qword_10167ADA0, &qword_10167AD98, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1006BC97C);
}

uint64_t sub_1006BECC0(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = sub_1006BFA64(a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = sub_1005057FC(a6);
          double v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          uint64_t v24 = *v23;
          swift_retain();
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    sub_1005057FC(a4);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006BEEE0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006BFA64((unint64_t *)&unk_10167AE58, &qword_10167AE50);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1005057FC(&qword_10167AE50);
          uint64_t v12 = sub_1006BC8A8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10050BF48(0, &qword_10167AE48);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006BF100(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1006BF13C(a1, a2, a3, (void (*)(void))&type metadata accessor for AnyCancellable, (unint64_t *)&unk_10167AF80, &qword_10167AF78, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1006BCAB4);
}

uint64_t sub_1006BF13C(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = sub_1006BFA64(a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = sub_1005057FC(a6);
          double v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          uint64_t v24 = *v23;
          swift_retain();
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006BF360(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1006BFA64(&qword_10167AE70, &qword_10167AE68);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1005057FC(&qword_10167AE68);
          uint64_t v12 = sub_1006BC8A8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10050BF48(0, (unint64_t *)&qword_101678790);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006BF580(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1006BECC0(a1, a2, a3, &qword_10167AD50, &qword_10167AD60, &qword_10167AD58, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1006BC97C);
}

uint64_t sub_1006BF5B0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1006BF13C(a1, a2, a3, (void (*)(void))type metadata accessor for CRLBoardItemData, (unint64_t *)&unk_10167AD70, &qword_10167AD68, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1006BC97C);
}

uint64_t sub_1006BF5EC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1006BECC0(a1, a2, a3, &qword_10167AEA8, &qword_10167AEB8, &qword_10167AEB0, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1006BC97C);
}

uint64_t sub_1006BF61C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1006BDD80(a1, a2, a3, &qword_10167AF48, &qword_10167AF58, &qword_10167AF50, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1006BC914);
}

uint64_t sub_1006BF64C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1006BECC0(a1, a2, a3, &qword_10167ADA8, &qword_10167ADB8, &qword_10167ADB0, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1006BC97C);
}

uint64_t sub_1006BF67C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100F63D78(0, *(void *)(v4 + 16) + 1, 1, (double *)v4);
    uint64_t v4 = result;
  }
  unint64_t v11 = *(void *)(v4 + 16);
  unint64_t v10 = *(void *)(v4 + 24);
  if (v11 >= v10 >> 1)
  {
    uint64_t result = (uint64_t)sub_100F63D78((double *)(v10 > 1), v11 + 1, 1, (double *)v4);
    uint64_t v4 = result;
  }
  *(void *)(v4 + 16) = v11 + 1;
  uint64_t v12 = (void *)(v4 + 32 * v11);
  v12[4] = v5;
  uint64_t v12[5] = v6;
  v12[6] = v7;
  v12[7] = v8;
  *a3 = v4;
  return result;
}

double *sub_1006BF744(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = (double *)a1;
  if (v1 == 1)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    if (v1 >= 16) {
      uint64_t v3 = 16;
    }
    else {
      uint64_t v3 = *(void *)(a1 + 16);
    }
    type metadata accessor for __ContiguousArrayStorageBase();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    uint64_t v4 = (double *)swift_dynamicCastClass();
    if (!v4)
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = _swiftEmptyArrayStorage;
    }
    uint64_t v5 = *((void *)v4 + 2);
    swift_release();
    if (v5 == v3 - 1)
    {
      uint64_t v6 = (double *)swift_dynamicCastClass();
      if (!v6)
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = _swiftEmptyArrayStorage;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = sub_1006BA13C((uint64_t)v2, (uint64_t)(v2 + 4), 1, (2 * v3) | 1);
    }
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_1006B8DE0((uint64_t)v6);
    swift_release();
    int64_t v8 = *(void *)(v7 + 16);
    if (v8)
    {
      sub_1006BB904(0, v8, 0);
      uint64_t v9 = 0;
      uint64_t v10 = *((void *)v2 + 4);
      uint64_t v11 = *((void *)v2 + 5);
      uint64_t v12 = *((void *)v2 + 6);
      uint64_t v13 = *((void *)v2 + 7);
      do
      {
        uint64_t v14 = *(void *)(v7 + 32 + 8 * v9);
        sub_1005057FC(&qword_10167AFB0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117E810;
        *(void *)(inited + 32) = v10;
        *(void *)(inited + 40) = v11;
        *(void *)(inited + 48) = v12;
        *(void *)(inited + 56) = v13;
        uint64_t v29 = inited;
        swift_bridgeObjectRetain_n();
        sub_1006E2E7C(v14);
        uint64_t v16 = *(void *)(v29 + 16);
        if (v16)
        {
          uint64_t v17 = (double *)(v29 + 56);
          double v18 = 0.0;
          double v19 = 0.0;
          double v20 = 0.0;
          double v21 = 0.0;
          do
          {
            double v20 = sub_100064F28(v20, v21, v18, v19, *(v17 - 3), *(v17 - 2), *(v17 - 1), *v17);
            double v21 = v22;
            double v18 = v23;
            double v19 = v24;
            v17 += 4;
            --v16;
          }
          while (v16);
        }
        else
        {
          double v18 = 0.0;
          double v19 = 0.0;
          double v20 = 0.0;
          double v21 = 0.0;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v2 = _swiftEmptyArrayStorage;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB904(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
          uint64_t v2 = _swiftEmptyArrayStorage;
        }
        double v26 = _swiftEmptyArrayStorage[2];
        double v25 = _swiftEmptyArrayStorage[3];
        if (*(void *)&v26 >= *(void *)&v25 >> 1)
        {
          sub_1006BB904(*(void *)&v25 > 1uLL, *(void *)&v26 + 1, 1);
          uint64_t v2 = _swiftEmptyArrayStorage;
        }
        ++v9;
        *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v26 + 1;
        double v27 = &_swiftEmptyArrayStorage[4 * *(void *)&v26];
        v27[4] = v20;
        v27[5] = v21;
        v27[6] = v18;
        v27[7] = v19;
      }
      while (v9 != v8);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
  }
  return v2;
}

uint64_t type metadata accessor for CRLImageFaceAnalyzerResult()
{
  return self;
}

uint64_t sub_1006BFA64(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006BFAB4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1006BF67C(a1, *(uint64_t **)(v2 + 16), a2);
}

id sub_1006BFB84(uint64_t a1, uint64_t a2, void *a3)
{
  if (*(void *)(a1 + *a3 + 8))
  {
    swift_bridgeObjectRetain();
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v3 = 0;
  }

  return v3;
}

id sub_1006BFBF0(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10)
{
  id v21 = objc_allocWithZone(v10);
  return sub_1006BFC94(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

id sub_1006BFC94(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10)
{
  if (a9 <= a10)
  {
    double v23 = &v10[OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_id];
    uint64_t v24 = type metadata accessor for UUID();
    uint64_t v25 = *(void *)(v24 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v23, a1, v24);
    *(void *)&v10[OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_movieData] = a2;
    *(void *)&v10[OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_posterImageData] = a3;
    *(double *)&v10[OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_posterTime] = a8;
    *(double *)&v10[OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_startTime] = a9;
    *(double *)&v10[OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_endTime] = a10;
    double v26 = &v10[OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_title];
    *(void *)double v26 = a4;
    *((void *)v26 + 1) = a5;
    double v27 = &v10[OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_creator];
    *(void *)double v27 = a6;
    *((void *)v27 + 1) = a7;
    v30.receiver = v10;
    v30.super_class = (Class)type metadata accessor for CRLCommandSetMoviePosterTime();
    [super init];
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(a1, v24);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(id:movieData:posterImageData:posterTime:startTime:endTime:title:creator:)", 78, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMoviePosterTime.swift", 100, 2, 23, (uint64_t)"Attempting to set startTime after endTime will only lead to misery.", 67, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(id:movieData:posterImageData:posterTime:startTime:endTime:title:creator:)", 78, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMoviePosterTime.swift", 100, 2, 23);

    uint64_t v16 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a1, v16);
    type metadata accessor for CRLCommandSetMoviePosterTime();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v17;
}

id sub_1006C008C(char *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10)
{
  uint64_t v31 = a6;
  uint64_t v30 = a4;
  id v33 = a3;
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  id v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v22 = *(void (**)(uint64_t))(**(void **)&a1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  uint64_t v23 = swift_retain();
  v22(v23);
  swift_release();
  v24.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  if (!a5)
  {
    NSString v25 = 0;
    if (a7) {
      goto LABEL_3;
    }
LABEL_5:
    NSString v26 = 0;
    goto LABEL_6;
  }
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a7) {
    goto LABEL_5;
  }
LABEL_3:
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_6:
  double v27 = v33;
  id v28 = [v32 initWithId:v24.super.isa movieData:a2 posterImageData:v33 posterTime:v25 startTime:v26 endTime:a8 title:a9 creator:a10 v30 v31];

  return v28;
}

void sub_1006C0378(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = v3;
  uint64_t v45 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v45, v9);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v36 - v14;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v17 = [a1 getBoardItemForUUID:isa];

  if (!v17) {
    goto LABEL_7;
  }
  type metadata accessor for CRLMovieItem();
  uint64_t v18 = swift_dynamicCastClass();
  if (!v18)
  {

LABEL_7:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMoviePosterTime.swift", 100, 2, 42, (uint64_t)"Unable to retrieve movie item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve movie item");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMoviePosterTime.swift", 100, 2, 42);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v34, v35);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  uint64_t v19 = v18;
  id v20 = v17;
  sub_10103405C(v19, (uint64_t)&off_101518040);

  if (v4)
  {
  }
  else
  {
    id v21 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_movieData);
    double v42 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_posterImageData);
    double v43 = v21;
    double v22 = *(double *)(v5 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_posterTime);
    double v23 = *(double *)(v5 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_startTime);
    double v24 = *(double *)(v5 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_endTime);
    uint64_t v39 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    uint64_t v44 = a2;
    swift_beginAccess();
    swift_retain();
    uint64_t v25 = sub_1005057FC(&qword_1016A4070);
    int v41 = a3;
    uint64_t v36 = v25;
    CRRegister.wrappedValue.getter();
    uint64_t v26 = (uint64_t)v11;
    uint64_t v27 = v45;
    int v40 = v15[*(int *)(v45 + 36)];
    swift_endAccess();
    sub_100515888((uint64_t)v15);
    swift_release();
    uint64_t v28 = *(void *)(v5 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_title);
    uint64_t v37 = *(void *)(v5 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_title + 8);
    uint64_t v38 = v28;
    uint64_t v29 = v5 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_creator;
    uint64_t v31 = *(void *)(v5 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_creator);
    uint64_t v30 = *(void *)(v29 + 8);
    swift_beginAccess();
    swift_retain();
    CRRegister.wrappedValue.getter();
    char v32 = *(unsigned char *)(v26 + *(int *)(v27 + 48));
    swift_endAccess();
    sub_100515888(v26);
    swift_release();
    sub_100BED800(v43, v42, v40, v38, v37, v31, v30, v32 & 1, v22, v23, v24);
    id v33 = v20;
    sub_101023724(v19, (uint64_t)&off_101518040, v41);
  }
}

uint64_t sub_1006C0810()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform28CRLCommandSetMoviePosterTime_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_1006C08C4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetMoviePosterTime();
  return [super dealloc];
}

uint64_t sub_1006C09B4()
{
  return type metadata accessor for CRLCommandSetMoviePosterTime();
}

uint64_t type metadata accessor for CRLCommandSetMoviePosterTime()
{
  uint64_t result = qword_10167AFE8;
  if (!qword_10167AFE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1006C0A08()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1006C0AD0()
{
  unint64_t result = qword_10167AFF8;
  if (!qword_10167AFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167AFF8);
  }
  return result;
}

unint64_t sub_1006C0B28()
{
  unint64_t result = qword_10167B000;
  if (!qword_10167B000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B000);
  }
  return result;
}

uint64_t sub_1006C0B7C()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1006C0BB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006C0BCC()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1006C0BF0()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_1006C0C14()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_1006C0C48()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_1006C0C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  type metadata accessor for CRLBoardIdentifier(0);
  v4[13] = swift_task_alloc();
  uint64_t v4[14] = type metadata accessor for CRLBoardEntity();
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Logger();
  v4[20] = v5;
  v4[21] = *(void *)(v5 - 8);
  v4[22] = swift_task_alloc();
  return _swift_task_switch(sub_1006C0DC0, 0, 0);
}

uint64_t sub_1006C0DC0()
{
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = (id)static OS_os_log.appIntents;
  Logger.init(_:)();
  IntentParameter.wrappedValue.getter();
  if (*(unsigned char *)(v0 + 233))
  {
    if (*(unsigned char *)(v0 + 233) == 1)
    {
      BOOL v2 = 0;
    }
    else
    {
      uint64_t v3 = *(void *)(v0 + 152);
      IntentParameter.wrappedValue.getter();
      EntityProperty.wrappedValue.getter();
      char v4 = *(unsigned char *)(v0 + 232);
      sub_100568A20(v3, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
      BOOL v2 = (v4 & 1) == 0;
    }
  }
  else
  {
    BOOL v2 = 1;
  }
  *(unsigned char *)(v0 + 235) = v2;
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v6 = *(void *)(v0 + 104);
  AppDependency.wrappedValue.getter();
  *(void *)(v0 + 184) = *(void *)(v0 + 48);
  sub_1005057FC(&qword_101683000);
  uint64_t v7 = type metadata accessor for CRLBoardIdentifierAndValue(0);
  unint64_t v8 = (*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10117E810;
  uint64_t v10 = v9 + v8;
  IntentParameter.wrappedValue.getter();
  sub_1006C2AF4(v5, v6, type metadata accessor for CRLBoardIdentifier);
  sub_100568A20(v5, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  sub_1005394E4(v6, v10);
  *(unsigned char *)(v10 + *(int *)(v7 + 20)) = v2;
  uint64_t v11 = sub_100CDDA18(v9);
  *(void *)(v0 + 192) = v11;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(v0 + 200) = type metadata accessor for MainActor();
  *(void *)(v0 + 208) = static MainActor.shared.getter();
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1006C10B4;
  return sub_100EE1704(v11);
}

uint64_t sub_1006C10B4()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    char v4 = sub_1006C14A4;
  }
  else {
    char v4 = sub_1006C120C;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_1006C120C()
{
  uint64_t v1 = *(void **)(v0 + 184);
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_task_switch(sub_1006C1284, 0, 0);
}

uint64_t sub_1006C1284()
{
  char v1 = *(unsigned char *)(v0 + 235);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v10 = *(void *)(v0 + 160);
  uint64_t v11 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 120);
  IntentParameter.wrappedValue.getter();
  *(unsigned char *)(v0 + 234) = v1;
  EntityProperty.wrappedValue.setter();
  sub_100568A20(v3, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  IntentParameter.wrappedValue.getter();
  IntentParameter.wrappedValue.getter();
  uint64_t v7 = sub_1009D09EC();
  sub_1006C2AF4(v5, v4, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  sub_1006C2AF4(v4, v6, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  IntentParameter.wrappedValue.setter();
  sub_100568A20(v4, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  sub_100568A20(v5, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  *(void *)(v0 + 64) = v7;
  sub_100651FFC((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  sub_1005F6380();
  static IntentResult.result<A, B>(value:opensIntent:)();
  swift_release();
  sub_100568A20(v3, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v11, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1006C14A4()
{
  swift_release();
  return _swift_task_switch(sub_1006C150C, 0, 0);
}

uint64_t sub_1006C150C()
{
  uint64_t v18 = v0;
  uint64_t v1 = (void *)v0[23];
  swift_bridgeObjectRelease();

  swift_retain();
  swift_retain();
  swift_retain();
  swift_errorRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[18];
    uint64_t v5 = v0[13];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v16 = (void *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    IntentParameter.wrappedValue.getter();
    sub_1006C2AF4(v4, v5, type metadata accessor for CRLBoardIdentifier);
    sub_100568A20(v4, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    uint64_t v7 = sub_100753038();
    unint64_t v9 = v8;
    sub_100568A20(v5, type metadata accessor for CRLBoardIdentifier);
    v0[5] = sub_100E04348(v7, v9, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    *(_WORD *)(v6 + 12) = 2112;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[7] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v16 = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Problem changing dot grid for board: %s - %@", (uint8_t *)v6, 0x16u);
    sub_1005057FC(&qword_101678028);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v11 = v0[21];
  uint64_t v12 = v0[22];
  uint64_t v13 = v0[20];
  type metadata accessor for AppIntentError();
  sub_100651FFC(&qword_101675F98, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
  swift_allocError();
  static AppIntentError.Unrecoverable.unknown.getter();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1006C192C()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  sub_100568B28(v9, qword_10171A438);
  sub_100556B74(v9, (uint64_t)qword_10171A438);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_1006C1B24()
{
  uint64_t v0 = sub_1005057FC(&qword_10167B040);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v2 = sub_1005057FC(&qword_10167B048);
  __chkstk_darwin(v2, v3);
  sub_1006C2AA0();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  sub_1005057FC(&qword_10167B050);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v5._countAndFlagsBits = 0x69726720746F6420;
  v5._object = (void *)0xEE0020726F662064;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1005057FC(&qword_10167B058);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v6);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1006C1D18@<X0>(uint64_t a1@<X8>)
{
  if (qword_10166EE50 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_100556B74(v2, (uint64_t)qword_10171A438);
  Swift::String v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1006C1DC4(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528488;
  return sub_1006C0C6C(a1, v4, v5, v6);
}

unsigned char *sub_1006C1E78@<X0>(void *a1@<X8>)
{
  unint64_t result = sub_1006C2114();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1006C1EA4(uint64_t a1)
{
  unint64_t v2 = sub_1006C2AA0();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t destroy for CRLChangeBoardCanvasGridIntent()
{
  swift_release();
  swift_release();

  return swift_release();
}

void *_s8Freeform30CRLChangeBoardCanvasGridIntentVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for CRLChangeBoardCanvasGridIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CRLChangeBoardCanvasGridIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLStrokePatternData(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLStrokePatternData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLChangeBoardCanvasGridIntent()
{
  return &type metadata for CRLChangeBoardCanvasGridIntent;
}

uint64_t sub_1006C20D8()
{
  return sub_100523288(&qword_10167B010, &qword_10167B018);
}

unsigned char *sub_1006C2114()
{
  uint64_t v63 = type metadata accessor for InputConnectionBehavior();
  uint64_t v65 = *(void *)(v63 - 8);
  __chkstk_darwin(v63, v0);
  unint64_t v62 = &v45[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v2 = sub_1005057FC(&qword_101673B38);
  __chkstk_darwin(v2 - 8, v3);
  long long v61 = &v45[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5, v6);
  double v60 = &v45[-v7];
  uint64_t v8 = sub_1005057FC(&qword_101691F20);
  __chkstk_darwin(v8 - 8, v9);
  double v59 = &v45[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v11 - 8, v12);
  double v58 = &v45[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = &v45[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = type metadata accessor for Locale();
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v21 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v21 - 8, v22);
  uint64_t v23 = type metadata accessor for LocalizedStringResource();
  uint64_t v55 = v23;
  uint64_t v64 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v24);
  __chkstk_darwin(v25, v26);
  double v54 = &v45[-v27];
  uint64_t v57 = sub_1005057FC(&qword_101673B48);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v28 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v29 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 104);
  v29(v18, enum case for LocalizedStringResource.BundleDescription.main(_:), v14);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v30 = v28;
  unsigned int v46 = v28;
  uint64_t v48 = v14;
  v29(v18, v28, v14);
  CGFloat v47 = v29;
  uint64_t v49 = v15 + 104;
  uint64_t v31 = v58;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  char v32 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v64 + 56);
  v64 += 56;
  double v56 = v32;
  v32(v31, 0, 1, v23);
  uint64_t v33 = type metadata accessor for CRLBoardEntity();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v59, 1, 1, v33);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v29(v18, v30, v14);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  CKRecordID v34 = v60;
  IntentDialog.init(_:)();
  uint64_t v35 = type metadata accessor for IntentDialog();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
  double v50 = v37;
  uint64_t v51 = v36 + 56;
  v37(v34, 0, 1, v35);
  v37(v61, 1, 1, v35);
  unsigned int v52 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v38 = *(void (**)(void))(v65 + 104);
  v65 += 104;
  double v53 = (void (*)(unsigned char *, void, uint64_t))v38;
  v38(v62);
  sub_100651FFC((unint64_t *)&qword_101673B60, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  uint64_t v39 = v58;
  double v59 = (unsigned char *)IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  uint64_t v57 = sub_1005057FC(&qword_10167B020);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v40 = v46;
  uint64_t v41 = v48;
  double v42 = v47;
  v47(v18, v46, v48);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v42(v18, v40, v41);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v56(v39, 0, 1, v55);
  char v68 = 0;
  double v43 = v50;
  v50(v60, 1, 1, v35);
  v43(v61, 1, 1, v35);
  v53(v62, v52, v63);
  sub_1006C2A4C();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  sub_1005057FC(&qword_101673B50);
  unint64_t v66 = 0xD00000000000001FLL;
  unint64_t v67 = 0x800000010123B260;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v59;
}

unint64_t sub_1006C2A4C()
{
  unint64_t result = qword_10167B028;
  if (!qword_10167B028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B028);
  }
  return result;
}

unint64_t sub_1006C2AA0()
{
  unint64_t result = qword_10167B030;
  if (!qword_10167B030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10167B030);
  }
  return result;
}

uint64_t sub_1006C2AF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1006C2B5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1006C2B88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

id sub_1006C2BB4()
{
  id v0 = [self configurationWithPointSize:4 weight:3 scale:17.0];

  return v0;
}

id sub_1006C2C00()
{
  if (sub_1003E86EC()) {
    id v0 = sub_1006C31C8();
  }
  else {
    id v0 = sub_1006C2ED4();
  }
  uint64_t v1 = v0;
  id v2 = [self mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 localizedStringForKey:v3 value:v4 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v6 = sub_10051ECC0();
  swift_bridgeObjectRelease();
  id v7 = sub_1006C3DDC(v1, v6);

  if (sub_1003E86EC()) {
    uint64_t v8 = sub_1006C2ED4();
  }
  else {
    uint64_t v8 = sub_1006C31C8();
  }
  uint64_t v9 = v8;
  id v10 = sub_10051ECC0();
  id v11 = sub_1006C3DDC(v9, v10);

  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10117DF50;
  *(void *)(v12 + 32) = v7;
  *(void *)(v12 + 40) = v11;
  specialized Array._endMutation()();
  id v13 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  id v14 = v7;
  id v15 = v11;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v17 = [v13 initWithArrangedSubviews:isa];

  [v17 setAxis:0];
  [v17 setDistribution:1];
  [v17 setSpacing:1.0];
  id v18 = [v1 heightAnchor];
  id v19 = [v9 heightAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19];

  [v20 setActive:1];
  return v17;
}

void *sub_1006C2ED4()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  id v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform34CRLiOSMiniFormatterLineEndsBuilder_lineDataProvider];
  NSString v3 = (void *)sub_1005D1384();
  if (!v3) {
    goto LABEL_5;
  }
  char v4 = sub_100AC7F78((uint64_t)&v26, (unint64_t)v3, (uint64_t)v2);
  swift_bridgeObjectRelease();
  NSString v3 = v26;
  if (v26)
  {
    if (v26 == (void *)1)
    {
      NSString v3 = 0;
LABEL_5:
      uint64_t v5 = 10;
      goto LABEL_6;
    }
    if (v4)
    {
      id v8 = 0;
      uint64_t v5 = 10;
      goto LABEL_13;
    }
    uint64_t v5 = (uint64_t)[self lineEndTypeFromLineEnd:v26];
LABEL_6:
    id v6 = sub_1006C39C8(v5);
    if (v6)
    {
      id v7 = v6;
      id v8 = [v6 imageWithHorizontallyFlippedOrientation];
    }
    else
    {
      id v8 = 0;
    }
    goto LABEL_13;
  }
  id v8 = 0;
  uint64_t v5 = 10;
  if ((v4 & 1) == 0) {
    goto LABEL_6;
  }
LABEL_13:
  id v9 = [self accessibilityDescriptionFor:v5];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v13 = 0;
  }
  id v14 = self;
  id v15 = [v14 labelColor];
  id v16 = [v14 labelColor];
  id v17 = sub_10051E93C(v8, 0, 0, 0, 0, 0, v15, v16, 0, 5, 0, v11, v13, 0);

  swift_bridgeObjectRelease();
  [v17 setShowsMenuAsPrimaryAction:1];
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v2;
  id v19 = v1;
  swift_retain();
  id v20 = v2;
  preferredElementSize = sub_1006C3B5C((uint64_t)&off_101502478, v5, (uint64_t)sub_1006C4034, v18, 1);

  swift_release();
  sub_10050BF48(0, &qword_101673A80);
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v27.value.super.Class isa = 0;
  v27.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v22, (Swift::String_optional)0, v27, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, children).super.super.isa;
  swift_release();
  [v17 setMenu:isa];

  return v17;
}

id sub_1006C31C8()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  id v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform34CRLiOSMiniFormatterLineEndsBuilder_lineDataProvider];
  unint64_t v3 = sub_1005D1384();
  if (!v3) {
    goto LABEL_5;
  }
  char v4 = sub_100AC7F6C((uint64_t)&v39, v3, (uint64_t)v2);
  swift_bridgeObjectRelease();
  unint64_t v3 = (unint64_t)v39;
  if (v39)
  {
    if (v39 == (double *)1)
    {
      unint64_t v3 = 0;
LABEL_5:
      uint64_t v5 = 10;
LABEL_6:
      id v6 = sub_1006C39C8(v5);
      goto LABEL_7;
    }
    if ((v4 & 1) == 0)
    {
      uint64_t v5 = (uint64_t)[self lineEndTypeFromLineEnd:v39];
      goto LABEL_6;
    }
    id v6 = 0;
    uint64_t v5 = 10;
  }
  else
  {
    id v6 = 0;
    uint64_t v5 = 10;
    if ((v4 & 1) == 0) {
      goto LABEL_6;
    }
  }
LABEL_7:
  uint64_t v38 = (void *)v3;
  id v7 = self;
  id v8 = [v7 accessibilityDescriptionFor:v5];
  uint64_t v36 = v7;
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v12 = 0;
  }
  uint64_t v13 = self;
  id v14 = [v13 labelColor];
  id v15 = [v13 labelColor];
  uint64_t v37 = v6;
  id v16 = sub_10051E93C(v6, 0, 0, 0, 0, 0, v14, v15, 0, 10, 0, v10, v12, 0);

  swift_bridgeObjectRelease();
  id v35 = v16;
  [v16 setShowsMenuAsPrimaryAction:1];
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v2;
  uint64_t v39 = _swiftEmptyArrayStorage;
  id v34 = v1;
  swift_retain();
  id v18 = v2;
  specialized ContiguousArray.reserveCapacity(_:)();
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  id v19 = self;
  for (uint64_t i = 0; i != 56; i += 8)
  {
    uint64_t v21 = *(uint64_t *)((char *)&off_101502420 + i + 32);
    Swift::String v22 = (void *)swift_allocObject();
    v22[2] = sub_1006C3FA4;
    v22[3] = v17;
    v22[4] = v21;
    swift_retain();
    uint64_t v23 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v24 = [objc_allocWithZone((Class)NSTextAttachment) init];
    id v25 = sub_1006C39C8(v21);
    [v24 setImage:v25];

    id v26 = v23;
    id v27 = [v19 attributedStringWithAttachment:v24];
    [v26 setAttributedTitle:v27];

    id v28 = v26;
    id v29 = [v36 accessibilityDescriptionFor:v21];
    [v28 setAccessibilityLabel:v29];

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
  }
  UIMenuElementSize preferredElementSize = (UIMenuElementSize)v39;

  swift_release();
  sub_10050BF48(0, &qword_101673A80);
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  v40.value.super.Class isa = 0;
  v40.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v31, (Swift::String_optional)0, v40, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, 0).super.super.isa;
  swift_release();
  [v35 setMenu:isa];

  return v35;
}

void *sub_1006C366C()
{
  unint64_t v0 = sub_1007FE0AC();
  if (v0) {
    sub_10057C1E4(v0);
  }
  unint64_t v1 = sub_1005D1384();
  if (v1)
  {
    unint64_t v2 = v1;
    if (v1 >> 62)
    {
      type metadata accessor for CRLBoardItem(0);
      unint64_t v3 = _bridgeCocoaArray<A>(_:)();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      type metadata accessor for CRLBoardItem(0);
      unint64_t v3 = v2;
    }
    swift_bridgeObjectRelease();
    sub_10058EBD0(v3);
    swift_bridgeObjectRelease();
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_1006C3754(uint64_t a1, uint64_t a2)
{
  sub_100522D7C(a2, (uint64_t)&v16);
  type metadata accessor for CRLShapeItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_10;
  }
  unint64_t v4 = sub_1005D1384();
  if (!v4 || (char v5 = sub_100ED5958((uint64_t)v15, v4), swift_bridgeObjectRelease(), (v5 & 1) == 0))
  {

LABEL_10:
    char v13 = sub_100520CB4(a1, a2);
    return v13 & 1;
  }
  id v6 = *(char **)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details);
  id v7 = &v6[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data];
  id v8 = v6;
  swift_beginAccess();
  uint64_t v9 = *(void *)v7;
  if (*(void *)(*(void *)v7 + 16))
  {
    uint64_t v10 = sub_1009563E8(21);
    if (v11) {
      goto LABEL_8;
    }
  }
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 1;
  sub_1006C3968((uint64_t)&v16);
  uint64_t v9 = *(void *)v7;
  if (*(void *)(*(void *)v7 + 16) && (uint64_t v10 = sub_1009563E8(22), (v12 & 1) != 0))
  {
LABEL_8:
    sub_100557A70(*(void *)(v9 + 56) + 32 * v10, (uint64_t)&v16);
    sub_1006C3968((uint64_t)&v16);

    char v13 = 1;
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 1;
    sub_1006C3968((uint64_t)&v16);

    char v13 = 0;
  }
  return v13 & 1;
}

void sub_1006C38F0()
{
}

id sub_1006C3900()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterLineEndsBuilder();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSMiniFormatterLineEndsBuilder()
{
  return self;
}

uint64_t sub_1006C3968(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_1016725E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1006C39C8(uint64_t a1)
{
  id v1 = 0;
  switch(a1)
  {
    case 0:
    case 1:
    case 3:
    case 4:
    case 7:
    case 9:
    case 10:
      NSString v2 = String._bridgeToObjectiveC()();
      id v1 = [self imageNamed:v2];

      if (v1)
      {
        unint64_t v3 = self;
        id v4 = v1;
        id v5 = [v3 labelColor];
        id v1 = [v4 imageWithTintColor:v5];
      }
      break;
    case 2:
    case 5:
    case 6:
    case 8:
    case 11:
      return v1;
    default:
      type metadata accessor for CRLLineEndType(0);
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      JUMPOUT(0x1006C3B2CLL);
  }
  return v1;
}

double *sub_1006C3B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v6)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v10 = (uint64_t *)(a1 + 32);
    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    id v27 = self;
    id v26 = self;
    uint64_t v11 = a3;
    do
    {
      uint64_t v17 = *v10++;
      uint64_t v16 = v17;
      uint64_t v18 = (void *)swift_allocObject();
      v18[2] = v11;
      v18[3] = a4;
      v18[4] = v17;
      swift_retain();
      uint64_t v19 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      id v20 = [objc_allocWithZone((Class)NSTextAttachment) init];
      id v21 = sub_1006C39C8(v17);
      Swift::String v22 = v21;
      if (a5)
      {
        if (v21)
        {
          uint64_t v23 = a5;
          id v24 = [v21 imageWithHorizontallyFlippedOrientation];

          Swift::String v22 = v24;
          a5 = v23;
          uint64_t v11 = a3;
        }
      }
      [v20 setImage:v22];

      id v12 = v19;
      id v13 = [v27 attributedStringWithAttachment:v20];
      [v12 setAttributedTitle:v13];

      id v14 = v12;
      id v15 = [v26 accessibilityDescriptionFor:v16];
      [v14 setAccessibilityLabel:v15];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v6;
    }
    while (v6);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

id sub_1006C3DDC(void *a1, void *a2)
{
  id v4 = [a1 heightAnchor];
  if (qword_10166EB60 != -1) {
    swift_once();
  }
  id v5 = [v4 constraintGreaterThanOrEqualToConstant:*(double *)&qword_101719DE0];

  [v5 setActive:1];
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10117DF50;
  *(void *)(v6 + 32) = a2;
  *(void *)(v6 + 40) = a1;
  specialized Array._endMutation()();
  id v7 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  id v8 = a2;
  id v9 = a1;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v11 = [v7 initWithArrangedSubviews:isa];

  [v11 setAxis:1];
  [v11 setSpacing:8.0];
  return v11;
}

uint64_t sub_1006C3F6C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1006C3FA4(uint64_t a1)
{
}

uint64_t sub_1006C3FC8()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1006C4004()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

void sub_1006C4034(uint64_t a1)
{
}

void sub_1006C40F0(uint64_t a1)
{
  if (qword_10166EE08 != -1) {
    swift_once();
  }
  NSString v2 = (void *)static CRLAnalyticsActiveUseManager.shared;
  id v4 = *(id *)(a1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_activeUseManager);
  *(void *)(a1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_activeUseManager) = static CRLAnalyticsActiveUseManager.shared;
  id v3 = v2;
}

id sub_1006C4198(id result)
{
  if (result != (id)2)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"application(_:didFinishLaunchingWithOptions:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2, 98, (uint64_t)"Shape library data failed to load.", 34, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"application(_:didFinishLaunchingWithOptions:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2, 98);
    NSString v2 = self;
    return [v2 logFullBacktrace];
  }
  return result;
}

uint64_t sub_1006C4284(uint64_t a1, uint64_t a2)
{
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_1006C42D8()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_10053DCA8;
  return sub_100ED9908();
}

uint64_t sub_1006C439C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(void))
{
  if (a4)
  {
    type metadata accessor for LaunchOptionsKey(0);
    sub_1006C89F0(&qword_1016716F0, type metadata accessor for LaunchOptionsKey);
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  id v8 = a3;
  id v9 = a1;
  char v10 = a5();

  swift_bridgeObjectRelease();
  return v10 & 1;
}

void sub_1006C446C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibrary);
  if (v1)
  {
    id v2 = v1;
    sub_100EDAE34();

    sub_1006C47D4();
    if (qword_10166FB38 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v3 = (id)static OS_os_log.sceneManagement;
    uint64_t v4 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v4, (uint64_t)"Calling updateAppShortcutParameters()", 37, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_1006C8714();
    static AppShortcutsProvider.updateAppShortcutParameters()();
  }
  else
  {
    __break(1u);
  }
}

void sub_1006C460C()
{
  uint64_t v1 = v0;
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v2 = (id)static OS_os_log.crlDefault;
  uint64_t v3 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"CloudKit syncing is enabled", 27, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardDataStore);
  if (v4)
  {
    type metadata accessor for CRLSyncPriorityProvider();
    swift_allocObject();
    id v5 = v4;
    uint64_t v6 = (void **)sub_100603010();
    type metadata accessor for CRLSyncDriver();
    swift_allocObject();
    id v7 = sub_100CEB648(v5, v6);
    uint64_t v8 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_syncDriver;
    *(void *)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_syncDriver) = v7;
    swift_release();
    if (*(void *)(v1 + v8))
    {
      swift_retain();
      sub_1008B74F0(1);
      sub_1008B74F0(1);
      swift_release();
      if (*(void *)(v1 + v8))
      {
        swift_retain();
        sub_1008B7824(0);
        sub_1008B7824(0);
        swift_release();
        if (*(void *)(v1 + v8))
        {
          swift_retain();
          sub_100C6D1BC(0, 0);
          sub_100CECFC8();
          swift_release();
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1006C47D4()
{
  uint64_t v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v32 - v7;
  uint64_t v9 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibrary;
  uint64_t v33 = v0;
  char v10 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibrary);
  if (!v10)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v11 = *(void *)&v10[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot];
  uint64_t v12 = sub_1005057FC(&qword_101670F30);
  id v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  uint64_t v14 = v13(v8, 1, 5, v12);
  __chkstk_darwin(v14, v15);
  Swift::String v31 = v8;
  swift_bridgeObjectRetain();
  uint64_t v16 = v10;
  uint64_t v17 = (void *)sub_1008E81F4(1, (uint64_t (*)(id))sub_10062DB78, (uint64_t)v30, v11);
  swift_bridgeObjectRelease();
  sub_1006C6EB8((uint64_t)v8);

  if (!v17)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"logAppLaunchAnalytics()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2, 227, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v31) = 2;
    v30[0] = "invalid nil found when unwrapping value";
    v30[1] = 39;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"logAppLaunchAnalytics()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2, 227);
    return;
  }
  id v18 = [v17 children];

  type metadata accessor for CRLBoardLibraryViewModelItemNode();
  unint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v21 = v33;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(v21 + v9);
  if (!v22) {
    goto LABEL_16;
  }
  uint64_t v23 = *(void *)(v22 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeFolderBoardCount);
  if (!v23)
  {
LABEL_17:
    __break(1u);
    return;
  }
  v13(v4, 3, 5, v12);
  if (*(void *)(v23 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v24 = sub_10095697C((uint64_t)v4);
    if (v25)
    {
      uint64_t v26 = *(void *)(*(void *)(v23 + 56) + 8 * v24);
      swift_bridgeObjectRelease();
      sub_1006C6EB8((uint64_t)v4);
      unint64_t v27 = sub_1007DFED0();
      id v28 = [self mainScreen];
      id v29 = [v28 traitCollection];

      LODWORD(v28) = [v29 crl_isUserInterfaceStyleDark];
      sub_1007E13D8(v20, v26, (int)v28, v27, 0);
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
  }
  sub_1006C6EB8((uint64_t)v4);
}

void sub_1006C4B8C(void *a1)
{
  uint64_t v2 = v1;
  v145.receiver = v1;
  v145.super_class = (Class)type metadata accessor for CRLiOSAppDelegate();
  [super buildMenuWithBuilder:a1];
  sub_1006C6B2C();
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = sub_100A70114();

    if (v6)
    {

      [a1 removeMenuForIdentifier:*(void *)&v2[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_insertMenuIdentifier]];
      [a1 removeMenuForIdentifier:*(void *)&v2[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_autoFillMenuIdentifier]];
    }
  }
  sub_10050BF48(0, (unint64_t *)&qword_101672E50);
  id v7 = [a1 system];
  id v8 = [self mainSystem];
  char v9 = static NSObject.== infix(_:_:)();

  if (v9)
  {
    uint64_t v140 = a1;
    char v10 = self;
    id v11 = [v10 mainBundle];
    NSString v12 = String._bridgeToObjectiveC()();
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v11 localizedStringForKey:v12 value:v13 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_10050BF48(0, (unint64_t *)&unk_10167B160);
    uint64_t v15 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    uint64_t v16 = v10;
    id v17 = [v10 mainBundle];
    NSString v18 = String._bridgeToObjectiveC()();
    NSString v19 = String._bridgeToObjectiveC()();
    id v20 = [v17 localizedStringForKey:v18 value:v19 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_10117DF50;
    *(void *)(v22 + 32) = v15;
    *(void *)(v22 + 40) = v21;
    UIMenuElementSize v141 = v22;
    specialized Array._endMutation()();
    uint64_t v135 = v21;
    if ((unint64_t)v141 >> 62)
    {
      sub_10050BF48(0, &qword_10167ADE0);
      id v106 = v15;
      id v107 = v21;
      swift_bridgeObjectRetain();
      UIMenuElementSize preferredElementSize = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v23 = v15;
      id v24 = v21;
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10050BF48(0, &qword_10167ADE0);
      UIMenuElementSize preferredElementSize = v141;
    }
    swift_bridgeObjectRelease();
    sub_10050BF48(0, &qword_101673A80);
    v26._countAndFlagsBits = 0;
    v26._object = (void *)0xE000000000000000;
    v146.value.super.Class isa = 0;
    v146.is_nil = 0;
    v134.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v26, (Swift::String_optional)0, v146, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, 0).super.super.isa;
    [v140 insertChildMenu:atStartOfMenuForIdentifier:];
    uint64_t v139 = v10;
    id v27 = [v10 mainBundle];
    NSString v28 = String._bridgeToObjectiveC()();
    NSString v29 = String._bridgeToObjectiveC()();
    id v30 = [v27 localizedStringForKey:v28 value:v29 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Swift::String v31 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_101177E70;
    *(void *)(v32 + 32) = v31;
    UIMenuElementSize v142 = v32;
    specialized Array._endMutation()();
    int64_t v136 = v15;
    uint64_t v133 = v31;
    if ((unint64_t)v142 >> 62)
    {
      sub_10050BF48(0, &qword_10167ADE0);
      id v108 = v31;
      swift_bridgeObjectRetain();
      UIMenuElementSize v34 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v33 = v31;
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10050BF48(0, &qword_10167ADE0);
      UIMenuElementSize v34 = v142;
    }
    swift_bridgeObjectRelease();
    v35._countAndFlagsBits = 0;
    v35._object = (void *)0xE000000000000000;
    v147.value.super.Class isa = 0;
    v147.is_nil = 0;
    v132.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v35, (Swift::String_optional)0, v147, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v34, 0).super.super.isa;
    [v140 insertChildMenu:atEndOfMenuForIdentifier:];
    id v36 = [v10 mainBundle];
    NSString v37 = String._bridgeToObjectiveC()();
    NSString v38 = String._bridgeToObjectiveC()();
    id v39 = [v36 localizedStringForKey:v37 value:v38 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    UIImage_optional v40 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    id v41 = [v16 mainBundle];
    NSString v42 = String._bridgeToObjectiveC()();
    NSString v43 = String._bridgeToObjectiveC()();
    id v44 = [v41 localizedStringForKey:v42 value:v43 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v45 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    id v46 = [v16 mainBundle];
    NSString v47 = String._bridgeToObjectiveC()();
    NSString v48 = String._bridgeToObjectiveC()();
    id v49 = [v46 localizedStringForKey:v47 value:v48 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    double v50 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    uint64_t v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_10117FBD0;
    *(void *)(v51 + 32) = v40;
    *(void *)(v51 + 40) = v45;
    *(void *)(v51 + 48) = v50;
    UIMenuElementSize v143 = v51;
    specialized Array._endMutation()();
    Swift::Int v130 = v45;
    Swift::Int v131 = v40;
    Swift::Int v129 = v50;
    if ((unint64_t)v143 >> 62)
    {
      sub_10050BF48(0, &qword_10167ADE0);
      id v109 = v40;
      id v110 = v45;
      id v111 = v50;
      swift_bridgeObjectRetain();
      UIMenuElementSize v55 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v52 = v40;
      id v53 = v45;
      id v54 = v50;
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10050BF48(0, &qword_10167ADE0);
      UIMenuElementSize v55 = v143;
    }
    swift_bridgeObjectRelease();
    v56._countAndFlagsBits = 0;
    v56._object = (void *)0xE000000000000000;
    v148.value.super.Class isa = 0;
    v148.is_nil = 0;
    v128.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v56, (Swift::String_optional)0, v148, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v55, 0).super.super.isa;
    [v140 insertChildMenu:atStartOfMenuForIdentifier:];
    id v57 = [v16 mainBundle];
    NSString v58 = String._bridgeToObjectiveC()();
    NSString v59 = String._bridgeToObjectiveC()();
    id v60 = [v57 localizedStringForKey:v58 value:v59 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v126 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    id v61 = [v16 mainBundle];
    NSString v62 = String._bridgeToObjectiveC()();
    NSString v63 = String._bridgeToObjectiveC()();
    id v64 = [v61 localizedStringForKey:v62 value:v63 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v115 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    id v65 = [v16 mainBundle];
    NSString v66 = String._bridgeToObjectiveC()();
    NSString v67 = String._bridgeToObjectiveC()();
    id v68 = [v65 localizedStringForKey:v66 value:v67 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v124 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    id v69 = [v16 mainBundle];
    NSString v70 = String._bridgeToObjectiveC()();
    NSString v71 = String._bridgeToObjectiveC()();
    id v72 = [v69 localizedStringForKey:v70 value:v71 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v122 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    id v73 = [v16 mainBundle];
    NSString v74 = String._bridgeToObjectiveC()();
    NSString v75 = String._bridgeToObjectiveC()();
    id v76 = [v73 localizedStringForKey:v74 value:v75 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    double v120 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    id v77 = [v16 mainBundle];
    NSString v78 = String._bridgeToObjectiveC()();
    NSString v79 = String._bridgeToObjectiveC()();
    id v80 = [v77 localizedStringForKey:v78 value:v79 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v118 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    id v81 = [v16 mainBundle];
    NSString v82 = String._bridgeToObjectiveC()();
    NSString v83 = String._bridgeToObjectiveC()();
    id v84 = [v81 localizedStringForKey:v82 value:v83 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v116 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    id v85 = [v16 mainBundle];
    NSString v86 = String._bridgeToObjectiveC()();
    NSString v87 = String._bridgeToObjectiveC()();
    id v88 = [v85 localizedStringForKey:v86 value:v87 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v112 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    uint64_t v114 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    uint64_t v137 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    char v89 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    double v113 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    [v113 setWantsPriorityOverSystemBehavior:1];
    uint64_t v90 = swift_allocObject();
    *(_OWORD *)(v90 + 16) = xmmword_101188890;
    *(void *)(v90 + 32) = v126;
    *(void *)(v90 + 40) = v115;
    *(void *)(v90 + 48) = v124;
    *(void *)(v90 + 56) = v122;
    *(void *)(v90 + 64) = v120;
    *(void *)(v90 + 72) = v118;
    *(void *)(v90 + 80) = v116;
    *(void *)(v90 + 88) = v112;
    *(void *)(v90 + 96) = v114;
    *(void *)(v90 + 104) = v137;
    *(void *)(v90 + 112) = v89;
    *(void *)(v90 + 120) = v113;
    UIMenuElementSize v144 = v90;
    specialized Array._endMutation()();
    id v138 = v126;
    id v127 = v115;
    id v125 = v124;
    id v123 = v122;
    id v121 = v120;
    id v119 = v118;
    id v117 = v116;
    id v91 = v112;
    id v92 = v114;
    id v93 = v137;
    id v94 = v89;
    id v95 = v113;
    id v96 = [v139 mainBundle];
    NSString v97 = String._bridgeToObjectiveC()();
    NSString v98 = String._bridgeToObjectiveC()();
    id v99 = [v96 localizedStringForKey:v97 value:v98 table:0];

    uint64_t v100 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v102 = v101;

    if ((unint64_t)v144 >> 62)
    {
      sub_10050BF48(0, &qword_10167ADE0);
      swift_bridgeObjectRetain();
      UIMenuElementSize v103 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10050BF48(0, &qword_10167ADE0);
      UIMenuElementSize v103 = v144;
    }
    swift_bridgeObjectRelease();
    v104._countAndFlagsBits = v100;
    v104._object = v102;
    v149.value.super.Class isa = 0;
    v149.is_nil = 0;
    Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v104, (Swift::String_optional)0, v149, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v103, 0).super.super.isa;
    [v140 insertSiblingMenu:isa afterMenuForIdentifier:UIMenuFormat];
  }
}

id sub_1006C6288()
{
  *(void *)&v0[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibrary] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardPreviewImageCache] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_stencilLibrary] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardDataStore] = 0;
  v0[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_didLogExtendedLaunchTime] = 0;
  uint64_t v1 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_applicationCoordinator;
  uint64_t v2 = qword_10166F7C8;
  uint64_t v3 = v0;
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_10168DB10;
  *(void *)&v3[v1] = qword_10168DB10;
  uint64_t v5 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_iCloudStatus;
  type metadata accessor for CRLiCloudStatusObserver();
  swift_allocObject();
  id v6 = v4;
  *(void *)&v3[v5] = sub_100AC42C8();
  *(void *)&v3[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharedBoardThumbnailManager] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_spotlightManager] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_syncDriver] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_keyboardMonitor] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_activeUseManager] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharingExtensionImporter] = 0;
  uint64_t v7 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_insertMenuIdentifier;
  *(void *)&v3[v7] = String._bridgeToObjectiveC()();
  uint64_t v8 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_autoFillMenuIdentifier;
  *(void *)&v3[v8] = String._bridgeToObjectiveC()();

  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for CRLiOSAppDelegate();
  return [super init];
}

id sub_1006C6450()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSAppDelegate();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSAppDelegate()
{
  return self;
}

void sub_1006C65C4(void *a1, char *a2)
{
  if (qword_10166FA40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v4 = (id)static OS_os_log.crlAppAnalytics;
  uint64_t v5 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v5, (uint64_t)"Setup app analytics", 19, 2, (uint64_t)_swiftEmptyArrayStorage);

  id v6 = &a2[OBJC_IVAR____TtC8Freeform21AASApplicationManager_dependencies];
  *(void *)id v6 = a1;
  *((void *)v6 + 1) = &off_10150CD08;
  swift_unknownObjectRelease();
  type metadata accessor for FlushManager();
  uint64_t v7 = *(void *)&a2[OBJC_IVAR____TtC8Freeform21AASApplicationManager_appSessionManager];
  id v8 = a1;
  swift_retain();
  sub_10063C6E4();
  sub_10063A324();
  type metadata accessor for Client();
  id v9 = [self mainBundle];
  Client.__allocating_init(bundle:)();
  uint64_t v10 = type metadata accessor for URLSessionUploadClientFactory();
  swift_allocObject();
  uint64_t v33 = v10;
  UIMenuElementSize v34 = &protocol witness table for URLSessionUploadClientFactory;
  uint64_t v29 = URLSessionUploadClientFactory.init()();
  uint64_t v11 = FlushManager.__allocating_init(appSessionManager:client:endpoint:contentType:config:clientFactory:)();
  *(void *)(swift_allocObject() + 16) = a2;
  NSString v12 = a2;
  dispatch thunk of FlushManager.repairThenFlush(repair:completion:)();
  swift_release();
  *(void *)&v12[OBJC_IVAR____TtC8Freeform21AASApplicationManager_flushManager] = v11;
  swift_retain();
  swift_release();
  swift_retain();
  NSString v13 = (void *)sub_10063C6E4();

  id v14 = objc_allocWithZone((Class)type metadata accessor for AASSessionManager());
  uint64_t v15 = (char *)sub_1006360CC(v7, v13, 0, 1);
  swift_release();

  uint64_t v16 = OBJC_IVAR____TtC8Freeform17AASSessionManager_sessionManager;
  swift_retain();
  uint64_t v17 = SessionManager.tracker.getter();
  swift_release();
  type metadata accessor for AASTrackersCoordinator();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 24) = 0u;
  *(_OWORD *)(v18 + 40) = 0u;
  *(void *)(v18 + 56) = 0;
  *(void *)(v18 + 64) = sub_100A45ED4((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v18 + 16) = v17;
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_retain();
  Tracker.onSessionChange(block:)();
  swift_release();
  swift_release_n();
  swift_release();
  *(void *)&v12[OBJC_IVAR____TtC8Freeform21AASApplicationManager_trackersCoordinator] = v18;
  swift_release();
  AppSessionManager.startAppSession(shouldCorrelateSceneSessions:)(0);
  NSString v19 = *(void **)&v12[OBJC_IVAR____TtC8Freeform21AASApplicationManager_rootSessionManager];
  *(void *)&v12[OBJC_IVAR____TtC8Freeform21AASApplicationManager_rootSessionManager] = v15;
  id v20 = v15;

  uint64_t v21 = *(void *)&v15[v16];
  swift_retain();
  unsigned __int8 v22 = sub_100A14E20();
  id v23 = &v12[OBJC_IVAR____TtC8Freeform21AASApplicationManager_sessionPropertiesController];
  uint64_t v24 = *(void *)&v12[OBJC_IVAR____TtC8Freeform21AASApplicationManager_sessionPropertiesController];
  *(void *)id v23 = v21;
  *((void *)v23 + 1) = v22;
  *((void *)v23 + 2) = v26;
  *((void *)v23 + 3) = v27;
  v23[32] = v25 & 1;
  sub_10063F550(v24);
  if (*(void *)v23)
  {
    uint64_t v30 = *(void *)v23;
    LOBYTE(v31) = *((void *)v23 + 1);
    uint64_t v32 = *((void *)v23 + 2);
    uint64_t v33 = *((void *)v23 + 3);
    LOBYTE(v34) = v23[32] & 1;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_100A17C7C();
    swift_bridgeObjectRelease();
    swift_release();
  }
  id v28 = [self defaultCenter];
  [v28 addObserver:v12 selector:"applicationWillTerminate" name:UIApplicationWillTerminateNotification object:0];
  [v28 addObserver:v12 selector:"applicationWillResignActive" name:UIApplicationWillResignActiveNotification object:0];
  [v28 addObserver:v12 selector:"applicationWillEnterForeground" name:UIApplicationWillEnterForegroundNotification object:0];
  [v28 addObserver:v12 selector:"applicationDidEnterBackground" name:UIApplicationDidEnterBackgroundNotification object:0];
  if (qword_10166EDD0 != -1) {
    swift_once();
  }
  [v28 addObserver:v12 selector:@"userIdentifierDidReset:" name:static NSNotificationName.AASUserIdentifierDidResetNotification object:0 v30, v31, v32, v33, v34];
  swift_release();
}

void sub_1006C6B2C()
{
  id v0 = [self sharedApplication];
  id v1 = [v0 connectedScenes];

  sub_10050BF48(0, &qword_10167B138);
  sub_1006C6E50();
  uint64_t v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v2 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    Set.Iterator.init(_cocoa:)();
    uint64_t v2 = v21;
    uint64_t v19 = v22;
    uint64_t v3 = v23;
    uint64_t v4 = v24;
    unint64_t v5 = v25;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v19 = v2 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(v2 + 56);
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  while (1)
  {
    uint64_t v10 = v4;
    if ((v2 & 0x8000000000000000) == 0) {
      break;
    }
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_34;
    }
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v13 = v20;
    swift_unknownObjectRelease();
    if (!v20) {
      goto LABEL_34;
    }
LABEL_30:
    self;
    uint64_t v17 = (void *)swift_dynamicCastObjCClass();
    if (v17)
    {
      id v18 = [v17 delegate];

      if (v18)
      {
        type metadata accessor for CRLiOSSceneDelegate();
        if (swift_dynamicCastClass()) {
          goto LABEL_34;
        }
        swift_unknownObjectRelease();
      }
    }
    else
    {
    }
  }
  if (v5)
  {
    unint64_t v11 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v12 = v11 | (v4 << 6);
LABEL_29:
    id v13 = *(id *)(*(void *)(v2 + 48) + 8 * v12);
    if (!v13) {
      goto LABEL_34;
    }
    goto LABEL_30;
  }
  int64_t v14 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v14 >= v9) {
      goto LABEL_34;
    }
    unint64_t v15 = *(void *)(v19 + 8 * v14);
    ++v4;
    if (!v15)
    {
      uint64_t v4 = v10 + 2;
      if (v10 + 2 >= v9) {
        goto LABEL_34;
      }
      unint64_t v15 = *(void *)(v19 + 8 * v4);
      if (!v15)
      {
        uint64_t v4 = v10 + 3;
        if (v10 + 3 >= v9) {
          goto LABEL_34;
        }
        unint64_t v15 = *(void *)(v19 + 8 * v4);
        if (!v15)
        {
          uint64_t v4 = v10 + 4;
          if (v10 + 4 >= v9) {
            goto LABEL_34;
          }
          unint64_t v15 = *(void *)(v19 + 8 * v4);
          if (!v15)
          {
            uint64_t v16 = v10 + 5;
            while (v9 != v16)
            {
              unint64_t v15 = *(void *)(v19 + 8 * v16++);
              if (v15)
              {
                uint64_t v4 = v16 - 1;
                goto LABEL_28;
              }
            }
LABEL_34:
            sub_10052E1EC();
            return;
          }
        }
      }
    }
LABEL_28:
    unint64_t v5 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_29;
  }
  __break(1u);
}

unint64_t sub_1006C6E50()
{
  unint64_t result = qword_10167B140;
  if (!qword_10167B140)
  {
    sub_10050BF48(255, &qword_10167B138);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B140);
  }
  return result;
}

uint64_t sub_1006C6EB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1006C6F14()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v28 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v3);
  unint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v7);
  int64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  int64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  [self registerUserDefaults];
  sub_10101F960();
  id v15 = [self defaultCenter];
  [v15 addObserver:v1 selector:"applicationDidEnterBackground" name:UIApplicationDidEnterBackgroundNotification object:0];

  id v16 = *(id *)&v1[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_applicationCoordinator];
  sub_100A657C0();

  id v17 = [self sharedKeyboardMonitor];
  id v18 = *(void **)&v1[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_keyboardMonitor];
  *(void *)&v1[OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_keyboardMonitor] = v17;

  sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v14, enum case for DispatchQoS.QoSClass.default(_:), v10);
  uint64_t v19 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v1;
  unint64_t v32 = (unint64_t)sub_1006C8C58;
  uint64_t v33 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  uint64_t v31 = (ValueMetadata *)&unk_10150F410;
  uint64_t v21 = _Block_copy(aBlock);
  uint64_t v22 = v1;
  static DispatchQoS.unspecified.getter();
  uint64_t v29 = _swiftEmptyArrayStorage;
  sub_1006C89F0((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_10056B494();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v27);
  swift_release();
  uint64_t v31 = &type metadata for CRLFeatureFlags;
  unint64_t v32 = sub_1005396A8();
  LOBYTE(aBlock[0]) = 1;
  LOBYTE(v2) = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
  if (v2)
  {
    if (qword_10166EDC8 != -1) {
      swift_once();
    }
    uint64_t v23 = (char *)static AASApplicationManager.shared;
    id v24 = [objc_allocWithZone((Class)type metadata accessor for CRLAASApplicationManagerDependencies()) init];
    sub_1006C65C4(v24, v23);
  }
  return 1;
}

void sub_1006C73E4()
{
  id v0 = self;
  id v1 = [v0 standardUserDefaults];
  char v2 = [v1 BOOLForKey:@"CRLDisplayEdgeGuides"];

  id v3 = [v0 standardUserDefaults];
  char v4 = [v3 BOOLForKey:@"CRLDisplayCenterGuides"];

  id v5 = [v0 standardUserDefaults];
  char v6 = [v5 BOOLForKey:@"CRLDisplaySpacingGuides"];

  id v7 = [v0 standardUserDefaults];
  char v8 = [v7 BOOLForKey:@"CRLDisplaySizingGuides"];

  id v9 = [v0 standardUserDefaults];
  char v10 = [v9 BOOLForKey:@"CRLUseHapticFeedbackWhenSnapping"];

  id v11 = [v0 standardUserDefaults];
  char v12 = [v11 BOOLForKey:@"CRLSelectAndScrollWithApplePencil"];

  sub_100BDC638(v2, v4, v6, v8, v10, v12);
}

void sub_1006C7594()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v142 = (uint64_t)&v124 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v134 = (uint64_t)&v124 - v7;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v136 = *(void *)(v8 - 8);
  uint64_t v137 = v8;
  __chkstk_darwin(v8, v9);
  id v125 = (char *)&v124 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v133 = (char *)&v124 - v13;
  uint64_t v14 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v135 = (char *)&v124 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = self;
  id v18 = [v17 sharedApplication];
  [v18 setApplicationSupportsShakeToEdit:1];

  uint64_t v19 = self;
  uint64_t v153 = sub_1006C4198;
  uint64_t v154 = 0;
  aBlock = _NSConcreteStackBlock;
  uint64_t v150 = *(void ***)"";
  uint64_t v151 = sub_1006C4284;
  uint64_t v152 = &unk_10150F348;
  uint64_t v20 = _Block_copy(&aBlock);
  [v19 loadDataIfNeededWithCompletion:v20];
  _Block_release(v20);
  [self backgroundLoadAllBrushStrokes];
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  id v140 = v17;
  swift_beginAccess();
  uint64_t v21 = (void *)static OS_os_log.crlDefault;
  uint64_t v22 = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  long long v138 = xmmword_10117E810;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v24 = v21;
  uint64_t v25 = sub_100A659F4();
  uint64_t v27 = v26;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v28 = sub_100528BE4();
  *(void *)(inited + 64) = v28;
  *(void *)(inited + 32) = v25;
  *(void *)(inited + 40) = v27;
  uint64_t v29 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v24, (uint64_t)&_mh_execute_header, v29, (uint64_t)"App version is %{public}@.", 26, 2, inited);
  swift_setDeallocating();
  uint64_t v30 = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  type metadata accessor for CRLBoardDataStoreProvider();
  uint64_t v31 = sub_100E09F4C();
  uint64_t v141 = v22;
  *(void *)&long long v138 = v30;
  unint64_t v139 = v28;
  uint64_t v32 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardDataStore;
  uint64_t v33 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardDataStore);
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardDataStore) = v31;

  id v34 = [self standardUserDefaults];
  [v34 setURL:0 forKey:@"CRLEnsureOwnershipOfDataUserDefault"];
  Swift::String v35 = *(void ***)(v1 + v32);
  if (!v35)
  {
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v153 = (id (*)(id))&type metadata for CRLDataStoreUpgrader;
  uint64_t v154 = &off_101534D78;
  aBlock = v35;
  uint64_t v150 = v35;
  UIMenu v132 = v35;
  unint64_t v36 = sub_1002094A4();
  sub_100F87A18(v36);
  sub_1006C460C();
  uint64_t v37 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_syncDriver;
  uint64_t v38 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_syncDriver);
  if (v38)
  {
    uint64_t v39 = *(void *)(v38 + 40);
    swift_retain();
LABEL_10:
    uint64_t v47 = *(void *)(v38 + 72);
    swift_retain();
    goto LABEL_11;
  }
  UIImage_optional v40 = *(void **)(v1 + v32);
  if (!v40)
  {
LABEL_50:
    __break(1u);
    return;
  }
  uint64_t v41 = qword_10166EE68;
  id v42 = v40;
  if (v41 != -1) {
    swift_once();
  }
  NSString v43 = (void *)qword_10171A488;
  type metadata accessor for CRLBoardShareController();
  id v44 = (void *)swift_allocObject();
  id v45 = v43;
  swift_defaultActor_initialize();
  type metadata accessor for CRLZoneShareController();
  v44[16] = 0;
  v44[17] = 0;
  uint64_t v46 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v46 + 112) = v45;
  v44[14] = v46;
  v44[15] = v42;
  uint64_t v39 = (uint64_t)v44;
  uint64_t v38 = *(void *)(v1 + v37);
  if (v38) {
    goto LABEL_10;
  }
  type metadata accessor for CRLSyncPriorityProvider();
  swift_allocObject();
  uint64_t v47 = sub_100603010();
LABEL_11:
  id v131 = v34;
  NSString v48 = *(void **)(v1 + v32);
  if (!v48)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  id v49 = objc_allocWithZone((Class)type metadata accessor for CRLBoardLibrary());
  swift_retain();
  swift_retain();
  double v50 = sub_100EE8B50(v48, v39, v47);
  uint64_t v51 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibrary;
  id v52 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibrary);
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibrary) = v50;
  id v53 = v50;

  id v54 = *(void **)(v1 + v51);
  if (!v54)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v129 = v39;
  UIMenuElementSize v55 = (objc_class *)type metadata accessor for CRLBoardLibraryCommandController();
  Swift::String v56 = (char *)objc_allocWithZone(v55);
  *(void *)&v56[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_undoStack] = _swiftEmptyArrayStorage;
  *(void *)&v56[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_redoStack] = _swiftEmptyArrayStorage;
  id v57 = &v56[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_boardLibrary];
  *(void *)id v57 = v54;
  *((void *)v57 + 1) = &off_101532D48;
  v148.receiver = v56;
  v148.super_class = v55;
  id v58 = v54;
  [super init];
  id v60 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController) = v59;

  id v61 = *(void **)(v1 + v51);
  if (!v61)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  id v62 = objc_allocWithZone((Class)type metadata accessor for CRLBoardPreviewImageCache());
  id v63 = v61;
  id v64 = sub_10062B5DC(v63);

  uint64_t v65 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardPreviewImageCache;
  NSString v66 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardPreviewImageCache);
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardPreviewImageCache) = v64;

  UIImage_optional v146 = &type metadata for CRLFeatureFlags;
  unint64_t v147 = sub_1005396A8();
  v145[0] = 20;
  LOBYTE(v64) = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v145);
  if (v64)
  {
    NSString v67 = *(void **)(v1 + v32);
    if (!v67)
    {
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    type metadata accessor for CRLStencilLibrary();
    swift_allocObject();
    *(void *)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_stencilLibrary) = sub_100BD5F94(v67);
    swift_release();
  }
  uint64_t v127 = v47;
  uint64_t v130 = v51;
  id v68 = *(void **)(v1 + v65);
  if (!v68) {
    goto LABEL_44;
  }
  type metadata accessor for CRLSharedBoardThumbnailManager();
  swift_allocObject();
  id v69 = v53;
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharedBoardThumbnailManager) = sub_100FCF1C4(v69, v68);
  swift_release();
  NSString v70 = *(void **)(v1 + v65);
  type metadata accessor for CRLSpotlightManager(0);
  swift_allocObject();
  id v71 = v70;
  uint64_t v126 = v69;
  id v72 = sub_100AF74E0(v126, v70);
  uint64_t v128 = v1;
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_spotlightManager) = v72;
  swift_release();
  id v73 = (void *)static OS_os_log.crlDefault;
  uint64_t v74 = swift_initStackObject();
  *(_OWORD *)(v74 + 16) = xmmword_10117D8C0;
  id v75 = v73;
  id v76 = v140;
  id v77 = [v140 sharedApplication];
  id v78 = [v77 _launchTestName];

  if (!v78)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v79 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v81 = v80;

  unint64_t v82 = v139;
  *(void *)(v74 + 56) = &type metadata for String;
  *(void *)(v74 + 64) = v82;
  *(void *)(v74 + 32) = v79;
  *(void *)(v74 + 40) = v81;
  id v83 = [v76 sharedApplication];
  id v84 = [v83 _extendLaunchTest];

  if (!v84)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v87 = v86;

  *(void *)(v74 + 96) = &type metadata for String;
  *(void *)(v74 + 104) = v82;
  *(void *)(v74 + 72) = v85;
  *(void *)(v74 + 80) = v87;
  uint64_t v88 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v75, (uint64_t)&_mh_execute_header, v88, (uint64_t)"Launch Test: %@  Extended Launch Test: %@", 41, 2, v74);
  swift_setDeallocating();
  swift_arrayDestroy();

  uint64_t v89 = v128;
  uint64_t v90 = *(void **)(v128 + v130);
  if (!v90)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v91 = type metadata accessor for TaskPriority();
  id v92 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56);
  uint64_t v93 = (uint64_t)v135;
  v92(v135, 1, 1, v91);
  id v94 = (void *)swift_allocObject();
  v94[2] = 0;
  v94[3] = 0;
  v94[4] = v90;
  id v95 = v90;
  sub_100B107F4(v93, (uint64_t)&unk_10167B178, (uint64_t)v94);
  swift_release();
  sub_100522F00(v93, &qword_101672BB0);

  sub_100E1BB2C();
  sub_1006C73E4();
  v92((char *)v93, 1, 1, v91);
  type metadata accessor for MainActor();
  id v96 = v126;
  uint64_t v97 = static MainActor.shared.getter();
  NSString v98 = (void *)swift_allocObject();
  v98[2] = v97;
  v98[3] = &protocol witness table for MainActor;
  v98[4] = v96;
  sub_1005912D0(v93, (uint64_t)&unk_10167B188, (uint64_t)v98);
  swift_release();
  id v99 = [self defaultManager];
  id v100 = sub_10021E9D8();
  uint64_t v102 = v136;
  uint64_t v101 = v137;
  if (!v100)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  UIMenuElementSize v103 = v100;
  id v104 = [v99 containerURLForSecurityApplicationGroupIdentifier:v100];

  if (v104)
  {
    uint64_t v105 = v142;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v102 + 56))(v105, 0, 1, v101);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48))(v105, 1, v101) != 1) {
      goto LABEL_27;
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v102 + 56))(v142, 1, 1, v101);
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"application(_:didFinishLaunchingWithOptions:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2, 156, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"application(_:didFinishLaunchingWithOptions:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2, 156);
LABEL_27:
  uint64_t v106 = v134;
  sub_100602000(v142, v134);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48))(v106, 1, v101) == 1)
  {
    sub_100522F00(v106, &qword_101672E90);
    if (qword_10166FA70 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v107 = (id)static OS_os_log.crlSharingExtension;
    uint64_t v108 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v107, (uint64_t)&_mh_execute_header, v108, (uint64_t)"Unable to start sharing extension import. App Group container not found", 71, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    id v109 = v133;
    (*(void (**)(char *, uint64_t, uint64_t))(v102 + 32))(v133, v106, v101);
    uint64_t v110 = (uint64_t)v125;
    (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v125, v109, v101);
    id v111 = objc_allocWithZone((Class)type metadata accessor for CRLSEImporter());
    uint64_t v112 = v96;
    id v113 = sub_100A52DD8(v110, v112);

    uint64_t v114 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharingExtensionImporter;
    unint64_t v115 = *(void **)(v89 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharingExtensionImporter);
    *(void *)(v89 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharingExtensionImporter) = v113;

    uint64_t v116 = *(void **)(v89 + v114);
    if (v116)
    {
      id v117 = v116;
      sub_100A4D644();
      sub_100A4D028();
      [self addFilePresenter:v117];
      id v118 = [self defaultCenter];
      if (qword_1016700C0 != -1) {
        swift_once();
      }
      [v118 addObserver:v117 selector:"exportLibrarySnapshot" name:qword_10171C6C8 object:*(void *)&v117[OBJC_IVAR____TtC8Freeform13CRLSEImporter_boardLibrary]];
    }
    (*(void (**)(char *, uint64_t))(v102 + 8))(v133, v101);
  }
  id v119 = v131;
  if (qword_101670158 != -1) {
    swift_once();
  }
  unint64_t v143 = 0xD00000000000001FLL;
  unint64_t v144 = 0x800000010123B260;
  double v120 = v96;
  swift_retain();
  AnyHashable.init<A>(_:)();
  *(void *)(swift_allocObject() + 16) = v120;
  id v121 = v120;
  AppDependencyManager.add<A>(key:dependency:)();
  swift_release();
  swift_release();
  sub_100522F00((uint64_t)v145, &qword_10167B190);

  id v122 = (id)static OS_os_log.crlDefault;
  uint64_t v123 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v122, (uint64_t)&_mh_execute_header, v123, (uint64_t)"Freeform did finish launching", 29, 2, (uint64_t)_swiftEmptyArrayStorage);

  swift_release();
  swift_release();

  sub_1006C8C04((uint64_t)&aBlock);
}

unint64_t sub_1006C8714()
{
  unint64_t result = qword_10167B150;
  if (!qword_10167B150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B150);
  }
  return result;
}

void sub_1006C8768()
{
  uint64_t v1 = v0;
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v2 = (id)static OS_os_log.crlDefault;
  uint64_t v3 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"applicationWillTerminate", 24, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v4 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibrary;
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibrary);
  if (!v5)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v6 = v5;
  sub_100EDAE34();

  sub_1006C47D4();
  if (qword_10166FB38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v7 = (id)static OS_os_log.sceneManagement;
  uint64_t v8 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Calling updateAppShortcutParameters()", 37, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_1006C8714();
  static AppShortcutsProvider.updateAppShortcutParameters()();
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharingExtensionImporter);
  if (v9)
  {
    uint64_t v10 = self;
    uint64_t v11 = v9;
    [v10 removeFilePresenter:v11];
    id v12 = [self defaultCenter];
    if (qword_1016700C0 != -1) {
      swift_once();
    }
    [v12 removeObserver:v11 name:qword_10171C6C8 object:*(void *)&v11[OBJC_IVAR____TtC8Freeform13CRLSEImporter_boardLibrary]];
  }
  uint64_t v13 = *(void **)(v1 + v4);
  if (!v13) {
    goto LABEL_14;
  }
  id v14 = v13;
  sub_100EEA6E8();

  uint64_t v15 = *(void **)(v1 + v4);
  if (v15)
  {
    id v16 = v15;
    sub_100EDB078();

    return;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_1006C89F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006C8A38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1006C8A48()
{
  return swift_release();
}

uint64_t sub_1006C8A54(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_100528488;
  return sub_100F1A650(a1, v4, v5, v6);
}

uint64_t sub_1006C8B0C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100528D08;
  return sub_1006C42D8();
}

uint64_t sub_1006C8BC0()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1006C8BF8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return v2;
}

uint64_t sub_1006C8C04(uint64_t a1)
{
  return a1;
}

void sub_1006C8C58()
{
  sub_1006C40F0(*(void *)(v0 + 16));
}

void *sub_1006C8C60()
{
  return variable initialization expression of CRLAnalyticsOSSignpostManager._unsafe_contextList();
}

uint64_t sub_1006C8C7C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1006C8CC4@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1006C8F98(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1006C8CF0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1006C8D50()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1006C8DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1006C921C();
  unint64_t v7 = sub_1006C9174();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1006C8E10()
{
  return CRValue<>.init(from:)();
}

uint64_t sub_1006C8E7C()
{
  return CRValue<>.encode(to:)();
}

uint64_t sub_1006C8ED8(uint64_t a1)
{
  unint64_t v2 = sub_1006C921C();
  unint64_t v3 = sub_1006C91C8();

  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for Int);
}

uint64_t sub_1006C8F38(unint64_t a1)
{
  if (a1 < 0xA) {
    return byte_101188ABA[a1];
  }
  type metadata accessor for CRLFreehandDrawingToolType(0);
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

unint64_t sub_1006C8F98(unint64_t result)
{
  if (result >= 0xA) {
    return 10;
  }
  return result;
}

uint64_t sub_1006C8FA8(char a1)
{
  return qword_101188AC8[a1];
}

unsigned char *storeEnumTagSinglePayload for CRLFreehandDrawingToolTypeData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006C9088);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFreehandDrawingToolTypeData()
{
  return &type metadata for CRLFreehandDrawingToolTypeData;
}

unint64_t sub_1006C90C4()
{
  unint64_t result = qword_10167B198;
  if (!qword_10167B198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B198);
  }
  return result;
}

unint64_t sub_1006C911C()
{
  unint64_t result = qword_10167B1A0;
  if (!qword_10167B1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B1A0);
  }
  return result;
}

unint64_t sub_1006C9174()
{
  unint64_t result = qword_10167B1A8;
  if (!qword_10167B1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B1A8);
  }
  return result;
}

unint64_t sub_1006C91C8()
{
  unint64_t result = qword_10167B1B0;
  if (!qword_10167B1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B1B0);
  }
  return result;
}

unint64_t sub_1006C921C()
{
  unint64_t result = qword_10167B1B8;
  if (!qword_10167B1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B1B8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for CRLLayerAnimationGroup(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for CRLLayerAnimationGroup()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for CRLLayerAnimationGroup(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for CRLLayerAnimationGroup(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for CRLLayerAnimationGroup()
{
  return &type metadata for CRLLayerAnimationGroup;
}

double sub_1006C9348(uint64_t a1, double a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    unsigned int v4 = (void *)(a1 + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v5 = v4[3];
      uint64_t v6 = v4[4];
      sub_10050F848(v4, v5);
      uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 40))(v5, v6);
      sub_1006E1FC0(v7);
      v4 += 5;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  return a2;
}

double sub_1006C9400(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1)
  {
    long long v17 = 0u;
    long long v18 = 0u;
    uint64_t v19 = 0;
LABEL_6:
    sub_1006C99F4((uint64_t)&v17);
    return 0.0;
  }
  sub_1005498A4(a1 + 32, (uint64_t)&v14);
  swift_bridgeObjectRetain();
  uint64_t v3 = v1 - 1;
  if (v1 != 1)
  {
    uint64_t v8 = a1 + 72;
    do
    {
      sub_1005498A4(v8, (uint64_t)&v17);
      uint64_t v10 = v15;
      uint64_t v9 = v16;
      sub_10050F848(&v14, v15);
      double v11 = (*(double (**)(uint64_t))(*(void *)(v9 + 8) + 40))(v10);
      uint64_t v13 = *((void *)&v18 + 1);
      uint64_t v12 = v19;
      sub_10050F848(&v17, *((uint64_t *)&v18 + 1));
      if (v11 >= (*(double (**)(uint64_t))(*(void *)(v12 + 8) + 40))(v13))
      {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v17);
      }
      else
      {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v14);
        sub_10053974C(&v17, (uint64_t)&v14);
      }
      v8 += 40;
      --v3;
    }
    while (v3);
  }
  sub_10053974C(&v14, (uint64_t)&v17);
  swift_bridgeObjectRelease();
  uint64_t v4 = *((void *)&v18 + 1);
  if (!*((void *)&v18 + 1)) {
    goto LABEL_6;
  }
  uint64_t v5 = v19;
  sub_10050F848(&v17, *((uint64_t *)&v18 + 1));
  double v6 = (*(double (**)(uint64_t))(*(void *)(v5 + 8) + 40))(v4);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v17);
  return v6;
}

double sub_1006C9588()
{
  return sub_1006C9348(*(void *)v0, *(double *)(v0 + 8));
}

double sub_1006C9594()
{
  return sub_1006C9400(*v0);
}

uint64_t sub_1006C959C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = __chkstk_darwin(a1, a1);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  uint64_t v13 = (char *)&v20 - v12;
  long long v14 = *(void (**)(char *))(v7 + 16);
  v14((char *)&v20 - v12);
  uint64_t v15 = (double *)*a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = (uint64_t)v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v15 = sub_100F62770(0, *((void *)v15 + 2) + 1, 1, v15);
    *a2 = (uint64_t)v15;
  }
  unint64_t v18 = *((void *)v15 + 2);
  unint64_t v17 = *((void *)v15 + 3);
  if (v18 >= v17 >> 1)
  {
    uint64_t v15 = sub_100F62770((double *)(v17 > 1), v18 + 1, 1, v15);
    *a2 = (uint64_t)v15;
  }
  ((void (*)(char *, char *, uint64_t))v14)(v10, v13, a3);
  sub_100667930(v18, (uint64_t)v10, a2, a3, a4);
  *a2 = (uint64_t)v15;
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, a3);
}

double sub_1006C9744(uint64_t a1, double a2)
{
  uint64_t v20 = _swiftEmptyArrayStorage;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      sub_1006C9924(v4, (uint64_t)v19);
      sub_1006C998C((uint64_t)v19, (uint64_t)&v15);
      if (v16)
      {
        sub_10053974C(&v15, (uint64_t)v18);
        sub_10053974C(v18, (uint64_t)&v15);
        uint64_t v5 = v20;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v5 = sub_100F62770(0, *((void *)v5 + 2) + 1, 1, v5);
          uint64_t v20 = v5;
        }
        unint64_t v7 = *((void *)v5 + 2);
        unint64_t v6 = *((void *)v5 + 3);
        if (v7 >= v6 >> 1) {
          uint64_t v20 = sub_100F62770((double *)(v6 > 1), v7 + 1, 1, v5);
        }
        uint64_t v8 = v16;
        uint64_t v9 = v17;
        uint64_t v10 = sub_1005231B4((uint64_t)&v15, v16);
        __chkstk_darwin(v10, v10);
        uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v13 + 16))(v12);
        sub_100667930(v7, (uint64_t)v12, (uint64_t *)&v20, v8, v9);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v15);
      }
      else
      {
        sub_1006C99F4((uint64_t)&v15);
      }
      v4 += 40;
      --v3;
    }
    while (v3);
  }
  return a2;
}

uint64_t sub_1006C9924(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101683FE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006C998C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101683FE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006C99F4(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101683FE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1006C9A58()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform10CRLCommand_committed);
}

void sub_1006C9A68()
{
}

id sub_1006C9B48()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommand();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLCommand()
{
  return self;
}

uint64_t initializeWithCopy for AnyCRLCommandChangeContext(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t *assignWithCopy for AnyCRLCommandChangeContext(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for AnyCRLCommandChangeContext(uint64_t a1, uint64_t a2)
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyCRLCommandChangeContext(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyCRLCommandChangeContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyCRLCommandChangeContext()
{
  return &type metadata for AnyCRLCommandChangeContext;
}

Swift::Int sub_1006C9D18()
{
  Hasher.init(_seed:)();
  AnyHashable.hash(into:)();
  Hasher._combine(_:)(*(void *)(v0 + 40));
  return Hasher._finalize()();
}

void sub_1006C9D64()
{
  AnyHashable.hash(into:)();
  Hasher._combine(_:)(*(void *)(v0 + 40));
}

Swift::Int sub_1006C9D94()
{
  Hasher.init(_seed:)();
  AnyHashable.hash(into:)();
  Hasher._combine(_:)(*(void *)(v0 + 40));
  return Hasher._finalize()();
}

BOOL sub_1006C9DDC(uint64_t a1, uint64_t a2)
{
  return (static AnyHashable.== infix(_:_:)() & 1) != 0 && *(void *)(a1 + 40) == *(void *)(a2 + 40);
}

unint64_t sub_1006C9E24()
{
  unint64_t result = qword_10167B1F8;
  if (!qword_10167B1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B1F8);
  }
  return result;
}

Swift::Int sub_1006C9E78()
{
  Swift::UInt64 v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1006C9EC0()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1006C9EEC()
{
  Swift::UInt64 v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

ValueMetadata *type metadata accessor for CRLCommandChangeHint()
{
  return &type metadata for CRLCommandChangeHint;
}

unint64_t sub_1006C9F44()
{
  unint64_t result = qword_10167B200;
  if (!qword_10167B200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B200);
  }
  return result;
}

unint64_t sub_1006C9F9C()
{
  unint64_t result = qword_10167B208;
  if (!qword_10167B208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B208);
  }
  return result;
}

unint64_t sub_1006C9FF4()
{
  unint64_t result = qword_10167B210;
  if (!qword_10167B210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B210);
  }
  return result;
}

unint64_t sub_1006CA04C()
{
  unint64_t result = qword_10167B218;
  if (!qword_10167B218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B218);
  }
  return result;
}

uint64_t sub_1006CA21C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1005057FC(&qword_10167B268);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (uint64_t *)((char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform34CRLCommandReorderContainerChildren_children);
  uint64_t v41 = v10;
  if ((v9 & 0xC000000000000001) != 0)
  {
    id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_18;
    }
    id v11 = *(id *)(v9 + 32);
  }
  uint64_t v12 = v11;
  uint64_t v40 = v3;
  uint64_t v13 = v2 + OBJC_IVAR____TtC8Freeform34CRLCommandReorderContainerChildren_indices;
  uint64_t v14 = IndexSet.first.getter();
  if (v15)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReorderContainerChildren.swift", 106, 2, 30, (uint64_t)"trying to reorder a child that we don't know about!", 51, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"trying to reorder a child that we don't know about!");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReorderContainerChildren.swift", 106, 2, 30);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v36, v37);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v14;
  uint64_t v17 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform34CRLCommandReorderContainerChildren_container);
  uint64_t v18 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  uint64_t v19 = *(double **)(v17 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v19)
  {
    sub_100846AB0();
    uint64_t v19 = *(double **)(v17 + v18);
  }
  if (v19) {
    uint64_t v20 = v19;
  }
  else {
    uint64_t v20 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  id v39 = v12;
  sub_100E3A0A8((uint64_t)v12, (unint64_t)v20);
  uint64_t v22 = v21;
  char v24 = v23;
  swift_bridgeObjectRelease();
  if (v24) {
    goto LABEL_19;
  }
  char v25 = v16 < v22;
  *uint64_t v8 = v9;
  uint64_t v26 = (char *)v8 + *(int *)(v41 + 52);
  uint64_t v27 = type metadata accessor for IndexSet();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v26, v13, v27);
  swift_bridgeObjectRetain();
  sub_10099EE6C((unint64_t)v8);
  uint64_t v42 = v28;
  uint64_t v29 = v40;
  sub_1006CA900(&v42, v25);
  if (v29)
  {
LABEL_20:
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  uint64_t v30 = v42;
  sub_1006CB388((uint64_t)v8);
  uint64_t v31 = *(void *)(v30 + 16);
  if (v31)
  {
    uint64_t v32 = (uint64_t *)(v30 + 40);
    do
    {
      uint64_t v33 = *v32;
      id v34 = (id)*(v32 - 1);
      sub_10084A39C(v34, v33, a2);
      v32 += 2;

      --v31;
    }
    while (v31);
  }

  return swift_release();
}

uint64_t sub_1006CA63C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform34CRLCommandReorderContainerChildren_indices;
  uint64_t v2 = type metadata accessor for IndexSet();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_bridgeObjectRelease();
}

id sub_1006CA6DC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandReorderContainerChildren();
  return [super dealloc];
}

uint64_t sub_1006CA7B8()
{
  return type metadata accessor for CRLCommandReorderContainerChildren();
}

uint64_t type metadata accessor for CRLCommandReorderContainerChildren()
{
  uint64_t result = qword_10167B258;
  if (!qword_10167B258) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1006CA80C()
{
  uint64_t result = type metadata accessor for IndexSet();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1006CA8C0()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC8Freeform34CRLCommandReorderContainerChildren_actionString);
  swift_bridgeObjectRetain();
  return v1;
}

Swift::Int sub_1006CA900(uint64_t *a1, char a2)
{
  uint64_t v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = sub_100F6A0F0(v4);
  }
  uint64_t v5 = *(void *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  Swift::Int result = sub_1006CA974(v7, a2 & 1);
  *a1 = v4;
  return result;
}

Swift::Int sub_1006CA974(uint64_t *a1, char a2)
{
  Swift::Int v5 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v5);
  if (result >= v5)
  {
    if (v5 < 0) {
      goto LABEL_137;
    }
    if (v5) {
      return sub_1006CB03C(0, v5, 1, a1, a2 & 1);
    }
    return result;
  }
  if (v5 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 + 1;
  }
  if (v5 < -1) {
    goto LABEL_145;
  }
  Swift::Int v8 = result;
  char v107 = a2;
  id v100 = a1;
  if (v5 < 2)
  {
    id v11 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v5 != 1)
    {
      unint64_t v15 = *(void *)&_swiftEmptyArrayStorage[2];
      uint64_t v14 = _swiftEmptyArrayStorage;
LABEL_103:
      uint64_t v102 = v11;
      if (v15 >= 2)
      {
        uint64_t v94 = *v100;
        do
        {
          unint64_t v95 = v15 - 2;
          if (v15 < 2) {
            goto LABEL_132;
          }
          if (!v94) {
            goto LABEL_144;
          }
          double v96 = v14[2 * v95 + 4];
          double v97 = v14[2 * v15 + 3];
          sub_1006CB0C8((char *)(v94 + 16 * *(void *)&v96), (char *)(v94 + 16 * *(void *)&v14[2 * v15 + 2]), v94 + 16 * *(void *)&v97, __dst, v107 & 1);
          if (v2) {
            break;
          }
          if (*(uint64_t *)&v97 < *(uint64_t *)&v96) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v14 = sub_100F69F28((uint64_t)v14);
          }
          if (v95 >= *((void *)v14 + 2)) {
            goto LABEL_134;
          }
          NSString v98 = &v14[2 * v95 + 4];
          *NSString v98 = v96;
          v98[1] = v97;
          unint64_t v99 = *((void *)v14 + 2);
          if (v15 > v99) {
            goto LABEL_135;
          }
          memmove(&v14[2 * v15 + 2], &v14[2 * v15 + 4], 16 * (v99 - v15));
          *((void *)v14 + 2) = v99 - 1;
          unint64_t v15 = v99 - 1;
        }
        while (v99 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      v102[2] = 0.0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v102 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v9 = v7 >> 1;
    sub_1005057FC(&qword_10167B270);
    uint64_t v10 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v10 + 16) = v9;
    uint64_t v102 = (double *)v10;
    __dst = (char *)(v10 + 32);
  }
  Swift::Int v12 = 0;
  uint64_t v13 = *a1;
  uint64_t v101 = *a1 + 40;
  uint64_t v14 = _swiftEmptyArrayStorage;
  Swift::Int v103 = v8;
  Swift::Int v104 = v5;
  uint64_t v105 = *a1;
  while (1)
  {
    Swift::Int v16 = v12++;
    if (v12 >= v5)
    {
      char v21 = v107;
    }
    else
    {
      uint64_t v17 = *(void *)(v13 + 16 * v12 + 8);
      uint64_t v18 = *(void *)(v13 + 16 * v16 + 8);
      BOOL v19 = v18 < v17;
      int v20 = v17 < v18;
      char v21 = v107;
      if ((v107 & 1) == 0) {
        int v20 = v19;
      }
      Swift::Int v12 = v16 + 2;
      if (v16 + 2 < v5)
      {
        uint64_t v22 = (uint64_t *)(v101 + 16 * v16);
        while (1)
        {
          uint64_t v24 = *v22;
          v22 += 2;
          uint64_t v23 = v24;
          BOOL v25 = v17 < v24;
          int v26 = v24 < v17;
          if ((v107 & 1) == 0) {
            int v26 = v25;
          }
          if (v20 != v26) {
            break;
          }
          ++v12;
          uint64_t v17 = v23;
          if (v5 == v12)
          {
            Swift::Int v12 = v5;
            break;
          }
        }
      }
      if (v20)
      {
        if (v12 < v16) {
          goto LABEL_138;
        }
        if (v16 < v12)
        {
          uint64_t v27 = 16 * v12;
          uint64_t v28 = 16 * v16;
          Swift::Int v29 = v12;
          Swift::Int v30 = v16;
          do
          {
            if (v30 != --v29)
            {
              if (!v13) {
                goto LABEL_143;
              }
              uint64_t v31 = v13 + v27;
              uint64_t v32 = *(void *)(v13 + v28);
              uint64_t v33 = *(void *)(v13 + v28 + 8);
              *(_OWORD *)(v13 + v28) = *(_OWORD *)(v13 + v27 - 16);
              *(void *)(v31 - 16) = v32;
              *(void *)(v31 - 8) = v33;
            }
            ++v30;
            v27 -= 16;
            v28 += 16;
          }
          while (v30 < v29);
        }
      }
    }
    if (v12 >= v5) {
      goto LABEL_53;
    }
    if (__OFSUB__(v12, v16)) {
      goto LABEL_136;
    }
    if (v12 - v16 >= v8) {
      goto LABEL_53;
    }
    Swift::Int v34 = v16 + v8;
    if (__OFADD__(v16, v8)) {
      goto LABEL_139;
    }
    if (v34 >= v5) {
      Swift::Int v34 = v5;
    }
    if (v34 < v16) {
      break;
    }
    if (v12 != v34)
    {
      Swift::String v35 = (void *)(v13 + 16 * v12);
      do
      {
        uint64_t v36 = *(void *)(v13 + 16 * v12 + 8);
        Swift::Int v37 = v16;
        uint64_t v38 = v35;
        do
        {
          uint64_t v39 = *(v38 - 1);
          BOOL v40 = v39 < v36;
          BOOL v41 = v36 < v39;
          if ((v21 & 1) == 0) {
            BOOL v41 = v40;
          }
          if (!v41) {
            break;
          }
          if (!v13) {
            goto LABEL_141;
          }
          uint64_t v42 = *v38;
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v42;
          v38 -= 2;
          ++v37;
        }
        while (v12 != v37);
        ++v12;
        v35 += 2;
      }
      while (v12 != v34);
      Swift::Int v12 = v34;
    }
LABEL_53:
    if (v12 < v16) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_100F697E0(0, *((void *)v14 + 2) + 1, 1, (uint64_t)v14);
    }
    unint64_t v44 = *((void *)v14 + 2);
    unint64_t v43 = *((void *)v14 + 3);
    unint64_t v15 = v44 + 1;
    uint64_t v13 = v105;
    if (v44 >= v43 >> 1)
    {
      uint64_t v93 = sub_100F697E0((double *)(v43 > 1), v44 + 1, 1, (uint64_t)v14);
      uint64_t v13 = v105;
      uint64_t v14 = v93;
    }
    *((void *)v14 + 2) = v15;
    id v45 = v14 + 4;
    uint64_t v46 = &v14[2 * v44 + 4];
    *(void *)uint64_t v46 = v16;
    *((void *)v46 + 1) = v12;
    if (v44)
    {
      while (1)
      {
        unint64_t v47 = v15 - 1;
        if (v15 >= 4)
        {
          id v52 = &v45[2 * v15];
          uint64_t v53 = *((void *)v52 - 8);
          uint64_t v54 = *((void *)v52 - 7);
          BOOL v58 = __OFSUB__(v54, v53);
          uint64_t v55 = v54 - v53;
          if (v58) {
            goto LABEL_120;
          }
          uint64_t v57 = *((void *)v52 - 6);
          uint64_t v56 = *((void *)v52 - 5);
          BOOL v58 = __OFSUB__(v56, v57);
          uint64_t v50 = v56 - v57;
          char v51 = v58;
          if (v58) {
            goto LABEL_121;
          }
          unint64_t v59 = v15 - 2;
          id v60 = &v45[2 * v15 - 4];
          uint64_t v62 = *(void *)v60;
          uint64_t v61 = *((void *)v60 + 1);
          BOOL v58 = __OFSUB__(v61, v62);
          uint64_t v63 = v61 - v62;
          if (v58) {
            goto LABEL_123;
          }
          BOOL v58 = __OFADD__(v50, v63);
          uint64_t v64 = v50 + v63;
          if (v58) {
            goto LABEL_126;
          }
          if (v64 >= v55)
          {
            unint64_t v82 = &v45[2 * v47];
            uint64_t v84 = *(void *)v82;
            uint64_t v83 = *((void *)v82 + 1);
            BOOL v58 = __OFSUB__(v83, v84);
            uint64_t v85 = v83 - v84;
            if (v58) {
              goto LABEL_130;
            }
            BOOL v75 = v50 < v85;
            goto LABEL_90;
          }
        }
        else
        {
          if (v15 != 3)
          {
            uint64_t v76 = *((void *)v14 + 4);
            uint64_t v77 = *((void *)v14 + 5);
            BOOL v58 = __OFSUB__(v77, v76);
            uint64_t v69 = v77 - v76;
            char v70 = v58;
            goto LABEL_84;
          }
          uint64_t v49 = *((void *)v14 + 4);
          uint64_t v48 = *((void *)v14 + 5);
          BOOL v58 = __OFSUB__(v48, v49);
          uint64_t v50 = v48 - v49;
          char v51 = v58;
        }
        if (v51) {
          goto LABEL_122;
        }
        unint64_t v59 = v15 - 2;
        uint64_t v65 = &v45[2 * v15 - 4];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v68 = __OFSUB__(v66, v67);
        uint64_t v69 = v66 - v67;
        char v70 = v68;
        if (v68) {
          goto LABEL_125;
        }
        id v71 = &v45[2 * v47];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v58 = __OFSUB__(v72, v73);
        uint64_t v74 = v72 - v73;
        if (v58) {
          goto LABEL_128;
        }
        if (__OFADD__(v69, v74)) {
          goto LABEL_129;
        }
        if (v69 + v74 >= v50)
        {
          BOOL v75 = v50 < v74;
LABEL_90:
          if (v75) {
            unint64_t v47 = v59;
          }
          goto LABEL_92;
        }
LABEL_84:
        if (v70) {
          goto LABEL_124;
        }
        id v78 = &v45[2 * v47];
        uint64_t v80 = *(void *)v78;
        uint64_t v79 = *((void *)v78 + 1);
        BOOL v58 = __OFSUB__(v79, v80);
        uint64_t v81 = v79 - v80;
        if (v58) {
          goto LABEL_127;
        }
        if (v81 < v69) {
          goto LABEL_15;
        }
LABEL_92:
        unint64_t v86 = v47 - 1;
        if (v47 - 1 >= v15)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v13) {
          goto LABEL_142;
        }
        uint64_t v87 = v14;
        uint64_t v88 = &v45[2 * v86];
        uint64_t v89 = *(void *)v88;
        uint64_t v90 = &v45[2 * v47];
        double v91 = v90[1];
        sub_1006CB0C8((char *)(v13 + 16 * *(void *)v88), (char *)(v13 + 16 * *(void *)v90), v13 + 16 * *(void *)&v91, __dst, v107 & 1);
        if (v2) {
          goto LABEL_114;
        }
        if (*(uint64_t *)&v91 < v89) {
          goto LABEL_117;
        }
        if (v47 > *((void *)v87 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v88 = v89;
        v45[2 * v86 + 1] = v91;
        unint64_t v92 = *((void *)v87 + 2);
        if (v47 >= v92) {
          goto LABEL_119;
        }
        uint64_t v14 = v87;
        unint64_t v15 = v92 - 1;
        memmove(&v45[2 * v47], v90 + 2, 16 * (v92 - 1 - v47));
        *((void *)v87 + 2) = v92 - 1;
        uint64_t v13 = v105;
        if (v92 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v15 = 1;
LABEL_15:
    Swift::Int v8 = v103;
    Swift::Int v5 = v104;
    if (v12 >= v104)
    {
      id v11 = v102;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006CB03C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, char a5)
{
  if (a3 != a2)
  {
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v7 = *(void *)(v5 + 16 * a3 + 8);
    uint64_t v8 = result;
    uint64_t v9 = (void *)v6;
    while (1)
    {
      uint64_t v10 = *(v9 - 1);
      BOOL v11 = v10 < v7;
      BOOL v12 = v7 < v10;
      if ((a5 & 1) == 0) {
        BOOL v12 = v11;
      }
      if (!v12)
      {
LABEL_4:
        ++a3;
        v6 += 16;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v5) {
        break;
      }
      uint64_t v13 = *v9;
      *(_OWORD *)uint64_t v9 = *((_OWORD *)v9 - 1);
      *(v9 - 1) = v7;
      *(v9 - 2) = v13;
      v9 -= 2;
      if (a3 == ++v8) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1006CB0C8(char *__src, char *a2, unint64_t a3, char *__dst, char a5)
{
  uint64_t v6 = __dst;
  uint64_t v8 = a2;
  uint64_t v9 = __src;
  int64_t v10 = a2 - __src;
  int64_t v11 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v11 = a2 - __src;
  }
  uint64_t v12 = v11 >> 4;
  uint64_t v13 = a3 - (void)a2;
  uint64_t v14 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v14 = a3 - (void)a2;
  }
  uint64_t v15 = v14 >> 4;
  Swift::String v35 = __src;
  Swift::Int v34 = __dst;
  if (v12 >= v14 >> 4)
  {
    if (v13 >= -15)
    {
      if (__dst != a2 || &a2[16 * v15] <= __dst) {
        memmove(__dst, a2, 16 * v15);
      }
      uint64_t v24 = &v6[16 * v15];
      uint64_t v33 = v24;
      Swift::String v35 = v8;
      if (v9 < v8 && v13 >= 16)
      {
        BOOL v25 = (char *)(a3 - 16);
        do
        {
          int v26 = v25 + 16;
          uint64_t v27 = *((void *)v24 - 1);
          uint64_t v28 = *((void *)v8 - 1);
          BOOL v29 = v28 < v27;
          BOOL v30 = v27 < v28;
          if ((a5 & 1) == 0) {
            BOOL v30 = v29;
          }
          if (v30)
          {
            uint64_t v31 = v8 - 16;
            if (v26 != v8 || v25 >= v8) {
              *(_OWORD *)BOOL v25 = *(_OWORD *)v31;
            }
            Swift::String v35 = v8 - 16;
            if (v31 <= v9) {
              break;
            }
          }
          else
          {
            uint64_t v33 = v24 - 16;
            if (v26 < v24 || v25 >= v24 || v26 != v24) {
              *(_OWORD *)BOOL v25 = *((_OWORD *)v24 - 1);
            }
            uint64_t v31 = v8;
            v24 -= 16;
            if (v8 <= v9) {
              break;
            }
          }
          v25 -= 16;
          uint64_t v8 = v31;
        }
        while (v24 > v6);
      }
LABEL_48:
      sub_100F69B9C((void **)&v35, &v34, &v33);
      return 1;
    }
  }
  else if (v10 >= -15)
  {
    if (__dst != __src || &__src[16 * v12] <= __dst) {
      memmove(__dst, __src, 16 * v12);
    }
    Swift::Int v16 = &v6[16 * v12];
    uint64_t v33 = v16;
    if ((unint64_t)v8 < a3 && v10 >= 16)
    {
      uint64_t v17 = v6;
      while (1)
      {
        uint64_t v18 = *((void *)v8 + 1);
        uint64_t v19 = *((void *)v17 + 1);
        BOOL v20 = v19 < v18;
        BOOL v21 = v18 < v19;
        if ((a5 & 1) == 0) {
          BOOL v21 = v20;
        }
        if (v21)
        {
          uint64_t v22 = v8 + 16;
          uint64_t v23 = v8;
          if (v9 == v8 && v9 < v22) {
            goto LABEL_24;
          }
        }
        else
        {
          uint64_t v6 = v17 + 16;
          uint64_t v23 = v17;
          uint64_t v22 = v8;
          if (v9 == v17)
          {
            v17 += 16;
            if (v9 < v6) {
              goto LABEL_24;
            }
          }
          else
          {
            v17 += 16;
          }
        }
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v23;
LABEL_24:
        v9 += 16;
        if (v17 < v16)
        {
          uint64_t v8 = v22;
          if ((unint64_t)v22 < a3) {
            continue;
          }
        }
        Swift::Int v34 = v6;
        Swift::String v35 = v9;
        goto LABEL_48;
      }
    }
    goto LABEL_48;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006CB388(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10167B268);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1006CB3E8(void *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = (uint64_t *)&v3[OBJC_IVAR____TtC8Freeform34CRLCommandReorderContainerChildren_actionString];
  uint64_t v8 = self;
  uint64_t v9 = v3;
  id v10 = [v8 mainBundle];
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v10 localizedStringForKey:v11 value:v12 table:v13];

  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  *uint64_t v7 = v15;
  v7[1] = v17;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v18 == IndexSet.count.getter())
  {
    if (v18 > 0)
    {
      *(void *)&v9[OBJC_IVAR____TtC8Freeform34CRLCommandReorderContainerChildren_children] = a2;
      *(void *)&v9[OBJC_IVAR____TtC8Freeform34CRLCommandReorderContainerChildren_container] = a1;
      uint64_t v19 = &v9[OBJC_IVAR____TtC8Freeform34CRLCommandReorderContainerChildren_indices];
      uint64_t v20 = type metadata accessor for IndexSet();
      uint64_t v21 = *(void *)(v20 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v19, a3, v20);
      id v22 = a1;

      v28.receiver = v9;
      v28.super_class = (Class)type metadata accessor for CRLCommandReorderContainerChildren();
      id v23 = [super init];
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a3, v20);
      return (uint64_t)v23;
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(parentContainer:childrenToMove:targetIndices:)", 51, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReorderContainerChildren.swift", 106, 2, 19, (uint64_t)"Should not enqueue a command with nothing to do", 47, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Should not enqueue a command with nothing to do");
    uint64_t v25 = 19;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(parentContainer:childrenToMove:targetIndices:)", 51, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReorderContainerChildren.swift", 106, 2, 18, (uint64_t)"Number of children and number of indices must match!", 52, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Number of children and number of indices must match!");
    uint64_t v25 = 18;
  }
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(parentContainer:childrenToMove:targetIndices:)", 51, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReorderContainerChildren.swift", 106, 2, v25);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v26, v27);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006CB7A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v3 + 64);
  if (!*(void *)(v5 + 16) || (unint64_t v6 = sub_100955F14(a3), (v7 & 1) == 0))
  {
    uint64_t v10 = 0;
    char v11 = 1;
    sub_100522F00((uint64_t)&v10, &qword_101674260);
    swift_endAccess();
LABEL_6:
    swift_retain();
    uint64_t Strong = Tracker.chain(name:identifier:)();
    swift_release();
    swift_weakInit();
    char v11 = 0;
    swift_beginAccess();
    sub_10057E2D8((uint64_t)&v10, a3);
    swift_endAccess();
    return Strong;
  }
  sub_1006CC420(*(void *)(v5 + 56) + 8 * v6, (uint64_t)&v10);
  char v11 = 0;
  uint64_t Strong = swift_weakLoadStrong();
  sub_100522F00((uint64_t)&v10, &qword_101674260);
  swift_endAccess();
  if (!Strong) {
    goto LABEL_6;
  }
  return Strong;
}

void sub_1006CB8EC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (qword_10166EDC8 != -1) {
    swift_once();
  }
  if (*(unsigned char *)(*(void *)(static AASApplicationManager.shared
                            + OBJC_IVAR____TtC8Freeform21AASApplicationManager_userSamplingManager)
                + 16) == 1)
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a5;
    *(void *)(v12 + 24) = a6;
    *(void *)(v12 + 32) = a1;
    *(unsigned char *)(v12 + 40) = a2 & 1;
    *(void *)(v12 + 48) = a3;
    *(void *)(v12 + 56) = a4;
    swift_retain();
    sub_1005173A0(a3);
    Tracker.whenSession(block:)();
    swift_release();
    swift_release();
  }
  else
  {
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v13 = (id)static OS_os_log.crlAppAnalytics;
    uint64_t v14 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Skip submit session event for unselected user", 45, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
}

void sub_1006CBAB8(uint64_t a1, uint64_t a2)
{
  if (a2 == 2)
  {
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (!Strong) {
      return;
    }
    uint64_t v8 = Strong;
    uint64_t v9 = Strong + 24;
    swift_beginAccess();
    if (*(void *)(v8 + 48))
    {
      sub_1005498A4(v9, (uint64_t)&v12);
      swift_release();
      uint64_t v10 = *((void *)&v13 + 1);
      uint64_t v11 = v14;
      sub_10050F848(&v12, *((uint64_t *)&v13 + 1));
      (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
      goto LABEL_9;
    }
    goto LABEL_10;
  }
  if (a2 == 1)
  {
    type metadata accessor for AppSessionStartEvent(0);
    sub_1006CC0AC(&qword_10167B3A8, (void (*)(uint64_t))type metadata accessor for AppSessionStartEvent);
    long long v12 = 0u;
    long long v13 = 0u;
    AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)();
    sub_100522F00((uint64_t)&v12, &qword_101672BF0);
    type metadata accessor for AppSessionEndEvent(0);
    sub_1006CC0AC(&qword_10167B3B0, (void (*)(uint64_t))type metadata accessor for AppSessionEndEvent);
    AccessTracker.time<A>(_:submitAndRestartWithSession:)();
    swift_beginAccess();
    uint64_t v2 = swift_weakLoadStrong();
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = v2 + 24;
      swift_beginAccess();
      if (*(void *)(v3 + 48))
      {
        sub_1005498A4(v4, (uint64_t)&v12);
        swift_release();
        uint64_t v5 = *((void *)&v13 + 1);
        uint64_t v6 = v14;
        sub_10050F848(&v12, *((uint64_t *)&v13 + 1));
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
LABEL_9:
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v12);
        return;
      }
LABEL_10:
      swift_release();
    }
  }
}

uint64_t sub_1006CBCF0(uint64_t a1, void *a2)
{
  return AccessTracker.push<A>(data:traits:file:line:)();
}

void sub_1006CBD58(char a1)
{
  if (qword_10166EDC8 != -1) {
    swift_once();
  }
  if (*(unsigned char *)(*(void *)(static AASApplicationManager.shared
                            + OBJC_IVAR____TtC8Freeform21AASApplicationManager_userSamplingManager)
                + 16) == 1)
  {
    *(unsigned char *)(swift_allocObject() + 16) = a1;
    swift_retain();
    Tracker.whenSession(block:)();
    swift_release();
    swift_release();
  }
  else
  {
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v2 = (id)static OS_os_log.crlAppAnalytics;
    uint64_t v3 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"Skip SessionEndData for unselected user", 39, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
}

uint64_t sub_1006CBEDC()
{
  sub_1005057FC(&qword_10167A078);
  uint64_t v0 = type metadata accessor for DataEventTrait();
  uint64_t v1 = *(void *)(v0 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10117E810;
  (*(void (**)(unint64_t, void, uint64_t))(v1 + 104))(v3 + v2, enum case for DataEventTrait.unique(_:), v0);
  sub_1006CC10C();
  AccessTracker.push<A>(data:traits:file:line:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1006CC008()
{
  swift_release();
  sub_100522F00(v0 + 24, &qword_101677C18);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AASTrackersCoordinator()
{
  return self;
}

uint64_t sub_1006CC07C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t type metadata accessor for AASTrackersCoordinator.weakReference()
{
  return sub_100568E70();
}

uint64_t sub_1006CC0AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006CC0F4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1006CC104()
{
  return sub_1006CBEDC();
}

unint64_t sub_1006CC10C()
{
  unint64_t result = qword_10167B3B8;
  if (!qword_10167B3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B3B8);
  }
  return result;
}

uint64_t sub_1006CC160()
{
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1006CC1A0()
{
  memset(v1, 0, sizeof(v1));
  AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)();
  return sub_100522F00((uint64_t)v1, &qword_101672BF0);
}

uint64_t sub_1006CC1FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v14[3] = a4;
  v14[4] = a5;
  uint64_t v8 = sub_1005767BC(v14);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v8, a1, a4);
  if (qword_10166EDC8 != -1) {
    swift_once();
  }
  if (*(unsigned char *)(*(void *)(static AASApplicationManager.shared
                            + OBJC_IVAR____TtC8Freeform21AASApplicationManager_userSamplingManager)
                + 16) == 1)
  {
    sub_1005498A4((uint64_t)v14, (uint64_t)v13);
    uint64_t v9 = swift_allocObject();
    sub_10053974C(v13, v9 + 16);
    *(void *)(v9 + 56) = a2;
    swift_retain();
    swift_bridgeObjectRetain();
    Tracker.whenSession(block:)();
    swift_release();
    swift_release();
  }
  else
  {
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v10 = (id)static OS_os_log.crlAppAnalytics;
    uint64_t v11 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v10, (uint64_t)&_mh_execute_header, v11, (uint64_t)"Skip push session data for unselected user", 42, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v14);
}

uint64_t sub_1006CC3D4()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1006CC414(uint64_t a1)
{
  return sub_1006CBCF0(a1, (void *)(v1 + 16));
}

uint64_t sub_1006CC420(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101674258);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_1006CC698()
{
  uint64_t v1 = (char *)[v0 start];
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  if (v2 == NSNotFound.getter())
  {
    id v3 = objc_allocWithZone((Class)type metadata accessor for CRLTextPosition());
    return [v3 init:0 caretAffinity:0];
  }
  else
  {
    uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity];
    char v7 = (objc_class *)type metadata accessor for CRLTextPosition();
    uint64_t v8 = (char *)objc_allocWithZone(v7);
    *(void *)&v8[OBJC_IVAR____TtC8Freeform15CRLTextPosition_insertionEdge] = 0;
    *(void *)&v8[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location] = v5;
    *(void *)&v8[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity] = v6;
    v9.receiver = v8;
    v9.super_class = v7;
    return [super init];
  }
}

uint64_t sub_1006CC83C(uint64_t a1, uint64_t a2)
{
  id v3 = (char *)[objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()) init:a1 caretAffinity:0];
  uint64_t result = NSNotFound.getter();
  if (result <= a2) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = a2;
  }
  uint64_t v6 = *(void *)&v3[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  uint64_t v7 = v6 + v5;
  if (__OFADD__(v6, v5))
  {
    __break(1u);
  }
  else if (v7 >= v6)
  {
    uint64_t v8 = *(void *)&v3[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
    objc_super v9 = (objc_class *)type metadata accessor for CRLTextRange();
    id v10 = (char *)objc_allocWithZone(v9);
    uint64_t v11 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
    *(void *)&v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
    *(void *)&v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
    long long v12 = &v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    *(void *)long long v12 = v6;
    *((void *)v12 + 1) = v7;
    *(void *)&v10[v11] = v8;
    v14.receiver = v10;
    v14.super_class = v9;
    id v13 = [super init];

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return (uint64_t)v13;
  }
  __break(1u);
  return result;
}

id sub_1006CCA28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = swift_unknownObjectRetain();
  uint64_t v8 = (void *)a4(v7, ObjCClassMetadata, ObjectType);
  swift_unknownObjectRelease();

  return v8;
}

void sub_1006CCAA0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC(&qword_101687AE0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v9, v10);
  long long v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLWPStorageCRDTData(0);
  *(void *)&double v15 = __chkstk_darwin(v13 - 8, v14).n128_u64[0];
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v2, "isEmpty", v15))
  {
    uint64_t v18 = (char *)[v2 start];
    [a1 textRangeForParagraphAtCharIndex:*(void *)&v18[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location]];

    return;
  }
  uint64_t v19 = *(void *)&v2[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  uint64_t v20 = *(void *)&v2[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
  BOOL v30 = &v2[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  id v21 = sub_10090059C(v19, v20, &v32);
  id v31 = v32;
  uint64_t v22 = *(void *)&v32[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v22) {
    goto LABEL_12;
  }
  (*(void (**)(id))(*(void *)v22 + 760))(v21);
  sub_1005D3C94((uint64_t)&v12[*(int *)(v9 + 20)], (uint64_t)v17);
  sub_1005D3CF8((uint64_t)v12, type metadata accessor for CRLWPShapeItemCRDTData);
  sub_1005057FC((uint64_t *)&unk_10167BC20);
  CRAttributedString.subscript.getter();
  sub_1005D3CF8((uint64_t)v17, type metadata accessor for CRLWPStorageCRDTData);
  id v23 = (void *)CRAttributedString.Substring.attributedString.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  id v24 = [v23 string];

  if (!v24)
  {
LABEL_13:
    __break(1u);
    return;
  }

  long long v35 = v33;
  uint64_t v36 = v34;
  sub_1006436E8((id *)&v35);
  uint64_t v25 = (char *)[v2 start];
  uint64_t v26 = *(void *)&v25[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  if (v26 == NSNotFound.getter())
  {
    uint64_t v27 = 0;
    goto LABEL_8;
  }
  uint64_t v28 = *((void *)v30 + 1);
  uint64_t v27 = v28 - *(void *)v30;
  if (__OFSUB__(v28, *(void *)v30))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
LABEL_8:
  if (v27 == 1)
  {
    sub_10056A14C();
    BOOL v29 = NSString.init(stringLiteral:)();
    static NSObject.== infix(_:_:)();
  }
  else
  {
  }
}

char *sub_1006CCEAC(void *a1)
{
  if ([v1 isEmpty]
    && (uint64_t v3 = OBJC_IVAR____TtC8Freeform12CRLTextRange_range,
        *(uint64_t *)&v11[OBJC_IVAR____TtC8Freeform12CRLTextRange_range] >= 1))
  {
    id v4 = [a1 previousCharacterIndex:];
    uint64_t result = v11;
    uint64_t v6 = *(void *)&v11[v3];
    if (v6 < (uint64_t)v4)
    {
      __break(1u);
    }
    else
    {
      uint64_t v7 = (objc_class *)type metadata accessor for CRLTextRange();
      uint64_t v8 = (char *)objc_allocWithZone(v7);
      uint64_t v9 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
      *(void *)&v8[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
      *(void *)&v8[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
      uint64_t v10 = &v8[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      *(void *)uint64_t v10 = v4;
      *((void *)v10 + 1) = v6;
      *(void *)&v8[v9] = 0;
      v12.receiver = v8;
      v12.super_class = v7;
      return (char *)[super init];
    }
  }
  else
  {
    return v11;
  }
  return result;
}

char *sub_1006CCFA4(char *result)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range);
  uint64_t v3 = *(void *)&result[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  if (v3 < v2)
  {
    __break(1u);
  }
  else
  {
    id v4 = (objc_class *)type metadata accessor for CRLTextRange();
    uint64_t v5 = (char *)objc_allocWithZone(v4);
    uint64_t v6 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
    *(void *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
    *(void *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
    uint64_t v7 = &v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    *(void *)uint64_t v7 = v2;
    *((void *)v7 + 1) = v3;
    *(void *)&v5[v6] = 0;
    v8.receiver = v5;
    v8.super_class = v4;
    return (char *)[super init];
  }
  return result;
}

id sub_1006CD0E8()
{
  uint64_t v1 = (char *)[objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()) init:*(void *)(v0 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range) caretAffinity:0];
  NSNotFound.getter();
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  id v4 = (objc_class *)type metadata accessor for CRLTextRange();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  uint64_t v6 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  uint64_t v7 = &v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(void *)uint64_t v7 = v2;
  *((void *)v7 + 1) = v2;
  *(void *)&v5[v6] = v3;
  v10.receiver = v5;
  v10.super_class = v4;
  id v8 = [super init];

  return v8;
}

id sub_1006CD208()
{
  uint64_t v1 = (char *)[objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()) init:*(void *)(v0 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8) caretAffinity:0];
  NSNotFound.getter();
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  id v4 = (objc_class *)type metadata accessor for CRLTextRange();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  uint64_t v6 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  uint64_t v7 = &v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(void *)uint64_t v7 = v2;
  *((void *)v7 + 1) = v2;
  *(void *)&v5[v6] = v3;
  v10.receiver = v5;
  v10.super_class = v4;
  [super init];

  return v8;
}

char *sub_1006CD32C(char *result)
{
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range);
  if (__OFADD__(*v2, result))
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t result = (char *)[objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()) init:&result[*v2] caretAffinity:0];
  uint64_t v3 = v2[1];
  BOOL v4 = __OFSUB__(v3, *v2);
  uint64_t v5 = v3 - *v2;
  if (v4)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v6 = result;
  uint64_t result = (char *)NSNotFound.getter();
  if (v5 >= (uint64_t)result) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = v5;
  }
  uint64_t v8 = *(void *)&v6[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  uint64_t v9 = v8 + v7;
  if (__OFADD__(v8, v7)) {
    goto LABEL_11;
  }
  if (v9 >= v8)
  {
    uint64_t v10 = *(void *)&v6[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
    uint64_t v11 = (objc_class *)type metadata accessor for CRLTextRange();
    objc_super v12 = (char *)objc_allocWithZone(v11);
    uint64_t v13 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
    *(void *)&v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
    *(void *)&v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
    uint64_t v14 = &v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    *(void *)uint64_t v14 = v8;
    *((void *)v14 + 1) = v9;
    *(void *)&v12[v13] = v10;
    v16.receiver = v12;
    v16.super_class = v11;
    [super init];

    return (char *)v15;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1006CD494(char *a1)
{
  uint64_t v3 = (char *)[v1 start];
  uint64_t v4 = *(void *)&v3[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  uint64_t result = NSNotFound.getter();
  if (v4 != result
    && __OFSUB__(*(void *)&v1[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8], *(void *)&v1[OBJC_IVAR____TtC8Freeform12CRLTextRange_range]))
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v6 = (char *)[a1 start];
  uint64_t v7 = *(void *)&v6[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  if (v7 == NSNotFound.getter())
  {
    uint64_t result = 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v8 = 0;
    goto LABEL_6;
  }
  uint64_t result = *(void *)&a1[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  uint64_t v9 = *(void *)&a1[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
  uint64_t v8 = v9 - result;
  if (__OFSUB__(v9, result))
  {
LABEL_10:
    __break(1u);
    return result;
  }
LABEL_6:
  __C::_NSRange_optional v13 = _NSRange.intersection(_:)(*(__C::_NSRange *)&result);
  if (v13.is_nil) {
    return 0;
  }
  Swift::Int location = v13.value.location;
  Swift::Int length = v13.value.length;
  id v12 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
  return sub_1006CC83C(location, length);
}

BOOL sub_1006CD5BC(uint64_t a1)
{
  sub_100557A70(a1, (uint64_t)v8);
  if (v9)
  {
    type metadata accessor for CRLTextRange();
    if (swift_dynamicCast())
    {
      uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range);
      uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8);
      uint64_t v5 = *(void *)&v7[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      uint64_t v4 = *(void *)&v7[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];

      if (v3 == v5) {
        return v2 == v4;
      }
    }
  }
  else
  {
    sub_10052E2B0((uint64_t)v8);
  }
  return 0;
}

uint64_t sub_1006CD678(char *a1)
{
  uint64_t v3 = (char *)[v1 start];
  uint64_t v4 = *(void *)&v3[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  uint64_t result = NSNotFound.getter();
  if (v4 == result)
  {
    unint64_t v6 = 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v8 = &v1[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    unint64_t v6 = *(void *)&v1[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    uint64_t v9 = *((void *)v8 + 1);
    uint64_t v7 = v9 - v6;
    if (__OFSUB__(v9, v6))
    {
      __break(1u);
      goto LABEL_14;
    }
  }
  uint64_t v10 = (char *)[a1 start];
  uint64_t v11 = *(void *)&v10[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  uint64_t result = NSNotFound.getter();
  if (v11 != result)
  {
    unint64_t v12 = *(void *)&a1[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    uint64_t v14 = *(void *)&a1[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    BOOL v15 = __OFSUB__(v14, v12);
    uint64_t v13 = v14 - v12;
    if (!v15) {
      goto LABEL_7;
    }
LABEL_14:
    __break(1u);
    return result;
  }
  unint64_t v12 = 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v13 = 0;
LABEL_7:
  BOOL v16 = v6 > v12;
  unint64_t v17 = v13 + v12;
  return !v16 && v7 + v6 >= v17;
}

uint64_t sub_1006CD7C8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location);
  uint64_t v3 = (char *)[v1 start];
  uint64_t v4 = *(void *)&v3[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  uint64_t result = NSNotFound.getter();
  if (v4 == result)
  {
    unint64_t v6 = 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v7 = 0;
  }
  else
  {
    unint64_t v6 = *(void *)&v1[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    uint64_t v8 = *(void *)&v1[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    BOOL v9 = __OFSUB__(v8, v6);
    uint64_t v7 = v8 - v6;
    if (v9)
    {
      __break(1u);
      return result;
    }
  }
  BOOL v10 = v6 > v2;
  unint64_t v11 = v7 + v6;
  return !v10 && v11 >= v2;
}

uint64_t sub_1006CD8D4()
{
  uint64_t v1 = v0;
  uint64_t v21 = 0;
  unint64_t v22 = 0xE000000000000000;
  _StringGuts.grow(_:)(46);
  v20.receiver = v0;
  v20.super_class = (Class)type metadata accessor for CRLTextRange();
  [super description];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v5 = v4;
  swift_bridgeObjectRelease();

  uint64_t v21 = v3;
  unint64_t v22 = v5;
  v6._countAndFlagsBits = 0x65676E6172207B20;
  v6._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v6);
  uint64_t v7 = &v0[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  _print_unlocked<A, B>(_:_:)();
  v8._countAndFlagsBits = 3943982;
  v8._object = (void *)0xE300000000000000;
  String.append(_:)(v8);
  _print_unlocked<A, B>(_:_:)();
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0x6874676E656C202CLL;
  v10._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v10);
  unint64_t v11 = (char *)[v0 start];
  uint64_t v12 = *(void *)&v11[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  uint64_t result = NSNotFound.getter();
  if (v12 != result && __OFSUB__(*((void *)v7 + 1), *(void *)v7))
  {
    __break(1u);
  }
  else
  {
    v14._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    v15._countAndFlagsBits = 0x6666416C6F65202CLL;
    v15._object = (void *)0xEF203A7974696E69;
    String.append(_:)(v15);
    if (*(void *)&v1[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] == 1) {
      uint64_t v16 = 1702195828;
    }
    else {
      uint64_t v16 = 0x65736C6166;
    }
    if (*(void *)&v1[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] == 1) {
      unint64_t v17 = 0xE400000000000000;
    }
    else {
      unint64_t v17 = 0xE500000000000000;
    }
    unint64_t v18 = v17;
    String.append(_:)(*(Swift::String *)&v16);
    swift_bridgeObjectRelease();
    v19._countAndFlagsBits = 8200236;
    v19._object = (void *)0xE300000000000000;
    String.append(_:)(v19);
    return v21;
  }
  return result;
}

id sub_1006CDB78()
{
  return sub_1006CE558(type metadata accessor for CRLTextRange);
}

uint64_t type metadata accessor for CRLTextRange()
{
  return self;
}

id sub_1006CDBB4(uint64_t a1, double a2, double a3, double a4, double a5)
{
  v5[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__containsStart] = 0;
  v5[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__containsEnd] = 0;
  Swift::String v6 = (double *)&v5[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__rect];
  *Swift::String v6 = a2;
  v6[1] = a3;
  uint64_t v6[2] = a4;
  v6[3] = a5;
  if (a1 == 1)
  {
    Swift::String v8 = v5;
    uint64_t v9 = 1;
  }
  else if (a1)
  {
    if (a1 == -1)
    {
      uint64_t v7 = v5;
    }
    else
    {
      unint64_t v11 = v5;
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 24, (uint64_t)"Unknown direction.", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 24);
    }
    uint64_t v9 = -1;
  }
  else
  {
    Swift::String v10 = v5;
    uint64_t v9 = 0;
  }
  *(void *)&v5[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__writingDirection] = v9;

  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for CRLTextSelectionRect();
  return [super init];
}

uint64_t sub_1006CDD7C()
{
  uint64_t result = *(void *)(v0 + OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__writingDirection);
  if ((unint64_t)(result + 1) >= 3)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"asNSWritingDirection", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 39, (uint64_t)"Unknown direction.", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"asNSWritingDirection", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 39);
    return -1;
  }
  return result;
}

uint64_t sub_1006CDEA8(uint64_t result)
{
  if ((unint64_t)(result + 1) >= 3)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 24, (uint64_t)"Unknown direction.", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 24);
    uint64_t result = -1;
  }
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__writingDirection) = result;
  return result;
}

BOOL sub_1006CDFA0(uint64_t a1)
{
  sub_100557A70(a1, (uint64_t)v17);
  if (!v18)
  {
    sub_10052E2B0((uint64_t)v17);
    return 0;
  }
  type metadata accessor for CRLTextSelectionRect();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  [v1 rect];
  CGFloat v3 = v2;
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  [v16 rect];
  v20.origin.double x = v10;
  v20.origin.y = v11;
  v20.size.width = v12;
  v20.size.height = v13;
  v19.origin.double x = v3;
  v19.origin.y = v5;
  v19.size.width = v7;
  v19.size.height = v9;
  BOOL v14 = CGRectEqualToRect(v19, v20);

  return v14;
}

uint64_t sub_1006CE09C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_OWORD *))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
    id v7 = a1;
  }
  char v8 = a4(v10);

  sub_10052E2B0((uint64_t)v10);
  return v8 & 1;
}

id sub_1006CE1C4(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_1006CE234()
{
  _StringGuts.grow(_:)(52);
  swift_getObjectType();
  v1._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = 0x3A64616548202D20;
  v2._object = (void *)0xE900000000000020;
  String.append(_:)(v2);
  unsigned int v3 = [v0 containsStart];
  BOOL v4 = v3 == 0;
  if (v3) {
    uint64_t v5 = 1702195828;
  }
  else {
    uint64_t v5 = 0x65736C6166;
  }
  if (v4) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  unint64_t v7 = v6;
  String.append(_:)(*(Swift::String *)&v5);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 0x203A6C696154202CLL;
  v8._object = (void *)0xE800000000000000;
  String.append(_:)(v8);
  unsigned int v9 = [v0 containsEnd];
  BOOL v10 = v9 == 0;
  if (v9) {
    uint64_t v11 = 1702195828;
  }
  else {
    uint64_t v11 = 0x65736C6166;
  }
  if (v10) {
    unint64_t v12 = 0xE500000000000000;
  }
  else {
    unint64_t v12 = 0xE400000000000000;
  }
  unint64_t v13 = v12;
  String.append(_:)(*(Swift::String *)&v11);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 540945696;
  v14._object = (void *)0xE400000000000000;
  String.append(_:)(v14);
  type metadata accessor for CGRect(0);
  _print_unlocked<A, B>(_:_:)();
  v15._object = (void *)0x80000001012472E0;
  v15._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v15);
  uint64_t v16 = *(void *)&v0[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__writingDirection];
  if (v16 == -1)
  {
    unint64_t v17 = 0xE700000000000000;
    uint64_t v18 = 0x6C61727574614ELL;
  }
  else if (v16)
  {
    if (v16 == 1)
    {
      unint64_t v17 = 0xED00007466654C20;
      uint64_t v18 = 0x6F74207468676952;
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"description", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 55, (uint64_t)"Unknown writing direction.", 26, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"description", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 55);
      unint64_t v17 = 0xE800000000000000;
      uint64_t v18 = 0x2E6E776F6E6B6E55;
    }
  }
  else
  {
    unint64_t v17 = 0xED00007468676952;
    uint64_t v18 = 0x206F74207466654CLL;
  }
  unint64_t v19 = v17;
  String.append(_:)(*(Swift::String *)&v18);
  swift_bridgeObjectRelease();
  return 0;
}

id sub_1006CE540()
{
  return sub_1006CE558(type metadata accessor for CRLTextSelectionRect);
}

id sub_1006CE558(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  [super dealloc];
}

uint64_t type metadata accessor for CRLTextSelectionRect()
{
  return self;
}

id sub_1006CE5B4(void *a1)
{
  Swift::String v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", objc_msgSend(a1, "length"), 0);
  NSNotFound.getter();
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  BOOL v4 = (objc_class *)type metadata accessor for CRLTextRange();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  uint64_t v6 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  unint64_t v7 = &v5[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(void *)unint64_t v7 = v2;
  *((void *)v7 + 1) = v2;
  *(void *)&v5[v6] = v3;
  v10.receiver = v5;
  v10.super_class = v4;
  [super init];

  return v8;
}

uint64_t sub_1006CE690(void *a1)
{
  uint64_t v2 = (char *)[objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()) init:0 caretAffinity:0];
  uint64_t v3 = (char *)[a1 length];
  uint64_t result = NSNotFound.getter();
  if ((uint64_t)v3 >= result) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = v3;
  }
  uint64_t v6 = *(void *)&v2[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  unint64_t v7 = &v5[v6];
  if (__OFADD__(v6, v5))
  {
    __break(1u);
  }
  else if ((uint64_t)v7 >= v6)
  {
    uint64_t v8 = *(void *)&v2[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
    unsigned int v9 = (objc_class *)type metadata accessor for CRLTextRange();
    objc_super v10 = (char *)objc_allocWithZone(v9);
    uint64_t v11 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
    *(void *)&v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
    *(void *)&v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
    unint64_t v12 = &v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    *(void *)unint64_t v12 = v6;
    *((void *)v12 + 1) = v7;
    *(void *)&v10[v11] = v8;
    v14.receiver = v10;
    v14.super_class = v9;
    [super init];

    return (uint64_t)v13;
  }
  __break(1u);
  return result;
}

id sub_1006CE79C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location);
  if (v4 == NSNotFound.getter())
  {
    uint64_t v5 = NSNotFound.getter();
    uint64_t v6 = 0;
    if (v4 < 0) {
      return (id)v6;
    }
  }
  else
  {
    uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location);
    uint64_t v6 = 0;
    if (v4 < 0) {
      return (id)v6;
    }
  }
  if ((v5 & 0x8000000000000000) == 0)
  {
    if (v5 >= v4) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = v5;
    }
    if (v5 > v4) {
      uint64_t v4 = v5;
    }
    uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity);
    unsigned int v9 = (objc_class *)type metadata accessor for CRLTextRange();
    objc_super v10 = (char *)objc_allocWithZone(v9);
    uint64_t v11 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
    *(void *)&v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
    *(void *)&v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
    unint64_t v12 = &v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    *(void *)unint64_t v12 = v7;
    *((void *)v12 + 1) = v4;
    *(void *)&v10[v11] = v8;
    v14.receiver = v10;
    v14.super_class = v9;
    return [super init];
  }
  return (id)v6;
}

id sub_1006CE880()
{
  uint64_t v0 = (char *)[objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()) init:0 caretAffinity:0];
  NSNotFound.getter();
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  uint64_t v3 = (objc_class *)type metadata accessor for CRLTextRange();
  uint64_t v4 = (char *)objc_allocWithZone(v3);
  uint64_t v5 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  uint64_t v6 = &v4[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(void *)uint64_t v6 = v1;
  *((void *)v6 + 1) = v1;
  *(void *)&v4[v5] = v2;
  v9.receiver = v4;
  v9.super_class = v3;
  [super init];

  return v7;
}

uint64_t sub_1006CE950@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v222 = a2;
  uint64_t v183 = type metadata accessor for CKSyncEngine.Event.DidSendChanges();
  uint64_t v182 = *(void *)(v183 - 8);
  __chkstk_darwin(v183, v3);
  uint64_t v180 = (char *)&v173 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v181 = (char *)&v173 - v7;
  uint64_t v192 = type metadata accessor for CKSyncEngine.SendChangesOptions();
  uint64_t v191 = *(void *)(v192 - 8);
  __chkstk_darwin(v192, v8);
  unint64_t v190 = (char *)&v173 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = type metadata accessor for CKSyncEngine.SendChangesContext();
  uint64_t v186 = *(void *)(v188 - 8);
  __chkstk_darwin(v188, v10);
  uint64_t v184 = (char *)&v173 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = type metadata accessor for SendChangesContext(0);
  __chkstk_darwin(v185, v12);
  uint64_t v187 = (char *)&v173 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v189 = (uint64_t)&v173 - v16;
  uint64_t v179 = type metadata accessor for CKSyncEngine.Event.WillSendChanges();
  uint64_t v178 = *(void *)(v179 - 8);
  __chkstk_darwin(v179, v17);
  uint64_t v176 = (char *)&v173 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v177 = (char *)&v173 - v21;
  uint64_t RecordZoneChanges = type metadata accessor for CKSyncEngine.Event.DidFetchRecordZoneChanges();
  uint64_t v195 = *(void *)(RecordZoneChanges - 8);
  __chkstk_darwin(RecordZoneChanges, v22);
  unint64_t v193 = (char *)&v173 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v25);
  uint64_t v194 = (char *)&v173 - v26;
  uint64_t v200 = type metadata accessor for CKSyncEngine.Event.WillFetchRecordZoneChanges();
  uint64_t v199 = *(void *)(v200 - 8);
  __chkstk_darwin(v200, v27);
  unint64_t v197 = (char *)&v173 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29, v30);
  uint64_t v198 = (char *)&v173 - v31;
  uint64_t v204 = type metadata accessor for CKSyncEngine.Event.SentRecordZoneChanges();
  uint64_t v203 = *(void *)(v204 - 8);
  __chkstk_darwin(v204, v32);
  unint64_t v201 = (char *)&v173 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34, v35);
  uint64_t v202 = (char *)&v173 - v36;
  uint64_t v37 = type metadata accessor for CKSyncEngine.Event.SentDatabaseChanges();
  uint64_t v207 = *(void *)(v37 - 8);
  uint64_t v208 = v37;
  __chkstk_darwin(v37, v38);
  unint64_t v205 = (char *)&v173 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40, v41);
  uint64_t v206 = (char *)&v173 - v42;
  uint64_t v43 = type metadata accessor for CKSyncEngine.Event.FetchedRecordZoneChanges();
  uint64_t v211 = *(void *)(v43 - 8);
  uint64_t v212 = v43;
  __chkstk_darwin(v43, v44);
  v209 = (char *)&v173 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46, v47);
  uint64_t v210 = (char *)&v173 - v48;
  uint64_t v49 = type metadata accessor for CKSyncEngine.Event.FetchedDatabaseChanges();
  uint64_t v215 = *(void *)(v49 - 8);
  uint64_t v216 = v49;
  __chkstk_darwin(v49, v50);
  uint64_t v213 = (char *)&v173 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v52, v53);
  uint64_t v214 = (char *)&v173 - v54;
  uint64_t v55 = type metadata accessor for CKSyncEngine.Event.AccountChange.ChangeType();
  __chkstk_darwin(v55 - 8, v56);
  uint64_t v218 = (char *)&v173 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for CKSyncEngine.Event.AccountChange();
  uint64_t v219 = *(void *)(v58 - 8);
  uint64_t v220 = v58;
  __chkstk_darwin(v58, v59);
  uint64_t v61 = (char *)&v173 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v62, v63);
  uint64_t v217 = (char *)&v173 - v64;
  uint64_t v221 = type metadata accessor for SyncEvent(0);
  __chkstk_darwin(v221, v65);
  uint64_t v67 = (uint64_t *)((char *)&v173 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v68 = type metadata accessor for CKSyncEngine.Event.StateUpdate();
  uint64_t v69 = *(void *)(v68 - 8);
  __chkstk_darwin(v68, v70);
  uint64_t v72 = (char *)&v173 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v73, v74);
  uint64_t v76 = (char *)&v173 - v75;
  uint64_t v77 = type metadata accessor for CKSyncEngine.Event();
  uint64_t v78 = *(void *)(v77 - 8);
  __n128 v80 = __chkstk_darwin(v77, v79);
  unint64_t v82 = (char *)&v173 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v78 + 16))(v82, a1, v77, v80);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v78 + 88))(v82, v77);
  if (result == enum case for CKSyncEngine.Event.stateUpdate(_:))
  {
    (*(void (**)(char *, uint64_t))(v78 + 96))(v82, v77);
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v76, v82, v68);
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v72, v76, v68);
    uint64_t v224 = type metadata accessor for CKSyncEngine.State.Serialization();
    uint64_t v225 = sub_1006D11B0(&qword_10167B448);
    sub_1005767BC((uint64_t *)&v223);
    CKSyncEngine.Event.StateUpdate.stateSerialization.getter();
    uint64_t v84 = *(void (**)(char *, uint64_t))(v69 + 8);
    v84(v72, v68);
    sub_10053974C(&v223, (uint64_t)v67);
    (*(void (**)(char *, uint64_t))(v78 + 8))(a1, v77);
    v84(v76, v68);
LABEL_24:
    swift_storeEnumTagMultiPayload();
    return sub_1006D3DF0((uint64_t)v67, v222, type metadata accessor for SyncEvent);
  }
  uint64_t v174 = v67;
  uint64_t v175 = a1;
  if (result == enum case for CKSyncEngine.Event.accountChange(_:))
  {
    uint64_t v85 = v77;
    (*(void (**)(char *, uint64_t))(v78 + 96))(v82, v77);
    uint64_t v86 = v219;
    uint64_t v87 = v220;
    uint64_t v88 = v217;
    (*(void (**)(char *, char *, uint64_t))(v219 + 32))(v217, v82, v220);
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v61, v88, v87);
    uint64_t v89 = (uint64_t)v218;
    CKSyncEngine.Event.AccountChange.changeType.getter();
    uint64_t v90 = sub_1006D3E58(v89);
    uint64_t v92 = v91;
    char v94 = v93;
    unint64_t v95 = *(void (**)(char *, uint64_t))(v86 + 8);
    v95(v61, v87);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v175, v85);
    v95(v88, v87);
    uint64_t v67 = v174;
    void *v174 = v90;
    v67[1] = v92;
    *((unsigned char *)v67 + 16) = v94;
    goto LABEL_24;
  }
  if (result == enum case for CKSyncEngine.Event.fetchedDatabaseChanges(_:))
  {
    uint64_t v96 = v77;
    (*(void (**)(char *, uint64_t))(v78 + 96))(v82, v77);
    NSString v98 = v214;
    uint64_t v97 = v215;
    uint64_t v99 = v216;
    (*(void (**)(char *, char *, uint64_t))(v215 + 32))(v214, v82, v216);
    uint64_t v100 = (uint64_t)v213;
    (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v213, v98, v99);
    uint64_t v101 = sub_1006D4038(v100);
    uint64_t v103 = v102;
    (*(void (**)(char *, uint64_t))(v78 + 8))(v175, v96);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v98, v99);
    uint64_t v67 = v174;
    void *v174 = v101;
    v67[1] = v103;
    goto LABEL_24;
  }
  uint64_t v104 = v78;
  if (result == enum case for CKSyncEngine.Event.fetchedRecordZoneChanges(_:))
  {
    (*(void (**)(char *, uint64_t))(v78 + 96))(v82, v77);
    uint64_t v106 = v210;
    uint64_t v105 = v211;
    uint64_t v107 = v212;
    (*(void (**)(char *, char *, uint64_t))(v211 + 32))(v210, v82, v212);
    uint64_t v108 = (uint64_t)v209;
    (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v209, v106, v107);
    id v109 = sub_1006D4558(v108);
    uint64_t v111 = v110;
    (*(void (**)(char *, uint64_t))(v78 + 8))(v175, v77);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v106, v107);
    uint64_t v67 = v174;
    void *v174 = v109;
    v67[1] = v111;
    goto LABEL_24;
  }
  if (result == enum case for CKSyncEngine.Event.sentDatabaseChanges(_:))
  {
    (*(void (**)(char *, uint64_t))(v78 + 96))(v82, v77);
    uint64_t v112 = v207;
    uint64_t v113 = v208;
    uint64_t v114 = v77;
    unint64_t v115 = v206;
    (*(void (**)(char *, char *, uint64_t))(v207 + 32))(v206, v82, v208);
    uint64_t v116 = (uint64_t)v205;
    (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v205, v115, v113);
    uint64_t v117 = sub_1006D490C(v116);
    uint64_t v119 = v118;
    uint64_t v121 = v120;
    uint64_t v123 = v122;
    (*(void (**)(char *, uint64_t))(v104 + 8))(v175, v114);
    (*(void (**)(char *, uint64_t))(v112 + 8))(v115, v113);
    uint64_t v67 = v174;
    void *v174 = v117;
    v67[1] = v119;
    v67[2] = v121;
    v67[3] = v123;
    goto LABEL_24;
  }
  if (result == enum case for CKSyncEngine.Event.sentRecordZoneChanges(_:))
  {
    (*(void (**)(char *, uint64_t))(v78 + 96))(v82, v77);
    uint64_t v124 = v203;
    id v125 = v202;
    uint64_t v126 = v204;
    (*(void (**)(char *, char *, uint64_t))(v203 + 32))(v202, v82, v204);
    uint64_t v127 = (uint64_t)v201;
    (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v201, v125, v126);
    uint64_t v128 = sub_1006D4B78(v127);
    uint64_t v130 = v129;
    uint64_t v132 = v131;
    uint64_t v134 = v133;
    (*(void (**)(char *, uint64_t))(v104 + 8))(v175, v77);
    (*(void (**)(char *, uint64_t))(v124 + 8))(v125, v126);
    uint64_t v67 = v174;
    void *v174 = v128;
    v67[1] = v130;
    v67[2] = v132;
    v67[3] = v134;
    goto LABEL_24;
  }
  if (result == enum case for CKSyncEngine.Event.willFetchChanges(_:)) {
    goto LABEL_14;
  }
  if (result == enum case for CKSyncEngine.Event.willFetchRecordZoneChanges(_:))
  {
    (*(void (**)(char *, uint64_t))(v78 + 96))(v82, v77);
    uint64_t v136 = v199;
    uint64_t v137 = v198;
    uint64_t v138 = v200;
    (*(void (**)(char *, char *, uint64_t))(v199 + 32))(v198, v82, v200);
    unint64_t v139 = v197;
    (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v197, v137, v138);
    uint64_t RecordZone = CKSyncEngine.Event.WillFetchRecordZoneChanges.zoneID.getter();
    uint64_t v141 = *(void (**)(char *, uint64_t))(v136 + 8);
    v141(v139, v138);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v175, v77);
    v141(v137, v138);
    uint64_t v67 = v174;
    void *v174 = RecordZone;
    goto LABEL_24;
  }
  if (result == enum case for CKSyncEngine.Event.didFetchRecordZoneChanges(_:))
  {
    (*(void (**)(char *, uint64_t))(v78 + 96))(v82, v77);
    uint64_t v142 = v195;
    unint64_t v143 = v194;
    uint64_t v144 = RecordZoneChanges;
    (*(void (**)(char *, char *, uint64_t))(v195 + 32))(v194, v82, RecordZoneChanges);
    objc_super v145 = v193;
    (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v193, v143, v144);
    id v146 = (id)CKSyncEngine.Event.DidFetchRecordZoneChanges.zoneID.getter();
    uint64_t v147 = CKSyncEngine.Event.DidFetchRecordZoneChanges.error.getter();
    objc_super v148 = *(void (**)(char *, uint64_t))(v142 + 8);
    v148(v145, v144);

    (*(void (**)(char *, uint64_t))(v104 + 8))(v175, v77);
    v148(v143, v144);
    uint64_t v67 = v174;
    void *v174 = v146;
    v67[1] = v147;
    goto LABEL_24;
  }
  if (result == enum case for CKSyncEngine.Event.didFetchChanges(_:))
  {
LABEL_14:
    uint64_t v135 = *(void (**)(char *, uint64_t))(v78 + 8);
    v135(v82, v77);
    v135(v175, v77);
    uint64_t v67 = v174;
    goto LABEL_24;
  }
  if (result == enum case for CKSyncEngine.Event.willSendChanges(_:))
  {
    (*(void (**)(char *, uint64_t))(v78 + 96))(v82, v77);
    uint64_t v149 = v178;
    uint64_t v150 = v177;
    uint64_t v151 = v179;
    (*(void (**)(char *, char *, uint64_t))(v178 + 32))(v177, v82, v179);
    uint64_t v152 = v176;
    uint64_t v153 = v151;
    (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v176, v150, v151);
    uint64_t v154 = v184;
    CKSyncEngine.Event.WillSendChanges.context.getter();
    Swift::Int v155 = v187;
    CKSyncEngine.SendChangesContext.reason.getter();
    Swift::Int v156 = v190;
    CKSyncEngine.SendChangesContext.options.getter();
    (*(void (**)(char *, uint64_t))(v186 + 8))(v154, v188);
    (*(void (**)(char *, char *, uint64_t))(v191 + 32))(&v155[*(int *)(v185 + 20)], v156, v192);
    uint64_t v157 = (uint64_t)v155;
    uint64_t v158 = v189;
    sub_1006D3DF0(v157, v189, type metadata accessor for SendChangesContext);
    unint64_t v159 = *(void (**)(char *, uint64_t))(v149 + 8);
    uint64_t v160 = v153;
    v159(v152, v153);
    uint64_t v67 = v174;
    sub_1006D3DF0(v158, (uint64_t)v174, type metadata accessor for SendChangesContext);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v175, v77);
    v159(v150, v160);
    goto LABEL_24;
  }
  if (result == enum case for CKSyncEngine.Event.didSendChanges(_:))
  {
    (*(void (**)(char *, uint64_t))(v78 + 96))(v82, v77);
    uint64_t v161 = v182;
    unint64_t v162 = v181;
    uint64_t v163 = v183;
    (*(void (**)(char *, char *, uint64_t))(v182 + 32))(v181, v82, v183);
    uint64_t v164 = v180;
    uint64_t v165 = v163;
    (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v180, v162, v163);
    uint64_t v166 = v184;
    CKSyncEngine.Event.DidSendChanges.context.getter();
    uint64_t v167 = v187;
    CKSyncEngine.SendChangesContext.reason.getter();
    unint64_t v168 = v190;
    CKSyncEngine.SendChangesContext.options.getter();
    (*(void (**)(char *, uint64_t))(v186 + 8))(v166, v188);
    (*(void (**)(char *, char *, uint64_t))(v191 + 32))(&v167[*(int *)(v185 + 20)], v168, v192);
    uint64_t v169 = (uint64_t)v167;
    uint64_t v170 = v189;
    sub_1006D3DF0(v169, v189, type metadata accessor for SendChangesContext);
    uint64_t v171 = *(void (**)(char *, uint64_t))(v161 + 8);
    uint64_t v172 = v165;
    v171(v164, v165);
    uint64_t v67 = v174;
    sub_1006D3DF0(v170, (uint64_t)v174, type metadata accessor for SendChangesContext);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v175, v77);
    v171(v162, v172);
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_1006CFEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[5] = a5;
  v6[6] = v5;
  v6[3] = a2;
  v6[4] = a4;
  uint64_t v6[2] = a1;
  uint64_t v7 = type metadata accessor for CKSyncEngine.SendChangesOptions();
  v6[7] = v7;
  v6[8] = *(void *)(v7 - 8);
  v6[9] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for CKSyncEngine.SendChangesContext();
  v6[10] = v8;
  v6[11] = *(void *)(v8 - 8);
  v6[12] = swift_task_alloc();
  v6[13] = type metadata accessor for SendChangesContext(0);
  v6[14] = swift_task_alloc();
  v6[15] = swift_task_alloc();
  return _swift_task_switch(sub_1006D0040, 0, 0);
}

uint64_t sub_1006D0040()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[11];
  uint64_t v8 = v0[8];
  uint64_t v7 = v0[9];
  uint64_t v9 = v0[7];
  uint64_t v17 = v0[5];
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 16))(v3, v0[3], v5);
  CKSyncEngine.SendChangesContext.reason.getter();
  CKSyncEngine.SendChangesContext.options.getter();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v2 + *(int *)(v4 + 20), v7, v9);
  sub_1006D3DF0(v2, v1, type metadata accessor for SendChangesContext);
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 24) + **(int **)(v17 + 24));
  uint64_t v10 = (void *)swift_task_alloc();
  v0[16] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1006D01F4;
  uint64_t v11 = v0[15];
  uint64_t v12 = v0[5];
  uint64_t v13 = v0[4];
  uint64_t v14 = v0[2];
  return v16(v14, v11, v13, v12);
}

uint64_t sub_1006D01F4()
{
  uint64_t v1 = *(void *)(*v0 + 120);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  sub_1006D3D90(v1, type metadata accessor for SendChangesContext);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_1006D037C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[5] = a5;
  v6[6] = v5;
  v6[3] = a2;
  v6[4] = a4;
  uint64_t v6[2] = a1;
  uint64_t ChangesOptions = type metadata accessor for CKSyncEngine.FetchChangesOptions();
  v6[7] = ChangesOptions;
  v6[8] = *(void *)(ChangesOptions - 8);
  v6[9] = swift_task_alloc();
  uint64_t ChangesContext = type metadata accessor for CKSyncEngine.FetchChangesContext();
  v6[10] = ChangesContext;
  v6[11] = *(void *)(ChangesContext - 8);
  v6[12] = swift_task_alloc();
  v6[13] = type metadata accessor for FetchChangesContext(0);
  v6[14] = swift_task_alloc();
  v6[15] = swift_task_alloc();
  return _swift_task_switch(sub_1006D04E0, 0, 0);
}

uint64_t sub_1006D04E0()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[11];
  uint64_t v8 = v0[8];
  uint64_t v7 = v0[9];
  uint64_t v9 = v0[7];
  uint64_t v17 = v0[5];
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 16))(v3, v0[3], v5);
  CKSyncEngine.FetchChangesContext.reason.getter();
  CKSyncEngine.FetchChangesContext.options.getter();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v2 + *(int *)(v4 + 20), v7, v9);
  sub_1006D3DF0(v2, v1, type metadata accessor for FetchChangesContext);
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 32) + **(int **)(v17 + 32));
  uint64_t v10 = (void *)swift_task_alloc();
  v0[16] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1006D0694;
  uint64_t v11 = v0[15];
  uint64_t v12 = v0[5];
  uint64_t v13 = v0[4];
  uint64_t v14 = v0[2];
  return v16(v14, v11, v13, v12);
}

uint64_t sub_1006D0694()
{
  uint64_t v1 = *(void *)(*v0 + 120);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  sub_1006D3D90(v1, type metadata accessor for FetchChangesContext);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

void (*sub_1006D082C(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = CKSyncEngine.State.hasPendingUntrackedChanges.modify();
  return sub_1006D0884;
}

void sub_1006D0884(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t SendChangesContext.options.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1006D09C4(type metadata accessor for SendChangesContext, (uint64_t (*)(void))&type metadata accessor for CKSyncEngine.SendChangesOptions, a1);
}

uint64_t type metadata accessor for SendChangesContext(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10167B4F8);
}

uint64_t _s8Freeform19FetchChangesContextV6reason8CloudKit12CKSyncEngineC10SyncReasonOvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CKSyncEngine.SyncReason();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t FetchChangesContext.options.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1006D09C4(type metadata accessor for FetchChangesContext, (uint64_t (*)(void))&type metadata accessor for CKSyncEngine.FetchChangesOptions, a1);
}

uint64_t sub_1006D09C4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for FetchChangesContext(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10167B588);
}

uint64_t SyncEvent.StateUpdate.stateSerialization.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1005498A4(v1, a1);
}

uint64_t SyncEvent.StateUpdate.init(stateSerialization:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10053974C(a1, a2);
}

uint64_t SyncEvent.StateUpdate.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v7 = type metadata accessor for CKSyncEngine.State.Serialization();
  uint64_t v8 = sub_1006D11B0(&qword_10167B448);
  sub_1005767BC((uint64_t *)&v6);
  CKSyncEngine.Event.StateUpdate.stateSerialization.getter();
  uint64_t v4 = type metadata accessor for CKSyncEngine.Event.StateUpdate();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return sub_10053974C(&v6, a2);
}

void *SyncEvent.AccountChange.changeType.getter(void *a1, void *a2, unsigned __int8 a3)
{
  return a1;
}

id sub_1006D0B78(id result, void *a2, unsigned __int8 a3)
{
  if (a3 >= 2u)
  {
    if (a3 != 2) {
      return result;
    }
    id v4 = result;
    uint64_t result = a2;
  }
  return result;
}

void SyncEvent.FetchedRecordZoneChanges.Deletion.recordID.setter(void *a1)
{
  id *v1 = a1;
}

BOOL static SyncEvent.FetchedDatabaseChanges.Deletion.Reason.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void SyncEvent.FetchedDatabaseChanges.Deletion.Reason.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int SyncEvent.FetchedDatabaseChanges.Deletion.Reason.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

uint64_t SyncEvent.FetchedDatabaseChanges.Deletion.reason.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t SyncEvent.FetchedDatabaseChanges.Deletion.reason.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t SyncEvent.FetchedDatabaseChanges.modifications.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t SyncEvent.FetchedRecordZoneChanges.deletions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SyncEvent.SentRecordZoneChanges.deletedRecordIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SyncEvent.SentRecordZoneChanges.failedRecordDeletes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SyncEvent.SentDatabaseChanges.failedZoneDeletes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

void *SyncEvent.DidFetchRecordZoneChanges.error.getter(uint64_t a1, void *a2)
{
  id v3 = a2;
  return a2;
}

void SyncEvent.DidFetchRecordZoneChanges.error.setter(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
}

uint64_t SyncEvent.WillSendChanges.context.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1006D10D4(v1, a1, type metadata accessor for SendChangesContext);
}

unint64_t SyncEvent.description.getter()
{
  uint64_t v1 = v0;
  unint64_t v2 = 0xD000000000000010;
  uint64_t v3 = type metadata accessor for SyncEvent(0);
  __chkstk_darwin(v3, v4);
  long long v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006D10D4(v1, (uint64_t)v6, type metadata accessor for SyncEvent);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1006D3D90((uint64_t)v6, type metadata accessor for SyncEvent);
      unint64_t v2 = 0x43746E756F636341;
      break;
    case 2u:
      sub_1006D3D90((uint64_t)v6, type metadata accessor for SyncEvent);
      unint64_t v2 = 0xD000000000000016;
      break;
    case 3u:
      sub_1006D3D90((uint64_t)v6, type metadata accessor for SyncEvent);
      unint64_t v2 = 0xD000000000000018;
      break;
    case 4u:
      sub_1006D3D90((uint64_t)v6, type metadata accessor for SyncEvent);
      unint64_t v2 = 0xD000000000000013;
      break;
    case 5u:
      sub_1006D3D90((uint64_t)v6, type metadata accessor for SyncEvent);
      unint64_t v2 = 0xD000000000000015;
      break;
    case 6u:
      sub_1006D3D90((uint64_t)v6, type metadata accessor for SyncEvent);
      unint64_t v2 = 0xD00000000000001ALL;
      break;
    case 7u:
      sub_1006D3D90((uint64_t)v6, type metadata accessor for SyncEvent);
      unint64_t v2 = 0xD000000000000019;
      break;
    case 8u:
      sub_1006D3D90((uint64_t)v6, type metadata accessor for SyncEvent);
      unint64_t v2 = 0x646E65536C6C6957;
      break;
    case 9u:
      sub_1006D3D90((uint64_t)v6, type metadata accessor for SyncEvent);
      unint64_t v2 = 0x43646E6553646944;
      break;
    case 0xAu:
      return v2;
    case 0xBu:
      unint64_t v2 = 0x6863746546646944;
      break;
    default:
      sub_1006D3D90((uint64_t)v6, type metadata accessor for SyncEvent);
      unint64_t v2 = 0x6470556574617453;
      break;
  }
  return v2;
}

uint64_t type metadata accessor for SyncEvent(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10167B630);
}

uint64_t sub_1006D10D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

_UNKNOWN **sub_1006D113C()
{
  return &protocol witness table for CKSyncEngine.State;
}

uint64_t sub_1006D1148(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1006D11B0(&qword_10167B488);
  uint64_t result = sub_1006D11B0(&qword_10167B490);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1006D11B0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CKSyncEngine.State.Serialization();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1006D11F8()
{
  unint64_t result = qword_10167B498;
  if (!qword_10167B498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B498);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SendChangesContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1006D1368(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for CKSyncEngine.SendChangesOptions);
}

uint64_t destroy for SendChangesContext(uint64_t a1, uint64_t a2)
{
  return sub_1006D1490(a1, a2, (uint64_t (*)(void))&type metadata accessor for CKSyncEngine.SendChangesOptions);
}

uint64_t initializeWithCopy for SendChangesContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006D1560(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for CKSyncEngine.SendChangesOptions);
}

uint64_t assignWithCopy for SendChangesContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006D1638(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for CKSyncEngine.SendChangesOptions);
}

uint64_t initializeWithTake for SendChangesContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006D1710(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for CKSyncEngine.SendChangesOptions);
}

uint64_t assignWithTake for SendChangesContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006D17E8(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for CKSyncEngine.SendChangesOptions);
}

uint64_t getEnumTagSinglePayload for SendChangesContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006D12F4);
}

uint64_t sub_1006D12F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006D18D4(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for CKSyncEngine.SendChangesOptions);
}

uint64_t storeEnumTagSinglePayload for SendChangesContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006D1320);
}

uint64_t sub_1006D1320(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1006D1A00(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for CKSyncEngine.SendChangesOptions);
}

uint64_t sub_1006D1338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006D1B30(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for CKSyncEngine.SendChangesOptions);
}

uint64_t *initializeBufferWithCopyOfBuffer for FetchChangesContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1006D1368(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for CKSyncEngine.FetchChangesOptions);
}

uint64_t *sub_1006D1368(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(void))
{
  int v6 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    uint64_t v9 = type metadata accessor for CKSyncEngine.SyncReason();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = a4(0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  return a1;
}

uint64_t destroy for FetchChangesContext(uint64_t a1, uint64_t a2)
{
  return sub_1006D1490(a1, a2, (uint64_t (*)(void))&type metadata accessor for CKSyncEngine.FetchChangesOptions);
}

uint64_t sub_1006D1490(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = type metadata accessor for CKSyncEngine.SyncReason();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = a3(0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for FetchChangesContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006D1560(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for CKSyncEngine.FetchChangesOptions);
}

uint64_t sub_1006D1560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v8 = type metadata accessor for CKSyncEngine.SyncReason();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

uint64_t assignWithCopy for FetchChangesContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006D1638(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for CKSyncEngine.FetchChangesOptions);
}

uint64_t sub_1006D1638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v8 = type metadata accessor for CKSyncEngine.SyncReason();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 24))(a1, a2, v8);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for FetchChangesContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006D1710(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for CKSyncEngine.FetchChangesOptions);
}

uint64_t sub_1006D1710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v8 = type metadata accessor for CKSyncEngine.SyncReason();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for FetchChangesContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006D17E8(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for CKSyncEngine.FetchChangesOptions);
}

uint64_t sub_1006D17E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v8 = type metadata accessor for CKSyncEngine.SyncReason();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 40))(a1, a2, v8);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchChangesContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006D18BC);
}

uint64_t sub_1006D18BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006D18D4(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for CKSyncEngine.FetchChangesOptions);
}

uint64_t sub_1006D18D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v8 = type metadata accessor for CKSyncEngine.SyncReason();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a2)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    return v10(a1, a2, v8);
  }
  else
  {
    uint64_t v12 = a4(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 20);
    return v13(v15, a2, v14);
  }
}

uint64_t storeEnumTagSinglePayload for FetchChangesContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006D19E8);
}

uint64_t sub_1006D19E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1006D1A00(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for CKSyncEngine.FetchChangesOptions);
}

uint64_t sub_1006D1A00(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v10 = type metadata accessor for CKSyncEngine.SyncReason();
  uint64_t v11 = *(void *)(v10 - 8);
  if (*(_DWORD *)(v11 + 84) == a3)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    return v12(a1, a2, a2, v10);
  }
  else
  {
    uint64_t v14 = a5(0);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + *(int *)(a4 + 20);
    return v15(v17, a2, a2, v16);
  }
}

uint64_t sub_1006D1B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006D1B30(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for CKSyncEngine.FetchChangesOptions);
}

uint64_t sub_1006D1B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = type metadata accessor for CKSyncEngine.SyncReason();
  if (v6 <= 0x3F)
  {
    uint64_t result = a4(319);
    if (v7 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for SyncEvent(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(char **)a2;
    *(void *)a1 = *(void *)a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        long long v7 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v7;
        (**(void (***)(void *, const void *))(v7 - 8))(a1, a2);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v10 = *(char **)a2;
        uint64_t v11 = (void *)*((void *)a2 + 1);
        unsigned __int8 v12 = a2[16];
        sub_1006D0B78(v10, v11, v12);
        *(void *)a1 = v10;
        *((void *)a1 + 1) = v11;
        a1[16] = v12;
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 3u:
        uint64_t v13 = *(char **)a2;
        uint64_t v14 = *((void *)a2 + 1);
        *(void *)a1 = v13;
        *((void *)a1 + 1) = v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
      case 5u:
        uint64_t v15 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v15;
        uint64_t v17 = *((void *)a2 + 2);
        uint64_t v16 = *((void *)a2 + 3);
        *((void *)a1 + 2) = v17;
        *((void *)a1 + 3) = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v18 = *(char **)a2;
        *(void *)a1 = *(void *)a2;
        uint64_t v19 = v18;
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v20 = *(char **)a2;
        uint64_t v21 = (void *)*((void *)a2 + 1);
        *(void *)a1 = v20;
        *((void *)a1 + 1) = v21;
        uint64_t v22 = v20;
        id v23 = v21;
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
      case 9u:
        uint64_t v24 = type metadata accessor for CKSyncEngine.SyncReason();
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
        uint64_t v25 = *(int *)(type metadata accessor for SendChangesContext(0) + 20);
        uint64_t v26 = &a1[v25];
        uint64_t v27 = &a2[v25];
        uint64_t v28 = type metadata accessor for CKSyncEngine.SendChangesOptions();
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void destroy for SyncEvent(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
      return;
    case 1u:
      id v6 = *(id *)a1;
      long long v7 = *(void **)(a1 + 8);
      unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
      sub_1006D21A4(v6, v7, v8);
      return;
    case 2u:
    case 3u:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 4u:
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_4:
      swift_bridgeObjectRelease();
      return;
    case 6u:
      id v9 = *(id *)a1;
      goto LABEL_18;
    case 7u:

      id v9 = *(id *)(a1 + 8);
LABEL_18:

      break;
    case 8u:
    case 9u:
      uint64_t v2 = type metadata accessor for CKSyncEngine.SyncReason();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
      uint64_t v3 = a1 + *(int *)(type metadata accessor for SendChangesContext(0) + 20);
      uint64_t v4 = type metadata accessor for CKSyncEngine.SendChangesOptions();
      int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      v5(v3, v4);
      break;
    default:
      return;
  }
}

void sub_1006D21A4(void *a1, void *a2, unsigned __int8 a3)
{
  if (a3 >= 2u)
  {
    if (a3 != 2) {
      return;
    }

    a1 = a2;
  }
}

char *initializeWithCopy for SyncEvent(char *a1, void **a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      long long v6 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 24) = v6;
      (**(void (***)(void *, const void *))(v6 - 8))(a1, a2);
      goto LABEL_10;
    case 1u:
      long long v7 = *a2;
      unsigned __int8 v8 = a2[1];
      unsigned __int8 v9 = *((unsigned char *)a2 + 16);
      sub_1006D0B78(v7, v8, v9);
      *(void *)a1 = v7;
      *((void *)a1 + 1) = v8;
      a1[16] = v9;
      goto LABEL_10;
    case 2u:
    case 3u:
      uint64_t v10 = *a2;
      uint64_t v11 = a2[1];
      *(void *)a1 = v10;
      *((void *)a1 + 1) = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_10;
    case 4u:
    case 5u:
      unsigned __int8 v12 = a2[1];
      *(void *)a1 = *a2;
      *((void *)a1 + 1) = v12;
      uint64_t v14 = a2[2];
      uint64_t v13 = a2[3];
      *((void *)a1 + 2) = v14;
      *((void *)a1 + 3) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_10;
    case 6u:
      uint64_t v15 = *a2;
      *(void *)a1 = *a2;
      id v16 = v15;
      goto LABEL_10;
    case 7u:
      uint64_t v17 = *a2;
      uint64_t v18 = a2[1];
      *(void *)a1 = v17;
      *((void *)a1 + 1) = v18;
      id v19 = v17;
      id v20 = v18;
      goto LABEL_10;
    case 8u:
    case 9u:
      uint64_t v21 = type metadata accessor for CKSyncEngine.SyncReason();
      (*(void (**)(char *, void **, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
      uint64_t v22 = *(int *)(type metadata accessor for SendChangesContext(0) + 20);
      id v23 = &a1[v22];
      uint64_t v24 = (char *)a2 + v22;
      uint64_t v25 = type metadata accessor for CKSyncEngine.SendChangesOptions();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for SyncEvent(void *a1, char *a2, uint64_t a3)
{
  if (a1 != (void *)a2)
  {
    sub_1006D3D90((uint64_t)a1, type metadata accessor for SyncEvent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = *((void *)a2 + 3);
        a1[3] = v6;
        a1[4] = *((void *)a2 + 4);
        (**(void (***)(void *, const void *))(v6 - 8))(a1, a2);
        goto LABEL_11;
      case 1u:
        long long v7 = *(void **)a2;
        unsigned __int8 v8 = (void *)*((void *)a2 + 1);
        unsigned __int8 v9 = a2[16];
        sub_1006D0B78(v7, v8, v9);
        *a1 = v7;
        a1[1] = v8;
        *((unsigned char *)a1 + 16) = v9;
        goto LABEL_11;
      case 2u:
      case 3u:
        *a1 = *(void *)a2;
        a1[1] = *((void *)a2 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 4u:
      case 5u:
        *a1 = *(void *)a2;
        a1[1] = *((void *)a2 + 1);
        a1[2] = *((void *)a2 + 2);
        a1[3] = *((void *)a2 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 6u:
        uint64_t v10 = *(void **)a2;
        *a1 = *(void *)a2;
        id v11 = v10;
        goto LABEL_11;
      case 7u:
        unsigned __int8 v12 = *(void **)a2;
        *a1 = *(void *)a2;
        uint64_t v13 = (void *)*((void *)a2 + 1);
        a1[1] = v13;
        id v14 = v12;
        id v15 = v13;
        goto LABEL_11;
      case 8u:
      case 9u:
        uint64_t v16 = type metadata accessor for CKSyncEngine.SyncReason();
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        uint64_t v17 = *(int *)(type metadata accessor for SendChangesContext(0) + 20);
        uint64_t v18 = (char *)a1 + v17;
        id v19 = &a2[v17];
        uint64_t v20 = type metadata accessor for CKSyncEngine.SendChangesOptions();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for SyncEvent(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 9 || EnumCaseMultiPayload == 8)
  {
    uint64_t v7 = type metadata accessor for CKSyncEngine.SyncReason();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    uint64_t v8 = *(int *)(type metadata accessor for SendChangesContext(0) + 20);
    unsigned __int8 v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for CKSyncEngine.SendChangesOptions();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for SyncEvent(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1006D3D90((uint64_t)a1, type metadata accessor for SyncEvent);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 9 || EnumCaseMultiPayload == 8)
    {
      uint64_t v7 = type metadata accessor for CKSyncEngine.SyncReason();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = *(int *)(type metadata accessor for SendChangesContext(0) + 20);
      unsigned __int8 v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = type metadata accessor for CKSyncEngine.SendChangesOptions();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1006D2CB4()
{
  uint64_t result = type metadata accessor for SendChangesContext(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncEvent.StateUpdate()
{
  return &type metadata for SyncEvent.StateUpdate;
}

ValueMetadata *type metadata accessor for SyncEvent.AccountChange()
{
  return &type metadata for SyncEvent.AccountChange;
}

void destroy for SyncEvent.AccountChange.ChangeType(uint64_t a1)
{
}

uint64_t _s8Freeform9SyncEventO13AccountChangeV10ChangeTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1006D0B78(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s8Freeform9SyncEventO13AccountChangeV10ChangeTypeOwca_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1006D0B78(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1006D21A4(v6, v7, v8);
  return a1;
}

uint64_t _s8Freeform9SyncEventO13AccountChangeV10ChangeTypeOwta_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  unsigned __int8 v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1006D21A4(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for SyncEvent.AccountChange.ChangeType()
{
  return &type metadata for SyncEvent.AccountChange.ChangeType;
}

uint64_t destroy for FixupBookkeepingData()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for SyncEvent.FetchedDatabaseChanges()
{
  return &type metadata for SyncEvent.FetchedDatabaseChanges;
}

ValueMetadata *type metadata accessor for SyncEvent.FetchedDatabaseChanges.Modification()
{
  return &type metadata for SyncEvent.FetchedDatabaseChanges.Modification;
}

uint64_t initializeBufferWithCopyOfBuffer for SyncEvent.FetchedDatabaseChanges.Deletion(uint64_t a1, uint64_t a2)
{
  char v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for SyncEvent.FetchedDatabaseChanges.Deletion(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  unsigned __int8 v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for SyncEvent.FetchedDatabaseChanges.Deletion(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncEvent.FetchedDatabaseChanges.Deletion(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncEvent.FetchedDatabaseChanges.Deletion(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncEvent.FetchedDatabaseChanges.Deletion()
{
  return &type metadata for SyncEvent.FetchedDatabaseChanges.Deletion;
}

unsigned char *storeEnumTagSinglePayload for SyncEvent.FetchedDatabaseChanges.Deletion.Reason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006D3150);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncEvent.FetchedDatabaseChanges.Deletion.Reason()
{
  return &type metadata for SyncEvent.FetchedDatabaseChanges.Deletion.Reason;
}

void *_s8Freeform20FixupBookkeepingDataVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FixupBookkeepingData(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for FixupBookkeepingData(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SyncEvent.FetchedRecordZoneChanges()
{
  return &type metadata for SyncEvent.FetchedRecordZoneChanges;
}

ValueMetadata *type metadata accessor for SyncEvent.FetchedRecordZoneChanges.Modification()
{
  return &type metadata for SyncEvent.FetchedRecordZoneChanges.Modification;
}

uint64_t destroy for SyncEvent.FetchedRecordZoneChanges.Deletion(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s8Freeform9SyncEventO24FetchedRecordZoneChangesV8DeletionVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SyncEvent.FetchedRecordZoneChanges.Deletion(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SyncEvent.FetchedRecordZoneChanges.Deletion(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SyncEvent.FetchedRecordZoneChanges.Deletion()
{
  return &type metadata for SyncEvent.FetchedRecordZoneChanges.Deletion;
}

ValueMetadata *type metadata accessor for SyncEvent.SentDatabaseChanges()
{
  return &type metadata for SyncEvent.SentDatabaseChanges;
}

ValueMetadata *type metadata accessor for SyncEvent.SentDatabaseChanges.FailedZoneSave()
{
  return &type metadata for SyncEvent.SentDatabaseChanges.FailedZoneSave;
}

uint64_t destroy for CRLTransactionChangeSummary()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CRLTransactionChangeSummary(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CRLTransactionChangeSummary(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for CRLTransactionChangeSummary(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLTransactionChangeSummary(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLTransactionChangeSummary(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncEvent.SentRecordZoneChanges()
{
  return &type metadata for SyncEvent.SentRecordZoneChanges;
}

ValueMetadata *type metadata accessor for SyncEvent.SentRecordZoneChanges.FailedRecordSave()
{
  return &type metadata for SyncEvent.SentRecordZoneChanges.FailedRecordSave;
}

ValueMetadata *type metadata accessor for SyncEvent.WillFetchChanges()
{
  return &type metadata for SyncEvent.WillFetchChanges;
}

ValueMetadata *type metadata accessor for SyncEvent.WillFetchRecordZoneChanges()
{
  return &type metadata for SyncEvent.WillFetchRecordZoneChanges;
}

ValueMetadata *type metadata accessor for SyncEvent.DidFetchChanges()
{
  return &type metadata for SyncEvent.DidFetchChanges;
}

uint64_t assignWithCopy for SyncEvent.DidFetchRecordZoneChanges(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a1 + 8);
  unsigned __int8 v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  return a1;
}

ValueMetadata *type metadata accessor for SyncEvent.DidFetchRecordZoneChanges()
{
  return &type metadata for SyncEvent.DidFetchRecordZoneChanges;
}

uint64_t getEnumTagSinglePayload for SyncEvent.WillSendChanges(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006D36EC);
}

uint64_t storeEnumTagSinglePayload for SyncEvent.WillSendChanges(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006D3704);
}

uint64_t type metadata accessor for SyncEvent.WillSendChanges(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10167B6C0);
}

uint64_t *_s8Freeform9SyncEventO15WillSendChangesVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for SendChangesContext(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = type metadata accessor for CKSyncEngine.SyncReason();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(v6 + 20);
    id v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for CKSyncEngine.SendChangesOptions();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t _s8Freeform9SyncEventO15WillSendChangesVwxx_0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CKSyncEngine.SyncReason();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = a1 + *(int *)(type metadata accessor for SendChangesContext(0) + 20);
  uint64_t v4 = type metadata accessor for CKSyncEngine.SendChangesOptions();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(v3, v4);
}

uint64_t _s8Freeform9SyncEventO15WillSendChangesVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CKSyncEngine.SyncReason();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for SendChangesContext(0) + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for CKSyncEngine.SendChangesOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

uint64_t _s8Freeform9SyncEventO15WillSendChangesVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CKSyncEngine.SyncReason();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for SendChangesContext(0) + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for CKSyncEngine.SendChangesOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t _s8Freeform9SyncEventO15WillSendChangesVwtk_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CKSyncEngine.SyncReason();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for SendChangesContext(0) + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for CKSyncEngine.SendChangesOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t _s8Freeform9SyncEventO15WillSendChangesVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CKSyncEngine.SyncReason();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for SendChangesContext(0) + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for CKSyncEngine.SendChangesOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncEvent.DidSendChanges(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006D3BEC);
}

uint64_t sub_1006D3BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SendChangesContext(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SyncEvent.DidSendChanges(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006D3C70);
}

uint64_t sub_1006D3C74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SendChangesContext(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SyncEvent.DidSendChanges(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10167B750);
}

uint64_t sub_1006D3D04()
{
  uint64_t result = type metadata accessor for SendChangesContext(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1006D3D90(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1006D3DF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1006D3E58(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CKSyncEngine.Event.AccountChange.ChangeType();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v5 = __chkstk_darwin(v2, v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v7, a1, v2, v5);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v7, v2);
  if (result == enum case for CKSyncEngine.Event.AccountChange.ChangeType.signIn(_:)
    || result == enum case for CKSyncEngine.Event.AccountChange.ChangeType.signOut(_:)
    || result == enum case for CKSyncEngine.Event.AccountChange.ChangeType.switchAccounts(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    (*(void (**)(char *, uint64_t))(v3 + 96))(v7, v2);
    return *(void *)v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006D4038(uint64_t a1)
{
  uint64_t v56 = type metadata accessor for CKDatabase.DatabaseChange.Deletion.Reason();
  uint64_t v2 = *(void (***)(char *, char *, uint64_t))(v56 - 8);
  __chkstk_darwin(v56, v3);
  uint64_t v51 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v55 = (char *)&v41 - v7;
  uint64_t v54 = type metadata accessor for CKDatabase.DatabaseChange.Deletion();
  uint64_t v52 = *(void *)(v54 - 8);
  __chkstk_darwin(v54, v8);
  uint64_t v53 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CKDatabase.DatabaseChange.Modification();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  id v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = CKSyncEngine.Event.FetchedDatabaseChanges.modifications.getter();
  uint64_t v16 = *(void *)(v15 + 16);
  uint64_t v43 = a1;
  if (v16)
  {
    uint64_t v49 = v2;
    uint64_t v57 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v17 = v11 + 16;
    uint64_t v50 = v18;
    uint64_t v19 = *(unsigned __int8 *)(v17 + 64);
    uint64_t v48 = (uint64_t (**)(char *, uint64_t))v15;
    uint64_t v20 = v15 + ((v19 + 32) & ~v19);
    uint64_t v21 = *(void *)(v17 + 56);
    do
    {
      v50(v14, v20, v10);
      CKDatabase.DatabaseChange.Modification.zoneID.getter();
      (*(void (**)(char *, uint64_t))(v17 - 8))(v14, v10);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v20 += v21;
      --v16;
    }
    while (v16);
    uint64_t v22 = v57;
    swift_bridgeObjectRelease();
    a1 = v43;
    uint64_t v2 = v49;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = _swiftEmptyArrayStorage;
  }
  uint64_t v23 = CKSyncEngine.Event.FetchedDatabaseChanges.deletions.getter();
  int64_t v24 = *(void *)(v23 + 16);
  if (!v24)
  {
LABEL_20:
    uint64_t v40 = type metadata accessor for CKSyncEngine.Event.FetchedDatabaseChanges();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(a1, v40);
    swift_bridgeObjectRelease();
    return (uint64_t)v22;
  }
  uint64_t v42 = v22;
  uint64_t v57 = _swiftEmptyArrayStorage;
  sub_1006BB944(0, v24, 0);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 16);
  uint64_t v26 = *(unsigned __int8 *)(v52 + 80);
  uint64_t v41 = v23;
  uint64_t v27 = v23 + ((v26 + 32) & ~v26);
  uint64_t v46 = *(void *)(v52 + 72);
  uint64_t v49 = v2 + 2;
  uint64_t v50 = v25;
  uint64_t v48 = (uint64_t (**)(char *, uint64_t))(v2 + 11);
  int v47 = enum case for CKDatabase.DatabaseChange.Deletion.Reason.deleted(_:);
  int v45 = enum case for CKDatabase.DatabaseChange.Deletion.Reason.purged(_:);
  int v44 = enum case for CKDatabase.DatabaseChange.Deletion.Reason.encryptedDataReset(_:);
  uint64_t v28 = (void (**)(char *, uint64_t))(v2 + 1);
  v52 += 16;
  uint64_t v29 = (void (**)(char *, uint64_t))(v52 - 8);
  while (1)
  {
    v50(v53, v27, v54);
    uint64_t v30 = CKDatabase.DatabaseChange.Deletion.zoneID.getter();
    uint64_t v31 = v55;
    CKDatabase.DatabaseChange.Deletion.reason.getter();
    uint64_t v32 = v51;
    uint64_t v33 = v56;
    (*v49)(v51, v31, v56);
    uint64_t result = (*v48)(v32, v33);
    if (result != v47) {
      break;
    }
    char v35 = 0;
LABEL_14:
    (*v28)(v55, v56);
    (*v29)(v53, v54);
    uint64_t v36 = v57;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1006BB944(0, *((void *)v36 + 2) + 1, 1);
      uint64_t v36 = v57;
    }
    unint64_t v38 = *((void *)v36 + 2);
    unint64_t v37 = *((void *)v36 + 3);
    if (v38 >= v37 >> 1)
    {
      sub_1006BB944(v37 > 1, v38 + 1, 1);
      uint64_t v36 = v57;
    }
    *((void *)v36 + 2) = v38 + 1;
    uint64_t v39 = &v36[2 * v38];
    *((void *)v39 + 4) = v30;
    *((unsigned char *)v39 + 40) = v35;
    v27 += v46;
    if (!--v24)
    {
      uint64_t v22 = v42;
      a1 = v43;
      goto LABEL_20;
    }
  }
  if (result == v45)
  {
    char v35 = 1;
    goto LABEL_14;
  }
  if (result == v44)
  {
    char v35 = 2;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

double *sub_1006D4558(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CKDatabase.RecordZoneChange.Deletion();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  uint64_t v41 = v3;
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CKDatabase.RecordZoneChange.Modification();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = CKSyncEngine.Event.FetchedRecordZoneChanges.modifications.getter();
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v37 = a1;
  if (v13)
  {
    uint64_t v42 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    id v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v15 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v36 = (double *)v12;
    uint64_t v16 = v12 + ((v15 + 32) & ~v15);
    uint64_t v38 = *(void *)(v8 + 72);
    uint64_t v39 = v14;
    do
    {
      v39(v11, v16, v7);
      CKDatabase.RecordZoneChange.Modification.record.getter();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v16 += v38;
      --v13;
    }
    while (v13);
    uint64_t v17 = v42;
    swift_bridgeObjectRelease();
    a1 = v37;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = _swiftEmptyArrayStorage;
  }
  uint64_t v18 = CKSyncEngine.Event.FetchedRecordZoneChanges.deletions.getter();
  int64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    uint64_t v36 = v17;
    uint64_t v42 = _swiftEmptyArrayStorage;
    sub_1006BB964(0, v19, 0);
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
    uint64_t v21 = *(unsigned __int8 *)(v41 + 80);
    uint64_t v35 = v18;
    uint64_t v22 = v18 + ((v21 + 32) & ~v21);
    uint64_t v38 = *(void *)(v41 + 72);
    uint64_t v39 = v20;
    v41 += 16;
    uint64_t v23 = (void (**)(char *, uint64_t))(v41 - 8);
    do
    {
      uint64_t v24 = v40;
      v39(v6, v22, v40);
      uint64_t v25 = CKDatabase.RecordZoneChange.Deletion.recordID.getter();
      uint64_t v26 = CKDatabase.RecordZoneChange.Deletion.recordType.getter();
      uint64_t v28 = v27;
      (*v23)(v6, v24);
      uint64_t v29 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB964(0, *((void *)v29 + 2) + 1, 1);
        uint64_t v29 = v42;
      }
      unint64_t v31 = *((void *)v29 + 2);
      unint64_t v30 = *((void *)v29 + 3);
      if (v31 >= v30 >> 1)
      {
        sub_1006BB964(v30 > 1, v31 + 1, 1);
        uint64_t v29 = v42;
      }
      *((void *)v29 + 2) = v31 + 1;
      uint64_t v32 = &v29[3 * v31];
      *((void *)v32 + 4) = v25;
      *((void *)v32 + 5) = v26;
      *((void *)v32 + 6) = v28;
      v22 += v38;
      --v19;
    }
    while (v19);
    uint64_t v17 = v36;
    a1 = v37;
  }
  uint64_t v33 = type metadata accessor for CKSyncEngine.Event.FetchedRecordZoneChanges();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(a1, v33);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1006D490C(uint64_t a1)
{
  uint64_t v29 = type metadata accessor for CKSyncEngine.Event.SentDatabaseChanges.FailedZoneSave();
  uint64_t v2 = *(void *)(v29 - 8);
  __chkstk_darwin(v29, v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = CKSyncEngine.Event.SentDatabaseChanges.savedZones.getter();
  uint64_t v7 = CKSyncEngine.Event.SentDatabaseChanges.failedZoneSaves.getter();
  int64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v24 = v6;
    uint64_t v25 = a1;
    unint64_t v30 = _swiftEmptyArrayStorage;
    sub_1006BB984(0, v8, 0);
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
    uint64_t v9 = v2 + 16;
    uint64_t v11 = *(unsigned __int8 *)(v9 + 64);
    uint64_t v23 = v7;
    uint64_t v12 = v7 + ((v11 + 32) & ~v11);
    uint64_t v27 = *(void *)(v9 + 56);
    uint64_t v28 = v10;
    uint64_t v26 = (void (**)(char *, uint64_t))(v9 - 8);
    do
    {
      uint64_t v13 = v29;
      uint64_t v14 = v9;
      v28(v5, v12, v29);
      uint64_t v15 = CKSyncEngine.Event.SentDatabaseChanges.FailedZoneSave.zone.getter();
      uint64_t v16 = CKSyncEngine.Event.SentDatabaseChanges.FailedZoneSave.error.getter();
      (*v26)(v5, v13);
      uint64_t v17 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB984(0, *((void *)v17 + 2) + 1, 1);
        uint64_t v17 = v30;
      }
      unint64_t v19 = *((void *)v17 + 2);
      unint64_t v18 = *((void *)v17 + 3);
      if (v19 >= v18 >> 1)
      {
        sub_1006BB984(v18 > 1, v19 + 1, 1);
        uint64_t v17 = v30;
      }
      *((void *)v17 + 2) = v19 + 1;
      uint64_t v20 = &v17[2 * v19];
      *((void *)v20 + 4) = v15;
      *((void *)v20 + 5) = v16;
      v12 += v27;
      --v8;
      uint64_t v9 = v14;
    }
    while (v8);
    swift_bridgeObjectRelease();
    uint64_t v6 = v24;
    a1 = v25;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  CKSyncEngine.Event.SentDatabaseChanges.deletedZoneIDs.getter();
  CKSyncEngine.Event.SentDatabaseChanges.failedZoneDeletes.getter();
  uint64_t v21 = type metadata accessor for CKSyncEngine.Event.SentDatabaseChanges();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(a1, v21);
  return v6;
}

uint64_t sub_1006D4B78(uint64_t a1)
{
  uint64_t v29 = type metadata accessor for CKSyncEngine.Event.SentRecordZoneChanges.FailedRecordSave();
  uint64_t v2 = *(void *)(v29 - 8);
  __chkstk_darwin(v29, v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = CKSyncEngine.Event.SentRecordZoneChanges.savedRecords.getter();
  uint64_t v7 = CKSyncEngine.Event.SentRecordZoneChanges.failedRecordSaves.getter();
  int64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v24 = v6;
    uint64_t v25 = a1;
    unint64_t v30 = _swiftEmptyArrayStorage;
    sub_1006BB9A4(0, v8, 0);
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
    uint64_t v9 = v2 + 16;
    uint64_t v11 = *(unsigned __int8 *)(v9 + 64);
    uint64_t v23 = v7;
    uint64_t v12 = v7 + ((v11 + 32) & ~v11);
    uint64_t v27 = *(void *)(v9 + 56);
    uint64_t v28 = v10;
    uint64_t v26 = (void (**)(char *, uint64_t))(v9 - 8);
    do
    {
      uint64_t v13 = v29;
      uint64_t v14 = v9;
      v28(v5, v12, v29);
      uint64_t v15 = CKSyncEngine.Event.SentRecordZoneChanges.FailedRecordSave.record.getter();
      uint64_t v16 = CKSyncEngine.Event.SentRecordZoneChanges.FailedRecordSave.error.getter();
      (*v26)(v5, v13);
      uint64_t v17 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB9A4(0, *((void *)v17 + 2) + 1, 1);
        uint64_t v17 = v30;
      }
      unint64_t v19 = *((void *)v17 + 2);
      unint64_t v18 = *((void *)v17 + 3);
      if (v19 >= v18 >> 1)
      {
        sub_1006BB9A4(v18 > 1, v19 + 1, 1);
        uint64_t v17 = v30;
      }
      *((void *)v17 + 2) = v19 + 1;
      uint64_t v20 = &v17[2 * v19];
      *((void *)v20 + 4) = v15;
      *((void *)v20 + 5) = v16;
      v12 += v27;
      --v8;
      uint64_t v9 = v14;
    }
    while (v8);
    swift_bridgeObjectRelease();
    uint64_t v6 = v24;
    a1 = v25;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  CKSyncEngine.Event.SentRecordZoneChanges.deletedRecordIDs.getter();
  CKSyncEngine.Event.SentRecordZoneChanges.failedRecordDeletes.getter();
  uint64_t v21 = type metadata accessor for CKSyncEngine.Event.SentRecordZoneChanges();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(a1, v21);
  return v6;
}

uint64_t sub_1006D4DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = type metadata accessor for CKSyncEngine.Event();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  type metadata accessor for SyncEvent(0);
  v4[9] = swift_task_alloc();
  return _swift_task_switch(sub_1006D4ED4, 0, 0);
}

uint64_t sub_1006D4ED4()
{
  unint64_t v1 = (char *)v0[8];
  uint64_t v2 = v0[9];
  uint64_t v9 = v0[4];
  (*(void (**)(char *, void, void))(v0[7] + 16))(v1, v0[2], v0[6]);
  sub_1006CE950(v1, v2);
  int64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 16) + **(int **)(v9 + 16));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[10] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1006D4FFC;
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[3];
  return v8(v4, v6, v5);
}

uint64_t sub_1006D4FFC()
{
  uint64_t v1 = *(void *)(*v0 + 72);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  sub_1006D3D90(v1, type metadata accessor for SyncEvent);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_1006D5170()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1006D51B8()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLTree()
{
  return sub_100568E70();
}

uint64_t sub_1006D5208()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Optional();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1006D52F4()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 88) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 104));
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 112);
  uint64_t v2 = type metadata accessor for Optional();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_weakDestroy();
  return v0;
}

uint64_t sub_1006D5408()
{
  sub_1006D52F4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLTreeNode()
{
  return sub_100568E70();
}

uint64_t sub_1006D5478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(v3 + 80);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v35 = a3;
  uint64_t v36 = v7;
  __chkstk_darwin(a1, a2);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Optional();
  uint64_t v37 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v32 - v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v15 = *(void *)(TupleTypeMetadata2 - 8);
  __chkstk_darwin(TupleTypeMetadata2, v16);
  unint64_t v18 = (char *)&v32 - v17;
  if (dispatch thunk of static Equatable.== infix(_:_:)())
  {
    uint64_t v33 = v9;
    uint64_t v34 = v15;
    uint64_t v19 = a1 + *(void *)(*(void *)a1 + 112);
    uint64_t v20 = a2 + *(void *)(*(void *)a2 + 112);
    uint64_t v21 = &v18[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
    v22(v18, v19, v10);
    v22(v21, v20, v10);
    uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
    if (v23(v18, 1, v6) == 1)
    {
      int v24 = v23(v21, 1, v6);
      uint64_t v25 = v34;
      if (v24 == 1) {
        uint64_t v25 = v37;
      }
      else {
        uint64_t v10 = TupleTypeMetadata2;
      }
      char v26 = v24 == 1;
    }
    else
    {
      v22(v13, (uint64_t)v18, v10);
      int v27 = v23(v21, 1, v6);
      uint64_t v28 = v36;
      if (v27 == 1)
      {
        (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v6);
        char v26 = 0;
        uint64_t v25 = v34;
        uint64_t v10 = TupleTypeMetadata2;
      }
      else
      {
        uint64_t v29 = v33;
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v21, v6);
        char v26 = dispatch thunk of static Equatable.== infix(_:_:)();
        unint64_t v30 = *(void (**)(char *, uint64_t))(v28 + 8);
        v30(v29, v6);
        v30(v13, v6);
        uint64_t v25 = v37;
      }
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v10);
  }
  else
  {
    char v26 = 0;
  }
  return v26 & 1;
}

uint64_t sub_1006D583C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1006D5478(*a1, *a2, *(void *)(a4 - 8));
}

uint64_t sub_1006D584C(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned char *a8)
{
  swift_retain_n();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_27;
  }
  while (1)
  {
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v18) {
      goto LABEL_29;
    }
    while (1)
    {
LABEL_4:
      unint64_t v12 = (unint64_t)_swiftEmptyArrayStorage >> 62;
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v20) {
          goto LABEL_24;
        }
        swift_bridgeObjectRetain();
        uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v15) {
          goto LABEL_25;
        }
      }
      else if (!*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_24;
      }
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      if (!v12)
      {
LABEL_9:
        if (!*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_26;
        }
        goto LABEL_10;
      }
LABEL_18:
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v16) {
        goto LABEL_26;
      }
LABEL_10:
      sub_100F4D260(0, 1);
      sub_100CA8AA4(v13, a2, a3 & 1, a4, a5, a6, a7, a8);
      if (v8)
      {
        swift_release();
        goto LABEL_29;
      }
      swift_beginAccess();
      unint64_t v14 = swift_bridgeObjectRetain();
      sub_1006E2FE0(v14);
      swift_release();
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v17) {
          goto LABEL_29;
        }
      }
      else if (!*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_29;
      }
    }
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v13 = *(void *)&_swiftEmptyArrayStorage[4];
      swift_retain();
      if (!v12) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_4;
  }
LABEL_29:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1006D5B10(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, void (*a5)(char *, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, char a9, char *a10)
{
  swift_retain_n();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_27;
  }
  while (1)
  {
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v18) {
      goto LABEL_29;
    }
    while (1)
    {
LABEL_4:
      unint64_t v12 = (unint64_t)_swiftEmptyArrayStorage >> 62;
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v20) {
          goto LABEL_24;
        }
        swift_bridgeObjectRetain();
        uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v15) {
          goto LABEL_25;
        }
      }
      else if (!*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_24;
      }
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      if (!v12)
      {
LABEL_9:
        if (!*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_26;
        }
        goto LABEL_10;
      }
LABEL_18:
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v16) {
        goto LABEL_26;
      }
LABEL_10:
      sub_100F4D26C(0, 1);
      sub_100CAE534((void *)v13, a2, a3, a4, a5, a6, a7, a8, a9 & 1, a10);
      if (v10)
      {
        swift_release();
        goto LABEL_29;
      }
      swift_beginAccess();
      unint64_t v14 = swift_bridgeObjectRetain();
      sub_1006E357C(v14);
      swift_release();
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v17) {
          goto LABEL_29;
        }
      }
      else if (!*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_29;
      }
    }
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v13 = *(void *)&_swiftEmptyArrayStorage[4];
      swift_retain();
      if (!v12) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_4;
  }
LABEL_29:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1006D5DD8(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), unsigned char *a4, void *a5, char *a6, uint64_t a7)
{
  swift_retain_n();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_27;
  }
  while (1)
  {
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v18) {
      goto LABEL_29;
    }
    while (1)
    {
LABEL_4:
      unint64_t v12 = (unint64_t)_swiftEmptyArrayStorage >> 62;
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v20) {
          goto LABEL_24;
        }
        swift_bridgeObjectRetain();
        uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v15) {
          goto LABEL_25;
        }
      }
      else if (!*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_24;
      }
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      if (!v12)
      {
LABEL_9:
        if (!*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_26;
        }
        goto LABEL_10;
      }
LABEL_18:
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v16) {
        goto LABEL_26;
      }
LABEL_10:
      sub_100F4D260(0, 1);
      sub_100D59FDC(v13, a2, a3, a4, a5, a6, a7);
      if (v7)
      {
        swift_release();
        goto LABEL_29;
      }
      swift_beginAccess();
      unint64_t v14 = swift_bridgeObjectRetain();
      sub_1006E2FE0(v14);
      swift_release();
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v17) {
          goto LABEL_29;
        }
      }
      else if (!*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_29;
      }
    }
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v13 = *(void *)&_swiftEmptyArrayStorage[4];
      swift_retain();
      if (!v12) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_4;
  }
LABEL_29:
  swift_release();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1006D60A8()
{
  unint64_t result = qword_10167B8A0;
  if (!qword_10167B8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B8A0);
  }
  return result;
}

unint64_t sub_1006D6100()
{
  unint64_t result = qword_10167B8A8;
  if (!qword_10167B8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B8A8);
  }
  return result;
}

uint64_t sub_1006D6154()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1006D6188()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006D61A4()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1006D61C8()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_1006D61EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v75 = a1;
  uint64_t v1 = sub_1005057FC(&qword_101678470);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v61 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for InputConnectionBehavior();
  uint64_t v81 = *(void *)(v79 - 8);
  __chkstk_darwin(v79, v4);
  uint64_t v78 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_101673B38);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v72 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v77 = (char *)&v57 - v11;
  uint64_t v12 = sub_1005057FC(&qword_101691F20);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v60 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v76 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  uint64_t v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for Locale();
  __chkstk_darwin(v23 - 8, v24);
  uint64_t v25 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v25 - 8, v26);
  uint64_t v80 = type metadata accessor for LocalizedStringResource();
  uint64_t v27 = *(void *)(v80 - 8);
  __chkstk_darwin(v80, v28);
  uint64_t v69 = (char *)&v57 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30, v31);
  uint64_t v66 = (char *)&v57 - v32;
  uint64_t v59 = sub_1005057FC(&qword_101673B48);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v33 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v35 = v19 + 104;
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 104);
  v34(v22, enum case for LocalizedStringResource.BundleDescription.main(_:), v18);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  unsigned int v62 = v33;
  uint64_t v63 = v18;
  v34(v22, v33, v18);
  uint64_t v64 = v34;
  uint64_t v65 = v35;
  uint64_t v36 = v76;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v37 = *(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56);
  uint64_t v73 = v27 + 56;
  uint64_t v74 = v37;
  v37(v36, 0, 1, v80);
  uint64_t v38 = type metadata accessor for CRLBoardEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v60, 1, 1, v38);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v34(v22, v33, v18);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v39 = v77;
  IntentDialog.init(_:)();
  uint64_t v40 = type metadata accessor for IntentDialog();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
  uint64_t v68 = v41 + 56;
  uint64_t v67 = v42;
  v42(v39, 0, 1, v40);
  v42(v72, 1, 1, v40);
  unsigned int v71 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v70 = *(void (**)(char *))(v81 + 104);
  v81 += 104;
  v70(v78);
  sub_1006D8F18((unint64_t *)&qword_101673B60, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  uint64_t v43 = v76;
  *uint64_t v75 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  uint64_t v60 = (char *)sub_1005057FC(&qword_10167B8F8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v44 = v62;
  uint64_t v45 = v63;
  uint64_t v46 = v64;
  v64(v22, v62, v63);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v46(v22, v44, v45);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v74(v43, 0, 1, v80);
  LOBYTE(v82) = 6;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v46(v22, v44, v45);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  int v47 = v77;
  IntentDialog.init(_:)();
  uint64_t v58 = v40;
  uint64_t v48 = v67;
  v67(v47, 0, 1, v40);
  v48(v72, 1, 1, v40);
  sub_1005057FC(&qword_10167B900);
  swift_getKeyPath();
  uint64_t v84 = IntentParameterDependency.__allocating_init<A, B>(_:)();
  ((void (*)(char *, void, uint64_t))v70)(v78, v71, v79);
  sub_1006D8D70();
  sub_1006D8DC4();
  uint64_t v49 = v76;
  uint64_t v50 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:optionsProvider:)();
  uint64_t v51 = v75;
  v75[1] = v50;
  uint64_t v72 = (char *)sub_1005057FC(&qword_101678478);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v52 = v62;
  uint64_t v53 = v63;
  uint64_t v54 = v64;
  v64(v22, v62, v63);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v54(v22, v52, v53);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v74(v49, 0, 1, v80);
  uint64_t v55 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v61, 1, 1, v55);
  v67(v77, 1, 1, v58);
  ((void (*)(char *, void, uint64_t))v70)(v78, v71, v79);
  v51[2] = IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)();
  sub_1005057FC(&qword_101673B50);
  unint64_t v82 = 0xD00000000000001FLL;
  unint64_t v83 = 0x800000010123B260;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  v51[3] = result;
  v51[7] = (uint64_t)&type metadata for CRLBoardItemInsertionPerformer;
  v51[8] = (uint64_t)&off_101527730;
  return result;
}

uint64_t sub_1006D6EB0(uint64_t a1)
{
  v2[16] = a1;
  v2[17] = v1;
  sub_1005057FC(&qword_101678470);
  v2[18] = swift_task_alloc();
  v2[19] = type metadata accessor for CRLBoardEntity();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Logger();
  v2[22] = v3;
  v2[23] = *(void *)(v3 - 8);
  v2[24] = swift_task_alloc();
  return _swift_task_switch(sub_1006D6FE0, 0, 0);
}

uint64_t sub_1006D6FE0()
{
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = (id)static OS_os_log.appIntents;
  Logger.init(_:)();
  IntentParameter.wrappedValue.getter();
  uint64_t v2 = *(unsigned __int8 *)(v0 + 216);
  IntentParameter.wrappedValue.getter();
  IntentParameter.wrappedValue.getter();
  AppDependency.wrappedValue.getter();
  *(void *)(v0 + 40) = &type metadata for CRLBoardLibraryProvidingDependency;
  *(void *)(v0 + 48) = &off_10152F800;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1016966C0 + dword_1016966C0);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1006D7164;
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 144);
  return v7(v2, v4, v5, v0 + 16);
}

uint64_t sub_1006D7164(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 208) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 168);
    sub_10065ABCC(*(void *)(v4 + 144));
    sub_1005F6324(v5);
    uint64_t v6 = sub_1006D7418;
  }
  else
  {
    uint64_t v7 = v4 + 16;
    uint64_t v8 = *(void *)(v4 + 168);
    uint64_t v9 = *(void *)(v4 + 144);

    sub_10065ABCC(v9);
    sub_1005F6324(v8);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v7);
    uint64_t v6 = sub_1006D72C0;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_1006D72C0()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[22];
  uint64_t v4 = v0[20];
  IntentParameter.wrappedValue.getter();
  v0[15] = IntentParameter.projectedValue.getter();
  sub_1006D8F18((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  sub_1005F6380();
  static IntentResult.result<A, B>(value:opensIntent:)();
  swift_release();
  sub_1005F6324(v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1006D7418()
{
  uint64_t v12 = v0;
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 2));
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_getErrorValue();
    uint64_t v4 = Error.publicDescription.getter(v0[11], v0[12]);
    v0[14] = sub_100E04348(v4, v5, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error inserting shape %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = v0[23];
  uint64_t v6 = v0[24];
  uint64_t v8 = v0[22];
  type metadata accessor for _PrebuiltAppIntentError();
  sub_1006D8F18((unint64_t *)&qword_101678490, (void (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError);
  swift_allocError();
  static _UnrecoverableError.unknownError.getter();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1006D76B0()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  sub_100568B28(v9, qword_10171A460);
  sub_100556B74(v9, (uint64_t)qword_10171A460);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_1006D78A8@<X0>(uint64_t a1@<X8>)
{
  v19[1] = a1;
  uint64_t v1 = sub_1005057FC(&qword_10167B970);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v3 = sub_1005057FC(&qword_10167B978);
  __chkstk_darwin(v3, v4);
  uint64_t v5 = sub_1005057FC(&qword_10167B950);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)v19 - v12;
  sub_1006D8EC4();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 543450177;
  v14._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  sub_1005057FC(&qword_10167B980);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v15._countAndFlagsBits = 544175136;
  v15._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  sub_1005057FC(&qword_10167B990);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v16);
  ParameterSummaryString.init(stringInterpolation:)();
  IntentParameterSummary.init(_:table:)();
  sub_100523288(&qword_10167B958, &qword_10167B950);
  static ParameterSummaryBuilder.buildExpression<A>(_:)();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17(v9, v5);
  static ParameterSummaryBuilder.buildBlock<A>(_:)();
  return ((uint64_t (*)(char *, uint64_t))v17)(v13, v5);
}

uint64_t sub_1006D7BBC@<X0>(uint64_t a1@<X8>)
{
  v20[1] = a1;
  uint64_t v1 = sub_1005057FC(&qword_10167B970);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v3 = sub_1005057FC(&qword_10167B978);
  __chkstk_darwin(v3, v4);
  uint64_t v5 = sub_1005057FC(&qword_10167B950);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)v20 - v12;
  sub_1006D8EC4();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 543450177;
  v14._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  sub_1005057FC(&qword_10167B980);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v15._countAndFlagsBits = 0x206874697720;
  v15._object = (void *)0xE600000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  sub_1005057FC(&qword_10167B988);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v16._countAndFlagsBits = 544175136;
  v16._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  sub_1005057FC(&qword_10167B990);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v17);
  ParameterSummaryString.init(stringInterpolation:)();
  IntentParameterSummary.init(_:table:)();
  sub_100523288(&qword_10167B958, &qword_10167B950);
  static ParameterSummaryBuilder.buildExpression<A>(_:)();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v18(v9, v5);
  static ParameterSummaryBuilder.buildBlock<A>(_:)();
  return ((uint64_t (*)(char *, uint64_t))v18)(v13, v5);
}

uint64_t sub_1006D7F1C@<X0>(uint64_t a1@<X8>)
{
  if (qword_10166EE58 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_100556B74(v2, (uint64_t)qword_10171A460);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1006D7FC4()
{
  uint64_t v0 = type metadata accessor for EquatableComparisonOperator();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = &v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getKeyPath();
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v4, enum case for EquatableComparisonOperator.equalTo(_:), v0);
  v6[15] = 1;
  sub_1005057FC(&qword_10167B950);
  sub_100523288(&qword_10167B958, &qword_10167B950);
  sub_1006D8F8C();
  sub_100523288(&qword_10167B968, &qword_10167B8F8);
  return ParameterSummaryWhenCondition.init<A, B>(_:_:_:_:otherwise:)();
}

uint64_t sub_1006D8190(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528488;
  return sub_1006D6EB0(a1);
}

uint64_t sub_1006D822C(uint64_t a1)
{
  unint64_t v2 = sub_1006D8EC4();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_1006D826C()
{
  unint64_t result = qword_10167B8B8;
  if (!qword_10167B8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B8B8);
  }
  return result;
}

unint64_t sub_1006D82C4()
{
  unint64_t result = qword_10167B8C0;
  if (!qword_10167B8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B8C0);
  }
  return result;
}

unint64_t sub_1006D831C()
{
  unint64_t result = qword_10167B8C8;
  if (!qword_10167B8C8)
  {
    sub_100522D34(qword_10167B8D0);
    sub_1006D82C4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B8C8);
  }
  return result;
}

uint64_t sub_1006D8390(uint64_t a1)
{
  _OWORD v1[2] = a1;
  uint64_t v2 = type metadata accessor for AttributedString.Index();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v1[6] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for AttributedString.CharacterView();
  v1[7] = v3;
  v1[8] = *(void *)(v3 - 8);
  v1[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for AttributedString();
  v1[10] = v4;
  v1[11] = *(void *)(v4 - 8);
  v1[12] = swift_task_alloc();
  return _swift_task_switch(sub_1006D8518, 0, 0);
}

uint64_t sub_1006D8518()
{
  if (IntentParameterDependency.wrappedValue.getter())
  {
    uint64_t v2 = v0[11];
    uint64_t v1 = v0[12];
    uint64_t v3 = v0[9];
    uint64_t v15 = v0[8];
    uint64_t v4 = v0[6];
    uint64_t v13 = v0[10];
    uint64_t v14 = v0[7];
    uint64_t v5 = v0[4];
    uint64_t v6 = v0[5];
    uint64_t v7 = v0[3];
    swift_getKeyPath();
    sub_1006D8E20();
    IntentProjection.subscript.getter();
    swift_release();
    AttributedString.characters.getter();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v13);
    sub_1006D8F18(&qword_10167B930, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
    dispatch thunk of Collection.startIndex.getter();
    dispatch thunk of Collection.endIndex.getter();
    sub_1006D8F18(&qword_10167B938, (void (*)(uint64_t))&type metadata accessor for AttributedString.Index);
    char v8 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v9(v6, v7);
    v9(v4, v7);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v3, v14);
    if (v8)
    {
      uint64_t v10 = &off_101503F50;
    }
    else
    {
      if (qword_10166F300 != -1) {
        swift_once();
      }
      uint64_t v10 = (_UNKNOWN **)qword_10171AD50;
      swift_bridgeObjectRetain();
    }
    swift_release();
  }
  else
  {
    uint64_t v10 = &off_101503F50;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(_UNKNOWN **))v0[1];
  return v11(v10);
}

uint64_t sub_1006D87A4(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1006D883C;
  return sub_1006D8390(v3);
}

uint64_t sub_1006D883C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_1006D894C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100528488;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

ValueMetadata *type metadata accessor for CRLInsertShapeToBoardIntent.ShapeTypeEntityProvider()
{
  return &type metadata for CRLInsertShapeToBoardIntent.ShapeTypeEntityProvider;
}

uint64_t destroy for CRLInsertShapeToBoardIntent(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 32);
}

uint64_t initializeWithCopy for CRLInsertShapeToBoardIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = a2 + 32;
  long long v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v8(a1 + 32, v5, v7);
  return a1;
}

void *assignWithCopy for CRLInsertShapeToBoardIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  sub_10054BB2C(a1 + 4, a2 + 4);
  return a1;
}

__n128 initializeWithTake for CRLInsertShapeToBoardIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for CRLInsertShapeToBoardIntent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLInsertShapeToBoardIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLInsertShapeToBoardIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLInsertShapeToBoardIntent()
{
  return &type metadata for CRLInsertShapeToBoardIntent;
}

uint64_t sub_1006D8D08()
{
  return sub_100523288(&qword_10167B8E8, &qword_10167B8F0);
}

uint64_t sub_1006D8D44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1006D8D70()
{
  unint64_t result = qword_10167B908;
  if (!qword_10167B908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B908);
  }
  return result;
}

unint64_t sub_1006D8DC4()
{
  unint64_t result = qword_10167B910;
  if (!qword_10167B910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10167B910);
  }
  return result;
}

unint64_t sub_1006D8E20()
{
  unint64_t result = qword_10167B920;
  if (!qword_10167B920)
  {
    sub_100522D34(&qword_101678470);
    sub_1006D8F18(&qword_10167B928, (void (*)(uint64_t))&type metadata accessor for AttributedString);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B920);
  }
  return result;
}

unint64_t sub_1006D8EC4()
{
  unint64_t result = qword_10167B940;
  if (!qword_10167B940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10167B940);
  }
  return result;
}

uint64_t sub_1006D8F18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006D8F60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1006D8F8C()
{
  unint64_t result = qword_10167B960;
  if (!qword_10167B960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167B960);
  }
  return result;
}

uint64_t sub_1006D8FE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

id sub_1006D900C()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for CRLTextInputLogger()) init];
  qword_10171A478 = (uint64_t)result;
  return result;
}

id sub_1006D909C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLTextInputLogger();
  [super dealloc];
}

uint64_t type metadata accessor for CRLTextInputLogger()
{
  return self;
}

uint64_t sub_1006D9104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006D9144(a1, a2, a3);
}

uint64_t sub_1006D9114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006D9480(a1, a2, a3, (uint64_t *)&unk_1016743B0);
}

uint64_t sub_1006D9120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006D92F0(a1, a2, a3, (void (*)(void))&type metadata accessor for URL);
}

uint64_t sub_1006D9138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006D9144(a1, a2, a3);
}

uint64_t sub_1006D9144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_1005E52F0(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1006D92C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006D9480(a1, a2, a3, (uint64_t *)&unk_10169A2A0);
}

uint64_t sub_1006D92CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006D9480(a1, a2, a3, &qword_10167BA68);
}

uint64_t sub_1006D92D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006D92F0(a1, a2, a3, type metadata accessor for CGImage);
}

uint64_t sub_1006D92F0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v7 = type metadata accessor for TaskPriority();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, 1, v7) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1005E52F0(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  a4(0);
  return swift_task_create();
}

uint64_t sub_1006D9474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006D9480(a1, a2, a3, &qword_10167BA70);
}

uint64_t sub_1006D9480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = type metadata accessor for TaskPriority();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, 1, v7) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1005E52F0(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  sub_1005057FC(a4);
  return swift_task_create();
}

uint64_t sub_1006D9600(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1006D9628(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1006D9650(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 296) = a2;
  *(void *)(v4 + 304) = v3;
  *(unsigned char *)(v4 + 169) = a3;
  *(void *)(v4 + 288) = a1;
  sub_1005057FC(&qword_101672BB0);
  *(void *)(v4 + 312) = swift_task_alloc();
  uint64_t v5 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  *(void *)(v4 + 320) = v5;
  *(void *)(v4 + 328) = *(void *)(v5 + 64);
  *(void *)(v4 + 336) = swift_task_alloc();
  return _swift_task_switch(sub_1006D974C, 0, 0);
}

uint64_t sub_1006D974C()
{
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v4 = *(void *)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 296);
  uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_sideStore);
  *(void *)(v0 + 344) = v5;
  uint64_t v6 = swift_task_alloc();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v3;
  sub_1005057FC(&qword_10167BA20);
  OS_dispatch_queue.sync<A>(execute:)();
  swift_task_dealloc();
  sub_100541074(*(void *)(v0 + 264), *(unsigned char *)(v0 + 272));
  sub_100540CFC(v3, v1);
  sub_1005057FC(&qword_10167ADD0);
  int v7 = *(_DWORD *)(v2 + 80);
  *(_DWORD *)(v0 + 172) = v7;
  unint64_t v8 = (v7 + 32) & ~(unint64_t)v7;
  uint64_t v9 = swift_allocObject();
  *(void *)(v0 + 352) = v9;
  *(_OWORD *)(v9 + 16) = xmmword_10117E810;
  sub_1005394E4(v1, v9 + v8);
  uint64_t v10 = swift_task_alloc();
  *(void *)(v0 + 360) = v10;
  *(void *)(v10 + 16) = v4;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = 1;
  *(unsigned char *)(v10 + 40) = 1;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 368) = v11;
  uint64_t v12 = type metadata accessor for CRLBoardDatabaseFetchResult();
  *uint64_t v11 = v0;
  v11[1] = sub_1006D994C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 280, 0, 0, 0x3A5F286863746566, 0xE900000000000029, sub_1006DA81C, v10, v12);
}

uint64_t sub_1006D994C()
{
  *(void *)(*(void *)v1 + 376) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1006DA224;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1006D9A68;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1006D9A68()
{
  uint64_t v1 = *(void *)(v0 + 296);
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v0 + 280);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  sub_100950B44(v1, v3, v0 + 176);
  swift_bridgeObjectRelease();
  sub_1006DABA4(v0 + 176, v0 + 136);
  uint64_t v4 = *(void *)(v0 + 136);
  if (!v4)
  {
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v18 = (void *)static OS_os_log.crlDefault;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v20 = v18;
    uint64_t v21 = UUID.uuidString.getter();
    uint64_t v23 = v22;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v21;
    *(void *)(inited + 40) = v23;
    uint64_t v24 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v20, (uint64_t)&_mh_execute_header, v24, (uint64_t)"boardIdentifier not found: %{public}@", 37, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_1006DAC0C();
    swift_allocError();
    *uint64_t v25 = 0;
    swift_willThrow();
    uint64_t v55 = &unk_10167BA40;
    goto LABEL_8;
  }
  uint64_t v53 = *(void *)(v0 + 376);
  uint64_t v5 = *(void *)(v0 + 304);
  int queue = *(unsigned __int8 *)(v0 + 169);
  uint64_t v6 = *(void **)(v0 + 288);
  uint64_t v8 = *(void *)(v0 + 144);
  uint64_t v7 = *(void *)(v0 + 152);
  uint64_t v9 = *(void **)(v0 + 160);
  uint64_t v10 = *(unsigned __int8 *)(v0 + 168);
  uint64_t v11 = *(uint64_t (**)(id, uint64_t, uint64_t, uint64_t, void *, uint64_t))(v5 + 648);
  id v54 = v9;
  id v12 = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v13 = (void *)v11(v12, v4, v8, v7, v9, v10);
  uint64_t v14 = type metadata accessor for CRLTransactionContext(0);
  unint64_t v15 = sub_1006DAC64();
  uint64_t v16 = v13;
  uint64_t v17 = sub_101033F9C((uint64_t)v16, v14, v5, v15);

  sub_100CFE220(v2, v17, queue, 2);
  if (v53)
  {
    swift_release();

    swift_release();
    swift_release();
    swift_release();

    uint64_t v55 = &unk_10167BA50;
LABEL_8:
    swift_release();
    uint64_t v26 = *(unsigned __int8 *)(v0 + 172);
    uint64_t v27 = *(void *)(v0 + 336);
    uint64_t v28 = *(void *)(v0 + 312);
    uint64_t v30 = *(void **)(v0 + 288);
    uint64_t v29 = *(void *)(v0 + 296);
    sub_100944970(v29);
    uint64_t v31 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v28, 1, 1, v31);
    sub_100540CFC(v29, v27);
    uint64_t v32 = (void *)swift_allocObject();
    void v32[2] = 0;
    v32[3] = 0;
    v32[4] = v30;
    sub_1005394E4(v27, (uint64_t)v32 + ((v26 + 40) & ~v26));
    id v33 = v30;
    sub_1006D9144(v28, (uint64_t)v55, (uint64_t)v32);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v34 = *(uint64_t (**)(void))(v0 + 8);
    return v34();
  }
  (*(void (**)(void))(*(void *)v17 + 720))();
  char v36 = *(unsigned char *)(v0 + 169);
  swift_release();
  [v16 fixUp];
  if (v36)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
  }
  else
  {
    uint64_t v37 = *(void *)&v16[OBJC_IVAR____TtC8Freeform8CRLBoard_pendingChanges];
    queuea = *(NSObject **)(v37 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = v17;
    *(void *)(v38 + 24) = v37;
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = sub_1006DADEC;
    *(void *)(v39 + 24) = v38;
    *(void *)(v0 + 120) = sub_1006DAE04;
    *(void *)(v0 + 128) = v39;
    *(void *)(v0 + 88) = _NSConcreteStackBlock;
    *(void *)(v0 + 96) = *(void *)"";
    *(void *)(v0 + 104) = sub_1006D9628;
    *(void *)(v0 + 112) = &unk_101510280;
    uint64_t v40 = _Block_copy((const void *)(v0 + 88));
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(queuea, v40);
    _Block_release(v40);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
      return result;
    }
  }
  uint64_t v42 = *(unsigned __int8 *)(v0 + 172);
  uint64_t v43 = *(void *)(v0 + 336);
  uint64_t v44 = *(void *)(v0 + 312);
  uint64_t v46 = *(void **)(v0 + 288);
  uint64_t v45 = *(void *)(v0 + 296);
  sub_100944970(v45);
  uint64_t v47 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v44, 1, 1, v47);
  sub_100540CFC(v45, v43);
  uint64_t v48 = (void *)swift_allocObject();
  void v48[2] = 0;
  v48[3] = 0;
  v48[4] = v46;
  sub_1005394E4(v43, (uint64_t)v48 + ((v42 + 40) & ~v42));
  id v49 = v46;
  sub_1006D9144(v44, (uint64_t)&unk_10167BA60, (uint64_t)v48);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v50 = *(uint64_t (**)(char *))(v0 + 8);
  return v50(v16);
}

uint64_t sub_1006DA224()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 172);
  uint64_t v2 = *(void *)(v0 + 336);
  uint64_t v3 = *(void *)(v0 + 312);
  uint64_t v5 = *(void **)(v0 + 288);
  uint64_t v4 = *(void *)(v0 + 296);
  sub_100944970(v4);
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v3, 1, 1, v6);
  sub_100540CFC(v4, v2);
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v7[2] = 0;
  v7[3] = 0;
  v7[4] = v5;
  sub_1005394E4(v2, (uint64_t)v7 + ((v1 + 40) & ~v1));
  id v8 = v5;
  sub_1006D9144(v3, (uint64_t)&unk_10167BA30, (uint64_t)v7);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1006DA398()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_1006DA3B8, v0, 0);
}

uint64_t sub_1006DA3B8()
{
  uint64_t v1 = self;
  id v2 = [v1 standardUserDefaults];
  NSString v3 = String._bridgeToObjectiveC()();
  unsigned __int8 v4 = [v2 BOOLForKey:v3];

  if (v4)
  {
    id v5 = [v1 standardUserDefaults];
    Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
    NSString v7 = String._bridgeToObjectiveC()();
    [v5 setValue:isa forKey:v7];

    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v8, v9);
    return _assertionFailure(_:_:file:line:flags:)();
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 16);
    type metadata accessor for CRLBoard(0);
    uint64_t v12 = *(void *)(v11 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store);
    uint64_t v13 = v11 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier;
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 24) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1006DA5B4;
    return sub_1006D9650(v12, v13, 0);
  }
}

uint64_t sub_1006DA5B4(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  id v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_1006DA6B4()
{
  sub_100510028(v0 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier);

  swift_defaultActor_destroy();

  return swift_defaultActor_deallocate();
}

uint64_t sub_1006DA704()
{
  return type metadata accessor for CRLBoardActor();
}

uint64_t type metadata accessor for CRLBoardActor()
{
  uint64_t result = qword_10167BA00;
  if (!qword_10167BA00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1006DA758()
{
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1006DA800@<X0>(uint64_t a1@<X8>)
{
  return sub_100944924(*(void *)(v1 + 24), a1);
}

uint64_t sub_1006DA81C(uint64_t a1)
{
  return sub_100C73E10(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
}

uint64_t sub_1006DA82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_1006DA84C, 0, 0);
}

uint64_t sub_1006DA84C()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  id v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *id v2 = v0;
  v2[1] = sub_1006DA938;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v2, 0, 0, 0xD000000000000019, 0x8000000101247480, sub_1006DAF48, v1, (char *)&type metadata for () + 8);
}

uint64_t sub_1006DA938()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_1006DAA54;
  }
  else
  {
    swift_task_dealloc();
    id v2 = sub_100525774;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1006DAA54()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006DAABC()
{
  uint64_t v2 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_100528D08;
  return _swift_task_switch(sub_1006DA84C, 0, 0);
}

uint64_t sub_1006DABA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10169A200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1006DAC0C()
{
  unint64_t result = qword_10167BA38;
  if (!qword_10167BA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167BA38);
  }
  return result;
}

unint64_t sub_1006DAC64()
{
  unint64_t result = qword_10167BA48;
  if (!qword_10167BA48)
  {
    type metadata accessor for CRLBoard(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167BA48);
  }
  return result;
}

uint64_t sub_1006DACC0()
{
  uint64_t v2 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_100528488;
  return _swift_task_switch(sub_1006DA84C, 0, 0);
}

uint64_t sub_1006DADAC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006DADEC()
{
  return sub_1006AACD4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1006DADF4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006DAE04()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1006DAE2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1006DAE3C()
{
  return swift_release();
}

uint64_t sub_1006DAE48()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();

  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1006DAF48(uint64_t a1)
{
  return sub_100C785CC(a1, *(char **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1006DAF68()
{
  return sub_1006DAF90() & 1;
}

uint64_t sub_1006DAF90()
{
  return *((unsigned __int8 *)v0 + *(void *)((swift_isaMask & *v0) + 0x78));
}

uint64_t sub_1006DAFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006DAFE4(a3);
}

uint64_t sub_1006DAFE4(uint64_t result)
{
  *((unsigned char *)v1 + *(void *)((swift_isaMask & *v1) + 0x78)) = result;
  return result;
}

uint64_t sub_1006DB010(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)((swift_isaMask & *v2) + 0x50);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(a1, a2);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v27 = v2;
  uint64_t v13 = *(void *)(v12 + 88);
  uint64_t v14 = *(void *)(v13 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness, v16);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)();
  uint64_t v30 = v14;
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)();
  uint64_t v28 = *(void *)(*(void *)(*(void *)(v13 + 16) + 24) + 8);
  char v17 = dispatch thunk of static Comparable.<= infix(_:_:)();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v11, v4);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v31 = v8;
  uint64_t v20 = a1;
  uint64_t v21 = v19;
  uint64_t v26 = v20;
  ((void (*)(char *))v19)(v8);
  if (v17)
  {
    v18(v31, v4);
LABEL_4:
    sub_1005057FC((uint64_t *)&unk_10167BEF0);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_10117E810;
    *(void *)(v24 + 56) = &type metadata for String;
    *(void *)(v24 + 32) = 0xD00000000000001ELL;
    *(void *)(v24 + 40) = 0x8000000101247780;
    print(_:separator:terminator:)();
    return swift_bridgeObjectRelease();
  }
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)();
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)();
  uint64_t v22 = v31;
  char v23 = dispatch thunk of static Comparable.> infix(_:_:)();
  v18(v11, v4);
  v18(v22, v4);
  if (v23) {
    goto LABEL_4;
  }
  v21(v11, v26, v4);
  return CRLOneEuroFilter.mincutoff.setter(v11);
}

void *sub_1006DB370(float a1, float a2)
{
  *(_DWORD *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x60)) = 0;
  *(_DWORD *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x68)) = 0;
  *(_DWORD *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x70)) = 0;
  *((unsigned char *)v2 + *(void *)((swift_isaMask & *v2) + 0x78)) = 0;
  v12.receiver = v2;
  v12.super_class = (Class)sub_1005057FC(&qword_10167BBF8);
  uint64_t v5 = [super init];
  uint64_t v6 = (float *)((char *)v5 + *(void *)((swift_isaMask & *v5) + 0x60));
  swift_beginAccess();
  *uint64_t v6 = a2;
  uint64_t v7 = (float *)((char *)v5 + *(void *)((swift_isaMask & *v5) + 0x70));
  swift_beginAccess();
  *uint64_t v7 = a2;
  if (a1 <= 0.0 || a1 > 1.0)
  {
    sub_1005057FC((uint64_t *)&unk_10167BEF0);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_10117E810;
    *(void *)(v9 + 56) = &type metadata for String;
    *(void *)(v9 + 32) = 0xD00000000000001ELL;
    *(void *)(v9 + 40) = 0x8000000101247780;
    uint64_t v10 = v5;
    print(_:separator:terminator:)();

    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = (float *)((char *)v5 + *(void *)((swift_isaMask & *v5) + 0x68));
    swift_beginAccess();
    *uint64_t v8 = a1;
  }
  *((unsigned char *)v5 + *(void *)((swift_isaMask & *v5) + 0x78)) = 0;
  return v5;
}

void *sub_1006DB5B8(double a1, double a2)
{
  *(void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x60)) = 0;
  *(void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x68)) = 0;
  *(void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x70)) = 0;
  *((unsigned char *)v2 + *(void *)((swift_isaMask & *v2) + 0x78)) = 0;
  v12.receiver = v2;
  v12.super_class = (Class)sub_1005057FC(&qword_10167BBF0);
  uint64_t v5 = [super init];
  uint64_t v6 = (double *)((char *)v5 + *(void *)((swift_isaMask & *v5) + 0x60));
  swift_beginAccess();
  *uint64_t v6 = a2;
  uint64_t v7 = (double *)((char *)v5 + *(void *)((swift_isaMask & *v5) + 0x70));
  swift_beginAccess();
  *uint64_t v7 = a2;
  if (a1 <= 0.0 || a1 > 1.0)
  {
    sub_1005057FC((uint64_t *)&unk_10167BEF0);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_10117E810;
    *(void *)(v9 + 56) = &type metadata for String;
    *(void *)(v9 + 32) = 0xD00000000000001ELL;
    *(void *)(v9 + 40) = 0x8000000101247780;
    uint64_t v10 = v5;
    print(_:separator:terminator:)();

    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = (double *)((char *)v5 + *(void *)((swift_isaMask & *v5) + 0x68));
    swift_beginAccess();
    *uint64_t v8 = a1;
  }
  *((unsigned char *)v5 + *(void *)((swift_isaMask & *v5) + 0x78)) = 0;
  return v5;
}

uint64_t sub_1006DB800@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v56 = a1;
  uint64_t v5 = swift_isaMask & *v2;
  uint64_t v6 = *(void *)(v5 + 0x58);
  uint64_t v7 = *(void *)(v5 + 80);
  uint64_t v52 = *(void *)(v6 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness, v8);
  uint64_t v48 = (char *)&v45 - v9;
  uint64_t v10 = *(void *)(v7 - 8);
  __chkstk_darwin(v11, v12);
  id v49 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v47 = (char *)&v45 - v16;
  __chkstk_darwin(v17, v18);
  uint64_t v51 = (char *)&v45 - v19;
  __chkstk_darwin(v20, v21);
  char v23 = (char *)&v45 - v22;
  __chkstk_darwin(v24, v25);
  id v54 = (char *)&v45 - v26;
  __chkstk_darwin(v27, v28);
  uint64_t v53 = (char *)&v45 - v29;
  uint64_t v30 = *(void *)(*(void *)(*(void *)(v6 + 16) + 16) + 8);
  uint64_t v31 = swift_getAssociatedTypeWitness();
  __chkstk_darwin(v31, v32);
  swift_getAssociatedConformanceWitness();
  dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)();
  uint64_t v55 = a2;
  uint64_t v33 = dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)();
  if (*((unsigned char *)v3 + *(void *)((swift_isaMask & *v3) + 0x78)) == 1)
  {
    CRLOneEuroFilter.mincutoff.getter(v33);
    uint64_t v46 = v30;
    dispatch thunk of static Numeric.* infix(_:_:)();
    uint64_t v34 = *(void (**)(char *, uint64_t))(v10 + 8);
    v34(v23, v7);
    swift_getAssociatedConformanceWitness();
    dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)();
    uint64_t v35 = v47;
    uint64_t v36 = dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)();
    uint64_t v37 = v49;
    CRLOneEuroFilter.mincutoff.getter(v36);
    uint64_t v52 = *(void *)(v46 + 8);
    uint64_t v38 = v51;
    dispatch thunk of static AdditiveArithmetic.- infix(_:_:)();
    v34(v37, v7);
    uint64_t v39 = ((uint64_t (*)(char *, uint64_t))v34)(v35, v7);
    CRLOneEuroFilter.beta.getter(v39);
    dispatch thunk of static Numeric.* infix(_:_:)();
    v34(v35, v7);
    v34(v38, v7);
    uint64_t v41 = v53;
    uint64_t v40 = v54;
    dispatch thunk of static AdditiveArithmetic.+ infix(_:_:)();
    v34(v23, v7);
    v34(v40, v7);
    uint64_t v42 = v55;
    v34(v55, v7);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v42, v41, v7);
    uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v43(v41, v56, v7);
  }
  else
  {
    uint64_t v42 = v55;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v55, v7);
    uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v43(v42, v56, v7);
    *((unsigned char *)v3 + *(void *)((swift_isaMask & *v3) + 0x78)) = 1;
    uint64_t v41 = v53;
    v43(v53, v56, v7);
  }
  CRLOneEuroFilter.freq.setter(v41);
  v43(v41, (uint64_t)v42, v7);
  return CRLOneEuroFilter.beta.setter(v41);
}

uint64_t sub_1006DBD94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  sub_1006DB010(a2, a2);

  return sub_1006DB800(a1, a3);
}

uint64_t sub_1006DBDE0()
{
  return sub_1006DAF90() & 1;
}

uint64_t sub_1006DBE0C(void *a1, uint64_t a2)
{
  return sub_1006DE8B8(a1, a2, (uint64_t (*)(void, void))sub_1006E0010);
}

id sub_1006DBE24()
{
  return sub_1006DE918((uint64_t (*)(void, void, void))type metadata accessor for CRLLowPassFilter);
}

uint64_t sub_1006DBE3C(char *a1)
{
  uint64_t v2 = *(void *)((swift_isaMask & *(void *)a1) + 0x50);
  uint64_t v5 = *(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8);
  v5(&a1[*(void *)((swift_isaMask & *(void *)a1) + 0x60)], v2);
  v5(&a1[*(void *)((swift_isaMask & *(void *)a1) + 0x68)], v2);
  uint64_t v3 = &a1[*(void *)((swift_isaMask & *(void *)a1) + 0x70)];

  return ((uint64_t (*)(char *, uint64_t))v5)(v3, v2);
}

uint64_t _s8Freeform16CRLOneEuroFilterC4freqxvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = (char *)v1 + *(void *)(v3 + 0x60);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t _s8Freeform16CRLOneEuroFilterC4freqxvs_0(uint64_t a1)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = (char *)v1 + *(void *)(v3 + 0x60);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t _s8Freeform16CRLOneEuroFilterC9mincutoffxvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = (char *)v1 + *(void *)(v3 + 0x68);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t _s8Freeform16CRLOneEuroFilterC9mincutoffxvs_0(uint64_t a1)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = (char *)v1 + *(void *)(v3 + 0x68);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t _s8Freeform16CRLOneEuroFilterC4betaxvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = (char *)v1 + *(void *)(v3 + 0x70);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t _s8Freeform16CRLOneEuroFilterC4betaxvs_0(uint64_t a1)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = (char *)v1 + *(void *)(v3 + 0x70);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t CRLOneEuroFilter.dcutoff.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = (char *)v1 + *(void *)(v3 + 0x78);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t CRLOneEuroFilter.dcutoff.setter(uint64_t a1)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = (char *)v1 + *(void *)(v3 + 0x78);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

double sub_1006DC514()
{
  return CRLOneEuroFilter.lasttime.getter();
}

double CRLOneEuroFilter.lasttime.getter()
{
  return *(double *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x90));
}

void sub_1006DC564(double a1)
{
}

void CRLOneEuroFilter.lasttime.setter(double a1)
{
  *(double *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x90)) = a1;
}

uint64_t CRLOneEuroFilter.currValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = (char *)v1 + *(void *)(v3 + 0x98);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t CRLOneEuroFilter.currValue.setter(uint64_t a1)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = (char *)v1 + *(void *)(v3 + 0x98);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t sub_1006DC724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  __chkstk_darwin(a1, a1);
  uint64_t v7 = (char *)&v10 - v6;
  (*(void (**)(char *))(v8 + 16))((char *)&v10 - v6);
  return a5(v7);
}

uint64_t CRLOneEuroFilter.prevValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = (char *)v1 + *(void *)(v3 + 0xA0);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t CRLOneEuroFilter.prevValue.setter(uint64_t a1)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = (char *)v1 + *(void *)(v3 + 0xA0);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t CRLOneEuroFilter.alpha(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v59 = a1;
  uint64_t v60 = a2;
  uint64_t v3 = swift_isaMask & *v2;
  uint64_t v61 = *(void *)(v3 + 0x58);
  uint64_t v4 = *(void *)(v3 + 80);
  uint64_t v5 = *(void *)(v61 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness, v7);
  uint64_t v58 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v66 = (char *)&v52 - v11;
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v52 - v14;
  uint64_t v16 = *(void *)(v4 - 8);
  __chkstk_darwin(v17, v18);
  uint64_t v55 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v64 = (char *)&v52 - v22;
  __chkstk_darwin(v23, v24);
  uint64_t v65 = (char *)&v52 - v25;
  __chkstk_darwin(v26, v27);
  uint64_t v56 = (char *)&v52 - v28;
  __chkstk_darwin(v29, v30);
  uint64_t v32 = (char *)&v52 - v31;
  __chkstk_darwin(v33, v34);
  uint64_t v36 = (char *)&v52 - v35;
  uint64_t v53 = (char *)&v52 - v35;
  __chkstk_darwin(v37, v38);
  uint64_t v57 = (char *)&v52 - v39;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)();
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)();
  CRLOneEuroFilter.freq.getter((uint64_t)v32);
  uint64_t v61 = *(void *)(v61 + 16);
  dispatch thunk of static FloatingPoint./ infix(_:_:)();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v63 = v32;
  v40(v32, v4);
  v40(v36, v4);
  id v54 = v15;
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)();
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)();
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)();
  uint64_t v41 = v64;
  uint64_t v52 = v5;
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)();
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)();
  uint64_t v42 = v55;
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)();
  uint64_t v43 = v65;
  uint64_t v58 = *(char **)(*(void *)(v61 + 16) + 8);
  dispatch thunk of static Numeric.* infix(_:_:)();
  v40(v42, v4);
  v40(v41, v4);
  uint64_t v44 = v56;
  dispatch thunk of static Numeric.* infix(_:_:)();
  v40(v43, v4);
  uint64_t v45 = v53;
  uint64_t v46 = v63;
  dispatch thunk of static FloatingPoint./ infix(_:_:)();
  v40(v44, v4);
  v40(v46, v4);
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)();
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)();
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)();
  uint64_t v47 = v65;
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)();
  uint64_t v48 = v64;
  id v49 = v57;
  dispatch thunk of static FloatingPoint./ infix(_:_:)();
  dispatch thunk of static AdditiveArithmetic.+ infix(_:_:)();
  v40(v48, v4);
  v40(v47, v4);
  uint64_t v50 = v63;
  dispatch thunk of static FloatingPoint./ infix(_:_:)();
  v40(v44, v4);
  v40(v50, v4);
  v40(v45, v4);
  return ((uint64_t (*)(char *, uint64_t))v40)(v49, v4);
}

uint64_t CRLOneEuroFilter.setFrequency(_:)(uint64_t a1)
{
  return sub_1006DCFC4(a1, 0xD000000000000012, 0x8000000101247760, (uint64_t (*)(char *))CRLOneEuroFilter.freq.setter);
}

uint64_t CRLOneEuroFilter.setMinCutoff(_:)(uint64_t a1)
{
  return sub_1006DCFC4(a1, 0xD000000000000017, 0x8000000101247740, (uint64_t (*)(char *))CRLOneEuroFilter.mincutoff.setter);
}

uint64_t sub_1006DCFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  uint64_t v17 = a4;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v6 = *(void *)((swift_isaMask & *v4) + 0x50);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness, v11);
  swift_getAssociatedConformanceWitness();
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)();
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)();
  char v12 = dispatch thunk of static Comparable.<= infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v12)
  {
    sub_1005057FC((uint64_t *)&unk_10167BEF0);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_10117E810;
    *(void *)(v13 + 56) = &type metadata for String;
    uint64_t v14 = v19;
    *(void *)(v13 + 32) = v18;
    *(void *)(v13 + 40) = v14;
    print(_:separator:terminator:)();
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    return v17(v9);
  }
}

uint64_t CRLOneEuroFilter.setBeta(_:)(uint64_t a1)
{
  __chkstk_darwin(a1, a1);
  uint64_t v2 = (char *)&v5 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - v1);
  return CRLOneEuroFilter.beta.setter(v2);
}

uint64_t CRLOneEuroFilter.setDerivateCutoff(_:)(uint64_t a1)
{
  return sub_1006DCFC4(a1, 0xD000000000000015, 0x8000000101247720, (uint64_t (*)(char *))CRLOneEuroFilter.dcutoff.setter);
}

void *CRLOneEuroFilter.__allocating_init(freq:mincutoff:beta:dcutoff:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  id v10 = objc_allocWithZone(v4);
  uint64_t v11 = sub_1006E0040(a1, a2, a3, a4);
  uint64_t v12 = *((void *)v5 + 10);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v13(a4, v12);
  v13(a3, v12);
  v13(a2, v12);
  v13(a1, v12);
  return v11;
}

void *sub_1006DD41C(float a1, float a2, float a3, float a4)
{
  *(_DWORD *)((char *)v4 + *(void *)((swift_isaMask & *v4) + 0x60)) = 0;
  *(_DWORD *)((char *)v4 + *(void *)((swift_isaMask & *v4) + 0x68)) = 0;
  *(_DWORD *)((char *)v4 + *(void *)((swift_isaMask & *v4) + 0x70)) = 0;
  *(_DWORD *)((char *)v4 + *(void *)((swift_isaMask & *v4) + 0x78)) = 0;
  uint64_t v9 = *(void *)((swift_isaMask & *v4) + 0x80);
  id v10 = (objc_class *)sub_1005057FC(&qword_10167BBF8);
  id v11 = objc_allocWithZone(v10);
  uint64_t v12 = v4;
  *(void *)((char *)v4 + v9) = sub_1006DB370(0.5, 0.0);
  uint64_t v13 = *(void *)((swift_isaMask & *v12) + 0x88);
  id v14 = objc_allocWithZone(v10);
  *(void *)((char *)v12 + v13) = sub_1006DB370(0.5, 0.0);
  *(void *)((char *)v12 + *(void *)((swift_isaMask & *v12) + 0x90)) = 0;
  *(_DWORD *)((char *)v12 + *(void *)((swift_isaMask & *v12) + 0x98)) = 0;
  *(_DWORD *)((char *)v12 + *(void *)((swift_isaMask & *v12) + 0xA0)) = 0;

  v40.receiver = v12;
  v40.super_class = (Class)sub_1005057FC(&qword_10167BA80);
  uint64_t v15 = [super init];
  uint64_t v16 = v15;
  if (a1 <= 0.0)
  {
    sub_1005057FC((uint64_t *)&unk_10167BEF0);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_10117E810;
    *(void *)(v20 + 56) = &type metadata for String;
    *(void *)(v20 + 32) = 0xD000000000000012;
    *(void *)(v20 + 40) = 0x8000000101247760;
    uint64_t v21 = v16;
    print(_:separator:terminator:)();
    swift_bridgeObjectRelease();
    if (a2 <= 0.0) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v17 = (float *)((char *)v15 + *(void *)((swift_isaMask & *v15) + 0x60));
    swift_beginAccess();
    *uint64_t v17 = a1;
    uint64_t v18 = v16;
    if (a2 <= 0.0)
    {
LABEL_3:
      sub_1005057FC((uint64_t *)&unk_10167BEF0);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_10117E810;
      *(void *)(v19 + 56) = &type metadata for String;
      *(void *)(v19 + 32) = 0xD000000000000017;
      *(void *)(v19 + 40) = 0x8000000101247740;
      print(_:separator:terminator:)();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  uint64_t v22 = (float *)((char *)v16 + *(void *)((swift_isaMask & *v16) + 0x68));
  swift_beginAccess();
  float *v22 = a2;
LABEL_6:
  uint64_t v23 = (float *)((char *)v16 + *(void *)((swift_isaMask & *v16) + 0x70));
  swift_beginAccess();
  *uint64_t v23 = a3;
  if (a4 <= 0.0)
  {
    sub_1005057FC((uint64_t *)&unk_10167BEF0);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_10117E810;
    *(void *)(v25 + 56) = &type metadata for String;
    *(void *)(v25 + 32) = 0xD000000000000015;
    *(void *)(v25 + 40) = 0x8000000101247720;
    print(_:separator:terminator:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = (float *)((char *)v16 + *(void *)((swift_isaMask & *v16) + 0x78));
    swift_beginAccess();
    *uint64_t v24 = a4;
  }
  uint64_t v26 = (float *)((char *)v16 + *(void *)((swift_isaMask & *v16) + 0x60));
  swift_beginAccess();
  float v27 = 1.0 / (float)((float)((float)(1.0 / (float)(a2 * 6.2832)) / (float)(1.0 / *v26)) + 1.0);
  id v28 = objc_allocWithZone(v10);
  uint64_t v29 = sub_1006DB370(v27, 0.0);
  uint64_t v30 = *(void *)((swift_isaMask & *v16) + 0x80);
  uint64_t v31 = *(void **)((char *)v16 + v30);
  *(void *)((char *)v16 + v30) = v29;

  float v32 = 1.0 / (float)((float)((float)(1.0 / (float)(a4 * 6.2832)) / (float)(1.0 / *v26)) + 1.0);
  id v33 = objc_allocWithZone(v10);
  uint64_t v34 = sub_1006DB370(v32, 0.0);
  uint64_t v35 = *(void *)((swift_isaMask & *v16) + 0x88);
  uint64_t v36 = *(void **)((char *)v16 + v35);
  *(void *)((char *)v16 + v35) = v34;

  *(void *)((char *)v16 + *(void *)((swift_isaMask & *v16) + 0x90)) = 0xBFF0000000000000;
  uint64_t v37 = (_DWORD *)((char *)v16 + *(void *)((swift_isaMask & *v16) + 0x98));
  swift_beginAccess();
  *uint64_t v37 = 0;
  uint64_t v38 = (_DWORD *)((char *)v16 + *(void *)((swift_isaMask & *v16) + 0xA0));
  swift_beginAccess();
  *uint64_t v38 = 0;
  return v16;
}

void *sub_1006DD9B8(double a1, double a2, double a3, double a4)
{
  *(void *)((char *)v4 + *(void *)((swift_isaMask & *v4) + 0x60)) = 0;
  *(void *)((char *)v4 + *(void *)((swift_isaMask & *v4) + 0x68)) = 0;
  *(void *)((char *)v4 + *(void *)((swift_isaMask & *v4) + 0x70)) = 0;
  *(void *)((char *)v4 + *(void *)((swift_isaMask & *v4) + 0x78)) = 0;
  uint64_t v9 = *(void *)((swift_isaMask & *v4) + 0x80);
  id v10 = (objc_class *)sub_1005057FC(&qword_10167BBF0);
  id v11 = objc_allocWithZone(v10);
  uint64_t v12 = v4;
  *(void *)((char *)v4 + v9) = sub_1006DB5B8(0.5, 0.0);
  uint64_t v13 = *(void *)((swift_isaMask & *v12) + 0x88);
  id v14 = objc_allocWithZone(v10);
  *(void *)((char *)v12 + v13) = sub_1006DB5B8(0.5, 0.0);
  *(void *)((char *)v12 + *(void *)((swift_isaMask & *v12) + 0x90)) = 0;
  *(void *)((char *)v12 + *(void *)((swift_isaMask & *v12) + 0x98)) = 0;
  *(void *)((char *)v12 + *(void *)((swift_isaMask & *v12) + 0xA0)) = 0;

  v40.receiver = v12;
  v40.super_class = (Class)sub_1005057FC(qword_10167BA98);
  uint64_t v15 = [super init];
  uint64_t v16 = v15;
  if (a1 <= 0.0)
  {
    sub_1005057FC((uint64_t *)&unk_10167BEF0);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_10117E810;
    *(void *)(v20 + 56) = &type metadata for String;
    *(void *)(v20 + 32) = 0xD000000000000012;
    *(void *)(v20 + 40) = 0x8000000101247760;
    uint64_t v21 = v16;
    print(_:separator:terminator:)();
    swift_bridgeObjectRelease();
    if (a2 <= 0.0) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v17 = (double *)((char *)v15 + *(void *)((swift_isaMask & *v15) + 0x60));
    swift_beginAccess();
    *uint64_t v17 = a1;
    uint64_t v18 = v16;
    if (a2 <= 0.0)
    {
LABEL_3:
      sub_1005057FC((uint64_t *)&unk_10167BEF0);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_10117E810;
      *(void *)(v19 + 56) = &type metadata for String;
      *(void *)(v19 + 32) = 0xD000000000000017;
      *(void *)(v19 + 40) = 0x8000000101247740;
      print(_:separator:terminator:)();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  uint64_t v22 = (double *)((char *)v16 + *(void *)((swift_isaMask & *v16) + 0x68));
  swift_beginAccess();
  double *v22 = a2;
LABEL_6:
  uint64_t v23 = (double *)((char *)v16 + *(void *)((swift_isaMask & *v16) + 0x70));
  swift_beginAccess();
  *uint64_t v23 = a3;
  if (a4 <= 0.0)
  {
    sub_1005057FC((uint64_t *)&unk_10167BEF0);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_10117E810;
    *(void *)(v25 + 56) = &type metadata for String;
    *(void *)(v25 + 32) = 0xD000000000000015;
    *(void *)(v25 + 40) = 0x8000000101247720;
    print(_:separator:terminator:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = (double *)((char *)v16 + *(void *)((swift_isaMask & *v16) + 0x78));
    swift_beginAccess();
    *uint64_t v24 = a4;
  }
  uint64_t v26 = (double *)((char *)v16 + *(void *)((swift_isaMask & *v16) + 0x60));
  swift_beginAccess();
  double v27 = 1.0 / (1.0 / (a2 * 6.2831853) / (1.0 / *v26) + 1.0);
  id v28 = objc_allocWithZone(v10);
  uint64_t v29 = sub_1006DB5B8(v27, 0.0);
  uint64_t v30 = *(void *)((swift_isaMask & *v16) + 0x80);
  uint64_t v31 = *(void **)((char *)v16 + v30);
  *(void *)((char *)v16 + v30) = v29;

  double v32 = 1.0 / (1.0 / (a4 * 6.2831853) / (1.0 / *v26) + 1.0);
  id v33 = objc_allocWithZone(v10);
  uint64_t v34 = sub_1006DB5B8(v32, 0.0);
  uint64_t v35 = *(void *)((swift_isaMask & *v16) + 0x88);
  uint64_t v36 = *(void **)((char *)v16 + v35);
  *(void *)((char *)v16 + v35) = v34;

  *(void *)((char *)v16 + *(void *)((swift_isaMask & *v16) + 0x90)) = 0xBFF0000000000000;
  uint64_t v37 = (void *)((char *)v16 + *(void *)((swift_isaMask & *v16) + 0x98));
  swift_beginAccess();
  *uint64_t v37 = 0;
  uint64_t v38 = (void *)((char *)v16 + *(void *)((swift_isaMask & *v16) + 0xA0));
  swift_beginAccess();
  *uint64_t v38 = 0;
  return v16;
}

void *CRLOneEuroFilter.init(freq:mincutoff:beta:dcutoff:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = swift_isaMask & *v4;
  id v10 = sub_1006E0040(a1, a2, a3, a4);
  uint64_t v11 = *(void *)(v9 + 80);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(a4, v11);
  v12(a3, v11);
  v12(a2, v11);
  v12(a1, v11);
  return v10;
}

uint64_t CRLOneEuroFilter.updateParams(freq:mincutoff:beta:dcutoff:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)((swift_isaMask & *v4) + 0x50);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v11 = (char *)&v19 - v10;
  CRLOneEuroFilter.setFrequency(_:)(v12);
  CRLOneEuroFilter.setMinCutoff(_:)(a2);
  CRLOneEuroFilter.setBeta(_:)(a3);
  CRLOneEuroFilter.setDerivateCutoff(_:)(a4);
  id v13 = *(id *)((char *)v4 + *(void *)((swift_isaMask & *v4) + 0x80));
  CRLOneEuroFilter.alpha(_:)(a2, (uint64_t)v11);
  sub_1006DB010((uint64_t)v11, v14);

  uint64_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v11, v8);
  id v16 = *(id *)((char *)v4 + *(void *)((swift_isaMask & *v4) + 0x88));
  CRLOneEuroFilter.alpha(_:)(a4, (uint64_t)v11);
  sub_1006DB010((uint64_t)v11, v17);

  return ((uint64_t (*)(char *, uint64_t))v15)(v11, v8);
}

uint64_t CRLOneEuroFilter.filter(value:timestamp:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v4 = v3;
  uint64_t v66 = a1;
  uint64_t v7 = swift_isaMask & *v3;
  uint64_t v68 = *(void *)(v7 + 0x58);
  uint64_t v8 = *(void *)(v7 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness, v10);
  uint64_t v61 = *(void *)(v8 - 8);
  __chkstk_darwin(v11, v12);
  uint64_t v63 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  unsigned int v62 = (char *)&v58 - v16;
  __chkstk_darwin(v17, v18);
  uint64_t v65 = (char *)&v58 - v19;
  __chkstk_darwin(v20, v21);
  uint64_t v64 = (char *)&v58 - v22;
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v58 - v25;
  __chkstk_darwin(v27, v28);
  uint64_t v69 = (char *)&v58 - v29;
  __chkstk_darwin(v30, v31);
  id v33 = (char *)&v58 - v32;
  CRLOneEuroFilter.currValue.getter((uint64_t)&v58 - v32);
  uint64_t v34 = v33;
  CRLOneEuroFilter.prevValue.setter((uint64_t)v33);
  uint64_t v35 = swift_isaMask & *v3;
  double v36 = *(double *)((char *)v3 + *(void *)(v35 + 0x90));
  if (v36 != -1.0 && a3 != -1.0)
  {
    if (v36 == a3) {
      return CRLOneEuroFilter.currValue.getter(a2);
    }
    dispatch thunk of BinaryFloatingPoint.init(_:)();
    CRLOneEuroFilter.freq.setter(v33);
    uint64_t v35 = swift_isaMask & *v3;
  }
  *(double *)((char *)v3 + *(void *)(v35 + 144)) = a3;
  uint64_t v38 = *(void **)((char *)v3 + *(void *)((swift_isaMask & *v3) + 0x80));
  int v39 = *((unsigned __int8 *)v38 + *(void *)((*v38 & swift_isaMask) + 0x78));
  uint64_t v60 = a2;
  uint64_t v67 = v26;
  if (v39 == 1)
  {
    uint64_t v40 = (uint64_t)v26;
    CRLOneEuroFilter.freq.getter((uint64_t)v26);
    dispatch thunk of static AdditiveArithmetic.- infix(_:_:)();
    uint64_t v41 = v61;
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
    v42(v40, v8);
    CRLOneEuroFilter.freq.getter(v40);
    dispatch thunk of static Numeric.* infix(_:_:)();
    v42(v40, v8);
    v42((uint64_t)v33, v8);
  }
  else
  {
    swift_getAssociatedConformanceWitness();
    dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)();
    dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)();
    uint64_t v41 = v61;
  }
  uint64_t v59 = v33;
  uint64_t v43 = *(void **)((char *)v4 + *(void *)((swift_isaMask & *v4) + 0x88));
  uint64_t v44 = v64;
  CRLOneEuroFilter.dcutoff.getter((uint64_t)v64);
  id v45 = v43;
  uint64_t v46 = (uint64_t)v67;
  CRLOneEuroFilter.alpha(_:)((uint64_t)v44, (uint64_t)v67);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v41 + 8);
  v47(v44, v8);
  sub_1006DB010(v46, v48);
  sub_1006DB800((uint64_t)v69, v34);

  uint64_t v49 = ((uint64_t (*)(uint64_t, uint64_t))v47)(v46, v8);
  uint64_t v50 = CRLOneEuroFilter.mincutoff.getter(v49);
  uint64_t v51 = v62;
  CRLOneEuroFilter.beta.getter(v50);
  uint64_t v52 = v63;
  abs<A>(_:)();
  uint64_t v53 = (uint64_t)v65;
  dispatch thunk of static Numeric.* infix(_:_:)();
  v47(v52, v8);
  v47(v51, v8);
  uint64_t v54 = (uint64_t)v67;
  dispatch thunk of static AdditiveArithmetic.+ infix(_:_:)();
  v47((char *)v53, v8);
  v47(v44, v8);
  id v55 = *(id *)((char *)v4 + *(void *)((swift_isaMask & *v4) + 0x80));
  CRLOneEuroFilter.alpha(_:)(v54, v53);
  sub_1006DB010(v53, v56);
  sub_1006DB800(v66, v44);

  v47((char *)v53, v8);
  CRLOneEuroFilter.currValue.setter((uint64_t)v44);
  v47((char *)v54, v8);
  v47(v59, v8);
  v47(v69, v8);
  a2 = v60;
  return CRLOneEuroFilter.currValue.getter(a2);
}

void CRLOneEuroFilter.init()()
{
}

uint64_t sub_1006DE8A0(void *a1, uint64_t a2)
{
  return sub_1006DE8B8(a1, a2, (uint64_t (*)(void, void))sub_1006E0980);
}

uint64_t sub_1006DE8B8(void *a1, uint64_t a2, uint64_t (*a3)(void, void))
{
  return a3(*(void *)((swift_isaMask & *a1) + 0x50), *(void *)((swift_isaMask & *a1) + 0x58));
}

id CRLOneEuroFilter.__deallocating_deinit()
{
  return sub_1006DE918((uint64_t (*)(void, void, void))type metadata accessor for CRLOneEuroFilter);
}

id sub_1006DE918(uint64_t (*a1)(void, void, void))
{
  uint64_t v2 = (objc_class *)a1(0, *(void *)((swift_isaMask & *v1) + 0x50), *(void *)((swift_isaMask & *v1) + 0x58));
  v4.receiver = v1;
  v4.super_class = v2;
  return [super dealloc];
}

uint64_t sub_1006DE994(char *a1)
{
  uint64_t v2 = *(void *)((swift_isaMask & *(void *)a1) + 0x50);
  uint64_t v5 = *(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8);
  v5(&a1[*(void *)((swift_isaMask & *(void *)a1) + 0x60)], v2);
  v5(&a1[*(void *)((swift_isaMask & *(void *)a1) + 0x68)], v2);
  v5(&a1[*(void *)((swift_isaMask & *(void *)a1) + 0x70)], v2);
  v5(&a1[*(void *)((swift_isaMask & *(void *)a1) + 0x78)], v2);

  v5(&a1[*(void *)((swift_isaMask & *(void *)a1) + 0x98)], v2);
  uint64_t v3 = &a1[*(void *)((swift_isaMask & *(void *)a1) + 0xA0)];

  return ((uint64_t (*)(char *, uint64_t))v5)(v3, v2);
}

float CRLOneEuroFilterF.currValue.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform17CRLOneEuroFilterF_f)
     + *(void *)((swift_isaMask & **(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLOneEuroFilterF_f)) + 0x98);
  swift_beginAccess();
  return *(float *)v1;
}

float CRLOneEuroFilterF.prevValue.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform17CRLOneEuroFilterF_f)
     + *(void *)((swift_isaMask & **(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLOneEuroFilterF_f)) + 0xA0);
  swift_beginAccess();
  return *(float *)v1;
}

id CRLOneEuroFilterF.__allocating_init(freq:mincutoff:beta:dcutoff:)(float a1, float a2, float a3, float a4)
{
  uint64_t v5 = v4;
  id v10 = objc_allocWithZone(v4);
  objc_allocWithZone((Class)sub_1005057FC(&qword_10167BA80));
  uint64_t v11 = (char *)v10;
  *(void *)&v11[OBJC_IVAR____TtC8Freeform17CRLOneEuroFilterF_f] = sub_1006DD41C(a1, a2, a3, a4);

  v13.receiver = v11;
  v13.super_class = v5;
  return [super init];
}

id CRLOneEuroFilterF.init(freq:mincutoff:beta:dcutoff:)(float a1, float a2, float a3, float a4)
{
  objc_allocWithZone((Class)sub_1005057FC(&qword_10167BA80));
  uint64_t v9 = v4;
  *(void *)&v9[OBJC_IVAR____TtC8Freeform17CRLOneEuroFilterF_f] = sub_1006DD41C(a1, a2, a3, a4);

  v11.receiver = v9;
  v11.super_class = (Class)type metadata accessor for CRLOneEuroFilterF();
  return [super init];
}

Swift::Void __swiftcall CRLOneEuroFilterF.updateParams(freq:mincutoff:beta:dcutoff:)(Swift::Float freq, Swift::Float mincutoff, Swift::Float beta, Swift::Float dcutoff)
{
  uint64_t v5 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform17CRLOneEuroFilterF_f);
  Swift::Float v10 = mincutoff;
  Swift::Float v11 = freq;
  Swift::Float v8 = dcutoff;
  Swift::Float v9 = beta;
  uint64_t v6 = *(void (**)(Swift::Float *, Swift::Float *, Swift::Float *, Swift::Float *))((swift_isaMask & *v5)
                                                                                             + 0x1B0);
  uint64_t v7 = v5;
  v6(&v11, &v10, &v9, &v8);
}

Swift::Float __swiftcall CRLOneEuroFilterF.filter(value:timestamp:)(Swift::Float value, Swift::Double timestamp)
{
  void (*v5)(uint64_t *__return_ptr, Swift::Float *, double);
  void *v6;
  Swift::Float v8;
  uint64_t v9;

  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform17CRLOneEuroFilterF_f);
  Swift::Float v8 = value;
  uint64_t v5 = *(void (**)(uint64_t *__return_ptr, Swift::Float *, double))((swift_isaMask & *v4) + 0x1B8);
  uint64_t v6 = v4;
  v5(&v9, &v8, timestamp);

  return *(float *)&v9;
}

void CRLOneEuroFilterF.init()()
{
}

id CRLOneEuroFilterF.__deallocating_deinit()
{
  return sub_1006DFBC8(type metadata accessor for CRLOneEuroFilterF);
}

double CRLOneEuroFilterPoint.currValue.getter()
{
  uint64_t v1 = (double *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_xFilter)
                + *(void *)((swift_isaMask & **(void **)(v0
                                                           + OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_xFilter))
                            + 0x98));
  swift_beginAccess();
  double v2 = *v1;
  swift_beginAccess();
  return v2;
}

double CRLOneEuroFilterPoint.prevValue.getter()
{
  uint64_t v1 = (double *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_xFilter)
                + *(void *)((swift_isaMask & **(void **)(v0
                                                           + OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_xFilter))
                            + 0xA0));
  swift_beginAccess();
  double v2 = *v1;
  swift_beginAccess();
  return v2;
}

id CRLOneEuroFilterPoint.__allocating_init(freq:mincutoff:beta:dcutoff:)(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  id v10 = objc_allocWithZone(v4);
  Swift::Float v11 = (objc_class *)sub_1005057FC(qword_10167BA98);
  objc_allocWithZone(v11);
  uint64_t v12 = (char *)v10;
  *(void *)&v12[OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_xFilter] = sub_1006DD9B8(a1, a2, a3, a4);
  id v13 = objc_allocWithZone(v11);
  *(void *)&v12[OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_yFilter] = sub_1006DD9B8(a1, a2, a3, a4);

  v15.receiver = v12;
  v15.super_class = v5;
  return [super init];
}

id CRLOneEuroFilterPoint.init(freq:mincutoff:beta:dcutoff:)(double a1, double a2, double a3, double a4)
{
  Swift::Float v9 = (objc_class *)sub_1005057FC(qword_10167BA98);
  objc_allocWithZone(v9);
  id v10 = v4;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_xFilter] = sub_1006DD9B8(a1, a2, a3, a4);
  id v11 = objc_allocWithZone(v9);
  *(void *)&v10[OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_yFilter] = sub_1006DD9B8(a1, a2, a3, a4);

  v13.receiver = v10;
  v13.super_class = (Class)type metadata accessor for CRLOneEuroFilterPoint();
  return [super init];
}

Swift::Void __swiftcall CRLOneEuroFilterPoint.updateParams(freq:mincutoff:beta:dcutoff:)(Swift::Double freq, Swift::Double mincutoff, Swift::Double beta, Swift::Double dcutoff)
{
  uint64_t v5 = v4;
  id v10 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_xFilter);
  Swift::Double v18 = mincutoff;
  Swift::Double v19 = freq;
  Swift::Double v16 = dcutoff;
  Swift::Double v17 = beta;
  id v11 = *(void (**)(Swift::Double *, Swift::Double *, Swift::Double *, Swift::Double *))((swift_isaMask & *v10)
                                                                                                  + 0x1B0);
  uint64_t v12 = v10;
  v11(&v19, &v18, &v17, &v16);

  objc_super v13 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_yFilter);
  Swift::Double v18 = mincutoff;
  Swift::Double v19 = freq;
  Swift::Double v16 = dcutoff;
  Swift::Double v17 = beta;
  uint64_t v14 = *(void (**)(Swift::Double *, Swift::Double *, Swift::Double *, Swift::Double *))((swift_isaMask & *v13)
                                                                                                  + 0x1B0);
  objc_super v15 = v13;
  v14(&v19, &v18, &v17, &v16);
}

double CRLOneEuroFilterPoint.filter(value:timestamp:)(double a1, double a2, double a3)
{
  void (*v8)(double *__return_ptr, double *, double);
  void *v9;
  double v10;
  void *v11;
  void (*v12)(double *__return_ptr, double *, double);
  void *v13;
  double v15;
  double v16;
  double v17;

  uint64_t v4 = v3;
  uint64_t v7 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_xFilter);
  Swift::Double v16 = a1;
  Swift::Float v8 = *(void (**)(double *__return_ptr, double *, double))((swift_isaMask & *v7) + 0x1B8);
  Swift::Float v9 = v7;
  v8(&v17, &v16, a3);

  id v10 = v17;
  id v11 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform21CRLOneEuroFilterPoint_yFilter);
  objc_super v15 = a2;
  uint64_t v12 = *(void (**)(double *__return_ptr, double *, double))((swift_isaMask & *v11) + 0x1B8);
  objc_super v13 = v11;
  v12(&v16, &v15, a3);

  return v10;
}

void CRLOneEuroFilterPoint.init()()
{
}

id CRLOneEuroFilterPoint.__deallocating_deinit()
{
  return sub_1006DFBC8(type metadata accessor for CRLOneEuroFilterPoint);
}

id sub_1006DFBC8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

void *sub_1006DFC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = *(void *)((swift_isaMask & *v2) + 0x58);
  uint64_t v3 = *(void *)((swift_isaMask & *v2) + 0x50);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness, v5);
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = v2;
  dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)();
  dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)();
  dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)();
  dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)();
  dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)();
  dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)();
  *((unsigned char *)v6 + *(void *)((swift_isaMask & *v6) + 0x78)) = 0;

  v17.receiver = v6;
  v17.super_class = (Class)type metadata accessor for CRLLowPassFilter();
  uint64_t v7 = [super init];
  Swift::Float v8 = (char *)v7 + *(void *)((swift_isaMask & *v7) + 0x60);
  swift_beginAccess();
  Swift::Float v9 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 24);
  id v10 = v7;
  v9(v8, a2, v3);
  swift_endAccess();
  id v11 = (char *)v10 + *(void *)((swift_isaMask & *v10) + 0x70);
  swift_beginAccess();
  v9(v11, a2, v3);
  swift_endAccess();
  sub_1006DB010(a1, v12);

  *((unsigned char *)v10 + *(void *)((swift_isaMask & *v10) + 0x78)) = 0;
  return v10;
}

void *sub_1006DFFC4(uint64_t a1, uint64_t a2)
{
  id v4 = objc_allocWithZone((Class)type metadata accessor for CRLLowPassFilter());
  return sub_1006DFC4C(a1, a2);
}

void sub_1006E0010()
{
}

void *sub_1006E0040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v55 = a3;
  uint64_t v56 = a4;
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  uint64_t v5 = swift_isaMask & *v4;
  uint64_t v6 = *(void *)(v5 + 0x50);
  uint64_t v61 = *(void *)(v6 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v59 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v58 = (uint64_t)v47 - v10;
  uint64_t v11 = *(void *)(v5 + 88);
  uint64_t v65 = *(void *)(v11 + 8);
  uint64_t v12 = v11;
  uint64_t v62 = v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness, v13);
  uint64_t v63 = (char *)v47 - v14;
  uint64_t v15 = *(void *)(*(void *)(*(void *)(*(void *)(v12 + 16) + 16) + 8) + 16);
  uint64_t v16 = swift_getAssociatedTypeWitness();
  __chkstk_darwin(v16, v17);
  v47[1] = (char *)v47 - v18;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v20 = v4;
  dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)();
  dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)();
  dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)();
  dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)();
  uint64_t v52 = AssociatedConformanceWitness;
  dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)();
  uint64_t v51 = v15;
  dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)();
  uint64_t v57 = v4;
  dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)();
  dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)();
  uint64_t v48 = *(void *)((swift_isaMask & *v20) + 0x80);
  uint64_t v21 = type metadata accessor for CRLLowPassFilter();
  uint64_t v60 = swift_getAssociatedConformanceWitness();
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)();
  uint64_t v22 = v58;
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)();
  uint64_t v23 = (uint64_t)v59;
  sub_100504E68();
  uint64_t v24 = v22;
  uint64_t v50 = v21;
  uint64_t v25 = sub_1006DFFC4(v22, v23);
  uint64_t v27 = v61 + 8;
  uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
  v26(v23, v6);
  v47[0] = v27;
  v26(v24, v6);
  *(void *)((char *)v20 + v48) = v25;
  uint64_t v48 = *(void *)((swift_isaMask & *v20) + 0x88);
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)();
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)();
  sub_100504E68();
  uint64_t v28 = sub_1006DFFC4(v24, v23);
  uint64_t v49 = v26;
  v26(v23, v6);
  v26(v24, v6);
  *(void *)((char *)v20 + v48) = v28;
  *(void *)((char *)v20 + *(void *)((swift_isaMask & *v20) + 0x90)) = 0;
  dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)();
  dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)();
  dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)();
  dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)();

  uint64_t v29 = (objc_class *)type metadata accessor for CRLOneEuroFilter();
  v66.receiver = v20;
  v66.super_class = v29;
  uint64_t v30 = [super init];
  CRLOneEuroFilter.setFrequency(_:)(v53);
  uint64_t v31 = v54;
  CRLOneEuroFilter.setMinCutoff(_:)(v54);
  CRLOneEuroFilter.setBeta(_:)(v55);
  uint64_t v32 = v56;
  CRLOneEuroFilter.setDerivateCutoff(_:)(v56);
  uint64_t v33 = v58;
  CRLOneEuroFilter.alpha(_:)(v31, v58);
  uint64_t v34 = (uint64_t)v59;
  sub_100504E68();
  uint64_t v35 = sub_1006DFFC4(v33, v34);
  double v36 = v49;
  v49(v34, v6);
  v36(v33, v6);
  uint64_t v37 = *(void *)((swift_isaMask & *v30) + 0x80);
  uint64_t v38 = *(void **)((char *)v30 + v37);
  *(void *)((char *)v30 + v37) = v35;

  CRLOneEuroFilter.alpha(_:)(v32, v33);
  sub_100504E68();
  int v39 = sub_1006DFFC4(v33, v34);
  v36(v34, v6);
  v36(v33, v6);
  uint64_t v40 = *(void *)((swift_isaMask & *v30) + 0x88);
  uint64_t v41 = *(void **)((char *)v30 + v40);
  *(void *)((char *)v30 + v40) = v39;

  *(void *)((char *)v30 + *(void *)((swift_isaMask & *v30) + 0x90)) = 0xBFF0000000000000;
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)();
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)();

  uint64_t v42 = (char *)v30 + *(void *)((swift_isaMask & *v30) + 0x98);
  swift_beginAccess();
  uint64_t v43 = v61;
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 40);
  v44(v42, v33, v6);
  swift_endAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 16))(v33, v42, v6);
  id v45 = (char *)v30 + *(void *)((swift_isaMask & *v30) + 0xA0);
  swift_beginAccess();
  v44(v45, v33, v6);
  swift_endAccess();
  return v30;
}

void sub_1006E0980()
{
}

uint64_t type metadata accessor for CRLOneEuroFilter()
{
  return sub_100568E70();
}

uint64_t type metadata accessor for CRLOneEuroFilterF()
{
  return self;
}

uint64_t type metadata accessor for CRLOneEuroFilterPoint()
{
  return self;
}

uint64_t sub_1006E0A10@<X0>(uint64_t a1@<X8>)
{
  return CRLOneEuroFilter.currValue.getter(a1);
}

uint64_t sub_1006E0A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1006DC724(a1, a2, a3, a4, (uint64_t (*)(char *))CRLOneEuroFilter.currValue.setter);
}

uint64_t sub_1006E0A60()
{
  return 16;
}

__n128 sub_1006E0A6C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1006E0A78@<X0>(uint64_t a1@<X8>)
{
  return CRLOneEuroFilter.prevValue.getter(a1);
}

uint64_t sub_1006E0A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1006DC724(a1, a2, a3, a4, (uint64_t (*)(char *))CRLOneEuroFilter.prevValue.setter);
}

uint64_t sub_1006E0AC8()
{
  return 16;
}

__n128 sub_1006E0AD4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1006E0AE0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLLowPassFilter()
{
  return sub_100568E70();
}

uint64_t sub_1006E0B98()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1006E0C58(unint64_t a1)
{
  return sub_1006E31A0(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BCE7C);
}

uint64_t sub_1006E0C70(unint64_t a1)
{
  return sub_1006E31A0(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BCEB8);
}

uint64_t sub_1006E0C88(unint64_t a1)
{
  return sub_1006E3C50(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BD118);
}

uint64_t sub_1006E0CA0(unint64_t a1)
{
  return sub_1006E31A0(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BD338);
}

uint64_t sub_1006E0CB8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (double *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_100F61B70(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    void *v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006E0E0C(unint64_t a1)
{
  return sub_1006E31A0(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BD558);
}

uint64_t sub_1006E0E24(unint64_t a1)
{
  return sub_1006E3C50(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BD998);
}

uint64_t sub_1006E0E3C(uint64_t result)
{
  int64_t v4 = v2;
  uint64_t v5 = result;
  if ((result & 0xC000000000000001) != 0)
  {
    uint64_t result = __CocoaSet.count.getter();
    uint64_t v6 = result;
  }
  else
  {
    uint64_t v6 = *(void *)(result + 16);
  }
  if ((unint64_t)*v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v8 = v18 + v6;
    if (!__OFADD__(v18, v6)) {
      goto LABEL_6;
    }
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v6;
  if (__OFADD__(v7, v6)) {
    goto LABEL_21;
  }
LABEL_6:
  unint64_t v9 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *int64_t v4 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    uint64_t v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *int64_t v4 = v12;
    uint64_t v11 = v12 & 0xFFFFFFFFFFFFFF8;
  }
  uint64_t v13 = *(void *)(v11 + 16);
  uint64_t v14 = (*(void *)(v11 + 24) >> 1) - v13;
  uint64_t result = (uint64_t)sub_1006F2048(&v42, (void *)(v11 + 8 * v13 + 32), v14, v5, (void (*)(void))type metadata accessor for CRLBoardItem, (unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
  if (result < v6) {
    goto LABEL_22;
  }
  if (result >= 1)
  {
    uint64_t v15 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v16 = __OFADD__(v15, result);
    uint64_t v17 = v15 + result;
    if (v16)
    {
      __break(1u);
LABEL_29:
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_18;
      }
      type metadata accessor for CRLBoardItem(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v22 = v41;
      swift_unknownObjectRelease();
      while (2)
      {
        if (!v22) {
          goto LABEL_18;
        }
        while (1)
        {
          uint64_t v24 = *v4 & 0xFFFFFFFFFFFFFF8;
          if (v3 + 1 > *(void *)(v24 + 0x18) >> 1)
          {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v24 = *v4 & 0xFFFFFFFFFFFFFF8;
          }
          uint64_t v25 = *(void *)(v24 + 24) >> 1;
          if (v3 < v25) {
            break;
          }
LABEL_33:
          *(void *)(v24 + 16) = v3;
        }
        uint64_t v26 = v24 + 32;
        while (1)
        {
          *(void *)(v26 + 8 * v3++) = v22;
          int64_t v27 = v45;
          if (v42 < 0)
          {
            if (!__CocoaSet.Iterator.next()()) {
              goto LABEL_70;
            }
            type metadata accessor for CRLBoardItem(0);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            uint64_t v22 = v41;
            swift_unknownObjectRelease();
            goto LABEL_45;
          }
          if (!v46) {
            break;
          }
          unint64_t v28 = (v46 - 1) & v46;
          unint64_t v29 = __clz(__rbit64(v46)) | (v45 << 6);
LABEL_41:
          uint64_t v22 = *(void **)(*(void *)(v42 + 48) + 8 * v29);
          id v30 = v22;
LABEL_42:
          int64_t v45 = v27;
          unint64_t v46 = v28;
LABEL_45:
          if (!v22)
          {
LABEL_70:
            *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v3;
            goto LABEL_18;
          }
          if (v3 >= v25)
          {
            uint64_t v24 = *v4 & 0xFFFFFFFFFFFFFF8;
            goto LABEL_33;
          }
        }
        int64_t v31 = v45 + 1;
        if (__OFADD__(v45, 1))
        {
          __break(1u);
LABEL_94:
          uint64_t v22 = 0;
          unint64_t v20 = 0;
          int64_t v19 = v1;
LABEL_27:
          int64_t v45 = v19;
          unint64_t v46 = v20;
          continue;
        }
        break;
      }
      int64_t v32 = (unint64_t)(v44 + 64) >> 6;
      if (v31 >= v32)
      {
        uint64_t v22 = 0;
        unint64_t v28 = 0;
        goto LABEL_42;
      }
      unint64_t v33 = *(void *)(v43 + 8 * v31);
      if (!v33)
      {
        int64_t v34 = v45 + 2;
        if (v45 + 2 >= v32) {
          goto LABEL_67;
        }
        unint64_t v33 = *(void *)(v43 + 8 * v34);
        if (!v33)
        {
          int64_t v1 = v45 + 3;
          if (v45 + 3 >= v32) {
            goto LABEL_68;
          }
          unint64_t v33 = *(void *)(v43 + 8 * v1);
          if (v33)
          {
            int64_t v31 = v45 + 3;
            goto LABEL_51;
          }
          int64_t v34 = v45 + 4;
          if (v45 + 4 >= v32)
          {
            uint64_t v22 = 0;
            unint64_t v28 = 0;
            int64_t v27 = v45 + 3;
            goto LABEL_42;
          }
          unint64_t v33 = *(void *)(v43 + 8 * v34);
          if (!v33)
          {
            int64_t v31 = v45 + 5;
            if (v45 + 5 >= v32)
            {
LABEL_68:
              uint64_t v22 = 0;
              unint64_t v28 = 0;
              int64_t v27 = v34;
              goto LABEL_42;
            }
            unint64_t v33 = *(void *)(v43 + 8 * v31);
            if (!v33)
            {
              int64_t v31 = v32 - 1;
              uint64_t v35 = v45 + 6;
              while (v32 != v35)
              {
                unint64_t v33 = *(void *)(v43 + 8 * v35++);
                if (v33)
                {
                  int64_t v31 = v35 - 1;
                  goto LABEL_51;
                }
              }
LABEL_67:
              uint64_t v22 = 0;
              unint64_t v28 = 0;
              int64_t v27 = v31;
              goto LABEL_42;
            }
            goto LABEL_51;
          }
        }
        int64_t v31 = v34;
      }
LABEL_51:
      unint64_t v28 = (v33 - 1) & v33;
      unint64_t v29 = __clz(__rbit64(v33)) + (v31 << 6);
      int64_t v27 = v31;
      goto LABEL_41;
    }
    *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v17;
  }
  if (result != v14)
  {
LABEL_18:
    sub_10052E1EC();
    return specialized Array._endMutation()();
  }
LABEL_23:
  uint64_t v3 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  int64_t v19 = v45;
  if (v42 < 0) {
    goto LABEL_29;
  }
  if (v46)
  {
    unint64_t v20 = (v46 - 1) & v46;
    unint64_t v21 = __clz(__rbit64(v46)) | (v45 << 6);
LABEL_26:
    uint64_t v22 = *(void **)(*(void *)(v42 + 48) + 8 * v21);
    id v23 = v22;
    goto LABEL_27;
  }
  int64_t v36 = v45 + 1;
  if (!__OFADD__(v45, 1))
  {
    int64_t v37 = (unint64_t)(v44 + 64) >> 6;
    if (v36 >= v37)
    {
      uint64_t v22 = 0;
      unint64_t v20 = 0;
      goto LABEL_27;
    }
    unint64_t v38 = *(void *)(v43 + 8 * v36);
    if (v38) {
      goto LABEL_75;
    }
    int64_t v39 = v45 + 2;
    if (v45 + 2 >= v37)
    {
LABEL_91:
      uint64_t v22 = 0;
      unint64_t v20 = 0;
      int64_t v19 = v36;
      goto LABEL_27;
    }
    unint64_t v38 = *(void *)(v43 + 8 * v39);
    if (v38) {
      goto LABEL_79;
    }
    int64_t v1 = v45 + 3;
    if (v45 + 3 < v37)
    {
      unint64_t v38 = *(void *)(v43 + 8 * v1);
      if (v38)
      {
        int64_t v36 = v45 + 3;
        goto LABEL_75;
      }
      int64_t v39 = v45 + 4;
      if (v45 + 4 >= v37) {
        goto LABEL_94;
      }
      unint64_t v38 = *(void *)(v43 + 8 * v39);
      if (v38)
      {
LABEL_79:
        int64_t v36 = v39;
LABEL_75:
        unint64_t v20 = (v38 - 1) & v38;
        unint64_t v21 = __clz(__rbit64(v38)) + (v36 << 6);
        int64_t v19 = v36;
        goto LABEL_26;
      }
      int64_t v36 = v45 + 5;
      if (v45 + 5 < v37)
      {
        unint64_t v38 = *(void *)(v43 + 8 * v36);
        if (!v38)
        {
          int64_t v36 = v37 - 1;
          uint64_t v40 = v45 + 6;
          do
          {
            if (v37 == v40) {
              goto LABEL_91;
            }
            unint64_t v38 = *(void *)(v43 + 8 * v40++);
          }
          while (!v38);
          int64_t v36 = v40 - 1;
        }
        goto LABEL_75;
      }
    }
    uint64_t v22 = 0;
    unint64_t v20 = 0;
    int64_t v19 = v39;
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t sub_1006E144C(uint64_t result)
{
  int64_t v4 = v2;
  uint64_t v5 = result;
  if ((result & 0xC000000000000001) != 0)
  {
    uint64_t result = __CocoaSet.count.getter();
    uint64_t v6 = result;
  }
  else
  {
    uint64_t v6 = *(void *)(result + 16);
  }
  if ((unint64_t)*v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v8 = v18 + v6;
    if (!__OFADD__(v18, v6)) {
      goto LABEL_6;
    }
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v6;
  if (__OFADD__(v7, v6)) {
    goto LABEL_21;
  }
LABEL_6:
  unint64_t v9 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *int64_t v4 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    uint64_t v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *int64_t v4 = v12;
    uint64_t v11 = v12 & 0xFFFFFFFFFFFFFF8;
  }
  uint64_t v13 = *(void *)(v11 + 16);
  uint64_t v14 = (*(void *)(v11 + 24) >> 1) - v13;
  uint64_t result = (uint64_t)sub_1006F0B44(&v42, (void *)(v11 + 8 * v13 + 32), v14, v5, (unint64_t *)&qword_101678790, (uint64_t)off_1014C0D98, (unint64_t *)&qword_10167BE30);
  if (result < v6) {
    goto LABEL_22;
  }
  if (result >= 1)
  {
    uint64_t v15 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v16 = __OFADD__(v15, result);
    uint64_t v17 = v15 + result;
    if (v16)
    {
      __break(1u);
LABEL_29:
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_18;
      }
      sub_10050BF48(0, (unint64_t *)&qword_101678790);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v22 = v41;
      swift_unknownObjectRelease();
      while (2)
      {
        if (!v22) {
          goto LABEL_18;
        }
        while (1)
        {
          uint64_t v24 = *v4 & 0xFFFFFFFFFFFFFF8;
          if (v3 + 1 > *(void *)(v24 + 0x18) >> 1)
          {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v24 = *v4 & 0xFFFFFFFFFFFFFF8;
          }
          uint64_t v25 = *(void *)(v24 + 24) >> 1;
          if (v3 < v25) {
            break;
          }
LABEL_33:
          *(void *)(v24 + 16) = v3;
        }
        uint64_t v26 = v24 + 32;
        while (1)
        {
          *(void *)(v26 + 8 * v3++) = v22;
          int64_t v27 = v45;
          if (v42 < 0)
          {
            if (!__CocoaSet.Iterator.next()()) {
              goto LABEL_70;
            }
            sub_10050BF48(0, (unint64_t *)&qword_101678790);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            uint64_t v22 = v41;
            swift_unknownObjectRelease();
            goto LABEL_45;
          }
          if (!v46) {
            break;
          }
          unint64_t v28 = (v46 - 1) & v46;
          unint64_t v29 = __clz(__rbit64(v46)) | (v45 << 6);
LABEL_41:
          uint64_t v22 = *(void **)(*(void *)(v42 + 48) + 8 * v29);
          id v30 = v22;
LABEL_42:
          int64_t v45 = v27;
          unint64_t v46 = v28;
LABEL_45:
          if (!v22)
          {
LABEL_70:
            *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v3;
            goto LABEL_18;
          }
          if (v3 >= v25)
          {
            uint64_t v24 = *v4 & 0xFFFFFFFFFFFFFF8;
            goto LABEL_33;
          }
        }
        int64_t v31 = v45 + 1;
        if (__OFADD__(v45, 1))
        {
          __break(1u);
LABEL_94:
          uint64_t v22 = 0;
          unint64_t v20 = 0;
          int64_t v19 = v1;
LABEL_27:
          int64_t v45 = v19;
          unint64_t v46 = v20;
          continue;
        }
        break;
      }
      int64_t v32 = (unint64_t)(v44 + 64) >> 6;
      if (v31 >= v32)
      {
        uint64_t v22 = 0;
        unint64_t v28 = 0;
        goto LABEL_42;
      }
      unint64_t v33 = *(void *)(v43 + 8 * v31);
      if (!v33)
      {
        int64_t v34 = v45 + 2;
        if (v45 + 2 >= v32) {
          goto LABEL_67;
        }
        unint64_t v33 = *(void *)(v43 + 8 * v34);
        if (!v33)
        {
          int64_t v1 = v45 + 3;
          if (v45 + 3 >= v32) {
            goto LABEL_68;
          }
          unint64_t v33 = *(void *)(v43 + 8 * v1);
          if (v33)
          {
            int64_t v31 = v45 + 3;
            goto LABEL_51;
          }
          int64_t v34 = v45 + 4;
          if (v45 + 4 >= v32)
          {
            uint64_t v22 = 0;
            unint64_t v28 = 0;
            int64_t v27 = v45 + 3;
            goto LABEL_42;
          }
          unint64_t v33 = *(void *)(v43 + 8 * v34);
          if (!v33)
          {
            int64_t v31 = v45 + 5;
            if (v45 + 5 >= v32)
            {
LABEL_68:
              uint64_t v22 = 0;
              unint64_t v28 = 0;
              int64_t v27 = v34;
              goto LABEL_42;
            }
            unint64_t v33 = *(void *)(v43 + 8 * v31);
            if (!v33)
            {
              int64_t v31 = v32 - 1;
              uint64_t v35 = v45 + 6;
              while (v32 != v35)
              {
                unint64_t v33 = *(void *)(v43 + 8 * v35++);
                if (v33)
                {
                  int64_t v31 = v35 - 1;
                  goto LABEL_51;
                }
              }
LABEL_67:
              uint64_t v22 = 0;
              unint64_t v28 = 0;
              int64_t v27 = v31;
              goto LABEL_42;
            }
            goto LABEL_51;
          }
        }
        int64_t v31 = v34;
      }
LABEL_51:
      unint64_t v28 = (v33 - 1) & v33;
      unint64_t v29 = __clz(__rbit64(v33)) + (v31 << 6);
      int64_t v27 = v31;
      goto LABEL_41;
    }
    *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v17;
  }
  if (result != v14)
  {
LABEL_18:
    sub_10052E1EC();
    return specialized Array._endMutation()();
  }
LABEL_23:
  uint64_t v3 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  int64_t v19 = v45;
  if (v42 < 0) {
    goto LABEL_29;
  }
  if (v46)
  {
    unint64_t v20 = (v46 - 1) & v46;
    unint64_t v21 = __clz(__rbit64(v46)) | (v45 << 6);
LABEL_26:
    uint64_t v22 = *(void **)(*(void *)(v42 + 48) + 8 * v21);
    id v23 = v22;
    goto LABEL_27;
  }
  int64_t v36 = v45 + 1;
  if (!__OFADD__(v45, 1))
  {
    int64_t v37 = (unint64_t)(v44 + 64) >> 6;
    if (v36 >= v37)
    {
      uint64_t v22 = 0;
      unint64_t v20 = 0;
      goto LABEL_27;
    }
    unint64_t v38 = *(void *)(v43 + 8 * v36);
    if (v38) {
      goto LABEL_75;
    }
    int64_t v39 = v45 + 2;
    if (v45 + 2 >= v37)
    {
LABEL_91:
      uint64_t v22 = 0;
      unint64_t v20 = 0;
      int64_t v19 = v36;
      goto LABEL_27;
    }
    unint64_t v38 = *(void *)(v43 + 8 * v39);
    if (v38) {
      goto LABEL_79;
    }
    int64_t v1 = v45 + 3;
    if (v45 + 3 < v37)
    {
      unint64_t v38 = *(void *)(v43 + 8 * v1);
      if (v38)
      {
        int64_t v36 = v45 + 3;
        goto LABEL_75;
      }
      int64_t v39 = v45 + 4;
      if (v45 + 4 >= v37) {
        goto LABEL_94;
      }
      unint64_t v38 = *(void *)(v43 + 8 * v39);
      if (v38)
      {
LABEL_79:
        int64_t v36 = v39;
LABEL_75:
        unint64_t v20 = (v38 - 1) & v38;
        unint64_t v21 = __clz(__rbit64(v38)) + (v36 << 6);
        int64_t v19 = v36;
        goto LABEL_26;
      }
      int64_t v36 = v45 + 5;
      if (v45 + 5 < v37)
      {
        unint64_t v38 = *(void *)(v43 + 8 * v36);
        if (!v38)
        {
          int64_t v36 = v37 - 1;
          uint64_t v40 = v45 + 6;
          do
          {
            if (v37 == v40) {
              goto LABEL_91;
            }
            unint64_t v38 = *(void *)(v43 + 8 * v40++);
          }
          while (!v38);
          int64_t v36 = v40 - 1;
        }
        goto LABEL_75;
      }
    }
    uint64_t v22 = 0;
    unint64_t v20 = 0;
    int64_t v19 = v39;
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t sub_1006E1A64(unint64_t a1)
{
  return sub_1006E3C50(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BD9D4);
}

uint64_t sub_1006E1A7C(unint64_t a1)
{
  return sub_1006E31A0(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BDA10);
}

uint64_t sub_1006E1A94(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_100F6273C(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006E1C44(uint64_t a1)
{
  return sub_1006E268C(a1, (uint64_t (*)(void))sub_100F62770, &qword_101674BC0);
}

uint64_t sub_1006E1C64(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_100F62A44(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(sub_1005057FC((uint64_t *)&unk_10167BE70) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006E1E18(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_100F62A58(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(sub_1005057FC((uint64_t *)&unk_10167BE90) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006E1FC0(uint64_t a1)
{
  return sub_1006E268C(a1, (uint64_t (*)(void))sub_100F62F28, (uint64_t *)&unk_10167BDB0);
}

uint64_t sub_1006E1FE0(unint64_t a1)
{
  return sub_1006E3C50(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BDC6C);
}

uint64_t sub_1006E1FF8(unint64_t a1)
{
  return sub_1006E3C50(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BDCA8);
}

uint64_t sub_1006E2010(unint64_t a1)
{
  return sub_1006E31A0(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BDCE4);
}

uint64_t sub_1006E2028(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = (double *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native)
  {
    int64_t v8 = *((void *)v3 + 3) >> 1;
    if (v8 >= v5)
    {
      unint64_t v9 = *(void *)(a1 + 16);
      if (v9) {
        goto LABEL_5;
      }
LABEL_18:
      if (!v2) {
        goto LABEL_19;
      }
      goto LABEL_21;
    }
  }
  if (v4 <= v5) {
    int64_t v16 = v4 + v2;
  }
  else {
    int64_t v16 = v4;
  }
  unint64_t v3 = sub_100F63320(isUniquelyReferenced_nonNull_native, v16, 1, v3);
  int64_t v8 = *((void *)v3 + 3) >> 1;
  unint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *((void *)v3 + 2);
  if (v8 - v10 < (uint64_t)v9)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v11 = (unint64_t)&v3[v10 + 4];
  if (a1 + 32 < v11 + 8 * v9 && v11 < a1 + 32 + 8 * v9) {
    goto LABEL_24;
  }
  type metadata accessor for ActivityType(0);
  swift_arrayInitWithCopy();
  if (v9 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v13 = *((void *)v3 + 2);
  BOOL v14 = __OFADD__(v13, v9);
  uint64_t v15 = v13 + v9;
  if (!v14)
  {
    *((void *)v3 + 2) = v15;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006E219C(unint64_t a1)
{
  return sub_1006E3A64(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BDD20);
}

uint64_t sub_1006E21B4(uint64_t a1)
{
  return sub_1006E35C0(a1, (uint64_t (*)(void))sub_100F635A4, type metadata accessor for CRLBoardItemPeerSyncUpdate);
}

uint64_t sub_1006E21E0(unint64_t a1)
{
  return sub_1006E3A64(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BDD50);
}

uint64_t sub_1006E21F8(unint64_t a1)
{
  return sub_1006E31A0(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BDFA0);
}

uint64_t sub_1006E2210(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = (double *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  unint64_t v3 = sub_100F6389C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v10 = &v3[2 * v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[2 * v8] && (unint64_t)v10 < a1 + 32 + 16 * v8) {
    goto LABEL_24;
  }
  memcpy(v10, (const void *)(a1 + 32), 16 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = *((void *)v3 + 2);
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    *((void *)v3 + 2) = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006E235C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = (double *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  unint64_t v3 = sub_100F639AC(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8) {
    goto LABEL_24;
  }
  sub_1005057FC(&qword_1016787A8);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = *((void *)v3 + 2);
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    *((void *)v3 + 2) = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006E24D4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (double *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unint64_t v3 = sub_100F6212C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2) {
    goto LABEL_24;
  }
  sub_1005057FC((uint64_t *)&unk_10167BF00);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006E2640(uint64_t a1)
{
  return sub_1006E35C0(a1, (uint64_t (*)(void))sub_100F617D8, (uint64_t (*)(void))&type metadata accessor for UUID);
}

uint64_t sub_1006E266C(uint64_t a1)
{
  return sub_1006E268C(a1, (uint64_t (*)(void))sub_100F63C34, (uint64_t *)&unk_10167BE40);
}

uint64_t sub_1006E268C(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  if ((*(void *)(v5 + 24) >> 1) - v10 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v11 = v5 + 40 * v10 + 32;
  if (a1 + 32 < v11 + 40 * v4 && v11 < a1 + 32 + 40 * v4) {
    goto LABEL_21;
  }
  sub_1005057FC(a3);
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *unint64_t v3 = v5;
    return result;
  }
  uint64_t v13 = *(void *)(v5 + 16);
  BOOL v14 = __OFADD__(v13, v4);
  uint64_t v15 = v13 + v4;
  if (!v14)
  {
    *(void *)(v5 + 16) = v15;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006E2808(uint64_t result)
{
  uint64_t v3 = *(void *)(result + 16);
  uint64_t v4 = *v1;
  int64_t v5 = *((void *)*v1 + 2);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v7 = result;
  int isUniquelyReferenced_nonNull_native = (double *)swift_isUniquelyReferenced_nonNull_native();
  unint64_t *v1 = v4;
  if (!isUniquelyReferenced_nonNull_native || (int64_t v9 = *((void *)v4 + 3) >> 1, v9 < v6))
  {
    if (v5 <= v6) {
      int64_t v10 = v5 + v3;
    }
    else {
      int64_t v10 = v5;
    }
    uint64_t v4 = sub_100F63C34(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    unint64_t *v1 = v4;
    int64_t v9 = *((void *)v4 + 3) >> 1;
  }
  uint64_t v11 = *((void *)v4 + 2);
  uint64_t v12 = v9 - v11;
  uint64_t result = sub_1006EFDFC((uint64_t)&v47, (uint64_t)&v4[5 * v11 + 4], v9 - v11, v7);
  if (result < v3) {
    goto LABEL_17;
  }
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v14 = *((void *)v4 + 2);
  BOOL v15 = __OFADD__(v14, result);
  uint64_t v16 = v14 + result;
  if (!v15)
  {
    *((void *)v4 + 2) = v16;
LABEL_12:
    if (result != v12)
    {
      return sub_10052E1EC();
    }
LABEL_18:
    int64_t v2 = *((void *)v4 + 2);
    uint64_t v4 = (double *)v47;
    uint64_t v13 = v48;
    uint64_t v7 = v50;
    uint64_t v39 = v48;
    if (v51)
    {
      unint64_t v17 = (v51 - 1) & v51;
      unint64_t v18 = __clz(__rbit64(v51)) | (v50 << 6);
LABEL_20:
      sub_1005498A4(*((void *)v4 + 7) + 40 * v18, (uint64_t)&v44);
      uint64_t v19 = v7;
      goto LABEL_41;
    }
    goto LABEL_22;
  }
  __break(1u);
LABEL_22:
  int64_t v20 = v7 + 1;
  if (__OFADD__(v7, 1)) {
    goto LABEL_79;
  }
  int64_t v21 = (unint64_t)(v49 + 64) >> 6;
  uint64_t v19 = v7;
  if (v20 < v21)
  {
    unint64_t v22 = *(void *)(v13 + 8 * v20);
    if (v22)
    {
LABEL_25:
      unint64_t v17 = (v22 - 1) & v22;
      unint64_t v18 = __clz(__rbit64(v22)) + (v20 << 6);
      uint64_t v7 = v20;
      goto LABEL_20;
    }
    uint64_t v23 = v7 + 2;
    uint64_t v19 = v7 + 1;
    if (v7 + 2 < v21)
    {
      unint64_t v22 = *(void *)(v13 + 8 * v23);
      if (v22)
      {
LABEL_28:
        int64_t v20 = v23;
        goto LABEL_25;
      }
      uint64_t v19 = v7 + 2;
      if (v7 + 3 < v21)
      {
        unint64_t v22 = *(void *)(v39 + 8 * (v7 + 3));
        if (v22)
        {
          int64_t v20 = v7 + 3;
          goto LABEL_25;
        }
        uint64_t v23 = v7 + 4;
        uint64_t v19 = v7 + 3;
        if (v7 + 4 < v21)
        {
          unint64_t v22 = *(void *)(v39 + 8 * v23);
          if (v22) {
            goto LABEL_28;
          }
          int64_t v20 = v7 + 5;
          uint64_t v19 = v7 + 4;
          if (v7 + 5 < v21)
          {
            unint64_t v22 = *(void *)(v39 + 8 * v20);
            if (v22) {
              goto LABEL_25;
            }
            uint64_t v19 = v21 - 1;
            uint64_t v24 = v7 + 6;
            while (v21 != v24)
            {
              unint64_t v22 = *(void *)(v39 + 8 * v24++);
              if (v22)
              {
                int64_t v20 = v24 - 1;
                goto LABEL_25;
              }
            }
          }
        }
      }
    }
  }
  unint64_t v17 = 0;
  uint64_t v46 = 0;
  long long v44 = 0u;
  long long v45 = 0u;
LABEL_41:
  uint64_t v50 = v19;
  unint64_t v51 = v17;
  sub_100522E9C((uint64_t)&v44, (uint64_t)&v42, &qword_10167BE50);
  if (!v43)
  {
LABEL_77:
    sub_100522F00((uint64_t)&v44, &qword_10167BE50);
    sub_10052E1EC();
    return sub_100522F00((uint64_t)&v42, &qword_10167BE50);
  }
  while (1)
  {
    sub_100522F00((uint64_t)&v42, &qword_10167BE50);
    uint64_t v25 = *v1;
    unint64_t v26 = *((void *)*v1 + 3);
    int64_t v27 = v26 >> 1;
    if ((uint64_t)(v26 >> 1) < v2 + 1)
    {
      uint64_t v25 = sub_100F63C34((double *)(v26 > 1), v2 + 1, 1, *v1);
      unint64_t *v1 = v25;
      int64_t v27 = *((void *)v25 + 3) >> 1;
    }
    sub_100522E9C((uint64_t)&v44, (uint64_t)&v40, &qword_10167BE50);
    if (v41) {
      break;
    }
LABEL_43:
    sub_100522F00((uint64_t)&v40, &qword_10167BE50);
LABEL_44:
    *((void *)*v1 + 2) = v2;
    sub_100522E9C((uint64_t)&v44, (uint64_t)&v42, &qword_10167BE50);
    if (!v43) {
      goto LABEL_77;
    }
  }
  unint64_t v28 = v25 + 4;
  sub_10053974C(&v40, (uint64_t)&v42);
  if (v2 <= v27) {
    int64_t v29 = v27;
  }
  else {
    int64_t v29 = v2;
  }
  if (v2 >= v27)
  {
LABEL_76:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v42);
    int64_t v2 = v29;
    goto LABEL_44;
  }
  while (1)
  {
    sub_100522F00((uint64_t)&v44, &qword_10167BE50);
    uint64_t result = sub_10053974C(&v42, (uint64_t)&v28[5 * v2]);
    int64_t v30 = v50;
    if (!v51) {
      break;
    }
    unint64_t v31 = (v51 - 1) & v51;
    unint64_t v32 = __clz(__rbit64(v51)) | (v50 << 6);
LABEL_54:
    sub_1005498A4(*(void *)(v47 + 56) + 40 * v32, (uint64_t)&v44);
    int64_t v33 = v30;
LABEL_74:
    ++v2;
    uint64_t v50 = v33;
    unint64_t v51 = v31;
    sub_100522E9C((uint64_t)&v44, (uint64_t)&v40, &qword_10167BE50);
    if (!v41) {
      goto LABEL_43;
    }
    sub_10053974C(&v40, (uint64_t)&v42);
    if (v2 == v29) {
      goto LABEL_76;
    }
  }
  int64_t v34 = v50 + 1;
  if (!__OFADD__(v50, 1))
  {
    int64_t v35 = (unint64_t)(v49 + 64) >> 6;
    int64_t v33 = v50;
    if (v34 >= v35) {
      goto LABEL_73;
    }
    unint64_t v36 = *(void *)(v48 + 8 * v34);
    if (v36) {
      goto LABEL_58;
    }
    int64_t v37 = v50 + 2;
    int64_t v33 = v50 + 1;
    if (v50 + 2 >= v35) {
      goto LABEL_73;
    }
    unint64_t v36 = *(void *)(v48 + 8 * v37);
    if (v36)
    {
LABEL_61:
      int64_t v34 = v37;
    }
    else
    {
      int64_t v33 = v50 + 2;
      if (v50 + 3 >= v35) {
        goto LABEL_73;
      }
      unint64_t v36 = *(void *)(v48 + 8 * (v50 + 3));
      if (!v36)
      {
        int64_t v37 = v50 + 4;
        int64_t v33 = v50 + 3;
        if (v50 + 4 >= v35) {
          goto LABEL_73;
        }
        unint64_t v36 = *(void *)(v48 + 8 * v37);
        if (!v36)
        {
          int64_t v34 = v50 + 5;
          int64_t v33 = v50 + 4;
          if (v50 + 5 >= v35) {
            goto LABEL_73;
          }
          unint64_t v36 = *(void *)(v48 + 8 * v34);
          if (!v36)
          {
            int64_t v33 = v35 - 1;
            uint64_t v38 = v50 + 6;
            while (v35 != v38)
            {
              unint64_t v36 = *(void *)(v48 + 8 * v38++);
              if (v36)
              {
                int64_t v34 = v38 - 1;
                goto LABEL_58;
              }
            }
LABEL_73:
            unint64_t v31 = 0;
            uint64_t v46 = 0;
            long long v44 = 0u;
            long long v45 = 0u;
            goto LABEL_74;
          }
          goto LABEL_58;
        }
        goto LABEL_61;
      }
      int64_t v34 = v50 + 3;
    }
LABEL_58:
    unint64_t v31 = (v36 - 1) & v36;
    unint64_t v32 = __clz(__rbit64(v36)) + (v34 << 6);
    int64_t v30 = v34;
    goto LABEL_54;
  }
  __break(1u);
LABEL_79:
  __break(1u);
  return result;
}

uint64_t sub_1006E2D18(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (double *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_100F63C48(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[v8 + 4];
  if (a1 + 32 < v9 + 8 * v2 && v9 < a1 + 32 + 8 * v2) {
    goto LABEL_24;
  }
  sub_1005057FC(&qword_10167BF10);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006E2E7C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = (double *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_100F63D78(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  int64_t v10 = &v3[4 * v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[4 * v8] && (unint64_t)v10 < a1 + 32 + 32 * v8) {
    goto LABEL_24;
  }
  memcpy(v10, (const void *)(a1 + 32), 32 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = *((void *)v3 + 2);
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    *((void *)v3 + 2) = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006E2FC8(unint64_t a1)
{
  return sub_1006E3C50(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BE600);
}

uint64_t sub_1006E2FE0(unint64_t a1)
{
  return sub_1006E3C50(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BE820);
}

uint64_t sub_1006E2FF8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = (double *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_100F6440C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  int64_t v10 = &v3[v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + 8 * v8) {
    goto LABEL_24;
  }
  memcpy(v10, (const void *)(a1 + 32), 8 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = *((void *)v3 + 2);
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    *((void *)v3 + 2) = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006E3144(unint64_t a1)
{
  return sub_1006E31A0(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BE850);
}

uint64_t sub_1006E315C(uint64_t a1)
{
  return sub_1006E35C0(a1, (uint64_t (*)(void))sub_100F63FCC, (uint64_t (*)(void))_s15FilterViewModelVMa);
}

uint64_t sub_1006E3188(unint64_t a1)
{
  return sub_1006E31A0(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BEA70);
}

uint64_t sub_1006E31A0(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v6 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v7 = v6 + v5;
    if (!__OFADD__(v6, v5)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v7 = v17 + v5;
  if (__OFADD__(v17, v5)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v8 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v2 = v8;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
    {
      uint64_t v10 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v7 <= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v8 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *unint64_t v2 = v11;
    uint64_t v10 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_1006E3374(unint64_t a1)
{
  return sub_1006E3C50(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BEC90);
}

uint64_t sub_1006E338C(unint64_t a1)
{
  return sub_1006E3C50(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BF100);
}

uint64_t sub_1006E33A4(unint64_t a1)
{
  return sub_1006E3C50(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BF360);
}

uint64_t sub_1006E33BC(uint64_t a1)
{
  return sub_1006E35C0(a1, (uint64_t (*)(void))sub_100F64B4C, type metadata accessor for CRLSpotlightManager.ChangeType);
}

uint64_t sub_1006E33E8(unint64_t a1)
{
  return sub_1006E3C50(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BF5B0);
}

uint64_t sub_1006E3400(unint64_t a1)
{
  return sub_1006E3C50(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BF580);
}

uint64_t sub_1006E3418(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (double *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_100F646A0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  sub_1005057FC((uint64_t *)&unk_10167BE80);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006E357C(unint64_t a1)
{
  return sub_1006E3C50(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BF5EC);
}

uint64_t sub_1006E3594(uint64_t a1)
{
  return sub_1006E35C0(a1, (uint64_t (*)(void))sub_100F64E4C, (uint64_t (*)(void))&type metadata accessor for PKStroke);
}

uint64_t sub_1006E35C0(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(a3(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = v5 + v14 + v13 * v10;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v4;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    return result;
  }
  uint64_t v21 = *(void *)(v5 + 16);
  BOOL v22 = __OFADD__(v21, v4);
  uint64_t v23 = v21 + v4;
  if (!v22)
  {
    *(void *)(v5 + 16) = v23;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006E377C(uint64_t result)
{
  unint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v1 = v3;
  if (!result || (int64_t v7 = *(void *)(v3 + 24) >> 1, v7 < v5))
  {
    if (v4 <= v5) {
      int64_t v8 = v4 + v2;
    }
    else {
      int64_t v8 = v4;
    }
    uint64_t result = (uint64_t)sub_100F64EDC((double *)result, v8, 1, (double *)v3);
    uint64_t v3 = result;
    uint64_t *v1 = result;
    int64_t v7 = *(void *)(result + 24) >> 1;
  }
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = v7 - v9;
  unint64_t v11 = *(void *)(v6 + 16);
  if (v11)
  {
    if (v10 < (uint64_t)v11)
    {
      __break(1u);
      goto LABEL_25;
    }
    unint64_t v12 = v3 + 72 * v9 + 32;
    if (v6 + 32 < v12 + 72 * v11 && v12 < v6 + 32 + 72 * v11) {
      goto LABEL_26;
    }
    uint64_t result = swift_arrayInitWithCopy();
    if (v11 >= v2)
    {
      uint64_t v14 = *(void *)(v3 + 16);
      BOOL v15 = __OFADD__(v14, v11);
      uint64_t v16 = v14 + v11;
      if (!v15)
      {
        *(void *)(v3 + 16) = v16;
        goto LABEL_19;
      }
LABEL_25:
      __break(1u);
LABEL_26:
      uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v2) {
    goto LABEL_22;
  }
LABEL_19:
  uint64_t result = swift_bridgeObjectRelease();
  if (v11 == v10) {
LABEL_23:
  }
    uint64_t *v1 = v3;
  return result;
}

uint64_t sub_1006E38F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (double *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_100F6347C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t *v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006E3A4C(unint64_t a1)
{
  return sub_1006E3A64(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BF61C);
}

uint64_t sub_1006E3A64(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v6 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v7 = v6 + v5;
    if (!__OFADD__(v6, v5)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v7 = v17 + v5;
  if (__OFADD__(v17, v5)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v8 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v8;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
    {
      uint64_t v10 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v7 <= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v8 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *uint64_t v2 = v11;
    uint64_t v10 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_1006E3C38(unint64_t a1)
{
  return sub_1006E3C50(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BF64C);
}

uint64_t sub_1006E3C50(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v6 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v7 = v6 + v5;
    if (!__OFADD__(v6, v5)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v7 = v17 + v5;
  if (__OFADD__(v17, v5)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v8 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v8;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
    {
      uint64_t v10 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v7 <= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v8 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *uint64_t v2 = v11;
    uint64_t v10 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_1006E3E24(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_1006EE290((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID), uint64_t v8 = dispatch thunk of Hashable._rawHashValue(seed:)(), v9 = -1 << *(unsigned char *)(a2 + 32), v10 = v8 & ~v9, v11 = a2 + 56, ((*(void *)(a2 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0))
  {
    uint64_t v18 = ~v9;
    uint64_t v19 = a2;
    uint64_t v12 = v4 + 16;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v14 = *(void *)(v12 + 56);
    BOOL v15 = (void (**)(char *, uint64_t))(v12 - 8);
    do
    {
      v13(v7, *(void *)(v19 + 48) + v14 * v10, v3);
      sub_1006EE290((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v16 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*v15)(v7, v3);
      if (v16) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v18;
    }
    while (((*(void *)(v11 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  else
  {
    char v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_1006E4038(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v32 - v11;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_retain();
    char v13 = __CocoaSet.contains(_:)();
    swift_release();
    return v13 & 1;
  }
  else
  {
    if (!*(void *)(a2 + 16)) {
      goto LABEL_9;
    }
    Hasher.init(_seed:)();
    uint64_t v15 = *(void *)(a1 + 16);
    uint64_t v16 = *(void *)(a1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v16 + 32);
    uint64_t v42 = v16;
    uint64_t v43 = v15;
    uint64_t v40 = v16 + 32;
    uint64_t v41 = ObjectType;
    uint64_t v39 = v18;
    v18(ObjectType, v16);
    sub_1006EE290((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
    dispatch thunk of Hashable.hash(into:)();
    int64_t v20 = *(void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v19 = v5 + 8;
    uint64_t v38 = v20;
    v20(v12, v4);
    Swift::Int v21 = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v23 = v21 & ~v22;
    uint64_t v37 = a2 + 56;
    if ((*(void *)(a2 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
    {
      uint64_t v34 = a2;
      int64_t v35 = v12;
      uint64_t v33 = ~v22;
      unint64_t v36 = v9;
      do
      {
        uint64_t v24 = *(void *)(*(void *)(*(void *)(a2 + 48) + 8 * v23) + 24);
        uint64_t v25 = swift_getObjectType();
        uint64_t v26 = v19;
        uint64_t v27 = v4;
        unint64_t v28 = *(void (**)(uint64_t, uint64_t))(v24 + 32);
        swift_retain();
        v28(v25, v24);
        uint64_t v4 = v27;
        uint64_t v19 = v26;
        int64_t v29 = v36;
        v39(v41, v42);
        char v30 = static UUID.== infix(_:_:)();
        unint64_t v31 = v38;
        v38(v29, v4);
        v31(v12, v4);
        swift_release();
        if (v30) {
          break;
        }
        a2 = v34;
        unint64_t v23 = (v23 + 1) & v33;
      }
      while (((*(void *)(v37 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) != 0);
    }
    else
    {
LABEL_9:
      char v30 = 0;
    }
    return v30 & 1;
  }
}

uint64_t sub_1006E4330(Swift::UInt a1, char a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    if (a2)
    {
      Hasher._combine(_:)(0);
    }
    else
    {
      Hasher._combine(_:)(1u);
      Hasher._combine(_:)(a1);
    }
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v9 = ~v7;
      do
      {
        uint64_t v10 = *(void *)(a3 + 48) + 16 * v8;
        if (*(unsigned char *)(v10 + 8))
        {
          if (a2) {
            return 1;
          }
        }
        else if ((a2 & 1) == 0 && *(void *)v10 == a1)
        {
          return 1;
        }
        unint64_t v8 = (v8 + 1) & v9;
      }
      while (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_1006E4428(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    int v4 = a2;
    Hasher.init(_seed:)();
    if (v4 == 255)
    {
      Hasher._combine(_:)(0);
    }
    else
    {
      Hasher._combine(_:)(1u);
      sub_1005057FC(&qword_10167BDC8);
      CRExtensible.hash(into:)();
    }
    Swift::Int v5 = Hasher._finalize()();
    uint64_t v6 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v7 = v5 & ~v6;
    if ((*(void *)(a3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
    {
      uint64_t v8 = ~v6;
      do
      {
        if (*(unsigned __int8 *)(*(void *)(a3 + 48) + 16 * v7 + 8) == 255)
        {
          if (v4 == 255) {
            return 1;
          }
        }
        else if (v4 != 255)
        {
          sub_1006F2354();
          if (static CRExtensible.== infix(_:_:)()) {
            return 1;
          }
        }
        unint64_t v7 = (v7 + 1) & v8;
      }
      while (((*(void *)(a3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_1006E45B0(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    int v4 = a2;
    Hasher.init(_seed:)();
    if (v4 == 255)
    {
      Hasher._combine(_:)(0);
    }
    else
    {
      Hasher._combine(_:)(1u);
      sub_1005057FC(&qword_10167BE18);
      CRExtensible.hash(into:)();
    }
    Swift::Int v5 = Hasher._finalize()();
    uint64_t v6 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v7 = v5 & ~v6;
    if ((*(void *)(a3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
    {
      uint64_t v8 = ~v6;
      do
      {
        if (*(unsigned __int8 *)(*(void *)(a3 + 48) + 16 * v7 + 8) == 255)
        {
          if (v4 == 255) {
            return 1;
          }
        }
        else if (v4 != 255)
        {
          type metadata accessor for CRLWPWritingDirection(0);
          sub_1006EE290((unint64_t *)&unk_10167BE20, type metadata accessor for CRLWPWritingDirection);
          if (static CRExtensible.== infix(_:_:)()) {
            return 1;
          }
        }
        unint64_t v7 = (v7 + 1) & v8;
      }
      while (((*(void *)(a3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_1006E4770(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    int v4 = a2;
    Hasher.init(_seed:)();
    if (v4 == 255)
    {
      Hasher._combine(_:)(0);
    }
    else
    {
      Hasher._combine(_:)(1u);
      sub_1005057FC(&qword_101687860);
      CRExtensible.hash(into:)();
    }
    Swift::Int v5 = Hasher._finalize()();
    uint64_t v6 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v7 = v5 & ~v6;
    if ((*(void *)(a3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
    {
      uint64_t v8 = ~v6;
      do
      {
        if (*(unsigned __int8 *)(*(void *)(a3 + 48) + 16 * v7 + 8) == 255)
        {
          if (v4 == 255) {
            return 1;
          }
        }
        else if (v4 != 255)
        {
          type metadata accessor for CRLWPParagraphAlignment(0);
          sub_1006EE290((unint64_t *)&unk_10167BDE0, type metadata accessor for CRLWPParagraphAlignment);
          if (static CRExtensible.== infix(_:_:)()) {
            return 1;
          }
        }
        unint64_t v7 = (v7 + 1) & v8;
      }
      while (((*(void *)(a3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_1006E4930(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    int v4 = a2;
    Hasher.init(_seed:)();
    if (v4 == 255)
    {
      Hasher._combine(_:)(0);
    }
    else
    {
      Hasher._combine(_:)(1u);
      sub_1005057FC(&qword_101687550);
      CRExtensible.hash(into:)();
    }
    Swift::Int v5 = Hasher._finalize()();
    uint64_t v6 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v7 = v5 & ~v6;
    if ((*(void *)(a3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
    {
      uint64_t v8 = ~v6;
      do
      {
        if (*(unsigned __int8 *)(*(void *)(a3 + 48) + 16 * v7 + 8) == 255)
        {
          if (v4 == 255) {
            return 1;
          }
        }
        else if (v4 != 255)
        {
          type metadata accessor for CRLWPStrikethru(0);
          sub_1006EE290(&qword_10167BDF0, type metadata accessor for CRLWPStrikethru);
          if (static CRExtensible.== infix(_:_:)()) {
            return 1;
          }
        }
        unint64_t v7 = (v7 + 1) & v8;
      }
      while (((*(void *)(a3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_1006E4AF0(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    int v4 = a2;
    Hasher.init(_seed:)();
    if (v4 == 255)
    {
      Hasher._combine(_:)(0);
    }
    else
    {
      Hasher._combine(_:)(1u);
      sub_1005057FC(&qword_10167BDF8);
      CRExtensible.hash(into:)();
    }
    Swift::Int v5 = Hasher._finalize()();
    uint64_t v6 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v7 = v5 & ~v6;
    if ((*(void *)(a3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
    {
      uint64_t v8 = ~v6;
      do
      {
        if (*(unsigned __int8 *)(*(void *)(a3 + 48) + 16 * v7 + 8) == 255)
        {
          if (v4 == 255) {
            return 1;
          }
        }
        else if (v4 != 255)
        {
          type metadata accessor for CRLWPUnderline(0);
          sub_1006EE290((unint64_t *)&unk_10167BE00, type metadata accessor for CRLWPUnderline);
          if (static CRExtensible.== infix(_:_:)()) {
            return 1;
          }
        }
        unint64_t v7 = (v7 + 1) & v8;
      }
      while (((*(void *)(a3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_1006E4CB0(char a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    Hasher.init(_seed:)();
    if (a1 == 2)
    {
      Swift::UInt8 v4 = 0;
    }
    else
    {
      Swift::UInt8 v4 = a1 & 1;
      Hasher._combine(_:)(1u);
    }
    Hasher._combine(_:)(v4);
    Swift::Int v5 = Hasher._finalize()();
    uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v7 = v5 & ~v6;
    if ((*(void *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
    {
      uint64_t v8 = ~v6;
      do
      {
        int v9 = *(unsigned __int8 *)(*(void *)(a2 + 48) + v7);
        if (v9 == 2)
        {
          if (a1 == 2) {
            return 1;
          }
        }
        else if (a1 != 2 && ((((a1 & 1) == 0) ^ v9) & 1) != 0)
        {
          return 1;
        }
        unint64_t v7 = (v7 + 1) & v8;
      }
      while (((*(void *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_1006E4DC0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    Hasher.init(_seed:)();
    if ((a1 & 0x100000000) != 0)
    {
      Hasher._combine(_:)(0);
    }
    else
    {
      Hasher._combine(_:)(1u);
      BOOL v4 = (a1 & 0x7FFFFF) == 0 && (a1 & 0x7F800000) == 0;
      Swift::UInt32 v5 = v4 ? 0 : a1;
      Hasher._combine(_:)(v5);
    }
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v8 = v6 & ~v7;
    if ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v9 = ~v7;
      do
      {
        uint64_t v10 = *(void *)(a2 + 48) + 8 * v8;
        if (*(unsigned char *)(v10 + 4))
        {
          if ((a1 & 0x100000000) != 0) {
            return 1;
          }
        }
        else if ((a1 & 0x100000000) == 0 && *(float *)v10 == *(float *)&a1)
        {
          return 1;
        }
        unint64_t v8 = (v8 + 1) & v9;
      }
      while (((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_1006E4EC4(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  if (*(void *)(a4 + 16))
  {
    int v5 = a3;
    Hasher.init(_seed:)();
    if (v5 == 255)
    {
      Hasher._combine(_:)(0);
    }
    else
    {
      Hasher._combine(_:)(1u);
      sub_1005057FC(&qword_1016875E0);
      CRExtensible.hash(into:)();
    }
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v8 = v6 & ~v7;
    if ((*(void *)(a4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v9 = ~v7;
      do
      {
        if (*(unsigned __int8 *)(*(void *)(a4 + 48) + 24 * v8 + 16) == 255)
        {
          if (v5 == 255) {
            return 1;
          }
        }
        else if (v5 != 255)
        {
          sub_1006F23A8();
          if (static CRExtensible.== infix(_:_:)()) {
            return 1;
          }
        }
        unint64_t v8 = (v8 + 1) & v9;
      }
      while (((*(void *)(a4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_1006E5050(void *a1, uint64_t a2)
{
  return sub_1006E51F4(a1, a2, (void (*)(void))type metadata accessor for CRLBoardItem);
}

uint64_t sub_1006E5068(void *a1, uint64_t a2)
{
  return sub_1006E507C(a1, a2, (unint64_t *)&qword_101674210);
}

uint64_t sub_1006E507C(void *a1, uint64_t a2, unint64_t *a3)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v4 = a1;
    char v5 = __CocoaSet.contains(_:)();

    return v5 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (Swift::Int v8 = NSObject._rawHashValue(seed:)(*(void *)(a2 + 40)),
        uint64_t v9 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v10 = v8 & ~v9,
        uint64_t v11 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0))
  {
LABEL_11:
    char v14 = 0;
    return v14 & 1;
  }
  sub_10050BF48(0, a3);
  id v12 = *(id *)(*(void *)(a2 + 48) + 8 * v10);
  char v13 = static NSObject.== infix(_:_:)();

  if ((v13 & 1) == 0)
  {
    uint64_t v15 = ~v9;
    unint64_t v16 = (v10 + 1) & v15;
    if ((*(void *)(v11 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16))
    {
      do
      {
        id v17 = *(id *)(*(void *)(a2 + 48) + 8 * v16);
        char v14 = static NSObject.== infix(_:_:)();

        if (v14) {
          break;
        }
        unint64_t v16 = (v16 + 1) & v15;
      }
      while (((*(void *)(v11 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
      return v14 & 1;
    }
    goto LABEL_11;
  }
  char v14 = 1;
  return v14 & 1;
}

uint64_t sub_1006E51DC(void *a1, uint64_t a2)
{
  return sub_1006E51F4(a1, a2, (void (*)(void))type metadata accessor for CRLCollaborationParticipant);
}

uint64_t sub_1006E51F4(void *a1, uint64_t a2, void (*a3)(void))
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v4 = a1;
    char v5 = __CocoaSet.contains(_:)();

    return v5 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (Swift::Int v8 = NSObject._rawHashValue(seed:)(*(void *)(a2 + 40)),
        uint64_t v9 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v10 = v8 & ~v9,
        uint64_t v11 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0))
  {
LABEL_11:
    char v14 = 0;
    return v14 & 1;
  }
  a3(0);
  id v12 = *(id *)(*(void *)(a2 + 48) + 8 * v10);
  char v13 = static NSObject.== infix(_:_:)();

  if ((v13 & 1) == 0)
  {
    uint64_t v15 = ~v9;
    unint64_t v16 = (v10 + 1) & v15;
    if ((*(void *)(v11 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16))
    {
      do
      {
        id v17 = *(id *)(*(void *)(a2 + 48) + 8 * v16);
        char v14 = static NSObject.== infix(_:_:)();

        if (v14) {
          break;
        }
        unint64_t v16 = (v16 + 1) & v15;
      }
      while (((*(void *)(v11 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
      return v14 & 1;
    }
    goto LABEL_11;
  }
  char v14 = 1;
  return v14 & 1;
}

uint64_t sub_1006E534C(unint64_t a1, unint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5)
{
  if (!*(void *)(a5 + 16)) {
    goto LABEL_9;
  }
  Hasher.init(_seed:)();
  sub_100B8174C((int)&v27, a1, a2, a3, a4);
  unint64_t v10 = Hasher._finalize()() & ~(-1 << *(unsigned char *)(a5 + 32));
  if (((*(void *)(a5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v25 = -1 << *(unsigned char *)(a5 + 32);
  uint64_t v11 = *(void *)(a5 + 48) + 32 * v10;
  id v12 = *(id *)v11;
  char v13 = *(void **)(v11 + 8);
  uint64_t v14 = *(void *)(v11 + 16);
  unsigned __int8 v15 = *(unsigned char *)(v11 + 24);
  sub_10053BB6C(*(id *)v11, v13, v14, v15);
  unsigned __int8 v26 = a4;
  char v16 = sub_100B834D0((unint64_t)v12, (unint64_t)v13, v14, v15, a1, a2, a3, a4);
  sub_10053BBA0(v12, v13, v14, v15);
  if (v16)
  {
    char v17 = 1;
    return v17 & 1;
  }
  unint64_t v18 = (v10 + 1) & ~v25;
  if (((*(void *)(a5 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
  {
LABEL_9:
    char v17 = 0;
    return v17 & 1;
  }
  do
  {
    uint64_t v19 = *(void *)(a5 + 48) + 32 * v18;
    id v20 = *(id *)v19;
    Swift::Int v21 = *(void **)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 16);
    unsigned __int8 v23 = *(unsigned char *)(v19 + 24);
    sub_10053BB6C(*(id *)v19, v21, v22, v23);
    char v17 = sub_100B834D0((unint64_t)v20, (unint64_t)v21, v22, v23, a1, a2, a3, v26);
    sub_10053BBA0(v20, v21, v22, v23);
    if (v17) {
      break;
    }
    unint64_t v18 = (v18 + 1) & ~v25;
  }
  while (((*(void *)(a5 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) != 0);
  return v17 & 1;
}

uint64_t sub_1006E5534(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v61 = *(void (***)(uint64_t, uint64_t))(v4 - 8);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = &v57[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = &v57[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v67 = sub_1005057FC((uint64_t *)&unk_10167BEA0);
  __chkstk_darwin(v67, v12);
  uint64_t v68 = &v57[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = (int *)type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
  uint64_t v64 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))*((void *)v14 - 1);
  __chkstk_darwin(v14, v15);
  char v17 = &v57[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v75 = sub_1005057FC((uint64_t *)&unk_101687B00);
  __chkstk_darwin(v75, v18);
  id v20 = &v57[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = sub_1005057FC((uint64_t *)&unk_10167BE90);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v24 = __chkstk_darwin(v21 - 8, v23);
  uint64_t v70 = &v57[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v24, v26);
  unint64_t v28 = &v57[-v27];
  if (*(void *)(a2 + 16))
  {
    uint64_t v65 = v11;
    uint64_t v60 = v7;
    uint64_t v66 = v4;
    Hasher.init(_seed:)();
    sub_100CD7B94(&v78);
    Swift::Int v29 = Hasher._finalize()();
    uint64_t v30 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v31 = v29 & ~v30;
    uint64_t v32 = a2 + 56;
    if ((*(void *)(a2 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31))
    {
      uint64_t v73 = a1;
      uint64_t v74 = a2;
      uint64_t v71 = ~v30;
      uint64_t v72 = *(void *)(v22 + 72);
      uint64_t v33 = (uint64_t (**)(uint64_t, uint64_t, int *))(v64 + 6);
      uint64_t v64 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v61 + 6);
      uint64_t v59 = (void (**)(unsigned char *, uint64_t, uint64_t))(v61 + 4);
      ++v61;
      uint64_t v63 = v17;
      uint64_t v69 = v32;
      uint64_t v62 = v14;
      while (1)
      {
        sub_100522E9C(*(void *)(v74 + 48) + v72 * v31, (uint64_t)v28, (uint64_t *)&unk_10167BE90);
        uint64_t v34 = (uint64_t)&v20[*(int *)(v75 + 48)];
        sub_100522E9C((uint64_t)v28, (uint64_t)v20, (uint64_t *)&unk_10167BE90);
        sub_100522E9C(v73, v34, (uint64_t *)&unk_10167BE90);
        int64_t v35 = *v33;
        if ((*v33)((uint64_t)v20, 1, v14) == 1) {
          break;
        }
        uint64_t v38 = v70;
        sub_100522E9C((uint64_t)v20, (uint64_t)v70, (uint64_t *)&unk_10167BE90);
        int v39 = v35(v34, 1, v14);
        uint64_t v37 = (uint64_t *)&unk_101687B00;
        if (v39 == 1) {
          goto LABEL_16;
        }
        sub_1006F285C(v34, (uint64_t)v17, type metadata accessor for CRLWPHyperlinkSmartFieldData);
        char v40 = v38[8];
        *(void *)&long long v78 = *(void *)v38;
        BYTE8(v78) = v40;
        char v41 = v17[8];
        uint64_t v76 = *(void *)v17;
        char v77 = v41;
        sub_1006F2468();
        if ((static CRExtensible.== infix(_:_:)() & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v42 = v14[5];
        uint64_t v43 = (uint64_t)&v38[v42];
        uint64_t v44 = (uint64_t)&v17[v42];
        long long v45 = v68;
        uint64_t v46 = (uint64_t)&v68[*(int *)(v67 + 48)];
        sub_100522E9C(v43, (uint64_t)v68, &qword_101672E90);
        sub_100522E9C(v44, v46, &qword_101672E90);
        uint64_t v47 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*v64;
        uint64_t v48 = v66;
        if ((*v64)(v45, 1, v66) == 1)
        {
          if (v47(v46, 1, v48) != 1) {
            goto LABEL_14;
          }
          sub_100522F00((uint64_t)v68, &qword_101672E90);
          char v17 = v63;
          uint64_t v38 = v70;
          uint64_t v14 = v62;
        }
        else
        {
          sub_100522E9C((uint64_t)v45, (uint64_t)v65, &qword_101672E90);
          if (v47(v46, 1, v48) == 1)
          {
            (*v61)((uint64_t)v65, v48);
LABEL_14:
            sub_100522F00((uint64_t)v68, (uint64_t *)&unk_10167BEA0);
            char v17 = v63;
            uint64_t v38 = v70;
            uint64_t v14 = v62;
LABEL_15:
            sub_1006F2408((uint64_t)v17, type metadata accessor for CRLWPHyperlinkSmartFieldData);
            uint64_t v37 = (uint64_t *)&unk_10167BE90;
LABEL_16:
            sub_1006F2408((uint64_t)v38, type metadata accessor for CRLWPHyperlinkSmartFieldData);
            uint64_t v32 = v69;
LABEL_17:
            sub_100522F00((uint64_t)v20, v37);
            sub_100522F00((uint64_t)v28, (uint64_t *)&unk_10167BE90);
            goto LABEL_18;
          }
          (*v59)(v60, v46, v48);
          sub_1006EE290((unint64_t *)&qword_10167BEB8, (void (*)(uint64_t))&type metadata accessor for URL);
          uint64_t v49 = (uint64_t)v65;
          int v58 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v50 = *v61;
          (*v61)((uint64_t)v60, v48);
          v50(v49, v48);
          sub_100522F00((uint64_t)v45, &qword_101672E90);
          char v17 = v63;
          uint64_t v38 = v70;
          uint64_t v14 = v62;
          if ((v58 & 1) == 0) {
            goto LABEL_15;
          }
        }
        uint64_t v51 = v14[6];
        uint64_t v52 = *(void *)&v38[v51];
        uint64_t v53 = *(void *)&v38[v51 + 8];
        uint64_t v54 = &v17[v51];
        if ((v52 != *v54 || v53 != v54[1]) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          goto LABEL_15;
        }
        char v55 = sub_100ED60AC(*(void *)&v38[v14[7]], *(void *)&v17[v14[7]]);
        sub_1006F2408((uint64_t)v17, type metadata accessor for CRLWPHyperlinkSmartFieldData);
        sub_1006F2408((uint64_t)v38, type metadata accessor for CRLWPHyperlinkSmartFieldData);
        sub_100522F00((uint64_t)v20, (uint64_t *)&unk_10167BE90);
        sub_100522F00((uint64_t)v28, (uint64_t *)&unk_10167BE90);
        uint64_t v32 = v69;
        if (v55) {
          return 1;
        }
LABEL_18:
        unint64_t v31 = (v31 + 1) & v71;
        if (((*(void *)(v32 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
          return 0;
        }
      }
      int v36 = v35(v34, 1, v14);
      uint64_t v37 = (uint64_t *)&unk_101687B00;
      if (v36 == 1)
      {
        sub_100522F00((uint64_t)v20, (uint64_t *)&unk_10167BE90);
        sub_100522F00((uint64_t)v28, (uint64_t *)&unk_10167BE90);
        return 1;
      }
      goto LABEL_17;
    }
  }
  return 0;
}

uint64_t sub_1006E5D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1006E5EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4 - 8, v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v7, v10);
  uint64_t v13 = (char *)&v31 - v12;
  __chkstk_darwin(v11, v14);
  uint64_t v16 = (char *)&v31 - v15;
  if (*(void *)(a2 + 16))
  {
    Hasher.init(_seed:)();
    type metadata accessor for UUID();
    sub_1006EE290((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
    dispatch thunk of Hashable.hash(into:)();
    uint64_t v32 = type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v17 = Hasher._finalize()();
    uint64_t v18 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v19 = v17 & ~v18;
    uint64_t v20 = a2 + 56;
    if ((*(void *)(a2 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
    {
      uint64_t v33 = a2;
      uint64_t v21 = ~v18;
      uint64_t v22 = *(void *)(v5 + 72);
      do
      {
        sub_1006F27F4(*(void *)(v33 + 48) + v22 * v19, (uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
        char v23 = static UUID.== infix(_:_:)();
        sub_1006F27F4((uint64_t)v16, (uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
        sub_1006F27F4(a1, (uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
        if (v23)
        {
          uint64_t v24 = *(int *)(v32 + 20);
          uint64_t v25 = *(void *)&v13[v24];
          uint64_t v26 = *(void *)&v13[v24 + 8];
          uint64_t v27 = &v9[v24];
          if (v25 == *(void *)v27 && v26 == *((void *)v27 + 1))
          {
            sub_1006F2408((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
            sub_1006F2408((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
            sub_1006F2408((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
            return 1;
          }
          char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
          sub_1006F2408((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
          sub_1006F2408((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
          sub_1006F2408((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
          if (v29) {
            return 1;
          }
        }
        else
        {
          sub_1006F2408((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
          sub_1006F2408((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
          sub_1006F2408((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
        }
        unint64_t v19 = (v19 + 1) & v21;
      }
      while (((*(void *)(v20 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_1006E61EC(void *a1, uint64_t a2)
{
  return sub_1006E507C(a1, a2, (unint64_t *)&qword_101678790);
}

uint64_t sub_1006E6200(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)
    && (Swift::Int v3 = AnyHashable._rawHashValue(seed:)(*(void *)(a2 + 40)),
        uint64_t v4 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v5 = v3 & ~v4,
        ((*(void *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0))
  {
    uint64_t v6 = ~v4;
    do
    {
      sub_10050BF84(*(void *)(a2 + 48) + 40 * v5, (uint64_t)v9);
      char v7 = static AnyHashable.== infix(_:_:)();
      sub_10050BFE0((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v5 = (v5 + 1) & v6;
    }
    while (((*(void *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

BOOL sub_1006E62D8(Swift::UInt32 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v4 = Hasher._finalize()();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(_DWORD *)(v8 + 4 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(_DWORD *)(v8 + 4 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1006E63C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v111 = (uint64_t)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  unint64_t v11 = (char *)&v95 - v10;
  uint64_t v13 = __chkstk_darwin(v9, v12);
  uint64_t v15 = (char *)&v95 - v14;
  __chkstk_darwin(v13, v16);
  uint64_t v109 = (uint64_t)&v95 - v17;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v113 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_1005057FC(&qword_10167BE58);
  __chkstk_darwin(v110, v22);
  uint64_t v118 = (uint64_t)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  uint64_t v26 = __chkstk_darwin(v24 - 8, v25);
  unint64_t v28 = (char *)&v95 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v26, v29);
  uint64_t v116 = (uint64_t)&v95 - v31;
  __chkstk_darwin(v30, v32);
  uint64_t v115 = (uint64_t)&v95 - v33;
  uint64_t v119 = sub_1005057FC((uint64_t *)&unk_10167BE60);
  __chkstk_darwin(v119, v34);
  int v36 = (char *)&v95 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v39 = __chkstk_darwin(v37, v38);
  uint64_t v121 = (char *)&v95 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __chkstk_darwin(v39, v41);
  uint64_t v117 = (uint64_t)&v95 - v43;
  uint64_t v45 = __chkstk_darwin(v42, v44);
  uint64_t v120 = (unsigned __int8 *)&v95 - v46;
  __chkstk_darwin(v45, v47);
  uint64_t v50 = (char *)&v95 - v49;
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v103 = v21;
  uint64_t v51 = v48;
  uint64_t v104 = v18;
  uint64_t v112 = v15;
  uint64_t v108 = v11;
  Hasher.init(_seed:)();
  sub_100DD93E0();
  Swift::Int v52 = Hasher._finalize()();
  uint64_t v53 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v54 = v52 & ~v53;
  uint64_t v124 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v54 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v54) & 1) == 0) {
    return 0;
  }
  uint64_t v55 = a2;
  uint64_t v122 = ~v53;
  uint64_t v114 = v121 + 8;
  uint64_t v123 = *(void *)(v51 + 72);
  uint64_t v102 = (void (**)(uint64_t, uint64_t))(v113 + 8);
  uint64_t v100 = (void (**)(char *, uint64_t, uint64_t))(v113 + 32);
  uint64_t v113 = a1;
  uint64_t v56 = (uint64_t)v121;
  uint64_t v107 = v28;
  uint64_t v57 = v119;
  uint64_t v106 = a2;
  uint64_t v105 = v37;
  while (1)
  {
    sub_1006F27F4(*(void *)(v55 + 48) + v123 * v54, (uint64_t)v50, type metadata accessor for CRLBoardLibraryViewModel.Item);
    uint64_t v60 = &v36[*(int *)(v57 + 48)];
    sub_1006F27F4((uint64_t)v50, (uint64_t)v36, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_1006F27F4(a1, (uint64_t)v60, type metadata accessor for CRLBoardLibraryViewModel.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload)
    {
      sub_1006F27F4((uint64_t)v36, (uint64_t)v120, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_6;
      }
      int v72 = *v120;
      int v73 = *v60;
      sub_1006F2408((uint64_t)v36, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1006F2408((uint64_t)v50, type metadata accessor for CRLBoardLibraryViewModel.Item);
      BOOL v85 = v72 == v73;
      uint64_t v56 = (uint64_t)v121;
      a1 = v113;
      if (v85) {
        return 1;
      }
      goto LABEL_8;
    }
    if (EnumCaseMultiPayload == 1) {
      break;
    }
    sub_1006F27F4((uint64_t)v36, v56, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_1005057FC(&qword_101677100);
    swift_bridgeObjectRelease();
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      int v58 = type metadata accessor for CRLBoardIdentifier;
      uint64_t v59 = v56;
      goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    uint64_t v74 = v109;
    sub_1006F285C(v56, v109, type metadata accessor for CRLBoardIdentifier);
    uint64_t v75 = (uint64_t)v112;
    sub_1006F285C((uint64_t)v60, (uint64_t)v112, type metadata accessor for CRLBoardIdentifier);
    char v76 = static UUID.== infix(_:_:)();
    uint64_t v77 = (uint64_t)v108;
    sub_1006F27F4(v74, (uint64_t)v108, type metadata accessor for CRLBoardIdentifier);
    uint64_t v78 = v111;
    sub_1006F27F4(v75, v111, type metadata accessor for CRLBoardIdentifier);
    if ((v76 & 1) == 0)
    {
      sub_1006F2408(v78, type metadata accessor for CRLBoardIdentifier);
      sub_1006F2408(v77, type metadata accessor for CRLBoardIdentifier);
      sub_1006F2408(v75, type metadata accessor for CRLBoardIdentifier);
      sub_1006F2408(v74, type metadata accessor for CRLBoardIdentifier);
      sub_1006F2408((uint64_t)v36, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v55 = v106;
      uint64_t v57 = v119;
      uint64_t v56 = (uint64_t)v121;
      goto LABEL_7;
    }
    uint64_t v79 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v80 = *(void *)(v77 + v79);
    uint64_t v81 = *(void *)(v77 + v79 + 8);
    unint64_t v82 = (void *)(v78 + v79);
    uint64_t v83 = v77;
    if (v80 == *v82 && v81 == v82[1])
    {
      char v93 = type metadata accessor for CRLBoardIdentifier;
      sub_1006F2408(v78, type metadata accessor for CRLBoardIdentifier);
      sub_1006F2408(v83, type metadata accessor for CRLBoardIdentifier);
      sub_1006F2408((uint64_t)v112, type metadata accessor for CRLBoardIdentifier);
      uint64_t v94 = v74;
      goto LABEL_46;
    }
    char v84 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_1006F2408(v78, type metadata accessor for CRLBoardIdentifier);
    sub_1006F2408(v77, type metadata accessor for CRLBoardIdentifier);
    sub_1006F2408((uint64_t)v112, type metadata accessor for CRLBoardIdentifier);
    sub_1006F2408(v74, type metadata accessor for CRLBoardIdentifier);
    sub_1006F2408((uint64_t)v36, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_1006F2408((uint64_t)v50, type metadata accessor for CRLBoardLibraryViewModel.Item);
    uint64_t v55 = v106;
    uint64_t v57 = v119;
    uint64_t v56 = (uint64_t)v121;
    if (v84) {
      return 1;
    }
LABEL_8:
    unint64_t v54 = (v54 + 1) & v122;
    if (((*(void *)(v124 + ((v54 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v54) & 1) == 0) {
      return 0;
    }
  }
  uint64_t v62 = v117;
  sub_1006F27F4((uint64_t)v36, v117, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    int v58 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
    uint64_t v59 = v62;
LABEL_5:
    sub_1006F2408(v59, v58);
LABEL_6:
    sub_100522F00((uint64_t)v36, (uint64_t *)&unk_10167BE60);
LABEL_7:
    sub_1006F2408((uint64_t)v50, type metadata accessor for CRLBoardLibraryViewModel.Item);
    goto LABEL_8;
  }
  uint64_t v63 = v115;
  sub_1006F285C(v62, v115, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v64 = v116;
  sub_1006F285C((uint64_t)v60, v116, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v65 = v118;
  uint64_t v66 = v118 + *(int *)(v110 + 48);
  sub_1006F27F4(v63, v118, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  sub_1006F27F4(v64, v66, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v67 = sub_1005057FC(&qword_101670F30);
  uint64_t v68 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 48);
  int v69 = v68(v65, 5, v67);
  uint64_t v70 = (uint64_t)v107;
  switch(v69)
  {
    case 1:
      BOOL v85 = v68(v66, 5, v67) == 1;
      goto LABEL_32;
    case 2:
      BOOL v85 = v68(v66, 5, v67) == 2;
      goto LABEL_32;
    case 3:
      BOOL v85 = v68(v66, 5, v67) == 3;
      goto LABEL_32;
    case 4:
      BOOL v85 = v68(v66, 5, v67) == 4;
      goto LABEL_32;
    case 5:
      BOOL v85 = v68(v66, 5, v67) == 5;
LABEL_32:
      uint64_t v57 = v119;
      if (!v85) {
        goto LABEL_33;
      }
      goto LABEL_45;
    default:
      sub_1006F27F4(v118, (uint64_t)v107, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      uint64_t v99 = *(int *)(v67 + 48);
      uint64_t v71 = *(void *)(v70 + v99 + 8);
      uint64_t v98 = *(void *)(v70 + v99);
      uint64_t v101 = v71;
      if (v68(v66, 5, v67))
      {
        swift_bridgeObjectRelease();
        (*v102)(v70, v104);
        uint64_t v57 = v119;
LABEL_33:
        sub_100522F00(v118, &qword_10167BE58);
        goto LABEL_34;
      }
      uint64_t v86 = *(void *)(v66 + v99 + 8);
      uint64_t v97 = *(void *)(v66 + v99);
      uint64_t v99 = v86;
      uint64_t v87 = v103;
      uint64_t v88 = v104;
      (*v100)(v103, v66, v104);
      char v89 = static UUID.== infix(_:_:)();
      uint64_t v90 = *v102;
      (*v102)(v70, v88);
      if ((v89 & 1) == 0)
      {
        v90((uint64_t)v87, v88);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1006F2408(v118, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        uint64_t v57 = v119;
LABEL_34:
        sub_1006F2408(v116, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        sub_1006F2408(v115, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        sub_1006F2408((uint64_t)v36, type metadata accessor for CRLBoardLibraryViewModel.Item);
        a1 = v113;
        uint64_t v56 = (uint64_t)v121;
        goto LABEL_7;
      }
      uint64_t v96 = v90;
      uint64_t v57 = v119;
      if (v98 != v97 || v101 != v99)
      {
        char v91 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v96((uint64_t)v103, v104);
        if (v91) {
          goto LABEL_45;
        }
        sub_1006F2408(v118, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        goto LABEL_34;
      }
      swift_bridgeObjectRelease_n();
      v96((uint64_t)v103, v104);
LABEL_45:
      char v93 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
      sub_1006F2408(v118, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      sub_1006F2408(v116, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      uint64_t v94 = v115;
LABEL_46:
      sub_1006F2408(v94, v93);
      sub_1006F2408((uint64_t)v36, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1006F2408((uint64_t)v50, type metadata accessor for CRLBoardLibraryViewModel.Item);
      return 1;
  }
}

BOOL sub_1006E7150(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s17CategoryViewModelVMa();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8, v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (Hasher.init(_seed:)(),
        sub_100FC08A4(),
        Swift::Int v9 = Hasher._finalize()(),
        uint64_t v10 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v11 = v9 & ~v10,
        ((*(void *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0))
  {
    uint64_t v12 = ~v10;
    uint64_t v13 = *(void *)(v5 + 72);
    do
    {
      sub_1006F27F4(*(void *)(a2 + 48) + v13 * v11, (uint64_t)v8, (uint64_t (*)(void))_s17CategoryViewModelVMa);
      BOOL v14 = sub_100FC0B00((uint64_t)v8, a1);
      sub_1006F2408((uint64_t)v8, (uint64_t (*)(void))_s17CategoryViewModelVMa);
      if (v14) {
        break;
      }
      unint64_t v11 = (v11 + 1) & v12;
    }
    while (((*(void *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  else
  {
    return 0;
  }
  return v14;
}

uint64_t sub_1006E72D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  unint64_t v11 = (char *)v74 - v10;
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)v74 - v14;
  __chkstk_darwin(v16, v17);
  uint64_t v78 = (uint64_t)v74 - v18;
  __chkstk_darwin(v19, v20);
  uint64_t v77 = (char *)v74 - v21;
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)v74 - v24;
  uint64_t v88 = sub_1005057FC(&qword_101691F00);
  __chkstk_darwin(v88, v26);
  unint64_t v28 = (char *)v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29, v31);
  __chkstk_darwin(v32, v33);
  __chkstk_darwin(v34, v35);
  uint64_t v39 = (char *)v74 - v38;
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v82 = v37;
  uint64_t v83 = v36;
  uint64_t v80 = v25;
  uint64_t v75 = v11;
  char v76 = v7;
  Hasher.init(_seed:)();
  uint64_t v40 = a1;
  sub_100AF7288();
  Swift::Int v41 = Hasher._finalize()();
  uint64_t v42 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v43 = v41 & ~v42;
  uint64_t v44 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43) & 1) == 0) {
    return 0;
  }
  uint64_t v84 = ~v42;
  uint64_t v86 = *(void *)(v30 + 72);
  uint64_t v87 = v40;
  uint64_t v79 = v15;
  uint64_t v81 = a2 + 56;
  v74[1] = v29;
  uint64_t v85 = a2;
  uint64_t v45 = (uint64_t)v77;
  while (1)
  {
    sub_1006F27F4(*(void *)(a2 + 48) + v86 * v43, (uint64_t)v39, type metadata accessor for CRLSpotlightManager.ChangeType);
    uint64_t v46 = (uint64_t)&v28[*(int *)(v88 + 48)];
    sub_1006F27F4((uint64_t)v39, (uint64_t)v28, type metadata accessor for CRLSpotlightManager.ChangeType);
    sub_1006F27F4(v87, v46, type metadata accessor for CRLSpotlightManager.ChangeType);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    uint64_t v47 = v82;
    sub_1006F27F4((uint64_t)v28, v82, type metadata accessor for CRLSpotlightManager.ChangeType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1006F285C(v46, (uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
      uint64_t v48 = v82;
      char v49 = static UUID.== infix(_:_:)();
      uint64_t v50 = (uint64_t)v75;
      sub_1006F27F4(v48, (uint64_t)v75, type metadata accessor for CRLBoardIdentifier);
      uint64_t v51 = (uint64_t)v15;
      uint64_t v52 = (uint64_t)v15;
      uint64_t v53 = (uint64_t)v76;
      sub_1006F27F4(v51, (uint64_t)v76, type metadata accessor for CRLBoardIdentifier);
      if (v49)
      {
        uint64_t v54 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        uint64_t v55 = *(void *)(v50 + v54);
        uint64_t v56 = *(void *)(v50 + v54 + 8);
        uint64_t v57 = (void *)(v53 + v54);
        if (v55 == *v57 && v56 == v57[1])
        {
          uint64_t v69 = v50;
          uint64_t v72 = (uint64_t)v79;
          uint64_t v73 = v82;
          goto LABEL_30;
        }
        char v59 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_1006F2408(v53, type metadata accessor for CRLBoardIdentifier);
        sub_1006F2408(v50, type metadata accessor for CRLBoardIdentifier);
        uint64_t v15 = v79;
        sub_1006F2408((uint64_t)v79, type metadata accessor for CRLBoardIdentifier);
        sub_1006F2408(v82, type metadata accessor for CRLBoardIdentifier);
        a2 = v85;
        if (v59) {
          goto LABEL_31;
        }
      }
      else
      {
        sub_1006F2408(v53, type metadata accessor for CRLBoardIdentifier);
        sub_1006F2408(v50, type metadata accessor for CRLBoardIdentifier);
        sub_1006F2408(v52, type metadata accessor for CRLBoardIdentifier);
        sub_1006F2408(v48, type metadata accessor for CRLBoardIdentifier);
        a2 = v85;
        uint64_t v15 = (char *)v52;
      }
      goto LABEL_25;
    }
LABEL_4:
    sub_1006F2408(v47, type metadata accessor for CRLBoardIdentifier);
    sub_100522F00((uint64_t)v28, &qword_101691F00);
    a2 = v85;
LABEL_5:
    sub_1006F2408((uint64_t)v39, type metadata accessor for CRLSpotlightManager.ChangeType);
    unint64_t v43 = (v43 + 1) & v84;
    if (((*(void *)(v44 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43) & 1) == 0) {
      return 0;
    }
  }
  uint64_t v47 = v83;
  sub_1006F27F4((uint64_t)v28, v83, type metadata accessor for CRLSpotlightManager.ChangeType);
  if (swift_getEnumCaseMultiPayload() == 1) {
    goto LABEL_4;
  }
  uint64_t v60 = (uint64_t)v80;
  sub_1006F285C(v46, (uint64_t)v80, type metadata accessor for CRLBoardIdentifier);
  uint64_t v61 = v83;
  char v62 = static UUID.== infix(_:_:)();
  sub_1006F27F4(v61, v45, type metadata accessor for CRLBoardIdentifier);
  uint64_t v63 = v78;
  sub_1006F27F4(v60, v78, type metadata accessor for CRLBoardIdentifier);
  if ((v62 & 1) == 0)
  {
    sub_1006F2408(v63, type metadata accessor for CRLBoardIdentifier);
    sub_1006F2408(v45, type metadata accessor for CRLBoardIdentifier);
    sub_1006F2408(v60, type metadata accessor for CRLBoardIdentifier);
    sub_1006F2408(v61, type metadata accessor for CRLBoardIdentifier);
    a2 = v85;
    uint64_t v15 = v79;
LABEL_25:
    sub_1006F2408((uint64_t)v28, type metadata accessor for CRLSpotlightManager.ChangeType);
    uint64_t v44 = v81;
    goto LABEL_5;
  }
  uint64_t v64 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v65 = *(void *)(v45 + v64);
  uint64_t v66 = *(void *)(v45 + v64 + 8);
  uint64_t v67 = (void *)(v63 + v64);
  BOOL v68 = v65 == *v67 && v66 == v67[1];
  uint64_t v53 = v63;
  uint64_t v69 = v45;
  if (!v68)
  {
    char v70 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_1006F2408(v53, type metadata accessor for CRLBoardIdentifier);
    sub_1006F2408(v45, type metadata accessor for CRLBoardIdentifier);
    sub_1006F2408((uint64_t)v80, type metadata accessor for CRLBoardIdentifier);
    sub_1006F2408(v83, type metadata accessor for CRLBoardIdentifier);
    a2 = v85;
    uint64_t v15 = v79;
    if (v70) {
      goto LABEL_31;
    }
    goto LABEL_25;
  }
  uint64_t v72 = (uint64_t)v80;
  uint64_t v73 = v83;
LABEL_30:
  sub_1006F2408(v53, type metadata accessor for CRLBoardIdentifier);
  sub_1006F2408(v69, type metadata accessor for CRLBoardIdentifier);
  sub_1006F2408(v72, type metadata accessor for CRLBoardIdentifier);
  sub_1006F2408(v73, type metadata accessor for CRLBoardIdentifier);
LABEL_31:
  sub_1006F2408((uint64_t)v28, type metadata accessor for CRLSpotlightManager.ChangeType);
  sub_1006F2408((uint64_t)v39, type metadata accessor for CRLSpotlightManager.ChangeType);
  return 1;
}

BOOL sub_1006E7A70(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = static Hasher._hash(seed:_:)();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1006E7B3C(void *a1, uint64_t a2)
{
  return sub_1006E51F4(a1, a2, (void (*)(void))type metadata accessor for CRLSceneInfo);
}

id CRLWPLayout._columns.getter()
{
  int64_t v1 = (void **)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void CRLWPLayout._columns.setter(void *a1)
{
  Swift::Int v3 = (void **)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *Swift::Int v3 = a1;
}

uint64_t (*CRLWPLayout._columns.modify())()
{
  return j__swift_endAccess;
}

id CRLWPLayout.parentAutosizes.getter()
{
  id v1 = [v0 parent];
  if (v1)
  {
    uint64_t v2 = v1;
    Swift::Int v3 = (void *)swift_dynamicCastObjCProtocolConditional();
    if (v3)
    {
      id v4 = [v3 autosizeFlagsFor:v0];

      return (id)(v4 != 0);
    }
  }
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for CRLWPLayout();
  return [super parentAutosizes];
}

uint64_t type metadata accessor for CRLWPLayout()
{
  return self;
}

Swift::Void __swiftcall CRLWPLayout.validate()()
{
  id v1 = [v0 parent];
  if (!v1) {
    goto LABEL_14;
  }
  uint64_t v2 = v1;
  uint64_t v13 = &OBJC_PROTOCOL____TtP8Freeform17CRLWPLayoutParent_;
  uint64_t v3 = swift_dynamicCastObjCProtocolConditional();
  if (!v3)
  {

LABEL_14:
    v14.receiver = v0;
    v14.super_class = (Class)type metadata accessor for CRLWPLayout();
    [super validate];
    return;
  }
  id v4 = (void *)v3;
  uint64_t v5 = OBJC_IVAR____TtC8Freeform11CRLWPLayout_textLayoutIsValid;
  char v6 = *((unsigned char *)v0 + OBJC_IVAR____TtC8Freeform11CRLWPLayout_textLayoutIsValid);
  if ([v0 parentAutosizes])
  {
    if ((*((unsigned char *)v0 + v5) & 1) == 0)
    {
      if ([v0 invalidGeometry])
      {
        [v4 autosizedFrameFor:v0 textSize:10.0, 10.0];
        if (v9 > 0.0)
        {
          id v11 = [objc_allocWithZone((Class)CRLCanvasLayoutGeometry) initWithFrame:v7, v8, v9, v10];
          [v0 setGeometry:v11];
        }
      }
    }
    sub_1006E8374();
    v12.receiver = v0;
    v12.super_class = (Class)type metadata accessor for CRLWPLayout();
    [super validate];
    if ([v4 autosizeFlagsFor:v0] & 0x20) == 0 || (v6) {
      goto LABEL_17;
    }
    if ([v0 parentAutosizes]) {
      [v0 invalidateSize];
    }
    *((unsigned char *)v0 + v5) = 0;
    [v0 invalidate];
    [v0 setNeedsDisplay];
  }
  else
  {
    v12.receiver = v0;
    v12.super_class = (Class)type metadata accessor for CRLWPLayout();
    [super validate];
  }
  sub_1006E8374();
LABEL_17:
}

Swift::Void __swiftcall CRLWPLayout.invalidateTextLayout()()
{
  if ([v0 parentAutosizes]) {
    [v0 invalidateSize];
  }
  *((unsigned char *)v0 + OBJC_IVAR____TtC8Freeform11CRLWPLayout_textLayoutIsValid) = 0;
  [v0 invalidate];

  [v0 setNeedsDisplay];
}

Swift::Void __swiftcall CRLWPLayout.invalidateSize()()
{
  v0[OBJC_IVAR____TtC8Freeform11CRLWPLayout_textLayoutIsValid] = 0;
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for CRLWPLayout();
  [super invalidateSize];
}

void sub_1006E81E8()
{
  id v1 = [v0 layoutController];
  if (!v1) {
    return;
  }
  uint64_t v2 = v1;
  id v3 = [v1 canvas];
  if (!v3)
  {
LABEL_10:

    return;
  }
  id v4 = v3;
  if (([v3 isCanvasInteractive] & 1) == 0)
  {

    return;
  }
  id v5 = [v4 canvasController];
  if (!v5
    || (char v6 = v5, v7 = [v5 editorController], v6, !v7))
  {

    goto LABEL_10;
  }
  if (type metadata accessor for CRLWPEditor()) {
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  }
  else {
    uint64_t ObjCClassFromMetadata = 0;
  }
  id v9 = [v7 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
  uint64_t v10 = swift_dynamicCastClass();
  if (v10)
  {
    uint64_t v11 = v10;

    if (*(void *)(*(void *)(v11 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                   + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
    {

      swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {

    swift_unknownObjectRelease();
  }
}

void sub_1006E8374()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform11CRLWPLayout_textLayoutIsValid;
  if ((v0[OBJC_IVAR____TtC8Freeform11CRLWPLayout_textLayoutIsValid] & 1) == 0)
  {
    uint64_t v2 = v0;
    unsigned int v3 = [v0 isInstructional];
    id v4 = *(id *)&v0[OBJC_IVAR____TtC8Freeform11CRLWPLayout_wpStorage];
    if (!v3)
    {
      id v9 = (void *)sub_1008FC744();

      goto LABEL_10;
    }
    id v5 = [v2 parent];
    if (v5)
    {
      char v6 = v5;
      uint64_t v26 = &OBJC_PROTOCOL____TtP8Freeform17CRLWPLayoutParent_;
      id v7 = (void *)swift_dynamicCastObjCProtocolConditional();
      if (v7)
      {
        id v8 = [v7 instructionalTextCharacterFill:&OBJC_PROTOCOL____TtP8Freeform17CRLWPLayoutParent_];

LABEL_9:
        sub_1008F264C(v8);
        id v9 = v10;

LABEL_10:
        id v11 = [objc_allocWithZone((Class)CRLWPLayoutManager) initWithStorage:v9 owner:v2];
        id v12 = [v2 storage];
        if (v12)
        {
          uint64_t v13 = (uint64_t)[v12 length];
          swift_unknownObjectRelease();
          if (v13 < 1)
          {
            objc_super v14 = (id *)&v2[OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns];
            swift_beginAccess();
            goto LABEL_26;
          }
          objc_super v14 = (id *)&v2[OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns];
          swift_beginAccess();
          if ([*v14 firstObject])
          {
            _bridgeAnyObjectToAny(_:)();
            swift_unknownObjectRelease();
          }
          else
          {
            memset(v28, 0, sizeof(v28));
          }
          sub_10052E248((uint64_t)v28, (uint64_t)v29);
          if (v30)
          {
            sub_10050BF48(0, (unint64_t *)&unk_10167BC10);
            if (swift_dynamicCast())
            {
              id v15 = [v27 storage];
              if (v15)
              {
                uint64_t v16 = v15;
                type metadata accessor for CRLWPStorage();
                id v17 = v9;
                id v18 = v16;
                LOBYTE(v16) = static NSObject.== infix(_:_:)();

                if (v16)
                {
                  if (!v11)
                  {

                    id v24 = 0;
                    goto LABEL_31;
                  }
                  id v19 = v11;
                  id v20 = [v19 initialLayoutStateForLayout:v2];

                  goto LABEL_30;
                }
              }
            }
          }
          else
          {
            sub_100522F00((uint64_t)v29, &qword_101672BF0);
          }
          id v21 = [v2 columns:v26];
          if (v21)
          {
            uint64_t v22 = v21;
            id v23 = [v21 count];

            if (!v23)
            {
              if (!v11)
              {
                id v24 = 0;
                goto LABEL_31;
              }
              id v20 = [v11 initialLayoutStateForLayout:v2];
LABEL_30:
              id v24 = [v11 layOutIntoTarget:v2 withLayoutState:v20 outSync:0 v26];
LABEL_31:
              [v11 destroyLayoutState:v24, v26];
              id v25 = v11;
              [v25 resetDirtyRange];

              v2[v1] = 1;
              return;
            }
LABEL_26:
            [*v14 removeAllObjects:v26];
            id v20 = 0;
            id v24 = 0;
            if (!v11) {
              goto LABEL_31;
            }
            goto LABEL_30;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        return;
      }
    }
    id v8 = 0;
    goto LABEL_9;
  }
}

void __swiftcall CRLWPLayout.computeLayoutGeometry()(CRLCanvasLayoutGeometry_optional *__return_ptr retstr)
{
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)&double v6 = __chkstk_darwin(v3, v5).n128_u64[0];
  id v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [v1 parent:v6];
  if (!v9) {
    goto LABEL_11;
  }
  uint64_t v10 = v9;
  uint64_t v53 = &OBJC_PROTOCOL____TtP8Freeform17CRLWPLayoutParent_;
  id v11 = (void *)swift_dynamicCastObjCProtocolConditional();
  if (!v11)
  {

LABEL_11:
    id v26 = [v1 info];
    if (v26)
    {
      id v27 = [v26 geometry];
      swift_unknownObjectRelease();
      [v27 size];
      double v29 = v28;
      double v31 = v30;

      [objc_allocWithZone((Class)CRLCanvasLayoutGeometry) initWithFrame:0.0, 0.0, v29, v31];
    }
    else
    {
      __break(1u);
    }
    return;
  }
  id v12 = v11;
  if ([v11 autosizeFlagsFor:v1])
  {
    double x = CGRectNull.origin.x;
    double y = CGRectNull.origin.y;
    double width = CGRectNull.size.width;
    double height = CGRectNull.size.height;
    id v17 = (id *)&v1[OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns];
    swift_beginAccess();
    id v18 = *v17;
    NSArray.makeIterator()();

    NSFastEnumerationIterator.next()();
    while (v52)
    {
      sub_100575CE8(&v51, &v50);
      sub_10050BF48(0, (unint64_t *)&unk_10167BC10);
      if (swift_dynamicCast())
      {
        id v19 = v49;
        [v49 frameBounds];
        v56.origin.double x = v20;
        v56.origin.double y = v21;
        v56.size.double width = v22;
        v56.size.double height = v23;
        v54.origin.double x = x;
        v54.origin.double y = y;
        v54.size.double width = width;
        v54.size.double height = height;
        CGRect v55 = CGRectUnion(v54, v56);
        double x = v55.origin.x;
        double y = v55.origin.y;
        double width = v55.size.width;
        double height = v55.size.height;
      }
      NSFastEnumerationIterator.next()();
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
    id v24 = [v2 columnMetricsForCharIndex:NSNotFound.getter() outRange:0];
    if (v24) {
      [v24 adjustedInsetsForTarget:v2];
    }
    else {
      double top = UIEdgeInsetsZero.top;
    }
    double v40 = sub_1006EE198(top);
    [v12 autosizedFrameFor:v2 textSize:sub_1006EE1AC(x, y, width, height, v40, v41, v42, v43)];
    double v33 = v44;
    double v35 = v45;
    double v37 = v46;
    double v39 = v47;
    swift_unknownObjectRelease();
  }
  else
  {
    [v12 nonAutosizedFrameFor:v1];
    double v33 = v32;
    double v35 = v34;
    double v37 = v36;
    double v39 = v38;
  }
  [objc_allocWithZone((Class)CRLCanvasLayoutGeometry) initWithFrame:v33, v35, v37, v39];
}

uint64_t sub_1006E8B68()
{
  uint64_t v1 = *(void **)(*(void *)&v0[OBJC_IVAR____TtC8Freeform11CRLWPLayout_wpStorage]
                + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = qword_10166EE60;
  uint64_t v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  id v4 = (id)qword_10171A478;
  sub_1006EAD90(v0, &v14);

  uint64_t v5 = v14;
  if (!v14)
  {

    return 0;
  }
  unint64_t v6 = *(void *)&v14[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  uint64_t v7 = (char *)[v3 start];
  uint64_t v8 = *(void *)&v7[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  uint64_t result = NSNotFound.getter();
  if (v8 == result)
  {
    unint64_t v10 = 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v11 = 0;
  }
  else
  {
    unint64_t v10 = *(void *)&v3[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    uint64_t v12 = *(void *)&v3[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    uint64_t v11 = v12 - v10;
    if (__OFSUB__(v12, v10))
    {
      __break(1u);
      return result;
    }
  }

  return v10 <= v6 && v11 + v10 >= v6;
}

void sub_1006E8D20(char *a1@<X0>, char *a2@<X1>, double *a3@<X8>)
{
  uint64_t v56 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v55 = *(void *)(v56 - 8);
  *(void *)&double v7 = __chkstk_darwin(v56, v6).n128_u64[0];
  id v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((objc_msgSend(a1, "layoutIsValid", v7) & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"firstRect(for:)", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPLayout.swift", 77, 2, 310, (uint64_t)"Layout must be valid.", 21, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"firstRect(for:)", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPLayout.swift", 77, 2, 310);
  }
  id v10 = *(id *)&a1[OBJC_IVAR____TtC8Freeform11CRLWPLayout_wpStorage];
  id v57 = (id)sub_1008FC744();

  uint64_t v11 = (char *)[a2 start];
  uint64_t v12 = *(void *)&v11[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  if (v12 == NSNotFound.getter())
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v14 = *(void *)&a2[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    uint64_t v16 = *(void *)&a2[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    uint64_t v15 = v16 - v14;
    if (__OFSUB__(v16, v14))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    uint64_t v13 = 0;
  }
  CGRect v54 = a3;
  uint64_t v17 = *(void *)&a2[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity];
  id v18 = objc_allocWithZone((Class)CRLWPSelection);
  LOBYTE(v51) = 1;
  id v19 = [v18 initWithType:0 range:v14 styleInsertionBehavior:v15 caretAffinity:0 smartFieldRange:v17 leadingEdge:0x7FFFFFFFFFFFFFFFLL storage:v51];
  id v20 = [a1 columns];
  if (!v20)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    return;
  }
  CGFloat v21 = v20;
  CGFloat y = CGRectNull.origin.y;
  CGFloat width = CGRectNull.size.width;
  CGFloat height = CGRectNull.size.height;
  NSArray.makeIterator()();

  uint64_t v52 = &a2[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  id v25 = &selRef_i_join;
  double x = CGRectNull.origin.x;
  double v27 = y;
  double v28 = width;
  double v29 = height;
  while (1)
  {
    NSFastEnumerationIterator.next()();
    if (!v62) {
      break;
    }
    sub_100575CE8(&v61, &v60);
    sub_10050BF48(0, (unint64_t *)&unk_10167BC10);
    if (swift_dynamicCast())
    {
      double v30 = v59;
      double v31 = (objc_class *)type metadata accessor for CRLWPLaidOutColumnProxy();
      double v32 = (char *)objc_allocWithZone(v31);
      *(void *)&v32[OBJC_IVAR____TtC8Freeform23CRLWPLaidOutColumnProxy_column] = v30;
      v58.receiver = v32;
      v58.super_class = v31;
      double v33 = v25[281];
      id v34 = v30;
      double v35 = (char *)[super v33];
      uint64_t v53 = a2;
      double v36 = (char *)[a2 start];
      uint64_t v37 = *(void *)&v36[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

      uint64_t v38 = v13;
      if (v37 != NSNotFound.getter())
      {
        uint64_t v39 = *((void *)v52 + 1);
        uint64_t v13 = v39 - *(void *)v52;
        if (__OFSUB__(v39, *(void *)v52)) {
          goto LABEL_33;
        }
      }
      if (v13 < 1)
      {
        if (!v19) {
          goto LABEL_36;
        }
        [*(id *)&v35[OBJC_IVAR____TtC8Freeform23CRLWPLaidOutColumnProxy_column] caretRectForSelection:v19];
        double x = v40;
        double v27 = v41;
        double v28 = v42;
        double v29 = v43;
      }
      else
      {
        if (!v19) {
          goto LABEL_35;
        }
        [*(id *)&v35[OBJC_IVAR____TtC8Freeform23CRLWPLaidOutColumnProxy_column] firstRectForSelection:v19 includeSpaceAfter:0 includeSpaceBefore:0 includeLeading:0];
        double x = v63.origin.x;
        double v27 = v63.origin.y;
        double v28 = v63.size.width;
        double v29 = v63.size.height;
        if (CGRectIsEmpty(v63))
        {
          double x = CGRectNull.origin.x;
          double v27 = y;
          double v28 = width;
          double v29 = height;
        }
      }
      v64.origin.double x = x;
      v64.origin.CGFloat y = v27;
      v64.size.CGFloat width = v28;
      v64.size.CGFloat height = v29;
      BOOL IsNull = CGRectIsNull(v64);

      id v25 = &selRef_i_join;
      uint64_t v13 = v38;
      a2 = v53;
      if (!IsNull) {
        break;
      }
    }
  }
  (*(void (**)(char *, uint64_t))(v55 + 8))(v9, v56);
  v65.origin.double x = x;
  v65.origin.CGFloat y = v27;
  v65.size.CGFloat width = v28;
  v65.size.CGFloat height = v29;
  BOOL v45 = CGRectIsNull(v65);

  double v46 = 0.0;
  if (v45) {
    double v47 = 0.0;
  }
  else {
    double v47 = v28;
  }
  if (v45) {
    double v48 = 0.0;
  }
  else {
    double v48 = x;
  }
  if (v45) {
    double v49 = 0.0;
  }
  else {
    double v49 = v27;
  }
  long long v50 = v54;
  *CGRect v54 = v48;
  v50[1] = v49;
  if (!v45) {
    double v46 = v29;
  }
  v50[2] = v47;
  v50[3] = v46;
}

double sub_1006E9264(void *a1)
{
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_10171A478;
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = type metadata accessor for CRLTextPosition();
  *(void *)(inited + 32) = a1;
  id v4 = v2;
  uint64_t v5 = a1;
  NSNotFound.getter();
  uint64_t v6 = *(void *)&v5[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  uint64_t v7 = *(void *)&v5[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  uint64_t v8 = (objc_class *)type metadata accessor for CRLTextRange();
  id v9 = (char *)objc_allocWithZone(v8);
  uint64_t v10 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(void *)&v9[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(void *)&v9[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  uint64_t v11 = &v9[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(void *)uint64_t v11 = v6;
  *((void *)v11 + 1) = v6;
  *(void *)&v9[v10] = v7;
  v22.receiver = v9;
  v22.super_class = v8;
  uint64_t v12 = (char *)[super init];
  *(void *)&v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = v7;
  double v13 = sub_1006E9420(v12);
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;

  double v20 = sub_100065738(v13, v15, v17, v19);
  swift_setDeallocating();
  swift_arrayDestroy();

  return v20;
}

double sub_1006E9420(void *a1)
{
  uint64_t v2 = v1;
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  id v4 = (void *)qword_10171A478;
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10117E810;
  uint64_t v6 = type metadata accessor for CRLTextRange();
  *(void *)(v5 + 56) = v6;
  *(void *)(v5 + 32) = a1;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = sub_1005057FC((uint64_t *)&unk_10167C8C0);
  *(void *)(inited + 32) = v5;
  uint64_t v17 = v6;
  double v16 = a1;
  uint64_t v8 = a1;
  id v9 = v4;
  swift_bridgeObjectRetain();
  sub_1006E8D20(v2, v8, &v15.origin.x);
  swift_arrayDestroy();
  CGRect v18 = CGRectIntegral(v15);
  double x = v18.origin.x;
  CGFloat y = v18.origin.y;
  CGFloat width = v18.size.width;
  CGFloat height = v18.size.height;
  if (!CGRectIsNull(v18))
  {
    v19.origin.double x = x;
    v19.origin.CGFloat y = y;
    v19.size.CGFloat width = width;
    v19.size.CGFloat height = height;
    v20.origin.double x = CGRectGetMidX(v19);
    v20.size.CGFloat width = 1.0;
    v20.origin.CGFloat y = y;
    v20.size.CGFloat height = height;
    *(void *)&double x = (unint64_t)CGRectIntegral(v20);
  }
  swift_release();

  swift_bridgeObjectRelease();
  return x;
}

double sub_1006E95EC(void *a1)
{
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_10171A478;
  uint64_t v16 = type metadata accessor for CRLTextPosition();
  CGRect v15 = a1;
  id v3 = v2;
  id v4 = a1;
  NSNotFound.getter();
  uint64_t v5 = *(void *)&v4[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  uint64_t v6 = *(void *)&v4[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  uint64_t v7 = (objc_class *)type metadata accessor for CRLTextRange();
  uint64_t v8 = (char *)objc_allocWithZone(v7);
  uint64_t v9 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(void *)&v8[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(void *)&v8[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  uint64_t v10 = &v8[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(void *)uint64_t v10 = v5;
  *((void *)v10 + 1) = v5;
  *(void *)&v8[v9] = v6;
  v14.receiver = v8;
  v14.super_class = v7;
  uint64_t v11 = (char *)[super init];
  *(void *)&v11[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = v6;
  double v12 = sub_1006E9420(v11);

  swift_arrayDestroy();
  return v12;
}

void sub_1006E976C(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t v125 = a2;
  uint64_t v123 = a3;
  uint64_t v136 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  unint64_t v4 = *(void *)(v136 - 8);
  __chkstk_darwin(v136, v5);
  uint64_t v135 = (char *)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v134, v7);
  uint64_t v133 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v132 = (uint64_t)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = type metadata accessor for NSFastEnumerationIterator();
  int64_t v12 = *(void *)(v124 - 8);
  *(void *)&double v14 = __chkstk_darwin(v124, v13).n128_u64[0];
  uint64_t v141 = (char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = [a1 layoutController:v14];
  if (!v16) {
    goto LABEL_107;
  }
  id v17 = v16;
  id v18 = [v16 canvas];
  if (!v18)
  {
LABEL_106:

LABEL_107:
    *uint64_t v123 = (unint64_t)_swiftEmptyArrayStorage;
    return;
  }
  id v115 = v17;
  id v114 = v18;
  if (![v18 isCanvasInteractive])
  {

    id v17 = v114;
    goto LABEL_106;
  }
  unint64_t v154 = (unint64_t)_swiftEmptyArrayStorage;
  if (v125 >> 62) {
    goto LABEL_117;
  }
  uint64_t v19 = *(void *)((v125 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v20 = v19;
  if (!v19)
  {
LABEL_118:
    swift_bridgeObjectRelease();
    unint64_t v105 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_119;
  }
LABEL_6:
  uint64_t v130 = OBJC_IVAR____TtC8Freeform11CRLWPLayout_wpStorage;
  unint64_t v122 = v125 & 0xC000000000000001;
  uint64_t v117 = v125 & 0xFFFFFFFFFFFFFF8;
  unint64_t v116 = v125 + 32;
  uint64_t v129 = (void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v128 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v121 = 0x7FFFFFFFFFFFFFFFLL;
  int64_t v120 = 0;
  uint64_t v118 = (void (**)(char *, uint64_t))(v12 + 8);
  unint64_t v4 = 0;
  id v140 = (char *)&type metadata for Any + 8;
  uint64_t v146 = a1;
  uint64_t v119 = v20;
  do
  {
    if (v122)
    {
      CGFloat v21 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v4 >= *(void *)(v117 + 16)) {
        goto LABEL_116;
      }
      CGFloat v21 = (char *)*(id *)(v116 + 8 * v4);
    }
    uint64_t v138 = v21;
    BOOL v22 = __OFADD__(v4++, 1);
    if (v22) {
      goto LABEL_114;
    }
    id v126 = (id)v4;
    CGFloat v23 = (char *)[v138 start];
    uint64_t v24 = *(void *)&v23[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

    uint64_t v25 = NSNotFound.getter();
    unint64_t v4 = v121;
    int64_t v12 = v120;
    if (v24 != v25)
    {
      unint64_t v4 = *(void *)&v138[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      uint64_t v26 = *(void *)&v138[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
      int64_t v12 = v26 - v4;
      if (__OFSUB__(v26, v4))
      {
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        swift_bridgeObjectRetain();
        uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
        if (!v20) {
          goto LABEL_118;
        }
        goto LABEL_6;
      }
    }
    id v137 = [objc_allocWithZone((Class)CRLWPSelection) initWithRange:v4, v12];
    if (!v137)
    {
      uint64_t v100 = &v159;
      goto LABEL_95;
    }
    id v27 = [(id)a1 columns];
    if (!v27) {
      goto LABEL_145;
    }
    double v28 = v27;
    double v29 = v141;
    NSArray.makeIterator()();

    uint64_t v30 = OBJC_IVAR____TtC8Freeform12CRLTextRange_range;
    int64_t v12 = (int64_t)v29;
    NSFastEnumerationIterator.next()();
    if (!v157)
    {
LABEL_93:
      (*v118)(v141, v124);

      uint64_t v100 = &v158;
LABEL_95:

      goto LABEL_96;
    }
    uint64_t v131 = (uint64_t *)&v138[v30];
    while (1)
    {
      sub_100575CE8(&v156, &v155);
      sub_10050BF48(0, (unint64_t *)&unk_10167BC10);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_20;
      }
      double v32 = v153;
      double v33 = (objc_class *)type metadata accessor for CRLWPLaidOutColumnProxy();
      id v34 = (char *)objc_allocWithZone(v33);
      *(void *)&v34[OBJC_IVAR____TtC8Freeform23CRLWPLaidOutColumnProxy_column] = v32;
      v152.receiver = v34;
      v152.super_class = v33;
      id v139 = v32;
      uint64_t v142 = (char *)[super init];
      id v35 = *(id *)(a1 + v130);
      double v36 = (char *)sub_1008FC744();

      uint64_t v37 = *(void *)&v36[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
      if (!v37) {
        goto LABEL_144;
      }
      uint64_t v39 = *v131;
      uint64_t v38 = v131[1];
      uint64_t v40 = (uint64_t)v133;
      (*(void (**)(void))(*(void *)v37 + 760))();
      uint64_t v41 = v132;
      sub_1006F27F4(v40 + *(int *)(v134 + 20), v132, type metadata accessor for CRLWPStorageCRDTData);
      unint64_t v4 = v36;
      sub_1006F2408(v40, type metadata accessor for CRLWPShapeItemCRDTData);
      double v42 = v135;
      uint64_t v43 = v136;
      (*v129)(v135, v41, v136);
      sub_1006F2408(v41, type metadata accessor for CRLWPStorageCRDTData);
      double v44 = (char *)CRAttributedString.count.getter();
      (*v128)(v42, v43);

      if ((uint64_t)v44 >= (v39 & ~(v39 >> 63))) {
        int64_t v12 = v39 & ~(v39 >> 63);
      }
      else {
        int64_t v12 = (int64_t)v44;
      }
      if ((uint64_t)v44 >= (v38 & ~(v38 >> 63))) {
        double v44 = (char *)(v38 & ~(v38 >> 63));
      }
      if ((uint64_t)v44 < v12) {
        goto LABEL_112;
      }
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v46 = sub_10103A300(KeyPath, (char *)v4, (char *)v12, v44);
      int64_t v12 = v47;
      swift_release();

      if (v12)
      {
        if (!*(void *)(v46 + 16)) {
          goto LABEL_113;
        }
        uint64_t v48 = *(void *)(v46 + 32);
        sub_1006F23FC(v46, 1);
        uint64_t v46 = v48;
      }
      unsigned int v49 = [v138 isEmpty];
      id v50 = v142;
      if (v49) {
        break;
      }
      *(void *)&long long v155 = 0;
      id v55 = [*(id *)&v142[OBJC_IVAR____TtC8Freeform23CRLWPLaidOutColumnProxy_column] rectsForSelection:v137 ranges:&v155];
      if (v55)
      {
        uint64_t v56 = v55;
        sub_10050BF48(0, (unint64_t *)&qword_10167AF10);
        unint64_t v57 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        objc_super v58 = (void *)v155;
      }
      else
      {
        objc_super v58 = (void *)v155;
        unint64_t v57 = (unint64_t)_swiftEmptyArrayStorage;
      }
      id v127 = v58;
      if (!(v57 >> 62))
      {
        uint64_t v59 = *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v59) {
          goto LABEL_40;
        }
        goto LABEL_18;
      }
      swift_bridgeObjectRetain();
      uint64_t v59 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v59)
      {
LABEL_40:
        unint64_t v4 = 0;
        unint64_t v150 = v57 & 0xC000000000000001;
        uint64_t v144 = v57 & 0xFFFFFFFFFFFFFF8;
        unint64_t v143 = v57 + 32;
        unint64_t v149 = v46 + 1;
        uint64_t v145 = v46;
        unint64_t v148 = v57;
        uint64_t v147 = v59;
        while (1)
        {
          if (v150)
          {
            id v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (v4 >= *(void *)(v144 + 16)) {
              goto LABEL_109;
            }
            id v61 = *(id *)(v143 + 8 * v4);
          }
          uint64_t v62 = v61;
          BOOL v22 = __OFADD__(v4++, 1);
          if (v22)
          {
            __break(1u);
LABEL_109:
            __break(1u);
            goto LABEL_110;
          }
          [v61 CGRectValue];
          CGFloat v64 = v63;
          CGFloat v66 = v65;
          CGFloat v68 = v67;
          CGFloat v70 = v69;
          int64_t v12 = (int64_t)[(id)a1 geometry];
          [(id)v12 frame];

          v165.origin.CGFloat x = sub_100064070();
          v165.origin.CGFloat y = v71;
          v165.size.CGFloat width = v72;
          v165.size.CGFloat height = v73;
          v163.origin.CGFloat x = v64;
          v163.origin.CGFloat y = v66;
          v163.size.CGFloat width = v68;
          v163.size.CGFloat height = v70;
          CGRect v164 = CGRectIntersection(v163, v165);
          CGFloat x = v164.origin.x;
          CGFloat y = v164.origin.y;
          CGFloat width = v164.size.width;
          CGFloat height = v164.size.height;
          if (!CGRectIsEmpty(v164)) {
            break;
          }
          id v60 = v62;
LABEL_42:

          if (v4 == v59) {
            goto LABEL_18;
          }
        }
        uint64_t v78 = v46;
        if (v149 >= 3)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"asNSWritingDirection", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 39, (uint64_t)"Unknown direction.", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"asNSWritingDirection", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 39);
          uint64_t v78 = -1;
        }
        int64_t v12 = type metadata accessor for CRLTextSelectionRect();
        uint64_t v79 = (char *)objc_allocWithZone((Class)v12);
        uint64_t v80 = v79;
        v79[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__containsStart] = 0;
        v79[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__containsEnd] = 0;
        uint64_t v81 = (CGFloat *)&v79[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__rect];
        *uint64_t v81 = x;
        v81[1] = y;
        v81[2] = width;
        v81[3] = height;
        if (v78 == 1)
        {
          uint64_t v85 = v79;
          uint64_t v84 = 1;
        }
        else if (v78)
        {
          uint64_t v82 = v79;
          if (v78 != -1)
          {
            sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 24, (uint64_t)"Unknown direction.", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
            uint64_t v46 = v145;
            sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 24);
          }
          uint64_t v84 = -1;
        }
        else
        {
          uint64_t v83 = v79;
          uint64_t v84 = 0;
        }
        *(void *)&v80[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__writingDirection] = v84;

        v151.receiver = v80;
        v151.super_class = (Class)v12;
        [super init];
        unint64_t v86 = v154;
        if (!(v154 >> 62))
        {
          uint64_t v87 = *(void *)((v154 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          if (v87) {
            goto LABEL_61;
          }
LABEL_66:
          swift_bridgeObjectRelease_n();
          id v91 = v60;
          int64_t v12 = (int64_t)&v154;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          a1 = v146;
          if (*(void *)((v154 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v154 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
LABEL_69:

          uint64_t v59 = v147;
          goto LABEL_42;
        }
        swift_bridgeObjectRetain_n();
        uint64_t v87 = _CocoaArrayWrapper.endIndex.getter();
        if (!v87) {
          goto LABEL_66;
        }
LABEL_61:
        if ((v86 & 0xC000000000000001) != 0) {
          id v88 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v88 = *(id *)(v86 + 32);
        }
        char v89 = v88;
        char v90 = static NSObject.== infix(_:_:)();

        if ((v90 & 1) == 0)
        {
          if (v87 == 1) {
            goto LABEL_66;
          }
          if ((v86 & 0xC000000000000001) != 0)
          {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
            char v92 = static NSObject.== infix(_:_:)();
            swift_unknownObjectRelease();
            if ((v92 & 1) == 0)
            {
              if (v87 != 2)
              {
                a1 = 2;
                while (1)
                {
                  specialized _ArrayBuffer._getElementSlowPath(_:)();
                  uint64_t v93 = a1 + 1;
                  if (__OFADD__(a1, 1)) {
                    break;
                  }
                  char v94 = static NSObject.== infix(_:_:)();
                  swift_unknownObjectRelease();
                  if (v94) {
                    goto LABEL_87;
                  }
                  ++a1;
                  BOOL v95 = v93 == v87;
                  uint64_t v46 = v145;
                  if (v95) {
                    goto LABEL_66;
                  }
                }
LABEL_110:
                __break(1u);
LABEL_111:
                __break(1u);
LABEL_112:
                __break(1u);
LABEL_113:
                __break(1u);
LABEL_114:
                __break(1u);
                goto LABEL_115;
              }
              goto LABEL_66;
            }
          }
          else
          {
            a1 = (uint64_t)*(id *)(v86 + 40);
            char v96 = static NSObject.== infix(_:_:)();

            if ((v96 & 1) == 0)
            {
              if (v87 == 2) {
                goto LABEL_66;
              }
              uint64_t v97 = 6;
              while (1)
              {
                uint64_t v98 = v97 - 3;
                if (__OFADD__(v97 - 4, 1)) {
                  goto LABEL_111;
                }
                a1 = (uint64_t)*(id *)(v86 + 8 * v97);
                char v99 = static NSObject.== infix(_:_:)();

                if (v99) {
                  break;
                }
                ++v97;
                BOOL v95 = v98 == v87;
                uint64_t v46 = v145;
                if (v95) {
                  goto LABEL_66;
                }
              }
LABEL_87:
              swift_bridgeObjectRelease_n();
              a1 = v146;
              uint64_t v46 = v145;
              goto LABEL_69;
            }
          }
        }
        swift_bridgeObjectRelease_n();
        a1 = v146;
        goto LABEL_69;
      }
LABEL_18:

      swift_bridgeObjectRelease();
      double v31 = &v161;
LABEL_19:

LABEL_20:
      int64_t v12 = (int64_t)v141;
      NSFastEnumerationIterator.next()();
      if (!v157) {
        goto LABEL_93;
      }
    }
    [*(id *)&v142[OBJC_IVAR____TtC8Freeform23CRLWPLaidOutColumnProxy_column] caretRectForSelection:v137];
    double v51 = v162.origin.x;
    double v52 = v162.origin.y;
    double v53 = v162.size.width;
    double v54 = v162.size.height;
    if (CGRectIsNull(v162))
    {

      double v31 = &v160;
      goto LABEL_19;
    }
    if ((unint64_t)(v46 + 1) >= 3)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"asNSWritingDirection", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 39, (uint64_t)"Unknown direction.", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"asNSWritingDirection", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 39);
      uint64_t v46 = -1;
    }
    id v101 = objc_allocWithZone((Class)type metadata accessor for CRLTextSelectionRect());
    id v102 = sub_1006CDBB4(v46, v51, v52, v53, v54);
    int64_t v12 = v154;
    swift_bridgeObjectRetain();
    char v103 = sub_100ED5CBC((uint64_t)v102, v12);
    swift_bridgeObjectRelease();
    if (v103)
    {
      (*v118)(v141, v124);

      uint64_t v100 = &v160;
      goto LABEL_95;
    }
    id v104 = v102;
    int64_t v12 = (int64_t)&v154;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v154 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v154 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    (*v118)(v141, v124);
LABEL_96:
    unint64_t v4 = (unint64_t)v126;
  }
  while (v126 != (id)v119);
  swift_bridgeObjectRelease();
  unint64_t v105 = v154;
LABEL_119:
  if ((v105 & 0x8000000000000000) != 0 || (v105 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v106 = (uint64_t)sub_1006BA2DC(v105);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v106 = v105 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
  }
  *(void *)&long long v156 = v106;
  sub_1006EE2D8((uint64_t *)&v156);
  swift_bridgeObjectRelease();
  uint64_t v107 = v156;
  if ((v156 & 0x8000000000000000) != 0 || (v156 & 0x4000000000000000) != 0)
  {
    swift_retain();
    uint64_t v108 = _CocoaArrayWrapper.endIndex.getter();
    if (!v108) {
      goto LABEL_137;
    }
LABEL_125:
    if ((v107 & 0xC000000000000001) != 0)
    {
      id v109 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)(v107 + 16)) {
        goto LABEL_141;
      }
      id v109 = *(id *)(v107 + 32);
    }
    uint64_t v110 = v109;
    swift_release();
    [v110 setContainsStart:1];

    unint64_t v111 = v108 - 1;
    if (!__OFSUB__(v108, 1))
    {
      if ((v107 & 0xC000000000000001) != 0)
      {
        id v112 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_134:
        uint64_t v113 = v112;
        swift_release();
        [v113 setContainsEnd:1];

        goto LABEL_138;
      }
      if ((v111 & 0x8000000000000000) == 0)
      {
        if (v111 < *(void *)(v107 + 16))
        {
          id v112 = *(id *)(v107 + 8 * v111 + 32);
          goto LABEL_134;
        }
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
      }
LABEL_142:
      __break(1u);
      goto LABEL_143;
    }
    __break(1u);
LABEL_141:
    __break(1u);
    goto LABEL_142;
  }
  uint64_t v108 = *(void *)(v156 + 16);
  swift_retain();
  if (v108) {
    goto LABEL_125;
  }
LABEL_137:

  swift_release_n();
LABEL_138:
  *uint64_t v123 = v105;
}

id sub_1006EAB20(double a1, double a2)
{
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_10171A478;
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  type metadata accessor for CGPoint(0);
  *(double *)(inited + 32) = a1;
  *(void *)(inited + 56) = v7;
  *(double *)(inited + 40) = a2;
  id v8 = v5;
  id v9 = [v2 columns];
  if (v9)
  {
    sub_10050BF48(0, (unint64_t *)&unk_10167BC10);
    static Array._conditionallyBridgeFromObjectiveC(_:result:)();
    swift_bridgeObjectRetain();

    id v9 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  id v10 = [self closestColumnInColumnsArray:v9 forPoint:0 ignoreEmptyColumns:1 ignoreDrawableOnlyColumns:a1, a2];
  swift_bridgeObjectRelease();

  swift_setDeallocating();
  swift_arrayDestroy();

  return v10;
}

void sub_1006EAD90(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = [a1 columns];
  if (v3)
  {
    unint64_t v4 = v3;
    sub_10050BF48(0, (unint64_t *)&unk_10167BC10);
    static Array._conditionallyBridgeFromObjectiveC(_:result:)();
  }
  *a2 = 0;
}

char *sub_1006EAF68(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = [a1 end];
  id v7 = [a1 start];
  char v8 = sub_100A07E04((uint64_t)v6, v7);

  if ((v8 & 1) == 0)
  {
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_101177E70;
    *(void *)(v11 + 32) = a1;
    unint64_t v22 = v11;
    specialized Array._endMutation()();
    uint64_t v12 = qword_10166EE60;
    id v13 = a1;
    if (v12 != -1) {
      swift_once();
    }
    id v14 = (id)qword_10171A478;
    swift_bridgeObjectRetain();
    sub_1006E976C(v3, v22, &v22);

    swift_bridgeObjectRelease_n();
    unint64_t v15 = v22;
    if ((unint64_t)(a2 - 3) <= 1)
    {
      if (v22 >> 62)
      {
        swift_bridgeObjectRetain();
        id v16 = (char *)_CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_10;
        }
      }
      else
      {
        id v16 = *(char **)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v16)
        {
LABEL_10:
          if ((v15 & 0xC000000000000001) != 0)
          {
            id v17 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_13;
          }
          if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v17 = (char *)*(id *)(v15 + 32);
LABEL_13:
            id v16 = v17;
            swift_bridgeObjectRelease();
            [v16 rect];
            double v18 = CGRectGetMinX(v24) + 1.0;
            [v16 rect];
            double v19 = CGRectGetMinY(v25) + 1.0;
LABEL_26:
            id v21 = sub_1006F25D8(v18, v19);

            return (char *)v21;
          }
          __break(1u);
          goto LABEL_29;
        }
      }
      swift_bridgeObjectRelease();
      double v19 = 1.0;
      double v18 = 1.0;
      goto LABEL_26;
    }
    if (v22 >> 62)
    {
      swift_bridgeObjectRetain();
      id v16 = (char *)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v16)
      {
LABEL_16:
        uint64_t result = v16 - 1;
        if (!__OFSUB__(v16, 1))
        {
          if ((v15 & 0xC000000000000001) == 0)
          {
            if (((unint64_t)result & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if ((unint64_t)result < *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              uint64_t v20 = (char *)*(id *)(v15 + 8 * (void)result + 32);
LABEL_21:
              id v16 = v20;
              swift_bridgeObjectRelease();
              [v16 rect];
              double v18 = CGRectGetMaxX(v26) + -1.0;
              [v16 rect];
              double v19 = CGRectGetMaxY(v27) + -1.0;
              goto LABEL_26;
            }
            __break(1u);
            return result;
          }
LABEL_30:
          uint64_t v20 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_21;
        }
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
    }
    else
    {
      id v16 = *(char **)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v16) {
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
    double v19 = -1.0;
    double v18 = -1.0;
    goto LABEL_26;
  }
  id v9 = [a1 start];

  return (char *)v9;
}

uint64_t sub_1006EB2B0(char *a1, uint64_t a2)
{
  switch(a2)
  {
    case 2:
      uint64_t v3 = 2;
      goto LABEL_10;
    case 3:
      uint64_t v3 = 3;
LABEL_10:
      id v9 = sub_1006EB530(a1, v3, 1);
      if (!v9) {
        id v9 = a1;
      }
      uint64_t v5 = (double *)v9;
      unint64_t v10 = *(void *)&a1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
      if ((v10 & 0x8000000000000000) != 0
        || (unint64_t v11 = *(void *)((char *)v5 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location),
            (v11 & 0x8000000000000000) != 0))
      {
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        JUMPOUT(0x1006EB520);
      }
      unint64_t v7 = sub_1006F24BC(v10, v11);
      uint64_t v13 = v12;
      goto LABEL_22;
    case 4:
      unint64_t v4 = sub_1006EB530(a1, 4, 0);
      if (v4)
      {
        uint64_t v5 = (double *)v4;
        uint64_t v6 = *(void *)&v4[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
        unint64_t v7 = v6 - 1;
        if (!__OFSUB__(v6, 1)) {
          goto LABEL_21;
        }
        __break(1u);
LABEL_7:
        char v8 = sub_1006EB530(a1, 5, 0);
        if (v8)
        {
          uint64_t v5 = (double *)v8;
          unint64_t v7 = *(void *)&v8[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
          goto LABEL_21;
        }
      }
      else
      {
        uint64_t v15 = *(void *)&a1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
        unint64_t v7 = v15 - 1;
        if (!__OFSUB__(v15, 1)) {
          goto LABEL_20;
        }
        __break(1u);
      }
      unint64_t v7 = *(void *)&a1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
LABEL_20:
      uint64_t v5 = a1;
LABEL_21:
      uint64_t v13 = 1;
LABEL_22:
      int v14 = 1;
LABEL_23:
      id v16 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
      uint64_t v17 = sub_1006CC83C(v7, v13);
      if (v14) {

      }
      return v17;
    case 5:
      goto LABEL_7;
    default:
      unint64_t v7 = 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v13 = 0;
      uint64_t v5 = _swiftEmptyArrayStorage;
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"characterRange(byExtending:in:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPLayout.swift", 77, 2, 530, (uint64_t)"invalid text layout direction", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"characterRange(byExtending:in:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPLayout.swift", 77, 2, 530);
      int v14 = 0;
      goto LABEL_23;
  }
}

char *sub_1006EB530(char *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  id v8 = [v3 layoutController];
  if (!v8) {
    return 0;
  }
  id v9 = v8;
  id v10 = [v8 canvas];
  if (!v10)
  {

    return 0;
  }
  unint64_t v11 = v10;
  if (([v10 isCanvasInteractive] & 1) == 0)
  {

    return 0;
  }
  double v36 = v11;
  id v12 = [v3 layoutController];
  if (!v12)
  {
    __break(1u);
    JUMPOUT(0x1006EB938);
  }
  uint64_t v13 = v12;
  id v14 = [v12 canvas];

  id v15 = [v14 canvasController];
  if (!v15)
  {

    return 0;
  }
  id v16 = *(id *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPLayout_wpStorage];
  uint64_t v17 = (void *)sub_1008FC744();

  id v18 = [objc_allocWithZone((Class)CRLWPEditorHelper) initWithTextSource:v17 icc:v15 layout:v4];
  if (NSNotFound.getter() == a3)
  {

    return a1;
  }
  BOOL v21 = (a2 & 0xFFFFFFFFFFFFFFFELL) == 4;
  id v35 = v15;
  if (a3 < 0)
  {
    BOOL v30 = __OFSUB__(0, a3);
    a3 = -a3;
    if (v30) {
      goto LABEL_35;
    }
    uint64_t v31 = a2 - 2;
    a2 = 5;
    switch(v31)
    {
      case 0:
        a2 = 3;
        break;
      case 1:
        a2 = 2;
        break;
      case 2:
        break;
      case 3:
        a2 = 4;
        break;
      default:
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"flipDirection(_:)", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPLayout.swift", 77, 2, 547, (uint64_t)"Unknown direction type.", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
        LOBYTE(v34) = 2;
        double v32 = "Unknown direction type.";
        uint64_t v33 = 23;
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"flipDirection(_:)", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPLayout.swift", 77, 2, 547);
        break;
    }
  }
  NSNotFound.getter();
  BOOL v22 = *(void *)&a1[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity] == 1;
  double v38 = sub_1006E9264(a1);
  if (a3 < 0)
  {
    __break(1u);
LABEL_35:
    __break(1u);
  }
  if (a3)
  {
    uint64_t v23 = 4 * v21;
    double v19 = a1;
    CGRect v24 = &selRef_alignCenter_;
    while (1)
    {
      id v29 = [v18 v24[365] v19 v23 a2 &v38 v32 v33 v34];
      if (v29 == (id)NSNotFound.getter()) {
        goto LABEL_19;
      }
      if (a2 == 4)
      {
        if (v22) {
          goto LABEL_25;
        }
      }
      else if (a2 == 5 && v22)
      {
LABEL_25:
        uint64_t v25 = 1;
        BOOL v22 = 1;
        goto LABEL_18;
      }
      uint64_t v25 = 0;
      BOOL v22 = 0;
LABEL_18:
      CGRect v26 = (objc_class *)type metadata accessor for CRLTextPosition();
      CGRect v27 = (char *)objc_allocWithZone(v26);
      *(void *)&v27[OBJC_IVAR____TtC8Freeform15CRLTextPosition_insertionEdge] = 0;
      *(void *)&v27[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location] = v29;
      *(void *)&v27[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity] = v25;
      v37.receiver = v27;
      v37.super_class = v26;
      double v28 = (char *)[super init];

      double v19 = v28;
      CGRect v24 = &selRef_alignCenter_;
LABEL_19:
      if (!--a3) {
        goto LABEL_30;
      }
    }
  }
  double v19 = a1;
LABEL_30:

  return v19;
}

double *CRLWPLayout.dependentLayouts.getter()
{
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for CRLWPLayout();
  id v1 = [super dependentLayouts];
  if (v1)
  {
    uint64_t v2 = v1;
    sub_10050BF48(0, (unint64_t *)&qword_101690720);
    uint64_t v3 = (double *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  unint64_t v11 = v3;
  id v4 = [v0 parent];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = (void *)swift_dynamicCastObjCProtocolConditional();
    if (v6)
    {
      id v7 = [v6 dependentsOf:v0];
      sub_10050BF48(0, (unint64_t *)&qword_101690720);
      unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1006E3C50(v8, (uint64_t (*)(uint64_t, void, unint64_t))sub_1006BE3E0);
      return v11;
    }
    else
    {
    }
  }
  return v3;
}

void CRLWPLayout.layoutSearch(for:options:hit:completionBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(id), uint64_t a7)
{
  uint64_t v64 = a4;
  uint64_t v65 = a5;
  uint64_t v66 = a1;
  uint64_t v67 = a2;
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v68 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v12);
  id v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v15, v16);
  id v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for CRLWPStorageCRDTData(0);
  *(void *)&double v21 = __chkstk_darwin(v19 - 8, v20).n128_u64[0];
  uint64_t v23 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(v7, "storage", v21)) {
    goto LABEL_12;
  }
  uint64_t v63 = a3;
  type metadata accessor for CRLWPStorage();
  uint64_t v24 = swift_dynamicCastClass();
  if (!v24) {
    goto LABEL_11;
  }
  uint64_t v25 = (char *)v24;
  uint64_t v62 = a7;
  id v26 = [v7 layoutController];
  if (!v26
    || (CGRect v27 = v26,
        id v61 = a6,
        id v28 = [v26 canvas],
        v27,
        !v28)
    || (id v29 = [v28 delegate], v28, !v29))
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_12:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"layoutSearch(for:options:hit:completionBlock:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPLayout.swift", 77, 2, 608, (uint64_t)"nil storage or searchCanvasDelegate", 35, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"layoutSearch(for:options:hit:completionBlock:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPLayout.swift", 77, 2, 608);
    return;
  }
  char v76 = &OBJC_PROTOCOL___CRLSearchCanvasDelegate;
  uint64_t v30 = swift_dynamicCastObjCProtocolConditional();
  if (!v30)
  {
    swift_unknownObjectRelease();
    goto LABEL_11;
  }
  uint64_t v59 = v30;
  id v60 = v29;
  if (!CRLWPLayout.isOverflowing()())
  {
    id v34 = [v25 range];
    NSUInteger location = (NSUInteger)v34;
    int64_t length = v36;
    goto LABEL_15;
  }
  uint64_t v31 = (id *)&v7[OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns];
  swift_beginAccess();
  objc_super v58 = v31;
  id v32 = [*v31 firstObject];
  uint64_t v33 = v61;
  if (v32)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v70 = 0u;
    long long v71 = 0u;
  }
  sub_10052E248((uint64_t)&v70, (uint64_t)aBlock);
  if (!v73)
  {
    uint64_t v46 = sub_100522F00((uint64_t)aBlock, &qword_101672BF0);
LABEL_34:
    uint64_t v54 = *(void *)&v25[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (!v54)
    {
      __break(1u);
      return;
    }
    (*(void (**)(uint64_t))(*(void *)v54 + 760))(v46);
    sub_1006F27F4((uint64_t)&v18[*(int *)(v15 + 20)], (uint64_t)v23, type metadata accessor for CRLWPStorageCRDTData);
    sub_1006F2408((uint64_t)v18, type metadata accessor for CRLWPShapeItemCRDTData);
    uint64_t v55 = v68;
    (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v14, v23, v11);
    sub_1006F2408((uint64_t)v23, type metadata accessor for CRLWPStorageCRDTData);
    id v45 = (id)CRAttributedString.attributedString.getter();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v14, v11);
    [v45 length];
    goto LABEL_36;
  }
  sub_10050BF48(0, (unint64_t *)&unk_10167BC10);
  uint64_t v46 = swift_dynamicCast();
  if ((v46 & 1) == 0)
  {
LABEL_33:
    uint64_t v33 = v61;
    goto LABEL_34;
  }
  id v57 = v69;
  if ([*v58 lastObject])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v70 = 0u;
    long long v71 = 0u;
  }
  sub_10052E248((uint64_t)&v70, (uint64_t)aBlock);
  if (!v73)
  {

    uint64_t v46 = sub_100522F00((uint64_t)aBlock, &qword_101672BF0);
    goto LABEL_33;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_33;
  }
  int64_t v47 = v69;
  id v48 = v57;
  id v49 = [v57 range];
  NSUInteger v51 = v50;
  v78.NSUInteger location = (NSUInteger)[v47 range];
  v78.int64_t length = v52;
  v77.NSUInteger location = (NSUInteger)v49;
  v77.int64_t length = v51;
  NSRange v53 = NSUnionRange(v77, v78);
  NSUInteger location = v53.location;
  int64_t length = v53.length;

LABEL_15:
  uint64_t v33 = v61;
  if (length >= 1)
  {
    double v38 = (void *)swift_allocObject();
    uint64_t v39 = v64;
    uint64_t v40 = v65;
    void v38[2] = v7;
    v38[3] = v39;
    v38[4] = v40;
    id v41 = objc_allocWithZone((Class)CRLWPSearch);
    swift_unknownObjectRetain();
    double v42 = v7;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_unknownObjectRetain();
    NSString v43 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v74 = sub_1006EE1C4;
    uint64_t v75 = v38;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_1006EC7D8;
    CGFloat v73 = &unk_1015104C8;
    double v44 = _Block_copy(aBlock);
    id v45 = [v41 initWithString:v43 options:v63 hitBlock:v44 storage:v25 range:location length:v59];

    swift_unknownObjectRelease();
    _Block_release(v44);
    swift_release();
    sub_10090C11C(v45);
    LOBYTE(v43) = [v45 isComplete];
    swift_unknownObjectRelease();
    id v34 = (id)swift_release();
    if (v43)
    {
LABEL_36:

      goto LABEL_37;
    }
    if (v45)
    {
      id v45 = v45;
      if (([v45 isComplete] & 1) == 0)
      {
        do
        {
          [v25 continueSearch:v45];
        }
        while (![v45 isComplete]);
      }

      goto LABEL_36;
    }
  }
LABEL_37:
  if (v33) {
    v33(v34);
  }
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
}

void CRLWPLayout.layoutSearchForSpellingErrors(hit:stop:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  unint64_t v8 = (id *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns];
  swift_beginAccess();
  if ((uint64_t)[*v8 count] < 1) {
    return;
  }
  id v9 = [v4 storage];
  if (!v9)
  {
    __break(1u);
    goto LABEL_13;
  }
  id v10 = [v9 range];
  uint64_t v12 = v11;
  swift_unknownObjectRelease();
  if (v12 < 1) {
    return;
  }
  id v13 = [v4 layoutController];
  if (!v13)
  {
LABEL_13:
    __break(1u);
    return;
  }
  id v14 = v13;
  id v15 = [v13 canvas];

  if (v15)
  {
    id v16 = [v15 delegate];

    if (v16)
    {
      v23[6] = &OBJC_PROTOCOL___CRLSearchCanvasDelegate;
      uint64_t v17 = swift_dynamicCastObjCProtocolConditional();
      if (v17
        && (id v18 = [self newSpellCheckerForStorage:*(void *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPLayout_wpStorage] selectionPath:0 orSearchCanvasDelegate:v17]) != 0)
      {
        uint64_t v19 = v18;
        uint64_t v20 = (void *)swift_allocObject();
        void v20[2] = v4;
        v20[3] = a1;
        v20[4] = a2;
        v23[4] = sub_1006EE284;
        v23[5] = v20;
        v23[0] = _NSConcreteStackBlock;
        v23[1] = *(void *)"";
        long long v23[2] = sub_1006EC7D8;
        v23[3] = &unk_101510518;
        double v21 = _Block_copy(v23);
        uint64_t v22 = v4;
        swift_retain();
        swift_retain();
        swift_release();
        [v19 findErrorsInRange:v10 onHit:v12 stop:v21 a3];
        _Block_release(v21);
        swift_unknownObjectRelease();

        swift_release();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
}

void sub_1006EC6C0(void *a1, void *a2, void (*a3)(uint64_t))
{
  if (a1)
  {
    swift_unknownObjectRetain();
    [a2 calculatePointFromSearchReference:a1];
    [a1 setSearchReferencePoint:];
    uint64_t v6 = swift_unknownObjectRetain();
    a3(v6);
    swift_unknownObjectRelease_n();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"layoutSearchForSpellingErrors(hit:stop:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPLayout.swift", 77, 2, 648, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"layoutSearchForSpellingErrors(hit:stop:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPLayout.swift", 77, 2, 648);
  }
}

uint64_t sub_1006EC7D8(uint64_t a1)
{
  id v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

void CRLWPLayout.rectInRoot(for:)(void *a1)
{
  id v3 = [v1 layoutController];
  if (v3)
  {
    id v4 = v3;
    id v5 = [v3 canvas];

    if (v5)
    {
      id v6 = [v5 canvasController];

      if (v6)
      {
        sub_10050BF48(0, (unint64_t *)&qword_101683830);
        id v7 = [a1 mostSpecificSelectionOfClass:swift_getObjCClassFromMetadata()];
        if (v7)
        {
          unint64_t v8 = v7;
          self;
          if (swift_dynamicCastObjCClass())
          {
            id v9 = [v1 columns];
            if (v9)
            {
              id v10 = v9;
              uint64_t v12 = 0;
              sub_10050BF48(0, (unint64_t *)&unk_10167BC10);
              static Array._conditionallyBridgeFromObjectiveC(_:result:)();
            }
          }
        }
      }
    }
    uint64_t v11 = (objc_class *)type metadata accessor for CRLWPLayout();
    v13.receiver = v1;
    v13.super_class = v11;
    [super rectInRootForSelectionPath:a1];
  }
  else
  {
    __break(1u);
  }
}

double CRLWPLayout.rectInRootOfAutoZoomContext(of:)(uint64_t a1)
{
  id v3 = [v1 parent];
  if (!v3) {
    goto LABEL_5;
  }
  id v4 = v3;
  self;
  id v5 = (void *)swift_dynamicCastObjCClass();
  if (!v5)
  {

LABEL_5:
    v10.receiver = v1;
    v10.super_class = (Class)type metadata accessor for CRLWPLayout();
    [super rectInRootOfAutoZoomContextOfSelectionPath:a1];
    return v8;
  }
  [v5 rectInRootOfAutoZoomContextOfSelectionPath:a1];
  double v7 = v6;

  return v7;
}

void CRLWPLayout.viewScaleForZooming(to:targetPointSize:)(uint64_t a1, double a2)
{
  id v5 = [v2 parent];
  if (v5)
  {
    double v6 = v5;
    self;
    double v7 = (void *)swift_dynamicCastObjCClass();
    if (v7)
    {
      [v7 viewScaleForZoomingToSelectionPath:a1 targetPointSize:a2];

      return;
    }
  }
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for CRLWPLayout();
  [super viewScaleForZoomingToSelectionPath:a1 targetPointSize:a2];
}

Swift::Bool __swiftcall CRLWPLayout.isOverflowing()()
{
  id v1 = [v0 storage];
  if (!v1)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  unsigned int v2 = [v1 wpKind];
  swift_unknownObjectRelease();
  if (v2 != 3) {
    goto LABEL_13;
  }
  id v1 = [v0 storage];
  if (!v1) {
    goto LABEL_16;
  }
  uint64_t v3 = (uint64_t)[v1 length];
  swift_unknownObjectRelease();
  if (v3 < 1) {
    goto LABEL_13;
  }
  id v1 = [v0 columns];
  if (!v1)
  {
LABEL_17:
    __break(1u);
    return (char)v1;
  }
  id v4 = v1;
  id v5 = [v1 lastObject];

  if (v5)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_10052E248((uint64_t)v9, (uint64_t)v10);
  if (!v11)
  {
    sub_100522F00((uint64_t)v10, &qword_101672BF0);
    goto LABEL_13;
  }
  sub_10050BF48(0, (unint64_t *)&unk_10167BC10);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    LOBYTE(v1) = 0;
    return (char)v1;
  }
  unint64_t v6 = (unint64_t)[v8 layoutResultFlags];

  return (v6 >> 1) & 1;
}

id CRLWPLayout.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPLayout();
  return [super dealloc];
}

id CRLWPLayout.textWrapper()()
{
  id v1 = [v0 parent];
  if (v1)
  {
    self;
    objc_super v2 = (void *)swift_dynamicCastObjCClass();
    if (!v2) {

    }
    id v1 = [v2 textWrapper];
  }
  return v1;
}

id CRLWPLayout.columnMetrics(forCharIndex:outRange:)()
{
  id result = [v0 parent];
  if (result)
  {
    objc_super v2 = result;
    id result = (id)swift_dynamicCastObjCProtocolConditional();
    if (!result)
    {

      return 0;
    }
  }
  return result;
}

void *CRLWPLayout.columns.getter()
{
  id v1 = (void **)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns);
  swift_beginAccess();
  objc_super v2 = *v1;
  id v3 = v2;
  return v2;
}

void *CRLWPLayout.storage.getter()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPLayout_wpStorage);
  id v2 = v1;
  return v1;
}

id CRLWPLayout.isInstructional.getter()
{
  id v1 = [v0 parent];
  if (v1)
  {
    id v2 = v1;
    id v3 = (void *)swift_dynamicCastObjCProtocolConditional();
    if (v3)
    {
      if ([v3 supportsInstructionalText]) {
        goto LABEL_8;
      }
    }
    else
    {
    }
  }
  if (![v0 parentAutosizes])
  {
LABEL_9:
    swift_unknownObjectRelease();
    return 0;
  }
LABEL_8:
  sub_1006E81E8();
  if (v4) {
    goto LABEL_9;
  }
  id result = [v0 storage];
  if (result)
  {
    id v6 = [result length];
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return (id)(v6 == 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

double CRLWPLayout.minSize.getter()
{
  id v1 = [v0 parent];
  if (!v1) {
    goto LABEL_7;
  }
  id v2 = v1;
  uint64_t v3 = swift_dynamicCastObjCProtocolConditional();
  if (!v3)
  {

LABEL_7:
    id v9 = [v0 geometry];
    [v9 size];
    double v7 = v10;

    return v7;
  }
  char v4 = (void *)v3;
  id v5 = [v0 geometry];
  [v5 size];
  double v7 = v6;

  unsigned __int8 v8 = [v4 autosizeFlagsFor:v0];
  if ((v8 & 8) != 0) {
    return 0.0;
  }
  return v7;
}

double CRLWPLayout.maxSize.getter()
{
  id v1 = [v0 parent];
  if (!v1) {
    goto LABEL_10;
  }
  id v2 = v1;
  uint64_t v3 = swift_dynamicCastObjCProtocolConditional();
  if (!v3)
  {

LABEL_10:
    id v2 = [v0 geometry];
    [v2 size];
    double v7 = v13;
LABEL_11:

    return v7;
  }
  char v4 = (void *)v3;
  id v5 = [v0 geometry];
  [v5 size];
  double v7 = v6;

  unsigned int v8 = [v0 textIsVertical];
  unsigned __int8 v9 = [v4 autosizeFlagsFor:v0];
  if ((v9 & 4) != 0)
  {
    [v4 maxAutoGrowLineWidthFor:v0];
    if (!v8) {
      double v7 = v10;
    }
  }
  if ((v9 & 1) == 0) {
    goto LABEL_11;
  }
  [v4 maxAutoGrowBlockHeightFor:v0];
  double v12 = v11;

  if (v8) {
    return v12;
  }
  return v7;
}

double CRLWPLayout.currentSize.getter()
{
  id v1 = [v0 geometry];
  [v1 size];
  double v3 = v2;

  return v3;
}

double CRLWPLayout.position.getter()
{
  id v1 = [v0 geometry];
  [v1 frame];
  double v3 = v2;

  return v3;
}

id CRLWPLayout.autosizeFlags.getter()
{
  return sub_1006EDCB4((SEL *)&selRef_autosizeFlagsFor_);
}

id sub_1006EDC04(void *a1, uint64_t a2, SEL *a3)
{
  id v4 = a1;
  id v5 = [v4 parent];
  if (!v5)
  {

    return 0;
  }
  double v6 = v5;
  double v7 = (void *)swift_dynamicCastObjCProtocolConditional();
  if (!v7)
  {

    return 0;
  }
  id v8 = [v7 *a3:v4];

  return v8;
}

id CRLWPLayout.verticalAlignment.getter()
{
  return sub_1006EDCB4((SEL *)&selRef_verticalAlignmentFor_);
}

id sub_1006EDCB4(SEL *a1)
{
  id v3 = [v1 parent];
  if (!v3) {
    return 0;
  }
  id v4 = v3;
  id v5 = (void *)swift_dynamicCastObjCProtocolConditional();
  if (v5) {
    id v6 = [v5 *a1:v1];
  }
  else {
    id v6 = 0;
  }

  return v6;
}

uint64_t CRLWPLayout.naturalAlignment.getter()
{
  id v1 = [v0 parent];
  if (!v1) {
    return 4;
  }
  double v2 = v1;
  id v3 = (void *)swift_dynamicCastObjCProtocolConditional();
  if (v3) {
    uint64_t v4 = (uint64_t)[v3 naturalAlignmentFor:v0];
  }
  else {
    uint64_t v4 = 4;
  }

  return v4;
}

id CRLWPLayout.textIsVertical.getter()
{
  return sub_1006EDF8C((SEL *)&selRef_textLayoutShouldLayoutVertically_);
}

uint64_t CRLWPLayout.layoutIsValid.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPLayout_textLayoutIsValid);
}

id sub_1006EDEDC(void *a1, uint64_t a2, SEL *a3)
{
  id v4 = a1;
  id v5 = [v4 parent];
  if (!v5)
  {

    return 0;
  }
  id v6 = v5;
  double v7 = (void *)swift_dynamicCastObjCProtocolConditional();
  if (!v7)
  {

    return 0;
  }
  id v8 = [v7 *a3:v4];

  return v8;
}

id CRLWPLayout.shouldWrapAroundExternalDrawables.getter()
{
  return sub_1006EDF8C((SEL *)&selRef_textLayoutShouldWrapAroundExternalDrawables_);
}

id sub_1006EDF8C(SEL *a1)
{
  id v3 = [v1 parent];
  if (!v3) {
    return 0;
  }
  id v4 = v3;
  id v5 = (void *)swift_dynamicCastObjCProtocolConditional();
  if (v5) {
    id v6 = [v5 *a1:v1];
  }
  else {
    id v6 = 0;
  }

  return v6;
}

id CRLWPLayout.interiorWrapSegments.getter()
{
  id v1 = [v0 parent];
  if (!v1) {
    return 0;
  }
  double v2 = v1;
  id v3 = (void *)swift_dynamicCastObjCProtocolConditional();
  if (!v3)
  {

    return 0;
  }
  id v4 = [v3 interiorWrapSegmentsFor:v0];

  return v4;
}

id CRLWPLayout.setNeedsDisplayInTargetRect(_:)()
{
  return [v0 setNeedsDisplayInRect:];
}

double sub_1006EE198(double a1)
{
  return -a1;
}

double sub_1006EE1AC(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  return a3 - (a6 + a8);
}

uint64_t sub_1006EE1C4(void *a1)
{
  id v3 = *(uint64_t (**)(void *))(v1 + 24);
  if (a1)
  {
    [*(id *)(v1 + 16) calculatePointFromSearchReference:a1];
    [a1 setSearchReferencePoint:];
  }
  return v3(a1);
}

uint64_t sub_1006EE228(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1006EE238()
{
  return swift_release();
}

uint64_t sub_1006EE244()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1006EE284(void *a1)
{
  sub_1006EC6C0(a1, *(void **)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

uint64_t sub_1006EE290(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006EE2D8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_100F6A104(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1006EE354(v6);
  return specialized ContiguousArray._endMutation()();
}

void sub_1006EE354(uint64_t *a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = a1[1];
  Swift::Int v5 = _minimumMergeRunLength(_:)(v4);
  if (v5 >= v4)
  {
    if (v4 < 0) {
      goto LABEL_132;
    }
    if (v4) {
      sub_1006EEB30(0, v4, 1, a1);
    }
    return;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_140;
  }
  Swift::Int v7 = v5;
  uint64_t v147 = a1;
  if (v4 < 2)
  {
    double v10 = _swiftEmptyArrayStorage;
    uint64_t v157 = (uint64_t)_swiftEmptyArrayStorage;
    long long v156 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v13 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_98:
      id v139 = v10;
      if (v13 >= 2)
      {
        uint64_t v140 = *v147;
        do
        {
          unint64_t v141 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_127;
          }
          if (!v140) {
            goto LABEL_139;
          }
          uint64_t v142 = v139;
          double v143 = v139[2 * v141 + 4];
          double v144 = v139[2 * v13 + 3];
          sub_1006EEC5C((void **)(v140 + 8 * *(void *)&v143), (id *)(v140 + 8 * *(void *)&v139[2 * v13 + 2]), v140 + 8 * *(void *)&v144, v156);
          if (v2) {
            break;
          }
          if (*(uint64_t *)&v144 < *(uint64_t *)&v143) {
            goto LABEL_128;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v142 = sub_100F69F28((uint64_t)v142);
          }
          if (v141 >= *((void *)v142 + 2)) {
            goto LABEL_129;
          }
          uint64_t v145 = &v142[2 * v141 + 4];
          double *v145 = v143;
          v145[1] = v144;
          unint64_t v146 = *((void *)v142 + 2);
          if (v13 > v146) {
            goto LABEL_130;
          }
          memmove(&v142[2 * v13 + 2], &v142[2 * v13 + 4], 16 * (v146 - v13));
          id v139 = v142;
          *((void *)v142 + 2) = v146 - 1;
          unint64_t v13 = v146 - 1;
        }
        while (v146 > 2);
      }
LABEL_95:
      swift_bridgeObjectRelease();
      *(void *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v8 = v6 >> 1;
    type metadata accessor for CRLTextSelectionRect();
    uint64_t v9 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    long long v156 = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v157 = v9;
  }
  Swift::Int v152 = v7;
  Swift::Int v11 = 0;
  uint64_t v12 = *a1;
  uint64_t v148 = *a1 - 8;
  uint64_t v149 = *a1 + 16;
  double v10 = _swiftEmptyArrayStorage;
  Swift::Int v153 = v4;
  while (1)
  {
    Swift::Int v14 = v11++;
    Swift::Int v154 = v14;
    if (v11 < v4)
    {
      id v15 = *(void **)(v12 + 8 * v14);
      id v16 = *(id *)(v12 + 8 * v11);
      id v17 = v15;
      [v16 rect];
      double v22 = sub_100065738(v18, v19, v20, v21);
      double v24 = v23;
      [v17 rect:v22];
      CGFloat v26 = v25;
      CGFloat v28 = v27;
      CGFloat v30 = v29;
      CGFloat v32 = v31;

      sub_100065738(v26, v28, v30, v32);
      double v34 = v33;
      Swift::Int v11 = v14 + 2;
      if (v14 + 2 < v4)
      {
        unint64_t v150 = v10;
        id v35 = (id *)(v149 + 8 * v14);
        while (1)
        {
          int64_t v36 = *(v35 - 1);
          id v37 = *v35;
          id v38 = v36;
          [v37 rect];
          double v43 = sub_100065738(v39, v40, v41, v42);
          double v45 = v44;
          [v38 rect:v43];
          CGFloat v47 = v46;
          CGFloat v49 = v48;
          CGFloat v51 = v50;
          CGFloat v53 = v52;

          sub_100065738(v47, v49, v51, v53);
          if (v24 < v34 == v45 >= v54) {
            break;
          }
          ++v11;
          ++v35;
          if (v4 == v11)
          {
            Swift::Int v11 = v4;
            break;
          }
        }
        double v10 = v150;
      }
      if (v24 < v34)
      {
        if (v11 < v14) {
          goto LABEL_133;
        }
        if (v14 < v11)
        {
          uint64_t v55 = (uint64_t *)(v148 + 8 * v11);
          Swift::Int v56 = v11;
          Swift::Int v57 = v14;
          objc_super v58 = (uint64_t *)(v12 + 8 * v14);
          do
          {
            if (v57 != --v56)
            {
              if (!v12) {
                goto LABEL_138;
              }
              uint64_t v59 = *v58;
              *objc_super v58 = *v55;
              *uint64_t v55 = v59;
            }
            ++v57;
            --v55;
            ++v58;
          }
          while (v57 < v56);
        }
      }
    }
    if (v11 >= v4) {
      goto LABEL_47;
    }
    if (__OFSUB__(v11, v14)) {
      goto LABEL_131;
    }
    if (v11 - v14 >= v152) {
      goto LABEL_47;
    }
    if (__OFADD__(v14, v152)) {
      goto LABEL_134;
    }
    Swift::Int v60 = v14 + v152 >= v4 ? v4 : v14 + v152;
    if (v60 < v14) {
      break;
    }
    if (v11 != v60)
    {
      objc_super v151 = v10;
      uint64_t v61 = v148 + 8 * v11;
      do
      {
        uint64_t v62 = *(void **)(v12 + 8 * v11);
        Swift::Int v63 = v14;
        uint64_t v64 = v61;
        do
        {
          uint64_t v65 = *(void **)v64;
          id v66 = v62;
          id v67 = v65;
          [v66 rect];
          double v72 = sub_100065738(v68, v69, v70, v71);
          double v74 = v73;
          [v67 rect:v72];
          CGFloat v76 = v75;
          CGFloat v78 = v77;
          CGFloat v80 = v79;
          CGFloat v82 = v81;

          sub_100065738(v76, v78, v80, v82);
          if (v74 >= v83) {
            break;
          }
          if (!v12) {
            goto LABEL_136;
          }
          uint64_t v84 = *(void **)v64;
          uint64_t v62 = *(void **)(v64 + 8);
          *(void *)uint64_t v64 = v62;
          *(void *)(v64 + 8) = v84;
          v64 -= 8;
          ++v63;
        }
        while (v11 != v63);
        ++v11;
        v61 += 8;
        Swift::Int v14 = v154;
      }
      while (v11 != v60);
      Swift::Int v11 = v60;
      double v10 = v151;
    }
LABEL_47:
    if (v11 < v14) {
      goto LABEL_126;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      double v10 = sub_100F697E0(0, *((void *)v10 + 2) + 1, 1, (uint64_t)v10);
    }
    unint64_t v86 = *((void *)v10 + 2);
    unint64_t v85 = *((void *)v10 + 3);
    unint64_t v13 = v86 + 1;
    if (v86 >= v85 >> 1) {
      double v10 = sub_100F697E0((double *)(v85 > 1), v86 + 1, 1, (uint64_t)v10);
    }
    *((void *)v10 + 2) = v13;
    uint64_t v87 = v10 + 4;
    id v88 = &v10[2 * v86 + 4];
    *(void *)id v88 = v14;
    *((void *)v88 + 1) = v11;
    if (v86)
    {
      Swift::Int v155 = v11;
      while (1)
      {
        unint64_t v89 = v13 - 1;
        if (v13 >= 4)
        {
          char v94 = &v87[2 * v13];
          uint64_t v95 = *((void *)v94 - 8);
          uint64_t v96 = *((void *)v94 - 7);
          BOOL v100 = __OFSUB__(v96, v95);
          uint64_t v97 = v96 - v95;
          if (v100) {
            goto LABEL_115;
          }
          uint64_t v99 = *((void *)v94 - 6);
          uint64_t v98 = *((void *)v94 - 5);
          BOOL v100 = __OFSUB__(v98, v99);
          uint64_t v92 = v98 - v99;
          char v93 = v100;
          if (v100) {
            goto LABEL_116;
          }
          unint64_t v101 = v13 - 2;
          id v102 = &v87[2 * v13 - 4];
          uint64_t v104 = *(void *)v102;
          uint64_t v103 = *((void *)v102 + 1);
          BOOL v100 = __OFSUB__(v103, v104);
          uint64_t v105 = v103 - v104;
          if (v100) {
            goto LABEL_118;
          }
          BOOL v100 = __OFADD__(v92, v105);
          uint64_t v106 = v92 + v105;
          if (v100) {
            goto LABEL_121;
          }
          if (v106 >= v97)
          {
            uint64_t v124 = &v87[2 * v89];
            uint64_t v126 = *(void *)v124;
            uint64_t v125 = *((void *)v124 + 1);
            BOOL v100 = __OFSUB__(v125, v126);
            uint64_t v127 = v125 - v126;
            if (v100) {
              goto LABEL_125;
            }
            BOOL v117 = v92 < v127;
            goto LABEL_85;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v118 = *((void *)v10 + 4);
            uint64_t v119 = *((void *)v10 + 5);
            BOOL v100 = __OFSUB__(v119, v118);
            uint64_t v111 = v119 - v118;
            char v112 = v100;
            goto LABEL_79;
          }
          uint64_t v91 = *((void *)v10 + 4);
          uint64_t v90 = *((void *)v10 + 5);
          BOOL v100 = __OFSUB__(v90, v91);
          uint64_t v92 = v90 - v91;
          char v93 = v100;
        }
        if (v93) {
          goto LABEL_117;
        }
        unint64_t v101 = v13 - 2;
        uint64_t v107 = &v87[2 * v13 - 4];
        uint64_t v109 = *(void *)v107;
        uint64_t v108 = *((void *)v107 + 1);
        BOOL v110 = __OFSUB__(v108, v109);
        uint64_t v111 = v108 - v109;
        char v112 = v110;
        if (v110) {
          goto LABEL_120;
        }
        uint64_t v113 = &v87[2 * v89];
        uint64_t v115 = *(void *)v113;
        uint64_t v114 = *((void *)v113 + 1);
        BOOL v100 = __OFSUB__(v114, v115);
        uint64_t v116 = v114 - v115;
        if (v100) {
          goto LABEL_123;
        }
        if (__OFADD__(v111, v116)) {
          goto LABEL_124;
        }
        if (v111 + v116 >= v92)
        {
          BOOL v117 = v92 < v116;
LABEL_85:
          if (v117) {
            unint64_t v89 = v101;
          }
          goto LABEL_87;
        }
LABEL_79:
        if (v112) {
          goto LABEL_119;
        }
        int64_t v120 = &v87[2 * v89];
        uint64_t v122 = *(void *)v120;
        uint64_t v121 = *((void *)v120 + 1);
        BOOL v100 = __OFSUB__(v121, v122);
        uint64_t v123 = v121 - v122;
        if (v100) {
          goto LABEL_122;
        }
        if (v123 < v111) {
          goto LABEL_14;
        }
LABEL_87:
        unint64_t v128 = v89 - 1;
        if (v89 - 1 >= v13)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        uint64_t v129 = v12;
        if (!v12) {
          goto LABEL_137;
        }
        uint64_t v130 = v10;
        uint64_t v131 = &v87[2 * v128];
        uint64_t v132 = *(void *)v131;
        uint64_t v133 = v87;
        unint64_t v134 = v89;
        uint64_t v135 = &v87[2 * v89];
        double v136 = v135[1];
        uint64_t v137 = v129;
        sub_1006EEC5C((void **)(v129 + 8 * *(void *)v131), (id *)(v129 + 8 * *(void *)v135), v129 + 8 * *(void *)&v136, v156);
        if (v1) {
          goto LABEL_95;
        }
        if (*(uint64_t *)&v136 < v132) {
          goto LABEL_112;
        }
        if (v134 > *((void *)v130 + 2)) {
          goto LABEL_113;
        }
        *(void *)uint64_t v131 = v132;
        v133[2 * v128 + 1] = v136;
        unint64_t v138 = *((void *)v130 + 2);
        if (v134 >= v138) {
          goto LABEL_114;
        }
        double v10 = v130;
        unint64_t v13 = v138 - 1;
        memmove(v135, v135 + 2, 16 * (v138 - 1 - v134));
        uint64_t v87 = v133;
        *((void *)v130 + 2) = v138 - 1;
        uint64_t v12 = v137;
        Swift::Int v11 = v155;
        if (v138 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_14:
    Swift::Int v4 = v153;
    if (v11 >= v153)
    {
      uint64_t v2 = v1;
      goto LABEL_98;
    }
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1006EEB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = *a4;
    uint64_t v7 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v8 = *(void **)(v6 + 8 * v4);
    uint64_t v9 = a1;
    uint64_t v10 = v7;
    while (1)
    {
      Swift::Int v11 = *(void **)v10;
      id v12 = v8;
      id v13 = v11;
      [v12 rect];
      double v18 = sub_100065738(v14, v15, v16, v17);
      double v20 = v19;
      [v13 rect:v18];
      CGFloat v22 = v21;
      CGFloat v24 = v23;
      CGFloat v26 = v25;
      CGFloat v28 = v27;

      sub_100065738(v22, v24, v26, v28);
      if (v20 >= v29)
      {
LABEL_4:
        ++v4;
        v7 += 8;
        if (v4 == a2) {
          return;
        }
        goto LABEL_5;
      }
      if (!v6) {
        break;
      }
      CGFloat v30 = *(void **)v10;
      uint64_t v8 = *(void **)(v10 + 8);
      *(void *)uint64_t v10 = v8;
      *(void *)(v10 + 8) = v30;
      v10 -= 8;
      if (v4 == ++v9) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1006EEC5C(void **__src, id *a2, unint64_t a3, void **a4)
{
  Swift::Int v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = (char *)a2 - (char *)__src;
  int64_t v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v8 = (char *)a2 - (char *)__src;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v11 = a3 - (void)a2;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v62 = a4;
  Swift::Int v63 = __src;
  if (v9 >= v11 >> 3)
  {
    if (v10 < -7) {
      goto LABEL_46;
    }
    if (a4 != a2 || &a2[v12] <= a4) {
      memmove(a4, a2, 8 * v12);
    }
    id v35 = &a4[v12];
    uint64_t v61 = (char *)v35;
    Swift::Int v63 = v5;
    if (v6 >= v5 || v10 < 8) {
      goto LABEL_45;
    }
    int64_t v36 = (id *)(a3 - 8);
    id v37 = v5;
    while (1)
    {
      id v38 = v36 + 1;
      CGFloat v39 = v35 - 1;
      CGFloat v40 = *--v37;
      id v41 = *(v35 - 1);
      id v42 = v40;
      [v41 rect];
      double v47 = sub_100065738(v43, v44, v45, v46);
      double v49 = v48;
      [v42 rect:v47];
      CGFloat v51 = v50;
      CGFloat v53 = v52;
      CGFloat v55 = v54;
      CGFloat v57 = v56;

      sub_100065738(v51, v53, v55, v57);
      if (v49 < v58) {
        break;
      }
      uint64_t v61 = (char *)(v35 - 1);
      if (v38 < v35 || v36 >= v35)
      {
        *int64_t v36 = *v39;
        id v37 = v5;
        --v35;
        goto LABEL_43;
      }
      if (v38 != v35) {
        *int64_t v36 = *v39;
      }
      id v37 = v5;
      --v35;
      if (v5 <= v6) {
        goto LABEL_45;
      }
LABEL_44:
      --v36;
      Swift::Int v5 = v37;
      if (v35 <= a4) {
        goto LABEL_45;
      }
    }
    if (v38 != v5 || v36 >= v5) {
      *int64_t v36 = *v37;
    }
    Swift::Int v63 = v37;
LABEL_43:
    if (v37 <= v6) {
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  if (v7 >= -7)
  {
    if (a4 != __src || &__src[v9] <= a4) {
      memmove(a4, __src, 8 * v9);
    }
    id v13 = &a4[v9];
    uint64_t v61 = (char *)v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      CGFloat v14 = a4;
      do
      {
        CGFloat v15 = *v14;
        id v16 = *v5;
        id v17 = v15;
        [v16 rect];
        double v22 = sub_100065738(v18, v19, v20, v21);
        double v24 = v23;
        [v17 rect:v22];
        CGFloat v26 = v25;
        CGFloat v28 = v27;
        CGFloat v30 = v29;
        CGFloat v32 = v31;

        sub_100065738(v26, v28, v30, v32);
        if (v24 >= v33)
        {
          if (v6 != v14) {
            *uint64_t v6 = *v14;
          }
          uint64_t v62 = ++v14;
          double v34 = v5;
        }
        else
        {
          double v34 = v5 + 1;
          if (v6 < v5 || v6 >= v34 || v6 != v5) {
            *uint64_t v6 = *v5;
          }
        }
        ++v6;
        if (v14 >= v13) {
          break;
        }
        Swift::Int v5 = v34;
      }
      while ((unint64_t)v34 < a3);
      Swift::Int v63 = v6;
    }
LABEL_45:
    sub_100F69B50((void **)&v63, (const void **)&v62, &v61);
    return 1;
  }
LABEL_46:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006EEFDC(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v43 = *(void *)(v12 - 8);
  uint64_t result = __chkstk_darwin(v12, v13);
  id v42 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = a4;
  uint64_t v17 = a4 + 64;
  uint64_t v16 = *(void *)(a4 + 64);
  uint64_t v34 = -1 << *(unsigned char *)(a4 + 32);
  if (-v34 < 64) {
    uint64_t v18 = ~(-1 << -(char)v34);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v30 = ~v34;
    *a1 = v44;
    a1[1] = v17;
    a1[2] = v30;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v38 = a3;
  int64_t v20 = 0;
  a3 = 0;
  CGFloat v21 = v42;
  uint64_t v40 = v43 + 16;
  id v41 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56);
  uint64_t v39 = v43 + 48;
  id v37 = (uint64_t (**)(char *, char *, uint64_t))(v43 + 32);
  uint64_t v35 = v17;
  int64_t v36 = (unint64_t)(63 - v34) >> 6;
  int64_t v32 = v36 - 1;
  double v33 = a1;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v23 = v22 | (v20 << 6);
  while (1)
  {
    uint64_t v27 = v43;
    uint64_t v28 = *(void *)(v43 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(v11, *(void *)(v44 + 48) + v28 * v23, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v11, 0, 1, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v11, 1, v12) == 1)
    {
      uint64_t v17 = v35;
      goto LABEL_38;
    }
    ++a3;
    double v29 = *v37;
    (*v37)(v21, v11, v12);
    uint64_t result = v29(a2, v21, v12);
    if (a3 == v38)
    {
      a3 = v38;
      a1 = v33;
      uint64_t v17 = v35;
      goto LABEL_39;
    }
    a2 += v28;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    uint64_t v17 = v35;
    if (v24 >= v36) {
      goto LABEL_37;
    }
    unint64_t v25 = *(void *)(v35 + 8 * v24);
    if (!v25)
    {
      int64_t v26 = v20 + 2;
      ++v20;
      if (v24 + 1 >= v36) {
        goto LABEL_37;
      }
      unint64_t v25 = *(void *)(v35 + 8 * v26);
      if (v25) {
        goto LABEL_14;
      }
      int64_t v20 = v24 + 1;
      if (v24 + 2 >= v36) {
        goto LABEL_37;
      }
      unint64_t v25 = *(void *)(v35 + 8 * (v24 + 2));
      if (v25)
      {
        v24 += 2;
      }
      else
      {
        int64_t v20 = v24 + 2;
        if (v24 + 3 >= v36) {
          goto LABEL_37;
        }
        unint64_t v25 = *(void *)(v35 + 8 * (v24 + 3));
        if (!v25)
        {
          int64_t v26 = v24 + 4;
          int64_t v20 = v24 + 3;
          if (v24 + 4 < v36)
          {
            unint64_t v25 = *(void *)(v35 + 8 * v26);
            if (!v25)
            {
              while (1)
              {
                int64_t v24 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_42;
                }
                if (v24 >= v36)
                {
                  int64_t v20 = v32;
                  goto LABEL_37;
                }
                unint64_t v25 = *(void *)(v35 + 8 * v24);
                ++v26;
                if (v25) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v24 = v26;
            goto LABEL_21;
          }
LABEL_37:
          (*v41)(v11, 1, 1, v12);
          unint64_t v19 = 0;
LABEL_38:
          sub_100522F00((uint64_t)v11, (uint64_t *)&unk_101674520);
          a1 = v33;
          goto LABEL_39;
        }
        v24 += 3;
      }
    }
LABEL_21:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v20 = v24;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1006EF3D0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1006F2048(a1, a2, a3, a4, (void (*)(void))type metadata accessor for CRLStyledItem, (unint64_t *)&qword_10167BEC0, (void (*)(uint64_t))type metadata accessor for CRLStyledItem);
}

void *sub_1006EF404(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1006F2048(a1, a2, a3, a4, (void (*)(void))type metadata accessor for CRLBoardItem, (unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
}

uint64_t sub_1006EF438(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Swift::Int v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v13 = 0;
LABEL_36:
    void *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    int64_t v12 = 0;
    uint64_t v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v22 = -1 << *(unsigned char *)(a4 + 32);
  while (v9)
  {
    unint64_t v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    uint64_t result = sub_10050BF84(*(void *)(a4 + 48) + 40 * v16, (uint64_t)v23);
    uint64_t v17 = v24;
    long long v18 = v23[1];
    *(_OWORD *)uint64_t v11 = v23[0];
    *(_OWORD *)(v11 + 16) = v18;
    *(void *)(v11 + 32) = v17;
    v11 += 40;
    if (v13 == a3)
    {
      uint64_t v13 = a3;
LABEL_35:
      uint64_t v7 = v22;
      goto LABEL_36;
    }
  }
  int64_t v19 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v19 >= v14) {
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v19);
  if (v20) {
    goto LABEL_23;
  }
  int64_t v21 = v12 + 2;
  ++v12;
  if (v19 + 1 >= v14) {
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20) {
    goto LABEL_16;
  }
  int64_t v12 = v19 + 1;
  if (v19 + 2 >= v14) {
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v6 + 8 * (v19 + 2));
  if (v20)
  {
    v19 += 2;
    goto LABEL_23;
  }
  int64_t v12 = v19 + 2;
  if (v19 + 3 >= v14) {
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v6 + 8 * (v19 + 3));
  if (v20)
  {
    v19 += 3;
    goto LABEL_23;
  }
  int64_t v21 = v19 + 4;
  int64_t v12 = v19 + 3;
  if (v19 + 4 >= v14)
  {
LABEL_34:
    unint64_t v9 = 0;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
LABEL_16:
    int64_t v19 = v21;
LABEL_23:
    unint64_t v9 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v19 << 6);
    int64_t v12 = v19;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v19 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v19 >= v14)
    {
      int64_t v12 = v14 - 1;
      goto LABEL_34;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void *sub_1006EF644(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1006EF7D8(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *unint64_t v11 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_retain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1006EF9D4(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1006F2048(a1, a2, a3, a4, (void (*)(void))type metadata accessor for CRLSceneInfo, &qword_10169FA90, (void (*)(uint64_t))type metadata accessor for CRLSceneInfo);
}

uint64_t sub_1006EFA08(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v8 - 8, v9);
  unint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v43 = *(void *)(v12 - 8);
  uint64_t result = __chkstk_darwin(v12, v13);
  id v42 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = a4;
  uint64_t v17 = a4 + 56;
  uint64_t v16 = *(void *)(a4 + 56);
  uint64_t v34 = -1 << *(unsigned char *)(a4 + 32);
  if (-v34 < 64) {
    uint64_t v18 = ~(-1 << -(char)v34);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v30 = ~v34;
    *a1 = v44;
    a1[1] = v17;
    a1[2] = v30;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v38 = a3;
  int64_t v20 = 0;
  a3 = 0;
  int64_t v21 = v42;
  uint64_t v40 = v43 + 16;
  id v41 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56);
  uint64_t v39 = v43 + 48;
  id v37 = (uint64_t (**)(char *, char *, uint64_t))(v43 + 32);
  uint64_t v35 = v17;
  int64_t v36 = (unint64_t)(63 - v34) >> 6;
  int64_t v32 = v36 - 1;
  double v33 = a1;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v23 = v22 | (v20 << 6);
  while (1)
  {
    uint64_t v27 = v43;
    uint64_t v28 = *(void *)(v43 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(v11, *(void *)(v44 + 48) + v28 * v23, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v11, 0, 1, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v11, 1, v12) == 1)
    {
      uint64_t v17 = v35;
      goto LABEL_38;
    }
    ++a3;
    double v29 = *v37;
    (*v37)(v21, v11, v12);
    uint64_t result = v29(a2, v21, v12);
    if (a3 == v38)
    {
      a3 = v38;
      a1 = v33;
      uint64_t v17 = v35;
      goto LABEL_39;
    }
    a2 += v28;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    uint64_t v17 = v35;
    if (v24 >= v36) {
      goto LABEL_37;
    }
    unint64_t v25 = *(void *)(v35 + 8 * v24);
    if (!v25)
    {
      int64_t v26 = v20 + 2;
      ++v20;
      if (v24 + 1 >= v36) {
        goto LABEL_37;
      }
      unint64_t v25 = *(void *)(v35 + 8 * v26);
      if (v25) {
        goto LABEL_14;
      }
      int64_t v20 = v24 + 1;
      if (v24 + 2 >= v36) {
        goto LABEL_37;
      }
      unint64_t v25 = *(void *)(v35 + 8 * (v24 + 2));
      if (v25)
      {
        v24 += 2;
      }
      else
      {
        int64_t v20 = v24 + 2;
        if (v24 + 3 >= v36) {
          goto LABEL_37;
        }
        unint64_t v25 = *(void *)(v35 + 8 * (v24 + 3));
        if (!v25)
        {
          int64_t v26 = v24 + 4;
          int64_t v20 = v24 + 3;
          if (v24 + 4 < v36)
          {
            unint64_t v25 = *(void *)(v35 + 8 * v26);
            if (!v25)
            {
              while (1)
              {
                int64_t v24 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_42;
                }
                if (v24 >= v36)
                {
                  int64_t v20 = v32;
                  goto LABEL_37;
                }
                unint64_t v25 = *(void *)(v35 + 8 * v24);
                ++v26;
                if (v25) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v24 = v26;
            goto LABEL_21;
          }
LABEL_37:
          (*v41)(v11, 1, 1, v12);
          unint64_t v19 = 0;
LABEL_38:
          sub_100522F00((uint64_t)v11, (uint64_t *)&unk_101674520);
          a1 = v33;
          goto LABEL_39;
        }
        v24 += 3;
      }
    }
LABEL_21:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v20 = v24;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1006EFDFC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v13 = 0;
LABEL_36:
    void *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    int64_t v12 = 0;
    uint64_t v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
  while (v9)
  {
    unint64_t v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    sub_1005498A4(*(void *)(a4 + 56) + 40 * v16, (uint64_t)v21);
    sub_10053974C(v21, (uint64_t)v22);
    uint64_t result = sub_10053974C(v22, v11);
    v11 += 40;
    if (v13 == a3)
    {
      uint64_t v13 = a3;
LABEL_35:
      uint64_t v7 = v20;
      goto LABEL_36;
    }
  }
  int64_t v17 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v17 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v17);
  if (v18) {
    goto LABEL_23;
  }
  int64_t v19 = v12 + 2;
  ++v12;
  if (v17 + 1 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_16;
  }
  int64_t v12 = v17 + 1;
  if (v17 + 2 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * (v17 + 2));
  if (v18)
  {
    v17 += 2;
    goto LABEL_23;
  }
  int64_t v12 = v17 + 2;
  if (v17 + 3 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * (v17 + 3));
  if (v18)
  {
    v17 += 3;
    goto LABEL_23;
  }
  int64_t v19 = v17 + 4;
  int64_t v12 = v17 + 3;
  if (v17 + 4 >= v14)
  {
LABEL_34:
    unint64_t v9 = 0;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_16:
    int64_t v17 = v19;
LABEL_23:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      int64_t v12 = v14 - 1;
      goto LABEL_34;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_1006F000C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1006F004C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for CRLBoardEntity();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8, v10);
  int64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  unint64_t v16 = (char *)&v30 - v15;
  uint64_t v35 = a4;
  uint64_t v18 = a4 + 64;
  uint64_t v17 = *(void *)(a4 + 64);
  uint64_t v32 = -1 << *(unsigned char *)(a4 + 32);
  if (-v32 < 64) {
    uint64_t v19 = ~(-1 << -(char)v32);
  }
  else {
    uint64_t v19 = -1;
  }
  unint64_t v20 = v19 & v17;
  if (!a2)
  {
    int64_t v21 = 0;
LABEL_34:
    uint64_t v29 = ~v32;
    *a1 = v35;
    a1[1] = v18;
    a1[2] = v29;
    a1[3] = v21;
    a1[4] = v20;
    return;
  }
  if (!a3)
  {
    int64_t v21 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v31 = a1;
  int64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v33 = v18;
  int64_t v34 = (unint64_t)(63 - v32) >> 6;
  int64_t v30 = v34 - 1;
  if (!v20) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v23 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  unint64_t v24 = v23 | (v21 << 6);
  while (1)
  {
    ++v22;
    uint64_t v28 = *(void *)(v9 + 72);
    sub_1006F27F4(*(void *)(v35 + 56) + v28 * v24, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    sub_1006F285C((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    sub_1006F285C((uint64_t)v16, a2, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    if (v22 == a3) {
      goto LABEL_33;
    }
    a2 += v28;
    if (v20) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v25 >= v34)
    {
      unint64_t v20 = 0;
LABEL_33:
      a1 = v31;
      uint64_t v18 = v33;
      goto LABEL_34;
    }
    uint64_t v18 = v33;
    unint64_t v26 = *(void *)(v33 + 8 * v25);
    if (!v26) {
      break;
    }
LABEL_18:
    unint64_t v20 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v21 = v25;
  }
  v21 += 2;
  if (v25 + 1 >= v34)
  {
    unint64_t v20 = 0;
    int64_t v21 = v25;
LABEL_39:
    a1 = v31;
    goto LABEL_34;
  }
  unint64_t v26 = *(void *)(v33 + 8 * v21);
  if (v26) {
    goto LABEL_14;
  }
  int64_t v27 = v25 + 2;
  if (v25 + 2 >= v34) {
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v33 + 8 * v27);
  if (v26) {
    goto LABEL_17;
  }
  int64_t v21 = v25 + 3;
  if (v25 + 3 >= v34)
  {
    unint64_t v20 = 0;
    int64_t v21 = v25 + 2;
    goto LABEL_39;
  }
  unint64_t v26 = *(void *)(v33 + 8 * v21);
  if (v26)
  {
LABEL_14:
    int64_t v25 = v21;
    goto LABEL_18;
  }
  int64_t v27 = v25 + 4;
  if (v25 + 4 >= v34)
  {
LABEL_36:
    unint64_t v20 = 0;
    goto LABEL_39;
  }
  unint64_t v26 = *(void *)(v33 + 8 * v27);
  if (v26)
  {
LABEL_17:
    int64_t v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v34)
    {
      unint64_t v20 = 0;
      int64_t v21 = v30;
      goto LABEL_39;
    }
    unint64_t v26 = *(void *)(v33 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
}

uint64_t sub_1006F0374(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1006F0574(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = a4 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a4 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v10 = 0;
    uint64_t v8 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v31;
    result[2] = ~v5;
    result[3] = v10;
    result[4] = v7;
    return (void *)v8;
  }
  uint64_t v8 = a3;
  if (!a3)
  {
    int64_t v10 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  unint64_t v9 = a2;
  uint64_t v28 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v29 = result;
  int64_t v10 = 0;
  uint64_t v11 = 0;
  int64_t v30 = (unint64_t)(63 - v5) >> 6;
  if (!v7) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v13 = v12 | (v10 << 6);
  while (1)
  {
    ++v11;
    int64_t v17 = (void *)(*(void *)(a4 + 56) + (v13 << 6));
    uint64_t v18 = v17[1];
    uint64_t v19 = v17[2];
    unint64_t v20 = (void *)v17[3];
    uint64_t v21 = (void *)v17[4];
    uint64_t v22 = v17[5];
    uint64_t v23 = v17[6];
    uint64_t v24 = v17[7];
    *unint64_t v9 = *v17;
    v9[1] = v18;
    _OWORD v9[2] = v19;
    v9[3] = v20;
    v9[4] = v21;
    v9[5] = v22;
    v9[6] = v23;
    v9[7] = v24;
    if (v11 == v8)
    {
      id v26 = v21;
      swift_retain();
      swift_retain();
      swift_retain();
      id v27 = v20;
      goto LABEL_38;
    }
    v9 += 8;
    id v25 = v21;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t result = v20;
    if (v7) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v14 >= v30) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v31 + 8 * v14);
    if (!v15)
    {
      v10 += 2;
      if (v14 + 1 >= v30)
      {
        unint64_t v7 = 0;
        int64_t v10 = v14;
      }
      else
      {
        unint64_t v15 = *(void *)(v31 + 8 * v10);
        if (v15) {
          goto LABEL_14;
        }
        int64_t v16 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v31 + 8 * v16);
        if (v15)
        {
LABEL_17:
          int64_t v14 = v16;
          goto LABEL_18;
        }
        int64_t v10 = v14 + 3;
        if (v14 + 3 < v30)
        {
          unint64_t v15 = *(void *)(v31 + 8 * v10);
          if (v15)
          {
LABEL_14:
            int64_t v14 = v10;
            goto LABEL_18;
          }
          int64_t v16 = v14 + 4;
          if (v14 + 4 >= v30)
          {
LABEL_33:
            unint64_t v7 = 0;
            goto LABEL_37;
          }
          unint64_t v15 = *(void *)(v31 + 8 * v16);
          if (!v15)
          {
            while (1)
            {
              int64_t v14 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_42;
              }
              if (v14 >= v30)
              {
                unint64_t v7 = 0;
                int64_t v10 = v30 - 1;
                goto LABEL_37;
              }
              unint64_t v15 = *(void *)(v31 + 8 * v14);
              ++v16;
              if (v15) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v7 = 0;
        int64_t v10 = v14 + 2;
      }
LABEL_37:
      uint64_t v8 = v11;
LABEL_38:
      uint64_t v5 = v28;
      uint64_t result = v29;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v14 << 6);
    int64_t v10 = v14;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1006F080C(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  unint64_t v7 = (void *)result;
  if ((a4 & 0xC000000000000001) == 0)
  {
    int64_t v10 = 0;
    uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
    uint64_t v8 = a4 + 56;
    uint64_t v9 = ~v20;
    uint64_t v21 = -v20;
    if (v21 < 64) {
      uint64_t v22 = ~(-1 << v21);
    }
    else {
      uint64_t v22 = -1;
    }
    unint64_t v11 = v22 & *(void *)(a4 + 56);
    uint64_t v24 = (void *)result;
    if (a2) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v12 = 0;
    goto LABEL_46;
  }
  __CocoaSet.makeIterator()();
  type metadata accessor for CalculateExpression();
  sub_1006EE290((unint64_t *)&unk_10167BEE0, (void (*)(uint64_t))&type metadata accessor for CalculateExpression);
  uint64_t result = Set.Iterator.init(_cocoa:)();
  uint64_t v4 = v27;
  uint64_t v8 = v28;
  uint64_t v9 = v29;
  int64_t v10 = v30;
  unint64_t v11 = v31;
  uint64_t v24 = v7;
  if (!v6) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v12 = 0;
  int64_t v25 = (unint64_t)(v9 + 64) >> 6;
  uint64_t v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_45;
      }
      type metadata accessor for CalculateExpression();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v15 = v26;
      uint64_t result = swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_45;
      }
      goto LABEL_8;
    }
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    int64_t v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_48:
      __break(1u);
      return result;
    }
    if (v16 >= v25)
    {
      unint64_t v11 = 0;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    if (v17) {
      goto LABEL_23;
    }
    int64_t v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      unint64_t v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25) {
        goto LABEL_42;
      }
      unint64_t v17 = *(void *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        int64_t v16 = v10 + 3;
        goto LABEL_23;
      }
      int64_t v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        unint64_t v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      unint64_t v17 = *(void *)(v8 + 8 * v18);
      if (!v17) {
        break;
      }
    }
    int64_t v16 = v18;
LABEL_23:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v10 = v16;
LABEL_7:
    uint64_t v15 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = swift_retain();
    if (!v15) {
      goto LABEL_45;
    }
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      uint64_t v12 = a3;
LABEL_45:
      uint64_t v9 = v23;
      goto LABEL_46;
    }
  }
  int64_t v16 = v10 + 5;
  if (v10 + 5 >= v25)
  {
LABEL_42:
    unint64_t v11 = 0;
    int64_t v10 = v18;
    goto LABEL_45;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v16);
  if (v17) {
    goto LABEL_23;
  }
  int64_t v19 = v10 + 6;
  while (v25 != v19)
  {
    unint64_t v17 = *(void *)(v8 + 8 * v19++);
    if (v17)
    {
      int64_t v16 = v19 - 1;
      goto LABEL_23;
    }
  }
  unint64_t v11 = 0;
  int64_t v10 = v25 - 1;
  uint64_t v9 = v23;
LABEL_46:
  *uint64_t v24 = v4;
  v24[1] = v8;
  v24[2] = v9;
  void v24[3] = v10;
  v24[4] = v11;
  return v12;
}

void *sub_1006F0B28(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1006F0B44(a1, a2, a3, a4, (unint64_t *)&qword_101674210, (uint64_t)CKRecordZoneID_ptr, (unint64_t *)&qword_101674218);
}

void *sub_1006F0B44(void *result, void *a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t v7 = a4;
  uint64_t v9 = a2;
  uint64_t v29 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_10050BF48(0, a5);
    sub_10058EF24(a7, a5);
    uint64_t result = (void *)Set.Iterator.init(_cocoa:)();
    uint64_t v7 = v33;
    uint64_t v12 = v34;
    uint64_t v13 = v35;
    int64_t v14 = v36;
    unint64_t v15 = v37;
    if (v9) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v16 = 0;
    goto LABEL_38;
  }
  int64_t v14 = 0;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v12 = a4 + 56;
  uint64_t v13 = ~v24;
  uint64_t v25 = -v24;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  else {
    uint64_t v26 = -1;
  }
  unint64_t v15 = v26 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v16 = 0;
LABEL_38:
    uint64_t v27 = v29;
LABEL_41:
    *uint64_t v27 = v7;
    v27[1] = v12;
    void v27[2] = v13;
    v27[3] = v14;
    v27[4] = v15;
    return (void *)v16;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v16 = 0;
  int64_t v30 = (unint64_t)(v13 + 64) >> 6;
  uint64_t v28 = v13;
  while (1)
  {
    if (v7 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_40;
      }
      sub_10050BF48(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v19 = v32;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v32) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v14 << 6);
      goto LABEL_7;
    }
    int64_t v20 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v20 >= v30)
    {
      unint64_t v15 = 0;
      goto LABEL_40;
    }
    unint64_t v21 = *(void *)(v12 + 8 * v20);
    if (v21) {
      goto LABEL_23;
    }
    int64_t v22 = v14 + 2;
    if (v14 + 2 >= v30)
    {
      unint64_t v15 = 0;
      ++v14;
      goto LABEL_40;
    }
    unint64_t v21 = *(void *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v30) {
        goto LABEL_44;
      }
      unint64_t v21 = *(void *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        int64_t v20 = v14 + 3;
        goto LABEL_23;
      }
      int64_t v22 = v14 + 4;
      if (v14 + 4 >= v30)
      {
        unint64_t v15 = 0;
        v14 += 3;
        goto LABEL_40;
      }
      unint64_t v21 = *(void *)(v12 + 8 * v22);
      if (!v21)
      {
        int64_t v20 = v14 + 5;
        if (v14 + 5 >= v30)
        {
LABEL_44:
          unint64_t v15 = 0;
          int64_t v14 = v22;
          goto LABEL_40;
        }
        unint64_t v21 = *(void *)(v12 + 8 * v20);
        if (!v21)
        {
          int64_t v23 = v14 + 6;
          while (v30 != v23)
          {
            unint64_t v21 = *(void *)(v12 + 8 * v23++);
            if (v21)
            {
              int64_t v20 = v23 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v15 = 0;
          int64_t v14 = v30 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v20 = v22;
LABEL_23:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v20 << 6);
    int64_t v14 = v20;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v7 + 48) + 8 * v18);
    id v19 = result;
    if (!result) {
      goto LABEL_40;
    }
LABEL_8:
    ++v16;
    *v9++ = v19;
    if (v16 == a3)
    {
      uint64_t v16 = a3;
LABEL_40:
      uint64_t v13 = v28;
      uint64_t v27 = v29;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

void *sub_1006F0E40(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1006F0B44(a1, a2, a3, a4, &qword_10167BED0, (uint64_t)CKRecordID_ptr, &qword_10167BED8);
}

void sub_1006F0E5C(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v8 - 8, v9);
  unint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v44 = *(void *)(v12 - 8);
  __n128 v14 = __chkstk_darwin(v12, v13);
  uint64_t v43 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = a4;
  uint64_t v17 = a4 + 64;
  uint64_t v16 = *(void *)(a4 + 64);
  uint64_t v35 = -1 << *(unsigned char *)(a4 + 32);
  if (-v35 < 64) {
    uint64_t v18 = ~(-1 << -(char)v35);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  if (!a2)
  {
    int64_t v20 = 0;
LABEL_39:
    uint64_t v31 = ~v35;
    *a1 = v45;
    a1[1] = v17;
    a1[2] = v31;
    a1[3] = v20;
    a1[4] = v19;
    return;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v39 = a3;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  int64_t v22 = v43;
  uint64_t v41 = v44 + 16;
  id v42 = (void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v44 + 56);
  uint64_t v40 = v44 + 48;
  uint64_t v38 = (void (**)(char *, char *, uint64_t))(v44 + 32);
  uint64_t v36 = v17;
  int64_t v37 = (unint64_t)(63 - v35) >> 6;
  int64_t v33 = v37 - 1;
  uint64_t v34 = a1;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v23 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v24 = v23 | (v20 << 6);
  while (1)
  {
    uint64_t v28 = v44;
    uint64_t v29 = *(void *)(v44 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v44 + 16))(v11, *(void *)(v45 + 56) + v29 * v24, v12, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v11, 0, 1, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v11, 1, v12) == 1)
    {
      uint64_t v17 = v36;
      goto LABEL_38;
    }
    ++v21;
    int64_t v30 = *v38;
    (*v38)(v22, v11, v12);
    v30(a2, v22, v12);
    if (v21 == v39)
    {
      a1 = v34;
      uint64_t v17 = v36;
      goto LABEL_39;
    }
    a2 += v29;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    uint64_t v17 = v36;
    if (v25 >= v37) {
      goto LABEL_37;
    }
    unint64_t v26 = *(void *)(v36 + 8 * v25);
    if (!v26)
    {
      int64_t v27 = v20 + 2;
      ++v20;
      if (v25 + 1 >= v37) {
        goto LABEL_37;
      }
      unint64_t v26 = *(void *)(v36 + 8 * v27);
      if (v26) {
        goto LABEL_14;
      }
      int64_t v20 = v25 + 1;
      if (v25 + 2 >= v37) {
        goto LABEL_37;
      }
      unint64_t v26 = *(void *)(v36 + 8 * (v25 + 2));
      if (v26)
      {
        v25 += 2;
      }
      else
      {
        int64_t v20 = v25 + 2;
        if (v25 + 3 >= v37) {
          goto LABEL_37;
        }
        unint64_t v26 = *(void *)(v36 + 8 * (v25 + 3));
        if (!v26)
        {
          int64_t v27 = v25 + 4;
          int64_t v20 = v25 + 3;
          if (v25 + 4 < v37)
          {
            unint64_t v26 = *(void *)(v36 + 8 * v27);
            if (!v26)
            {
              while (1)
              {
                int64_t v25 = v27 + 1;
                if (__OFADD__(v27, 1)) {
                  goto LABEL_42;
                }
                if (v25 >= v37)
                {
                  int64_t v20 = v33;
                  goto LABEL_37;
                }
                unint64_t v26 = *(void *)(v36 + 8 * v25);
                ++v27;
                if (v26) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v25 = v27;
            goto LABEL_21;
          }
LABEL_37:
          (*v42)(v11, 1, 1, v12, v14);
          unint64_t v19 = 0;
LABEL_38:
          sub_100522F00((uint64_t)v11, (uint64_t *)&unk_101674520);
          a1 = v34;
          goto LABEL_39;
        }
        v25 += 3;
      }
    }
LABEL_21:
    unint64_t v19 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v20 = v25;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

void sub_1006F1250(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UTType();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v44 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = __chkstk_darwin(v12, v13);
  uint64_t v43 = (char *)&v34 - v15;
  uint64_t v45 = a4;
  uint64_t v18 = *(void *)(a4 + 56);
  uint64_t v17 = a4 + 56;
  uint64_t v16 = v18;
  uint64_t v39 = v17;
  uint64_t v19 = -1 << *(unsigned char *)(v17 - 24);
  if (-v19 < 64) {
    uint64_t v20 = ~(-1 << -(char)v19);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v16;
  if (!a2)
  {
    int64_t v22 = 0;
LABEL_37:
    uint64_t v33 = v39;
    *a1 = v45;
    a1[1] = v33;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return;
  }
  if (!a3)
  {
    int64_t v22 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v36 = -1 << *(unsigned char *)(v17 - 24);
  int64_t v37 = a1;
  int64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v40 = v9 + 32;
  uint64_t v41 = v9 + 16;
  int64_t v38 = (unint64_t)(63 - v19) >> 6;
  int64_t v35 = v38 - 1;
  uint64_t v42 = a3;
  unint64_t v24 = v43;
  if (!v21) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v25 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  unint64_t v26 = v25 | (v22 << 6);
  while (1)
  {
    ++v23;
    int64_t v30 = v44;
    uint64_t v31 = *(void *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16))(v44, *(void *)(v45 + 48) + v31 * v26, v8, v14);
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v32(v24, v30, v8);
    v32(a2, v24, v8);
    if (v23 == v42) {
      goto LABEL_36;
    }
    a2 += v31;
    if (v21) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v27 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v27 >= v38) {
      goto LABEL_32;
    }
    unint64_t v28 = *(void *)(v39 + 8 * v27);
    if (!v28) {
      break;
    }
LABEL_18:
    unint64_t v21 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v27 << 6);
    int64_t v22 = v27;
  }
  v22 += 2;
  if (v27 + 1 >= v38)
  {
    unint64_t v21 = 0;
    int64_t v22 = v27;
    goto LABEL_36;
  }
  unint64_t v28 = *(void *)(v39 + 8 * v22);
  if (v28) {
    goto LABEL_14;
  }
  int64_t v29 = v27 + 2;
  if (v27 + 2 >= v38) {
    goto LABEL_32;
  }
  unint64_t v28 = *(void *)(v39 + 8 * v29);
  if (v28) {
    goto LABEL_17;
  }
  int64_t v22 = v27 + 3;
  if (v27 + 3 >= v38)
  {
    unint64_t v21 = 0;
    int64_t v22 = v27 + 2;
    goto LABEL_36;
  }
  unint64_t v28 = *(void *)(v39 + 8 * v22);
  if (v28)
  {
LABEL_14:
    int64_t v27 = v22;
    goto LABEL_18;
  }
  int64_t v29 = v27 + 4;
  if (v27 + 4 >= v38)
  {
LABEL_32:
    unint64_t v21 = 0;
LABEL_36:
    uint64_t v19 = v36;
    a1 = v37;
    goto LABEL_37;
  }
  unint64_t v28 = *(void *)(v39 + 8 * v29);
  if (v28)
  {
LABEL_17:
    int64_t v27 = v29;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v27 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v27 >= v38)
    {
      unint64_t v21 = 0;
      int64_t v22 = v35;
      goto LABEL_36;
    }
    unint64_t v28 = *(void *)(v39 + 8 * v27);
    ++v29;
    if (v28) {
      goto LABEL_18;
    }
  }
LABEL_40:
  __break(1u);
}

void sub_1006F1598(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8, v10);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v30 - v15;
  uint64_t v35 = a4;
  uint64_t v18 = a4 + 64;
  uint64_t v17 = *(void *)(a4 + 64);
  uint64_t v32 = -1 << *(unsigned char *)(a4 + 32);
  if (-v32 < 64) {
    uint64_t v19 = ~(-1 << -(char)v32);
  }
  else {
    uint64_t v19 = -1;
  }
  unint64_t v20 = v19 & v17;
  if (!a2)
  {
    int64_t v21 = 0;
LABEL_34:
    uint64_t v29 = ~v32;
    *a1 = v35;
    a1[1] = v18;
    a1[2] = v29;
    a1[3] = v21;
    a1[4] = v20;
    return;
  }
  if (!a3)
  {
    int64_t v21 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v31 = a1;
  int64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v33 = v18;
  int64_t v34 = (unint64_t)(63 - v32) >> 6;
  int64_t v30 = v34 - 1;
  if (!v20) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v23 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  unint64_t v24 = v23 | (v21 << 6);
  while (1)
  {
    ++v22;
    uint64_t v28 = *(void *)(v9 + 72);
    sub_1006F27F4(*(void *)(v35 + 48) + v28 * v24, (uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
    sub_1006F285C((uint64_t)v12, (uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
    sub_1006F285C((uint64_t)v16, a2, type metadata accessor for CRLBoardIdentifier);
    if (v22 == a3) {
      goto LABEL_33;
    }
    a2 += v28;
    if (v20) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v25 >= v34)
    {
      unint64_t v20 = 0;
LABEL_33:
      a1 = v31;
      uint64_t v18 = v33;
      goto LABEL_34;
    }
    uint64_t v18 = v33;
    unint64_t v26 = *(void *)(v33 + 8 * v25);
    if (!v26) {
      break;
    }
LABEL_18:
    unint64_t v20 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v21 = v25;
  }
  v21 += 2;
  if (v25 + 1 >= v34)
  {
    unint64_t v20 = 0;
    int64_t v21 = v25;
LABEL_39:
    a1 = v31;
    goto LABEL_34;
  }
  unint64_t v26 = *(void *)(v33 + 8 * v21);
  if (v26) {
    goto LABEL_14;
  }
  int64_t v27 = v25 + 2;
  if (v25 + 2 >= v34) {
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v33 + 8 * v27);
  if (v26) {
    goto LABEL_17;
  }
  int64_t v21 = v25 + 3;
  if (v25 + 3 >= v34)
  {
    unint64_t v20 = 0;
    int64_t v21 = v25 + 2;
    goto LABEL_39;
  }
  unint64_t v26 = *(void *)(v33 + 8 * v21);
  if (v26)
  {
LABEL_14:
    int64_t v25 = v21;
    goto LABEL_18;
  }
  int64_t v27 = v25 + 4;
  if (v25 + 4 >= v34)
  {
LABEL_36:
    unint64_t v20 = 0;
    goto LABEL_39;
  }
  unint64_t v26 = *(void *)(v33 + 8 * v27);
  if (v26)
  {
LABEL_17:
    int64_t v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v34)
    {
      unint64_t v20 = 0;
      int64_t v21 = v30;
      goto LABEL_39;
    }
    unint64_t v26 = *(void *)(v33 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
}

void *sub_1006F18BC(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(a4 + 48) + 32 * v16;
    int64_t v21 = *(void **)v20;
    uint64_t v22 = *(void **)(v20 + 8);
    uint64_t v23 = *(void *)(v20 + 16);
    unsigned __int8 v24 = *(unsigned char *)(v20 + 24);
    *(void *)uint64_t v11 = *(void *)v20;
    *(void *)(v11 + 8) = v22;
    *(void *)(v11 + 16) = v23;
    *(unsigned char *)(v11 + 24) = v24;
    if (v13 == v10)
    {
      sub_10053BB6C(v21, v22, v23, v24);
      goto LABEL_38;
    }
    v11 += 32;
    uint64_t result = sub_10053BB6C(v21, v22, v23, v24);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1006F1ACC(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_1006F1CCC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1006F1D0C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  uint64_t v40 = a6;
  uint64_t v12 = a5(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12 - 8, v14);
  unint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v34 - v19;
  uint64_t v41 = a4;
  uint64_t v22 = a4 + 56;
  uint64_t v21 = *(void *)(a4 + 56);
  uint64_t v37 = -1 << *(unsigned char *)(a4 + 32);
  if (-v37 < 64) {
    uint64_t v23 = ~(-1 << -(char)v37);
  }
  else {
    uint64_t v23 = -1;
  }
  unint64_t v24 = v23 & v21;
  if (!a2)
  {
    int64_t v25 = 0;
LABEL_34:
    uint64_t v33 = ~v37;
    *a1 = v41;
    a1[1] = v22;
    a1[2] = v33;
    a1[3] = v25;
    a1[4] = v24;
    return;
  }
  if (!a3)
  {
    int64_t v25 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v36 = a1;
  int64_t v25 = 0;
  uint64_t v26 = 0;
  uint64_t v38 = v22;
  int64_t v39 = (unint64_t)(63 - v37) >> 6;
  int64_t v35 = v39 - 1;
  if (!v24) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v27 = __clz(__rbit64(v24));
  v24 &= v24 - 1;
  unint64_t v28 = v27 | (v25 << 6);
  while (1)
  {
    ++v26;
    uint64_t v32 = *(void *)(v13 + 72);
    sub_1006F27F4(*(void *)(v41 + 48) + v32 * v28, (uint64_t)v16, v40);
    sub_1006F285C((uint64_t)v16, (uint64_t)v20, a7);
    sub_1006F285C((uint64_t)v20, a2, a7);
    if (v26 == a3) {
      goto LABEL_33;
    }
    a2 += v32;
    if (v24) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v29 = v25 + 1;
    if (__OFADD__(v25, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v29 >= v39)
    {
      unint64_t v24 = 0;
LABEL_33:
      a1 = v36;
      uint64_t v22 = v38;
      goto LABEL_34;
    }
    uint64_t v22 = v38;
    unint64_t v30 = *(void *)(v38 + 8 * v29);
    if (!v30) {
      break;
    }
LABEL_18:
    unint64_t v24 = (v30 - 1) & v30;
    unint64_t v28 = __clz(__rbit64(v30)) + (v29 << 6);
    int64_t v25 = v29;
  }
  v25 += 2;
  if (v29 + 1 >= v39)
  {
    unint64_t v24 = 0;
    int64_t v25 = v29;
LABEL_39:
    a1 = v36;
    goto LABEL_34;
  }
  unint64_t v30 = *(void *)(v38 + 8 * v25);
  if (v30) {
    goto LABEL_14;
  }
  int64_t v31 = v29 + 2;
  if (v29 + 2 >= v39) {
    goto LABEL_36;
  }
  unint64_t v30 = *(void *)(v38 + 8 * v31);
  if (v30) {
    goto LABEL_17;
  }
  int64_t v25 = v29 + 3;
  if (v29 + 3 >= v39)
  {
    unint64_t v24 = 0;
    int64_t v25 = v29 + 2;
    goto LABEL_39;
  }
  unint64_t v30 = *(void *)(v38 + 8 * v25);
  if (v30)
  {
LABEL_14:
    int64_t v29 = v25;
    goto LABEL_18;
  }
  int64_t v31 = v29 + 4;
  if (v29 + 4 >= v39)
  {
LABEL_36:
    unint64_t v24 = 0;
    goto LABEL_39;
  }
  unint64_t v30 = *(void *)(v38 + 8 * v31);
  if (v30)
  {
LABEL_17:
    int64_t v29 = v31;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v29 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v29 >= v39)
    {
      unint64_t v24 = 0;
      int64_t v25 = v35;
      goto LABEL_39;
    }
    unint64_t v30 = *(void *)(v38 + 8 * v29);
    ++v31;
    if (v30) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
}

void *sub_1006F2014(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1006F2048(a1, a2, a3, a4, (void (*)(void))type metadata accessor for CRLCollaborationParticipant, (unint64_t *)&unk_10167C500, (void (*)(uint64_t))type metadata accessor for CRLCollaborationParticipant);
}

void *sub_1006F2048(void *result, void *a2, uint64_t a3, uint64_t a4, void (*a5)(void), unint64_t *a6, void (*a7)(uint64_t))
{
  uint64_t v7 = a4;
  unint64_t v9 = a2;
  unint64_t v30 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    a5(0);
    sub_1006EE290(a6, a7);
    uint64_t result = (void *)Set.Iterator.init(_cocoa:)();
    uint64_t v7 = v34;
    uint64_t v13 = v35;
    uint64_t v14 = v36;
    int64_t v15 = v37;
    unint64_t v16 = v38;
    if (v9) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v17 = 0;
    goto LABEL_38;
  }
  int64_t v15 = 0;
  uint64_t v25 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v13 = a4 + 56;
  uint64_t v14 = ~v25;
  uint64_t v26 = -v25;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  else {
    uint64_t v27 = -1;
  }
  unint64_t v16 = v27 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v17 = 0;
LABEL_38:
    unint64_t v28 = v30;
LABEL_41:
    *unint64_t v28 = v7;
    v28[1] = v13;
    _OWORD v28[2] = v14;
    v28[3] = v15;
    v28[4] = v16;
    return (void *)v17;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v17 = 0;
  int64_t v31 = (unint64_t)(v14 + 64) >> 6;
  uint64_t v29 = v14;
  while (1)
  {
    if (v7 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_40;
      }
      a5(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v20 = v33;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v33) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v15 << 6);
      goto LABEL_7;
    }
    int64_t v21 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v21 >= v31)
    {
      unint64_t v16 = 0;
      goto LABEL_40;
    }
    unint64_t v22 = *(void *)(v13 + 8 * v21);
    if (v22) {
      goto LABEL_23;
    }
    int64_t v23 = v15 + 2;
    if (v15 + 2 >= v31)
    {
      unint64_t v16 = 0;
      ++v15;
      goto LABEL_40;
    }
    unint64_t v22 = *(void *)(v13 + 8 * v23);
    if (!v22)
    {
      if (v15 + 3 >= v31) {
        goto LABEL_44;
      }
      unint64_t v22 = *(void *)(v13 + 8 * (v15 + 3));
      if (v22)
      {
        int64_t v21 = v15 + 3;
        goto LABEL_23;
      }
      int64_t v23 = v15 + 4;
      if (v15 + 4 >= v31)
      {
        unint64_t v16 = 0;
        v15 += 3;
        goto LABEL_40;
      }
      unint64_t v22 = *(void *)(v13 + 8 * v23);
      if (!v22)
      {
        int64_t v21 = v15 + 5;
        if (v15 + 5 >= v31)
        {
LABEL_44:
          unint64_t v16 = 0;
          int64_t v15 = v23;
          goto LABEL_40;
        }
        unint64_t v22 = *(void *)(v13 + 8 * v21);
        if (!v22)
        {
          int64_t v24 = v15 + 6;
          while (v31 != v24)
          {
            unint64_t v22 = *(void *)(v13 + 8 * v24++);
            if (v22)
            {
              int64_t v21 = v24 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v16 = 0;
          int64_t v15 = v31 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v21 = v23;
LABEL_23:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v21 << 6);
    int64_t v15 = v21;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v7 + 48) + 8 * v19);
    id v20 = result;
    if (!result) {
      goto LABEL_40;
    }
LABEL_8:
    ++v17;
    *v9++ = v20;
    if (v17 == a3)
    {
      uint64_t v17 = a3;
LABEL_40:
      uint64_t v14 = v29;
      unint64_t v28 = v30;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

unint64_t sub_1006F2354()
{
  unint64_t result = qword_10167BDD0;
  if (!qword_10167BDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167BDD0);
  }
  return result;
}

unint64_t sub_1006F23A8()
{
  unint64_t result = qword_10167BE10;
  if (!qword_10167BE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167BE10);
  }
  return result;
}

uint64_t sub_1006F23FC(uint64_t a1, char a2)
{
  if (a2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1006F2408(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1006F2468()
{
  unint64_t result = qword_10167BEB0;
  if (!qword_10167BEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167BEB0);
  }
  return result;
}

unint64_t sub_1006F24BC(unint64_t a1, unint64_t a2)
{
  if (a1 >= a2) {
    return a2;
  }
  else {
    return a1;
  }
}

id sub_1006F24D4(uint64_t a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC8Freeform11CRLWPLayout_defaultEdgeInset];
  __asm { FMOV            V0.2D, #4.0 }
  *uint64_t v3 = _Q0;
  v3[1] = _Q0;
  v1[OBJC_IVAR____TtC8Freeform11CRLWPLayout_textLayoutIsValid] = 0;
  uint64_t v9 = OBJC_IVAR____TtC8Freeform11CRLWPLayout__columns;
  uint64_t v10 = v1;
  *(void *)&v1[v9] = [objc_allocWithZone((Class)NSMutableArray) init];
  *(void *)&v10[OBJC_IVAR____TtC8Freeform11CRLWPLayout_geometryWhenLastInvalidated] = 0;
  uint64_t v11 = OBJC_IVAR____TtC8Freeform11CRLWPLayout_layoutDetailsFactory;
  *(void *)&v10[v11] = type metadata accessor for CRLWPLaidOutColumnProxy();
  type metadata accessor for CRLWPStorage();
  *(void *)&v10[OBJC_IVAR____TtC8Freeform11CRLWPLayout_wpStorage] = swift_dynamicCastClassUnconditional();
  swift_unknownObjectRetain();

  v13.receiver = v10;
  v13.super_class = (Class)type metadata accessor for CRLWPLayout();
  id result = [super initWithInfo:a1];
  if (!result) {
    __break(1u);
  }
  return result;
}

id sub_1006F25D8(double a1, double a2)
{
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_10171A478;
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10117E810;
  type metadata accessor for CGPoint(0);
  *(void *)(v6 + 56) = v7;
  *(double *)(v6 + 32) = a1;
  *(double *)(v6 + 40) = a2;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = sub_1005057FC((uint64_t *)&unk_10167C8C0);
  *(void *)(inited + 32) = v6;
  uint64_t v9 = (void *)qword_10171A478;
  id v10 = v5;
  swift_bridgeObjectRetain();
  id v11 = v9;
  sub_1006EAD90(v2, &v23);

  if (v23)
  {
    uint64_t v12 = *(void **)&v2[OBJC_IVAR____TtC8Freeform11CRLWPLayout_wpStorage];
    objc_super v13 = (char *)v23;
    id v14 = v12;
    int64_t v15 = (void *)sub_1008FC744();

    unint64_t v16 = (char *)[v15 range];
    uint64_t v17 = *(void *)&v13[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
    unint64_t v19 = &v16[v18];
    if ((uint64_t)&v16[v18] >= v17) {
      unint64_t v19 = *(char **)&v13[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
    }
    if (v17 >= (uint64_t)v16) {
      id v20 = v19;
    }
    else {
      id v20 = v16;
    }
    id v21 = [objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()) init:v20 caretAffinity:0];
    swift_release();
  }
  else
  {
    swift_release();
    id v21 = 0;
  }

  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1006F27B4()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1006F27EC(uint64_t a1)
{
  return sub_1008F2BE8(a1, *(void *)(v1 + 16));
}

uint64_t sub_1006F27F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1006F285C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1006F28D8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v40 = a1;
  uint64_t v41 = a2;
  uint64_t v2 = sub_1005057FC(&qword_10167BF18);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for URLResourceValues();
  uint64_t v6 = *(void *)(v43 - 8);
  __chkstk_darwin(v43, v7);
  int64_t v39 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_101676160);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  unint64_t v16 = (char *)&v39 - v15;
  uint64_t v17 = (void *)type metadata accessor for UTType();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, void *))(*(v17 - 1) + 56);
  uint64_t v42 = v16;
  v18(v16, 1, 1, v17);
  sub_1005057FC(&qword_10167BF20);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 32) = NSURLContentTypeKey;
  id v20 = NSURLContentTypeKey;
  sub_10050858C(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  URL.resourceValues(forKeys:)();
  uint64_t isEscapingClosureAtFileLocation = (uint64_t)v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = v43;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v5, 0, 1, v43);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v22) != 1) {
    goto LABEL_6;
  }
  sub_100522F00((uint64_t)v5, &qword_10167BF18);
  uint64_t v12 = v42;
  while ((v40 & 1) != 0)
  {
    id v23 = [objc_allocWithZone((Class)NSFileCoordinator) init];
    URL._bridgeToObjectiveC()(v24);
    uint64_t v26 = v25;
    uint64_t v5 = (char *)swift_allocObject();
    *((void *)v5 + 2) = v12;
    uint64_t v27 = swift_allocObject();
    unint64_t v28 = sub_1006F66DC;
    *(void *)(v27 + 16) = sub_1006F66DC;
    *(void *)(v27 + 24) = v5;
    double v49 = sub_1006F66F4;
    uint64_t v50 = v27;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = *(void *)"";
    double v47 = sub_1006F3260;
    double v48 = &unk_101510608;
    uint64_t v17 = _Block_copy(&aBlock);
    uint64_t v22 = v50;
    swift_retain();
    swift_release();
    [v23 coordinateReadingItemAtURL:v26 options:4 error:0 byAccessor:v17];

    _Block_release(v17);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      goto LABEL_15;
    }
    __break(1u);
LABEL_6:
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v39, v5, v22);
    uint64_t v29 = URLResourceValues.allValues.getter();
    if (*(void *)(v29 + 16))
    {
      id v30 = (id)isEscapingClosureAtFileLocation;
      uint64_t v31 = sub_10095609C(v30);
      uint64_t v32 = (uint64_t)v12;
      if (v33)
      {
        sub_100522D7C(*(void *)(v29 + 56) + 32 * v31, (uint64_t)&v44);
      }
      else
      {
        long long v44 = 0u;
        long long v45 = 0u;
      }
    }
    else
    {
      long long v44 = 0u;
      long long v45 = 0u;
      uint64_t v32 = (uint64_t)v12;
    }
    uint64_t v12 = v42;
    uint64_t v34 = v17;
    uint64_t v35 = v39;
    swift_bridgeObjectRelease();
    uint64_t v36 = *(void (**)(char *, uint64_t))(v6 + 8);
    v6 += 8;
    v36(v35, v22);
    if (*((void *)&v45 + 1))
    {
      sub_100575CE8(&v44, &aBlock);
      sub_100575CE8(&aBlock, &v44);
      int v37 = swift_dynamicCast();
      v18((char *)v32, v37 ^ 1u, 1, v34);
      sub_1006063BC(v32, (uint64_t)v12, (uint64_t *)&unk_101676160);
      break;
    }
    sub_100522F00((uint64_t)&v44, &qword_101672BF0);
  }
  unint64_t v28 = 0;
LABEL_15:
  sub_10051B3EC((uint64_t)v12, v41, (uint64_t *)&unk_101676160);
  return sub_1005174AC((uint64_t)v28);
}

uint64_t sub_1006F2E80(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a2;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101676160);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_10167BF18);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URLResourceValues();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005057FC(&qword_10167BF20);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 32) = NSURLContentTypeKey;
  unint64_t v16 = NSURLContentTypeKey;
  sub_10050858C(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  URL.promisedItemResourceValues(forKeys:)();
  uint64_t v17 = (uint64_t)v5;
  uint64_t v18 = v29;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    unint64_t v19 = &qword_10167BF18;
    id v20 = v9;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v9, v10);
    uint64_t v22 = URLResourceValues.allValues.getter();
    if (*(void *)(v22 + 16))
    {
      id v23 = v16;
      uint64_t v24 = sub_10095609C(v23);
      if (v25)
      {
        sub_100522D7C(*(void *)(v22 + 56) + 32 * v24, (uint64_t)&v30);
      }
      else
      {
        long long v30 = 0u;
        long long v31 = 0u;
      }
    }
    else
    {
      long long v30 = 0u;
      long long v31 = 0u;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    if (*((void *)&v31 + 1))
    {
      sub_100575CE8(&v30, v32);
      sub_100575CE8(v32, &v30);
      uint64_t v26 = type metadata accessor for UTType();
      int v27 = swift_dynamicCast();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v17, v27 ^ 1u, 1, v26);
      return sub_1006063BC(v17, v18, (uint64_t *)&unk_101676160);
    }
    unint64_t v19 = &qword_101672BF0;
    id v20 = (char *)&v30;
  }
  return sub_100522F00((uint64_t)v20, v19);
}

uint64_t sub_1006F3238(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1006F3260(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void (**)(char *))(a1 + 32);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  v7(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_1006F3344@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006F3510(a1, a2, (uint64_t)v9);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_100522F00((uint64_t)v9, &qword_101672E90);
    uint64_t v16 = a1;
    unint64_t v17 = a2;
    v15[0] = 37;
    v15[1] = 0xE100000000000000;
    sub_10052E310();
    if ((StringProtocol.contains<A>(_:)() & 1) != 0
      && (v16 = a1, v17 = a2, uint64_t v12 = StringProtocol.removingPercentEncoding.getter(), v13))
    {
      sub_1006F3510(v12, v13, a3);
      return swift_bridgeObjectRelease();
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a3, 1, 1, v10);
    }
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v9, v10);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a3, 0, 1, v10);
  }
}

uint64_t sub_1006F3510@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v93 = a3;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  unint64_t v86 = &v82[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __chkstk_darwin(v8, v10);
  id v88 = &v82[-v12];
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v90 = &v82[-v15];
  __chkstk_darwin(v14, v16);
  uint64_t v87 = &v82[-v17];
  uint64_t v18 = sub_1005057FC(&qword_101672E90);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v91 = &v82[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = __chkstk_darwin(v20, v22);
  unint64_t v89 = &v82[-v24];
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v28 = &v82[-v27];
  uint64_t v30 = __chkstk_darwin(v26, v29);
  uint64_t v32 = &v82[-v31];
  __chkstk_darwin(v30, v33);
  uint64_t v92 = &v82[-v34];
  uint64_t v35 = type metadata accessor for CharacterSet();
  uint64_t v36 = *(void *)(v35 - 8);
  __chkstk_darwin(v35, v37);
  int64_t v39 = &v82[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v94 = a1;
  unint64_t v95 = a2;
  static CharacterSet.whitespacesAndNewlines.getter();
  sub_10052E310();
  uint64_t v40 = StringProtocol.trimmingCharacters(in:)();
  unint64_t v42 = v41;
  (*(void (**)(unsigned char *, uint64_t))(v36 + 8))(v39, v35);
  uint64_t v43 = HIBYTE(v42) & 0xF;
  if ((v42 & 0x2000000000000000) == 0) {
    uint64_t v43 = v40 & 0xFFFFFFFFFFFFLL;
  }
  if (!v43)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v93, 1, 1, v5);
    return swift_bridgeObjectRelease();
  }
  uint64_t v44 = v6;
  uint64_t v45 = v93;
  v46._countAndFlagsBits = 0x2F2F3A70747468;
  v46._object = (void *)0xE700000000000000;
  BOOL v47 = String.hasPrefix(_:)(v46);
  id v48 = objc_allocWithZone((Class)NSDataDetector);
  uint64_t v94 = 0;
  id v49 = [v48 initWithTypes:32 error:&v94];
  if (!v49)
  {
    id v57 = (id)v94;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56))(v45, 1, 1, v5);
  }
  uint64_t v50 = v49;
  BOOL v83 = v47;
  id v51 = (id)v94;
  double v52 = v92;
  id v85 = v50;
  sub_1006F3E04(v92);
  sub_1005F7C80((uint64_t)v52, (uint64_t)v32);
  CGFloat v53 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v44 + 48);
  unsigned int v54 = v53(v32, 1, v5);
  uint64_t v84 = v53;
  if (v54 == 1)
  {
    sub_100522F00((uint64_t)v32, &qword_101672E90);
    URL.init(string:encodingInvalidCharacters:)();
    if (v53(v28, 1, v5) == 1)
    {
      sub_100522F00((uint64_t)v28, &qword_101672E90);
      uint64_t v55 = v45;
    }
    else
    {
      uint64_t v59 = v87;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v44 + 32))(v87, v28, v5);
      URL.scheme.getter();
      uint64_t v61 = v60;
      (*(void (**)(unsigned char *, uint64_t))(v44 + 8))(v59, v5);
      uint64_t v55 = v45;
      if (v61)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        double v58 = v92;
LABEL_14:
        CGFloat v53 = v84;
        goto LABEL_15;
      }
    }
    uint64_t v94 = 0x2F2F3A7370747468;
    unint64_t v95 = 0xE800000000000000;
    v62._countAndFlagsBits = v40;
    v62._object = (void *)v42;
    String.append(_:)(v62);
    swift_bridgeObjectRelease();
    Swift::Int v63 = v89;
    sub_1006F3E04(v89);
    swift_bridgeObjectRelease();
    double v58 = v92;
    sub_1006063BC((uint64_t)v63, (uint64_t)v92, &qword_101672E90);
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  sub_100522F00((uint64_t)v32, &qword_101672E90);
  uint64_t v55 = v45;
  double v58 = v92;
LABEL_15:
  if (v53(v58, 1, v5)
    || (uint64_t v64 = v90,
        (*(void (**)(unsigned char *, char *, uint64_t))(v44 + 16))(v90, v58, v5),
        URL.host.getter(),
        uint64_t v66 = v65,
        (*(void (**)(unsigned char *, uint64_t))(v44 + 8))(v64, v5),
        !v66))
  {
    swift_bridgeObjectRelease();
  }
  NSString v67 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v68 = String._bridgeToObjectiveC()();
  unsigned __int8 v69 = [v67 containsString:v68];

  if (v69) {
    goto LABEL_19;
  }
  CGFloat v71 = v91;
  sub_1005F7C80((uint64_t)v58, (uint64_t)v91);
  if (v84(v71, 1, v5) == 1)
  {

    sub_100522F00((uint64_t)v71, &qword_101672E90);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56))(v55, 1, 1, v5);
    CGFloat v70 = v58;
    return sub_100522F00((uint64_t)v70, &qword_101672E90);
  }
  double v72 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v44 + 32);
  double v73 = v88;
  v72(v88, v71, v5);
  if ((sub_1006F42A4() & 1) == 0)
  {
    double v74 = v86;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v44 + 16))(v86, v73, v5);
    if (v83 || (uint64_t v75 = URL.scheme.getter(), !v76))
    {
      (*(void (**)(unsigned char *, uint64_t))(v44 + 8))(v74, v5);
    }
    else
    {
      if (v75 == 1886680168 && v76 == 0xE400000000000000)
      {
        double v77 = *(void (**)(unsigned char *, uint64_t))(v44 + 8);
        v77(v74, v5);
        swift_bridgeObjectRelease();
LABEL_32:
        double v81 = v89;
        sub_1006F4660((uint64_t)v89);

        v77(v73, v5);
        sub_10051B3EC((uint64_t)v81, v55, &qword_101672E90);
        CGFloat v70 = v92;
        return sub_100522F00((uint64_t)v70, &qword_101672E90);
      }
      char v78 = _stringCompareWithSmolCheck(_:_:expecting:)();
      double v79 = v74;
      char v80 = v78;
      double v77 = *(void (**)(unsigned char *, uint64_t))(v44 + 8);
      v77(v79, v5);
      swift_bridgeObjectRelease();
      if (v80) {
        goto LABEL_32;
      }
    }

    v72((unsigned char *)v55, v73, v5);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v55, 0, 1, v5);
    CGFloat v70 = v92;
    return sub_100522F00((uint64_t)v70, &qword_101672E90);
  }
  (*(void (**)(unsigned char *, uint64_t))(v44 + 8))(v73, v5);
LABEL_19:

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56))(v55, 1, 1, v5);
  CGFloat v70 = v58;
  return sub_100522F00((uint64_t)v70, &qword_101672E90);
}

void sub_1006F3E04(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v30 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([v2 checkingTypes] == (id)32)
  {
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = [v12 crl_range];
    uint64_t v15 = v14;

    NSString v16 = String._bridgeToObjectiveC()();
    id v17 = [v2 matchesInString:v16 options:0 range:v13];

    sub_1006F67F0();
    unint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v27 == 1)
      {
        swift_bridgeObjectRetain();
        uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v28) {
          goto LABEL_4;
        }
      }
    }
    else if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1)
    {
LABEL_4:
      if ((v18 & 0xC000000000000001) != 0)
      {
        id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v19 = *(id *)(v18 + 32);
      }
      uint64_t v20 = v19;
      swift_bridgeObjectRelease();
      if ([v20 range] == v13 && v21 == v15)
      {
        id v22 = [v20 URL];
        if (v22)
        {
          uint64_t v23 = v22;
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
          v24(v11, v7, v4);
          uint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56);
          v25(v11, 0, 1, v4);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v11, 1, v4) != 1)
          {
            v24(a1, v11, v4);
            v25(a1, 0, 1, v4);
            return;
          }
        }
        else
        {

          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v11, 1, 1, v4);
        }
        sub_100522F00((uint64_t)v11, &qword_101672E90);
      }
      else
      {
      }
      goto LABEL_21;
    }
    swift_bridgeObjectRelease();
LABEL_21:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(a1, 1, 1, v4);
    return;
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"crl_url(in:)", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/URL_CRLExtensions.swift", 88, 2, 293, (uint64_t)"NSDataDetector is misconfigured.", 32, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crl_url(in:)", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/URL_CRLExtensions.swift", 88, 2, 293);
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);

  v26(a1, 1, 1, v4);
}

uint64_t sub_1006F42A4()
{
  uint64_t v0 = sub_1005057FC(&qword_10167BF40);
  uint64_t v2 = __chkstk_darwin(v0 - 8, v1);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2, v5);
  uint64_t v7 = (char *)&v30 - v6;
  uint64_t v8 = sub_1005057FC(&qword_10167BF48);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  NSString v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v13);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v16 = URL.scheme.getter();
  if (v17)
  {
    uint64_t v18 = v16;
    uint64_t v19 = v17;
    if (v16 == 0x7370747468 && v17 == 0xE500000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
      || v18 == 1886680168 && v19 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      BOOL v24 = 0;
      if ((v29 & 1) == 0) {
        return v24;
      }
    }
    URL.host.getter();
    if (v20)
    {
      swift_bridgeObjectRetain();
      IPv4Address.init(_:)();
      uint64_t v21 = type metadata accessor for IPv4Address();
      int v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v15, 1, v21);
      sub_100522F00((uint64_t)v15, &qword_10167BF48);
      if (v22 == 1)
      {
        swift_bridgeObjectRetain();
        IPv6Address.init(_:)();
        uint64_t v23 = type metadata accessor for IPv6Address();
        BOOL v24 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v7, 1, v23) != 1;
        sub_100522F00((uint64_t)v7, &qword_10167BF40);
LABEL_14:
        swift_bridgeObjectRelease();
        return v24;
      }
    }
    else
    {
      URL.absoluteString.getter();
      swift_bridgeObjectRetain();
      IPv4Address.init(_:)();
      uint64_t v25 = type metadata accessor for IPv4Address();
      int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v12, 1, v25);
      sub_100522F00((uint64_t)v12, &qword_10167BF48);
      if (v26 == 1)
      {
        swift_bridgeObjectRetain();
        IPv6Address.init(_:)();
        uint64_t v27 = type metadata accessor for IPv6Address();
        BOOL v24 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v4, 1, v27) != 1;
        sub_100522F00((uint64_t)v4, &qword_10167BF40);
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    return 1;
  }
  return 0;
}

uint64_t sub_1006F4660@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1005057FC(&qword_10167BF28);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URLComponents();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = URL.scheme.getter();
  if (v13)
  {
    if (v12 == 1886680168 && v13 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v14)
    {
LABEL_6:
      URLComponents.init(url:resolvingAgainstBaseURL:)();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        sub_100522F00((uint64_t)v6, &qword_10167BF28);
        uint64_t v15 = type metadata accessor for URL();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 1, 1, v15);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
        URLComponents.scheme.setter();
        URLComponents.url.getter();
        return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      }
    }
  }
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v20 = *(void *)(v17 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(a1, v1, v17);
  uint64_t v18 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56);

  return v18(a1, 0, 1, v17);
}

uint64_t sub_1006F4958()
{
  uint64_t v0 = sub_1005057FC(&qword_10167BF28);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URLComponents();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(url:resolvingAgainstBaseURL:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_100522F00((uint64_t)v3, &qword_10167BF28);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
  uint64_t v9 = URLComponents.scheme.getter();
  if (!v10)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return 0;
  }
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  uint64_t v13 = URLComponents.string.getter();
  if (!v14)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v26 = v13;
  uint64_t v27 = v14;
  uint64_t v24 = v11;
  uint64_t v25 = v12;
  swift_bridgeObjectRetain();
  v15._countAndFlagsBits = 3092282;
  v15._object = (void *)0xE300000000000000;
  String.append(_:)(v15);
  uint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  sub_10052E310();
  uint64_t v16 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = v16;
  uint64_t v27 = v18;
  uint64_t v24 = v11;
  uint64_t v25 = v12;
  swift_bridgeObjectRetain();
  v19._countAndFlagsBits = 58;
  v19._object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  uint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  uint64_t v20 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v20;
}

uint64_t sub_1006F4C78@<X0>(uint64_t a1@<X8>)
{
  return sub_1006F52A4(0, a1);
}

uint64_t sub_1006F4C80(char a1, int a2)
{
  LODWORD(v59) = a2;
  uint64_t v3 = type metadata accessor for URLQueryItem();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10167BF38);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_10167BF28);
  __chkstk_darwin(v12 - 8, v13);
  Swift::String v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for URLComponents();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(url:resolvingAgainstBaseURL:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_100522F00((uint64_t)v15, &qword_10167BF28);
    return 0;
  }
  double v56 = v7;
  id v57 = v11;
  uint64_t v58 = v4;
  char v21 = (char)v59;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v15, v16);
  uint64_t v22 = URLComponents.scheme.getter();
  if (!v23)
  {
LABEL_9:
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    return 0;
  }
  if (v22 == 0x6D726F6665657266 && v23 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v26 = v21;
  }
  else
  {
    char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v26 = v21;
    if ((v25 & 1) == 0) {
      goto LABEL_9;
    }
  }
  uint64_t v28 = URLComponents.host.getter();
  if (v29)
  {
    CGFloat v53 = v20;
    if (a1) {
      uint64_t v30 = 0x706F436472616F62;
    }
    else {
      uint64_t v30 = 0x6472616F62;
    }
    if (a1) {
      unint64_t v31 = 0xE900000000000079;
    }
    else {
      unint64_t v31 = 0xE500000000000000;
    }
    if (v28 == v30 && v29 == v31)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v32 & 1) == 0)
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v53, v16);
        return 0;
      }
    }
    uint64_t v20 = v53;
    uint64_t v33 = URLComponents.queryItems.getter();
    if (!v33) {
      goto LABEL_9;
    }
    uint64_t v34 = *(void *)(v33 + 16);
    if (v34)
    {
      uint64_t v51 = v16;
      uint64_t v59 = *(void (**)(char *, unint64_t, uint64_t))(v58 + 16);
      unint64_t v35 = v33 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
      if (v26) {
        uint64_t v36 = 0x54676E6972616873;
      }
      else {
        uint64_t v36 = 25705;
      }
      if (v26) {
        unint64_t v37 = 0xEC0000006E656B6FLL;
      }
      else {
        unint64_t v37 = 0xE200000000000000;
      }
      uint64_t v38 = v3;
      uint64_t v54 = *(void *)(v58 + 72);
      uint64_t v55 = (void (**)(char *, uint64_t))(v58 + 8);
      uint64_t v52 = v33;
      swift_bridgeObjectRetain();
      int64_t v39 = v56;
      while (1)
      {
        uint64_t v40 = v38;
        v59(v39, v35, v38);
        if (URLQueryItem.name.getter() == v36 && v41 == v37) {
          break;
        }
        uint64_t v42 = v36;
        char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v43) {
          goto LABEL_42;
        }
        (*v55)(v39, v38);
        v35 += v54;
        --v34;
        uint64_t v36 = v42;
        if (!v34)
        {
          swift_bridgeObjectRelease();
          uint64_t v44 = 1;
          uint64_t v46 = (uint64_t)v57;
          uint64_t v45 = v58;
          goto LABEL_43;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_42:
      swift_bridgeObjectRelease();
      uint64_t v46 = (uint64_t)v57;
      uint64_t v45 = v58;
      (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v57, v39, v38);
      uint64_t v44 = 0;
LABEL_43:
      uint64_t v16 = v51;
    }
    else
    {
      uint64_t v44 = 1;
      uint64_t v46 = (uint64_t)v57;
      uint64_t v45 = v58;
      uint64_t v40 = v3;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56))(v46, v44, 1, v40);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v46, 1, v40) == 1)
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v53, v16);
      sub_100522F00(v46, &qword_10167BF38);
      return 0;
    }
    uint64_t v47 = URLQueryItem.value.getter();
    uint64_t v49 = v48;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v53, v16);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v46, v40);
    if (v49) {
      return v47;
    }
    else {
      return 0;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    return 0;
  }
}

uint64_t sub_1006F529C@<X0>(uint64_t a1@<X8>)
{
  return sub_1006F52A4(1, a1);
}

uint64_t sub_1006F52A4@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLBoardIdentifier(0);
  v17[0] = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1006F4C80(a1, 0);
  if (v13)
  {
    sub_100753CE4(v12, v13, v7);
    uint64_t v14 = (uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v17[0] + 56);
    sub_1006F6788((uint64_t)v7, (uint64_t)v11, type metadata accessor for CRLBoardIdentifierStorage);
    sub_1006F6788((uint64_t)v11, a2, type metadata accessor for CRLBoardIdentifier);
    return (*v14)(a2, 0, 1, v8);
  }
  else
  {
    Swift::String v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17[0] + 56);
    return v15(a2, 1, 1, v8);
  }
}

uint64_t sub_1006F5484@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  NSString v68 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  unsigned __int8 v69 = (char *)&v63 - v12;
  uint64_t v13 = sub_1005057FC(&qword_1016741B8);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC(&qword_10167BF28);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for URLComponents();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v23);
  char v25 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(url:resolvingAgainstBaseURL:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_100522F00((uint64_t)v20, &qword_10167BF28);
    if (qword_10166FA90 != -1) {
      swift_once();
    }
    swift_beginAccess();
    char v26 = (void *)static OS_os_log.crlSendACopy;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v28 = v26;
    uint64_t v29 = URL.absoluteString.getter();
    uint64_t v31 = v30;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v29;
    *(void *)(inited + 40) = v31;
    uint64_t v32 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v28, (uint64_t)&_mh_execute_header, v32, (uint64_t)"Unable to parse URL: %@", 23, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    goto LABEL_5;
  }
  uint64_t v64 = v5;
  uint64_t v65 = v7;
  uint64_t v66 = v6;
  uint64_t v67 = a1;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v25, v20, v21);
  uint64_t v36 = URLComponents.path.getter();
  unint64_t v38 = sub_10070B5DC(1uLL, v36, v37);
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  swift_bridgeObjectRelease();
  v72[0] = v38;
  v72[1] = v40;
  v72[2] = v42;
  v72[3] = v44;
  uint64_t v70 = 47;
  unint64_t v71 = 0xE100000000000000;
  sub_1006F6734();
  sub_10052E310();
  uint64_t v45 = (void *)StringProtocol.components<A>(separatedBy:)();
  swift_bridgeObjectRelease();
  if (v45[2] != 2)
  {
    swift_bridgeObjectRelease();
    if (qword_10166FA90 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v49 = (void *)static OS_os_log.crlSendACopy;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v50 = swift_initStackObject();
    *(_OWORD *)(v50 + 16) = xmmword_10117E810;
    id v51 = v49;
    uint64_t v52 = URL.absoluteString.getter();
    uint64_t v54 = v53;
    *(void *)(v50 + 56) = &type metadata for String;
    *(void *)(v50 + 64) = sub_100528BE4();
    *(void *)(v50 + 32) = v52;
    *(void *)(v50 + 40) = v54;
    uint64_t v55 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v51, (uint64_t)&_mh_execute_header, v55, (uint64_t)"URL was not a valid url: %@", 27, 2, v50);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
    goto LABEL_12;
  }
  strcpy((char *)v72, "freeform-copy");
  HIWORD(v72[1]) = -4864;
  unint64_t v46 = v45[5];
  uint64_t v70 = v45[4];
  unint64_t v71 = v46;
  uint64_t v47 = type metadata accessor for Locale();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v16, 1, 1, v47);
  swift_bridgeObjectRetain();
  uint64_t v48 = StringProtocol.compare<A>(_:options:range:locale:)();
  sub_100522F00((uint64_t)v16, &qword_1016741B8);
  swift_bridgeObjectRelease();
  if (v48)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
    swift_bridgeObjectRelease();
LABEL_12:
    uint64_t v33 = type metadata accessor for CRLBoardIdentifier(0);
    uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56);
    uint64_t v35 = v67;
    return v34(v35, 1, 1, v33);
  }
  a1 = v67;
  if (!v45[2])
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v57 = (uint64_t)v64;
  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  uint64_t v58 = v65;
  uint64_t v59 = v66;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v57, 1, v66) == 1)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
    sub_100522F00(v57, (uint64_t *)&unk_101674520);
LABEL_5:
    uint64_t v33 = type metadata accessor for CRLBoardIdentifier(0);
    uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56);
    uint64_t v35 = a1;
    return v34(v35, 1, 1, v33);
  }
  uint64_t v60 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v69, v57, v59);
  uint64_t v61 = (uint64_t)v68;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v68, v60, v59);
  sub_100753370(v61, 0, 0xE000000000000000, a1);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v59);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
  uint64_t v62 = type metadata accessor for CRLBoardIdentifier(0);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(a1, 0, 1, v62);
}

uint64_t sub_1006F5D00()
{
  uint64_t v0 = URL.scheme.getter();
  if (!v1) {
    return sub_1006F4C80(0, 1);
  }
  if (v0 != 0x7370747468 || v1 != 0xE500000000000000)
  {
    char v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_6;
    }
    return sub_1006F4C80(0, 1);
  }
  swift_bridgeObjectRelease();
LABEL_6:
  URL.path.getter();
  sub_10052E310();
  char v3 = StringProtocol.contains<A>(_:)();
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0
    && (URL.lastPathComponent.getter(), uint64_t v4 = String.count.getter(), swift_bridgeObjectRelease(), v4 >= 16))
  {
    return URL.lastPathComponent.getter();
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1006F5E40()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_10167BF28);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URLComponents();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(url:resolvingAgainstBaseURL:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_100522F00((uint64_t)v13, &qword_10167BF28);
    if (qword_10166FA90 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v19 = (void *)static OS_os_log.crlSendACopy;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v21 = v19;
    uint64_t v22 = URL.absoluteString.getter();
    uint64_t v24 = v23;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v22;
    *(void *)(inited + 40) = v24;
    uint64_t v25 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v21, (uint64_t)&_mh_execute_header, v25, (uint64_t)"Failed to create URLComponents from %{public}@", 46, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    return 0;
  }
  uint64_t v66 = v9;
  uint64_t v67 = v6;
  uint64_t v68 = v5;
  uint64_t v69 = v0;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v14);
  uint64_t v70 = URLComponents.path.getter();
  uint64_t v71 = v26;
  sub_10052E310();
  uint64_t v27 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
  swift_bridgeObjectRelease();
  if (*(void *)(v27 + 16) != 2) {
    goto LABEL_13;
  }
  uint64_t v65 = v18;
  swift_bridgeObjectRetain();
  Swift::String v28 = Substring.lowercased()();
  swift_bridgeObjectRelease();
  if (v28._countAndFlagsBits == 0x6D726F6665657266 && v28._object == (void *)0xED000079706F632DLL)
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = v65;
    goto LABEL_10;
  }
  char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  uint64_t v18 = v65;
  if ((v29 & 1) == 0)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    if (qword_10166FA90 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v32 = (void *)static OS_os_log.crlSendACopy;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v33 = swift_initStackObject();
    *(_OWORD *)(v33 + 16) = xmmword_10117E810;
    id v34 = v32;
    uint64_t v35 = URL.absoluteString.getter();
    uint64_t v37 = v36;
    *(void *)(v33 + 56) = &type metadata for String;
    *(void *)(v33 + 64) = sub_100528BE4();
    *(void *)(v33 + 32) = v35;
    *(void *)(v33 + 40) = v37;
    uint64_t v38 = static os_log_type_t.error.getter();
    uint64_t v39 = "Invalid path from universal link %{public}@";
    uint64_t v40 = (uint64_t)v34;
    uint64_t v41 = 43;
    goto LABEL_20;
  }
LABEL_10:
  if (!*(void *)(v27 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  static String._fromSubstring(_:)();
  swift_bridgeObjectRelease();
  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  uint64_t v31 = v67;
  uint64_t v30 = v68;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v4, 1, v68) == 1)
  {
    sub_100522F00((uint64_t)v4, (uint64_t *)&unk_101674520);
    uint64_t v18 = v65;
LABEL_17:
    if (qword_10166FA90 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v42 = (void *)static OS_os_log.crlSendACopy;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v33 = swift_initStackObject();
    *(_OWORD *)(v33 + 16) = xmmword_10117E810;
    id v34 = v42;
    uint64_t v43 = URL.absoluteString.getter();
    uint64_t v45 = v44;
    *(void *)(v33 + 56) = &type metadata for String;
    *(void *)(v33 + 64) = sub_100528BE4();
    *(void *)(v33 + 32) = v43;
    *(void *)(v33 + 40) = v45;
    uint64_t v38 = static os_log_type_t.error.getter();
    uint64_t v39 = "Failed to get valid board uuid from %{public}@";
    uint64_t v40 = (uint64_t)v34;
    uint64_t v41 = 46;
LABEL_20:
    sub_100BAC898(v40, (uint64_t)&_mh_execute_header, v38, (uint64_t)v39, v41, 2, v33);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v66, v4, v30);
  Swift::String_optional v47 = URL.fragment(percentEncoded:)(1);
  if (v47.value._object) {
    uint64_t countAndFlagsBits = v47.value._countAndFlagsBits;
  }
  else {
    uint64_t countAndFlagsBits = 0;
  }
  object = (void *)0xE000000000000000;
  if (v47.value._object) {
    object = v47.value._object;
  }
  uint64_t v63 = object;
  uint64_t v64 = countAndFlagsBits;
  if (qword_10166FA90 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v50 = (void *)static OS_os_log.crlSendACopy;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v51 = swift_initStackObject();
  *(_OWORD *)(v51 + 16) = xmmword_10117DF40;
  id v52 = v50;
  uint64_t v53 = URL.absoluteString.getter();
  uint64_t v55 = v54;
  *(void *)(v51 + 56) = &type metadata for String;
  unint64_t v56 = sub_100528BE4();
  *(void *)(v51 + 64) = v56;
  *(void *)(v51 + 32) = v53;
  *(void *)(v51 + 40) = v55;
  uint64_t v57 = v66;
  uint64_t v58 = UUID.uuidString.getter();
  *(void *)(v51 + 96) = &type metadata for String;
  *(void *)(v51 + 104) = v56;
  *(void *)(v51 + 72) = v58;
  *(void *)(v51 + 80) = v59;
  *(void *)(v51 + 136) = &type metadata for String;
  *(void *)(v51 + 144) = v56;
  uint64_t v60 = v63;
  *(void *)(v51 + 112) = v64;
  *(void *)(v51 + 120) = v60;
  uint64_t v61 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v52, (uint64_t)&_mh_execute_header, v61, (uint64_t)"Validated Send-A-Copy Universal Link: %{public}@, boardUUID: %{public}@, title: %{public}@", 90, 2, v51);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  (*(void (**)(char *, uint64_t))(v67 + 8))(v57, v68);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v65, v14);
  return 1;
}

uint64_t sub_1006F66CC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1006F66DC(uint64_t a1)
{
  return sub_1006F2E80(a1, *(void *)(v1 + 16));
}

uint64_t sub_1006F66E4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006F66F4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1006F671C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1006F672C()
{
  return swift_release();
}

unint64_t sub_1006F6734()
{
  unint64_t result = qword_10167BF30;
  if (!qword_10167BF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167BF30);
  }
  return result;
}

uint64_t sub_1006F6788(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1006F67F0()
{
  unint64_t result = qword_10167BF50;
  if (!qword_10167BF50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10167BF50);
  }
  return result;
}

uint64_t sub_1006F6830(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v4 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v11 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v11 - 8, v12);
  if (a3 > 1u)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v4);
    return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  }
  return result;
}

id sub_1006F6AE4(uint64_t a1, id a2)
{
  uint64_t v5 = type metadata accessor for CRLBoardCRDTData(0);
  uint64_t v7 = __chkstk_darwin(v5, v6);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    __chkstk_darwin(v7, v8);
    v28[-2] = a1;
    sub_1005057FC(&qword_10167BF58);
    OS_dispatch_queue.sync<A>(execute:)();
    if (v2)
    {
      if (qword_10166F9C8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v11 = (void *)static OS_os_log.crlDefault;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      v31[0] = v2;
      a2 = v11;
      swift_errorRetain();
      sub_1005057FC(&qword_101672BD0);
      uint64_t v13 = String.init<A>(describing:)();
      uint64_t v15 = v14;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v13;
      *(void *)(inited + 40) = v15;
      uint64_t v16 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)a2, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Error getting unique title: %@", 30, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_willThrow();
    }
    else
    {
      uint64_t v32 = &_swiftEmptySetSingleton;
      uint64_t v17 = *(void *)(v31[11] + 16);
      if (v17)
      {
        v28[1] = 0;
        char v29 = v10;
        v28[0] = swift_bridgeObjectRetain();
        uint64_t v18 = (void **)(v28[0] + 40);
        uint64_t v30 = v5;
        uint64_t v19 = (uint64_t)v29;
        do
        {
          uint64_t v25 = (uint64_t)*(v18 - 1);
          uint64_t v24 = *v18;
          if (*(void *)(v25 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName)) {
            BOOL v26 = 0;
          }
          else {
            BOOL v26 = *(void *)(v25 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName + 8) == 0xE000000000000000;
          }
          if (v26 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            uint64_t v20 = v25 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
            swift_beginAccess();
            sub_100539548(v20, v19, type metadata accessor for CRLBoardCRDTData);
            id v21 = v24;
            swift_retain();
            sub_1005057FC(&qword_101674450);
            CRRegister.wrappedValue.getter();
            Swift::Int v22 = v31[0];
            Swift::Int v23 = v31[1];
            sub_1005387C0(v19, type metadata accessor for CRLBoardCRDTData);
            sub_100CB8180(v31, v22, v23);

            swift_release();
            swift_bridgeObjectRelease();
          }
          v18 += 2;
          --v17;
        }
        while (v17);
        swift_bridgeObjectRelease_n();
        return v32;
      }
      else
      {
        swift_bridgeObjectRelease();
        return &_swiftEmptySetSingleton;
      }
    }
  }
  return a2;
}

uint64_t sub_1006F6E90(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 > 1u)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    id v3 = [self mainBundle];
    NSString v4 = String._bridgeToObjectiveC()();
    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = [v3 localizedStringForKey:v4 value:v5 table:0];

    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    return v7;
  }
  return result;
}

uint64_t sub_1006F7004(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3)
  {
    NSString v5 = self;
    swift_bridgeObjectRetain();
    id v6 = [v5 mainBundle];
    NSString v7 = String._bridgeToObjectiveC()();
    NSString v8 = String._bridgeToObjectiveC()();
    id v9 = [v6 localizedStringForKey:v7 value:v8 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_10117E810;
    *(void *)(v10 + 56) = &type metadata for String;
    *(void *)(v10 + 64) = sub_100528BE4();
    *(void *)(v10 + 32) = a1;
    *(void *)(v10 + 40) = a2;
LABEL_5:
    uint64_t v17 = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v17;
  }
  if (a3 == 1)
  {
    uint64_t v11 = self;
    swift_bridgeObjectRetain();
    id v12 = [v11 mainBundle];
    NSString v13 = String._bridgeToObjectiveC()();
    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = [v12 localizedStringForKey:v13 value:v14 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_10117E810;
    *(void *)(v16 + 56) = &type metadata for String;
    *(void *)(v16 + 64) = sub_100528BE4();
    *(void *)(v16 + 32) = a1;
    *(void *)(v16 + 40) = a2;
    goto LABEL_5;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006F72B0(uint64_t a1, uint64_t a2)
{
  return sub_1006F7DD0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_1006F72CC(uint64_t a1, uint64_t a2)
{
  return sub_1006F6E90(a1, a2, *(unsigned char *)(v2 + 16));
}

uint64_t sub_1006F72D8()
{
  return sub_1006F7004(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_1006F72E8(uint64_t a1, uint64_t a2)
{
  return sub_1006F6830(a1, a2, *(unsigned char *)(v2 + 16));
}

Swift::Int sub_1006F72F0(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6)
{
  swift_bridgeObjectRetain();
  Substring.init<A>(_:)();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if ((v13 & 0x1000000000000000) != 0) {
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  Substring.init<A>(_:)();
  uint64_t v15 = v14;
  Swift::Int result = swift_bridgeObjectRelease();
  if ((v15 & 0x1000000000000000) != 0) {
    goto LABEL_25;
  }
  uint64_t v17 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0) {
    LOBYTE(v17) = 1;
  }
  uint64_t v18 = 4 << v17;
  unint64_t v19 = a1;
  if ((a1 & 0xC) == 4 << v17)
  {
    Swift::Int result = sub_1009B7FE8(a1, a5, a6);
    unint64_t v19 = result;
  }
  uint64_t v40 = a3;
  unint64_t v20 = a2;
  unint64_t v21 = a5 & 0x800000000000000;
  if ((a6 & 0x1000000000000000) != 0)
  {
    uint64_t v23 = a6 & 0x2000000000000000;
    uint64_t v25 = a5 & 0xFFFFFFFFFFFFLL;
    unint64_t v24 = HIBYTE(a6) & 0xF;
    if ((a6 & 0x2000000000000000) != 0) {
      unint64_t v32 = HIBYTE(a6) & 0xF;
    }
    else {
      unint64_t v32 = a5 & 0xFFFFFFFFFFFFLL;
    }
    if (v32 < v19 >> 16) {
      goto LABEL_43;
    }
    Swift::Int result = String.UTF8View._foreignDistance(from:to:)();
    Swift::Int v22 = result;
    if (v21) {
      uint64_t v26 = 7;
    }
    else {
      uint64_t v26 = 11;
    }
  }
  else
  {
    Swift::Int v22 = v19 >> 16;
    uint64_t v23 = a6 & 0x2000000000000000;
    unint64_t v24 = HIBYTE(a6) & 0xF;
    uint64_t v25 = a5 & 0xFFFFFFFFFFFFLL;
    uint64_t v26 = 7;
  }
  if (!v23) {
    unint64_t v24 = v25;
  }
  uint64_t v27 = 4 << (v21 >> 59);
  unint64_t v28 = v26 | (v24 << 16);
  a2 = v20;
  if ((a6 & 0x1000000000000000) == 0) {
    uint64_t v27 = 8;
  }
  unint64_t v29 = v20;
  if ((v20 & 0xC) == v27)
  {
    unsigned __int16 v33 = v20;
    Swift::Int v34 = v22;
    Swift::Int result = sub_1009B7FE8(v33, a5, a6);
    Swift::Int v22 = v34;
    unint64_t v29 = result;
  }
  if ((v26 & 0xC) == v18)
  {
    unsigned __int16 v35 = v26;
    Swift::Int v36 = v22;
    Swift::Int result = sub_1009B7FE8(v35, a5, a6);
    Swift::Int v22 = v36;
    unint64_t v28 = result;
    if ((a6 & 0x1000000000000000) == 0)
    {
LABEL_17:
      uint64_t v30 = (v28 >> 16) - (v29 >> 16);
      if ((a4 & 0x1000000000000000) == 0) {
        goto LABEL_18;
      }
      goto LABEL_37;
    }
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
    goto LABEL_17;
  }
  if (v24 < v29 >> 16)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v24 >= v28 >> 16)
  {
    Swift::Int v37 = v22;
    uint64_t v38 = String.UTF8View._foreignDistance(from:to:)();
    Swift::Int v22 = v37;
    uint64_t v30 = v38;
    if ((a4 & 0x1000000000000000) == 0)
    {
LABEL_18:
      if ((a4 & 0x2000000000000000) != 0)
      {
        Swift::Int result = HIBYTE(a4) & 0xF;
        Swift::Int v31 = v22 + result;
        if (!__OFADD__(v22, result)) {
          goto LABEL_23;
        }
      }
      else
      {
        Swift::Int result = v40 & 0xFFFFFFFFFFFFLL;
        Swift::Int v31 = v22 + (v40 & 0xFFFFFFFFFFFFLL);
        if (!__OFADD__(v22, v40 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_23;
        }
      }
      goto LABEL_39;
    }
LABEL_37:
    Swift::Int v39 = v22;
    Swift::Int result = String.UTF8View._foreignCount()();
    Swift::Int v31 = v39 + result;
    if (!__OFADD__(v39, result))
    {
LABEL_23:
      Swift::Int result = v31 + v30;
      if (!__OFADD__(v31, v30))
      {
        String.reserveCapacity(_:)(result);
LABEL_25:
        String.subscript.getter();
        sub_1006F8D64();
        String.append<A>(contentsOf:)();
        swift_bridgeObjectRelease();
        String.append<A>(contentsOf:)();
        sub_100C329C8(a2, a5, a6);
        String.append<A>(contentsOf:)();
        swift_bridgeObjectRelease();
        return 0;
      }
      goto LABEL_40;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1006F7638(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, void *a6)
{
  uint64_t v11 = type metadata accessor for CharacterSet();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = sub_1006F6AE4(a5, a6);
  if (v6) {
    return v12;
  }
  LODWORD(v75) = a4;
  uint64_t v76 = (uint64_t)v16;
  v73[1] = 0;
  *(void *)&long long v74 = a2;
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v17 crl_stringByFixingBrokenSurrogatePairs];

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v12;
  unint64_t v22 = v21;

  long long aBlock = (void **)v19;
  unint64_t v78 = v22;
  swift_bridgeObjectRetain();
  static CharacterSet.whitespacesAndNewlines.getter();
  unint64_t v83 = sub_10052E310();
  uint64_t v23 = StringProtocol.trimmingCharacters(in:)();
  unint64_t v25 = v24;
  uint64_t v26 = *(void (**)(char *, uint64_t))(v20 + 8);
  v26(v15, v11);
  Swift::Int v27 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  while (1)
  {
    long long aBlock = (void **)v27;
    unint64_t v78 = v25;
    swift_bridgeObjectRetain();
    static CharacterSet.newlines.getter();
    unint64_t v28 = StringProtocol.rangeOfCharacter(from:options:range:)();
    unint64_t v30 = v29;
    char v32 = v31;
    v26(v15, v11);
    swift_bridgeObjectRelease();
    if (v32) {
      break;
    }
    swift_bridgeObjectRetain();
    Swift::Int v27 = sub_1006F72F0(v28, v30, 32, 0xE100000000000000, v27, v25);
    unint64_t v34 = v33;
    swift_bridgeObjectRelease_n();
    unint64_t v25 = v34;
  }
  uint64_t v35 = HIBYTE(v25) & 0xF;
  if ((v25 & 0x2000000000000000) == 0) {
    uint64_t v35 = v27 & 0xFFFFFFFFFFFFLL;
  }
  if (v35)
  {
    uint64_t v12 = v27;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v36 = [self mainBundle];
    NSString v37 = String._bridgeToObjectiveC()();
    NSString v38 = String._bridgeToObjectiveC()();
    id v39 = [v36 localizedStringForKey:v37 value:v38 table:0];

    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v25 = v40;
    swift_bridgeObjectRelease();
  }
  uint64_t v41 = v76;
  if (v75)
  {
    swift_bridgeObjectRetain();
    char v42 = sub_1006E5D6C(v12, v25, v41);
    swift_bridgeObjectRelease();
    if (v42)
    {
      NSString v43 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v44 = swift_allocObject();
      *(void *)(v44 + 16) = v41;
      double v81 = sub_1006F8D28;
      uint64_t v82 = v44;
      long long aBlock = _NSConcreteStackBlock;
      unint64_t v78 = *(void *)"";
      double v79 = sub_1006F7D68;
      char v80 = &unk_101510658;
      uint64_t v45 = _Block_copy(&aBlock);
      swift_release();
      id v46 = [v43 crl_stringByIncrementingCounterAfterDuplicateTitleModifierWithUniquenessTest:v45];
      _Block_release(v45);

      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      return v12;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    return v12;
  }
  Swift::String_optional v47 = self;
  swift_bridgeObjectRetain();
  id v48 = [v47 mainBundle];
  NSString v49 = String._bridgeToObjectiveC()();
  NSString v50 = String._bridgeToObjectiveC()();
  uint64_t v51 = v12;
  id v52 = [v48 localizedStringForKey:v49 value:v50 table:0];

  uint64_t v75 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v54 = v53;

  uint64_t v12 = v51;
  swift_bridgeObjectRetain();
  LOBYTE(v48) = sub_1006E5D6C(v51, v25, v41);
  swift_bridgeObjectRelease_n();
  if ((v48 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  unint64_t v83 = v41 + 56;
  uint64_t v55 = 2;
  long long v74 = xmmword_10117D8C0;
  while (1)
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = v74;
    *(void *)(v56 + 56) = &type metadata for String;
    unint64_t v57 = sub_100528BE4();
    *(void *)(v56 + 32) = v12;
    *(void *)(v56 + 40) = v25;
    *(void *)(v56 + 96) = &type metadata for Int;
    *(void *)(v56 + 104) = &protocol witness table for Int;
    *(void *)(v56 + 64) = v57;
    *(void *)(v56 + 72) = v55;
    swift_bridgeObjectRetain();
    uint64_t v58 = v54;
    uint64_t v12 = static String.localizedStringWithFormat(_:_:)();
    uint64_t v60 = v59;
    uint64_t result = swift_bridgeObjectRelease();
    if (__OFADD__(v55++, 1)) {
      break;
    }
    if (!*(void *)(v41 + 16)) {
      goto LABEL_37;
    }
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    Swift::Int v63 = Hasher._finalize()();
    uint64_t v64 = -1 << *(unsigned char *)(v41 + 32);
    uint64_t v65 = v41;
    unint64_t v66 = v63 & ~v64;
    if (((*(void *)(v83 + ((v66 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v66) & 1) == 0) {
      goto LABEL_36;
    }
    uint64_t v67 = *(void *)(v65 + 48);
    uint64_t v68 = (void *)(v67 + 16 * v66);
    BOOL v69 = *v68 == v12 && v68[1] == v60;
    if (!v69 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v70 = ~v64;
      while (1)
      {
        unint64_t v66 = (v66 + 1) & v70;
        if (((*(void *)(v83 + ((v66 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v66) & 1) == 0) {
          break;
        }
        uint64_t v71 = (void *)(v67 + 16 * v66);
        BOOL v72 = *v71 == v12 && v71[1] == v60;
        if (v72 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_15;
        }
      }
LABEL_36:
      swift_bridgeObjectRelease();
LABEL_37:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12;
    }
LABEL_15:
    swift_bridgeObjectRelease_n();
    uint64_t v41 = v76;
    uint64_t v54 = v58;
    uint64_t v12 = v51;
  }
  __break(1u);
  return result;
}

uint64_t sub_1006F7D68(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;
  swift_retain();
  LOBYTE(v2) = v1(v2, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1006F7DD0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a3)
  {
    if (!a6)
    {
      if (a1 == a4 && a2 == a5) {
        return 1;
      }
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    return 0;
  }
  if (a3 != 1) {
    return a6 == 2 && !(a5 | a4);
  }
  if (a6 != 1) {
    return 0;
  }
  if (a1 == a4 && a2 == a5) {
    return 1;
  }
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

unint64_t sub_1006F7E58(uint64_t a1, uint64_t a2, int a3, void *a4, void (**a5)(char *, char *, uint64_t))
{
  uint64_t v130 = a5;
  unint64_t v134 = a4;
  LODWORD(v144) = a3;
  uint64_t v143 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v143, v7);
  uint64_t v140 = (char *)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = type metadata accessor for UUID();
  uint64_t v129 = *(void *)(v149 - 8);
  __chkstk_darwin(v149, v9);
  uint64_t v148 = (char *)&v128 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v147 = (char *)&v128 - v13;
  uint64_t v150 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v150, v14);
  uint64_t v135 = (char *)&v128 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v139 = (uint64_t)&v128 - v18;
  __chkstk_darwin(v19, v20);
  uint64_t v145 = (uint64_t)&v128 - v21;
  uint64_t v22 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v133 = (void (**)(char *, char *, uint64_t))((char *)&v128 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v132 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v131 = *(void *)(v132 - 8);
  __chkstk_darwin(v132, v25);
  uint64_t v138 = (uint64_t)&v128 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v28);
  uint64_t v137 = (uint64_t)&v128 - v29;
  __chkstk_darwin(v30, v31);
  uint64_t v136 = (uint64_t)&v128 - v32;
  __chkstk_darwin(v33, v34);
  uint64_t v146 = (uint64_t)&v128 - v35;
  __chkstk_darwin(v36, v37);
  uint64_t v152 = (uint64_t)&v128 - v38;
  uint64_t v39 = type metadata accessor for CharacterSet();
  uint64_t v40 = *(void *)(v39 - 8);
  __chkstk_darwin(v39, v41);
  NSString v43 = (char *)&v128 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = a1;
  uint64_t v142 = a2;
  NSString v44 = String._bridgeToObjectiveC()();
  id v45 = [v44 crl_stringByFixingBrokenSurrogatePairs];

  uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v48 = v47;

  uint64_t v156 = v46;
  unint64_t v157 = v48;
  swift_bridgeObjectRetain();
  static CharacterSet.whitespacesAndNewlines.getter();
  unint64_t v158 = sub_10052E310();
  uint64_t v49 = StringProtocol.trimmingCharacters(in:)();
  unint64_t v51 = v50;
  id v52 = *(void (**)(char *, uint64_t))(v40 + 8);
  v52(v43, v39);
  unint64_t v53 = v51;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  while (1)
  {
    uint64_t v156 = v49;
    unint64_t v157 = v53;
    swift_bridgeObjectRetain();
    static CharacterSet.newlines.getter();
    unint64_t v54 = v49;
    unint64_t v55 = StringProtocol.rangeOfCharacter(from:options:range:)();
    unint64_t v57 = v56;
    char v59 = v58;
    v52(v43, v39);
    swift_bridgeObjectRelease();
    if (v59) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_1006F72F0(v55, v57, 32, 0xE100000000000000, v54, v53);
    unint64_t v61 = v60;
    swift_bridgeObjectRelease_n();
    unint64_t v53 = v61;
  }
  uint64_t v62 = HIBYTE(v53) & 0xF;
  if ((v53 & 0x2000000000000000) == 0) {
    uint64_t v62 = v54 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v153 = v54;
  if (!v62)
  {
    sub_100651FA8();
    swift_allocError();
    uint64_t v63 = v142;
    *(void *)uint64_t v64 = v141;
    *(void *)(v64 + 8) = v63;
    *(unsigned char *)(v64 + 16) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    goto LABEL_62;
  }
  if (v144) {
    return v153;
  }
  uint64_t v65 = v133;
  sub_100605184((uint64_t)v134, (uint64_t)v133);
  int v66 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v131 + 48))(v65, 1, v132);
  uint64_t v67 = v151;
  unint64_t v158 = v53;
  if (v66 != 1)
  {
    uint64_t v71 = v152;
    uint64_t v72 = sub_1006F8E14((uint64_t)v65, v152, type metadata accessor for CRLBoardIdentifier);
    __chkstk_darwin(v72, v73);
    *(&v128 - 2) = v74;
    sub_1005057FC(&qword_10167BF58);
    OS_dispatch_queue.sync<A>(execute:)();
    if (v67)
    {
      sub_1005387C0(v71, type metadata accessor for CRLBoardIdentifier);
      goto LABEL_62;
    }
    uint64_t v88 = v156;
    unint64_t v89 = *(char **)(v156 + 16);
    if (!v89) {
      goto LABEL_55;
    }
    uint64_t v151 = 0;
    uint64_t v133 = (void (**)(char *, char *, uint64_t))(v129 + 16);
    uint64_t v132 = (uint64_t)CKCurrentUserDefaultName;
    uint64_t v131 = v129 + 8;
    uint64_t v130 = (void (**)(char *, char *, uint64_t))(v129 + 32);
    swift_bridgeObjectRetain();
    uint64_t v129 = v88;
    uint64_t v90 = (void **)(v88 + 40);
    uint64_t v91 = v143;
    while (1)
    {
      uint64_t v135 = v89;
      uint64_t v79 = (uint64_t)*(v90 - 1);
      uint64_t v94 = *v90;
      uint64_t v95 = v79 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      uint64_t v96 = v145;
      sub_100539548(v95, v145, type metadata accessor for CRLBoardCRDTData);
      unint64_t v134 = v94;
      id v144 = v94;
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1005057FC(&qword_101674450);
      CRRegister.wrappedValue.getter();
      uint64_t v98 = v154;
      uint64_t v97 = v155;
      unint64_t v99 = v158;
      sub_1005387C0(v96, type metadata accessor for CRLBoardCRDTData);
      if (v153 == v98 && v99 == v97)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v100 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v100 & 1) == 0)
        {

          swift_release_n();
          goto LABEL_53;
        }
      }
      unint64_t v101 = (void *)(v152 + *(int *)(v91 + 20));
      id v102 = (uint64_t *)(v79 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      BOOL v103 = *v101 == *(void *)(v79 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName)
          && v101[1] == *(void *)(v79 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName + 8);
      if (v103 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        uint64_t v104 = v139;
        sub_100539548(v95, v139, type metadata accessor for CRLBoardCRDTData);
        sub_1005057FC(&qword_101674550);
        uint64_t v105 = v147;
        CRRegister.wrappedValue.getter();
        sub_1005387C0(v104, type metadata accessor for CRLBoardCRDTData);
        uint64_t v107 = *v102;
        unint64_t v106 = v102[1];
        (*v133)(v148, v105, v149);
        BOOL v109 = v107 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v106 == v108;
        if (v109
          || (char v110 = _stringCompareWithSmolCheck(_:_:expecting:)(),
              swift_bridgeObjectRetain(),
              swift_bridgeObjectRelease(),
              (v110 & 1) != 0))
        {
          swift_bridgeObjectRelease();
          uint64_t v107 = 0;
          unint64_t v106 = 0xE000000000000000;
        }
        uint64_t v111 = v143;
        uint64_t v112 = v149;
        (*(void (**)(char *, uint64_t))v131)(v147, v149);
        uint64_t v113 = (uint64_t)v140;
        (*v130)(v140, v148, v112);
        uint64_t v114 = (void *)(v113 + *(int *)(v111 + 20));
        *uint64_t v114 = v107;
        v114[1] = v106;
        uint64_t v115 = v136;
        sub_1006F8E14(v113, v136, type metadata accessor for CRLBoardIdentifierStorage);
        uint64_t v116 = v146;
        sub_1006F8E14(v115, v146, type metadata accessor for CRLBoardIdentifier);
        uint64_t v91 = v111;
        uint64_t v117 = v152;
        LOBYTE(v115) = static UUID.== infix(_:_:)();
        uint64_t v118 = v137;
        sub_100539548(v117, v137, type metadata accessor for CRLBoardIdentifier);
        uint64_t v119 = v138;
        sub_100539548(v116, v138, type metadata accessor for CRLBoardIdentifier);
        if ((v115 & 1) == 0)
        {
          sub_1005387C0(v119, type metadata accessor for CRLBoardIdentifier);
          sub_1005387C0(v118, type metadata accessor for CRLBoardIdentifier);
          swift_release();
          sub_1005387C0(v146, type metadata accessor for CRLBoardIdentifier);
LABEL_60:
          swift_bridgeObjectRelease_n();
          sub_1005387C0(v152, type metadata accessor for CRLBoardIdentifier);
          goto LABEL_61;
        }
        uint64_t v120 = *(int *)(v91 + 20);
        uint64_t v121 = *(void *)(v118 + v120);
        uint64_t v122 = *(void *)(v118 + v120 + 8);
        uint64_t v123 = (void *)(v119 + v120);
        if (v121 == *v123 && v122 == v123[1])
        {
          sub_1005387C0(v119, type metadata accessor for CRLBoardIdentifier);
          sub_1005387C0(v118, type metadata accessor for CRLBoardIdentifier);
          swift_release();
          sub_1005387C0(v146, type metadata accessor for CRLBoardIdentifier);
        }
        else
        {
          char v92 = _stringCompareWithSmolCheck(_:_:expecting:)();
          sub_1005387C0(v119, type metadata accessor for CRLBoardIdentifier);
          sub_1005387C0(v118, type metadata accessor for CRLBoardIdentifier);
          swift_release();
          sub_1005387C0(v146, type metadata accessor for CRLBoardIdentifier);
          if ((v92 & 1) == 0) {
            goto LABEL_60;
          }
        }

        swift_release();
        uint64_t v93 = v135;
        goto LABEL_31;
      }

      swift_release_n();
      uint64_t v91 = v143;
LABEL_53:
      uint64_t v93 = v135;
LABEL_31:
      v90 += 2;
      unint64_t v89 = v93 - 1;
      if (!v89)
      {
        swift_bridgeObjectRelease();
LABEL_55:
        swift_bridgeObjectRelease();
        sub_1005387C0(v152, type metadata accessor for CRLBoardIdentifier);
        return v153;
      }
    }
  }
  uint64_t v68 = sub_1006051EC((uint64_t)v65);
  __chkstk_darwin(v68, v69);
  *(&v128 - 2) = v70;
  sub_1005057FC(&qword_10167BF58);
  OS_dispatch_queue.sync<A>(execute:)();
  if (v67) {
    goto LABEL_62;
  }
  uint64_t v75 = *(void *)(v156 + 16);
  if (!v75) {
    goto LABEL_62;
  }
  uint64_t v76 = swift_bridgeObjectRetain();
  uint64_t v151 = 0;
  uint64_t v152 = v76;
  double v77 = (void **)(v76 + 40);
  uint64_t v78 = (uint64_t)v135;
  while (1)
  {
    uint64_t v79 = (uint64_t)*(v77 - 1);
    char v80 = *v77;
    if (*(void *)(v79 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName)) {
      BOOL v81 = 0;
    }
    else {
      BOOL v81 = *(void *)(v79 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName + 8) == 0xE000000000000000;
    }
    if (!v81 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_17;
    }
    uint64_t v82 = v79 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100539548(v82, v78, type metadata accessor for CRLBoardCRDTData);
    unint64_t v134 = v80;
    id v83 = v80;
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1005057FC(&qword_101674450);
    CRRegister.wrappedValue.getter();
    unint64_t v84 = v53;
    uint64_t v86 = v154;
    uint64_t v85 = v155;
    sub_1005387C0(v78, type metadata accessor for CRLBoardCRDTData);
    if (v153 == v86 && v84 == v85) {
      break;
    }
    char v87 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    if (v87) {
      goto LABEL_58;
    }

    swift_release();
    unint64_t v53 = v158;
LABEL_17:
    v77 += 2;
    if (!--v75)
    {
      swift_bridgeObjectRelease_n();
      return v153;
    }
  }
  swift_release();
  swift_bridgeObjectRelease_n();
LABEL_58:
  swift_bridgeObjectRelease_n();
LABEL_61:
  uint64_t v125 = v141;
  uint64_t v124 = v142;
  sub_100651FA8();
  swift_allocError();
  *(void *)uint64_t v126 = v125;
  *(void *)(v126 + 8) = v124;
  *(unsigned char *)(v126 + 16) = 1;
  swift_bridgeObjectRetain();
  swift_willThrow();
  sub_1006F8DD4(v79, v134);
LABEL_62:
  swift_bridgeObjectRelease();
  return v153;
}

uint64_t sub_1006F8CF0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

BOOL sub_1006F8D28(uint64_t a1, uint64_t a2)
{
  return (sub_1006E5D6C(a1, a2, *(void *)(v2 + 16)) & 1) == 0;
}

uint64_t sub_1006F8D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1006F8D5C()
{
  return swift_release();
}

unint64_t sub_1006F8D64()
{
  unint64_t result = qword_10169A7F0;
  if (!qword_10169A7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169A7F0);
  }
  return result;
}

double *sub_1006F8DB8@<X0>(double **a1@<X8>)
{
  return sub_100C728FC(a1);
}

void sub_1006F8DD4(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_release();
  }
}

uint64_t sub_1006F8E14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t assignWithCopy for CRLBoardTitleValidator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CRLBoardTitleValidator()
{
  return &type metadata for CRLBoardTitleValidator;
}

uint64_t destroy for CRLBoardTitleValidator.Error(uint64_t a1)
{
  return sub_100651F90(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s8Freeform22CRLBoardTitleValidatorV5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_100651F78(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CRLBoardTitleValidator.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_100651F78(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_100651F90(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CRLBoardTitleValidator.Error(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_100651F90(v4, v5, v6);
  return a1;
}

uint64_t sub_1006F8FE8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1006F9000(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardTitleValidator.Error()
{
  return &type metadata for CRLBoardTitleValidator.Error;
}

double *sub_1006F902C@<X0>(double **a1@<X8>)
{
  return sub_1006F8DB8(a1);
}

id sub_1006F9044()
{
  uint64_t v1 = *(void **)(v0 + 32);
  if (v1)
  {
    id v2 = *(id *)(v0 + 32);
  }
  else
  {
    id v3 = sub_1006F90A0(v0);
    uint64_t v4 = *(void **)(v0 + 32);
    *(void *)(v0 + 32) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

id sub_1006F90A0(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 24);
  id v2 = [*(id *)(a1 + 16) ownerName];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  if (v3) {
    BOOL v6 = 0;
  }
  else {
    BOOL v6 = v5 == 0xE000000000000000;
  }
  if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
    goto LABEL_13;
  }
  if (v3 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v5 == v7)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_13:
    uint64_t v10 = &selRef_privateCloudDatabase;
    goto LABEL_14;
  }
  uint64_t v10 = &selRef_sharedCloudDatabase;
LABEL_14:
  id v11 = [v1 *v10];
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1006F91A4(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return _swift_task_switch(sub_1006F91C8, 0, 0);
}

uint64_t sub_1006F91C8()
{
  unint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[4];
  sub_10050BF48(0, &qword_10167BED0);
  id v4 = *(id *)(v1 + 16);
  v5._uint64_t countAndFlagsBits = 0x5264616F6C796150;
  v5._object = (void *)0xED000064726F6365;
  Class isa = CKRecordID.init(recordName:zoneID:)(v5, (CKRecordZoneID)v4).super.isa;
  v0[7] = isa;
  sub_10050BF48(0, (unint64_t *)&qword_10167C060);
  uint64_t v7 = isa;
  v8._object = (void *)0x8000000101248510;
  v8._uint64_t countAndFlagsBits = 0xD000000000000018;
  Class v9 = CKRecord.init(recordType:recordID:)(v8, (CKRecordID)v7).super.isa;
  v0[8] = v9;
  sub_100510D4C(v3, v2);
  CKRecordKeyValueSetting.subscript.setter();
  sub_10050BF48(0, &qword_10167C068);
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_101177E70;
  *(void *)(v10 + 32) = v9;
  specialized Array._endMutation()();
  id v11 = v9;
  uint64_t v12 = (void *)CKSerializeRecordModificationsOperation.init(recordsToSave:recordIDsToDelete:)();
  v0[9] = v12;
  [v12 setQualityOfService:25];
  [v12 setQueuePriority:8];
  id v13 = sub_1006F9044();
  v0[10] = v13;
  uint64_t v14 = swift_task_alloc();
  v0[11] = v14;
  *(void *)(v14 + 16) = v12;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = (void *)swift_task_alloc();
  v0[12] = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_1006F9478;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0x4474707972636E65, 0xEF293A5F28617461, sub_1006FA0D4, v14, &type metadata for Data);
}

uint64_t sub_1006F9478()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1006F9610;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_1006F959C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1006F959C()
{
  uint64_t v1 = *(void **)(v0 + 64);
  uint64_t v2 = *(void **)(v0 + 72);

  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v5(v3, v4);
}

uint64_t sub_1006F9610()
{
  uint64_t v1 = *(void **)(v0 + 80);
  uint64_t v3 = *(void **)(v0 + 64);
  uint64_t v2 = *(void **)(v0 + 72);

  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1006F9698(uint64_t a1, unint64_t a2, char a3)
{
  if (a3)
  {
    swift_errorRetain();
    sub_1005057FC((uint64_t *)&unk_10167F100);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    sub_100510D4C(a1, a2);
    sub_1005057FC((uint64_t *)&unk_10167F100);
    return CheckedContinuation.resume(returning:)();
  }
}

uint64_t sub_1006F9708(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return _swift_task_switch(sub_1006F972C, 0, 0);
}

uint64_t sub_1006F972C()
{
  unint64_t v1 = v0[5];
  uint64_t v2 = v0[4];
  id v3 = objc_allocWithZone((Class)CKDeserializeRecordModificationsOperation);
  sub_100510D4C(v2, v1);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v5 = [v3 initWithSerializedModifications:isa];
  v0[7] = v5;
  sub_100510084(v2, v1);

  [v5 setQualityOfService:25];
  [v5 setQueuePriority:8];
  id v6 = sub_1006F9044();
  v0[8] = v6;
  uint64_t v7 = swift_task_alloc();
  v0[9] = v7;
  *(void *)(v7 + 16) = v5;
  *(void *)(v7 + 24) = v6;
  Swift::String v8 = (void *)swift_task_alloc();
  v0[10] = v8;
  uint64_t v9 = sub_1005057FC(&qword_10167C048);
  *Swift::String v8 = v0;
  v8[1] = sub_1006F98D4;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0x4474707972636564, 0xEF293A5F28617461, sub_1006FA000, v7, v9);
}

uint64_t sub_1006F98D4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v3 = sub_1006F9D54;
  }
  else
  {

    swift_task_dealloc();
    id v3 = sub_1006F99F8;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1006F99F8()
{
  uint64_t v23 = v0;
  unint64_t v1 = v0[2];
  uint64_t result = swift_bridgeObjectRelease();
  if (!(v1 >> 62))
  {
    if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_22:
    uint64_t v14 = (void *)v0[7];
    swift_bridgeObjectRelease();
    sub_1006FA054();
    swift_allocError();
    unsigned char *v20 = 0;
    swift_willThrow();
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v19) {
    goto LABEL_22;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    id v3 = *(id *)(v1 + 32);
  }
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if (CKRecord.recordType.getter() == 0xD000000000000018 && v5 == 0x8000000101248510)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0) {
      goto LABEL_16;
    }
  }
  id v7 = [v4 recordID];
  id v8 = [v7 recordName];

  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  if (v9 == 0x5264616F6C796150 && v11 == 0xED000064726F6365)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
LABEL_16:
    uint64_t v14 = (void *)v0[7];
    sub_1006FA054();
    swift_allocError();
    char v16 = 1;
    goto LABEL_17;
  }
LABEL_14:
  sub_100D2A730(0x64616F6C796150, 0xE700000000000000, &v22);
  uint64_t v13 = *((void *)&v22 + 1);
  uint64_t v14 = (void *)v0[7];
  if (*((void *)&v22 + 1) >> 60 == 15)
  {
    sub_1006FA054();
    swift_allocError();
    char v16 = 2;
LABEL_17:
    *uint64_t v15 = v16;
    swift_willThrow();

LABEL_23:
    uint64_t v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
  uint64_t v17 = v22;

  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v18(v17, v13);
}

uint64_t sub_1006F9D54()
{
  unint64_t v1 = *(void **)(v0 + 64);

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

id sub_1006F9DC8(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  uint64_t v12 = sub_1005057FC(a4);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __n128 v16 = __chkstk_darwin(v12, v15);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))((char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12, v16);
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v18 + v17, (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  a7(a6, v18);
  return [a3 addOperation:a2];
}

uint64_t sub_1006F9F18(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    swift_errorRetain();
    sub_1005057FC(&qword_10167C058);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1005057FC(&qword_10167C058);
    return CheckedContinuation.resume(returning:)();
  }
}

uint64_t sub_1006F9F94()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLRealTimeDataEncryptor()
{
  return self;
}

id sub_1006FA000(uint64_t a1)
{
  return sub_1006F9DC8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), &qword_10167C058, (uint64_t)&unk_1015107B8, (uint64_t)sub_1006FA0B4, (void (*)(uint64_t, uint64_t))&CKDeserializeRecordModificationsOperation.deserializeResultBlock.setter);
}

unint64_t sub_1006FA054()
{
  unint64_t result = qword_10167C050;
  if (!qword_10167C050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167C050);
  }
  return result;
}

uint64_t sub_1006FA0A8()
{
  return sub_1006FA134(&qword_10167C058);
}

uint64_t sub_1006FA0B4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1006FA1E0(a1, a2, a3, &qword_10167C058, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1006F9F18);
}

id sub_1006FA0D4(uint64_t a1)
{
  return sub_1006F9DC8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), (uint64_t *)&unk_10167F100, (uint64_t)&unk_1015107E0, (uint64_t)sub_1006FA1C0, (void (*)(uint64_t, uint64_t))&CKSerializeRecordModificationsOperation.serializeResultBlock.setter);
}

uint64_t sub_1006FA128()
{
  return sub_1006FA134((uint64_t *)&unk_10167F100);
}

uint64_t sub_1006FA134(uint64_t *a1)
{
  uint64_t v2 = sub_1005057FC(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v6, v7);
}

uint64_t sub_1006FA1C0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1006FA1E0(a1, a2, a3, (uint64_t *)&unk_10167F100, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1006F9698);
}

uint64_t sub_1006FA1E0(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a3 & 1;
  uint64_t v9 = *(void *)(sub_1005057FC(a4) - 8);
  uint64_t v10 = v5 + ((*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  return a5(a1, a2, v8, v10);
}

unsigned char *storeEnumTagSinglePayload for CRLRealTimeDataEncryptor.DecryptionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006FA348);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLRealTimeDataEncryptor.DecryptionError()
{
  return &type metadata for CRLRealTimeDataEncryptor.DecryptionError;
}

unint64_t sub_1006FA384()
{
  unint64_t result = qword_10167C070;
  if (!qword_10167C070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167C070);
  }
  return result;
}

void *sub_1006FA3DC(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CRLLayerAnimationCascade(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *assignWithTake for CRLLayerAnimationCascade(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLLayerAnimationCascade(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLLayerAnimationCascade(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLLayerAnimationCascade()
{
  return &type metadata for CRLLayerAnimationCascade;
}

double sub_1006FA54C(double a1, double a2)
{
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_100F5EC48(v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = *((void *)v5 + 2);
  if (v6)
  {
    uint64_t v7 = (uint64_t)(v5 + 4);
    swift_bridgeObjectRetain();
    double v8 = 0.0;
    do
    {
      sub_1006FAA20(v7, (uint64_t)v22);
      uint64_t v9 = v24;
      long long v17 = v23;
      uint64_t v10 = v23;
      sub_10050F848(v22, v23);
      uint64_t v11 = *(void (**)(uint64_t, uint64_t, double))(v9 + 16);
      long long v20 = v17;
      uint64_t v21 = v9;
      sub_1005767BC(v19);
      v11(v10, v9, v8);
      double v8 = v8 + a1;
      sub_1005057FC(&qword_10167C078);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      long long v18 = v20;
      uint64_t v13 = v20;
      uint64_t v14 = sub_10050F848(v19, v20);
      *(_OWORD *)(inited + 56) = v18;
      uint64_t v15 = sub_1005767BC((uint64_t *)(inited + 32));
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v15, v14, v13);
      swift_bridgeObjectRetain();
      sub_1006E1C44(inited);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v19);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v22);
      swift_bridgeObjectRelease();
      v7 += 48;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return a2;
}

double sub_1006FA778(double a1, double a2)
{
  uint64_t v13 = _swiftEmptyArrayStorage;
  sub_1006FA54C(a1, a2);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = v3 + 32;
    do
    {
      sub_1005498A4(v5, (uint64_t)v10);
      uint64_t v6 = v11;
      uint64_t v7 = v12;
      sub_10050F848(v10, v11);
      uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 40))(v6, v7);
      sub_1006E1FC0(v8);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v10);
      v5 += 40;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return a2;
}

uint64_t sub_1006FA854(double a1, double a2)
{
  sub_1006FA54C(a1, a2);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 + 16);
  if (!v4)
  {
    long long v18 = 0u;
    long long v19 = 0u;
    uint64_t v20 = 0;
    swift_bridgeObjectRelease();
    return sub_1006C99F4((uint64_t)&v18);
  }
  uint64_t result = sub_1005498A4(v2 + 32, (uint64_t)&v15);
  if (v4 == 1)
  {
LABEL_3:
    sub_10053974C(&v15, (uint64_t)&v18);
    swift_bridgeObjectRelease();
    uint64_t v6 = *((void *)&v19 + 1);
    if (*((void *)&v19 + 1))
    {
      uint64_t v7 = v20;
      sub_10050F848(&v18, *((uint64_t *)&v19 + 1));
      (*(void (**)(uint64_t))(*(void *)(v7 + 8) + 40))(v6);
      return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v18);
    }
    return sub_1006C99F4((uint64_t)&v18);
  }
  uint64_t v8 = v3 + 72;
  unint64_t v9 = 1;
  while (v9 < *(void *)(v3 + 16))
  {
    sub_1005498A4(v8, (uint64_t)&v18);
    uint64_t v11 = v16;
    uint64_t v10 = v17;
    sub_10050F848(&v15, v16);
    double v12 = (*(double (**)(uint64_t))(*(void *)(v10 + 8) + 40))(v11);
    uint64_t v14 = *((void *)&v19 + 1);
    uint64_t v13 = v20;
    sub_10050F848(&v18, *((uint64_t *)&v19 + 1));
    if (v12 >= (*(double (**)(uint64_t))(*(void *)(v13 + 8) + 40))(v14))
    {
      uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v18);
    }
    else
    {
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v15);
      uint64_t result = sub_10053974C(&v18, (uint64_t)&v15);
    }
    ++v9;
    v8 += 40;
    if (v4 == v9) {
      goto LABEL_3;
    }
  }
  __break(1u);
  return result;
}

double sub_1006FA9F8()
{
  return sub_1006FA778(*v0, v0[2]);
}

void sub_1006FAA08(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t sub_1006FAA10()
{
  return sub_1006FA854(*v0, v0[2]);
}

uint64_t sub_1006FAA20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

id sub_1006FAA84(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  uint64_t v6 = &v5[OBJC_IVAR____TtC8Freeform53CRLCommandSetFreehandDrawingShapeItemSnappedShapeType_id];
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  *(void *)&v5[OBJC_IVAR____TtC8Freeform53CRLCommandSetFreehandDrawingShapeItemSnappedShapeType_snappedShapeType] = a2;
  v11.receiver = v5;
  v11.super_class = v2;
  [super init];
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v9;
}

void sub_1006FAE24(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5 = v3;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v9 = [a1 getBoardItemForUUID:isa];

  if (!v9) {
    goto LABEL_7;
  }
  type metadata accessor for CRLFreehandDrawingShapeItem();
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10)
  {

LABEL_7:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetFreehandDrawingShapeItemSnappedShapeType.swift", 125, 2, 28, (uint64_t)"Unable to retrieve freehand drawing shape item.", 47, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve freehand drawing shape item.");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetFreehandDrawingShapeItemSnappedShapeType.swift", 125, 2, 28);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v14, v15);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  uint64_t v11 = v10;
  id v12 = v9;
  sub_10103405C(v11, (uint64_t)&off_101518040);

  if (v4)
  {
  }
  else
  {
    sub_100CF4C98(*(void *)(v5
                            + OBJC_IVAR____TtC8Freeform53CRLCommandSetFreehandDrawingShapeItemSnappedShapeType_snappedShapeType));
    id v13 = v12;
    sub_101023724(v11, (uint64_t)&off_101518040, a3);
  }
}

uint64_t sub_1006FB050()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform53CRLCommandSetFreehandDrawingShapeItemSnappedShapeType_id;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

id sub_1006FB0BC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetFreehandDrawingShapeItemSnappedShapeType();
  return [super dealloc];
}

uint64_t sub_1006FB160()
{
  return type metadata accessor for CRLCommandSetFreehandDrawingShapeItemSnappedShapeType();
}

uint64_t type metadata accessor for CRLCommandSetFreehandDrawingShapeItemSnappedShapeType()
{
  uint64_t result = qword_10167C0B8;
  if (!qword_10167C0B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1006FB1B4()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1006FB250()
{
  char v0 = sub_1009FCAC8();

  return sub_1009FC740(v0);
}

uint64_t sub_1006FB284()
{
  return sub_1009FCAC8();
}

BOOL sub_1006FB2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a2 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v11 = __chkstk_darwin(v9, v10);
  id v12 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
  v12((char *)v19 - v13, v3, a2, v11);
  if ((swift_dynamicCast() & 1) == 0)
  {
    memset(v21, 0, 304);
    v21[38] = 1;
    LODWORD(v21[39]) = 0;
    Swift::String v15 = v21;
LABEL_7:
    sub_100522F00((uint64_t)v15, &qword_10167C0C8);
    goto LABEL_8;
  }
  memcpy(v22, v21, 0x13CuLL);
  sub_1005498A4(a1, (uint64_t)v20);
  sub_1005057FC((uint64_t *)&unk_101683FD0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    memset(v19, 0, 304);
    v19[38] = 1;
    LODWORD(v19[39]) = 0;
    sub_1006FB684((uint64_t)v22);
    Swift::String v15 = v19;
    goto LABEL_7;
  }
  memcpy(v21, v19, 0x13CuLL);
  char v14 = sub_100F7FB28((uint64_t)v22, (uint64_t)v21);
  sub_1006FB684((uint64_t)v21);
  sub_1006FB684((uint64_t)v22);
  if (v14) {
    return 1;
  }
LABEL_8:
  ((void (*)(char *, uint64_t, uint64_t))v12)(v8, v3, a2);
  if ((swift_dynamicCast() & 1) == 0)
  {
    memset(v21, 0, 300);
    long long v18 = v21;
LABEL_14:
    sub_100522F00((uint64_t)v18, (uint64_t *)&unk_10169AEF0);
    return 0;
  }
  memcpy(v22, v21, 0x12CuLL);
  sub_1005498A4(a1, (uint64_t)v20);
  sub_1005057FC((uint64_t *)&unk_101683FD0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    memset(v19, 0, 300);
    sub_100549AC4((uint64_t)v22);
    long long v18 = v19;
    goto LABEL_14;
  }
  memcpy(v21, v19, 0x12CuLL);
  char v16 = sub_1006007EC((uint64_t)v22, (uint64_t)v21);
  sub_100549AC4((uint64_t)v21);
  sub_100549AC4((uint64_t)v22);
  return (v16 & 1) != 0;
}

uint64_t sub_1006FB62C()
{
  char v0 = sub_1009FCAC8();

  return sub_1009FC740(v0);
}

uint64_t sub_1006FB660()
{
  return sub_1009FCAC8();
}

uint64_t sub_1006FB684(uint64_t a1)
{
  return a1;
}

uint64_t sub_1006FB6D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[30] = a3;
  v4[31] = v3;
  v4[28] = a1;
  v4[29] = a2;
  return _swift_task_switch(sub_1006FB6FC, 0, 0);
}

uint64_t sub_1006FB6FC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 224) + 16);
  *(void *)(v0 + 256) = v1;
  if (v1)
  {
    sub_10050F848(*(void **)(v0 + 240), *(void *)(*(void *)(v0 + 240) + 24));
    *(void *)(v0 + 264) = type metadata accessor for MainActor();
    *(void *)(v0 + 272) = static MainActor.shared.getter();
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 280) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1006FB834;
    uint64_t v3 = *(void *)(v0 + 232);
    return sub_100EDC29C(v3);
  }
  else
  {
    sub_1006700E8();
    swift_allocError();
    void *v5 = 0;
    swift_willThrow();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_1006FB834(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 288) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
    uint64_t v8 = sub_1006FBBCC;
  }
  else
  {
    *(void *)(v4 + 296) = a1;
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v9;
    uint64_t v8 = sub_1006FB9B4;
  }
  return _swift_task_switch(v8, v5, v7);
}

uint64_t sub_1006FB9B4()
{
  uint64_t v1 = v0[37];
  swift_release();
  v0[19] = &type metadata for CRLBoardLibraryHeadlessControllerDependency;
  v0[20] = &off_10152F7E0;
  v0[16] = v1;
  return _swift_task_switch(sub_1006FBA38, 0, 0);
}

uint64_t sub_1006FBA38()
{
  if (v0[32] >= 0xAuLL) {
    uint64_t v1 = 10;
  }
  else {
    uint64_t v1 = v0[32];
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v2 = (double *)swift_dynamicCastClass();
  if (!v2)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = _swiftEmptyArrayStorage;
  }
  uint64_t v3 = *((void *)v2 + 2);
  swift_release();
  uint64_t v4 = v0[28];
  if (v3 == v1)
  {
    uint64_t v5 = (double *)swift_dynamicCastClass();
    if (!v5)
    {
      swift_bridgeObjectRelease();
      uint64_t v5 = _swiftEmptyArrayStorage;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = *(void *)(type metadata accessor for IntentFile() - 8);
    uint64_t v5 = sub_1006B9E28(v4, v4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), 0, (2 * v1) | 1);
  }
  v0[38] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[39] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1006FBE90;
  return sub_1006FC850((uint64_t)v5, (uint64_t)(v0 + 16));
}

uint64_t sub_1006FBBCC()
{
  swift_release();
  return _swift_task_switch(sub_1006FBC34, 0, 0);
}

uint64_t sub_1006FBC34()
{
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[29];
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.appIntents;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v4 = v2;
  uint64_t v17 = UUID.uuidString.getter();
  uint64_t v18 = v5;
  swift_bridgeObjectRetain();
  v6._uint64_t countAndFlagsBits = 58;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v8 = *v7;
  uint64_t v9 = (void *)v7[1];
  swift_bridgeObjectRetain();
  v10._uint64_t countAndFlagsBits = v8;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v11 = sub_100528BE4();
  *(void *)(inited + 64) = v11;
  *(void *)(inited + 32) = v17;
  *(void *)(inited + 40) = v18;
  swift_getErrorValue();
  uint64_t v12 = Error.publicDescription.getter(v0[25], v0[26]);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v11;
  *(void *)(inited + 72) = v12;
  *(void *)(inited + 80) = v13;
  uint64_t v14 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Error inserting files to board: %@ - %@", 39, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  type metadata accessor for _PrebuiltAppIntentError();
  sub_1006FD4C4();
  swift_allocError();
  static _UnrecoverableError.unknownError.getter();
  swift_willThrow();
  swift_errorRelease();
  Swift::String v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1006FBE90(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 320) = a1;
  *(void *)(v3 + 328) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v4 = sub_1006FC5E0;
  }
  else
  {
    swift_release();
    id v4 = sub_1006FBFAC;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1006FBFAC()
{
  sub_10050F848(v0 + 16, v0[19]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[42] = v1;
  void *v1 = v0;
  v1[1] = sub_1006FC050;
  uint64_t v2 = v0[40];
  return sub_100E17CF0(v2);
}

uint64_t sub_1006FC050()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1006FC14C, 0, 0);
}

uint64_t sub_1006FC14C()
{
  uint64_t v1 = *sub_10050F848(*(void **)(v0 + 240), *(void *)(*(void *)(v0 + 240) + 24));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1006FC1F4;
  return sub_100E32DC8(v0 + 128, v1);
}

uint64_t sub_1006FC1F4()
{
  *(void *)(*(void *)v1 + 352) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1006FC370;
  }
  else {
    uint64_t v2 = sub_1006FC308;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1006FC308()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 128);
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 320);
  return v1(v2);
}

uint64_t sub_1006FC370()
{
  swift_bridgeObjectRelease();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 16));
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[29];
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.appIntents;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v4 = v2;
  uint64_t v17 = UUID.uuidString.getter();
  uint64_t v18 = v5;
  swift_bridgeObjectRetain();
  v6._uint64_t countAndFlagsBits = 58;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v8 = *v7;
  uint64_t v9 = (void *)v7[1];
  swift_bridgeObjectRetain();
  v10._uint64_t countAndFlagsBits = v8;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v11 = sub_100528BE4();
  *(void *)(inited + 64) = v11;
  *(void *)(inited + 32) = v17;
  *(void *)(inited + 40) = v18;
  swift_getErrorValue();
  uint64_t v12 = Error.publicDescription.getter(v0[25], v0[26]);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v11;
  *(void *)(inited + 72) = v12;
  *(void *)(inited + 80) = v13;
  uint64_t v14 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Error inserting files to board: %@ - %@", 39, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  type metadata accessor for _PrebuiltAppIntentError();
  sub_1006FD4C4();
  swift_allocError();
  static _UnrecoverableError.unknownError.getter();
  swift_willThrow();
  swift_errorRelease();
  Swift::String v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1006FC5E0()
{
  swift_release();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 16));
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[29];
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.appIntents;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v4 = v2;
  uint64_t v17 = UUID.uuidString.getter();
  uint64_t v18 = v5;
  swift_bridgeObjectRetain();
  v6._uint64_t countAndFlagsBits = 58;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v8 = *v7;
  uint64_t v9 = (void *)v7[1];
  swift_bridgeObjectRetain();
  v10._uint64_t countAndFlagsBits = v8;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v11 = sub_100528BE4();
  *(void *)(inited + 64) = v11;
  *(void *)(inited + 32) = v17;
  *(void *)(inited + 40) = v18;
  swift_getErrorValue();
  uint64_t v12 = Error.publicDescription.getter(v0[25], v0[26]);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v11;
  *(void *)(inited + 72) = v12;
  *(void *)(inited + 80) = v13;
  uint64_t v14 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Error inserting files to board: %@ - %@", 39, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  type metadata accessor for _PrebuiltAppIntentError();
  sub_1006FD4C4();
  swift_allocError();
  static _UnrecoverableError.unknownError.getter();
  swift_willThrow();
  swift_errorRelease();
  Swift::String v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1006FC850(uint64_t a1, uint64_t a2)
{
  v2[16] = a1;
  v2[17] = a2;
  sub_1005057FC(&qword_101672E90);
  v2[18] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v2[19] = v3;
  v2[20] = *(void *)(v3 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for IntentFile();
  v2[24] = v4;
  v2[25] = *(void *)(v4 - 8);
  v2[26] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_10167C0E0);
  v2[27] = swift_task_alloc();
  return _swift_task_switch(sub_1006FC9E8, 0, 0);
}

uint64_t sub_1006FC9E8()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void **)(*(void *)(*sub_10050F848(*(void **)(v0 + 136), *(void *)(*(void *)(v0 + 136) + 24))
                            + OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  *(void *)(v0 + 120) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 224) = v2;
  *(void *)(v0 + 112) = _swiftEmptyArrayStorage;
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v0 + 200);
  if (v3)
  {
    uint64_t v5 = *(void *)(v0 + 160);
    uint64_t v7 = *(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16);
    uint64_t v6 = v4 + 16;
    char v58 = v7;
    unint64_t v8 = *(void *)(v0 + 128)
       + ((*(unsigned __int8 *)(v6 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 64));
    unint64_t v55 = (void (**)(void, void, void))(v6 + 16);
    unint64_t v56 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    unint64_t v54 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    unint64_t v51 = (void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32);
    uint64_t v49 = (void (**)(uint64_t, void, uint64_t))(v5 + 16);
    uint64_t v47 = v5;
    unint64_t v50 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    id v52 = (void (**)(void, void))(v6 - 8);
    uint64_t v53 = *(void *)(v6 + 56);
    id v48 = v2;
    swift_bridgeObjectRetain();
    unint64_t v57 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 40);
    while (1)
    {
      uint64_t v16 = *(void *)(v0 + 216);
      uint64_t v17 = *(void *)(v0 + 192);
      v58(v16, v8, v17);
      uint64_t v18 = *v57;
      (*v57)(v16, 0, 1, v17);
      if ((*v56)(v16, 1, v17) == 1) {
        break;
      }
      uint64_t v20 = *(void *)(v0 + 144);
      uint64_t v19 = *(void *)(v0 + 152);
      (*v55)(*(void *)(v0 + 208), *(void *)(v0 + 216), *(void *)(v0 + 192));
      IntentFile.fileURL.getter();
      if ((*v54)(v20, 1, v19) == 1)
      {
        sub_1005CCBB8(*(void *)(v0 + 144));
        if (qword_10166FB50 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v9 = (void *)static OS_os_log.appIntents;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117E810;
        id v11 = v9;
        uint64_t v12 = IntentFile.filename.getter();
        uint64_t v14 = v13;
        *(void *)(inited + 56) = &type metadata for String;
        *(void *)(inited + 64) = sub_100528BE4();
        *(void *)(inited + 32) = v12;
        *(void *)(inited + 40) = v14;
        uint64_t v15 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v15, (uint64_t)"Trying to import file url: %@", 29, 2, inited);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();
      }
      else
      {
        uint64_t v21 = *v51;
        (*v51)(*(void *)(v0 + 184), *(void *)(v0 + 144), *(void *)(v0 + 152));
        Swift::Bool v22 = URL.startAccessingSecurityScopedResource()();
        long long v23 = *v49;
        if (v22)
        {
          v23(*(void *)(v0 + 176), *(void *)(v0 + 184), *(void *)(v0 + 152));
          unint64_t v24 = *(void *)(v0 + 112);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v24 = sub_100F62784(0, *(void *)(v24 + 16) + 1, 1, v24);
          }
          unint64_t v26 = *(void *)(v24 + 16);
          unint64_t v25 = *(void *)(v24 + 24);
          if (v26 >= v25 >> 1) {
            unint64_t v24 = sub_100F62784(v25 > 1, v26 + 1, 1, v24);
          }
          uint64_t v27 = *(void *)(v0 + 176);
          uint64_t v28 = *(void *)(v0 + 152);
          *(void *)(v24 + 16) = v26 + 1;
          v21(v24+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * v26, v27, v28);
          *(void *)(v0 + 112) = v24;
        }
        uint64_t v29 = *(void *)(v0 + 168);
        uint64_t v30 = *(void *)(v0 + 152);
        v23(v29, *(void *)(v0 + 184), v30);
        id v31 = objc_allocWithZone((Class)type metadata accessor for CRLPreinsertionAssetWrapper());
        id v32 = v48;
        URL._bridgeToObjectiveC()(v33);
        uint64_t v35 = v34;
        id v36 = [v31 initWithUrl:v34 filename:0 owner:v32];

        uint64_t v37 = *v50;
        (*v50)(v29, v30);
        id v38 = v36;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*(void *)(v0 + 120) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 120) & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        uint64_t v39 = *(void *)(v0 + 184);
        uint64_t v40 = *(void *)(v0 + 152);
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        v37(v39, v40);
      }
      (*v52)(*(void *)(v0 + 208), *(void *)(v0 + 192));
      v8 += v53;
      if (!--v3)
      {
        v18(*(void *)(v0 + 216), 1, 1, *(void *)(v0 + 192));
        break;
      }
    }
  }
  else
  {
    uint64_t v41 = *(void (**)(void, uint64_t, uint64_t, void))(v4 + 56);
    id v42 = v2;
    swift_bridgeObjectRetain();
    v41(*(void *)(v0 + 216), 1, 1, *(void *)(v0 + 192));
  }
  swift_bridgeObjectRelease();
  uint64_t v43 = *(void *)(v0 + 120);
  *(void *)(v0 + 232) = v43;
  char v59 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_101686B00 + dword_101686B00);
  NSString v44 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v44;
  *NSString v44 = v0;
  v44[1] = sub_1006FCFC0;
  uint64_t v45 = *(void *)(v0 + 136);
  return v59(v43, v45);
}

uint64_t sub_1006FCFC0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 248) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1006FD1C0;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 256) = a1;
    uint64_t v5 = sub_1006FD0F0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1006FD0F0()
{
  uint64_t v1 = (void *)v0[28];
  sub_1006FD294(v0 + 14);

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v3 = v0[32];
  return v2(v3);
}

uint64_t sub_1006FD1C0()
{
  uint64_t v1 = (void *)v0[28];
  swift_bridgeObjectRelease();
  sub_1006FD294(v0 + 14);

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1006FD294(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v7 - 8, v8);
  Swift::String v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  uint64_t v12 = *(void *)(*a1 + 16);
  long long v22[2] = *a1;
  if (v12)
  {
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v13 = v3 + 16;
    uint64_t v15 = v11 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
    uint64_t v23 = *(void *)(v13 + 56);
    unint64_t v24 = v14;
    unint64_t v16 = v13 + 40;
    uint64_t v17 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 32);
    uint64_t v18 = (void (**)(char *, char *, uint64_t))(v13 + 16);
    uint64_t v25 = v13;
    uint64_t v19 = (void (**)(char *, uint64_t))(v13 - 8);
    swift_bridgeObjectRetain();
    v22[1] = v16 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      v24(v10, v15, v2);
      uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v16;
      (*(void (**)(char *, void, uint64_t, uint64_t))v16)(v10, 0, 1, v2);
      if ((*v17)(v10, 1, v2) == 1) {
        break;
      }
      (*v18)(v6, v10, v2);
      URL.stopAccessingSecurityScopedResource()();
      (*v19)(v6, v2);
      v15 += v23;
      if (!--v12) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    swift_bridgeObjectRetain();
LABEL_7:
    v20(v10, 1, 1, v2);
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_1006FD4C4()
{
  unint64_t result = qword_101678490;
  if (!qword_101678490)
  {
    type metadata accessor for _PrebuiltAppIntentError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101678490);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLInsertFilesToBoardIntentPerformer()
{
  return &type metadata for CRLInsertFilesToBoardIntentPerformer;
}

id sub_1006FD52C()
{
  id result = sub_1006FD54C();
  qword_10171A488 = (uint64_t)result;
  return result;
}

id sub_1006FD54C()
{
  id v0 = [objc_allocWithZone((Class)CKContainerOptions) init];
  [v0 setUseZoneWidePCS:1];
  [v0 setMaintainRecordUploadOrder:1];
  [v0 setFetchChangesForMergeableValues:1];
  if (qword_10166EE70 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_10171A490;
  if (qword_10166FA98 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlCloudKitEnvironment;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v4 = v2;
  id v5 = (id)CKContainerEnvironmentString();
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  uint64_t v9 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Using %{public}@ CKContainerEnvironment", 39, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  id v10 = objc_allocWithZone((Class)CKContainerID);
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v10 initWithContainerIdentifier:v11 environment:v1];

  id v13 = [objc_allocWithZone((Class)CKContainer) initWithContainerID:v12 options:v0];
  return v13;
}

uint64_t sub_1006FD7A8()
{
  if (qword_10166EE78 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v0 = 1;
  if (byte_10171A498) {
    uint64_t v0 = 2;
  }
  qword_10171A490 = v0;
  return result;
}

uint64_t sub_1006FD808()
{
  uint64_t v3 = &type metadata for CRLFeatureFlags;
  unint64_t v4 = sub_1005396A8();
  v2[0] = 25;
  char v0 = isFeatureEnabled(_:)();
  uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v2);
  byte_10171A498 = v0 & 1;
  return result;
}

id sub_1006FDA6C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v2 - 8, v3);
  id v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 64;
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v9 = __chkstk_darwin(v6, v8);
  NSString v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0) + 64;
  uint64_t v12 = *(void *)&v1[OBJC_IVAR____TtC8Freeform22CRLSendACopyActivity_i_activityItems];
  if (v12)
  {
    if (*(void *)(v12 + 16))
    {
      sub_100522D7C(v12 + 32, (uint64_t)aBlock);
      int v13 = swift_dynamicCast();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, v13 ^ 1u, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v5, v6);
        if (qword_10166FA90 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v14 = (void *)static OS_os_log.crlSendACopy;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117E810;
        id v16 = v14;
        uint64_t v17 = UUID.uuidString.getter();
        uint64_t v19 = v18;
        *(void *)(inited + 56) = &type metadata for String;
        *(void *)(inited + 64) = sub_100528BE4();
        *(void *)(inited + 32) = v17;
        *(void *)(inited + 40) = v19;
        uint64_t v20 = static os_log_type_t.info.getter();
        sub_100BAC898((uint64_t)v16, (uint64_t)&_mh_execute_header, v20, (uint64_t)"CRLSendCopyActivity copied a Send A Copy url for board (UUID: %{public}@) to the clipboard", 90, 2, inited);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        id v21 = [self generalPasteboard];
        URL._bridgeToObjectiveC()(v22);
        unint64_t v24 = v23;
        [v21 setURL:v23];

        [v1 activityDidFinish:1];
        (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
        return 0;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v5, 1, 1, v6, v9);
    }
    sub_1005CCBB8((uint64_t)v5);
  }
  if (qword_10166FA90 != -1) {
    swift_once();
  }
  swift_beginAccess();
  unint64_t v26 = (void *)static OS_os_log.crlSendACopy;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v27 = swift_initStackObject();
  *(_OWORD *)(v27 + 16) = xmmword_10117E810;
  id v28 = v26;
  uint64_t v29 = UUID.uuidString.getter();
  uint64_t v31 = v30;
  *(void *)(v27 + 56) = &type metadata for String;
  *(void *)(v27 + 64) = sub_100528BE4();
  *(void *)(v27 + 32) = v29;
  *(void *)(v27 + 40) = v31;
  uint64_t v32 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v28, (uint64_t)&_mh_execute_header, v32, (uint64_t)"CRLSendCopyActivity failed to create Send A Copy url for board (UUID: %{public}@)", 81, 2, v27);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  id v33 = sub_1009F55D8(2u);
  id v34 = [v33 localizedDescription];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v35 = [v33 localizedRecoverySuggestion];
  if (v35)
  {
    id v36 = v35;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v38 = v37;
  }
  else
  {
    uint64_t v38 = 0;
  }
  NSString v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (v38)
  {
    NSString v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v40 = 0;
  }
  id v25 = [self alertControllerWithTitle:v39 message:v40 preferredStyle:1];

  id v41 = [self mainBundle];
  NSString v42 = String._bridgeToObjectiveC()();
  NSString v43 = String._bridgeToObjectiveC()();
  id v44 = [v41 localizedStringForKey:v42 value:v43 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = v1;
  uint64_t v46 = v1;
  NSString v47 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1006FE404;
  aBlock[5] = v45;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_10051CE64;
  void aBlock[3] = &unk_101510A58;
  id v48 = _Block_copy(aBlock);
  swift_release();
  id v49 = [self actionWithTitle:v47 style:0 handler:v48];
  _Block_release(v48);

  [v25 addAction:v49];
  sub_100F2BCC8(v25);

  return v25;
}

id sub_1006FE210()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSendACopyActivity_i();
  return [super dealloc];
}

uint64_t sub_1006FE2A4()
{
  return type metadata accessor for CRLSendACopyActivity_i();
}

uint64_t type metadata accessor for CRLSendACopyActivity_i()
{
  uint64_t result = qword_10167C188;
  if (!qword_10167C188) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1006FE2F8()
{
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

NSString sub_1006FE394()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A4A0 = (uint64_t)result;
  return result;
}

uint64_t sub_1006FE3CC()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1006FE404()
{
  return [*(id *)(v0 + 16) activityDidFinish:0];
}

uint64_t sub_1006FE418(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1006FE428()
{
  return swift_release();
}

uint64_t sub_1006FE430()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

void sub_1006FE500(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLCollaborationParticipant(0);
    sub_10070AC18((unint64_t *)&unk_10167C500, (void (*)(uint64_t))type metadata accessor for CRLCollaborationParticipant);
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v22[4];
    uint64_t v21 = v22[5];
    uint64_t v2 = v22[6];
    uint64_t v3 = v22[7];
    unint64_t v4 = v22[8];
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v21 = a1 + 56;
    uint64_t v6 = ~v5;
    uint64_t v7 = -v5;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v4 = v8 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v2 = v6;
    uint64_t v3 = 0;
  }
  int64_t v20 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    uint64_t v12 = __CocoaSet.Iterator.next()();
    if (!v12) {
      goto LABEL_34;
    }
    v22[10] = v12;
    type metadata accessor for CRLCollaborationParticipant(0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    int v13 = (char *)v22[0];
    swift_unknownObjectRelease();
    uint64_t v11 = v3;
    uint64_t v9 = v4;
    if (!v13) {
      goto LABEL_34;
    }
LABEL_32:
    uint64_t v17 = *(void **)&v13[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_isFollowing];
    *(void *)&v13[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_isFollowing] = 0;
    if (v17)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v18 = (void (*)(void *, void))static Published.subscript.modify();
      uint64_t v19 = sub_100D16BE8(v13);
      v18(v22, 0);

      swift_release();
      swift_release();
      int v13 = (char *)v19;
    }

    uint64_t v3 = v11;
    unint64_t v4 = v9;
  }
  if (v4)
  {
    uint64_t v9 = (v4 - 1) & v4;
    unint64_t v10 = __clz(__rbit64(v4)) | (v3 << 6);
    uint64_t v11 = v3;
LABEL_31:
    int v13 = (char *)*(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v13) {
      goto LABEL_34;
    }
    goto LABEL_32;
  }
  int64_t v14 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v14 >= v20) {
      goto LABEL_34;
    }
    unint64_t v15 = *(void *)(v21 + 8 * v14);
    uint64_t v11 = v3 + 1;
    if (!v15)
    {
      uint64_t v11 = v3 + 2;
      if (v3 + 2 >= v20) {
        goto LABEL_34;
      }
      unint64_t v15 = *(void *)(v21 + 8 * v11);
      if (!v15)
      {
        uint64_t v11 = v3 + 3;
        if (v3 + 3 >= v20) {
          goto LABEL_34;
        }
        unint64_t v15 = *(void *)(v21 + 8 * v11);
        if (!v15)
        {
          uint64_t v11 = v3 + 4;
          if (v3 + 4 >= v20) {
            goto LABEL_34;
          }
          unint64_t v15 = *(void *)(v21 + 8 * v11);
          if (!v15)
          {
            uint64_t v11 = v3 + 5;
            if (v3 + 5 >= v20) {
              goto LABEL_34;
            }
            unint64_t v15 = *(void *)(v21 + 8 * v11);
            if (!v15)
            {
              uint64_t v16 = v3 + 6;
              while (v20 != v16)
              {
                unint64_t v15 = *(void *)(v21 + 8 * v16++);
                if (v15)
                {
                  uint64_t v11 = v16 - 1;
                  goto LABEL_30;
                }
              }
LABEL_34:
              sub_10052E1EC();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    uint64_t v9 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v11 << 6);
    goto LABEL_31;
  }
  __break(1u);
}

void sub_1006FE868(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v5 = a2;
  if (a2 >> 62) {
    goto LABEL_33;
  }
  uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (uint64_t i = v7; i; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v28 = a4;
    unint64_t v32 = v5 & 0xC000000000000001;
    uint64_t v29 = a3;
    uint64_t v8 = 4;
    a4 = i;
    while (1)
    {
      unint64_t v10 = v32 ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)() : (char *)*(id *)(v5 + 8 * v8);
      uint64_t v11 = v10;
      if (__OFADD__(v8 - 4, 1)) {
        break;
      }
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      a3 = v13;
      int64_t v14 = v11;
      id v15 = [*(id *)&v11[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant] userIdentity];
      id v16 = [v15 userRecordID];

      if (v16)
      {
        unint64_t v17 = v5;
        id v18 = [v16 recordName];

        uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v21 = v20;

        if (v12 == v19 && a3 == v21)
        {

          swift_bridgeObjectRelease_n();
          unint64_t v5 = v17;
          a4 = i;
LABEL_5:
          uint64_t v9 = v8 - 3;
          goto LABEL_6;
        }
        char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v5 = v17;
        a4 = i;
        if (v23)
        {

          goto LABEL_5;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      a3 = (void *)v33;
      if (v33 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v26)
        {
LABEL_28:

          swift_bridgeObjectRelease();
          goto LABEL_5;
        }
      }
      else if (!*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_28;
      }
      if ((v33 & 0xC000000000000001) != 0)
      {
        unint64_t v24 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_32;
        }
        unint64_t v24 = (char *)*(id *)(v33 + 32);
      }
      id v25 = v24;
      uint64_t v9 = v8 - 3;
      swift_bridgeObjectRelease();
      if (static Date.< infix(_:_:)()) {
        IndexSet.insert(_:)(*(void *)&v25[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_collaboratorColorIndex]);
      }

LABEL_6:
      ++v8;
      if (v9 == a4)
      {
        swift_bridgeObjectRelease();
        a3 = v29;
        a4 = v28;
        goto LABEL_35;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
LABEL_35:
  uint64_t v27 = type metadata accessor for IndexSet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(a4, a1, v27);
}

NSString sub_1006FEC04()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A4B0 = (uint64_t)result;
  return result;
}

NSString sub_1006FEC3C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A4B8 = (uint64_t)result;
  return result;
}

NSString sub_1006FEC74()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A4C0 = (uint64_t)result;
  return result;
}

NSString sub_1006FECAC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A4C8 = (uint64_t)result;
  return result;
}

void sub_1006FEDD8(void *a1)
{
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_isFollowing];
  *(void *)&v1[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_isFollowing] = a1;
  id v4 = a1;
  if (a1)
  {
    id v10 = v4;
    swift_getKeyPath();
    swift_getKeyPath();
    id v5 = v10;
    uint64_t v6 = v1;
    uint64_t v7 = (void (*)(unsigned char *, void))static Published.subscript.modify();
    sub_100CB8330(&v12, v6);

    v7(v13, 0);
    swift_release();
    swift_release();
  }
  else if (v3)
  {
    id v11 = v4;
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v8 = (void (*)(unsigned char *, void))static Published.subscript.modify();
    uint64_t v9 = (void *)sub_100D16BE8(v1);
    v8(v13, 0);

    swift_release();
    swift_release();
  }
  else
  {
  }
}

uint64_t sub_1006FF078()
{
  return sub_100703F5C();
}

uint64_t sub_1006FF150@<X0>(void *a1@<X8>)
{
  return sub_10070AC74(a1);
}

uint64_t sub_1006FF164(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_1006FF1F0()
{
  return sub_1006FF5A0();
}

uint64_t sub_1006FF218@<X0>(unsigned char *a1@<X8>)
{
  return sub_1006FF6A0(a1);
}

uint64_t sub_1006FF22C(uint64_t a1, void **a2)
{
  return sub_1006FF730(a1, a2);
}

uint64_t sub_1006FF330()
{
  return sub_100703F5C();
}

uint64_t sub_1006FF3DC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v0 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v0 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0)
  {
    sub_1006FEDD8(0);
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    sub_1006FE500(v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1006FF510(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_1006FF58C()
{
  return sub_1006FF5A0();
}

uint64_t sub_1006FF5A0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1006FF620(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  return static Published.subscript.setter();
}

uint64_t sub_1006FF68C@<X0>(unsigned char *a1@<X8>)
{
  return sub_1006FF6A0(a1);
}

uint64_t sub_1006FF6A0@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1006FF71C(uint64_t a1, void **a2)
{
  return sub_1006FF730(a1, a2);
}

uint64_t sub_1006FF730(uint64_t a1, void **a2)
{
  id v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

BOOL sub_1006FF804(uint64_t a1)
{
  swift_getObjectType();
  sub_100522E9C(a1, (uint64_t)v8, &qword_101672BF0);
  if (!v9)
  {
    sub_100522F00((uint64_t)v8, &qword_101672BF0);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v3 = [*(id *)(v1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant) userIdentity];
  id v4 = [*(id *)&v7[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant] userIdentity];
  BOOL v5 = sub_1006FF8F4((BOOL)v4);

  return v5;
}

BOOL sub_1006FF8F4(BOOL result)
{
  if (result)
  {
    id v2 = (void *)result;
    sub_10050BF48(0, (unint64_t *)&unk_10167C540);
    id v3 = v1;
    id v4 = v2;
    char v5 = static NSObject.== infix(_:_:)();

    if (v5) {
      return 1;
    }
    id v6 = v4;
    id v7 = [v3 lookupInfo];
    if (v7)
    {
      id v8 = v7;
      id v9 = [v6 lookupInfo];
      if (v9)
      {
        id v10 = v9;
        sub_10050BF48(0, &qword_101673FB0);
        id v11 = v8;
        char v12 = static NSObject.== infix(_:_:)();

        if (v12)
        {

          return 1;
        }
      }
      else
      {
      }
      id v13 = [v8 emailAddress];
      if (v13)
      {
        int64_t v14 = v13;
        uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v17 = v16;

        id v18 = [v6 lookupInfo];
        if (v18
          && (uint64_t v19 = v18,
              id v20 = [v18 emailAddress],
              v19,
              v20))
        {
          uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v23 = v22;

          if (v15 == v21 && v17 == v23)
          {

            swift_bridgeObjectRelease_n();
            return 1;
          }
          char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v35) {
            goto LABEL_28;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      id v24 = [v8 phoneNumber];
      if (v24)
      {
        id v25 = v24;
        uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v28 = v27;

        id v29 = [v6 lookupInfo];
        if (v29)
        {
          uint64_t v30 = v29;
          id v31 = [v29 phoneNumber];

          if (v31)
          {
            uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v34 = v33;

            if (v26 == v32 && v28 == v34)
            {
              swift_bridgeObjectRelease_n();
LABEL_28:

              return 1;
            }
            char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            return (v36 & 1) != 0;
          }
        }
        swift_bridgeObjectRelease();
      }
    }
    else
    {
    }
    return 0;
  }
  return result;
}

uint64_t sub_1006FFC9C()
{
  char v1 = sub_100701290();
  uint64_t v2 = 1718379891;
  if (v1)
  {
    id v3 = (void *)0xE400000000000000;
  }
  else
  {
    uint64_t v2 = 0x726568746FLL;
    id v3 = (void *)0xE500000000000000;
  }
  uint64_t v20 = v2;
  swift_bridgeObjectRetain();
  v4._uint64_t countAndFlagsBits = 58;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  id v5 = [*(id *)(v0 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant) userIdentity];
  id v6 = [v5 lookupInfo];

  if (v6 && (id v7 = [v6 emailAddress], v6, v7))
  {
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    id v10 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v11._uint64_t countAndFlagsBits = v8;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = v20;
  v12._object = v3;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v13._uint64_t countAndFlagsBits = 58;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  type metadata accessor for CRLCollaboratorPresence();
  uint64_t v14 = Array.description.getter();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v17._uint64_t countAndFlagsBits = v14;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v18._uint64_t countAndFlagsBits = 125;
  v18._object = (void *)0xE100000000000000;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  return 123;
}

uint64_t sub_1006FFEF8(uint64_t a1, uint64_t a2, int a3)
{
  Swift::String v4 = v3;
  int v33 = a3;
  uint64_t v31 = a2;
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  id v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  id v32 = v4;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v35 = a1;
  uint64_t v16 = sub_100ED4F9C((uint64_t (*)(id *))sub_10070D20C, (uint64_t)v34, v37);
  swift_bridgeObjectRelease();
  if (v16) {
    return (uint64_t)v16;
  }
  uint64_t v30 = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v31, v6);
  objc_allocWithZone((Class)type metadata accessor for CRLCollaboratorPresence());
  id v18 = v32;
  id v19 = sub_100602C18((uint64_t)v18, (uint64_t)v15, (uint64_t)v10, v33 & 1);

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v37 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v20) {
    goto LABEL_11;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unint64_t v21 = v37;
  id v22 = v19;
  uint64_t v23 = sub_10070BDA4(v21, (uint64_t)v22);
  char v25 = v24;
  swift_bridgeObjectRelease();

  if (v25)
  {
LABEL_11:
    swift_getKeyPath();
    swift_getKeyPath();
    id v17 = v19;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    goto LABEL_14;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v17 = v22;
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  if (!(v37 >> 62))
  {
    if (*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10) >= v23) {
      goto LABEL_9;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v29 < v23) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v23 & 0x8000000000000000) == 0)
  {
    sub_100F49AD8(v23, v23, (uint64_t)v17);
LABEL_14:
    unint64_t v27 = v37;
    swift_getKeyPath();
    swift_getKeyPath();
    unint64_t v36 = v27;
    id v28 = v18;
    static Published.subscript.setter();
    sub_1006FF3DC();
    return (uint64_t)v17;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1007003EC(uint64_t a1)
{
  uint64_t v6[2] = a1;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t result = sub_100B30008((uint64_t (*)(id *))sub_10070D250, (uint64_t)v6);
  uint64_t v3 = result;
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v4 >= v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4 >= result)
    {
LABEL_3:
      sub_100F4CF48(v3, v4);
      unint64_t v5 = v7;
      swift_getKeyPath();
      swift_getKeyPath();
      v6[3] = v5;
      v1;
      static Published.subscript.setter();
      return sub_1006FF3DC();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100700628()
{
  return static UUID.== infix(_:_:)() & 1;
}

char *sub_1007008EC()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  id v28 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  unint64_t v7 = (char *)&v25 - v6;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unint64_t v8 = v29;
  if (!(v29 >> 62))
  {
    uint64_t v9 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (char *)swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_3;
    }
LABEL_23:
    swift_bridgeObjectRelease_n();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t result = (char *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v9 = (uint64_t)result;
  if (!result) {
    goto LABEL_23;
  }
LABEL_3:
  unint64_t v27 = v8 & 0xC000000000000001;
  if ((v8 & 0xC000000000000001) != 0)
  {
    uint64_t result = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    uint64_t result = (char *)*(id *)(v8 + 32);
  }
  uint64_t v11 = result;
  unint64_t v26 = v9 - 1;
  if (v9 == 1)
  {
LABEL_7:
    swift_bridgeObjectRelease_n();
    return v11;
  }
  if (v9 < 2) {
    goto LABEL_27;
  }
  if (v27 || (unint64_t v12 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10), v12 >= 2) && v26 < v12)
  {
    uint64_t v13 = 0;
    uint64_t v14 = (void (**)(char *, char *, uint64_t))(v1 + 16);
    uint64_t v15 = (void (**)(char *, uint64_t))(v1 + 8);
    unint64_t v25 = v8;
    do
    {
      if (v27) {
        uint64_t v16 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v16 = (char *)*(id *)(v8 + 8 * v13 + 40);
      }
      id v17 = v16;
      id v18 = &v11[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
      swift_beginAccess();
      id v19 = *v14;
      (*v14)(v7, v18, v0);
      uint64_t v20 = &v17[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
      swift_beginAccess();
      unint64_t v21 = v28;
      v19(v28, v20, v0);
      char v22 = static Date.< infix(_:_:)();
      uint64_t v23 = *v15;
      (*v15)(v21, v0);
      v23(v7, v0);
      if (v22) {
        char v24 = v11;
      }
      else {
        char v24 = v17;
      }
      if (v22) {
        uint64_t v11 = v17;
      }

      ++v13;
      unint64_t v8 = v25;
    }
    while (v26 != v13);
    goto LABEL_7;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100700C48()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v1) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v1 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v1)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      return v1;
    }
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v2 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_6;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v2 = *(id *)(v3 + 32);
LABEL_6:
    uint64_t v1 = (uint64_t)v2;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

unsigned char *sub_100700D84()
{
  if ((sub_100701290() & 1) == 0) {
    return 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v7 >> 62) {
    goto LABEL_20;
  }
  uint64_t v0 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v0)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
    return 0;
  }
  while (1)
  {
    uint64_t v1 = (v7 & 0xC000000000000001) != 0
       ? (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
       : *(id *)(v7 + 32);
    id v2 = v1;
    if (v1[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_isLocalParticipant]) {
      break;
    }

    if (v0 != 1)
    {
      uint64_t v3 = 5;
      while (1)
      {
        uint64_t v4 = (v7 & 0xC000000000000001) != 0
           ? (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : *(id *)(v7 + 8 * v3);
        id v2 = v4;
        uint64_t v5 = v3 - 3;
        if (__OFADD__(v3 - 4, 1)) {
          break;
        }
        if (v4[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_isLocalParticipant]) {
          goto LABEL_7;
        }

        ++v3;
        if (v5 == v0) {
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_20:
      swift_bridgeObjectRetain();
      uint64_t v0 = _CocoaArrayWrapper.endIndex.getter();
      if (v0) {
        continue;
      }
    }
    goto LABEL_16;
  }
LABEL_7:
  swift_bridgeObjectRelease_n();
  return v2;
}

void sub_100700F08()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_hasUnifiedContact;
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_hasUnifiedContact) & 1) == 0
    && [self authorizationStatusForEntityType:0] == (id)3)
  {
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_10117DF50;
    id v4 = [objc_allocWithZone((Class)CNAvatarViewController) init];
    id v5 = [v4 descriptorForRequiredKeys];

    *(void *)(v3 + 32) = v5;
    *(void *)(v3 + 40) = [self descriptorForRequiredKeys];
    specialized Array._endMutation()();
    uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
    id v7 = [objc_allocWithZone((Class)CNContactStore) init];
    sub_1005057FC(&qword_101693420);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v9 = [v6 unifiedContactsInStore:v7 keysToFetch:isa error:0];

    sub_10050BF48(0, (unint64_t *)&qword_10167C580);
    unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_5;
      }
    }
    else if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_5:
      if ((v10 & 0xC000000000000001) != 0)
      {
        id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v11 = *(id *)(v10 + 32);
      }
      id v12 = v11;
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact);
      *(void *)(v1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact) = v12;

      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
LABEL_11:
    *(unsigned char *)(v1 + v2) = 1;
  }
  uint64_t v15 = OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact;
  if (!*(void *)(v1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact))
  {
    id v16 = [*(id *)(v1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant) userIdentity];
    id v17 = sub_10070B094(v16);

    id v18 = *(void **)(v1 + v15);
    *(void *)(v1 + v15) = v17;
  }
}

uint64_t sub_100701290()
{
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v3 = v2;
  id v4 = [*(id *)(v0 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant) userIdentity];
  id v5 = [v4 userRecordID];

  if (v5)
  {
    id v6 = [v5 recordName];

    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    if (v1 == v7 && v3 == v9) {
      char v11 = 1;
    }
    else {
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = 0;
  }
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1007014C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC(&qword_101687FD0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100700F08();
  if ((sub_100701290() & 1) == 0
    && (uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact)) != 0
    && (id v9 = v8, v10 = sub_100701704(), v9, v10))
  {
    char v11 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact);
    if (v11)
    {
      id v12 = v11;
      sub_1007018F8();

      uint64_t v13 = type metadata accessor for PersonNameComponents();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = a1;
      uint64_t v17 = 0;
    }
    else
    {
      uint64_t v23 = type metadata accessor for PersonNameComponents();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
      uint64_t v15 = v23;
      uint64_t v16 = a1;
      uint64_t v17 = 1;
    }
    return v14(v16, v17, 1, v15);
  }
  else
  {
    id v18 = [*(id *)(v2 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant) userIdentity];
    id v19 = [v18 nameComponents];

    if (v19)
    {
      static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v20 = type metadata accessor for PersonNameComponents();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v7, 0, 1, v20);
    }
    else
    {
      uint64_t v21 = type metadata accessor for PersonNameComponents();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v7, 1, 1, v21);
    }
    return sub_10070D1A4((uint64_t)v7, a1);
  }
}

BOOL sub_100701704()
{
  id v1 = [v0 givenName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v2 = String.count.getter();
  swift_bridgeObjectRelease();
  if (v2 > 0) {
    return 1;
  }
  id v3 = [v0 familyName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v4 = String.count.getter();
  swift_bridgeObjectRelease();
  if (v4 > 0) {
    return 1;
  }
  id v5 = [v0 middleName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v6 = String.count.getter();
  swift_bridgeObjectRelease();
  if (v6 > 0) {
    return 1;
  }
  id v7 = [v0 namePrefix];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v8 = String.count.getter();
  swift_bridgeObjectRelease();
  if (v8 > 0) {
    return 1;
  }
  id v9 = [v0 nameSuffix];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v10 = String.count.getter();
  swift_bridgeObjectRelease();
  if (v10 > 0) {
    return 1;
  }
  id v12 = [v0 nickname];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v13 = String.count.getter();
  swift_bridgeObjectRelease();
  return v13 > 0;
}

uint64_t sub_1007018F8()
{
  id v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101687FD0);
  __chkstk_darwin(v2 - 8, v3);
  char v22 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for PersonNameComponents();
  uint64_t v5 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  PersonNameComponents.init()();
  id v9 = [v0 namePrefix];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  PersonNameComponents.namePrefix.setter();
  id v10 = [v1 givenName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  PersonNameComponents.givenName.setter();
  id v11 = [v1 middleName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  PersonNameComponents.middleName.setter();
  id v12 = [v1 familyName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  PersonNameComponents.familyName.setter();
  id v13 = [v1 nameSuffix];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  PersonNameComponents.nameSuffix.setter();
  id v14 = [v1 nickname];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  PersonNameComponents.nickname.setter();
  id v15 = [v1 phoneticGivenName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v16 = [v1 phoneticMiddleName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v17 = [v1 phoneticFamilyName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  if (String.count.getter() <= 0 && String.count.getter() <= 0 && String.count.getter() < 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    PersonNameComponents.init()();
    PersonNameComponents.givenName.setter();
    PersonNameComponents.middleName.setter();
    PersonNameComponents.familyName.setter();
    uint64_t v19 = v21;
    id v18 = v22;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v22, v8, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v18, 0, 1, v19);
    PersonNameComponents.phoneticRepresentation.setter();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v19);
  }
}

uint64_t sub_100701D90()
{
  uint64_t v0 = sub_1005057FC(&qword_101687FD0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PersonNameComponents();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007014C4((uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_100522F00((uint64_t)v3, &qword_101687FD0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
    id v10 = self;
    Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
    id v12 = [v10 localizedStringFromPersonNameComponents:isa style:0 options:0];

    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return v9;
}

uint64_t sub_100701F80()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101687FD0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PersonNameComponents();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  id v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007014C4((uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100522F00((uint64_t)v5, &qword_101687FD0);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
  id v12 = self;
  Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  id v14 = [v12 localizedStringFromPersonNameComponents:isa style:0 options:0];

  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  swift_bridgeObjectRetain();
  uint64_t v15 = String.count.getter();
  swift_bridgeObjectRelease();
  if (!v15)
  {
    id v22 = [*(id *)(v1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant) userIdentity];
    id v23 = [v22 lookupInfo];

    if (v23)
    {
      id v24 = [v23 emailAddress];
      if (v24)
      {
        unint64_t v25 = v24;
        uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();

        swift_bridgeObjectRetain();
        uint64_t v27 = String.count.getter();
        swift_bridgeObjectRelease();
        if (v27 >= 1)
        {
          swift_bridgeObjectRelease();

          uint64_t v11 = v26;
          goto LABEL_5;
        }
        swift_bridgeObjectRelease();
      }
      id v28 = [v23 phoneNumber];
      if (v28)
      {
        unint64_t v29 = v28;
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        swift_bridgeObjectRetain();
        uint64_t v30 = String.count.getter();
        swift_bridgeObjectRelease();
        if (v30 <= 0)
        {

          swift_bridgeObjectRelease();
        }
        else
        {
          id v31 = objc_allocWithZone((Class)CNPhoneNumber);
          NSString v32 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v33 = [v31 initWithStringValue:v32];

          id v34 = [v33 formattedStringValue];
          if (!v34)
          {
            swift_bridgeObjectRelease();

            return 0;
          }
          uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
      }
    }
  }
LABEL_5:
  swift_bridgeObjectRetain();
  uint64_t v16 = String.count.getter();
  swift_bridgeObjectRelease();
  if (!v16)
  {
    id v17 = [self mainBundle];
    NSString v18 = String._bridgeToObjectiveC()();
    NSString v19 = String._bridgeToObjectiveC()();
    id v20 = [v17 localizedStringForKey:v18 value:v19 table:0];

    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_10070244C()
{
  uint64_t v0 = sub_1005057FC(&qword_101687FD0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PersonNameComponents();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007014C4((uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_100522F00((uint64_t)v3, &qword_101687FD0);
    return sub_100701F80();
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
  uint64_t v9 = self;
  Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  id v11 = [v9 localizedStringFromPersonNameComponents:isa style:1 options:0];

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v14 = v13;

  if ((v14 & 0x2000000000000000) != 0) {
    uint64_t v15 = HIBYTE(v14) & 0xF;
  }
  else {
    uint64_t v15 = v12 & 0xFFFFFFFFFFFFLL;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  if (!v15)
  {
    swift_bridgeObjectRelease();
    return sub_100701F80();
  }
  return v12;
}

id sub_100702684()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCollaborationParticipant(0);
  return [super dealloc];
}

uint64_t sub_1007028B8()
{
  return type metadata accessor for CRLCollaborationParticipant(0);
}

uint64_t type metadata accessor for CRLCollaborationParticipant(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10167C210);
}

void sub_1007028E0()
{
  sub_10070A988(319, &qword_10167C220, &qword_10167C228);
  if (v0 <= 0x3F)
  {
    sub_100702A7C();
    if (v1 <= 0x3F)
    {
      type metadata accessor for UUID();
      if (v2 <= 0x3F)
      {
        sub_10070A988(319, (unint64_t *)&unk_10167C238, &qword_10167AF00);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_100702A7C()
{
  if (!qword_10167C230)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10167C230);
    }
  }
}

uint64_t sub_100702AD4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CRLCollaborationParticipant(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100702B14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_id;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_100702B8C()
{
  uint64_t v0 = sub_100701F80();
  uint64_t v2 = v1;
  if (v0 == sub_100701F80() && v2 == v3) {
    char v5 = 0;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_100702C58()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  if (!(v5 >> 62))
  {
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    return NSNotFound.getter();
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v5 & 0xC000000000000001) != 0)
  {
    uint64_t v1 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_6;
  }
  if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v1 = (char *)*(id *)(v5 + 32);
LABEL_6:
    uint64_t v2 = v1;
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)&v2[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_collaboratorColorIndex];

    return v3;
  }
  __break(1u);
  return result;
}

id sub_100702D74(Swift::UInt a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cachedCursorColors);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (!*(void *)(*v3 + 16) || (uint64_t v5 = sub_1009563E8(a1), (v6 & 1) == 0))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = (void *)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = *(void **)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (!v8)
    {
      swift_bridgeObjectRelease();
LABEL_14:
      if (qword_10166F340 != -1) {
        swift_once();
      }
      uint64_t v7 = (void *)qword_10171AD78;
      goto LABEL_17;
    }
    if ((v18 & 0xC000000000000001) != 0)
    {
      uint64_t v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_24;
      }
      uint64_t v9 = (char *)*(id *)(v18 + 32);
    }
    id v10 = v9;
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_100874B04(a1, *(void *)&v10[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_collaboratorColorIndex]);

    if (qword_10166F340 == -1)
    {
LABEL_11:
      id v11 = (void *)qword_10171AD78;
      sub_10050BF48(0, (unint64_t *)&qword_10168F9E0);
      id v12 = v11;
      char v13 = static NSObject.== infix(_:_:)();

      if ((v13 & 1) == 0)
      {
        swift_beginAccess();
        id v15 = v8;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v17 = *v3;
        *uint64_t v3 = 0x8000000000000000;
        sub_1009759B4((uint64_t)v15, a1, isUniquelyReferenced_nonNull_native);
        *uint64_t v3 = v17;
        swift_bridgeObjectRelease();
        swift_endAccess();
        return v15;
      }

      goto LABEL_14;
    }
LABEL_24:
    swift_once();
    goto LABEL_11;
  }
  uint64_t v7 = *(void **)(*(void *)(v4 + 56) + 8 * v5);
LABEL_17:

  return v7;
}

void sub_100703070(Swift::UInt *a1, uint64_t a2)
{
  Swift::UInt v3 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (!(v13 >> 62))
  {
    id v4 = *(id *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  id v4 = (id)_CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_11;
  }
LABEL_3:
  if ((v13 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_14;
    }
    uint64_t v5 = (char *)*(id *)(v13 + 32);
  }
  char v6 = v5;
  swift_bridgeObjectRelease();
  id v4 = sub_100874B04(v3, *(void *)&v6[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_collaboratorColorIndex]);

  if (qword_10166F340 != -1) {
LABEL_14:
  }
    swift_once();
  uint64_t v7 = (void *)qword_10171AD78;
  sub_10050BF48(0, (unint64_t *)&qword_10168F9E0);
  id v8 = v7;
  char v9 = static NSObject.== infix(_:_:)();

  if ((v9 & 1) == 0)
  {
    id v10 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cachedCursorColors);
    swift_beginAccess();
    id v4 = v4;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v10;
    *id v10 = 0x8000000000000000;
    sub_1009759B4((uint64_t)v4, v3, isUniquelyReferenced_nonNull_native);
    *id v10 = v12;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
}

uint64_t sub_100703304()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (!(v5 >> 62))
  {
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    if (qword_10166F348 == -1)
    {
LABEL_9:
      uint64_t v2 = qword_10171AD80;
      swift_bridgeObjectRetain();
      return v2;
    }
LABEL_13:
    swift_once();
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v5 & 0xC000000000000001) != 0)
  {
    uint64_t v0 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_6;
  }
  if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v0 = (char *)*(id *)(v5 + 32);
LABEL_6:
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_100874DE8(*(void *)&v1[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_collaboratorColorIndex]);
  swift_bridgeObjectRetain();

  return v2;
}

id sub_10070348C(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_1007034FC(void *a1)
{
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 56) = sub_10050BF48(0, &qword_10167C510);
  *(void *)(inited + 64) = sub_10070BBCC();
  *(void *)(inited + 32) = a1;
  id v5 = v3;
  id v6 = a1;
  id v7 = v1;
  id v8 = [v7 description];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  *(void *)(inited + 96) = &type metadata for String;
  unint64_t v12 = sub_100528BE4();
  *(void *)(inited + 104) = v12;
  *(void *)(inited + 72) = v9;
  *(void *)(inited + 80) = v11;
  uint64_t v13 = static os_log_type_t.info.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v13, (uint64_t)"Comparing handle for equivalency. handle=[%@], shareParticipant=[%@]", 68, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  id v14 = [v7 userIdentity];
  id v15 = [v14 lookupInfo];

  if (!v15)
  {
    uint64_t v38 = (void *)static OS_os_log.realTimeSync;
    uint64_t v39 = swift_initStackObject();
    *(_OWORD *)(v39 + 16) = xmmword_10117E810;
    id v40 = v7;
    id v15 = v38;
    id v41 = [v40 description];
    uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v44 = v43;

    *(void *)(v39 + 56) = &type metadata for String;
    *(void *)(v39 + 64) = v12;
    *(void *)(v39 + 32) = v42;
    *(void *)(v39 + 40) = v44;
    uint64_t v45 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v45, (uint64_t)"Missing user identity for participant: %@", 41, 2, v39);
    swift_setDeallocating();
    swift_arrayDestroy();
    goto LABEL_14;
  }
  id v16 = [v15 phoneNumber];
  if (!v16)
  {
LABEL_12:
    id v46 = sub_100703924();
    if (v46)
    {
      id v47 = v46;
      unsigned __int8 v37 = [v46 isEquivalentToHandle:v6];

      id v15 = v47;
      goto LABEL_15;
    }
LABEL_14:
    unsigned __int8 v37 = 0;
    goto LABEL_15;
  }
  uint64_t v17 = v16;
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v20 = v19;

  v21._uint64_t countAndFlagsBits = 43;
  v21._object = (void *)0xE100000000000000;
  if (String.hasPrefix(_:)(v21)
    || (id v22 = [v6 normalizedValue]) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  id v23 = v22;
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v26 = v25;

  v27._uint64_t countAndFlagsBits = 43;
  v27._object = (void *)0xE100000000000000;
  if (!String.hasPrefix(_:)(v27))
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  id v28 = (id)static OS_os_log.realTimeSync;
  uint64_t v29 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v28, (uint64_t)&_mh_execute_header, v29, (uint64_t)"Working around canonicalization issue with phone numbers", 56, 2, (uint64_t)_swiftEmptyArrayStorage);

  unint64_t v30 = sub_10070B5DC(1uLL, v24, v26);
  unint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  swift_bridgeObjectRelease();
  unsigned __int8 v37 = sub_10070C688(v18, v20, v30, v32, v34, v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_15:

  return v37 & 1;
}

id sub_100703924()
{
  id v1 = [v0 userIdentity];
  id v2 = [v1 lookupInfo];

  if (!v2)
  {
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v6 = (void *)static OS_os_log.realTimeSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v8 = v0;
    id v9 = v6;
    id v10 = [v8 description];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v11;
    *(void *)(inited + 40) = v13;
    uint64_t v14 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Missing user identity for participant: %@", 41, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    return 0;
  }
  id v3 = [v2 emailAddress];
  if (v3)
  {
    id v4 = v3;
    id v5 = [self normalizedEmailAddressHandleForValue:v3];
  }
  else
  {
    id v15 = [v2 phoneNumber];
    if (!v15)
    {
LABEL_11:
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v17 = (void *)static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v18 = swift_initStackObject();
      *(_OWORD *)(v18 + 16) = xmmword_10117E810;
      id v19 = v17;
      id v20 = v0;
      id v21 = [v20 description];
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v24 = v23;

      *(void *)(v18 + 56) = &type metadata for String;
      *(void *)(v18 + 64) = sub_100528BE4();
      *(void *)(v18 + 32) = v22;
      *(void *)(v18 + 40) = v24;
      uint64_t v25 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v25, (uint64_t)"Missing handle for participant: %@", 34, 2, v18);

      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      return 0;
    }
    id v4 = v15;
    id v5 = [self normalizedPhoneNumberHandleForValue:v15 isoCountryCode:0];
  }
  id v16 = v5;

  if (!v16) {
    goto LABEL_11;
  }

  return v16;
}

uint64_t sub_100703C90()
{
  swift_beginAccess();
  type metadata accessor for CRLCollaborationParticipant(0);
  swift_bridgeObjectRetain();
  uint64_t v0 = Array.description.getter();
  id v2 = v1;
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = v0;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v4._uint64_t countAndFlagsBits = 125;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  return 123;
}

uint64_t sub_100703D50()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingParticipantChangeTimer;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingParticipantChangeTimer);
  if (v2) {
    [v2 invalidate];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection__activeParticipants;
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_10167C520);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100703E60()
{
  return type metadata accessor for CRLCollaborationParticipantCollection(0);
}

uint64_t type metadata accessor for CRLCollaborationParticipantCollection(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10167C298);
}

void sub_100703E88()
{
  sub_10070A988(319, &qword_10167C2A8, (uint64_t *)&unk_10167C2B0);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100703F48()
{
  return sub_100703F5C();
}

uint64_t sub_100703F5C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void sub_100703FC8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  unint64_t v0 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v0;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  *(void *)(inited + 56) = sub_1005057FC((uint64_t *)&unk_10167C2B0);
  *(void *)(inited + 64) = sub_10070C888();
  *(void *)(inited + 32) = v4;
  uint64_t v3 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"Updating collection of active participants to : %@", 50, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

void sub_10070417C(void *a1)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101674230);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v52 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  id v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v15 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRealTimeEnters);
    uint64_t v16 = swift_beginAccess();
    uint64_t v60 = v15;
    if (*(void *)(*v15 + 16))
    {
      unint64_t v61 = v10;
      char v65 = 0;
      uint64_t v64 = _swiftEmptyArrayStorage;
      __chkstk_darwin(v16, v17);
      unint64_t v47 = v1;
      *(&v46 - 4) = v1;
      *(&v46 - 3) = (unint64_t)a1;
      *(&v46 - 2) = (unint64_t)&v64;
      *(&v46 - 1) = (unint64_t)&v65;
      id v49 = a1;
      uint64_t v18 = swift_bridgeObjectRetain();
      sub_10070C400(v18, (void (*)(char *, uint64_t))sub_10070D0D0);
      swift_bridgeObjectRelease();
      uint64_t v19 = *((void *)v64 + 2);
      id v48 = v64;
      if (v19)
      {
        uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
        uint64_t v21 = v7 + 16;
        id v20 = v22;
        uint64_t v23 = (char *)v64
            + ((*(unsigned __int8 *)(v21 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 64));
        uint64_t v24 = *(void *)(v21 + 56);
        char v58 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 32);
        unint64_t v56 = (void (**)(uint64_t, char *, uint64_t))(v21 + 16);
        swift_bridgeObjectRetain();
        char v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 40);
        unint64_t v46 = (v21 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
        unint64_t v55 = (void (**)(unint64_t, uint64_t))(v21 - 8);
        uint64_t v54 = (v21 - 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        unint64_t v57 = v14;
        uint64_t v25 = (uint64_t)v61;
        uint64_t v26 = v52;
        uint64_t v51 = v21;
        unint64_t v50 = v22;
        while (1)
        {
          v20(v14, v23, v6);
          uint64_t v53 = *v59;
          v53(v14, 0, 1, v6);
          if ((*v58)(v14, 1, v6) == 1) {
            break;
          }
          uint64_t v62 = v19;
          unint64_t v30 = v20;
          (*v56)(v25, v14, v6);
          unint64_t v31 = v60;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          unint64_t v32 = sub_100955FC8(v25);
          char v34 = v33;
          swift_bridgeObjectRelease();
          if (v34)
          {
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v36 = *v31;
            uint64_t v63 = *v31;
            *unint64_t v31 = 0x8000000000000000;
            unsigned __int8 v37 = v31;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_10097D2C0();
              uint64_t v36 = v63;
            }
            id v28 = *v55;
            (*v55)(*(void *)(v36 + 48) + v32 * v24, v6);
            uint64_t v38 = v63;
            uint64_t v39 = *(void *)(v63 + 56);
            uint64_t v40 = type metadata accessor for CRLRealTimeEnter(0);
            uint64_t v41 = *(void *)(v40 - 8);
            uint64_t v42 = v39 + *(void *)(v41 + 72) * v32;
            uint64_t v43 = v52;
            sub_10070D0DC(v42, v52);
            sub_100588A18(v32, v38);
            *unsigned __int8 v37 = v38;
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v43, 0, 1, v40);
            uint64_t v26 = v43;
            id v20 = v50;
          }
          else
          {
            uint64_t v27 = type metadata accessor for CRLRealTimeEnter(0);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
            id v28 = *v55;
            id v20 = v30;
          }
          uint64_t v25 = (uint64_t)v61;
          uint64_t v29 = v62;
          v28((unint64_t)v61, v6);
          sub_100522F00(v26, (uint64_t *)&unk_101674230);
          swift_endAccess();
          v23 += v24;
          uint64_t v19 = v29 - 1;
          uint64_t v14 = v57;
          if (!v19)
          {
            v53(v57, 1, 1, v6);
            break;
          }
        }
      }
      else
      {
        uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
        swift_bridgeObjectRetain();
        v44(v14, 1, 1, v6);
      }
      swift_bridgeObjectRelease();
      if (v65 == 1)
      {
        id v45 = [self defaultCenter];
        if (qword_10166FE68 != -1) {
          swift_once();
        }
        [v45 postNotificationName:qword_10171C3C8 object:v47];
      }
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_10070474C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, unint64_t *a5, unsigned char *a6)
{
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  id v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_100704908(a2, a4);
  if (result)
  {
    unsigned __int16 v17 = result;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, v11);
    unint64_t v18 = *a5;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a5 = v18;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v18 = sub_100F617D8(0, *(void *)(v18 + 16) + 1, 1, v18);
      *a5 = v18;
    }
    unint64_t v21 = *(void *)(v18 + 16);
    unint64_t v20 = *(void *)(v18 + 24);
    if (v21 >= v20 >> 1)
    {
      unint64_t v18 = sub_100F617D8(v20 > 1, v21 + 1, 1, v18);
      *a5 = v18;
    }
    *(void *)(v18 + 16) = v21 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v12 + 32))(v18+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v21, v15, v11);
    if (v17 >= 0x100u) {
      *a6 = 1;
    }
  }
  return result;
}

uint64_t sub_100704908(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v7 = __chkstk_darwin(v4, v6).n128_u64[0];
  uint64_t v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v10 = [a2 participants:v7];
  sub_10050BF48(0, (unint64_t *)&qword_101693410);
  unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v25 = a1;
  uint64_t v12 = sub_100ED4F9C(sub_10070D060, (uint64_t)v24, v11);
  swift_bridgeObjectRelease();
  if (!v12) {
    goto LABEL_7;
  }
  uint64_t v13 = type metadata accessor for CRLRealTimeEnter(0);
  Date.init(timeIntervalSinceReferenceDate:)();
  uint64_t v14 = a1 + *(int *)(v13 + 20);
  int v15 = *(unsigned __int8 *)(a1 + *(int *)(v13 + 28));
  uint64_t v16 = (void *)sub_100704BC0(v12, v14, (uint64_t)v9, 0, v15);
  LOBYTE(v13) = v17;

  if (v13)
  {
    unint64_t v18 = sub_10070A6DC();
    if (v18)
    {
      unint64_t v20 = v18;

      swift_getKeyPath();
      swift_getKeyPath();
      char v26 = v15;
      id v21 = v20;
      static Published.subscript.setter();

      (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v9, v4);
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v9, v4);
    }
LABEL_7:
    int v22 = 0;
    return v22 | (v12 != 0);
  }
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v9, v4);

  int v22 = 256;
  return v22 | (v12 != 0);
}

uint64_t sub_100704B5C(id *a1, BOOL *a2)
{
  id v3 = [*a1 userIdentity];
  LOBYTE(a2) = sub_1006FF8F4(*a2);

  return a2 & 1;
}

uint64_t sub_100704BC0(void *a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v86 = a5;
  int v93 = a4;
  uint64_t v94 = a3;
  uint64_t v99 = a2;
  id v92 = a1;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v89 = *(void *)(v6 - 8);
  uint64_t v90 = v6;
  __chkstk_darwin(v6, v7);
  uint64_t v88 = &v85[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9, v10);
  char v87 = &v85[-v11];
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v12 = (void *)static OS_os_log.realTimeSync;
  uint64_t v98 = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  long long v100 = xmmword_10117E810;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v14 = (void *)(v5 + 16);
  swift_beginAccess();
  int v15 = (objc_class *)type metadata accessor for CRLCollaborationParticipant(0);
  id v16 = v12;
  swift_retain();
  swift_bridgeObjectRetain();
  Class v97 = v15;
  uint64_t v17 = Array.description.getter();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  uint64_t v105 = 123;
  unint64_t v106 = 0xE100000000000000;
  v20._uint64_t countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v21._uint64_t countAndFlagsBits = 125;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v22 = v105;
  unint64_t v23 = v106;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v24 = sub_100528BE4();
  *(void *)(inited + 64) = v24;
  *(void *)(inited + 32) = v22;
  *(void *)(inited + 40) = v23;
  uint64_t v25 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v16, (uint64_t)&_mh_execute_header, v25, (uint64_t)"addPresence BEFORE\n%@\n", 22, 2, inited);
  swift_setDeallocating();
  uint64_t v26 = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  id v27 = v92;
  id v28 = [v92 userIdentity];
  uint64_t v95 = v5;
  sub_100709C08(v28);
  unint64_t v30 = v29;

  unint64_t v96 = v24;
  if (v30)
  {
    unint64_t v31 = (void *)static OS_os_log.realTimeSync;
    uint64_t v32 = swift_initStackObject();
    *(_OWORD *)(v32 + 16) = v100;
    id v33 = v30;
    id v34 = v31;
    id v35 = [v33 description];
    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v38 = v37;

    *(void *)(v32 + 56) = &type metadata for String;
    *(void *)(v32 + 64) = v24;
    *(void *)(v32 + 32) = v36;
    *(void *)(v32 + 40) = v38;
    uint64_t v39 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v34, (uint64_t)&_mh_execute_header, v39, (uint64_t)"addPresence: found existing participant: \n%@\n", 45, 2, v32);
    swift_setDeallocating();
    swift_arrayDestroy();

    uint64_t v40 = v26;
    uint64_t v41 = v95;
  }
  else
  {
    uint64_t v91 = v26;
    id v42 = objc_allocWithZone(v97);
    id v43 = v27;
    id v44 = sub_10070B68C(v43, v86 & 1);

    swift_beginAccess();
    id v33 = v44;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    id v45 = (void *)static OS_os_log.realTimeSync;
    uint64_t v46 = swift_initStackObject();
    *(_OWORD *)(v46 + 16) = v100;
    id v34 = v45;
    id v47 = [v33 description];
    uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v50 = v49;

    unint64_t v51 = v96;
    *(void *)(v46 + 56) = &type metadata for String;
    *(void *)(v46 + 64) = v51;
    *(void *)(v46 + 32) = v48;
    *(void *)(v46 + 40) = v50;
    uint64_t v52 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v34, (uint64_t)&_mh_execute_header, v52, (uint64_t)"addPresence: did not find any existing participant, adding a new one: \n%@\n", 74, 2, v46);
    swift_setDeallocating();
    uint64_t v40 = v91;
    swift_arrayDestroy();
    uint64_t v41 = v95;
  }

  uint64_t v53 = sub_1006FFEF8(v99, v94, v93 & 1);
  LODWORD(v95) = v54;
  if ((v54 & 1) == 0)
  {
    unint64_t v55 = (uint64_t *)(v41 + 24);
    swift_beginAccess();
    uint64_t v56 = *(void *)(v41 + 24);
    uint64_t v57 = *(void *)(v56 + 16);
    id v58 = v33;
    swift_bridgeObjectRetain();
    uint64_t v91 = v40;
    uint64_t v94 = v53;
    if (v57 && (unint64_t v59 = sub_100956528((uint64_t)v58), (v60 & 1) != 0))
    {
      unint64_t v61 = *(void **)(*(void *)(v56 + 56) + 8 * v59);
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v61 = &_swiftEmptySetSingleton;
    }

    swift_bridgeObjectRelease();
    uint64_t v104 = (uint64_t)v61;
    uint64_t v63 = v88;
    uint64_t v62 = v89;
    uint64_t v64 = v90;
    (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v88, v99, v90);
    char v65 = v87;
    sub_100CB4BC8((uint64_t)v87, v63);
    (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v65, v64);
    uint64_t v66 = v104;
    swift_beginAccess();
    id v67 = v58;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v101 = *v55;
    *unint64_t v55 = 0x8000000000000000;
    sub_10097318C(v66, v67, isUniquelyReferenced_nonNull_native);
    *unint64_t v55 = v101;

    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v102 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v69 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v69 = *(void *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v53 = v94;
    if (v69 && (sub_100701290() & 1) == 0) {
      sub_1007054B0(v67);
    }
    id v70 = [self defaultCenter];
    if (qword_10166EE90 != -1) {
      swift_once();
    }
    [v70 postNotificationName:qword_10171A4B8 object:v67];
  }
  uint64_t v71 = (void *)static OS_os_log.realTimeSync;
  uint64_t v72 = swift_initStackObject();
  *(_OWORD *)(v72 + 16) = v100;
  swift_retain();
  id v73 = v71;
  swift_bridgeObjectRetain();
  uint64_t v74 = Array.description.getter();
  uint64_t v75 = v33;
  double v77 = v76;
  swift_bridgeObjectRelease();
  unint64_t v102 = 123;
  unint64_t v103 = 0xE100000000000000;
  v78._uint64_t countAndFlagsBits = v74;
  v78._object = v77;
  String.append(_:)(v78);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v79._uint64_t countAndFlagsBits = 125;
  v79._object = (void *)0xE100000000000000;
  String.append(_:)(v79);
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v80 = v102;
  unint64_t v81 = v103;
  unint64_t v82 = v96;
  *(void *)(v72 + 56) = &type metadata for String;
  *(void *)(v72 + 64) = v82;
  *(void *)(v72 + 32) = v80;
  *(void *)(v72 + 40) = v81;
  uint64_t v83 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v73, (uint64_t)&_mh_execute_header, v83, (uint64_t)"addPresence AFTER\n%@\n", 21, 2, v72);

  swift_setDeallocating();
  swift_arrayDestroy();

  return v53;
}

void sub_1007054B0(void *a1)
{
  uint64_t v2 = v1;
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v6 = v4;
  id v7 = a1;
  id v8 = [v7 description];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v12 = sub_100528BE4();
  *(void *)(inited + 64) = v12;
  *(void *)(inited + 32) = v9;
  *(void *)(inited + 40) = v11;
  uint64_t v13 = static os_log_type_t.default.getter();
  sub_100BAC898(v6, (uint64_t)&_mh_execute_header, v13, (uint64_t)"Adding a pending active participant: %@", 39, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRemovedParticipants);
  swift_beginAccess();
  unint64_t v15 = *v14;
  swift_bridgeObjectRetain();
  LOBYTE(v6) = sub_100ED5B08((uint64_t)v7, v15);
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
  {
    id v28 = (unint64_t *)(v2
                             + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingAddedParticipants);
    swift_beginAccess();
    unint64_t v29 = *v28;
    swift_bridgeObjectRetain();
    char v30 = sub_100ED5B08((uint64_t)v7, v29);
    swift_bridgeObjectRelease();
    if (v30) {
      goto LABEL_10;
    }
    swift_beginAccess();
    id v31 = v7;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_9:
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      goto LABEL_10;
    }
LABEL_13:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_9;
  }
  swift_beginAccess();
  id v16 = v7;
  uint64_t v17 = sub_10070BEBC(v14);

  if ((unint64_t)*v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18 >= v17) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
  uint64_t v18 = *(void *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v18 < v17)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
LABEL_6:
  sub_100F4CF30(v17, v18);
  swift_endAccess();
  uint64_t v19 = (void *)static OS_os_log.realTimeSync;
  uint64_t v20 = swift_initStackObject();
  *(_OWORD *)(v20 + 16) = xmmword_10117E810;
  id v21 = v16;
  id v22 = v19;
  id v23 = [v21 description];
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;

  *(void *)(v20 + 56) = &type metadata for String;
  *(void *)(v20 + 64) = v12;
  *(void *)(v20 + 32) = v24;
  *(void *)(v20 + 40) = v26;
  uint64_t v27 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v22, (uint64_t)&_mh_execute_header, v27, (uint64_t)"This participant was already pending removal so that operation was cancelled: %@", 80, 2, v20);
  swift_setDeallocating();
  swift_arrayDestroy();

LABEL_10:
  sub_100705C60();
}

void sub_100705888(void *a1)
{
  uint64_t v2 = v1;
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v6 = v4;
  id v7 = a1;
  id v8 = [v7 description];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v12 = sub_100528BE4();
  *(void *)(inited + 64) = v12;
  *(void *)(inited + 32) = v9;
  *(void *)(inited + 40) = v11;
  uint64_t v13 = static os_log_type_t.default.getter();
  sub_100BAC898(v6, (uint64_t)&_mh_execute_header, v13, (uint64_t)"Removing a pending active participant: %@", 41, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingAddedParticipants);
  swift_beginAccess();
  unint64_t v15 = *v14;
  swift_bridgeObjectRetain();
  LOBYTE(v6) = sub_100ED5B08((uint64_t)v7, v15);
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
  {
    id v28 = (unint64_t *)(v2
                             + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRemovedParticipants);
    swift_beginAccess();
    unint64_t v29 = *v28;
    swift_bridgeObjectRetain();
    char v30 = sub_100ED5B08((uint64_t)v7, v29);
    swift_bridgeObjectRelease();
    if (v30) {
      goto LABEL_10;
    }
    swift_beginAccess();
    id v31 = v7;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_9:
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      goto LABEL_10;
    }
LABEL_13:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_9;
  }
  swift_beginAccess();
  id v16 = v7;
  uint64_t v17 = sub_10070BEBC(v14);

  if ((unint64_t)*v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18 >= v17) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
  uint64_t v18 = *(void *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v18 < v17)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
LABEL_6:
  sub_100F4CF30(v17, v18);
  swift_endAccess();
  uint64_t v19 = (void *)static OS_os_log.realTimeSync;
  uint64_t v20 = swift_initStackObject();
  *(_OWORD *)(v20 + 16) = xmmword_10117E810;
  id v21 = v16;
  id v22 = v19;
  id v23 = [v21 description];
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;

  *(void *)(v20 + 56) = &type metadata for String;
  *(void *)(v20 + 64) = v12;
  *(void *)(v20 + 32) = v24;
  *(void *)(v20 + 40) = v26;
  uint64_t v27 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v22, (uint64_t)&_mh_execute_header, v27, (uint64_t)"This participant was already pending addition so that operation was cancelled: %@", 81, 2, v20);
  swift_setDeallocating();
  swift_arrayDestroy();

LABEL_10:
  sub_100705C60();
}

void sub_100705C60()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingParticipantChangeTimer;
  if (!*(void *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingParticipantChangeTimer))
  {
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v2 = (id)static OS_os_log.realTimeSync;
    uint64_t v3 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"Starting a timer to process pending changes.", 44, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t v4 = self;
    aBlock[4] = sub_10070D010;
    aBlock[5] = v0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_10051CE64;
    void aBlock[3] = &unk_101510A80;
    uint64_t v5 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    id v6 = [v4 scheduledTimerWithTimeInterval:0 repeats:v5 block:5.0];
    _Block_release(v5);
    id v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
  }
}

uint64_t sub_100705DF4()
{
  unint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingAddedParticipants;
  swift_beginAccess();
  if (*(void *)v2 >> 62) {
    goto LABEL_50;
  }
  uint64_t v3 = &unk_10167C000;
  if (!*(void *)((*(void *)v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    uint64_t v4 = (unint64_t *)(v1 + v3[76]);
    uint64_t result = swift_beginAccess();
    unint64_t v6 = *v4;
    if (v6 >> 62) {
      goto LABEL_60;
    }
    if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
    return result;
  }
LABEL_5:
  while (2)
  {
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v7 = (void *)static OS_os_log.realTimeSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    uint64_t v9 = *(void *)v2;
    uint64_t v10 = sub_1005057FC((uint64_t *)&unk_10167C2B0);
    *(void *)(inited + 56) = v10;
    unint64_t v61 = (void *)v2;
    unint64_t v11 = sub_10070C888();
    *(void *)(inited + 64) = v11;
    *(void *)(inited + 32) = v9;
    unint64_t v12 = (void *)(v1 + v3[76]);
    swift_beginAccess();
    uint64_t v57 = v12;
    uint64_t v13 = *v12;
    *(void *)(inited + 96) = v10;
    *(void *)(inited + 104) = v11;
    *(void *)(inited + 72) = v13;
    id v14 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v15, (uint64_t)"Processing pending additions: %@ and removals: %@", 49, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    unint64_t v16 = v65;
    uint64_t v17 = (void *)static OS_os_log.realTimeSync;
    uint64_t v18 = swift_initStackObject();
    *(_OWORD *)(v18 + 16) = xmmword_10117E810;
    unint64_t v59 = v11;
    uint64_t v60 = v10;
    *(void *)(v18 + 56) = v10;
    *(void *)(v18 + 64) = v11;
    *(void *)(v18 + 32) = v16;
    uint64_t v58 = v16;
    swift_bridgeObjectRetain_n();
    id v19 = v17;
    uint64_t v20 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v20, (uint64_t)"Active participants (before additions): %@", 42, 2, v18);
    swift_setDeallocating();
    swift_arrayDestroy();

    uint64_t v2 = *(void *)v2;
    if (!((unint64_t)v2 >> 62))
    {
      uint64_t v3 = *(void **)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v3) {
        goto LABEL_53;
      }
      goto LABEL_9;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v3 = (void *)_CocoaArrayWrapper.endIndex.getter();
    if (v3)
    {
LABEL_9:
      unint64_t v56 = v1;
      id v21 = 0;
      uint64_t v63 = v2;
      unint64_t v64 = v2 & 0xC000000000000001;
      uint64_t v62 = v2 + 32;
      while (1)
      {
        if (v64) {
          id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v22 = *(id *)(v62 + 8 * (void)v21);
        }
        id v23 = v22;
        BOOL v24 = __OFADD__(v21, 1);
        id v21 = (char *)v21 + 1;
        if (v24)
        {
          __break(1u);
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }
        uint64_t v25 = v65;
        if (v65 >> 62)
        {
          swift_bridgeObjectRetain_n();
          unint64_t v1 = _CocoaArrayWrapper.endIndex.getter();
          if (!v1) {
            goto LABEL_22;
          }
        }
        else
        {
          unint64_t v1 = *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          if (!v1) {
            goto LABEL_22;
          }
        }
        if ((v25 & 0xC000000000000001) != 0) {
          id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v26 = *(id *)(v25 + 32);
        }
        uint64_t v27 = v26;
        type metadata accessor for CRLCollaborationParticipant(0);
        char v28 = static NSObject.== infix(_:_:)();

        if ((v28 & 1) == 0)
        {
          if (v1 == 1) {
            goto LABEL_22;
          }
          if ((v25 & 0xC000000000000001) != 0)
          {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
            char v30 = static NSObject.== infix(_:_:)();
            swift_unknownObjectRelease();
            if ((v30 & 1) == 0)
            {
              if (v1 != 2)
              {
                uint64_t v31 = 2;
                do
                {
                  specialized _ArrayBuffer._getElementSlowPath(_:)();
                  uint64_t v2 = v31 + 1;
                  if (__OFADD__(v31, 1)) {
                    goto LABEL_48;
                  }
                  char v32 = static NSObject.== infix(_:_:)();
                  swift_unknownObjectRelease();
                  if (v32) {
                    goto LABEL_42;
                  }
                  ++v31;
                  BOOL v33 = v2 == v1;
                  uint64_t v2 = v63;
                }
                while (!v33);
              }
LABEL_22:
              swift_bridgeObjectRelease_n();
              id v29 = v23;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              unint64_t v1 = *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (v1 >= *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
              goto LABEL_11;
            }
          }
          else
          {
            id v34 = *(id *)(v25 + 40);
            char v35 = static NSObject.== infix(_:_:)();

            if ((v35 & 1) == 0)
            {
              if (v1 != 2)
              {
                uint64_t v36 = 6;
                while (1)
                {
                  uint64_t v2 = v36 - 3;
                  if (__OFADD__(v36 - 4, 1)) {
                    break;
                  }
                  id v37 = *(id *)(v25 + 8 * v36);
                  char v38 = static NSObject.== infix(_:_:)();

                  if (v38)
                  {
LABEL_42:
                    swift_bridgeObjectRelease_n();
                    uint64_t v2 = v63;
                    goto LABEL_11;
                  }
                  ++v36;
                  BOOL v33 = v2 == v1;
                  uint64_t v2 = v63;
                  if (v33) {
                    goto LABEL_22;
                  }
                }
LABEL_49:
                __break(1u);
LABEL_50:
                swift_bridgeObjectRetain();
                uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
                swift_bridgeObjectRelease();
                uint64_t v3 = (void *)&unk_10167C000;
                if (!v40) {
                  goto LABEL_3;
                }
                goto LABEL_5;
              }
              goto LABEL_22;
            }
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_11:

        if (v21 == v3)
        {
          swift_bridgeObjectRelease_n();
          unint64_t v39 = v65;
          unint64_t v1 = v56;
          goto LABEL_54;
        }
      }
    }
LABEL_53:
    swift_bridgeObjectRelease_n();
    unint64_t v39 = v58;
LABEL_54:
    uint64_t v41 = (void *)static OS_os_log.realTimeSync;
    uint64_t v42 = swift_initStackObject();
    *(_OWORD *)(v42 + 16) = xmmword_10117E810;
    *(void *)(v42 + 56) = v60;
    *(void *)(v42 + 64) = v59;
    *(void *)(v42 + 32) = v39;
    id v43 = v41;
    swift_bridgeObjectRetain();
    uint64_t v44 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v43, (uint64_t)&_mh_execute_header, v44, (uint64_t)"Active participants (after additions): %@", 41, 2, v42);
    swift_setDeallocating();
    swift_arrayDestroy();

    swift_retain();
    uint64_t v45 = sub_10070CB70((uint64_t *)&v65, v1);
    swift_release();
    if (v65 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v2 < v45) {
        goto LABEL_59;
      }
LABEL_56:
      sub_100F4CF30(v45, v2);
      uint64_t v46 = (void *)static OS_os_log.realTimeSync;
      uint64_t v47 = swift_initStackObject();
      *(_OWORD *)(v47 + 16) = xmmword_10117E810;
      uint64_t v48 = v65;
      *(void *)(v47 + 56) = v60;
      *(void *)(v47 + 64) = v59;
      *(void *)(v47 + 32) = v48;
      id v49 = v46;
      swift_bridgeObjectRetain();
      uint64_t v50 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v49, (uint64_t)&_mh_execute_header, v50, (uint64_t)"Active participants (after removals): %@", 40, 2, v47);
      swift_setDeallocating();
      swift_arrayDestroy();

      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      swift_bridgeObjectRetain();
      static Published.subscript.setter();
      unint64_t v51 = (void *)static OS_os_log.realTimeSync;
      uint64_t v52 = swift_initStackObject();
      *(_OWORD *)(v52 + 16) = xmmword_10117E810;
      swift_getKeyPath();
      swift_getKeyPath();
      id v53 = v51;
      static Published.subscript.getter();
      swift_release();
      swift_release();
      *(void *)(v52 + 56) = v60;
      *(void *)(v52 + 64) = v59;
      *(void *)(v52 + 32) = v48;
      uint64_t v54 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v53, (uint64_t)&_mh_execute_header, v54, (uint64_t)"Updating collection of active participants to : %@", 50, 2, v52);
      swift_setDeallocating();
      swift_arrayDestroy();

      swift_bridgeObjectRetain();
      sub_1007095B8(v58, v48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      void *v57 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      *unint64_t v61 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v2 = *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v2 >= v45) {
        goto LABEL_56;
      }
LABEL_59:
      __break(1u);
LABEL_60:
      swift_bridgeObjectRetain();
      uint64_t v55 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v55) {
        continue;
      }
    }
    return result;
  }
}

void sub_100706740(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v105 = a1;
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101674230);
  __chkstk_darwin(v3 - 8, v4);
  unint64_t v6 = (unint64_t)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = type metadata accessor for UUID();
  uint64_t KeyPath = *(void *)(v122 - 8);
  __chkstk_darwin(v122, v8);
  uint64_t v10 = (uint64_t)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166FBA0 != -1) {
    goto LABEL_150;
  }
  while (1)
  {
    swift_beginAccess();
    unint64_t v11 = (void *)static OS_os_log.realTimeSync;
    uint64_t v98 = sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    long long v97 = xmmword_10117E810;
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    swift_beginAccess();
    uint64_t v13 = type metadata accessor for CRLCollaborationParticipant(0);
    id v14 = v11;
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v117 = v13;
    uint64_t v15 = Array.description.getter();
    uint64_t v106 = v2;
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    uint64_t v127 = 123;
    unint64_t v128 = 0xE100000000000000;
    v18._uint64_t countAndFlagsBits = v15;
    v18._object = v17;
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v19._uint64_t countAndFlagsBits = 125;
    v19._object = (void *)0xE100000000000000;
    String.append(_:)(v19);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v20 = v127;
    unint64_t v21 = v128;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v96 = sub_100528BE4();
    *(void *)(inited + 64) = v96;
    *(void *)(inited + 32) = v20;
    *(void *)(inited + 40) = v21;
    uint64_t v2 = v106;
    uint64_t v22 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v22, (uint64_t)"removePresence BEFORE\n%@\n", 25, 2, inited);
    swift_setDeallocating();
    uint64_t v95 = sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    id v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(KeyPath + 16);
    KeyPath += 16;
    v23(v10, v105, v122);
    uint64_t v24 = type metadata accessor for CRLRealTimeEnter(0);
    (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v6, 1, 1, v24);
    swift_beginAccess();
    sub_10057DB50(v6, v10);
    swift_endAccess();
    unint64_t v103 = *(void *)(v2 + 16);
    if (!(v103 >> 62))
    {
      uint64_t v25 = *(void *)((v103 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v26 = v25;
      unint64_t v27 = v103;
      if (!v25) {
        break;
      }
      goto LABEL_4;
    }
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    unint64_t v27 = v103;
    if (!v26) {
      break;
    }
LABEL_4:
    unint64_t v28 = 0;
    unint64_t v102 = v27 & 0xC000000000000001;
    unint64_t v99 = v27 + 32;
    uint64_t v100 = v27 & 0xFFFFFFFFFFFFFF8;
    uint64_t v10 = (uint64_t)&unk_101189D80;
    uint64_t v116 = (char *)&type metadata for Swift.AnyObject + 8;
    uint64_t v101 = v26;
    while (1)
    {
      if (v102)
      {
        unint64_t v29 = v28;
        id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v28 >= *(void *)(v100 + 16)) {
          goto LABEL_149;
        }
        unint64_t v29 = v28;
        id v30 = *(id *)(v99 + 8 * v28);
      }
      id v115 = v30;
      BOOL v31 = __OFADD__(v29, 1);
      unint64_t v32 = v29 + 1;
      if (v31) {
        goto LABEL_148;
      }
      unint64_t v104 = v32;
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      unint64_t v33 = v124;
      unint64_t v112 = v124;
      if (v124 >> 62) {
        break;
      }
      unint64_t v6 = *(void *)((v124 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v6) {
        goto LABEL_13;
      }
LABEL_5:

      swift_bridgeObjectRelease();
      unint64_t v28 = v104;
      if (v104 == v101) {
        goto LABEL_152;
      }
    }
    swift_bridgeObjectRetain();
    unint64_t v33 = v112;
    unint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v6) {
      goto LABEL_5;
    }
LABEL_13:
    unint64_t v113 = v6;
    unint64_t v114 = v33 & 0xC000000000000001;
    unint64_t v110 = v33 + 32;
    uint64_t v111 = v33 & 0xFFFFFFFFFFFFFF8;
    unint64_t v6 = 0;
LABEL_15:
    if (v114)
    {
      id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v31 = __OFADD__(v6++, 1);
      if (v31) {
        goto LABEL_137;
      }
    }
    else
    {
      if (v6 >= *(void *)(v111 + 16)) {
        goto LABEL_146;
      }
      id v34 = *(id *)(v110 + 8 * v6);
      BOOL v31 = __OFADD__(v6++, 1);
      if (v31) {
        goto LABEL_137;
      }
    }
    uint64_t v122 = v6;
    id v121 = v34;
    if ((static UUID.== infix(_:_:)() & 1) == 0) {
      goto LABEL_14;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    unint64_t v35 = v124;
    unint64_t v126 = v124;
    if (v124 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      if (!v6)
      {
LABEL_72:
        swift_bridgeObjectRelease();
        unint64_t v40 = v126;
        if (v126 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t KeyPath = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t KeyPath = *(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
LABEL_74:
        uint64_t v10 = (uint64_t)&unk_101189D80;
LABEL_75:
        if (v40 >> 62)
        {
          swift_bridgeObjectRetain();
          unint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if ((uint64_t)v6 < KeyPath) {
            goto LABEL_145;
          }
        }
        else
        {
          unint64_t v6 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if ((uint64_t)v6 < KeyPath) {
            goto LABEL_145;
          }
        }
        sub_100F4CF48(KeyPath, v6);
        unint64_t v60 = v126;
        swift_getKeyPath();
        swift_getKeyPath();
        unint64_t v124 = v60;
        id v61 = v115;
        static Published.subscript.setter();
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        if (v124 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v62 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v62 = *(void *)((v124 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        if (v62) {
          goto LABEL_116;
        }
        sub_1006FEDD8(0);
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        unint64_t v108 = v124;
        id v109 = v61;
        if ((v124 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          __CocoaSet.makeIterator()();
          sub_10070AC18((unint64_t *)&unk_10167C500, (void (*)(uint64_t))type metadata accessor for CRLCollaborationParticipant);
          Set.Iterator.init(_cocoa:)();
          uint64_t v2 = v127;
          unint64_t v120 = v128;
          uint64_t v63 = v129;
          uint64_t v64 = v130;
          unint64_t v6 = v131;
        }
        else
        {
          uint64_t v65 = -1 << *(unsigned char *)(v124 + 32);
          uint64_t v66 = *(void *)(v124 + 56);
          unint64_t v120 = v124 + 56;
          uint64_t v67 = ~v65;
          uint64_t v68 = -v65;
          if (v68 < 64) {
            uint64_t v69 = ~(-1 << v68);
          }
          else {
            uint64_t v69 = -1;
          }
          unint64_t v6 = v69 & v66;
          uint64_t v70 = swift_bridgeObjectRetain();
          uint64_t v63 = v67;
          uint64_t v64 = 0;
          uint64_t v2 = v70;
        }
        uint64_t v107 = v63;
        uint64_t v118 = v2 & 0x7FFFFFFFFFFFFFFFLL;
        int64_t v119 = (unint64_t)(v63 + 64) >> 6;
        while (1)
        {
          if (v2 < 0)
          {
            uint64_t v73 = __CocoaSet.Iterator.next()();
            if (!v73) {
              goto LABEL_115;
            }
            uint64_t v123 = v73;
            swift_unknownObjectRetain();
            swift_dynamicCast();
            uint64_t v74 = (char *)v124;
            swift_unknownObjectRelease();
            uint64_t v10 = v64;
            uint64_t v71 = v6;
            if (!v74) {
              goto LABEL_115;
            }
          }
          else
          {
            if (v6)
            {
              uint64_t v71 = (v6 - 1) & v6;
              unint64_t v72 = __clz(__rbit64(v6)) | (v64 << 6);
              uint64_t v10 = v64;
            }
            else
            {
              int64_t v75 = v64 + 1;
              if (__OFADD__(v64, 1)) {
                goto LABEL_138;
              }
              if (v75 >= v119) {
                goto LABEL_115;
              }
              unint64_t v76 = *(void *)(v120 + 8 * v75);
              uint64_t v10 = v64 + 1;
              if (!v76)
              {
                uint64_t v10 = v64 + 2;
                if (v64 + 2 >= v119) {
                  goto LABEL_115;
                }
                unint64_t v76 = *(void *)(v120 + 8 * v10);
                if (!v76)
                {
                  uint64_t v10 = v64 + 3;
                  if (v64 + 3 >= v119) {
                    goto LABEL_115;
                  }
                  unint64_t v76 = *(void *)(v120 + 8 * v10);
                  if (!v76)
                  {
                    uint64_t v10 = v64 + 4;
                    if (v64 + 4 >= v119) {
                      goto LABEL_115;
                    }
                    unint64_t v76 = *(void *)(v120 + 8 * v10);
                    if (!v76)
                    {
                      uint64_t v10 = v64 + 5;
                      if (v64 + 5 >= v119) {
                        goto LABEL_115;
                      }
                      unint64_t v76 = *(void *)(v120 + 8 * v10);
                      if (!v76)
                      {
                        uint64_t v10 = v64 + 6;
                        if (v64 + 6 >= v119) {
                          goto LABEL_115;
                        }
                        unint64_t v76 = *(void *)(v120 + 8 * v10);
                        if (!v76)
                        {
                          uint64_t v77 = v64 + 7;
                          while (v119 != v77)
                          {
                            unint64_t v76 = *(void *)(v120 + 8 * v77++);
                            if (v76)
                            {
                              uint64_t v10 = v77 - 1;
                              goto LABEL_111;
                            }
                          }
LABEL_115:
                          sub_10052E1EC();
                          swift_bridgeObjectRelease();
                          uint64_t v2 = v106;
                          uint64_t v10 = (uint64_t)&unk_101189D80;
                          id v61 = v109;
LABEL_116:
                          swift_getKeyPath();
                          swift_getKeyPath();
                          static Published.subscript.getter();
                          swift_release();
                          swift_release();
                          if (v124 >> 62)
                          {
                            swift_bridgeObjectRetain();
                            uint64_t v81 = _CocoaArrayWrapper.endIndex.getter();
                            swift_bridgeObjectRelease();
                          }
                          else
                          {
                            uint64_t v81 = *(void *)((v124 & 0xFFFFFFFFFFFFFF8) + 0x10);
                          }
                          swift_bridgeObjectRelease();
                          if (!v81) {
                            sub_100705888(v61);
                          }
LABEL_14:

                          unint64_t v6 = v122;
                          if (v122 == v113) {
                            goto LABEL_5;
                          }
                          goto LABEL_15;
                        }
                      }
                    }
                  }
                }
              }
LABEL_111:
              uint64_t v71 = (v76 - 1) & v76;
              unint64_t v72 = __clz(__rbit64(v76)) + (v10 << 6);
            }
            uint64_t v74 = (char *)*(id *)(*(void *)(v2 + 48) + 8 * v72);
            if (!v74) {
              goto LABEL_115;
            }
          }
          Swift::String v78 = *(void **)&v74[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_isFollowing];
          *(void *)&v74[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_isFollowing] = 0;
          if (v78)
          {
            swift_getKeyPath();
            uint64_t KeyPath = swift_getKeyPath();
            Swift::String v79 = (void (*)(unint64_t *, void))static Published.subscript.modify();
            uint64_t v80 = sub_100D16BE8(v74);
            v79(&v124, 0);

            swift_release();
            swift_release();
            uint64_t v74 = (char *)v80;
          }

          uint64_t v64 = v10;
          unint64_t v6 = v71;
        }
      }
    }
    else
    {
      unint64_t v6 = *(void *)((v124 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v6) {
        goto LABEL_72;
      }
    }
    if ((v35 & 0xC000000000000001) != 0) {
      id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v36 = *(id *)(v35 + 32);
    }
    id v37 = v36;
    char v38 = static UUID.== infix(_:_:)();

    if (v38)
    {
      uint64_t KeyPath = 0;
    }
    else
    {
      if (v6 == 1) {
        goto LABEL_72;
      }
      uint64_t v56 = 5;
      while (1)
      {
        uint64_t KeyPath = v56 - 4;
        id v57 = (v35 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : *(id *)(v35 + 8 * v56);
        uint64_t v58 = v57;
        uint64_t v10 = static UUID.== infix(_:_:)();

        if (v10) {
          break;
        }
        uint64_t v59 = v56 - 3;
        if (__OFADD__(KeyPath, 1)) {
          goto LABEL_136;
        }
        ++v56;
        if (v59 == v6) {
          goto LABEL_72;
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v39 = KeyPath + 1;
    uint64_t v10 = (uint64_t)&unk_101189D80;
    if (__OFADD__(KeyPath, 1)) {
      goto LABEL_147;
    }
    unint64_t v40 = v126;
    if (!(v126 >> 62))
    {
      if (v39 != *(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_31;
      }
      goto LABEL_75;
    }
    swift_bridgeObjectRetain();
    uint64_t v82 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v39 == v82) {
      goto LABEL_75;
    }
LABEL_31:
    uint64_t v41 = KeyPath + 5;
    while (1)
    {
      unint64_t v6 = v41 - 4;
      if ((v40 & 0xC000000000000001) != 0)
      {
        id v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_36;
      }
      if ((v6 & 0x8000000000000000) != 0) {
        break;
      }
      if (v6 >= *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_133;
      }
      id v42 = *(id *)(v40 + 8 * v41);
LABEL_36:
      id v43 = v42;
      char v44 = static UUID.== infix(_:_:)();

      if ((v44 & 1) == 0)
      {
        if (v6 != KeyPath)
        {
          uint64_t v45 = v126;
          if ((v126 & 0xC000000000000001) != 0)
          {
            uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            id v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (KeyPath < 0) {
              goto LABEL_139;
            }
            unint64_t v46 = *(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (KeyPath >= v46) {
              goto LABEL_140;
            }
            id v47 = *(id *)(v126 + 8 * KeyPath + 32);
            if ((v6 & 0x8000000000000000) != 0) {
              goto LABEL_141;
            }
            if (v6 >= v46) {
              goto LABEL_142;
            }
            uint64_t v10 = (uint64_t)v47;
            id v48 = *(id *)(v45 + 8 * v41);
          }
          id v49 = v48;
          if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
            || v45 < 0
            || (v45 & 0x4000000000000000) != 0)
          {
            uint64_t v45 = sub_100F68540(v45);
            unint64_t v126 = v45;
          }
          uint64_t v50 = *(void **)((v45 & 0xFFFFFFFFFFFFFF8) + 8 * KeyPath + 0x20);
          *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 8 * KeyPath + 0x20) = v49;

          specialized Array._endMutation()();
          uint64_t v51 = v126;
          if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
            || v51 < 0
            || (v51 & 0x4000000000000000) != 0)
          {
            uint64_t v51 = sub_100F68540(v51);
            unint64_t v126 = v51;
          }
          if ((v6 & 0x8000000000000000) != 0) {
            goto LABEL_143;
          }
          uint64_t v52 = v51 & 0xFFFFFFFFFFFFFF8;
          if (v6 >= *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_144;
          }
          id v53 = *(void **)(v52 + 8 * v41);
          *(void *)(v52 + 8 * v41) = v10;

          specialized Array._endMutation()();
        }
        BOOL v31 = __OFADD__(KeyPath++, 1);
        if (v31) {
          goto LABEL_135;
        }
      }
      uint64_t v54 = v41 - 3;
      if (__OFADD__(v6, 1)) {
        goto LABEL_134;
      }
      unint64_t v40 = v126;
      if (v126 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v55 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v55 = *(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      ++v41;
      if (v54 == v55) {
        goto LABEL_74;
      }
    }
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    swift_once();
  }
LABEL_152:
  swift_bridgeObjectRelease();
  uint64_t v83 = (void *)static OS_os_log.realTimeSync;
  uint64_t v84 = swift_initStackObject();
  *(_OWORD *)(v84 + 16) = v97;
  swift_retain();
  id v85 = v83;
  swift_bridgeObjectRetain();
  uint64_t v86 = Array.description.getter();
  uint64_t v88 = v87;
  swift_bridgeObjectRelease();
  unint64_t v124 = 123;
  unint64_t v125 = 0xE100000000000000;
  v89._uint64_t countAndFlagsBits = v86;
  v89._object = v88;
  String.append(_:)(v89);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v90._uint64_t countAndFlagsBits = 125;
  v90._object = (void *)0xE100000000000000;
  String.append(_:)(v90);
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v91 = v124;
  unint64_t v92 = v125;
  unint64_t v93 = v96;
  *(void *)(v84 + 56) = &type metadata for String;
  *(void *)(v84 + 64) = v93;
  *(void *)(v84 + 32) = v91;
  *(void *)(v84 + 40) = v92;
  uint64_t v94 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v85, (uint64_t)&_mh_execute_header, v94, (uint64_t)"removePresence AFTER\n%@\n", 24, 2, v84);
  swift_setDeallocating();
  swift_arrayDestroy();
}

void sub_10070771C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v182 = a3;
  uint64_t v183 = a2;
  uint64_t v181 = type metadata accessor for Date();
  uint64_t v176 = *(void *)(v181 - 8);
  __chkstk_darwin(v181, v4);
  uint64_t v180 = (char *)&v176 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v207 = (char *)&v176 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  unint64_t v12 = (char *)&v176 - v11;
  uint64_t v196 = type metadata accessor for Participant();
  uint64_t v13 = *(double **)(v196 - 8);
  __chkstk_darwin(v196, v14);
  uint64_t v195 = (char *)&v176 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v192 = (char *)&v176 - v18;
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v176 - v21;
  __chkstk_darwin(v23, v24);
  uint64_t v188 = (char *)&v176 - v25;
  uint64_t v191 = 0;
  uint64_t v217 = type metadata accessor for UUID();
  uint64_t v26 = *(void *)(v217 - 8);
  __chkstk_darwin(v217, v27);
  uint64_t v179 = (char *)&v176 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29, v30);
  uint64_t v178 = (char *)&v176 - v31;
  __chkstk_darwin(v32, v33);
  uint64_t v206 = (char *)&v176 - v34;
  __chkstk_darwin(v35, v36);
  v209 = (char *)&v176 - v37;
  __chkstk_darwin(v38, v39);
  uint64_t v187 = (char *)&v176 - v40;
  __chkstk_darwin(v41, v42);
  unint64_t v212 = (unint64_t)&v176 - v43;
  __chkstk_darwin(v44, v45);
  int64_t v47 = *(void *)(a1 + 16);
  uint64_t v194 = a1;
  unint64_t v193 = v13;
  uint64_t v205 = v26;
  uint64_t v213 = v12;
  if (v47)
  {
    id v48 = (char *)&v176 - v46;
    uint64_t v221 = _swiftEmptyArrayStorage;
    sub_1006BB544(0, v47, 0);
    uint64_t v49 = sub_100F27B7C(a1);
    uint64_t v51 = v50;
    unint64_t v12 = (char *)(v52 & 1);
    uint64_t v216 = (char *)(a1 + 56);
    uint64_t v215 = v13 + 2;
    uint64_t v214 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 4);
    uint64_t v211 = (void (**)(unint64_t, char *, uint64_t))(v13 + 1);
    uint64_t v210 = (void (**)(unint64_t, uint64_t))(v26 + 32);
    uint64_t v53 = a1;
    do
    {
      if (v49 < 0 || v49 >= 1 << *(unsigned char *)(v53 + 32)) {
        goto LABEL_69;
      }
      if (((*(void *)&v216[((unint64_t)v49 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v49) & 1) == 0)
      {
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
      if (*(_DWORD *)(v53 + 36) != v51) {
        goto LABEL_71;
      }
      uint64_t v54 = v193;
      uint64_t v55 = *(void *)(v53 + 48) + *((void *)v193 + 9) * v49;
      uint64_t v56 = v188;
      uint64_t v57 = v196;
      (*((void (**)(char *, uint64_t, uint64_t))v193 + 2))(v188, v55, v196);
      (*((void (**)(char *, char *, uint64_t))v54 + 4))(v22, v56, v57);
      Participant.id.getter();
      (*((void (**)(char *, uint64_t))v54 + 1))(v22, v57);
      uint64_t v13 = v221;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB544(0, *((void *)v13 + 2) + 1, 1);
        uint64_t v13 = v221;
      }
      uint64_t v58 = v205;
      unint64_t v60 = *((void *)v13 + 2);
      unint64_t v59 = *((void *)v13 + 3);
      if (v60 >= v59 >> 1)
      {
        sub_1006BB544(v59 > 1, v60 + 1, 1);
        uint64_t v58 = v205;
        uint64_t v13 = v221;
      }
      *((void *)v13 + 2) = v60 + 1;
      (*(void (**)(unint64_t, char *))(v58 + 32))((unint64_t)v13+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(void *)(v58 + 72) * v60, v48);
      uint64_t v221 = v13;
      uint64_t v53 = v194;
      uint64_t v61 = sub_100666C8C(v49, v51, v12 & 1, v194);
      uint64_t v49 = v61;
      uint64_t v51 = v62;
      unint64_t v12 = (char *)(v63 & 1);
      --v47;
    }
    while (v47);
    sub_10056A4C4(v61, v62, v63 & 1);
    uint64_t v26 = v205;
    unint64_t v12 = v213;
  }
  else
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  uint64_t v64 = v200;
  swift_beginAccess();
  uint64_t v22 = *(char **)(v64 + 16);
  uint64_t v219 = _swiftEmptyArrayStorage;
  if ((unint64_t)v22 >> 62) {
    goto LABEL_74;
  }
  uint64_t v65 = *(void *)(((unint64_t)v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v201 = (unint64_t)v13;
    if (v65)
    {
      if (v65 < 1) {
        goto LABEL_160;
      }
      for (uint64_t i = 0; i != v65; ++i)
      {
        if (((unint64_t)v22 & 0xC000000000000001) != 0) {
          id v67 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v67 = *(id *)&v22[8 * i + 32];
        }
        uint64_t v68 = v67;
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        if (v218 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v69 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v69 = *(void *)((v218 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        if (v69)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
        uint64_t v26 = v205;
      }
      swift_bridgeObjectRelease();
      unint64_t v70 = (unint64_t)v219;
      unint64_t v12 = v213;
      uint64_t v13 = (double *)v201;
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v70 = (unint64_t)_swiftEmptyArrayStorage;
    }
    unint64_t v220 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v71 = v187;
    uint64_t v186 = (double *)v70;
    if ((v70 & 0x8000000000000000) != 0 || (v70 & 0x4000000000000000) != 0) {
      break;
    }
    uint64_t v72 = *(void *)(v70 + 16);
    if (!v72) {
      goto LABEL_76;
    }
LABEL_34:
    unint64_t v185 = v70 & 0xC000000000000001;
    uint64_t v177 = (double *)(v70 + 32);
    uint64_t v215 = (double *)(v26 + 16);
    uint64_t v73 = (char *)(v26 + 56);
    uint64_t v214 = (unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    uint64_t v211 = (void (**)(unint64_t, char *, uint64_t))(v26 + 32);
    uint64_t v210 = (void (**)(unint64_t, uint64_t))(v26 + 8);
    unint64_t v74 = 0;
    int64_t v75 = _TtC8Freeform28CRLItemProviderReadAssistant;
    uint64_t v184 = v72;
    uint64_t v22 = v73;
    while (1)
    {
      if (v185)
      {
        unint64_t v76 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v74 >= *(void *)(v70 + 16)) {
          goto LABEL_73;
        }
        unint64_t v76 = (uint64_t *)*(id *)&v177[v74];
      }
      uint64_t v77 = v76;
      BOOL v78 = __OFADD__(v74, 1);
      unint64_t v79 = v74 + 1;
      if (v78) {
        break;
      }
      *(void *)&long long v190 = v79;
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      unint64_t v80 = (unint64_t)v219;
      uint64_t v189 = v77;
      if ((unint64_t)v219 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v81 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v81 = *(void *)(((unint64_t)v219 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v82 = v217;
      if (v81)
      {
        unint64_t v83 = 0;
        unint64_t v84 = v80 & 0xC000000000000001;
        uint64_t v198 = v80 & 0xFFFFFFFFFFFFFF8;
        unint64_t v197 = (void (**)(uint64_t, uint64_t))(v80 + 32);
        uint64_t v204 = (double *)v80;
        uint64_t v203 = v81;
        uint64_t v202 = (void (**)(char *, uint64_t))(v80 & 0xC000000000000001);
        do
        {
          if (v84)
          {
            id v85 = (void (*)(uint64_t, uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)();
            BOOL v78 = __OFADD__(v83++, 1);
            if (v78) {
              goto LABEL_67;
            }
          }
          else
          {
            if (v83 >= *(void *)(v198 + 16)) {
              goto LABEL_68;
            }
            id v85 = v197[v83];
            BOOL v78 = __OFADD__(v83++, 1);
            if (v78)
            {
LABEL_67:
              __break(1u);
LABEL_68:
              __break(1u);
LABEL_69:
              __break(1u);
              goto LABEL_70;
            }
          }
          if (*((unsigned char *)v85 + (unint64_t)v75[25].vtable) == 1)
          {
          }
          else
          {
            uint64_t v208 = v85;
            uint64_t v216 = (char *)v85 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID;
            uint64_t v86 = *((void *)v13 + 2);
            if (v86)
            {
              int64_t v199 = (unint64_t)v22 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
              char v87 = (char *)v13
                  + ((*(unsigned __int8 *)(v205 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v205 + 80));
              uint64_t v88 = *(void *)(v205 + 72);
              Swift::String v89 = *(void (**)(char *, char *, uint64_t))(v205 + 16);
              swift_bridgeObjectRetain();
              while (1)
              {
                v89(v12, v87, v82);
                Swift::String v90 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v22;
                (*(void (**)(char *, void, uint64_t, uint64_t))v22)(v12, 0, 1, v82);
                if ((*v214)(v12, 1, v82) == 1) {
                  break;
                }
                unint64_t v91 = v22;
                unint64_t v92 = v212;
                (*v211)(v212, v12, v82);
                sub_10070AC18((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
                char v93 = dispatch thunk of static Equatable.== infix(_:_:)();
                (*v210)(v92, v82);
                if (v93)
                {

                  uint64_t v13 = (double *)v201;
                  swift_bridgeObjectRelease();
                  uint64_t v82 = v217;
                  unint64_t v12 = v213;
                  uint64_t v22 = v91;
                  int64_t v75 = _TtC8Freeform28CRLItemProviderReadAssistant;
                  uint64_t v81 = v203;
                  unint64_t v84 = (unint64_t)v202;
                  goto LABEL_46;
                }
                v87 += v88;
                --v86;
                uint64_t v82 = v217;
                unint64_t v12 = v213;
                uint64_t v22 = v91;
                if (!v86) {
                  goto LABEL_61;
                }
              }
            }
            else
            {
              Swift::String v90 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v22;
              swift_bridgeObjectRetain();
LABEL_61:
              v90(v12, 1, 1, v82);
            }
            uint64_t v13 = (double *)v201;
            swift_bridgeObjectRelease();
            sub_100706740((uint64_t)v216);
            uint64_t v94 = v208;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            int64_t v75 = _TtC8Freeform28CRLItemProviderReadAssistant;
            uint64_t v81 = v203;
            unint64_t v84 = (unint64_t)v202;
            if (*(void *)((v220 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v220 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();

            uint64_t v82 = v217;
          }
LABEL_46:
          ;
        }
        while (v83 != v81);
      }

      swift_bridgeObjectRelease();
      unint64_t v74 = v190;
      uint64_t v71 = v187;
      unint64_t v70 = (unint64_t)v186;
      if ((void)v190 == v184) {
        goto LABEL_76;
      }
    }
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    swift_bridgeObjectRetain();
    uint64_t v26 = v205;
    uint64_t v65 = _CocoaArrayWrapper.endIndex.getter();
  }
  swift_bridgeObjectRetain();
  uint64_t v72 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
  unint64_t v70 = (unint64_t)v186;
  if (v72) {
    goto LABEL_34;
  }
LABEL_76:
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unint64_t v95 = (unint64_t)v219;
  uint64_t v219 = _swiftEmptyArrayStorage;
  if (v95 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v96 = _CocoaArrayWrapper.endIndex.getter();
    if (!v96) {
      goto LABEL_93;
    }
LABEL_78:
    if (v96 < 1) {
      goto LABEL_161;
    }
    uint64_t v97 = 0;
    do
    {
      if ((v95 & 0xC000000000000001) != 0) {
        id v98 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v98 = *(id *)(v95 + 8 * v97 + 32);
      }
      unint64_t v99 = v98;
      ++v97;
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();

      swift_release();
      swift_release();
      sub_1006E1FF8(v218);
    }
    while (v96 != v97);
    swift_bridgeObjectRelease_n();
    unint64_t v100 = (unint64_t)v219;
    uint64_t v71 = v187;
    if (!((unint64_t)v219 >> 62)) {
      goto LABEL_85;
    }
LABEL_94:
    swift_bridgeObjectRetain();
    uint64_t v101 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v101) {
      goto LABEL_95;
    }
LABEL_86:
    uint64_t v219 = _swiftEmptyArrayStorage;
    sub_1006BB544(0, v101 & ~(v101 >> 63), 0);
    if (v101 < 0) {
      goto LABEL_162;
    }
    uint64_t v102 = 0;
    unint64_t v103 = v219;
    uint64_t v216 = *(char **)(v205 + 16);
    uint64_t v104 = v217;
    do
    {
      ((void (*)(char *, uint64_t, uint64_t))v216)(v71, *(void *)(v100 + 8 * v102 + 32) + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID, v104);
      uint64_t v219 = v103;
      unint64_t v106 = *((void *)v103 + 2);
      unint64_t v105 = *((void *)v103 + 3);
      if (v106 >= v105 >> 1)
      {
        sub_1006BB544(v105 > 1, v106 + 1, 1);
        uint64_t v104 = v217;
        unint64_t v103 = v219;
      }
      ++v102;
      *((void *)v103 + 2) = v106 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v205 + 32))((unint64_t)v103+ ((*(unsigned __int8 *)(v205 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v205 + 80))+ *(void *)(v205 + 72) * v106, v71, v104);
    }
    while (v101 != v102);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v96 = *(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v96) {
      goto LABEL_78;
    }
LABEL_93:
    swift_bridgeObjectRelease_n();
    unint64_t v100 = (unint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
      goto LABEL_94;
    }
LABEL_85:
    uint64_t v101 = *(void *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v101) {
      goto LABEL_86;
    }
LABEL_95:
    swift_bridgeObjectRelease();
    unint64_t v103 = _swiftEmptyArrayStorage;
  }
  uint64_t v107 = *(void *)(v194 + 56);
  uint64_t v198 = v194 + 56;
  uint64_t v108 = 1 << *(unsigned char *)(v194 + 32);
  uint64_t v109 = -1;
  if (v108 < 64) {
    uint64_t v109 = ~(-1 << v108);
  }
  unint64_t v212 = v109 & v107;
  unint64_t v110 = (uint64_t *)(v200 + 24);
  swift_bridgeObjectRetain();
  uint64_t v189 = v110;
  swift_beginAccess();
  int64_t v111 = 0;
  int64_t v199 = (unint64_t)(v108 + 63) >> 6;
  unint64_t v112 = v193;
  uint64_t v210 = (void (**)(unint64_t, uint64_t))(v193 + 2);
  uint64_t v203 = (uint64_t)(v193 + 4);
  uint64_t v215 = (double *)(v205 + 16);
  uint64_t v113 = v205 + 56;
  uint64_t v214 = (unsigned int (**)(char *, uint64_t, uint64_t))(v205 + 48);
  uint64_t v213 = (char *)(v205 + 32);
  uint64_t v216 = (char *)(v205 + 8);
  uint64_t v202 = (void (**)(char *, uint64_t))(v193 + 1);
  unint64_t v197 = (void (**)(uint64_t, uint64_t))(v176 + 8);
  long long v190 = xmmword_10117D8C0;
  unint64_t v114 = v195;
  uint64_t v204 = v103;
  while (2)
  {
    if (v212)
    {
      unint64_t v126 = __clz(__rbit64(v212));
      v212 &= v212 - 1;
      unint64_t v127 = v126 | (v111 << 6);
      uint64_t v128 = v194;
      goto LABEL_116;
    }
    BOOL v78 = __OFADD__(v111++, 1);
    if (v78)
    {
      __break(1u);
      goto LABEL_158;
    }
    if (v111 >= v199) {
      goto LABEL_155;
    }
    unint64_t v129 = *(void *)(v198 + 8 * v111);
    if (v129)
    {
LABEL_114:
      uint64_t v128 = v194;
LABEL_115:
      unint64_t v212 = (v129 - 1) & v129;
      unint64_t v127 = __clz(__rbit64(v129)) + (v111 << 6);
LABEL_116:
      unint64_t v131 = *(void *)(v128 + 48) + *((void *)v112 + 9) * v127;
      uint64_t v132 = v192;
      uint64_t v133 = v196;
      uint64_t v208 = (void (*)(uint64_t, uint64_t))*((void *)v112 + 2);
      ((void (*)(char *, unint64_t, uint64_t))v208)(v192, v131, v196);
      (*((void (**)(char *, char *, uint64_t))v112 + 4))(v114, v132, v133);
      Participant.id.getter();
      uint64_t v134 = *((void *)v103 + 2);
      if (v134)
      {
        unint64_t v201 = v113 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
        uint64_t v211 = (void (**)(unint64_t, char *, uint64_t))v111;
        uint64_t v135 = (char *)v103
             + ((*(unsigned __int8 *)(v205 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v205 + 80));
        uint64_t v136 = *(void *)(v205 + 72);
        uint64_t v137 = *(void (**)(char *, char *, uint64_t))(v205 + 16);
        swift_bridgeObjectRetain();
        uint64_t v138 = v207;
        while (1)
        {
          uint64_t v139 = v217;
          v137(v138, v135, v217);
          uint64_t v140 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v113;
          (*(void (**)(char *, void, uint64_t, uint64_t))v113)(v138, 0, 1, v139);
          unsigned int v141 = (*v214)(v138, 1, v139);
          BOOL v142 = v141 != 1;
          if (v141 == 1) {
            break;
          }
          uint64_t v143 = v113;
          id v144 = v206;
          (*(void (**)(char *, char *, uint64_t))v213)(v206, v138, v139);
          sub_10070AC18((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
          char v145 = dispatch thunk of static Equatable.== infix(_:_:)();
          (*(void (**)(char *, uint64_t))v216)(v144, v139);
          if (v145)
          {
            uint64_t v139 = v217;
            uint64_t v113 = v143;
            break;
          }
          v135 += v136;
          --v134;
          uint64_t v138 = v207;
          uint64_t v113 = v143;
          if (!v134)
          {
            int64_t v111 = (int64_t)v211;
            goto LABEL_123;
          }
        }
        int64_t v111 = (int64_t)v211;
      }
      else
      {
        uint64_t v140 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v113;
        swift_bridgeObjectRetain();
        uint64_t v138 = v207;
LABEL_123:
        uint64_t v139 = v217;
        v140(v138, 1, 1, v217);
        BOOL v142 = 0;
      }
      unint64_t v103 = v204;
      swift_bridgeObjectRelease();
      uint64_t v146 = *(void (**)(char *, uint64_t))v216;
      (*(void (**)(char *, uint64_t))v216)(v209, v139);
      unint64_t v114 = v195;
      if (!v142)
      {
        uint64_t v147 = self;
        Participant.handle.getter();
        NSString v148 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v149 = [v147 normalizedHandleWithDestinationID:v148];

        if (v149)
        {
          id v150 = v149;
          unint64_t v151 = swift_bridgeObjectRetain();
          uint64_t v152 = v191;
          unint64_t v153 = (id *)sub_10070C6F4(v151, v150);
          uint64_t v191 = v152;
          swift_bridgeObjectRelease();

          if ((unint64_t)v153 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v165 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v165 >= 2) {
              goto LABEL_130;
            }
            swift_bridgeObjectRetain();
            unint64_t v154 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            unint64_t v154 = *(void *)(((unint64_t)v153 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v154 > 1)
            {
LABEL_130:
              uint64_t v208 = (void (*)(uint64_t, uint64_t))v150;
              uint64_t v155 = swift_bridgeObjectRelease();
              uint64_t v156 = *v189;
              __chkstk_darwin(v155, v157);
              *(&v176 - 2) = (uint64_t)v195;
              swift_bridgeObjectRetain();
              uint64_t v158 = v191;
              sub_100ED4FB4((uint64_t (*)(id *))sub_10070C868, (uint64_t)(&v176 - 4), v156);
              uint64_t v160 = v159;
              uint64_t v191 = v158;
              swift_bridgeObjectRelease();
              if (v160)
              {
                uint64_t v211 = (void (**)(unint64_t, char *, uint64_t))v111;
                swift_bridgeObjectRelease();
                id v161 = *(id *)&v160[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant];

LABEL_149:
                id v167 = v161;
                uint64_t v168 = (uint64_t)v178;
                unint64_t v114 = v195;
                Participant.id.getter();
                uint64_t v169 = (uint64_t)v180;
                Date.init()();
                uint64_t v170 = v179;
                Participant.id.getter();
                char v171 = static UUID.== infix(_:_:)();
                uint64_t v172 = v170;
                uint64_t v173 = v217;
                v146(v172, v217);
                uint64_t v174 = (void *)sub_100704BC0(v167, v168, v169, v171 & 1, 1);

                (*v197)(v169, v181);
                v146((char *)v168, v173);
                unint64_t v112 = v193;
                int64_t v111 = (int64_t)v211;
                goto LABEL_103;
              }
              if (qword_10166FBA0 != -1) {
                swift_once();
              }
              swift_beginAccess();
              id v162 = (id)static OS_os_log.realTimeSync;
              uint64_t v163 = static os_log_type_t.error.getter();
              sub_100BAC898((uint64_t)v162, (uint64_t)&_mh_execute_header, v163, (uint64_t)"Found multiple CKShare.Participants that matched the Participant's handle, and we were unable to find which one to use.", 119, 2, (uint64_t)_swiftEmptyArrayStorage);

              goto LABEL_153;
            }
          }
          if (v154)
          {
            uint64_t v211 = (void (**)(unint64_t, char *, uint64_t))v111;
            uint64_t v208 = (void (*)(uint64_t, uint64_t))v150;
            if (((unint64_t)v153 & 0xC000000000000001) != 0)
            {
              id v166 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if (!*(void *)(((unint64_t)v153 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_159;
              }
              id v166 = v153[4];
            }
            id v161 = v166;
            swift_bridgeObjectRelease();
            goto LABEL_149;
          }
          swift_bridgeObjectRelease();
          if (qword_10166FBA0 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v162 = (id)static OS_os_log.realTimeSync;
          uint64_t v175 = static os_log_type_t.error.getter();
          sub_100BAC898((uint64_t)v162, (uint64_t)&_mh_execute_header, v175, (uint64_t)"Unable to find a CKShare.Participant in our session's participants that matched the Participant's handle", 104, 2, (uint64_t)_swiftEmptyArrayStorage);

LABEL_153:
          unint64_t v112 = v193;
          unint64_t v114 = v195;
          goto LABEL_103;
        }
        if (qword_10166FBA0 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v115 = (void *)static OS_os_log.realTimeSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v190;
        id v117 = v115;
        uint64_t v118 = v195;
        uint64_t v119 = Participant.handle.getter();
        uint64_t v121 = v120;
        *(void *)(inited + 56) = &type metadata for String;
        unint64_t v122 = sub_100528BE4();
        *(void *)(inited + 64) = v122;
        *(void *)(inited + 32) = v119;
        *(void *)(inited + 40) = v121;
        ((void (*)(char *, char *, uint64_t))v208)(v188, v118, v196);
        uint64_t v123 = String.init<A>(reflecting:)();
        *(void *)(inited + 96) = &type metadata for String;
        *(void *)(inited + 104) = v122;
        *(void *)(inited + 72) = v123;
        *(void *)(inited + 80) = v124;
        uint64_t v125 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v117, (uint64_t)&_mh_execute_header, v125, (uint64_t)"Cannot generate TUHandle from Participant's handle: %@, participant: %@", 71, 2, inited);
        unint64_t v114 = v118;
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();
      }
      unint64_t v112 = v193;
LABEL_103:
      (*v202)(v114, v196);
      continue;
    }
    break;
  }
  int64_t v130 = v111 + 1;
  if (v111 + 1 >= v199) {
    goto LABEL_155;
  }
  unint64_t v129 = *(void *)(v198 + 8 * v130);
  if (v129) {
    goto LABEL_113;
  }
  int64_t v130 = v111 + 2;
  if (v111 + 2 >= v199) {
    goto LABEL_155;
  }
  unint64_t v129 = *(void *)(v198 + 8 * v130);
  if (v129)
  {
LABEL_113:
    int64_t v111 = v130;
    goto LABEL_114;
  }
  int64_t v164 = v111 + 3;
  uint64_t v128 = v194;
  if (v111 + 3 >= v199)
  {
LABEL_155:
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
  unint64_t v129 = *(void *)(v198 + 8 * v164);
  if (v129)
  {
    v111 += 3;
    goto LABEL_115;
  }
  while (1)
  {
    int64_t v111 = v164 + 1;
    if (__OFADD__(v164, 1)) {
      break;
    }
    if (v111 >= v199) {
      goto LABEL_155;
    }
    unint64_t v129 = *(void *)(v198 + 8 * v111);
    ++v164;
    if (v129) {
      goto LABEL_115;
    }
  }
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
}

uint64_t sub_100709278(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 8);
  Participant.id.getter();
  char v8 = sub_1006E3E24((uint64_t)v6, v7);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v8 & 1;
}

void sub_100709368(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v2 = v1;
  uint64_t v3 = sub_10070BA08(v10);
  swift_bridgeObjectRelease();

  if (v3)
  {
    [v2 permission];
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.setter();
  }
  swift_beginAccess();
  id v4 = v2;
  unint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_10070BA08(v5);
  swift_bridgeObjectRelease();

  if (v6)
  {
    [v4 permission];
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.setter();
  }
  swift_beginAccess();
  id v7 = v4;
  unint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_10070BA08(v8);
  swift_bridgeObjectRelease();

  if (v9)
  {
    [v7 permission];
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.setter();
  }
}

void sub_1007095B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  type metadata accessor for CRLCollaborationParticipantCollection(0);
  sub_10070AC18(&qword_10167C538, (void (*)(uint64_t))type metadata accessor for CRLCollaborationParticipantCollection);
  ObservableObject<>.objectWillChange.getter();
  ObservableObjectPublisher.send()();
  swift_release();
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v6 = (id)static OS_os_log.realTimeSync;
  uint64_t v7 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Posting notification of active participant changes.", 51, 2, (uint64_t)_swiftEmptyArrayStorage);

  id v8 = [self defaultCenter];
  sub_1005057FC((uint64_t *)&unk_10167C550);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  if (qword_10166EE98 != -1) {
    swift_once();
  }
  unint64_t v10 = (void *)qword_10171A4C0;
  *(void *)(inited + 32) = qword_10171A4C0;
  *(void *)(inited + 40) = a1;
  uint64_t v11 = qword_10166EEA0;
  id v12 = v10;
  swift_bridgeObjectRetain();
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_10171A4C8;
  *(void *)(inited + 48) = qword_10171A4C8;
  *(void *)(inited + 56) = a2;
  id v14 = v13;
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_100A3AF70(inited);
  if (qword_10166EE88 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_10171A4B0;
  sub_100ED38D8(v15);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v8 postNotificationName:v16 object:v3 userInfo:isa];
}

unsigned char *sub_100709868()
{
  unint64_t v0 = sub_1007099F4();
  if (!v0) {
    return 0;
  }
  uint64_t v1 = v0;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v9 >> 62) {
    goto LABEL_20;
  }
  uint64_t v2 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
    return 0;
  }
  while (1)
  {
    uint64_t v3 = (v9 & 0xC000000000000001) != 0
       ? (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
       : *(id *)(v9 + 32);
    id v4 = v3;
    if (v3[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_isLocalParticipant]) {
      break;
    }

    if (v2 != 1)
    {
      uint64_t v5 = 5;
      while (1)
      {
        id v6 = (v9 & 0xC000000000000001) != 0
           ? (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : *(id *)(v9 + 8 * v5);
        id v4 = v6;
        uint64_t v7 = v5 - 3;
        if (__OFADD__(v5 - 4, 1)) {
          break;
        }
        if (v6[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_isLocalParticipant]) {
          goto LABEL_7;
        }

        ++v5;
        if (v7 == v2) {
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_20:
      swift_bridgeObjectRetain();
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      if (v2) {
        continue;
      }
    }
    goto LABEL_16;
  }
LABEL_7:
  swift_bridgeObjectRelease_n();
  return v4;
}

char *sub_1007099F4()
{
  swift_beginAccess();
  unint64_t v1 = *(void *)(v0 + 16);
  if (v1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (v1 & 0xC000000000000001) != 0
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : (char *)*(id *)(v1 + 8 * v3);
      uint64_t v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v9 = v8;
      id v10 = [*(id *)&v5[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant] userIdentity];
      id v11 = [v10 userRecordID];

      if (v11)
      {
        id v12 = [v11 recordName];

        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v15 = v14;

        if (v7 == v13 && v9 == v15)
        {
          swift_bridgeObjectRelease_n();
LABEL_18:
          swift_bridgeObjectRelease_n();
          return v5;
        }
        char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v17) {
          goto LABEL_18;
        }
      }
      else
      {

        swift_bridgeObjectRelease();
      }
      ++v3;
      if (v6 == v2) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain_n();
  }
LABEL_21:
  swift_bridgeObjectRelease_n();
  return 0;
}

void sub_100709C08(void *a1)
{
  swift_beginAccess();
  id v2 = a1;
  unint64_t v3 = swift_bridgeObjectRetain();
  id v4 = (id *)sub_10070BC34(v3, (BOOL)v2);
  swift_bridgeObjectRelease();

  if ((unint64_t)v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6 > 1) {
      goto LABEL_3;
    }
    swift_bridgeObjectRetain();
    unint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = *(void *)(((unint64_t)v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5 > 1)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"participant(with:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLCollaborationParticipant.swift", 94, 2, 852, (uint64_t)"Multiple participants matching given user identity", 50, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"participant(with:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLCollaborationParticipant.swift", 94, 2, 852);
      return;
    }
  }
  if (!v5) {
    goto LABEL_10;
  }
  if (((unint64_t)v4 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_10;
  }
  if (*(void *)(((unint64_t)v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v7 = v4[4];
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  __break(1u);
}

void sub_100709DC4(unsigned int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for IndexSet();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  id v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v49 - v13;
  uint64_t v15 = sub_10070A6DC();
  if (!v15) {
    goto LABEL_17;
  }
  char v17 = v15;
  uint64_t v18 = v16;
  if (a1 > 9)
  {

LABEL_17:
    uint64_t v34 = sub_1005057FC(&qword_10167C530);
    uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56);
    v35(a2, 1, 1, v34);
    return;
  }
  uint64_t v55 = *(void *)&v16[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_collaboratorColorIndex];
  unint64_t v56 = a1;
  if (v55 != a1)
  {
    *(void *)&v16[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_collaboratorColorIndex] = v56;
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    [Strong updateCachedCollaboratorColors];
  }
  uint64_t v20 = sub_100709868();
  if (v20)
  {
    uint64_t v21 = v20;
    if (static Date.< infix(_:_:)())
    {
      uint64_t v54 = v21;
      char v22 = sub_100701290();
      id v23 = v54;
      uint64_t v24 = *(void *)&v54[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_collaboratorColorIndex];
      if (v22)
      {
        unint64_t v25 = v56;
        if (v24 != v56)
        {
          *(void *)&v54[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_collaboratorColorIndex] = v56;
          uint64_t v26 = (void *)swift_unknownObjectWeakLoadStrong();
          [v26 updateCachedCollaboratorColors];

          unint64_t v27 = v25;
          goto LABEL_10;
        }
        goto LABEL_36;
      }
      unint64_t v25 = v56;
      if (v24 != v56)
      {
LABEL_36:

        goto LABEL_42;
      }
      uint64_t v52 = OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_collaboratorColorIndex;
      uint64_t v38 = sub_1007099F4();
      if (!v38) {
        goto LABEL_38;
      }
      uint64_t v39 = v38;
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v53 = v39;
      static Published.subscript.getter();
      swift_release();
      swift_release();
      unint64_t v40 = v57;
      if (v57 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v46 = v45;
        unint64_t v25 = v56;
        if (v46) {
          goto LABEL_30;
        }
      }
      else
      {
        unint64_t v25 = v56;
        if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_30:
          if ((v40 & 0xC000000000000001) != 0)
          {
            id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (!*(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_47;
            }
            id v41 = *(id *)(v40 + 32);
          }
          id v51 = v41;
          swift_bridgeObjectRelease();
          sub_10050BF48(0, (unint64_t *)&qword_101672E50);
          if (static NSObject.== infix(_:_:)())
          {
            swift_beginAccess();
            unint64_t v42 = *(void *)(v3 + 16);
            swift_bridgeObjectRetain();
            IndexSet.init()();
            uint64_t v50 = v54;
            sub_1006FE868((uint64_t)v10, v42, v50, (uint64_t)v14);
            swift_bridgeObjectRelease();
            id v43 = *(id *)&v53[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant];
            unint64_t v27 = sub_1008745F0(v43, v14);

            if (*(void *)&v54[v52] != v27)
            {
              *(void *)&v54[v52] = v27;
              uint64_t v44 = (void *)swift_unknownObjectWeakLoadStrong();
              [v44 updateCachedCollaboratorColors];

              (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
LABEL_10:
              sub_1005057FC((uint64_t *)&unk_101672B40);
              uint64_t inited = swift_initStackObject();
              uint64_t v29 = inited;
              *(_OWORD *)(inited + 16) = xmmword_10117E810;
              *(void *)(inited + 56) = &type metadata for Int;
              *(void *)(inited + 64) = &protocol witness table for Int;
              *(void *)(inited + 32) = v27;
              if ((v27 & 0x8000000000000000) != 0)
              {
                sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updatePresence(presenceUUID:colorIndex:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLCollaborationParticipant.swift", 94, 2, 928, (uint64_t)"Bad color index: %d", 19, 2u, inited);
                unint64_t v25 = v56;
                sub_1005598CC(v29, (uint64_t)"updatePresence(presenceUUID:colorIndex:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLCollaborationParticipant.swift", 94, 2, 928);
              }
              swift_bridgeObjectRelease();

              id v30 = v54;
              uint64_t v31 = &v54[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID];
              uint64_t v32 = type metadata accessor for UUID();
              (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v32 - 8) + 16))(a2, v31, v32);

              if ((v27 & 0x8000000000000000) == 0 && !HIDWORD(v27))
              {
                uint64_t v33 = sub_1005057FC(&qword_10167C530);
                *(_DWORD *)(a2 + *(int *)(v33 + 48)) = v27;
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(a2, 0, 1, v33);
                if (v55 == v25) {
                  return;
                }
LABEL_43:
                type metadata accessor for CRLCollaborationParticipantCollection(0);
                sub_10070AC18(&qword_10167C538, (void (*)(uint64_t))type metadata accessor for CRLCollaborationParticipantCollection);
                ObservableObject<>.objectWillChange.getter();
                ObservableObjectPublisher.send()();
                swift_release();
                return;
              }
LABEL_47:
              _assertionFailure(_:_:file:line:flags:)();
              __break(1u);
              return;
            }

            (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
LABEL_42:
            uint64_t v47 = v55;
            uint64_t v48 = sub_1005057FC(&qword_10167C530);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(a2, 1, 1, v48);
            if (v47 == v25) {
              return;
            }
            goto LABEL_43;
          }

LABEL_38:
          goto LABEL_42;
        }
      }

      swift_bridgeObjectRelease();
      goto LABEL_42;
    }
    uint64_t v37 = sub_1005057FC(&qword_10167C530);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(a2, 1, 1, v37);
  }
  else
  {
    uint64_t v36 = sub_1005057FC(&qword_10167C530);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(a2, 1, 1, v36);
  }
  if (v55 != v56)
  {
    type metadata accessor for CRLCollaborationParticipantCollection(0);
    sub_10070AC18(&qword_10167C538, (void (*)(uint64_t))type metadata accessor for CRLCollaborationParticipantCollection);
    ObservableObject<>.objectWillChange.getter();
    ObservableObjectPublisher.send()();
    swift_release();
  }
}

void *sub_10070A6DC()
{
  swift_beginAccess();
  unint64_t v1 = *(void *)(v0 + 16);
  if (v1 >> 62) {
    goto LABEL_35;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v3 = 0;
    unint64_t v19 = v1;
    unint64_t v20 = v1 & 0xC000000000000001;
    unint64_t v16 = v1 + 32;
    uint64_t v17 = v1 & 0xFFFFFFFFFFFFFF8;
    uint64_t v18 = v2;
    while (1)
    {
      if (v20)
      {
        id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v3 >= *(void *)(v17 + 16)) {
          goto LABEL_34;
        }
        id v4 = *(id *)(v16 + 8 * v3);
      }
      unint64_t v5 = v4;
      BOOL v6 = __OFADD__(v3++, 1);
      if (v6) {
        break;
      }
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (v21 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v7) {
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t v7 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v7) {
          goto LABEL_4;
        }
      }
      if ((v21 & 0xC000000000000001) != 0)
      {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_33;
        }
        id v8 = *(id *)(v21 + 32);
      }
      uint64_t v9 = v8;
      if (static UUID.== infix(_:_:)())
      {
LABEL_29:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v5;
      }

      if (v7 != 1)
      {
        unint64_t v1 = v21 & 0xFFFFFFFFFFFFFF8;
        uint64_t v10 = 5;
        while (1)
        {
          unint64_t v11 = v10 - 4;
          if ((v21 & 0xC000000000000001) != 0)
          {
            id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (v11 >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_31;
            }
            id v12 = *(id *)(v21 + 8 * v10);
          }
          uint64_t v13 = v12;
          BOOL v6 = __OFADD__(v11, 1);
          uint64_t v14 = v10 - 3;
          if (v6) {
            break;
          }
          if (static UUID.== infix(_:_:)()) {
            goto LABEL_29;
          }

          ++v10;
          if (v14 == v7) {
            goto LABEL_4;
          }
        }
        __break(1u);
LABEL_31:
        __break(1u);
        break;
      }
LABEL_4:

      swift_bridgeObjectRelease();
      unint64_t v1 = v19;
      if (v3 == v18) {
        goto LABEL_36;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    swift_bridgeObjectRetain();
  }
LABEL_36:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_10070A988(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_100522D34(a3);
    unint64_t v4 = type metadata accessor for Published();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10070A9D8()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_10167C520);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v0 + 16) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 24) = sub_100A39388((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v6 = v0 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection__activeParticipants;
  v8[1] = _swiftEmptyArrayStorage;
  sub_1005057FC((uint64_t *)&unk_10167C2B0);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v6, v5, v1);
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRealTimeEnters) = &_swiftEmptyDictionarySingleton;
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingAddedParticipants) = _swiftEmptyArrayStorage;
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRemovedParticipants) = _swiftEmptyArrayStorage;
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingParticipantChangeTimer) = 0;
  return v0;
}

uint64_t sub_10070AB24@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CRLCollaborationParticipantCollection(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10070AB64()
{
  return sub_100703C90();
}

uint64_t sub_10070AB88()
{
  return sub_10070AC18((unint64_t *)&unk_10167C4D8, (void (*)(uint64_t))type metadata accessor for CRLCollaborationParticipant);
}

uint64_t sub_10070ABD0()
{
  return sub_10070AC18((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_10070AC18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10070AC60@<X0>(void *a1@<X8>)
{
  return sub_10070AC74(a1);
}

uint64_t sub_10070AC74@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

void sub_10070ACF0()
{
}

id sub_10070AD1C()
{
  uint64_t v0 = sub_1005057FC(&qword_101687FD0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PersonNameComponents();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  id v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [objc_allocWithZone((Class)CNMutableContact) init];
  PersonNameComponents.namePrefix.getter();
  if (v10)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v9 setNamePrefix:v11];
  }
  PersonNameComponents.givenName.getter();
  if (v12)
  {
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v9 setGivenName:v13];
  }
  PersonNameComponents.middleName.getter();
  if (v14)
  {
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v9 setMiddleName:v15];
  }
  PersonNameComponents.familyName.getter();
  if (v16)
  {
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v9 setFamilyName:v17];
  }
  PersonNameComponents.nameSuffix.getter();
  if (v18)
  {
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v9 setNameSuffix:v19];
  }
  PersonNameComponents.nickname.getter();
  if (v20)
  {
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v9 setNickname:v21];
  }
  PersonNameComponents.phoneticRepresentation.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_100522F00((uint64_t)v3, &qword_101687FD0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
    PersonNameComponents.givenName.getter();
    if (v22)
    {
      NSString v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v9 setPhoneticGivenName:v23];
    }
    PersonNameComponents.middleName.getter();
    if (v24)
    {
      NSString v25 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v9 setPhoneticMiddleName:v25];
    }
    PersonNameComponents.familyName.getter();
    if (v26)
    {
      NSString v27 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v9 setPhoneticFamilyName:v27];
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return v9;
}

id sub_10070B094(void *a1)
{
  uint64_t v2 = type metadata accessor for PersonNameComponents();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_101687FD0);
  uint64_t v9 = __chkstk_darwin(v7 - 8, v8);
  NSString v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v9, v12);
  NSString v15 = (char *)&v43 - v14;
  __chkstk_darwin(v13, v16);
  uint64_t v18 = (char *)&v43 - v17;
  id v19 = [a1 nameComponents];
  if (v19)
  {
    uint64_t v20 = v19;
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v15, 1, 1, v2);
  }
  sub_10070D1A4((uint64_t)v15, (uint64_t)v18);
  sub_100522E9C((uint64_t)v18, (uint64_t)v11, &qword_101687FD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1)
  {
    sub_100522F00((uint64_t)v11, &qword_101687FD0);
    id v21 = [objc_allocWithZone((Class)CNMutableContact) init];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v11, v2);
    id v21 = sub_10070AD1C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  id v22 = [a1 lookupInfo];
  if (v22)
  {
    NSString v23 = v22;
    uint64_t v24 = (objc_class *)[v22 emailAddress];
    if (v24)
    {
      Class isa = v24;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v26 = String.count.getter();
      swift_bridgeObjectRelease();
      if (v26 >= 1)
      {
        sub_1005057FC((uint64_t *)&unk_101676C10);
        uint64_t v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_101177E70;
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v28 = objc_allocWithZone((Class)CNLabeledValue);
        NSString v29 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v30 = [v28 initWithLabel:v29 value:isa];

        *(void *)(v27 + 32) = v30;
        uint64_t v44 = v27;
        specialized Array._endMutation()();
        sub_1005057FC(qword_10167C588);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v21 setEmailAddresses:isa];
      }
    }
    id v31 = [v23 phoneNumber];
    if (v31)
    {
      uint64_t v32 = v31;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      if (String.count.getter() <= 0)
      {
        sub_100522F00((uint64_t)v18, &qword_101687FD0);
        swift_bridgeObjectRelease();

        return v21;
      }
      id v33 = objc_allocWithZone((Class)CNPhoneNumber);
      NSString v34 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v35 = [v33 initWithStringValue:v34];

      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_101177E70;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v37 = objc_allocWithZone((Class)CNLabeledValue);
      id v38 = v35;
      NSString v39 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v40 = [v37 initWithLabel:v39 value:v38];

      *(void *)(v36 + 32) = v40;
      uint64_t v44 = v36;
      specialized Array._endMutation()();
      sub_1005057FC(qword_10167C588);
      Class v41 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v21 setPhoneNumbers:v41];
    }
  }
  sub_100522F00((uint64_t)v18, &qword_101687FD0);
  return v21;
}

unint64_t sub_10070B5DC(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  uint64_t result = String.index(_:offsetBy:limitedBy:)();
  if (v6) {
    uint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }

  return String.subscript.getter();
}

id sub_10070B68C(void *a1, int a2)
{
  int v23 = a2;
  uint64_t v4 = sub_1005057FC(&qword_10167C4E8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_10167C4F0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)&v2[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact] = 0;
  v2[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_hasUnifiedContact] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_isFollowing] = 0;
  uint64_t v14 = &v2[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant__isFollowedBy];
  uint64_t v26 = (double *)&_swiftEmptySetSingleton;
  NSString v15 = v2;
  sub_1005057FC(&qword_10167C228);
  Published.init(initialValue:)();
  (*(void (**)(char *, unsigned char *, uint64_t))(v10 + 32))(v14, v13, v9);
  UUID.init()();
  uint64_t v16 = &v15[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant__presences];
  uint64_t v26 = _swiftEmptyArrayStorage;
  sub_1005057FC(&qword_10167AF00);
  Published.init(initialValue:)();
  (*(void (**)(char *, unsigned char *, uint64_t))(v5 + 32))(v16, v8, v4);
  uint64_t v17 = OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cachedCursorColors;
  *(void *)&v15[v17] = sub_100A45AB0(_swiftEmptyArrayStorage);
  *(void *)&v15[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant] = a1;
  swift_beginAccess();
  char v25 = v23;
  id v18 = a1;
  Published.init(initialValue:)();
  swift_endAccess();
  LOBYTE(v8) = [v18 permission] == (id)2;
  swift_beginAccess();
  char v25 = (char)v8;
  Published.init(initialValue:)();
  swift_endAccess();
  BOOL v19 = [v18 role] == (id)1;
  v15[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_isDocumentOwner] = v19;

  uint64_t v20 = (objc_class *)type metadata accessor for CRLCollaborationParticipant(0);
  v24.receiver = v15;
  v24.super_class = v20;
  return [super init];
}

uint64_t sub_10070B9B4@<X0>(void *a1@<X8>)
{
  return sub_10070AC74(a1);
}

void sub_10070B9DC()
{
}

void *sub_10070BA08(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    sub_10050BF48(0, (unint64_t *)&qword_101672E50);
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v3);
      uint64_t v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      if (static NSObject.== infix(_:_:)())
      {
        swift_bridgeObjectRelease();
        return v5;
      }

      ++v3;
      if (v6 == v2) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10070BB48@<X0>(unsigned char *a1@<X8>)
{
  return sub_1006FF6A0(a1);
}

uint64_t sub_10070BB70(uint64_t a1, void **a2)
{
  return sub_1006FF730(a1, a2);
}

uint64_t sub_10070BBA0@<X0>(void *a1@<X8>)
{
  return sub_10070AC74(a1);
}

unint64_t sub_10070BBCC()
{
  unint64_t result = qword_10167C518;
  if (!qword_10167C518)
  {
    sub_10050BF48(255, &qword_10167C510);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167C518);
  }
  return result;
}

double *sub_10070BC34(unint64_t a1, BOOL a2)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      unint64_t v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v6 = v5;
        unint64_t v7 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_15;
        }
        id v8 = [*(id *)&v5[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant] userIdentity];
        BOOL v9 = sub_1006FF8F4(a2);

        if (v9)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
        ++v4;
        if (v7 == v3) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v4 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      if (!v3) {
        return _swiftEmptyArrayStorage;
      }
    }
    uint64_t v5 = (char *)*(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10070BDA4(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  a2 += OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_joinTime;
  while (1)
  {
    id v6 = (a1 & 0xC000000000000001) != 0
       ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
       : *(id *)(a1 + 8 * v5 + 32);
    unint64_t v7 = v6;
    char v8 = static Date.< infix(_:_:)();

    if (v8) {
      return v5;
    }
    uint64_t v9 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v9 == v4) {
      return 0;
    }
  }
}

uint64_t sub_10070BEBC(uint64_t *a1)
{
  unint64_t v2 = *a1;
  if ((unint64_t)*a1 >> 62) {
    goto LABEL_62;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v3)
  {
LABEL_3:
    sub_10050BF48(0, (unint64_t *)&qword_101672E50);
    unint64_t v4 = 0;
    while (1)
    {
      id v5 = (v2 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v2 + 8 * v4 + 32);
      id v6 = v5;
      char v7 = static NSObject.== infix(_:_:)();

      if (v7) {
        break;
      }
      unint64_t v8 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        swift_bridgeObjectRetain();
        uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
        if (!v3) {
          goto LABEL_10;
        }
        goto LABEL_3;
      }
      ++v4;
      if (v8 == v3) {
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
    }
    else if (!((unint64_t)*a1 >> 62))
    {
      if (v10 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_16:
        for (unint64_t i = v4 + 5; ; ++i)
        {
          unint64_t v2 = i - 4;
          uint64_t v12 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if ((v2 & 0x8000000000000000) != 0) {
              goto LABEL_52;
            }
            if (v2 >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_53;
            }
            id v13 = *(id *)(v12 + 8 * i);
          }
          uint64_t v14 = v13;
          char v15 = static NSObject.== infix(_:_:)();

          if (v15) {
            goto LABEL_42;
          }
          if (v2 != v4) {
            break;
          }
LABEL_41:
          if (__OFADD__(v4++, 1)) {
            goto LABEL_55;
          }
LABEL_42:
          unint64_t v26 = i - 3;
          if (__OFADD__(v2, 1)) {
            goto LABEL_54;
          }
          if ((unint64_t)*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v27 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v26 == v27) {
            return v4;
          }
        }
        uint64_t v16 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v16 = *a1;
          if ((*a1 & 0xC000000000000001) == 0)
          {
LABEL_27:
            if ((v2 & 0x8000000000000000) != 0) {
              goto LABEL_58;
            }
            if (v2 >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_59;
            }
            id v18 = *(id *)(v16 + 8 * i);
            goto LABEL_30;
          }
        }
        else
        {
          if ((v4 & 0x8000000000000000) != 0) {
            goto LABEL_56;
          }
          if (v4 >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_57;
          }
          id v17 = *(id *)(v16 + 8 * v4 + 32);
          if ((v16 & 0xC000000000000001) == 0) {
            goto LABEL_27;
          }
        }
        id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v16 = *a1;
LABEL_30:
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v16;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v16 < 0 || (v16 & 0x4000000000000000) != 0)
        {
          uint64_t v16 = sub_100F68540(v16);
          *a1 = v16;
        }
        uint64_t v20 = *(void **)((v16 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20);
        *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v18;

        specialized Array._endMutation()();
        uint64_t v21 = *a1;
        int v22 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v21;
        if (!v22 || v21 < 0 || (v21 & 0x4000000000000000) != 0)
        {
          uint64_t v21 = sub_100F68540(v21);
          *a1 = v21;
        }
        if ((v2 & 0x8000000000000000) != 0) {
          goto LABEL_60;
        }
        uint64_t v23 = v21 & 0xFFFFFFFFFFFFFF8;
        if (v2 >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_61;
        }
        objc_super v24 = *(void **)(v23 + 8 * i);
        *(void *)(v23 + 8 * i) = v17;

        specialized Array._endMutation()();
        goto LABEL_41;
      }
      return v4;
    }
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 != v29) {
      goto LABEL_16;
    }
    return v4;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  if (!((unint64_t)*a1 >> 62)) {
    return *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v28;
}

void sub_10070C28C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (v8)
  {
    unint64_t v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v12 = v11 | (v10 << 6);
LABEL_5:
    Swift::UInt v17 = *(void *)(*(void *)(a1 + 48) + 8 * v12);
    sub_100703070(&v17, a2);
    if (v2) {
      goto LABEL_24;
    }
  }
  if (__OFADD__(v10++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v10 >= v9) {
    goto LABEL_24;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v10);
  if (v14)
  {
LABEL_17:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_5;
  }
  int64_t v15 = v10 + 1;
  if (v10 + 1 >= v9) {
    goto LABEL_24;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14) {
    goto LABEL_16;
  }
  int64_t v15 = v10 + 2;
  if (v10 + 2 >= v9) {
    goto LABEL_24;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14) {
    goto LABEL_16;
  }
  int64_t v15 = v10 + 3;
  if (v10 + 3 >= v9) {
    goto LABEL_24;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
LABEL_16:
    int64_t v10 = v15;
    goto LABEL_17;
  }
  int64_t v16 = v10 + 4;
  if (v10 + 4 >= v9)
  {
LABEL_24:
    swift_release();
    return;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v16);
  v10 += 4;
  if (v14) {
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v9) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v10);
    ++v16;
    if (v14) {
      goto LABEL_17;
    }
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_10070C400(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_10167C570);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v25 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v26 = (unint64_t)(v9 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26) {
      return swift_release();
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v26) {
        return swift_release();
      }
      unint64_t v22 = *(void *)(v25 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v26) {
          return swift_release();
        }
        unint64_t v22 = *(void *)(v25 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v26) {
            return swift_release();
          }
          unint64_t v22 = *(void *)(v25 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    uint64_t v16 = *(void *)(a1 + 48);
    uint64_t v17 = type metadata accessor for UUID();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v7, v16 + *(void *)(*(void *)(v17 - 8) + 72) * v15, v17);
    uint64_t v18 = *(void *)(a1 + 56);
    uint64_t v19 = v18 + *(void *)(*(void *)(type metadata accessor for CRLRealTimeEnter(0) - 8) + 72) * v15;
    uint64_t v20 = (uint64_t)&v7[*(int *)(v4 + 48)];
    sub_10070D140(v19, v20);
    a2(v7, v20);
    uint64_t result = sub_100522F00((uint64_t)v7, (uint64_t *)&unk_10167C570);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v26) {
    return swift_release();
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v26) {
      return swift_release();
    }
    unint64_t v22 = *(void *)(v25 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10070C688(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v7 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v7 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (a1 == a5 && a2 == a6 && !(a3 >> 16) && v7 == a4 >> 16) {
    return 1;
  }
  else {
    return _stringCompareInternal(_:_:_:_:expecting:)() & 1;
  }
}

double *sub_10070C6F4(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      unint64_t v5 = 0;
      uint64_t v6 = a1 & 0xFFFFFFFFFFFFFF8;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v8 = v7;
        unint64_t v9 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_15;
        }
        if (sub_1007034FC(a2))
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          uint64_t v6 = a1 & 0xFFFFFFFFFFFFFF8;
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
        ++v5;
        if (v9 == v4) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v5 < *(void *)(v6 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      if (!v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v7 = *(id *)(a1 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10070C868(uint64_t a1)
{
  return sub_100709278(a1) & 1;
}

unint64_t sub_10070C888()
{
  unint64_t result = qword_10167C560;
  if (!qword_10167C560)
  {
    sub_100522D34((uint64_t *)&unk_10167C2B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167C560);
  }
  return result;
}

uint64_t sub_10070C8E4(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_33;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    unint64_t v23 = v3 & 0xC000000000000001;
    unint64_t v22 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRemovedParticipants);
    swift_beginAccess();
    uint64_t v5 = 0;
    uint64_t v20 = v3 + 32;
    uint64_t v21 = v4;
    while (1)
    {
      id v6 = v23 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v20 + 8 * v5);
      id v7 = v6;
      uint64_t v8 = *v22;
      if ((unint64_t)*v22 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
        if (!v9) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (!v9) {
          goto LABEL_23;
        }
      }
      if ((v8 & 0xC000000000000001) != 0) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v10 = *(id *)(v8 + 32);
      }
      unint64_t v11 = v10;
      a2 = type metadata accessor for CRLCollaborationParticipant(0);
      char v12 = static NSObject.== infix(_:_:)();

      if (v12)
      {
LABEL_29:
        swift_bridgeObjectRelease_n();

        return v5;
      }
      if (v9 != 1) {
        break;
      }
LABEL_23:
      swift_bridgeObjectRelease_n();

      if (__OFADD__(v5++, 1)) {
        goto LABEL_32;
      }
      if (v5 == v21) {
        return 0;
      }
    }
    if ((v8 & 0xC000000000000001) != 0)
    {
      uint64_t v13 = 1;
      while (1)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v3 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          break;
        }
        char v14 = static NSObject.== infix(_:_:)();
        swift_unknownObjectRelease();
        if (v14) {
          goto LABEL_29;
        }
        ++v13;
        if (v3 == v9) {
          goto LABEL_23;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v15 = 5;
      while (1)
      {
        uint64_t v3 = v15 - 3;
        if (__OFADD__(v15 - 4, 1)) {
          break;
        }
        id v16 = *(id *)(v8 + 8 * v15);
        char v17 = static NSObject.== infix(_:_:)();

        if (v17) {
          goto LABEL_29;
        }
        ++v15;
        if (v3 == v9) {
          goto LABEL_23;
        }
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_10070CB70(uint64_t *a1, uint64_t a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_10070C8E4(v5, a2);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (v2) {
    return v6;
  }
  if ((v8 & 1) == 0)
  {
    unint64_t v9 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_75;
    }
    if ((unint64_t)*a1 >> 62)
    {
LABEL_76:
      swift_bridgeObjectRetain();
      uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v9 != v33) {
        goto LABEL_6;
      }
    }
    else if (v9 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      uint64_t v36 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRemovedParticipants);
      swift_beginAccess();
      id v35 = a1;
      while (1)
      {
        uint64_t v10 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v9 & 0x8000000000000000) != 0) {
            goto LABEL_64;
          }
          if (v9 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_65;
          }
          id v11 = *(id *)(v10 + 8 * v9 + 32);
        }
        char v12 = v11;
        unint64_t v37 = v6;
        uint64_t v13 = *v36;
        if ((unint64_t)*v36 >> 62)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
          if (!v6) {
            goto LABEL_28;
          }
        }
        else
        {
          uint64_t v6 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          if (!v6) {
            goto LABEL_28;
          }
        }
        if ((v13 & 0xC000000000000001) != 0) {
          id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v14 = *(id *)(v13 + 32);
        }
        uint64_t v15 = v14;
        a1 = (uint64_t *)type metadata accessor for CRLCollaborationParticipant(0);
        char v16 = static NSObject.== infix(_:_:)();

        if (v16)
        {
LABEL_16:

          swift_bridgeObjectRelease_n();
          a1 = v35;
          uint64_t v6 = v37;
          goto LABEL_48;
        }
        if (v6 != 1)
        {
          if ((v13 & 0xC000000000000001) != 0)
          {
            uint64_t v17 = 1;
            while (1)
            {
              specialized _ArrayBuffer._getElementSlowPath(_:)();
              a2 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                break;
              }
              char v18 = static NSObject.== infix(_:_:)();
              swift_unknownObjectRelease();
              if (v18) {
                goto LABEL_16;
              }
              ++v17;
              if (a2 == v6) {
                goto LABEL_28;
              }
            }
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
            goto LABEL_67;
          }
          uint64_t v19 = 5;
          while (1)
          {
            a2 = v19 - 3;
            if (__OFADD__(v19 - 4, 1)) {
              break;
            }
            id v20 = *(id *)(v13 + 8 * v19);
            char v21 = static NSObject.== infix(_:_:)();

            if (v21) {
              goto LABEL_16;
            }
            ++v19;
            if (a2 == v6) {
              goto LABEL_28;
            }
          }
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
          goto LABEL_76;
        }
LABEL_28:
        swift_bridgeObjectRelease_n();

        uint64_t v6 = v37;
        a1 = v35;
        if (v37 == v9) {
          goto LABEL_47;
        }
        uint64_t v22 = *v35;
        if ((*v35 & 0xC000000000000001) != 0)
        {
          id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v22 = *v35;
          if ((*v35 & 0xC000000000000001) == 0) {
            goto LABEL_33;
          }
        }
        else
        {
          if ((v37 & 0x8000000000000000) != 0) {
            goto LABEL_69;
          }
          if (v37 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_70;
          }
          id v23 = *(id *)(v22 + 8 * v37 + 32);
          if ((v22 & 0xC000000000000001) == 0)
          {
LABEL_33:
            if ((v9 & 0x8000000000000000) != 0) {
              goto LABEL_71;
            }
            if (v9 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_72;
            }
            id v24 = *(id *)(v22 + 8 * v9 + 32);
            goto LABEL_36;
          }
        }
        id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v22 = *v35;
LABEL_36:
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *id v35 = v22;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v22 < 0 || (v22 & 0x4000000000000000) != 0)
        {
          uint64_t v22 = sub_100F68540(v22);
          *id v35 = v22;
        }
        int64_t v26 = *(void **)((v22 & 0xFFFFFFFFFFFFFF8) + 8 * v37 + 0x20);
        *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 8 * v37 + 0x20) = v24;

        specialized Array._endMutation()();
        uint64_t v27 = *v35;
        int v28 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *id v35 = v27;
        if (!v28 || v27 < 0 || (v27 & 0x4000000000000000) != 0)
        {
          uint64_t v27 = sub_100F68540(v27);
          *id v35 = v27;
        }
        if ((v9 & 0x8000000000000000) != 0) {
          goto LABEL_73;
        }
        if (v9 >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_74;
        }
        uint64_t v29 = *(void **)((v27 & 0xFFFFFFFFFFFFFF8) + 8 * v9 + 0x20);
        *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 8 * v9 + 0x20) = v23;

        specialized Array._endMutation()();
LABEL_47:
        uint64_t v6 = v37 + 1;
        if (__OFADD__(v37, 1)) {
          goto LABEL_68;
        }
LABEL_48:
        if (__OFADD__(v9++, 1)) {
          goto LABEL_66;
        }
        if ((unint64_t)*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v31 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v9 == v31) {
          return v6;
        }
      }
    }
    return v6;
  }
  if (!((unint64_t)*a1 >> 62)) {
    return *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v34;
}

void sub_10070D010()
{
  sub_100705DF4();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingParticipantChangeTimer);
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingParticipantChangeTimer) = 0;
}

uint64_t sub_10070D048(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10070D058()
{
  return swift_release();
}

uint64_t sub_10070D060(id *a1)
{
  return sub_100704B5C(a1, *(BOOL **)(v1 + 16)) & 1;
}

uint64_t sub_10070D080@<X0>(unsigned char *a1@<X8>)
{
  return sub_1006FF6A0(a1);
}

uint64_t sub_10070D0A8(uint64_t a1, void **a2)
{
  return sub_1006FF730(a1, a2);
}

uint64_t sub_10070D0D0(uint64_t a1, uint64_t a2)
{
  return sub_10070474C(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(unint64_t **)(v2 + 32), *(unsigned char **)(v2 + 40));
}

uint64_t sub_10070D0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLRealTimeEnter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10070D140(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLRealTimeEnter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10070D1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101687FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10070D20C()
{
  return static UUID.== infix(_:_:)() & 1;
}

uint64_t sub_10070D250()
{
  return sub_10070D20C() & 1;
}

uint64_t sub_10070D26C()
{
  uint64_t result = type metadata accessor for IgnorableThrottle.Inner.State();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t result = type metadata accessor for Optional();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_10070D3C0(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(a3 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v11 + 24);
  v24[0] = *(void *)(v11 + 16);
  v24[1] = v12;
  uint64_t v25 = (uint64_t *)v24[0];
  uint64_t v26 = v13;
  uint64_t v27 = v12;
  uint64_t v28 = v14;
  type metadata accessor for IgnorableThrottle.Inner();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a3);
  double v15 = *v4;
  char v16 = *(void **)((char *)v4 + a2[10]);
  uint64_t v17 = *(void **)((char *)v4 + a2[11]);
  char v18 = (uint64_t *)((char *)v4 + a2[12]);
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  swift_allocObject();
  id v21 = v16;
  id v22 = v17;
  swift_retain();
  uint64_t v25 = sub_10070D5F0((uint64_t)v10, (uint64_t)v21, (uint64_t)v22, v19, v20, v15);
  swift_getWitnessTable();
  Publisher.subscribe<A>(_:)();
  return swift_release();
}

uint64_t *sub_10070D574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  return sub_10070D5F0(a1, a2, a3, a4, a5, a6);
}

uint64_t *sub_10070D5F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v13 = *v6;
  uint64_t v14 = *(void *)(*v6 + 120);
  type metadata accessor for CRLUnfairLock();
  uint64_t v15 = swift_allocObject();
  char v16 = (_DWORD *)swift_slowAlloc();
  *char v16 = 0;
  *(void *)(v15 + 16) = v16;
  atomic_thread_fence(memory_order_acq_rel);
  *(uint64_t *)((char *)v6 + v14) = v15;
  *(uint64_t *)((char *)v6 + *(void *)(*v6 + 160)) = 0;
  uint64_t v17 = (uint64_t)v6 + *(void *)(*v6 + 168);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v17, 1, 1, AssociatedTypeWitness);
  *(double *)((char *)v6 + *(void *)(*v6 + 128)) = a6;
  *(uint64_t *)((char *)v6 + *(void *)(*v6 + 144)) = a2;
  *(uint64_t *)((char *)v6 + *(void *)(*v6 + 152)) = a3;
  uint64_t v19 = (uint64_t *)((char *)v6 + *(void *)(*v6 + 136));
  *uint64_t v19 = a4;
  v19[1] = a5;
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(v13 + 88) - 8) + 32))((uint64_t)v6 + *(void *)(*v6 + 112), a1, *(void *)(v13 + 88));
  type metadata accessor for IgnorableThrottle.Inner.State();
  swift_storeEnumTagMultiPayload();
  return v6;
}

uint64_t sub_10070D854(void *a1)
{
  uint64_t v26 = a1;
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 104);
  uint64_t v27 = *(uint64_t **)(*v1 + 80);
  v24[0] = v3;
  v24[1] = v4;
  long long v25 = *(_OWORD *)(v3 + 88);
  long long v28 = v25;
  uint64_t v29 = v4;
  uint64_t v5 = type metadata accessor for IgnorableThrottle.Inner.State();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)v24 - v12;
  uint64_t v14 = v25;
  uint64_t v15 = *(void *)(v25 - 8);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)v24 - v18;
  uint64_t v20 = *(void *)(v2 + 120);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v1 + v20) + 16));
  uint64_t v21 = (uint64_t)v1 + *(void *)(*v1 + 112);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v13, v21, v5);
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v1 + v20) + 16));
    sub_10050F848(v26, v26[3]);
    return dispatch thunk of Cancellable.cancel()();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v13, v14);
    sub_100522D34(&qword_10167C718);
    uint64_t v23 = (uint64_t)&v9[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v9, v19, v14);
    sub_1005498A4((uint64_t)v26, v23);
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 40))(v21, v9, v5);
    swift_endAccess();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v1 + v20) + 16));
    uint64_t v29 = v24[0];
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v27 = v1;
    swift_retain();
    dispatch thunk of Subscriber.receive(subscription:)();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v27);
  }
}

uint64_t sub_10070DC08(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v48 = a1;
  uint64_t v3 = (void *)*v1;
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101677360);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v43 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v3[12];
  uint64_t v8 = v3[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = type metadata accessor for Optional();
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v47 = v9;
  __chkstk_darwin(v9, v10);
  uint64_t v44 = (char *)&v40 - v11;
  uint64_t v12 = v3[11];
  uint64_t v13 = v3[13];
  uint64_t v50 = v8;
  uint64_t v51 = v12;
  uint64_t v52 = v7;
  uint64_t v53 = v13;
  uint64_t v14 = type metadata accessor for IgnorableThrottle.Inner.State();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v40 - v17;
  uint64_t v19 = v3[15];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(void *)((char *)v2 + v19) + 16));
  uint64_t v20 = (char *)v2 + *(void *)(*v2 + 112);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = (uint64_t)v43;
    uint64_t v41 = v7;
    uint64_t v42 = v13;
    uint64_t v22 = v19;
    sub_100522D34(&qword_10167C718);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v18[*(int *)(TupleTypeMetadata2 + 48)]);
    (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v18, v12);
    long long v25 = v44;
    uint64_t v24 = AssociatedTypeWitness;
    uint64_t v26 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v27 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v44, v48, AssociatedTypeWitness);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v25, 0, 1, v24);
    long long v28 = (char *)v2 + *(void *)(*v2 + 168);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v46 + 40))(v28, v25, v47);
    swift_endAccess();
    char v29 = (*(uint64_t (**)(uint64_t))((char *)v2 + *(void *)(*v2 + 136)))(v27);
    uint64_t v30 = *(void *)(*v2 + 160);
    uint64_t v31 = *(void *)((char *)v2 + v30);
    if (v29)
    {
      if (v31)
      {
        swift_retain();
        AnyCancellable.cancel()();
        swift_release();
      }
      *(void *)((char *)v2 + v30) = 0;
      swift_release();
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)((char *)v2 + v22) + 16));
      sub_10070E284();
    }
    else
    {
      if (!v31)
      {
        sub_1007111F0();
        uint64_t v32 = type metadata accessor for NSRunLoop.SchedulerOptions();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v21, 1, 1, v32);
        uint64_t v33 = static NSTimer.publish(every:tolerance:on:in:options:)();
        sub_100711230(v21);
        uint64_t v49 = v33;
        type metadata accessor for NSTimer.TimerPublisher();
        sub_100711290();
        uint64_t v34 = ConnectablePublisher.autoconnect()();
        swift_release();
        uint64_t v49 = v34;
        uint64_t v35 = swift_allocObject();
        swift_weakInit();
        uint64_t v36 = (void *)swift_allocObject();
        v36[2] = v8;
        v36[3] = v12;
        uint64_t v37 = v42;
        v36[4] = v41;
        v36[5] = v37;
        v36[6] = v35;
        sub_1005057FC(&qword_10167C730);
        sub_100711368();
        uint64_t v38 = Publisher<>.sink(receiveValue:)();
        swift_release();
        swift_release();
        *(void *)((char *)v2 + v30) = v38;
        swift_release();
      }
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)((char *)v2 + v22) + 16));
    }
    return static Subscribers.Demand.unlimited.getter();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)((char *)v2 + v19) + 16));
    return static Subscribers.Demand.none.getter();
  }
}

uint64_t sub_10070E22C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10070E284();
    return swift_release();
  }
  return result;
}

void sub_10070E284()
{
  unint64_t v1 = v0;
  uint64_t v2 = (void *)*v0;
  uint64_t v3 = v2[12];
  uint64_t v4 = v2[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v57 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness, AssociatedTypeWitness);
  uint64_t v52 = (char *)&v47 - v6;
  uint64_t v55 = v7;
  uint64_t v54 = type metadata accessor for Optional();
  uint64_t v58 = *(void *)(v54 - 8);
  __chkstk_darwin(v54, v8);
  unint64_t v56 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v53 = (char *)&v47 - v12;
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v47 - v15;
  uint64_t v17 = v2[11];
  uint64_t v18 = v2[13];
  uint64_t v60 = v4;
  uint64_t v61 = v17;
  uint64_t v62 = v3;
  uint64_t v63 = v18;
  uint64_t v51 = v18;
  uint64_t v19 = type metadata accessor for IgnorableThrottle.Inner.State();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v21);
  uint64_t v23 = (char *)&v47 - v22;
  uint64_t v24 = v17;
  uint64_t v25 = *(void *)(v17 - 8);
  __chkstk_darwin(v26, v27);
  char v29 = (char *)&v47 - v28;
  uint64_t v59 = v2[15];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(void *)((char *)v1 + v59) + 16));
  uint64_t v30 = *(void *)(*v1 + 160);
  if (*(void *)((char *)v1 + v30))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  *(void *)((char *)v1 + v30) = 0;
  swift_release();
  uint64_t v31 = (char *)v1 + *(void *)(*v1 + 112);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v23, v31, v19);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100522D34(&qword_10167C718);
    uint64_t v32 = v24;
    uint64_t v33 = (uint64_t)&v23[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    uint64_t v49 = v25;
    uint64_t v50 = v29;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v29, v23, v24);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v33);
    uint64_t v34 = (char *)v1 + *(void *)(*v1 + 168);
    swift_beginAccess();
    uint64_t v35 = v58;
    uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
    uint64_t v36 = v54;
    v48(v16, v34, v54);
    uint64_t v37 = v57;
    uint64_t v38 = v53;
    uint64_t v39 = v55;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56))(v53, 1, 1, v55);
    swift_beginAccess();
    uint64_t v40 = v38;
    uint64_t v41 = v32;
    (*(void (**)(char *, char *, uint64_t))(v35 + 40))(v34, v40, v36);
    swift_endAccess();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)((char *)v1 + v59) + 16));
    uint64_t v42 = v56;
    v48(v56, v16, v36);
    uint64_t v43 = v49;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v42, 1, v39) == 1)
    {
      uint64_t v44 = *(void (**)(char *, uint64_t))(v35 + 8);
      v44(v16, v36);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v50, v41);
      v44(v42, v36);
    }
    else
    {
      uint64_t v45 = v52;
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v52, v42, v39);
      uint64_t v46 = v50;
      dispatch thunk of Subscriber.receive(_:)();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v45, v39);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v36);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v46, v41);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)((char *)v1 + v59) + 16));
  }
}

void sub_10070E8A8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 104);
  uint64_t v14 = *(void *)(*v0 + 80);
  long long v13 = *(_OWORD *)(v2 + 88);
  long long v15 = v13;
  uint64_t v16 = v3;
  uint64_t v4 = type metadata accessor for IgnorableThrottle.Inner.State();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = *(void *)(v1 + 120);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v0 + v9) + 16));
  uint64_t v10 = (uint64_t)v0 + *(void *)(*v0 + 112);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v10, v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100522D34(&qword_10167C718);
    uint64_t v11 = v13;
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    sub_10053974C((long long *)&v8[*(int *)(TupleTypeMetadata2 + 48)], (uint64_t)&v14);
    (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v8, v11);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v0 + v9) + 16));
    sub_10050F848(&v14, v16);
    dispatch thunk of Subscription.request(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v14);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v0 + v9) + 16));
  }
}

void sub_10070EB14()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 104);
  uint64_t v19 = *(void *)(*v0 + 80);
  long long v18 = *(_OWORD *)(v2 + 88);
  long long v20 = v18;
  uint64_t v21 = v3;
  uint64_t v4 = type metadata accessor for IgnorableThrottle.Inner.State();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v18 - v11;
  uint64_t v13 = *(void *)(v1 + 120);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v0 + v13) + 16));
  uint64_t v14 = (uint64_t)v0 + *(void *)(*v0 + 112);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v12, v14, v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_100522D34(&qword_10167C718);
      uint64_t v16 = v18;
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      sub_10053974C((long long *)&v12[*(int *)(TupleTypeMetadata2 + 48)], (uint64_t)&v19);
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v14, v8, v4);
      swift_endAccess();
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v0 + v13) + 16));
      sub_10050F848(&v19, v21);
      dispatch thunk of Cancellable.cancel()();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v19);
      (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v12, v16);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
  }
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v14, v8, v4);
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v0 + v13) + 16));
}

uint64_t sub_10070EE34()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 112);
  uint64_t v2 = type metadata accessor for IgnorableThrottle.Inner.State();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();

  swift_release();
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 168);
  swift_getAssociatedTypeWitness();
  uint64_t v4 = type metadata accessor for Optional();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_10070EFF4()
{
  sub_10070EE34();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IgnorableThrottle.Inner()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for IgnorableThrottle.Inner.State()
{
  return swift_getGenericMetadata();
}

unsigned char *storeEnumTagSinglePayload for IgnorableThrottleDecision(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10070F144);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IgnorableThrottleDecision()
{
  return &type metadata for IgnorableThrottleDecision;
}

uint64_t sub_10070F17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

uint64_t sub_10070F184()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10070F248(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64) + 7;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((((((v6 + ((v5 + 8) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    int v3 = (uint64_t *)(v9 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
  }
  else
  {
    *a1 = *a2;
    uint64_t v10 = ((unint64_t)a1 + v5 + 8) & ~v5;
    uint64_t v11 = ((unint64_t)a2 + v5 + 8) & ~v5;
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v10, v11);
    uint64_t v12 = (void *)((v6 + v10) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (void **)((v6 + v11) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v14 = *v13;
    *uint64_t v12 = *v13;
    long long v15 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v16 = (void **)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v17 = *v16;
    *long long v15 = *v16;
    long long v18 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v19 = v18[1];
    long long v20 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
    void *v20 = *v18;
    v20[1] = v19;
    id v21 = v14;
    id v22 = v17;
  }
  swift_retain();
  return v3;
}

uint64_t sub_10070F3A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = v2 + 8;
  unint64_t v4 = (a1 + *(unsigned __int8 *)(v2 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  (*(void (**)(unint64_t))(v2 + 8))(v4);
  uint64_t v5 = (id *)((*(void *)(v3 + 56) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);

  return swift_release();
}

void *sub_10070F43C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 16;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 48) + 7;
  uint64_t v10 = (void *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void **)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = *v11;
  *uint64_t v10 = *v11;
  uint64_t v13 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (void **)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  long long v15 = *v14;
  *uint64_t v13 = *v14;
  uint64_t v16 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  id v19 = v12;
  id v20 = v15;
  swift_retain();
  return a1;
}

void *sub_10070F50C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 24;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 40) + 7;
  uint64_t v10 = (void **)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void **)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = *v11;
  uint64_t v13 = *v10;
  *uint64_t v10 = *v11;
  id v14 = v12;

  long long v15 = (void **)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v16 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = *(void **)v16;
  v16 += 15;
  uint64_t v18 = *v15;
  *long long v15 = v17;
  id v19 = v17;

  id v20 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = *(void *)((v16 & 0xFFFFFFFFFFFFFFF8) + 8);
  void *v20 = *(void *)(v16 & 0xFFFFFFFFFFFFFFF8);
  v20[1] = v21;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_10070F5F4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 32) + 7;
  uint64_t v10 = (void *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v11;
  uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  *(_OWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_10070F6B4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 40;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 40))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 24) + 7;
  uint64_t v10 = (void **)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void **)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = *v10;
  *uint64_t v10 = *v11;

  uint64_t v13 = (void **)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v14 = (void **)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  long long v15 = *v13;
  *uint64_t v13 = *v14;

  *(_OWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_10070F78C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v8 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7;
  if (v7 < a2)
  {
    unint64_t v9 = ((((((v8 + ((v6 + 8) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
    unsigned int v10 = a2 - v7;
    uint64_t v11 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v12 = 2;
    }
    else {
      unsigned int v12 = v10 + 1;
    }
    if (v12 >= 0x10000) {
      unsigned int v13 = 4;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v12 < 0x100) {
      unsigned int v13 = 1;
    }
    if (v12 >= 2) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    switch(v14)
    {
      case 1:
        int v15 = *((unsigned __int8 *)a1 + v9);
        if (!v15) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v15 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v15) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10070F904);
      case 4:
        int v15 = *(_DWORD *)((char *)a1 + v9);
        if (!v15) {
          break;
        }
LABEL_22:
        int v17 = v15 - 1;
        if (v11)
        {
          int v17 = 0;
          LODWORD(v11) = *a1;
        }
        return v7 + (v11 | v17) + 1;
      default:
        break;
    }
  }
  uint64_t v18 = ((unint64_t)a1 + v6 + 8) & ~v6;
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(uint64_t))(v4 + 48))(v18);
  }
  unint64_t v19 = *(void *)((v8 + v18) & 0xFFFFFFFFFFFFFFF8);
  if (v19 >= 0xFFFFFFFF) {
    LODWORD(v19) = -1;
  }
  return (v19 + 1);
}

void sub_10070F918(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7;
  unint64_t v11 = ((((((v10 + ((v9 + 8) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v8 >= a3)
  {
    int v15 = 0;
    int v16 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v11] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            unint64_t v19 = (unint64_t)&a1[v9 + 8] & ~v9;
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v21 = (void *)((v10 + v19) & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0) {
                uint64_t v22 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v22 = a2 - 1;
              }
              *uint64_t v21 = v22;
            }
            else
            {
              id v20 = *(void (**)(unint64_t))(v6 + 56);
              v20(v19);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = a3 - v8;
    if (((((((v10 + ((v9 + 8) & ~v9)) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    int v16 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((((v10 + ((v9 + 8) & ~v9)) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v17 = v16;
  }
  else {
    int v17 = 1;
  }
  if (((((((v10 + ((v9 + 8) & ~v9)) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v18 = ~v8 + a2;
    bzero(a1, ((((((v10 + ((v9 + 8) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *(_DWORD *)a1 = v18;
  }
  switch(v15)
  {
    case 1:
      a1[v11] = v17;
      break;
    case 2:
      *(_WORD *)&a1[v11] = v17;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x10070FB28);
    case 4:
      *(_DWORD *)&a1[v11] = v17;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for IgnorableThrottle()
{
  return sub_100568E70();
}

uint64_t sub_10070FB68()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v2[4] = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_10070FC0C(void *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v4 = __dst;
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 <= v6) {
    unint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  else {
    unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  }
  int v8 = *(_DWORD *)(v5 + 80);
  if ((v8 & 0x1000F8) != 0 || v7 + 1 > 0x18)
  {
    uint64_t v10 = *(void *)__src;
    *uint64_t v4 = *(void *)__src;
    uint64_t v4 = (void *)(v10 + ((unsigned __int16)((v8 & 0xF8) + 23) & (unsigned __int16)~(v8 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v11 = __src[v7];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v13 = v7;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *__src;
          goto LABEL_19;
        case 2:
          int v14 = *(unsigned __int16 *)__src;
          goto LABEL_19;
        case 3:
          int v14 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_19;
        case 4:
          int v14 = *(_DWORD *)__src;
LABEL_19:
          int v15 = (v14 | (v12 << (8 * v7))) + 2;
          unsigned int v11 = v14 + 2;
          if (v7 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(__dst, __src);
      unint64_t v16 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v17 = (unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
      uint64_t v18 = *(void *)(v17 + 24);
      *(void *)(v16 + 24) = v18;
      *(void *)(v16 + 32) = *(void *)(v17 + 32);
      (**(void (***)(void))(v18 - 8))();
      *((unsigned char *)v4 + v7) = 1;
    }
    else if (v11)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(__dst, __src);
      *((unsigned char *)v4 + v7) = 0;
    }
  }
  return v4;
}

unsigned __int8 *sub_10070FE28(unsigned __int8 *result, uint64_t a2)
{
  uint64_t v2 = result;
  uint64_t v3 = *(void *)(*(void *)(a2 + 24) - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  unint64_t v5 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  if (v5 <= v4) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  }
  unsigned int v6 = result[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *result;
        goto LABEL_12;
      case 2:
        int v9 = *(unsigned __int16 *)result;
        goto LABEL_12;
      case 3:
        int v9 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_12;
      case 4:
        int v9 = *(_DWORD *)result;
LABEL_12:
        int v10 = (v9 | (v7 << (8 * v5))) + 2;
        unsigned int v6 = v9 + 2;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 1)
  {
    (*(void (**)(unsigned __int8 *))(v3 + 8))(result);
    return (unsigned __int8 *)_s8Freeform26AnyCRLCommandChangeContextVwxx_0((unint64_t)&v2[v4 + 7] & 0xFFFFFFFFFFFFFFF8);
  }
  else if (!v6)
  {
    unsigned int v11 = *(uint64_t (**)(void))(v3 + 8);
    return (unsigned __int8 *)v11();
  }
  return result;
}

unsigned char *sub_10070FFA4(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 <= v6) {
    unint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  else {
    unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  }
  unsigned int v8 = __src[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *__src;
        goto LABEL_13;
      case 2:
        int v11 = *(unsigned __int16 *)__src;
        goto LABEL_13;
      case 3:
        int v11 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_13;
      case 4:
        int v11 = *(_DWORD *)__src;
LABEL_13:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    unint64_t v13 = (unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
    unint64_t v14 = (unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
    uint64_t v15 = *(void *)(v14 + 24);
    *(void *)(v13 + 24) = v15;
    *(void *)(v13 + 32) = *(void *)(v14 + 32);
    (**(void (***)(void))(v15 - 8))();
    __dst[v7] = 1;
  }
  else if (v8)
  {
    memcpy(__dst, __src, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    __dst[v7] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_100710180(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 24);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    if (((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 <= v7) {
      unint64_t v8 = *(void *)(v6 + 64);
    }
    else {
      unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
    }
    unsigned int v9 = __dst[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *__dst;
          goto LABEL_14;
        case 2:
          int v12 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v12 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v12 = *(_DWORD *)__dst;
LABEL_14:
          int v13 = (v12 | (v10 << (8 * v8))) + 2;
          unsigned int v9 = v12 + 2;
          if (v8 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
    }
    else if (!v9)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v14 = __src[v8];
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v16 = v8;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *__src;
          goto LABEL_29;
        case 2:
          int v17 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v17 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_29;
        case 4:
          int v17 = *(_DWORD *)__src;
LABEL_29:
          int v18 = (v17 | (v15 << (8 * v8))) + 2;
          unsigned int v14 = v17 + 2;
          if (v8 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      unint64_t v19 = (unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
      unint64_t v20 = (unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
      uint64_t v21 = *(void *)(v20 + 24);
      *(void *)(v19 + 24) = v21;
      *(void *)(v19 + 32) = *(void *)(v20 + 32);
      (**(void (***)(void))(v21 - 8))();
      __dst[v8] = 1;
    }
    else if (v14)
    {
      memcpy(__dst, __src, v8 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      __dst[v8] = 0;
    }
  }
  return __dst;
}

unsigned char *sub_100710458(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 <= v6) {
    unint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  else {
    unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  }
  unsigned int v8 = __src[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *__src;
        goto LABEL_13;
      case 2:
        int v11 = *(unsigned __int16 *)__src;
        goto LABEL_13;
      case 3:
        int v11 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_13;
      case 4:
        int v11 = *(_DWORD *)__src;
LABEL_13:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    unint64_t v13 = (unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
    uint64_t v14 = *(void *)(v13 + 32);
    long long v15 = *(_OWORD *)(v13 + 16);
    unint64_t v16 = (unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
    *(_OWORD *)unint64_t v16 = *(_OWORD *)v13;
    *(_OWORD *)(v16 + 16) = v15;
    *(void *)(v16 + 32) = v14;
    __dst[v7] = 1;
  }
  else if (v8)
  {
    memcpy(__dst, __src, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    __dst[v7] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_1007105F8(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 24);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    if (((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 <= v7) {
      unint64_t v8 = *(void *)(v6 + 64);
    }
    else {
      unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
    }
    unsigned int v9 = __dst[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *__dst;
          goto LABEL_14;
        case 2:
          int v12 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v12 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v12 = *(_DWORD *)__dst;
LABEL_14:
          int v13 = (v12 | (v10 << (8 * v8))) + 2;
          unsigned int v9 = v12 + 2;
          if (v8 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
    }
    else if (!v9)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v14 = __src[v8];
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v16 = v8;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *__src;
          goto LABEL_29;
        case 2:
          int v17 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v17 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_29;
        case 4:
          int v17 = *(_DWORD *)__src;
LABEL_29:
          int v18 = (v17 | (v15 << (8 * v8))) + 2;
          unsigned int v14 = v17 + 2;
          if (v8 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      unint64_t v19 = (unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
      uint64_t v20 = *(void *)(v19 + 32);
      long long v21 = *(_OWORD *)(v19 + 16);
      unint64_t v22 = (unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v22 = *(_OWORD *)v19;
      *(_OWORD *)(v22 + 16) = v21;
      *(void *)(v22 + 32) = v20;
      __dst[v8] = 1;
    }
    else if (v14)
    {
      memcpy(__dst, __src, v8 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      __dst[v8] = 0;
    }
  }
  return __dst;
}

uint64_t sub_100710894(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  unint64_t v4 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  if (v4 <= v3) {
    unint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  unint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 3) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 254;
}

void sub_1007109D0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  if (((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 > v5) {
    unint64_t v5 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x100710BA0);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_100710BC8(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  unint64_t v3 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  if (v3 <= v2) {
    unint64_t v3 = *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_100710C88(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 <= v4) {
    size_t v5 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  else {
    size_t v5 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  }
  if (a2 > 1)
  {
    unsigned int v6 = a2 - 2;
    if (v5 < 4)
    {
      unsigned int v7 = v6 >> (8 * v5);
      int v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 2;
      bzero(a1, v5);
      if (v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if (v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 2;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    a1[v5] = a2;
  }
}

uint64_t sub_100710D68()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_100710D84(void *a1)
{
  return sub_10070D854(a1);
}

uint64_t sub_100710DA8(uint64_t a1)
{
  return sub_10070DC08(a1);
}

void sub_100710DCC()
{
}

void sub_100710DF0()
{
}

uint64_t sub_100710E14()
{
  return CustomCombineIdentifierConvertible<>.combineIdentifier.getter();
}

void sub_100710E38()
{
}

uint64_t sub_100710E5C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  return sub_10070D3C0(a1, a4, a2);
}

unint64_t sub_100710E74()
{
  unint64_t result = qword_10167C710;
  if (!qword_10167C710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167C710);
  }
  return result;
}

uint64_t sub_100710EC8()
{
  return swift_getWitnessTable();
}

uint64_t sub_100710EE4()
{
  return swift_getWitnessTable();
}

uint64_t sub_100710F00()
{
  return swift_getAssociatedConformanceWitness();
}

void sub_100710F20()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 104);
  uint64_t v18 = *(void *)(*v0 + 80);
  long long v17 = *(_OWORD *)(v2 + 88);
  long long v19 = v17;
  uint64_t v20 = v3;
  uint64_t v4 = type metadata accessor for IgnorableThrottle.Inner.State();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  int v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  int v12 = (char *)&v17 - v11;
  uint64_t v13 = *(void *)(v1 + 120);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v0 + v13) + 16));
  uint64_t v14 = (uint64_t)v0 + *(void *)(*v0 + 112);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v12, v14, v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100522D34(&qword_10167C718);
    uint64_t v15 = v17;
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    sub_10053974C((long long *)&v12[*(int *)(TupleTypeMetadata2 + 48)], (uint64_t)&v18);
    (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v12, v15);
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v14, v8, v4);
    swift_endAccess();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v0 + v13) + 16));
    sub_10050F848(&v18, v20);
    dispatch thunk of Cancellable.cancel()();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v18);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(uint64_t *)((char *)v0 + v13) + 16));
  }
}

unint64_t sub_1007111F0()
{
  unint64_t result = qword_10167C720;
  if (!qword_10167C720)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10167C720);
  }
  return result;
}

uint64_t sub_100711230(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101677360);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100711290()
{
  unint64_t result = qword_10167C728;
  if (!qword_10167C728)
  {
    type metadata accessor for NSTimer.TimerPublisher();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167C728);
  }
  return result;
}

uint64_t sub_1007112E8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100711320()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100711358()
{
  return sub_10070E22C();
}

unint64_t sub_100711368()
{
  unint64_t result = qword_10167C738;
  if (!qword_10167C738)
  {
    sub_100522D34(&qword_10167C730);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167C738);
  }
  return result;
}

NSString sub_1007113C4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A4E0 = (uint64_t)result;
  return result;
}

NSString sub_1007113FC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A4E8 = (uint64_t)result;
  return result;
}

NSString sub_100711434()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A4F0 = (uint64_t)result;
  return result;
}

id sub_10071146C(uint64_t a1)
{
  return sub_100711538(a1, &qword_10166EEA8, (void **)&qword_10171A4E0, &qword_10171A4F8);
}

id sub_1007114BC(uint64_t a1)
{
  return sub_100711538(a1, &qword_10166EEB0, (void **)&qword_10171A4E8, &qword_10171A500);
}

id sub_10071150C(uint64_t a1)
{
  return sub_100711538(a1, &qword_10166EEB8, (void **)&qword_10171A4F0, &qword_10171A508);
}

id sub_100711538(uint64_t a1, void *a2, void **a3, void **a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v6 = *a3;
  *a4 = *a3;

  return v6;
}

id sub_1007115B4(uint64_t a1, uint64_t a2, void *a3, void **a4)
{
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v5 = *a4;

  return v5;
}

id sub_100711648()
{
  return sub_1007116A4(&OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_overlayView);
}

id sub_100711698()
{
  return sub_1007116A4(&OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_underlayView);
}

id sub_1007116A4(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (v3)
  {
    id v4 = [v3 textSelectionDelegate];
    if (v4)
    {
      uint64_t v5 = (char *)[v4 selectionViewController];
      swift_unknownObjectRelease();
      if (v5)
      {
        uint64_t v6 = *(void **)&v5[*a1];
        id v7 = v6;

        if (v6) {
          return v7;
        }
      }
    }
  }
  id v9 = objc_allocWithZone((Class)UIView);

  return [v9 initWithFrame:0.0, 0.0, 0.0, 0.0];
}

uint64_t sub_100711834()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 1;
  }
  uint64_t v1 = Strong;
  id v2 = [Strong delegate];

  if (!v2) {
    return 1;
  }
  if ([v2 respondsToSelector:"allowTextEditingToBegin"]
    && ([v2 respondsToSelector:"allowTextEditingToBegin"] & 1) != 0)
  {
    uint64_t v3 = (uint64_t)[v2 allowTextEditingToBegin];
  }
  else
  {
    uint64_t v3 = 1;
  }
  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_100711920(void *a1)
{
  id v2 = v1;
  unsigned int v4 = [v2 isFirstResponder];
  unsigned __int8 v5 = [a1 shouldBecomeTextInputEditor];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong
    || (id v7 = Strong, v8 = [Strong delegate], v7, !v8))
  {
LABEL_8:
    if ((v5 & 1) == 0)
    {
LABEL_11:
      unsigned int v9 = 0;
      return v4 ^ v9;
    }
LABEL_9:
    unsigned int v9 = 1;
    return v4 ^ v9;
  }
  if (([v8 respondsToSelector:"allowTextEditingToBegin"] & 1) == 0)
  {
    swift_unknownObjectRelease();
    goto LABEL_8;
  }
  if (([v8 respondsToSelector:"allowTextEditingToBegin"] & 1) == 0)
  {
    swift_unknownObjectRelease();
    if ((v5 & 1) == 0) {
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  unsigned int v9 = [v8 allowTextEditingToBegin];
  swift_unknownObjectRelease();
  if ((v5 & 1) == 0) {
    goto LABEL_11;
  }
  return v4 ^ v9;
}

uint64_t sub_100711AE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  unsigned __int8 v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask;
  if (*(void *)&v0[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask])
  {
    swift_retain();
    sub_1005057FC(&qword_101672BD0);
    Task.cancel()();
    swift_release();
  }
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  type metadata accessor for MainActor();
  id v8 = v0;
  uint64_t v9 = static MainActor.shared.getter();
  uint64_t v10 = (void *)swift_allocObject();
  _OWORD v10[2] = v9;
  void v10[3] = &protocol witness table for MainActor;
  v10[4] = v8;
  *(void *)&v1[v6] = sub_1006D9138((uint64_t)v5, (uint64_t)&unk_10167C900, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_100711C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  sub_1005057FC(&qword_101672BB0);
  v4[4] = swift_task_alloc();
  v4[5] = type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100711D24, v6, v5);
}

uint64_t sub_100711D24()
{
  swift_release();
  if (static Task<>.isCancelled.getter())
  {
    char v1 = 0;
  }
  else
  {
    unsigned int v2 = [self keyboardIsAnimating];
    uint64_t v3 = *(void *)(v0 + 24);
    if (v2)
    {
      uint64_t v4 = (uint64_t *)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask);
      *(void *)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask) = 0;
      swift_release();
      if (*v4)
      {
        swift_retain();
        sub_1005057FC(&qword_101672BD0);
        Task.cancel()();
        swift_release();
      }
      uint64_t v5 = *(void *)(v0 + 32);
      uint64_t v6 = *(void **)(v0 + 24);
      uint64_t v7 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
      id v8 = v6;
      uint64_t v9 = static MainActor.shared.getter();
      uint64_t v10 = (void *)swift_allocObject();
      _OWORD v10[2] = v9;
      void v10[3] = &protocol witness table for MainActor;
      v10[4] = v8;
      uint64_t v11 = sub_1006D9138(v5, (uint64_t)&unk_1016838B0, (uint64_t)v10);
      char v1 = 0;
    }
    else
    {
      [*(id *)(v0 + 24) reloadInputViews];
      uint64_t v11 = 0;
      uint64_t v4 = (uint64_t *)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask);
      char v1 = 1;
    }
    *uint64_t v4 = v11;
    swift_release();
  }
  **(unsigned char **)(v0 + 16) = v1;
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

void sub_100711FCC()
{
  id v1 = [v0 inputAssistantItem];
  unsigned int v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor];
  if (v2)
  {
    id v17 = v1;
    id v3 = [(id)swift_unknownObjectRetain() leadingBarButtonGroups];
    if (v3)
    {
      uint64_t v4 = v3;
      sub_10050BF48(0, &qword_1016838E0);
      unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      unint64_t v5 = 0;
    }
    id v6 = [v2 trailingBarButtonGroups];
    if (v6)
    {
      uint64_t v7 = v6;
      sub_10050BF48(0, &qword_1016838E0);
      unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      unint64_t v8 = 0;
    }
    id v9 = [v17 leadingBarButtonGroups];
    sub_10050BF48(0, &qword_1016838E0);
    uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v5)
    {
      swift_bridgeObjectRetain_n();
      unsigned __int8 v11 = sub_1005BED6C(v5, v10);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      if (v11)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v17 setLeadingBarButtonGroups:isa];

LABEL_13:
    id v13 = [v17 trailingBarButtonGroups];
    uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v8)
    {
      swift_bridgeObjectRetain_n();
      unsigned __int8 v15 = sub_1005BED6C(v8, v14);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      if (v15)
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
LABEL_18:
        id v1 = v17;
        goto LABEL_19;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    Class v16 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v17 setTrailingBarButtonGroups:v16];

    swift_unknownObjectRelease();
    goto LABEL_18;
  }
LABEL_19:
}

void sub_10071227C()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
  uint64_t v2 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard) = 1;
  id v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate);
  id v5 = v1;
  id v4 = v1;
  if (v3) {
    [v3 textWillChange:v0];
  }
  *(unsigned char *)(v0 + v2) = 0;
}

void sub_100712358()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
  uint64_t v2 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard) = 1;
  id v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate);
  id v5 = v1;
  id v4 = v1;
  if (v3) {
    [v3 textDidChange:v0];
  }
  *(unsigned char *)(v0 + v2) = 0;
}

void sub_100712434(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v6 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v6 - 8, v7);
  id v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor;
  uint64_t v11 = *(void *)&v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor];
  if (v11)
  {
    if (a1 && v11 == a1) {
      return;
    }
  }
  else if (!a1)
  {
    return;
  }
  uint64_t v28 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editorIsChanging;
  v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editorIsChanging] = 1;
  uint64_t v12 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger;
  id v13 = *(void **)&v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger];
  uint64_t v14 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard;
  v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard] = 1;
  uint64_t v15 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate;
  Class v16 = *(void **)&v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate];
  id v17 = v13;
  if (v16) {
    [v16 textWillChange:v3];
  }
  v3[v14] = 0;

  *(void *)&v3[v10] = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v18 = *(void **)&v3[v10];
  if (v18)
  {
    if ([(id)swift_unknownObjectRetain() respondsToSelector:"didBecomeTextInputEditor"]) {
      [v18 didBecomeTextInputEditor];
    }
    if ((sub_100711920(v18) & 1) == 0) {
      goto LABEL_21;
    }
    if ([v3 isFirstResponder])
    {
      long long v19 = &selRef_resignFirstResponder;
    }
    else
    {
      if (a2 < 0)
      {
LABEL_21:
        if (*(void *)&v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_floatingCursorHelper]) {
          swift_unknownObjectWeakAssign();
        }
        uint64_t v20 = *(void **)&v3[v12];
        v3[v14] = 1;
        long long v21 = *(void **)&v3[v15];
        id v22 = v20;
        if (v21) {
          [v21 textDidChange:v3];
        }
        v3[v14] = 0;

        if ((v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_scribbleInProgress] & 1) == 0)
        {
          [v3 reloadInputViews];
          uint64_t v23 = type metadata accessor for TaskPriority();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v9, 1, 1, v23);
          type metadata accessor for MainActor();
          uint64_t v24 = v3;
          uint64_t v25 = static MainActor.shared.getter();
          uint64_t v26 = (void *)swift_allocObject();
          v26[2] = v25;
          v26[3] = &protocol witness table for MainActor;
          v26[4] = v24;
          sub_1005912D0((uint64_t)v9, (uint64_t)&unk_10167C8F0, (uint64_t)v26);
          swift_release();
        }
        swift_unknownObjectRelease();
        v3[v28] = 0;
        return;
      }
      long long v19 = &selRef_becomeFirstResponder;
    }
    [v3 *v19];
    goto LABEL_21;
  }
  if ([v3 isFirstResponder])
  {
    [v3 resignFirstResponder];
  }
}

uint64_t sub_100712774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 24) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10071280C, v6, v5);
}

uint64_t sub_10071280C()
{
  swift_release();
  id v1 = [self defaultCenter];
  if (qword_10166EEB8 != -1) {
    swift_once();
  }
  [v1 postNotificationName:qword_10171A4F0 object:*(void *)(v0 + 16)];

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

id sub_100712A08(void *a1, void *a2)
{
  *(void *)&v2[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress] = 0;
  v2[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_scribbleInProgress] = 0;
  v2[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignorePencilInputSource] = 0;
  uint64_t v5 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger;
  uint64_t v6 = qword_10166EE60;
  uint64_t v7 = v2;
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)qword_10171A478;
  *(void *)&v2[v5] = qword_10171A478;
  v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editorIsChanging] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_endTextInputWhenFirstResponderResigns] = 1;
  v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_resigningFirstResponder] = 0;
  v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_disallowBecomingFirstResponder] = 0;
  v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard] = 0;
  v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_isSettingMarkedText] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_autocorrectionType] = 2;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inlinePredictionType] = 2;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate] = 0;
  v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_keyboardIsHiding] = 0;
  v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_isIgnoringKeyboardInput] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_floatingCursorHelper] = 0;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  id v9 = v8;

  v22.receiver = v7;
  v22.super_class = (Class)type metadata accessor for CRLTextInputResponder();
  [super init];
  uint64_t v11 = self;
  id v12 = v10;
  id v13 = [v11 defaultCenter];
  [v13 addObserver:v12 selector:"applicationDidEnterBackgroundWithNotification:" name:UIApplicationDidEnterBackgroundNotification object:0];

  id v14 = [v11 defaultCenter];
  [v14 addObserver:v12 selector:"applicationWillEnterForegroundWithNotification:" name:UIApplicationWillEnterForegroundNotification object:0];

  id v15 = [v11 defaultCenter];
  uint64_t v16 = qword_10166EEA8;
  id v17 = v12;
  if (v16 != -1) {
    swift_once();
  }
  [v15 addObserver:v17 selector:"firstResponderChangedWithNotification:" name:qword_10171A4E0 object:0];

  id v18 = [v11 defaultCenter];
  uint64_t v19 = qword_10166F568;
  id v20 = v17;
  if (v19 != -1) {
    swift_once();
  }
  [v18 addObserver:v20 selector:"reloadForMathPaperChangesWithNotification:" name:static CRLMathCalculationController.mathHintsModeChangedNotificationName object:0];

  return v20;
}

void sub_100712F14()
{
  Notification.object.getter();
  if (v5)
  {
    type metadata accessor for CRLTextInputResponder();
    if (swift_dynamicCast())
    {
      if ((static NSObject.== infix(_:_:)() & 1) == 0)
      {
        id v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
        if (v1)
        {
          id v2 = [v1 textInputReceiver];
          if (v2)
          {
            [v2 endEditing];
            swift_unknownObjectRelease();
          }
        }
      }
    }
  }
  else
  {
    sub_100522F00((uint64_t)v4, &qword_101672BF0);
  }
}

id sub_1007130D8()
{
  if (![v0 canBecomeFirstResponder]) {
    return 0;
  }
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for CRLTextInputResponder();
  id v1 = [super becomeFirstResponder];
  if (v1)
  {
    id v2 = [self defaultCenter];
    if (qword_10166EEA8 != -1) {
      swift_once();
    }
    [v2 postNotificationName:qword_10171A4E0 object:v0];
  }
  if (qword_10166FA00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v3 = (void *)static OS_os_log.crlTextInput;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = &type metadata for Bool;
  *(void *)(inited + 64) = &protocol witness table for Bool;
  *(unsigned char *)(inited + 32) = (_BYTE)v1;
  id v5 = v3;
  uint64_t v6 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v6, (uint64_t)"TextInputResponder becomeFirstResponder, success: %d", 52, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  return v1;
}

id sub_10071333C()
{
  if (![v0 canResignFirstResponder]) {
    return 0;
  }
  if (v0[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_scribbleInProgress]) {
    return 0;
  }
  id v1 = *(void **)&v0[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor];
  if (!v1) {
    return 0;
  }
  if (![v1 resignFirstResponderWhenKeyboardHides]) {
    return 0;
  }
  uint64_t v2 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_resigningFirstResponder;
  if (v0[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_resigningFirstResponder]) {
    return 0;
  }
  v0[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_resigningFirstResponder] = 1;
  v15.receiver = v0;
  v15.super_class = (Class)type metadata accessor for CRLTextInputResponder();
  [super resignFirstResponder];
  if (v3)
  {
    if (v0[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_endTextInputWhenFirstResponderResigns] == 1)
    {
      int v5 = v0[v2];
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v7 = (void *)Strong;
        if (v5) {
          uint64_t v8 = 8320;
        }
        else {
          uint64_t v8 = 0x2000;
        }
        id v9 = v0;
        [v7 endEditingWithFlags:v8];
      }
    }
    [v0 reloadInputViews];
    id v10 = [self defaultCenter];
    if (qword_10166EEB0 != -1) {
      swift_once();
    }
    [v10 postNotificationName:qword_10171A4E8 object:v0];
  }
  v0[v2] = 0;
  if (qword_10166FA00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v11 = (void *)static OS_os_log.crlTextInput;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = &type metadata for Bool;
  *(void *)(inited + 64) = &protocol witness table for Bool;
  *(unsigned char *)(inited + 32) = (_BYTE)v3;
  id v13 = v11;
  uint64_t v14 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v14, (uint64_t)"TextInputResponder resignFirstResponder, success: %d", 52, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  return v3;
}

void sub_100713674()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
  id v6 = v1;
  if (*(uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress) < 1)
  {
    uint64_t v3 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard;
    *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard) = 1;
    uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate);
    id v5 = v1;
    if (v4) {
      [v4 selectionWillChange:v0];
    }
    *(unsigned char *)(v0 + v3) = 0;
  }
  else
  {
    id v2 = v1;
  }
}

void sub_100713770()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
  id v6 = v1;
  if (*(uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress) < 1)
  {
    uint64_t v3 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard;
    *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard) = 1;
    uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate);
    id v5 = v1;
    if (v4) {
      [v4 selectionDidChange:v0];
    }
    *(unsigned char *)(v0 + v3) = 0;
  }
  else
  {
    id v2 = v1;
  }
}

uint64_t sub_10071386C(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v3) {
    return 0;
  }
  id v4 = [v3 textSelectionDelegate];
  if (!v4) {
    return 0;
  }
  id v5 = v4;
  type metadata accessor for CRLTextRange();
  uint64_t v6 = swift_dynamicCastClass();
  if (!v6)
  {
    swift_unknownObjectRelease();
    return v6;
  }
  id v7 = a1;
  id v8 = [v5 textIn:v6];
  if (!v8)
  {
    swift_unknownObjectRelease();

    return 0;
  }
  id v9 = v8;
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  swift_unknownObjectRelease();
  return v6;
}

void sub_1007139E4(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  uint64_t v9 = sub_10050BF48(0, &qword_10167C8B8);
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 88) = &type metadata for String;
  *(void *)(inited + 56) = v9;
  *(void *)(inited + 64) = a2;
  *(void *)(inited + 72) = a3;
  uint64_t v10 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress;
  uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress);
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12)
  {
    __break(1u);
    goto LABEL_13;
  }
  *(void *)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress) = v13;
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard) == 1
    || (uint64_t v14 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor)) == 0)
  {
    id v23 = v7;
    id v24 = a1;
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  id v15 = v7;
  id v16 = a1;
  swift_bridgeObjectRetain();
  id v17 = [v14 textInputReceiver];
  if (!v17)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  id v18 = v17;
  type metadata accessor for CRLTextRange();
  uint64_t v19 = swift_dynamicCastClass();
  if (v19)
  {
    uint64_t v20 = v19;
    id v21 = v16;
    NSString v22 = String._bridgeToObjectiveC()();
    [v18 replace:v20 with:v22];
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
  }
LABEL_9:
  uint64_t v25 = *(void *)(v3 + v10);
  BOOL v12 = __OFSUB__(v25, 1);
  uint64_t v26 = v25 - 1;
  if (!v12)
  {
    *(void *)(v3 + v10) = v26;
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_arrayDestroy();

    return;
  }
LABEL_13:
  __break(1u);
}

id sub_100713D44()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v1) {
    return 0;
  }
  id v2 = [v1 textSelectionDelegate];
  if (!v2) {
    return 0;
  }
  id v3 = [v2 selectedTextRange];
  swift_unknownObjectRelease();
  return v3;
}

void sub_100713E50(void *a1, uint64_t a2)
{
  if (!a1 || (type metadata accessor for CRLTextRange(), (uint64_t v3 = swift_dynamicCastClass()) == 0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"selectedTextRange", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2, 391, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"selectedTextRange", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2, 391);
    return;
  }
  uint64_t v4 = v3;
  uint64_t v5 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor;
  uint64_t v6 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v6)
  {
    id v10 = a1;
    goto LABEL_13;
  }
  id v11 = a1;
  id v7 = [v6 textSelectionDelegate];
  if (!v7)
  {
LABEL_13:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"selectedTextRange", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2, 392, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"selectedTextRange", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2, 392);
    uint64_t v9 = a1;
    goto LABEL_14;
  }
  [v7 setSelectedTextRange:v4];
  if (*(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_scribbleInProgress)) {
    uint64_t v8 = 16;
  }
  else {
    uint64_t v8 = 0;
  }
  if (*(void *)(a2 + v5))
  {
    type metadata accessor for CRLWPEditor();
    if (swift_dynamicCastClass())
    {
      swift_unknownObjectRetain();
      sub_10082A400(v8, 1);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v9 = v11;
LABEL_14:

      return;
    }
  }

  swift_unknownObjectRelease();
}

id sub_100714138()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v2) {
    return 0;
  }
  id v3 = [v2 textInputReceiver];
  if (!v3) {
    return 0;
  }
  id v4 = [v3 markedTextRange];
  swift_unknownObjectRelease();
  if (v4)
  {
    uint64_t v5 = (char *)[v4 start];
    uint64_t v6 = *(void *)&v5[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

    uint64_t v7 = NSNotFound.getter();
    if (v6 != v7)
    {
      uint64_t v8 = *(void **)(v0 + v1);
      if (v8)
      {
        id v9 = [v8 textInputReceiver];
        if (v9)
        {
          id v4 = [v9 markedTextRange];
          swift_unknownObjectRelease();
          return v4;
        }
      }
    }
    return 0;
  }
  return v4;
}

void sub_100714250(uint64_t a1, void *a2, NSUInteger a3, NSUInteger a4)
{
  id v9 = *(void **)&v4[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger];
  sub_1005057FC(&qword_101674580);
  id v10 = v9;
  swift_bridgeObjectRetain();
  v18.NSUInteger location = a3;
  v18.int64_t length = a4;
  id v11 = NSStringFromRange(v18);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v12 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress;
  uint64_t v13 = *(void *)&v4[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14)
  {
    __break(1u);
  }
  else
  {
    *(void *)&v4[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress] = v15;
    sub_100714374(v4, a1, a2, a3, a4);
    uint64_t v16 = *(void *)&v4[v12];
    BOOL v14 = __OFSUB__(v16, 1);
    uint64_t v17 = v16 - 1;
    if (!v14)
    {
      *(void *)&v4[v12] = v17;
      swift_arrayDestroy();

      return;
    }
  }
  __break(1u);
}

unsigned char *sub_100714374(unsigned char *result, uint64_t a2, NSString a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_isSettingMarkedText;
  if ((result[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_isSettingMarkedText] & 1) == 0)
  {
    uint64_t v6 = result;
    result[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_isSettingMarkedText] = 1;
    NSString result = *(unsigned char **)&result[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor];
    if (result)
    {
      NSString result = [result textInputReceiver];
      if (result)
      {
        id v10 = result;
        if (a3) {
          a3 = String._bridgeToObjectiveC()();
        }
        [v10 setMarkedText:a3 selectedRange:a4];

        NSString result = (unsigned char *)swift_unknownObjectRelease();
      }
    }
    v6[v5] = 0;
  }
  return result;
}

void sub_1007144D0(void *a1, NSUInteger a2, NSUInteger a3)
{
  uint64_t v7 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_10167C8D8);
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 56) = v9;
  id v10 = v7;
  id v11 = a1;
  v22.NSUInteger location = a2;
  v22.int64_t length = a3;
  uint64_t v12 = NSStringFromRange(v22);
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  *(void *)(inited + 88) = &type metadata for String;
  *(void *)(inited + 64) = v13;
  *(void *)(inited + 72) = v15;
  uint64_t v16 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress;
  uint64_t v17 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress);
  uint64_t v18 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress) = v18;
    uint64_t v19 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_isSettingMarkedText;
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_isSettingMarkedText) == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      *(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_isSettingMarkedText) = 1;
      uint64_t v20 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
      if (v20 && (id v21 = [v20 textInputReceiver]) != 0)
      {
        [v21 setAttributedMarkedText:v11 selectedRange:a2, a3];
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      *(unsigned char *)(v3 + v19) = 0;
      uint64_t v18 = *(void *)(v3 + v16);
    }
    if (!__OFSUB__(v18, 1))
    {
      *(void *)(v3 + v16) = v18 - 1;
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      swift_arrayDestroy();

      return;
    }
  }
  __break(1u);
}

void sub_10071471C()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress);
  BOOL v3 = __OFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return;
  }
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress) = v4;
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  id v12 = v5;
  if (v6)
  {
    id v7 = v5;
    id v8 = [v6 textInputReceiver];
    if (v8)
    {
      [v8 unmarkText];
      swift_unknownObjectRelease();
    }
  }
  else
  {
    id v9 = v5;
  }
  uint64_t v10 = *(void *)(v0 + v1);
  BOOL v3 = __OFSUB__(v10, 1);
  uint64_t v11 = v10 - 1;
  if (v3) {
    goto LABEL_11;
  }
  *(void *)(v0 + v1) = v11;
}

id sub_1007148B8()
{
  return sub_100714914((SEL *)&selRef_beginningOfDocument);
}

id sub_100714908()
{
  return sub_100714914((SEL *)&selRef_endOfDocument);
}

id sub_100714914(SEL *a1)
{
  BOOL v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (v3 && (id v4 = [v3 textSelectionDelegate]) != 0)
  {
    id v5 = [v4 *a1];
    swift_unknownObjectRelease();
    return v5;
  }
  else
  {
    id v7 = objc_allocWithZone((Class)type metadata accessor for CRLTextPosition());
    return [v7 init:0 caretAffinity:0];
  }
}

void sub_1007149B8(uint64_t a1@<X0>, void *a2@<X8>)
{
  BOOL v3 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v3) {
    goto LABEL_7;
  }
  id v4 = [v3 textSelectionDelegate];
  if (!v4) {
    goto LABEL_7;
  }
  id v5 = v4;
  type metadata accessor for CRLTextPosition();
  uint64_t v6 = swift_dynamicCastClass();
  if (!v6 || (uint64_t v7 = v6, (v8 = swift_dynamicCastClass()) == 0))
  {
    swift_unknownObjectRelease();
LABEL_7:
    uint64_t v10 = (char *)[objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()) init:0 caretAffinity:0];
    NSNotFound.getter();
    uint64_t v11 = *(void *)&v10[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
    uint64_t v12 = *(void *)&v10[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
    uint64_t v13 = (objc_class *)type metadata accessor for CRLTextRange();
    uint64_t v14 = (char *)objc_allocWithZone(v13);
    uint64_t v15 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
    *(void *)&v14[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
    *(void *)&v14[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
    uint64_t v16 = &v14[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    *(void *)uint64_t v16 = v11;
    *((void *)v16 + 1) = v11;
    *(void *)&v14[v15] = v12;
    v17.receiver = v14;
    v17.super_class = v13;
    id v9 = [super init];

    goto LABEL_8;
  }
  id v9 = [v5 textRangeFrom:v7 to:v8];
  swift_unknownObjectRelease();
LABEL_8:
  *a2 = v9;
}

id sub_100714C20(void *a1, uint64_t a2)
{
  id v4 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v4) {
    return [objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()) init:0 caretAffinity:0];
  }
  id v6 = [v4 textSelectionDelegate];
  if (!v6) {
    return [objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()) init:0 caretAffinity:0];
  }
  uint64_t v7 = v6;
  type metadata accessor for CRLTextPosition();
  uint64_t v8 = swift_dynamicCastClass();
  if (!v8)
  {
    swift_unknownObjectRelease();
    return [objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()) init:0 caretAffinity:0];
  }
  uint64_t v9 = v8;
  uint64_t v10 = qword_10166EE60;
  id v11 = a1;
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v12 = (void *)qword_10171A478;
  id v13 = v11;
  id v14 = v12;
  id v15 = [v7 positionFrom:v9 offset:a2];

  swift_unknownObjectRelease();
  return v15;
}

id sub_100714DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  id v5 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v5) {
    goto LABEL_6;
  }
  id v8 = [v5 textSelectionDelegate];
  if (!v8) {
    goto LABEL_6;
  }
  uint64_t v9 = v8;
  type metadata accessor for CRLTextPosition();
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10)
  {
    swift_unknownObjectRelease();
LABEL_6:
    id result = [objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()) init:0 caretAffinity:0];
    id v11 = result;
    goto LABEL_7;
  }
  id v11 = [v9 positionFrom:v10 in:a2 offset:a3];
  id result = (id)swift_unknownObjectRelease();
LABEL_7:
  *a4 = v11;
  return result;
}

id sub_100714F78(uint64_t a1, uint64_t a2)
{
  return sub_100714FF4(a1, a2, (SEL *)&selRef_compare_to_);
}

id sub_100714FE8(uint64_t a1, uint64_t a2)
{
  return sub_100714FF4(a1, a2, (SEL *)&selRef_offsetFrom_to_);
}

id sub_100714FF4(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v4) {
    return 0;
  }
  id v6 = [v4 textSelectionDelegate];
  if (!v6) {
    return 0;
  }
  uint64_t v7 = v6;
  type metadata accessor for CRLTextPosition();
  uint64_t v8 = swift_dynamicCastClass();
  if (v8 && (uint64_t v9 = v8, (v10 = swift_dynamicCastClass()) != 0)) {
    id v11 = [v7 *a3:v9, v10];
  }
  else {
    id v11 = 0;
  }
  swift_unknownObjectRelease();
  return v11;
}

uint64_t sub_100715160(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  *(void *)(a1 + *a4) = a3;
  swift_unknownObjectRetain();

  return swift_unknownObjectRelease();
}

id sub_100715208(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v3) {
    return 0;
  }
  id v5 = [v3 textSelectionDelegate];
  if (!v5) {
    return 0;
  }
  id v6 = v5;
  type metadata accessor for CRLTextRange();
  uint64_t v7 = swift_dynamicCastClass();
  if (!v7)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  id v8 = [v6 positionWithin:v7 farthestIn:a2];
  swift_unknownObjectRelease();
  return v8;
}

id sub_100715320(void *a1, uint64_t a2)
{
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  id v5 = (void *)qword_10171A478;
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 56) = sub_10050BF48(0, &qword_10167C8D0);
  *(void *)(inited + 32) = a1;
  type metadata accessor for UITextLayoutDirection(0);
  *(void *)(inited + 88) = v7;
  *(void *)(inited + 64) = a2;
  id v8 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v8)
  {
    id v15 = v5;
    id v16 = a1;

LABEL_9:
    swift_release();
    return 0;
  }
  id v9 = v5;
  id v10 = a1;
  id v11 = [v8 textSelectionDelegate];
  if (!v11)
  {

    goto LABEL_9;
  }
  uint64_t v12 = v11;
  type metadata accessor for CRLTextPosition();
  uint64_t v13 = swift_dynamicCastClass();
  if (!v13)
  {

    swift_release();
    swift_unknownObjectRelease();
    return 0;
  }
  id v14 = [v12 characterRangeByExtending:v13 in:a2];
  swift_release();
  swift_unknownObjectRelease();

  return v14;
}

void sub_100715574(uint64_t a1, void *a2)
{
  uint64_t v4 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor;
  id v5 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (v5)
  {
    if ([v5 wantsToReceiveTextInput])
    {
      id v6 = *(void **)(v2 + v4);
      if (v6)
      {
        id v7 = [v6 textInputReceiver];
        if (v7)
        {
          id v8 = v7;
          type metadata accessor for CRLTextRange();
          uint64_t v9 = swift_dynamicCastClass();
          if (v9)
          {
            uint64_t v10 = v9;
            if (a1 == 1)
            {
              id v12 = a2;
              uint64_t v13 = 1;
            }
            else if (a1)
            {
              id v11 = a2;
              if (a1 != -1)
              {
                sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 24, (uint64_t)"Unknown direction.", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
                LOBYTE(v17) = 2;
                id v15 = "Unknown direction.";
                uint64_t v16 = 18;
                sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 24);
              }
              uint64_t v13 = -1;
            }
            else
            {
              id v14 = a2;
              uint64_t v13 = 0;
            }
            [v8 setBaseWritingDirection:v13 forParagraphsWithRange:v10, v15, v16, v17];
            swift_unknownObjectRelease();
          }
          else
          {
            swift_unknownObjectRelease();
          }
        }
      }
    }
  }
}

double sub_1007157D0(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117E810;
  *(void *)(v4 + 56) = sub_10050BF48(0, &qword_10167C8B8);
  *(void *)(v4 + 32) = a1;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = sub_1005057FC((uint64_t *)&unk_10167C8C0);
  *(void *)(inited + 32) = v4;
  id v6 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v6)
  {
    id v14 = v3;
    id v15 = a1;
LABEL_7:
    swift_release();
LABEL_9:

    return 0.0;
  }
  id v7 = v3;
  id v8 = a1;
  swift_bridgeObjectRetain();
  id v9 = [v6 textSelectionDelegate];
  if (!v9)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v10 = v9;
  type metadata accessor for CRLTextRange();
  uint64_t v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    goto LABEL_9;
  }
  [v10 firstRectFor:v11];
  double v13 = v12;

  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return v13;
}

double sub_1007159C0(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  double v4 = 0.0;
  if (v3)
  {
    id v5 = [v3 textSelectionDelegate];
    if (v5)
    {
      id v6 = v5;
      type metadata accessor for CRLTextPosition();
      uint64_t v7 = swift_dynamicCastClass();
      if (v7)
      {
        uint64_t v8 = v7;
        id v9 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
        id v10 = a1;
        id v11 = v9;
        [v6 caretRectFor:v8];
        double v4 = v12;

        swift_unknownObjectRelease();
        swift_arrayDestroy();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  return v4;
}

double sub_100715B14(void *a1, uint64_t a2, void *a3, double (*a4)(id))
{
  id v6 = a3;
  id v7 = a1;
  double v8 = a4(v6);

  return v8;
}

double *sub_100715B94(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117E810;
  *(void *)(v4 + 56) = sub_10050BF48(0, &qword_10167C8B8);
  *(void *)(v4 + 32) = a1;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = sub_1005057FC((uint64_t *)&unk_10167C8C0);
  *(void *)(inited + 32) = v4;
  id v6 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v6)
  {
    id v16 = v3;
    id v17 = a1;
    swift_bridgeObjectRetain();
    goto LABEL_7;
  }
  id v7 = v3;
  id v8 = a1;
  swift_bridgeObjectRetain();
  id v9 = [v6 textSelectionDelegate];
  if (!v9)
  {
LABEL_7:

    swift_bridgeObjectRelease();
    swift_release();
    return _swiftEmptyArrayStorage;
  }
  id v10 = v9;
  type metadata accessor for CRLTextRange();
  uint64_t v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  uint64_t v12 = v11;
  id v13 = v8;
  id v14 = [v10 selectionRectsFor:v12];
  sub_10050BF48(0, (unint64_t *)&qword_10167A2B0);
  uint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  return (double *)v15;
}

id sub_100715E04(double a1, double a2)
{
  id v5 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10117E810;
  type metadata accessor for CGPoint(0);
  *(void *)(v6 + 56) = v7;
  *(double *)(v6 + 32) = a1;
  *(double *)(v6 + 40) = a2;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = sub_1005057FC((uint64_t *)&unk_10167C8C0);
  *(void *)(inited + 32) = v6;
  id v9 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v9)
  {
    id v13 = v5;
LABEL_6:
    swift_release();

    return 0;
  }
  id v10 = v5;
  swift_bridgeObjectRetain();
  id v11 = [v9 textSelectionDelegate];
  if (!v11)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  id v12 = [v11 closestPositionTo:a1, a2];
  swift_release();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return v12;
}

id sub_100715FC0(void *a1, double a2, double a3)
{
  uint64_t v7 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10117D8C0;
  type metadata accessor for CGPoint(0);
  *(void *)(v8 + 56) = v9;
  *(double *)(v8 + 32) = a2;
  *(double *)(v8 + 40) = a3;
  *(void *)(v8 + 88) = sub_10050BF48(0, &qword_10167C8B8);
  *(void *)(v8 + 64) = a1;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = sub_1005057FC((uint64_t *)&unk_10167C8C0);
  *(void *)(inited + 32) = v8;
  id v11 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v11)
  {
    id v18 = v7;
    id v19 = a1;
LABEL_7:
    swift_release();
LABEL_9:

    return 0;
  }
  id v12 = v7;
  id v13 = a1;
  swift_bridgeObjectRetain();
  id v14 = [v11 textSelectionDelegate];
  if (!v14)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v15 = v14;
  type metadata accessor for CRLTextRange();
  uint64_t v16 = swift_dynamicCastClass();
  if (!v16)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    goto LABEL_9;
  }
  id v17 = [v15 closestPositionTo:v16 within:a2, a3];
  swift_release();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return v17;
}

id sub_100716204@<X0>(uint64_t a1@<X0>, void *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  id result = *(id *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (result && (id result = [result textSelectionDelegate]) != 0)
  {
    [result characterRangeAt:a3, a4];
    id result = (id)swift_unknownObjectRelease();
  }
  else
  {
    id v8 = 0;
  }
  *a2 = v8;
  return result;
}

void sub_1007163F0()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v2 = Strong;
  unsigned __int8 v3 = [Strong documentIsSharedReadOnly];

  if ((v3 & 1) != 0
    || (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_keyboardIsHiding) & 1) != 0
    || (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editorIsChanging) & 1) != 0)
  {
    return;
  }
  uint64_t v4 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v4
    && (v5 = v4, id v6 = [v4 editorController], v5, v6))
  {
    id v38 = [v6 selectionPath];
  }
  else
  {
    id v38 = 0;
  }
  uint64_t v7 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v7)
  {
    id v8 = v7;
    id v9 = [v7 infosForCurrentSelectionPath];

    uint64_t v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
    id v11 = v38;
    if (v38)
    {
      if (v10)
      {
        if (*(void *)(v10 + 16) == 1)
        {
          sub_100999A30(v10, (uint64_t)v39);
          swift_bridgeObjectRelease();
          if (!v40)
          {

            sub_100522F00((uint64_t)v39, &qword_10167B190);
            return;
          }
          v12.Class isa = AnyHashable._bridgeToObjectiveC()().isa;
          sub_10050BFE0((uint64_t)v39);
          type metadata accessor for CRLWPShapeItem();
          uint64_t v13 = swift_dynamicCastClass();
          if (!v13) {
            goto LABEL_35;
          }
          uint64_t v14 = v13;
          uint64_t v15 = *(void **)(v13 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
          if (v15)
          {
            id v16 = v15;
            id v17 = (char *)sub_100BD5494(v16);

            id v18 = (char *)[v17 start];
            uint64_t v19 = *(void *)&v18[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

            if (v19 == NSNotFound.getter())
            {
              uint64_t v20 = 0x7FFFFFFFFFFFFFFFLL;
              uint64_t v21 = 0;

              goto LABEL_29;
            }
            uint64_t v20 = *(void *)&v17[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
            uint64_t v22 = *(void *)&v17[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];

            BOOL v23 = __OFSUB__(v22, v20);
            uint64_t v21 = v22 - v20;
            if (!v23)
            {
LABEL_29:
              id v24 = [objc_allocWithZone((Class)CRLWPSelection) initWithRange:v20, v21];
              if (v24)
              {
                uint64_t v25 = v24;
                uint64_t v26 = swift_unknownObjectWeakLoadStrong();
                if (!v26)
                {

                  goto LABEL_36;
                }
                uint64_t v27 = (void *)v26;
                uint64_t v28 = **(void **)(v14 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
                if (swift_conformsToProtocol2())
                {
                  char v29 = *(uint64_t (**)(uint64_t))(v28 + 704);
                  uint64_t v30 = swift_retain();
                  uint64_t v31 = v29(v30);
                  swift_release();
                  id v32 = [(id)v31 bezierPath];

                  LOBYTE(v31) = [v32 isLineSegment];
                  if ((v31 & 1) != 0 || [v27 documentIsSharedReadOnly])
                  {
                  }
                  else
                  {
                    id v33 = [v38 selectionPathWithAppendedSelection:v25];
                    if (!v33)
                    {

                      return;
                    }
                    uint64_t v34 = v33;
                    uint64_t v35 = (void *)swift_unknownObjectWeakLoadStrong();
                    id v36 = [v35 editorController];

                    id v37 = v34;
                    [v36 setSelectionPath:v37];
                  }
LABEL_36:

                  return;
                }
LABEL_43:
                __break(1u);
                return;
              }
LABEL_35:

              goto LABEL_36;
            }
            __break(1u);
          }
          __break(1u);
          goto LABEL_43;
        }
        swift_bridgeObjectRelease();
        id v11 = v38;
      }
      goto LABEL_24;
    }
  }
  else
  {
    id v11 = v38;
    if (v38)
    {
LABEL_24:

      return;
    }
  }

  swift_bridgeObjectRelease();
}

id sub_10071698C(uint64_t a1)
{
  return sub_100716BDC(a1, (SEL *)&selRef_textInputReceiver, (SEL *)&selRef_indentParagraphLevel_);
}

id sub_1007169B8(uint64_t a1)
{
  return sub_100716BDC(a1, (SEL *)&selRef_textInputReceiver, (SEL *)&selRef_outdentParagraphLevel_);
}

uint64_t sub_1007169E4(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_OWORD *))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    id v7 = a1;
  }
  a4(v9);

  return sub_100522F00((uint64_t)v9, &qword_101672BF0);
}

id sub_100716A6C(uint64_t a1)
{
  return sub_100716BDC(a1, (SEL *)&selRef_keyInputReceiver, (SEL *)&selRef_insertTab_);
}

id sub_100716A98()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor;
  id result = *(id *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (result)
  {
    id result = [result wantsToReceiveTextInput];
    if (result)
    {
      id result = *(id *)(v0 + v1);
      if (result)
      {
        id result = [result textInputReceiver];
        if (result)
        {
          swift_unknownObjectRelease();
          id result = *(id *)(v0 + v1);
          if (result)
          {
            if ([result keyInputReceiver])
            {
              swift_unknownObjectRelease();
              return 0;
            }
            else
            {
              id result = *(id *)(v0 + v1);
              if (result) {
                return (id)([result wantsToInterceptDeleteEvents] ^ 1);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

id sub_100716B70(uint64_t a1)
{
  return sub_100716BDC(a1, (SEL *)&selRef_keyInputReceiver, (SEL *)&selRef_insertBacktab_);
}

id sub_100716B9C(uint64_t a1)
{
  return sub_100716BDC(a1, (SEL *)&selRef_keyInputReceiver, (SEL *)&selRef_insertNewline_);
}

id sub_100716BC8(uint64_t a1)
{
  return sub_100716BDC(a1, (SEL *)&selRef_keyInputReceiver, (SEL *)&selRef_escapePressed_);
}

id sub_100716BDC(uint64_t a1, SEL *a2, SEL *a3)
{
  id result = *(id *)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (result)
  {
    id result = [result *a2];
    if (result)
    {
      id v7 = result;
      sub_100557A70(a1, (uint64_t)v15);
      uint64_t v8 = v16;
      if (v16)
      {
        id v9 = sub_10050F848(v15, v16);
        uint64_t v10 = *(void *)(v8 - 8);
        __n128 v11 = __chkstk_darwin(v9, v9);
        uint64_t v13 = (char *)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v10 + 16))(v13, v11);
        uint64_t v14 = _bridgeAnythingToObjectiveC<A>(_:)();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v15);
      }
      else
      {
        uint64_t v14 = 0;
      }
      [v7 *a3:v14];
      swift_unknownObjectRelease();
      return (id)swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_100716D6C(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"insertText(_:)", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2, 724, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"insertText(_:)", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2, 724);
    return;
  }
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard) & 1) == 0
    && (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editorIsChanging) & 1) == 0)
  {
    uint64_t v3 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress;
    uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress);
    BOOL v5 = __OFADD__(v4, 1);
    uint64_t v6 = v4 + 1;
    if (v5)
    {
      __break(1u);
    }
    else
    {
      *(void *)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress) = v6;
      id v9 = (void *)swift_unknownObjectRetain();
      sub_100716ED4(v9, a1, a2, v2);
      uint64_t v10 = *(void *)(v2 + v3);
      BOOL v5 = __OFSUB__(v10, 1);
      uint64_t v11 = v10 - 1;
      if (!v5)
      {
        *(void *)(v2 + v3) = v11;
        swift_unknownObjectRelease();
        return;
      }
    }
    __break(1u);
  }
}

void sub_100716ED4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ([a1 wantsToReceiveTextInput])
  {
    id v6 = [a1 textInputReceiver];
    if (!v6) {
      return;
    }
    goto LABEL_3;
  }
  id v9 = [a1 keyInputReceiver];
  swift_unknownObjectRelease();
  if (v9)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    unsigned int v11 = [a1 shouldBeginTextInputWith:v10];

    if (v11)
    {
      id v12 = [a1 textInputReceiver];
      swift_unknownObjectRelease();
      if (!v12) {
        sub_1007163F0();
      }
      uint64_t v13 = *(void **)(a4 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
      if (v13)
      {
        id v6 = [v13 textInputReceiver];
        if (v6)
        {
LABEL_3:
          id v7 = v6;
          NSString v8 = String._bridgeToObjectiveC()();
          [v7 insertText:v8];

          swift_unknownObjectRelease();
        }
      }
    }
  }
}

void sub_100717100()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v1) {
    goto LABEL_7;
  }
  id v2 = [(id)swift_unknownObjectRetain() textSelectionDelegate];
  if (!v2
    || (id v3 = [v2 selectedTextRange], swift_unknownObjectRelease(),
                                                                                        !v3))
  {
    swift_unknownObjectRelease();
LABEL_7:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"deleteKeyPressed()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2, 749, (uint64_t)"Failed to delete text. No editor or selection.", 46, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deleteKeyPressed()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2, 749);
    return;
  }

  id v4 = [v1 textInputReceiver];
  if (v4)
  {
    [v4 deleteCurrentSelection];
    swift_unknownObjectRelease();
  }

  swift_unknownObjectRelease();
}

void sub_1007172D0(uint64_t a1)
{
  if (sub_100716A98())
  {
    sub_100717100();
  }
  else
  {
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = 0;
    id v3 = (void *)(v2 + 16);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      BOOL v5 = Strong;
      id v6 = [Strong editorController];

      if (v6)
      {
        v12[4] = sub_10071B8E8;
        uint64_t v12[5] = v2;
        v12[0] = _NSConcreteStackBlock;
        v12[1] = *(void *)"";
        v12[2] = sub_1005B74EC;
        v12[3] = &unk_101510DD0;
        id v7 = _Block_copy(v12);
        swift_retain();
        swift_release();
        [v6 enumerateEditorsOnStackUsingBlock:v7];
        _Block_release(v7);
      }
    }
    swift_beginAccess();
    uint64_t v8 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor;
    if (!*v3)
    {
      uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
      if (v9)
      {
        *id v3 = v9;
        swift_unknownObjectRetain();
        uint64_t v8 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor;
      }
    }
    NSString v10 = *(void **)(a1 + v8);
    if (v10 && (id v11 = [v10 keyInputReceiver]) != 0)
    {
      [v11 deleteBackward:a1];
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_100717490(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  uint64_t result = swift_dynamicCastObjCProtocolConditional();
  if (result)
  {
    id v6 = (void *)result;
    swift_unknownObjectRetain();
    if ([v6 wantsToInterceptDeleteEvents])
    {
      swift_beginAccess();
      *(void *)(a3 + 16) = v6;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *a2 = 1;
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1007175DC(char *a1, uint64_t a2, SEL *a3)
{
  id v3 = *(void **)&a1[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor];
  if (v3)
  {
    id v6 = a1;
    id v5 = [v3 keyInputReceiver];
    if (v5)
    {
      [v5 *a3:v6];

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void sub_100717698(uint64_t a1)
{
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (v3 && (id v4 = [v3 keyInputReceiver]) != 0)
  {
    id v5 = v4;
    sub_100557A70(a1, (uint64_t)v13);
    uint64_t v6 = v14;
    if (v14)
    {
      id v7 = sub_10050F848(v13, v14);
      uint64_t v8 = *(void *)(v6 - 8);
      __n128 v9 = __chkstk_darwin(v7, v7);
      id v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v8 + 16))(v11, v9);
      uint64_t v12 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v13);
    }
    else
    {
      uint64_t v12 = 0;
    }
    [v5 spacebarTapped:v12];
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_100716D6C(32, 0xE100000000000000);
  }
}

id sub_100717898()
{
  if (qword_10166FA00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.crlTextInput;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  uint64_t v3 = inited;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v4 = inited + 32;
  uint64_t v5 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor;
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (v6)
  {
    id v7 = v1;
    uint64_t v21 = &type metadata for Bool;
    uint64_t v22 = &protocol witness table for Bool;
    LOBYTE(v20) = [v6 wantsVisibleKeyboard];
    sub_10053974C(&v20, v4);
  }
  else
  {
    *(void *)(inited + 56) = &type metadata for Int;
    *(void *)(inited + 64) = &protocol witness table for Int;
    *(void *)(inited + 32) = 0;
    id v8 = v1;
  }
  uint64_t v9 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v1, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Input view editor wants visible keyboard: %ld", 45, 2, v3);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v10 = (void *)static OS_os_log.crlTextInput;
  uint64_t v11 = swift_initStackObject();
  *(_OWORD *)(v11 + 16) = xmmword_10117E810;
  uint64_t v12 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_scribbleInProgress;
  char v13 = *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_scribbleInProgress);
  *(void *)(v11 + 56) = &type metadata for Bool;
  *(void *)(v11 + 64) = &protocol witness table for Bool;
  *(unsigned char *)(v11 + 32) = v13;
  id v14 = v10;
  uint64_t v15 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v15, (uint64_t)"Input view scribble in progress: %ld", 36, 2, v11);
  swift_setDeallocating();
  swift_arrayDestroy();

  uint64_t v16 = *(void **)(v0 + v5);
  if (!v16) {
    return [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  }
  char v17 = *(unsigned char *)(v0 + v12);
  swift_unknownObjectRetain();
  if ((v17 & 1) != 0
    || ![v16 wantsVisibleKeyboard]
    || *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_keyboardIsHiding) == 1)
  {
    id v18 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return v18;
}

double *sub_100717CB4()
{
  uint64_t v5 = sub_100717F14();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (v1 && [v1 wantsToReceiveTextInput])
  {
    unint64_t v2 = sub_10071A4C8();
    sub_1006E2FC8(v2);
  }
  uint64_t v3 = sub_10071B04C();
  sub_1006E2FC8((unint64_t)v3);
  return v5;
}

double *sub_100717F14()
{
  NSString v1 = String._bridgeToObjectiveC()();
  unint64_t v2 = self;
  id v3 = [v2 keyCommandWithInput:v1 modifierFlags:0 action:"insertTab:"];

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 keyCommandWithInput:v4 modifierFlags:0x20000 action:"insertBackTab:"];

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v2 keyCommandWithInput:v6 modifierFlags:0 action:"insertNewline:"];

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [v2 keyCommandWithInput:v8 modifierFlags:0 action:"escapePressed:"];

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v2 keyCommandWithInput:v10 modifierFlags:0x100000 action:"endTextInput:"];

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v2 keyCommandWithInput:v12 modifierFlags:0x100000 action:"outdentParagraphLevel:"];

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v2 keyCommandWithInput:v14 modifierFlags:0x100000 action:"indentParagraphLevel:"];

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v16 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (v16)
  {
    id v17 = [v16 keyInputReceiver];
    if (v17)
    {
      if ([v17 handlesSpacebar])
      {
        NSString v18 = String._bridgeToObjectiveC()();
        id v19 = [v2 keyCommandWithInput:v18 modifierFlags:0 action:"spacebarTapped:"];

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      swift_unknownObjectRelease();
    }
  }
  return _swiftEmptyArrayStorage;
}

Class sub_10071845C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  sub_10050BF48(0, (unint64_t *)&unk_10167B160);
  v3.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  return v3.super.isa;
}

void sub_100718510(void *a1)
{
  NSArray v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (v3)
  {
    id v4 = [v3 keyInputReceiver];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = sub_10071B1D0(a1);
      if (v7)
      {
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v8 = v6;
        uint64_t v9 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger;
        NSString v10 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
        uint64_t v11 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress;
        if (*(uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_textInputInProgress) < 1)
        {
          uint64_t v13 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard;
          *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard) = 1;
          NSString v14 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate);
          id v15 = v10;
          if (v14) {
            [v14 selectionWillChange:v1];
          }
          *(unsigned char *)(v1 + v13) = 0;
        }
        else
        {
          id v12 = v10;
        }

        id v16 = sub_100A573A4((int)[a1 modifierFlags]);
        [v5 arrowKeyReceivedInDirection:v8 withModifierKeys:v16];

        id v17 = *(void **)(v1 + v9);
        id v22 = v17;
        if (*(uint64_t *)(v1 + v11) < 1)
        {
          uint64_t v19 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard;
          *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard) = 1;
          long long v20 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate);
          id v21 = v17;
          if (v20) {
            [v20 selectionDidChange:v1];
          }
          *(unsigned char *)(v1 + v19) = 0;
        }
        else
        {
          id v18 = v17;
        }
        swift_unknownObjectRelease();
      }
    }
  }
}

uint64_t sub_100718770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (static Selector.== infix(_:_:)())
  {
    char v7 = *(void **)&v3[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor];
    if (!v7) {
      goto LABEL_8;
    }
    uint64_t result = (uint64_t)[v7 wantsToReceiveTextInput];
    if (result) {
      goto LABEL_8;
    }
LABEL_7:
    *a3 = 0u;
    a3[1] = 0u;
    return result;
  }
  uint64_t result = static Selector.== infix(_:_:)();
  if (result) {
    goto LABEL_7;
  }
  uint64_t result = static Selector.== infix(_:_:)();
  if (result) {
    goto LABEL_7;
  }
LABEL_8:
  sub_100557A70(a2, (uint64_t)&v19);
  uint64_t v9 = *((void *)&v20 + 1);
  if (*((void *)&v20 + 1))
  {
    NSString v10 = sub_10050F848(&v19, *((uint64_t *)&v20 + 1));
    uint64_t v11 = *(void *)(v9 - 8);
    __n128 v12 = __chkstk_darwin(v10, v10);
    NSString v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v11 + 16))(v14, v12);
    uint64_t v15 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v19);
  }
  else
  {
    uint64_t v15 = 0;
  }
  id v16 = (objc_class *)type metadata accessor for CRLTextInputResponder();
  v18.receiver = v3;
  v18.super_class = v16;
  id v17 = [super targetForAction:a1 withSender:v15];
  swift_unknownObjectRelease();
  if (v17)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
  }
  return sub_10052E248((uint64_t)&v19, (uint64_t)a3);
}

void sub_100718B54(double a1, double a2)
{
  uint64_t v5 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_floatingCursorHelper;
  uint64_t v6 = &qword_10171A000;
  if (!*(void *)(v2 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_floatingCursorHelper))
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    char v7 = (objc_class *)type metadata accessor for CRLFloatingCursor();
    uint64_t v8 = (char *)objc_allocWithZone(v7);
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakInit();
    *(void *)&v8[OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanFromKeyboard] = 0;
    uint64_t v9 = &v8[OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanLastKnownPoint];
    *(void *)uint64_t v9 = 0;
    *((void *)v9 + 1) = 0;
    v9[16] = 1;
    uint64_t v10 = OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_logger;
    uint64_t v11 = qword_10166EE60;
    swift_unknownObjectRetain();
    __n128 v12 = v8;
    if (v11 != -1) {
      swift_once();
    }
    uint64_t v13 = (void *)qword_10171A478;
    *(void *)&v8[v10] = qword_10171A478;
    swift_unknownObjectWeakAssign();
    swift_unknownObjectWeakAssign();
    id v14 = v13;

    v19.receiver = v12;
    v19.super_class = v7;
    [super init];
    uint64_t v6 = &qword_10171A000;
    swift_unknownObjectRelease();

    id v16 = *(void **)(v2 + v5);
    *(void *)(v2 + v5) = v15;
  }
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  id v17 = (id)v6[143];
  sub_100718D58(v2, a1, a2);
}

void sub_100718D58(uint64_t a1, double a2, double a3)
{
  uint64_t v6 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v6
    || (id v7 = [v6 textSelectionDelegate]) == 0
    || (uint64_t v8 = (char *)[v7 selectionViewController],
        swift_unknownObjectRelease(),
        !v8)
    || (uint64_t v9 = *(void **)&v8[OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView],
        id v10 = v9,
        v8,
        !v9))
  {
    id v10 = (id)sub_100719690();
  }
  uint64_t v11 = (void *)sub_100719690();
  [v10 convertPoint:v11 toCoordinateSpace:a2];
  double v13 = v12;
  double v15 = v14;

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v17 = Strong;
    [Strong convertBoundsToUnscaledPoint:v13, v15];
    double v19 = v18;
    double v21 = v20;

    id v22 = *(char **)(a1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_floatingCursorHelper);
    if (v22)
    {
      id v24 = *(id *)&v22[OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_logger];
      BOOL v23 = v22;
      sub_100DE3454((uint64_t)v23, v19, v21);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100718F50(uint64_t a1, double a2, double a3)
{
  uint64_t v6 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v6
    || (id v7 = [v6 textSelectionDelegate]) == 0
    || (uint64_t v8 = (char *)[v7 selectionViewController],
        swift_unknownObjectRelease(),
        !v8)
    || (uint64_t v9 = *(void **)&v8[OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView],
        id v10 = v9,
        v8,
        !v9))
  {
    id v10 = (id)sub_100719690();
  }
  uint64_t v11 = (void *)sub_100719690();
  [v10 convertPoint:v11 toCoordinateSpace:a2, a3];
  double v13 = v12;
  double v15 = v14;

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v17 = Strong;
    [Strong convertBoundsToUnscaledPoint:v13, v15];
    double v19 = v18;
    double v21 = v20;

    id v22 = *(char **)(a1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_floatingCursorHelper);
    if (v22)
    {
      id v24 = *(id *)&v22[OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_logger];
      BOOL v23 = v22;
      sub_100DE36C4((uint64_t)v23, v19, v21);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100719190()
{
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_10171A478;
  uint64_t v2 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_floatingCursorHelper;
  NSArray v3 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_floatingCursorHelper);
  if (v3)
  {
    id v4 = *(void **)&v3[OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_logger];
    id v5 = (id)qword_10171A478;
    id v6 = v4;
    id v7 = v3;
    sub_100DE382C((uint64_t)v7);

    id v9 = *(id *)(v0 + v2);
  }
  else
  {
    id v8 = (id)qword_10171A478;
    id v9 = 0;
  }
  *(void *)(v0 + v2) = 0;
}

double sub_1007192B8(double a1, double a2, double a3, double a4)
{
  return sub_100719348((SEL *)&selRef_convertRect_toCoordinateSpace_, a1, a2, a3, a4);
}

double sub_1007192DC(double a1, double a2)
{
  return sub_100719508((SEL *)&selRef_convertPoint_toCoordinateSpace_, a1, a2);
}

double sub_10071933C(double a1, double a2, double a3, double a4)
{
  return sub_100719348((SEL *)&selRef_convertRect_fromCoordinateSpace_, a1, a2, a3, a4);
}

double sub_100719348(SEL *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v11 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v11
    || (id v12 = [v11 textSelectionDelegate]) == 0
    || (double v13 = (char *)[v12 selectionViewController],
        swift_unknownObjectRelease(),
        !v13)
    || (double v14 = *(void **)&v13[OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView],
        id v15 = v14,
        v13,
        !v14))
  {
    id v15 = (id)sub_100719690();
  }
  id v16 = (void *)sub_100719690();
  [v15 *a1:v16 a2:a3 a4:a4 a5:a5];
  double v18 = v17;

  return v18;
}

double sub_100719478(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, double (*a7)(double, double, double, double))
{
  id v12 = a1;
  double v13 = a7(a2, a3, a4, a5);

  return v13;
}

double sub_1007194FC(double a1, double a2)
{
  return sub_100719508((SEL *)&selRef_convertPoint_fromCoordinateSpace_, a1, a2);
}

double sub_100719508(SEL *a1, double a2, double a3)
{
  id v7 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v7
    || (id v8 = [v7 textSelectionDelegate]) == 0
    || (id v9 = (char *)[v8 selectionViewController],
        swift_unknownObjectRelease(),
        !v9)
    || (id v10 = *(void **)&v9[OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView],
        id v11 = v10,
        v9,
        !v10))
  {
    id v11 = (id)sub_100719690();
  }
  id v12 = (void *)sub_100719690();
  [v11 *a1:v12 a2:a3];
  double v14 = v13;

  return v14;
}

uint64_t sub_100719690()
{
  id v1 = v0;
  do
  {
    self;
    if (swift_dynamicCastObjCClass()) {
      goto LABEL_9;
    }
    id v2 = [v1 nextResponder];

    if (!v2)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"topFirstResponderView", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2, 1059, (uint64_t)"FLOATING CURSOR: Next responder can't find a view.", 50, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"topFirstResponderView", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2, 1059);
      id v1 = 0;
LABEL_9:
      id v4 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];

      return (uint64_t)v4;
    }
    self;
    id v1 = v2;
  }
  while (!swift_dynamicCastObjCClass());
  self;

  return swift_dynamicCastObjCClassUnconditional();
}

uint64_t sub_100719878()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (v1)
  {
    id v2 = [v1 textSelectionDelegate];
    if (v2)
    {
      uint64_t v3 = (char *)[v2 selectionViewController];
      swift_unknownObjectRelease();
      if (v3)
      {
        id v4 = *(void **)&v3[OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView];
        id v5 = v4;

        if (v4) {
          return (uint64_t)v5;
        }
      }
    }
  }

  return sub_100719690();
}

uint64_t sub_100719930()
{
  id v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  id v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask;
  if (*(void *)&v0[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask])
  {
    swift_retain();
    sub_1005057FC(&qword_101672BD0);
    Task.cancel()();
    swift_release();
  }
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  type metadata accessor for MainActor();
  id v8 = v0;
  uint64_t v9 = static MainActor.shared.getter();
  id v10 = (void *)swift_allocObject();
  _OWORD v10[2] = v9;
  void v10[3] = &protocol witness table for MainActor;
  v10[4] = v8;
  *(void *)&v1[v6] = sub_1006D9138((uint64_t)v5, (uint64_t)&unk_10167C8A8, (uint64_t)v10);
  return swift_release();
}

id sub_100719BC0()
{
  return sub_10071A1FC(type metadata accessor for CRLTextInputResponder);
}

uint64_t type metadata accessor for CRLTextInputResponder()
{
  return self;
}

uint64_t sub_100719D58(void *a1, unint64_t a2, uint64_t a3)
{
  type metadata accessor for CRLTextPosition();
  uint64_t v6 = swift_dynamicCastClass();
  if (!v6) {
    return 1;
  }
  uint64_t v7 = v6;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 1;
  }
  uint64_t v9 = (void *)Strong;
  uint64_t v10 = *(void *)(Strong + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  swift_unknownObjectRetain();
  id v11 = a1;

  if (!v10)
  {

    return 1;
  }
  type metadata accessor for CRLWPEditor();
  uint64_t v12 = swift_dynamicCastClass();
  if (!v12)
  {

    swift_unknownObjectRelease();
    return 1;
  }
  id v13 = [*(id *)(v12 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper) isCharIndex:*(void *)(v7 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location) withEolAffinity:*(void *)(v7 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity) == 1 atBoundary:sub_10071B554(a2) inDirection:a3];

  swift_unknownObjectRelease();
  return (uint64_t)v13;
}

id sub_100719EEC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (objc_class *)type metadata accessor for CRLTextPosition();
  uint64_t v8 = swift_dynamicCastClass();
  if (!v8) {
    return 0;
  }
  uint64_t v9 = v8;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  id v11 = (void *)Strong;
  uint64_t v12 = *(void *)(Strong + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  swift_unknownObjectRetain();
  id v13 = a1;

  if (!v12)
  {
LABEL_10:

    return 0;
  }
  type metadata accessor for CRLWPEditor();
  uint64_t v14 = swift_dynamicCastClass();
  if (!v14)
  {
    swift_unknownObjectRelease();
    goto LABEL_10;
  }
  if (a2 != 4)
  {
    v22.receiver = v3;
    v22.super_class = (Class)type metadata accessor for CRLTextInputResponder.CRLWPInputStringTokenizer();
    id v16 = [super positionFromPosition:v9 toBoundary:a2 inDirection:a3];
    swift_unknownObjectRelease();

    return v16;
  }
  unint64_t v21 = 0xBFF0000000000000;
  id v15 = [*(id *)(v14 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper) charIndexByMovingPosition:v9 toBoundary:4 inDirection:a3 preferPosition:&v21];
  if (v15 == (id)NSNotFound.getter())
  {

    swift_unknownObjectRelease();
    return 0;
  }
  if (static UITextDirection.storage(_:)() == a3 || static UITextDirection.layout(_:)() == a3)
  {
    uint64_t v17 = 1;
  }
  else if (static UITextDirection.layout(_:)() == a3 || static UITextDirection.layout(_:)() == a3)
  {
    uint64_t v17 = *(void *)(v9 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity);
  }
  else
  {
    uint64_t v17 = 0;
  }
  double v18 = (char *)objc_allocWithZone(v7);
  *(void *)&v18[OBJC_IVAR____TtC8Freeform15CRLTextPosition_insertionEdge] = 0;
  *(void *)&v18[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location] = v15;
  *(void *)&v18[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity] = v17;
  v20.receiver = v18;
  v20.super_class = v7;
  id v16 = [super init];

  swift_unknownObjectRelease();
  return v16;
}

id sub_10071A1E4()
{
  return sub_10071A1FC(type metadata accessor for CRLTextInputResponder.CRLWPInputStringTokenizer);
}

id sub_10071A1FC(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLTextInputResponder.CRLWPInputStringTokenizer()
{
  return self;
}

void sub_10071A26C()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputLogger);
  uint64_t v3 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_ignoreKeyboard) = 1;
  uint64_t v4 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate;
  id v5 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_inputDelegate);
  id v6 = v2;
  if (v5) {
    [v5 textWillChange:v0];
  }
  *(unsigned char *)(v0 + v3) = 0;

  uint64_t v7 = *(void **)(v0 + v1);
  *(unsigned char *)(v0 + v3) = 1;
  uint64_t v8 = *(void **)(v0 + v4);
  id v10 = v7;
  id v9 = v7;
  if (v8) {
    [v8 textDidChange:v0];
  }
  *(unsigned char *)(v0 + v3) = 0;
}

uint64_t sub_10071A344(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor);
  if (!v3) {
    return -1;
  }
  id v4 = [v3 textInputReceiver];
  if (!v4) {
    return -1;
  }
  id v5 = v4;
  type metadata accessor for CRLTextPosition();
  uint64_t v6 = swift_dynamicCastClass();
  if (!v6)
  {
    swift_unknownObjectRelease();
    return -1;
  }
  uint64_t v7 = v6;
  id v8 = a1;
  id v9 = [v5 baseWritingDirectionFor:v7];
  if (v9 == (id)1)
  {
    swift_unknownObjectRelease();

    return 1;
  }
  else
  {
    if (v9)
    {
      if (v9 != (id)-1)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"asNSWritingDirection", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 39, (uint64_t)"Unknown direction.", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"asNSWritingDirection", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 39);
      }
      swift_unknownObjectRelease();

      return -1;
    }
    swift_unknownObjectRelease();

    return 0;
  }
}

uint64_t sub_10071A4C8()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v1 = self;
  id v2 = [v1 keyCommandWithInput:v0 modifierFlags:0x80000 action:"deleteWordBackward"];

  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 keyCommandWithInput:v3 modifierFlags:0x80000 action:"deleteWordForward"];

  [v2 setWantsPriorityOverSystemBehavior:1];
  [v4 setWantsPriorityOverSystemBehavior:1];
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10117DF50;
  *(void *)(v5 + 32) = v2;
  *(void *)(v5 + 40) = v4;
  uint64_t v7 = v5;
  specialized Array._endMutation()();
  return v7;
}

double *sub_10071A5FC()
{
  swift_bridgeObjectRetain();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v1 = self;
  id v2 = [v1 keyCommandWithInput:v0 modifierFlags:0 action:"arrowKeyInputReceivedFrom:"];

  [v2 setWantsPriorityOverSystemBehavior:1];
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [v1 keyCommandWithInput:v3 modifierFlags:0x20000 action:"arrowKeyInputReceivedFrom:"];

  [v4 setWantsPriorityOverSystemBehavior:1];
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [v1 keyCommandWithInput:v5 modifierFlags:0x100000 action:"arrowKeyInputReceivedFrom:"];

  [v6 setWantsPriorityOverSystemBehavior:1];
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [v1 keyCommandWithInput:v7 modifierFlags:0x80000 action:"arrowKeyInputReceivedFrom:"];

  [v8 setWantsPriorityOverSystemBehavior:1];
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [v1 keyCommandWithInput:v9 modifierFlags:0x40000 action:"arrowKeyInputReceivedFrom:"];

  [v10 setWantsPriorityOverSystemBehavior:1];
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [v1 keyCommandWithInput:v11 modifierFlags:655360 action:"arrowKeyInputReceivedFrom:"];

  [v12 setWantsPriorityOverSystemBehavior:1];
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [v1 keyCommandWithInput:v13 modifierFlags:1179648 action:"arrowKeyInputReceivedFrom:"];

  [v14 setWantsPriorityOverSystemBehavior:1];
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v16 = [v1 keyCommandWithInput:v15 modifierFlags:1572864 action:"arrowKeyInputReceivedFrom:"];

  [v16 setWantsPriorityOverSystemBehavior:1];
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v18 = [v1 keyCommandWithInput:v17 modifierFlags:786432 action:"arrowKeyInputReceivedFrom:"];

  [v18 setWantsPriorityOverSystemBehavior:1];
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v20 = [v1 keyCommandWithInput:v19 modifierFlags:1310720 action:"arrowKeyInputReceivedFrom:"];

  [v20 setWantsPriorityOverSystemBehavior:1];
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v22 = [v1 keyCommandWithInput:v21 modifierFlags:1703936 action:"arrowKeyInputReceivedFrom:"];

  [v22 setWantsPriorityOverSystemBehavior:1];
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v24 = [v1 keyCommandWithInput:v23 modifierFlags:917504 action:"arrowKeyInputReceivedFrom:"];

  [v24 setWantsPriorityOverSystemBehavior:1];
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v26 = [v1 keyCommandWithInput:v25 modifierFlags:1441792 action:"arrowKeyInputReceivedFrom:"];

  [v26 setWantsPriorityOverSystemBehavior:1];
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v28 = [v1 keyCommandWithInput:v27 modifierFlags:1835008 action:"arrowKeyInputReceivedFrom:"];

  [v28 setWantsPriorityOverSystemBehavior:1];
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRetain();
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v30 = [v1 keyCommandWithInput:v29 modifierFlags:1966080 action:"arrowKeyInputReceivedFrom:"];

  [v30 setWantsPriorityOverSystemBehavior:1];
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return _swiftEmptyArrayStorage;
}

double *sub_10071B04C()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRetain();
  NSString v0 = sub_10071A5FC();
  swift_bridgeObjectRelease();
  sub_1006E2FC8((unint64_t)v0);
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_10071A5FC();
  swift_bridgeObjectRelease();
  sub_1006E2FC8((unint64_t)v1);
  swift_bridgeObjectRetain();
  id v2 = sub_10071A5FC();
  swift_bridgeObjectRelease();
  sub_1006E2FC8((unint64_t)v2);
  swift_bridgeObjectRetain();
  NSString v3 = sub_10071A5FC();
  swift_bridgeObjectRelease();
  sub_1006E2FC8((unint64_t)v3);
  swift_arrayDestroy();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10071B1D0(void *a1)
{
  id v1 = [a1 input];
  if (!v1)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    goto LABEL_10;
  }
  id v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!v5)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if (v6 == v3 && v5 == v7)
  {
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v9)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v3 && v5 == v12)
  {
    uint64_t v10 = 2;
    swift_bridgeObjectRelease_n();
    return v10;
  }
  char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v14)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v3 && v5 == v15)
  {
    swift_bridgeObjectRelease_n();
    return 4;
  }
  char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v16)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v3 && v5 == v17)
  {
    swift_bridgeObjectRelease_n();
    return 3;
  }
  char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v18) {
    return 3;
  }
LABEL_11:
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"keyInputDirection(from:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2, 924, (uint64_t)"Unknown key direction.", 22, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"keyInputDirection(from:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2, 924);
  return 0;
}

uint64_t sub_10071B554(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >= 6)
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = &type metadata for Int;
    *(void *)(inited + 64) = &protocol witness table for Int;
    *(void *)(inited + 32) = v1;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(from:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2, 1209, (uint64_t)"New UITextGranularity available: %d", 35, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"init(from:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLTextInputResponder.swift", 87, 2, 1209);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    return 3;
  }
  return v1;
}

uint64_t sub_10071B68C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528488;
  return sub_100711C58(a1, v4, v5, v6);
}

uint64_t sub_10071B744(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528488;
  return sub_100712774(a1, v4, v5, v6);
}

uint64_t sub_10071B7FC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100711C58(a1, v4, v5, v6);
}

uint64_t sub_10071B8B0()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10071B8E8(uint64_t a1, unsigned char *a2)
{
  return sub_100717490(a1, a2, v2);
}

uint64_t sub_10071B8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10071B900()
{
  return swift_release();
}

uint64_t *sub_10071B908(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = type metadata accessor for CRLSELibraryViewModel.Item(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v25 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
      uint64_t v26 = sub_1005057FC((uint64_t *)&unk_10168D400);
      uint64_t v27 = *(int *)(v26 + 48);
      id v28 = (uint64_t *)((char *)a1 + v27);
      NSString v29 = (uint64_t *)((char *)a2 + v27);
      uint64_t v30 = v29[1];
      *id v28 = *v29;
      v28[1] = v30;
      uint64_t v31 = *(int *)(v26 + 64);
      __dst = (char *)a1 + v31;
      id v20 = (char *)a2 + v31;
      uint64_t v21 = type metadata accessor for Date();
      uint64_t v22 = *(void *)(v21 - 8);
      id v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      swift_bridgeObjectRetain();
      if (v32(v20, 1, v21))
      {
LABEL_8:
        uint64_t v33 = sub_1005057FC(&qword_101672EB0);
        memcpy(__dst, v20, *(void *)(*(void *)(v33 - 8) + 64));
LABEL_11:
        swift_storeEnumTagMultiPayload();
        goto LABEL_12;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 2)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_12:
        *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
        swift_bridgeObjectRetain();
        return a1;
      }
      uint64_t v9 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      uint64_t v10 = *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20);
      NSString v11 = (uint64_t *)((char *)a1 + v10);
      uint64_t v12 = (uint64_t *)((char *)a2 + v10);
      uint64_t v13 = v12[1];
      *NSString v11 = *v12;
      v11[1] = v13;
      swift_bridgeObjectRetain();
      char v14 = (int *)sub_1005057FC((uint64_t *)&unk_10169B720);
      uint64_t v15 = v14[12];
      char v16 = (uint64_t *)((char *)a1 + v15);
      uint64_t v17 = (uint64_t *)((char *)a2 + v15);
      uint64_t v18 = v17[1];
      *char v16 = *v17;
      v16[1] = v18;
      *((unsigned char *)a1 + v14[16]) = *((unsigned char *)a2 + v14[16]);
      uint64_t v19 = v14[20];
      __dst = (char *)a1 + v19;
      id v20 = (char *)a2 + v19;
      uint64_t v21 = type metadata accessor for Date();
      uint64_t v22 = *(void *)(v21 - 8);
      NSString v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      swift_bridgeObjectRetain();
      if (v23(v20, 1, v21)) {
        goto LABEL_8;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
    goto LABEL_11;
  }
  uint64_t v24 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t type metadata accessor for CRLSELibraryViewModel.Item(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10167CB90);
}

uint64_t type metadata accessor for CRLSEBoardIdentifierStorage(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10167CAE8);
}

uint64_t sub_10071BD1C(uint64_t a1)
{
  type metadata accessor for CRLSELibraryViewModel.Item(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v6 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    uint64_t v7 = sub_1005057FC((uint64_t *)&unk_10168D400);
    swift_bridgeObjectRelease();
    uint64_t v5 = *(int *)(v7 + 64);
  }
  else
  {
    if (EnumCaseMultiPayload != 2) {
      goto LABEL_7;
    }
    uint64_t v3 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    type metadata accessor for CRLSEBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1005057FC((uint64_t *)&unk_10169B720);
    swift_bridgeObjectRelease();
    uint64_t v5 = *(int *)(v4 + 80);
  }
  uint64_t v8 = a1 + v5;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
LABEL_7:

  return swift_bridgeObjectRelease();
}

unsigned char *sub_10071BED8(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v25 = type metadata accessor for UUID();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
    uint64_t v26 = sub_1005057FC((uint64_t *)&unk_10168D400);
    uint64_t v27 = *(int *)(v26 + 48);
    id v28 = &a1[v27];
    NSString v29 = &a2[v27];
    uint64_t v30 = v29[1];
    *id v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = *(int *)(v26 + 64);
    id v32 = &a1[v31];
    uint64_t v33 = &a2[v31];
    uint64_t v34 = type metadata accessor for Date();
    uint64_t v35 = *(void *)(v34 - 8);
    id v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
    swift_bridgeObjectRetain();
    if (v36(v33, 1, v34))
    {
      uint64_t v37 = sub_1005057FC(&qword_101672EB0);
      memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 2)
  {
    uint64_t v39 = a3;
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    uint64_t v9 = *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20);
    uint64_t v10 = &a1[v9];
    NSString v11 = &a2[v9];
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain();
    uint64_t v13 = (int *)sub_1005057FC((uint64_t *)&unk_10169B720);
    uint64_t v14 = v13[12];
    uint64_t v15 = &a1[v14];
    char v16 = &a2[v14];
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    a1[v13[16]] = a2[v13[16]];
    uint64_t v18 = v13[20];
    uint64_t v19 = &a1[v18];
    id v20 = &a2[v18];
    uint64_t v21 = type metadata accessor for Date();
    uint64_t v22 = *(void *)(v21 - 8);
    NSString v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    swift_bridgeObjectRetain();
    if (v23(v20, 1, v21))
    {
      uint64_t v24 = sub_1005057FC(&qword_101672EB0);
      memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    a3 = v39;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *sub_10071C260(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100722820((uint64_t)a1, type metadata accessor for CRLSELibraryViewModel.Item);
    uint64_t v6 = type metadata accessor for CRLSELibraryViewModel.Item(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v21 = type metadata accessor for UUID();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
      uint64_t v22 = sub_1005057FC((uint64_t *)&unk_10168D400);
      uint64_t v23 = *(int *)(v22 + 48);
      uint64_t v24 = &a1[v23];
      uint64_t v25 = &a2[v23];
      *uint64_t v24 = *v25;
      v24[1] = v25[1];
      uint64_t v26 = *(int *)(v22 + 64);
      __dst = &a1[v26];
      uint64_t v17 = &a2[v26];
      uint64_t v18 = type metadata accessor for Date();
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
      swift_bridgeObjectRetain();
      if (v27(v17, 1, v18))
      {
LABEL_7:
        uint64_t v28 = sub_1005057FC(&qword_101672EB0);
        memcpy(__dst, v17, *(void *)(*(void *)(v28 - 8) + 64));
LABEL_10:
        swift_storeEnumTagMultiPayload();
        goto LABEL_11;
      }
LABEL_9:
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
      goto LABEL_10;
    }
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = type metadata accessor for UUID();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20);
      uint64_t v10 = &a1[v9];
      NSString v11 = &a2[v9];
      *uint64_t v10 = *v11;
      v10[1] = v11[1];
      swift_bridgeObjectRetain();
      uint64_t v12 = (int *)sub_1005057FC((uint64_t *)&unk_10169B720);
      uint64_t v13 = v12[12];
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      *uint64_t v14 = *v15;
      v14[1] = v15[1];
      a1[v12[16]] = a2[v12[16]];
      uint64_t v16 = v12[20];
      __dst = &a1[v16];
      uint64_t v17 = &a2[v16];
      uint64_t v18 = type metadata accessor for Date();
      uint64_t v19 = *(void *)(v18 - 8);
      id v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
      swift_bridgeObjectRetain();
      if (v20(v17, 1, v18)) {
        goto LABEL_7;
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
LABEL_11:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *sub_10071C62C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v16 = type metadata accessor for UUID();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
    uint64_t v17 = sub_1005057FC((uint64_t *)&unk_10168D400);
    *(_OWORD *)&a1[*(int *)(v17 + 48)] = *(_OWORD *)&a2[*(int *)(v17 + 48)];
    uint64_t v18 = *(int *)(v17 + 64);
    uint64_t v12 = &a1[v18];
    uint64_t v13 = &a2[v18];
    uint64_t v14 = type metadata accessor for Date();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
LABEL_6:
      uint64_t v19 = sub_1005057FC(&qword_101672EB0);
      memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
LABEL_9:
      swift_storeEnumTagMultiPayload();
      goto LABEL_10;
    }
LABEL_8:
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    uint64_t v9 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
    *(_OWORD *)&a1[*(int *)(v9 + 20)] = *(_OWORD *)&a2[*(int *)(v9 + 20)];
    uint64_t v10 = (int *)sub_1005057FC((uint64_t *)&unk_10169B720);
    *(_OWORD *)&a1[v10[12]] = *(_OWORD *)&a2[v10[12]];
    a1[v10[16]] = a2[v10[16]];
    uint64_t v11 = v10[20];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v14 = type metadata accessor for Date();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
      goto LABEL_6;
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_10:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

unsigned char *sub_10071C960(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100722820((uint64_t)a1, type metadata accessor for CRLSELibraryViewModel.Item);
    uint64_t v6 = type metadata accessor for CRLSELibraryViewModel.Item(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v16 = type metadata accessor for UUID();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
      uint64_t v17 = sub_1005057FC((uint64_t *)&unk_10168D400);
      *(_OWORD *)&a1[*(int *)(v17 + 48)] = *(_OWORD *)&a2[*(int *)(v17 + 48)];
      uint64_t v18 = *(int *)(v17 + 64);
      uint64_t v12 = &a1[v18];
      uint64_t v13 = &a2[v18];
      uint64_t v14 = type metadata accessor for Date();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
LABEL_7:
        uint64_t v19 = sub_1005057FC(&qword_101672EB0);
        memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
LABEL_10:
        swift_storeEnumTagMultiPayload();
        goto LABEL_11;
      }
LABEL_9:
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_10;
    }
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = type metadata accessor for UUID();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      uint64_t v9 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
      *(_OWORD *)&a1[*(int *)(v9 + 20)] = *(_OWORD *)&a2[*(int *)(v9 + 20)];
      uint64_t v10 = (int *)sub_1005057FC((uint64_t *)&unk_10169B720);
      *(_OWORD *)&a1[v10[12]] = *(_OWORD *)&a2[v10[12]];
      a1[v10[16]] = a2[v10[16]];
      uint64_t v11 = v10[20];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = type metadata accessor for Date();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
        goto LABEL_7;
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
LABEL_11:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10071CCC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10071CCD4);
}

uint64_t sub_10071CCD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10071CD94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10071CDA8);
}

uint64_t sub_10071CDA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for CRLSELibraryViewModel.Item(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CRLSELibraryViewModeItemNode(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10167C9C8);
}

uint64_t sub_10071CE84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10071D8A0(a1, a2, a3, type metadata accessor for CRLSELibraryViewModel.Item);
}

uint64_t *sub_10071CEA8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(v6 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    unint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10071CF88(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for CRLSEBoardIdentifierStorage(0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10071D004(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  uint64_t v8 = v7[1];
  *uint64_t v6 = *v7;
  v6[1] = v8;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10071D088(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  *uint64_t v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10071D120(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
  *(_OWORD *)(a1 + *(int *)(v5 + 20)) = *(_OWORD *)(a2 + *(int *)(v5 + 20));
  return a1;
}

uint64_t sub_10071D198(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (uint64_t *)(a2 + v5);
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  *uint64_t v6 = v9;
  v6[1] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10071D220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10071D234);
}

uint64_t sub_10071D234(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10071D2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10071D2B4);
}

uint64_t sub_10071D2B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CRLSEBoardIdentifier(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10167CA58);
}

uint64_t sub_10071D344()
{
  uint64_t result = type metadata accessor for CRLSEBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10071D3D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    unint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10071D4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10071D530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10071D5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10071D648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10071D6D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10071D6E8);
}

uint64_t sub_10071D6E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10071D7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10071D7C0);
}

uint64_t sub_10071D7C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10071D880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10071D8A0(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_10071D8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_10071D934(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v25 = type metadata accessor for UUID();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
      uint64_t v26 = sub_1005057FC((uint64_t *)&unk_10168D400);
      uint64_t v27 = *(int *)(v26 + 48);
      uint64_t v28 = (void *)((char *)a1 + v27);
      NSString v29 = (void *)((char *)a2 + v27);
      uint64_t v30 = v29[1];
      *uint64_t v28 = *v29;
      v28[1] = v30;
      uint64_t v31 = *(int *)(v26 + 64);
      uint64_t v19 = (char *)a1 + v31;
      id v20 = (char *)a2 + v31;
      uint64_t v21 = type metadata accessor for Date();
      uint64_t v22 = *(void *)(v21 - 8);
      id v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      swift_bridgeObjectRetain();
      if (v32(v20, 1, v21))
      {
LABEL_8:
        uint64_t v33 = sub_1005057FC(&qword_101672EB0);
        memcpy(v19, v20, *(void *)(*(void *)(v33 - 8) + 64));
LABEL_11:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_10:
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_11;
    }
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = type metadata accessor for UUID();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20);
      unint64_t v10 = (void *)((char *)a1 + v9);
      uint64_t v11 = (void *)((char *)a2 + v9);
      uint64_t v12 = v11[1];
      *unint64_t v10 = *v11;
      v10[1] = v12;
      swift_bridgeObjectRetain();
      uint64_t v13 = (int *)sub_1005057FC((uint64_t *)&unk_10169B720);
      uint64_t v14 = v13[12];
      uint64_t v15 = (void *)((char *)a1 + v14);
      uint64_t v16 = (void *)((char *)a2 + v14);
      uint64_t v17 = v16[1];
      *uint64_t v15 = *v16;
      v15[1] = v17;
      *((unsigned char *)a1 + v13[16]) = *((unsigned char *)a2 + v13[16]);
      uint64_t v18 = v13[20];
      uint64_t v19 = (char *)a1 + v18;
      id v20 = (char *)a2 + v18;
      uint64_t v21 = type metadata accessor for Date();
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      swift_bridgeObjectRetain();
      if (v23(v20, 1, v21)) {
        goto LABEL_8;
      }
      goto LABEL_10;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t sub_10071DCC8(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 3)
  {
    uint64_t v6 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    uint64_t v7 = sub_1005057FC((uint64_t *)&unk_10168D400);
    swift_bridgeObjectRelease();
    uint64_t v5 = *(int *)(v7 + 64);
  }
  else
  {
    if (result != 2) {
      return result;
    }
    uint64_t v3 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    type metadata accessor for CRLSEBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1005057FC((uint64_t *)&unk_10169B720);
    swift_bridgeObjectRelease();
    uint64_t v5 = *(int *)(v4 + 80);
  }
  uint64_t v8 = a1 + v5;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v9);
  if (!result)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v8, v9);
  }
  return result;
}

unsigned char *sub_10071DE70(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v23 = type metadata accessor for UUID();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
    uint64_t v24 = sub_1005057FC((uint64_t *)&unk_10168D400);
    uint64_t v25 = *(int *)(v24 + 48);
    uint64_t v26 = &a1[v25];
    uint64_t v27 = &a2[v25];
    uint64_t v28 = v27[1];
    void *v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = *(int *)(v24 + 64);
    uint64_t v18 = &a1[v29];
    uint64_t v19 = &a2[v29];
    uint64_t v20 = type metadata accessor for Date();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    swift_bridgeObjectRetain();
    if (v30(v19, 1, v20))
    {
LABEL_6:
      uint64_t v31 = sub_1005057FC(&qword_101672EB0);
      memcpy(v18, v19, *(void *)(*(void *)(v31 - 8) + 64));
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
LABEL_8:
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20);
    uint64_t v9 = &a1[v8];
    unint64_t v10 = &a2[v8];
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
    uint64_t v12 = (int *)sub_1005057FC((uint64_t *)&unk_10169B720);
    uint64_t v13 = v12[12];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    a1[v12[16]] = a2[v12[16]];
    uint64_t v17 = v12[20];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = type metadata accessor for Date();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    swift_bridgeObjectRetain();
    if (v22(v19, 1, v20)) {
      goto LABEL_6;
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

unsigned char *sub_10071E1C0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100722820((uint64_t)a1, type metadata accessor for CRLSELibraryViewModel.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v21 = type metadata accessor for UUID();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
      uint64_t v22 = sub_1005057FC((uint64_t *)&unk_10168D400);
      uint64_t v23 = *(int *)(v22 + 48);
      uint64_t v24 = &a1[v23];
      uint64_t v25 = &a2[v23];
      *uint64_t v24 = *v25;
      v24[1] = v25[1];
      uint64_t v26 = *(int *)(v22 + 64);
      uint64_t v16 = &a1[v26];
      uint64_t v17 = &a2[v26];
      uint64_t v18 = type metadata accessor for Date();
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
      swift_bridgeObjectRetain();
      if (v27(v17, 1, v18))
      {
LABEL_7:
        uint64_t v28 = sub_1005057FC(&qword_101672EB0);
        memcpy(v16, v17, *(void *)(*(void *)(v28 - 8) + 64));
LABEL_10:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_9:
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_10;
    }
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20);
      uint64_t v9 = &a1[v8];
      unint64_t v10 = &a2[v8];
      *uint64_t v9 = *v10;
      v9[1] = v10[1];
      swift_bridgeObjectRetain();
      uint64_t v11 = (int *)sub_1005057FC((uint64_t *)&unk_10169B720);
      uint64_t v12 = v11[12];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      *uint64_t v13 = *v14;
      v13[1] = v14[1];
      a1[v11[16]] = a2[v11[16]];
      uint64_t v15 = v11[20];
      uint64_t v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      uint64_t v18 = type metadata accessor for Date();
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
      swift_bridgeObjectRetain();
      if (v20(v17, 1, v18)) {
        goto LABEL_7;
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *sub_10071E54C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v15 = type metadata accessor for UUID();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_10168D400);
    *(_OWORD *)&a1[*(int *)(v16 + 48)] = *(_OWORD *)&a2[*(int *)(v16 + 48)];
    uint64_t v17 = *(int *)(v16 + 64);
    uint64_t v11 = &a1[v17];
    uint64_t v12 = &a2[v17];
    uint64_t v13 = type metadata accessor for Date();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
LABEL_6:
      uint64_t v18 = sub_1005057FC(&qword_101672EB0);
      memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
LABEL_8:
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
    *(_OWORD *)&a1[*(int *)(v8 + 20)] = *(_OWORD *)&a2[*(int *)(v8 + 20)];
    uint64_t v9 = (int *)sub_1005057FC((uint64_t *)&unk_10169B720);
    *(_OWORD *)&a1[v9[12]] = *(_OWORD *)&a2[v9[12]];
    a1[v9[16]] = a2[v9[16]];
    uint64_t v10 = v9[20];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = type metadata accessor for Date();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      goto LABEL_6;
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

unsigned char *sub_10071E860(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100722820((uint64_t)a1, type metadata accessor for CRLSELibraryViewModel.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v15 = type metadata accessor for UUID();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
      uint64_t v16 = sub_1005057FC((uint64_t *)&unk_10168D400);
      *(_OWORD *)&a1[*(int *)(v16 + 48)] = *(_OWORD *)&a2[*(int *)(v16 + 48)];
      uint64_t v17 = *(int *)(v16 + 64);
      uint64_t v11 = &a1[v17];
      uint64_t v12 = &a2[v17];
      uint64_t v13 = type metadata accessor for Date();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
LABEL_7:
        uint64_t v18 = sub_1005057FC(&qword_101672EB0);
        memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
LABEL_10:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_9:
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_10;
    }
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
      *(_OWORD *)&a1[*(int *)(v8 + 20)] = *(_OWORD *)&a2[*(int *)(v8 + 20)];
      uint64_t v9 = (int *)sub_1005057FC((uint64_t *)&unk_10169B720);
      *(_OWORD *)&a1[v9[12]] = *(_OWORD *)&a2[v9[12]];
      a1[v9[16]] = a2[v9[16]];
      uint64_t v10 = v9[20];
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      uint64_t v13 = type metadata accessor for Date();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
        goto LABEL_7;
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_10071EB98()
{
  uint64_t v7 = &unk_10118A1C0;
  uint64_t v8 = &unk_10118A1D8;
  uint64_t v0 = type metadata accessor for CRLSEBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    v5[4] = *(void *)(v0 - 8) + 64;
    v5[5] = &unk_10118A1A0;
    v5[6] = &unk_10118A1F0;
    sub_1005E873C();
    if (v3 <= 0x3F)
    {
      v5[7] = *(void *)(v2 - 8) + 64;
      swift_getTupleTypeLayout();
      uint64_t v9 = &v6;
      type metadata accessor for UUID();
      if (v4 <= 0x3F)
      {
        swift_getTupleTypeLayout3();
        uint64_t v10 = v5;
        swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

uint64_t sub_10071ECFC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_10167CC00);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_1007227CC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v13 = 0;
  type metadata accessor for CRLSELibraryViewModel.Item(0);
  sub_100722784(&qword_10168D3E0, (void (*)(uint64_t))type metadata accessor for CRLSELibraryViewModel.Item);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v12 = *(void *)(v3 + *(int *)(type metadata accessor for CRLSELibraryViewModeItemNode(0) + 20));
    v11[15] = 1;
    sub_1005057FC((uint64_t *)&unk_10168D410);
    sub_100722880((unint64_t *)&qword_10167CC08, &qword_10168D420);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_10071EF0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10167CBD8);
  uint64_t v24 = *(void *)(v8 - 8);
  uint64_t v25 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLSELibraryViewModeItemNode(0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(int *)(v16 + 28);
  *(void *)&v15[v26] = _swiftEmptyArrayStorage;
  sub_10050F848(a1, a1[3]);
  sub_1007227CC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = v24;
    char v29 = 0;
    sub_100722784(&qword_10167CBE8, (void (*)(uint64_t))type metadata accessor for CRLSELibraryViewModel.Item);
    uint64_t v18 = v25;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_100723D50((uint64_t)v7, (uint64_t)v15, type metadata accessor for CRLSELibraryViewModel.Item);
    sub_1005057FC((uint64_t *)&unk_10168D410);
    char v28 = 1;
    sub_100722880(&qword_10167CBF0, &qword_10167CBF8);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v18);
    uint64_t v20 = v26;
    uint64_t v19 = v27;
    swift_bridgeObjectRelease();
    *(void *)&v15[v20] = v19;
    sub_100723CE8((uint64_t)v15, v23, type metadata accessor for CRLSELibraryViewModeItemNode);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    return sub_100722820((uint64_t)v15, type metadata accessor for CRLSELibraryViewModeItemNode);
  }
}

uint64_t sub_10071F290(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_10167CC50);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_100723E0C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v9[15] = 0;
  type metadata accessor for UUID();
  sub_100722784(&qword_101671E70, (void (*)(uint64_t))&type metadata accessor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for CRLSEBoardIdentifierStorage(0);
    v9[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_10071F448@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1005057FC(&qword_10167CC40);
  uint64_t v27 = *(void *)(v30 - 8);
  __chkstk_darwin(v30, v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100723E0C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  uint64_t v25 = v14;
  uint64_t v15 = v27;
  uint64_t v16 = v28;
  char v32 = 0;
  sub_100722784(&qword_101671E58, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v17 = v29;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v25, v7, v17);
  char v31 = 1;
  uint64_t v18 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v30);
  uint64_t v22 = (uint64_t)v25;
  uint64_t v21 = v26;
  uint64_t v23 = (uint64_t *)&v25[*(int *)(v11 + 20)];
  *uint64_t v23 = v18;
  v23[1] = v20;
  sub_100723CE8(v22, v21, type metadata accessor for CRLSEBoardIdentifierStorage);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return sub_100722820(v22, type metadata accessor for CRLSEBoardIdentifierStorage);
}

uint64_t sub_10071F79C()
{
  if (*v0) {
    return 0x6E6572646C696863;
  }
  else {
    return 1835365481;
  }
}

uint64_t sub_10071F7D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100724E24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10071F7F8(uint64_t a1)
{
  unint64_t v2 = sub_1007227CC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10071F834(uint64_t a1)
{
  unint64_t v2 = sub_1007227CC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10071F870@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10071EF0C(a1, a2);
}

uint64_t sub_10071F888(void *a1)
{
  return sub_10071ECFC(a1);
}

uint64_t sub_10071F8A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_100723608(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a2 + v6);

  return sub_1005B8234(v7, v8);
}

uint64_t sub_10071F908()
{
  if (*v0) {
    return 0x6D614E72656E776FLL;
  }
  else {
    return 0x4955556472616F62;
  }
}

uint64_t sub_10071F94C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100724F08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10071F974(uint64_t a1)
{
  unint64_t v2 = sub_100723E0C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10071F9B0(uint64_t a1)
{
  unint64_t v2 = sub_100723E0C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10071F9EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10071F448(a1, a2);
}

uint64_t sub_10071FA04(void *a1)
{
  return sub_10071F290(a1);
}

uint64_t sub_10071FA1C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  uint64_t v4 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
  __chkstk_darwin(v4, v5);
  uint64_t v18 = (uint64_t)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_10167CC18);
  uint64_t v17 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLSEBoardIdentifier(0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100723DB8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v2)
  {
    sub_100722784(&qword_10167CC28, (void (*)(uint64_t))type metadata accessor for CRLSEBoardIdentifierStorage);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v7);
    sub_100723D50(v18, (uint64_t)v14, type metadata accessor for CRLSEBoardIdentifierStorage);
    sub_100723D50((uint64_t)v14, v16, type metadata accessor for CRLSEBoardIdentifier);
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
}

uint64_t sub_10071FC84()
{
  return 0x656761726F7473;
}

uint64_t sub_10071FC9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656761726F7473 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_10071FD34(uint64_t a1)
{
  unint64_t v2 = sub_100723DB8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10071FD70(uint64_t a1)
{
  unint64_t v2 = sub_100723DB8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10071FDAC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10071FA1C(a1, a2);
}

uint64_t sub_10071FDC4(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10167CC30);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100723DB8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for CRLSEBoardIdentifierStorage(0);
  sub_100722784(&qword_10167CC38, (void (*)(uint64_t))type metadata accessor for CRLSEBoardIdentifierStorage);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

Swift::Int sub_10071FF3C()
{
  return Hasher._finalize()();
}

uint64_t sub_10071FFF8()
{
  type metadata accessor for UUID();
  sub_100722784((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for CRLSEBoardIdentifierStorage(0);
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1007200B0()
{
  return Hasher._finalize()();
}

void sub_100720168()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLSEBoardIdentifier(0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (unsigned __int8 *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100723CE8(v1, (uint64_t)v14, type metadata accessor for CRLSELibraryViewModel.Item);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v15 = sub_1005057FC((uint64_t *)&unk_10169B720);
      swift_bridgeObjectRelease();
      uint64_t v16 = &v14[*(int *)(v15 + 80)];
      sub_100723D50((uint64_t)v14, (uint64_t)v10, type metadata accessor for CRLSEBoardIdentifier);
      sub_100722784((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
      dispatch thunk of Hashable.hash(into:)();
      type metadata accessor for CRLSEBoardIdentifierStorage(0);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      sub_100722820((uint64_t)v10, type metadata accessor for CRLSEBoardIdentifier);
      uint64_t v17 = (uint64_t)v16;
      goto LABEL_5;
    case 3u:
      uint64_t v18 = sub_1005057FC((uint64_t *)&unk_10168D400);
      swift_bridgeObjectRelease();
      uint64_t v19 = &v14[*(int *)(v18 + 64)];
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v3 + 32))(v6, v14, v2);
      sub_100722784((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
      dispatch thunk of Hashable.hash(into:)();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      uint64_t v17 = (uint64_t)v19;
LABEL_5:
      sub_100522F00(v17, &qword_101672EB0);
      break;
    default:
      Hasher._combine(_:)(*v14);
      break;
  }
}

uint64_t sub_1007204C4(void *a1)
{
  uint64_t v79 = sub_1005057FC(&qword_10167CCC0);
  uint64_t v70 = *(void *)(v79 - 8);
  __chkstk_darwin(v79, v2);
  BOOL v78 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v82 = *(void *)(v4 - 8);
  uint64_t v83 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v81 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1005057FC(&qword_10167CCC8);
  uint64_t v69 = *(void *)(v77 - 8);
  __chkstk_darwin(v77, v7);
  int64_t v75 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v84 = (uint64_t)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v80 = (uint64_t)&v68 - v14;
  uint64_t v74 = type metadata accessor for CRLSEBoardIdentifier(0);
  __chkstk_darwin(v74, v15);
  uint64_t v76 = (uint64_t)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC(&qword_10167CCD0);
  uint64_t v72 = *(void *)(v17 - 8);
  uint64_t v73 = v17;
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1005057FC(&qword_10167CCD8);
  uint64_t v71 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  __chkstk_darwin(v25, v26);
  uint64_t v28 = (char *)&v68 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1005057FC(&qword_10167CCE0);
  uint64_t v85 = *(void *)(v89 - 8);
  __chkstk_darwin(v89, v29);
  char v31 = (char *)&v68 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100723E60();
  uint64_t v88 = v31;
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_100723CE8(v87, (uint64_t)v28, type metadata accessor for CRLSELibraryViewModel.Item);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v36 = *v28;
      char v93 = 1;
      sub_100723F5C();
      id v38 = v88;
      uint64_t v37 = v89;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      char v92 = v36;
      sub_100724114();
      uint64_t v39 = v73;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v20, v39);
      goto LABEL_9;
    case 2u:
      uint64_t v40 = (int *)sub_1005057FC((uint64_t *)&unk_10169B720);
      uint64_t v87 = *(void *)&v28[v40[12]];
      LODWORD(v84) = v28[v40[16]];
      uint64_t v41 = (uint64_t)&v28[v40[20]];
      uint64_t v42 = v76;
      sub_100723D50((uint64_t)v28, v76, type metadata accessor for CRLSEBoardIdentifier);
      uint64_t v43 = v80;
      sub_1007240AC(v41, v80);
      char v98 = 2;
      sub_100723F08();
      uint64_t v44 = v75;
      id v38 = v88;
      uint64_t v37 = v89;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      char v97 = 0;
      sub_100722784(&qword_10167CCE8, (void (*)(uint64_t))type metadata accessor for CRLSEBoardIdentifier);
      uint64_t v45 = v77;
      uint64_t v46 = v86;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      if (v46)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v69 + 8))(v44, v45);
        sub_100522F00(v43, &qword_101672EB0);
        sub_100722820(v42, type metadata accessor for CRLSEBoardIdentifier);
LABEL_9:
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v38, v37);
      }
      else
      {
        char v96 = 1;
        KeyedEncodingContainer.encode(_:forKey:)();
        swift_bridgeObjectRelease();
        char v95 = 2;
        KeyedEncodingContainer.encode(_:forKey:)();
        uint64_t v61 = v80;
        char v94 = 3;
        type metadata accessor for Date();
        sub_100722784(&qword_101691F80, (void (*)(uint64_t))&type metadata accessor for Date);
        KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
        (*(void (**)(char *, uint64_t))(v69 + 8))(v44, v45);
        sub_100522F00(v61, &qword_101672EB0);
        sub_100722820(v42, type metadata accessor for CRLSEBoardIdentifier);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v38, v37);
      }
      break;
    case 3u:
      uint64_t v47 = sub_1005057FC((uint64_t *)&unk_10168D400);
      uint64_t v48 = (uint64_t *)&v28[*(int *)(v47 + 48)];
      uint64_t v50 = *v48;
      uint64_t v49 = v48[1];
      uint64_t v80 = v50;
      uint64_t v87 = v49;
      uint64_t v51 = (uint64_t)&v28[*(int *)(v47 + 64)];
      uint64_t v53 = v81;
      uint64_t v52 = v82;
      uint64_t v54 = v83;
      (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v81, v28, v83);
      sub_1007240AC(v51, v84);
      char v102 = 3;
      sub_100723EB4();
      uint64_t v55 = v78;
      uint64_t v57 = v88;
      uint64_t v56 = v89;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      char v101 = 0;
      sub_100722784(&qword_101671E70, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v58 = v79;
      uint64_t v59 = v86;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      if (v59)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v70 + 8))(v55, v58);
        sub_100522F00(v84, &qword_101672EB0);
        (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v57, v56);
      }
      else
      {
        char v100 = 1;
        uint64_t v60 = v55;
        KeyedEncodingContainer.encode(_:forKey:)();
        swift_bridgeObjectRelease();
        char v99 = 2;
        type metadata accessor for Date();
        sub_100722784(&qword_101691F80, (void (*)(uint64_t))&type metadata accessor for Date);
        uint64_t v62 = v84;
        KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
        uint64_t v64 = v88;
        uint64_t v63 = v89;
        uint64_t v66 = v82;
        uint64_t v65 = v83;
        id v67 = v81;
        (*(void (**)(char *, uint64_t))(v70 + 8))(v60, v58);
        sub_100522F00(v62, &qword_101672EB0);
        (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v65);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v64, v63);
      }
      break;
    default:
      char v32 = *v28;
      char v91 = 0;
      sub_100724004();
      uint64_t v34 = v88;
      uint64_t v33 = v89;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      char v90 = v32;
      sub_100724168();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v24, v21);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v34, v33);
      break;
  }
  return result;
}

uint64_t sub_100721048@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v91 = a2;
  uint64_t v84 = sub_1005057FC(&qword_10167CC58);
  uint64_t v78 = *(void *)(v84 - 8);
  __chkstk_darwin(v84, v3);
  char v90 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_1005057FC(&qword_10167CC60);
  uint64_t v83 = *(void *)(v92 - 8);
  __chkstk_darwin(v92, v5);
  uint64_t v89 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_10167CC68);
  uint64_t v81 = *(void *)(v7 - 8);
  uint64_t v82 = v7;
  __chkstk_darwin(v7, v8);
  uint64_t v86 = (uint64_t *)((char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1005057FC(&qword_10167CC70);
  uint64_t v79 = *(void *)(v10 - 8);
  uint64_t v80 = v10;
  __chkstk_darwin(v10, v11);
  uint64_t v85 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1005057FC(&qword_10167CC78);
  uint64_t v88 = *(void *)(v93 - 8);
  __chkstk_darwin(v93, v13);
  uint64_t v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  __chkstk_darwin(v87, v16);
  uint64_t v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v74 - v21;
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v74 - v25;
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v74 - v29;
  __chkstk_darwin(v31, v32);
  uint64_t v34 = (char *)&v74 - v33;
  uint64_t v35 = a1[3];
  char v94 = a1;
  sub_10050F848(a1, v35);
  sub_100723E60();
  char v36 = v95;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v36) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v94);
  }
  uint64_t v74 = v30;
  int64_t v75 = v26;
  uint64_t v76 = v34;
  uint64_t v77 = v18;
  char v95 = v22;
  uint64_t v37 = v89;
  id v38 = v90;
  uint64_t v39 = v91;
  uint64_t v40 = v93;
  uint64_t v41 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v42 = v41;
  if (*(void *)(v41 + 16) != 1)
  {
    uint64_t v47 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v49 = v48;
    sub_1005057FC(&qword_1016771E0);
    *uint64_t v49 = v87;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v47 - 8) + 104))(v49, enum case for DecodingError.typeMismatch(_:), v47);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v15, v40);
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v94);
  }
  switch(*(unsigned char *)(v41 + 32))
  {
    case 1:
      uint64_t v43 = v39;
      char v99 = 1;
      sub_100723F5C();
      uint64_t v50 = (char *)v86;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      sub_100723FB0();
      uint64_t v51 = v82;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v50, v51);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v88 + 8))(v15, v40);
      uint64_t v46 = (uint64_t)v75;
      *int64_t v75 = v98;
      goto LABEL_7;
    case 2:
      char v104 = 2;
      sub_100723F08();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      type metadata accessor for CRLSEBoardIdentifier(0);
      char v103 = 0;
      sub_100722784(&qword_10167CC98, (void (*)(uint64_t))type metadata accessor for CRLSEBoardIdentifier);
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v56 = v88;
      char v102 = 1;
      uint64_t v61 = KeyedDecodingContainer.decode(_:forKey:)();
      uint64_t v63 = v62;
      char v90 = (char *)sub_1005057FC((uint64_t *)&unk_10169B720);
      uint64_t v64 = (uint64_t *)&v95[*((int *)v90 + 12)];
      *uint64_t v64 = v61;
      v64[1] = v63;
      char v101 = 2;
      char v65 = KeyedDecodingContainer.decode(_:forKey:)();
      uint64_t v86 = v64;
      uint64_t v72 = (uint64_t)v95;
      v95[*((int *)v90 + 16)] = v65 & 1;
      type metadata accessor for Date();
      char v100 = 3;
      sub_100722784(&qword_101679BE8, (void (*)(uint64_t))&type metadata accessor for Date);
      KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v37, v92);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v15, v93);
      swift_storeEnumTagMultiPayload();
      uint64_t v52 = (uint64_t)v76;
      sub_100723D50(v72, (uint64_t)v76, type metadata accessor for CRLSELibraryViewModel.Item);
      uint64_t v53 = (uint64_t)v94;
      goto LABEL_12;
    case 3:
      char v108 = 3;
      sub_100723EB4();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      char v95 = (char *)v42;
      type metadata accessor for UUID();
      char v107 = 0;
      sub_100722784(&qword_101671E58, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v57 = v38;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v58 = v88;
      char v106 = 1;
      uint64_t v59 = KeyedDecodingContainer.decode(_:forKey:)();
      uint64_t v60 = v78;
      uint64_t v66 = v59;
      uint64_t v68 = v67;
      uint64_t v69 = sub_1005057FC((uint64_t *)&unk_10168D400);
      uint64_t v70 = (uint64_t *)&v77[*(int *)(v69 + 48)];
      uint64_t v89 = (char *)v70;
      uint64_t v92 = (uint64_t)&v77[*(int *)(v69 + 64)];
      *uint64_t v70 = v66;
      v70[1] = v68;
      type metadata accessor for Date();
      char v105 = 2;
      sub_100722784(&qword_101679BE8, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v71 = v84;
      KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v57, v71);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v15, v93);
      uint64_t v73 = (uint64_t)v77;
      swift_storeEnumTagMultiPayload();
      uint64_t v52 = (uint64_t)v76;
      sub_100723D50(v73, (uint64_t)v76, type metadata accessor for CRLSELibraryViewModel.Item);
      uint64_t v53 = (uint64_t)v94;
LABEL_12:
      uint64_t v54 = v39;
      break;
    default:
      uint64_t v43 = v39;
      char v97 = 0;
      sub_100724004();
      uint64_t v44 = v85;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      sub_100724058();
      uint64_t v45 = v80;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v44, v45);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v88 + 8))(v15, v40);
      uint64_t v46 = (uint64_t)v74;
      *uint64_t v74 = v96;
LABEL_7:
      swift_storeEnumTagMultiPayload();
      uint64_t v52 = (uint64_t)v76;
      sub_100723D50(v46, (uint64_t)v76, type metadata accessor for CRLSELibraryViewModel.Item);
      uint64_t v53 = (uint64_t)v94;
      uint64_t v54 = v43;
      break;
  }
  sub_100723D50(v52, v54, type metadata accessor for CRLSELibraryViewModel.Item);
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v53);
}

uint64_t sub_100721E7C(void *a1, int a2)
{
  int v28 = a2;
  uint64_t v3 = sub_1005057FC(&qword_10167CEA0);
  uint64_t v26 = *(void *)(v3 - 8);
  uint64_t v27 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v25 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_10167CEA8);
  uint64_t v23 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_10167CEB0);
  uint64_t v22 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_10167CEB8);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100726764();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if ((_BYTE)v28)
  {
    if (v28 == 1)
    {
      char v30 = 1;
      sub_10072680C();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
    }
    else
    {
      char v31 = 2;
      sub_1007267B8();
      uint64_t v19 = v25;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v19, v27);
    }
  }
  else
  {
    char v29 = 0;
    sub_100726860();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v10);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}