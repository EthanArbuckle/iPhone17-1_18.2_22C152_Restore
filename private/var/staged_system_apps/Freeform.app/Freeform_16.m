void sub_100DA5AAC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  Swift::Int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  unsigned int v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  uint64_t v56;
  id v57;
  id v58;
  id v59;
  id v60;
  char *v61;
  void *v62;
  id v63;
  char v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  unsigned int v72;
  unsigned int v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unsigned int v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  void (*v88)(char *, uint64_t);
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  char v93;
  char *v94;
  uint64_t v95;
  unsigned int v96;
  void *v97;
  void *v98;
  char *v99;
  void *v100;
  void *v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  char *v107;
  char *v108;
  char v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  id v116;
  id v117;
  id v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char v123;
  void *v124;
  id v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  id v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  id v143;
  void *v144;
  void *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  long long v151;
  uint64_t v152;
  _OWORD *v153;
  _OWORD *v154;
  long long v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  id v161;
  id v162;
  id v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void *v169;
  id v170;
  uint64_t v171;
  void *v172;
  void *v173;
  uint64_t v174;
  unsigned __int8 v175;
  uint64_t v176;
  uint64_t v177;
  long long *v178;
  uint64_t v179;
  uint64_t v180;
  unsigned int v181;
  unint64_t v182;
  unsigned int v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  unint64_t v187;
  uint64_t v188;
  unsigned int v189;
  void *v190;
  void *v191;
  uint64_t v192;
  char *v193;
  char *v194;
  char *v195;
  uint64_t v196;
  char *v197;
  void (*v198)(char *, uint64_t);
  uint64_t v199;
  char *v200;
  void *v201;
  void *v202;
  void *v203;
  void *v204;
  void *v205;
  uint64_t v206;
  void *v207;
  id v208;
  char *v209;
  id v210;
  id v211;
  id v212;
  uint64_t v213;
  void *v214;
  void *v215;
  char v217;
  char *v218;
  int v219;
  uint64_t v220;
  uint64_t v221;
  unsigned __int8 v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  id v226;
  id v227;
  id v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char v233;
  void *v234;
  id v235;
  unsigned __int8 v236;
  uint64_t v237;
  id v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  id v244;
  void *v245;
  uint64_t v246;
  id v247;
  unsigned __int8 v248;
  void *v249;
  uint64_t v250;
  uint64_t v251;
  char v252;
  long long v253;
  long long v254;
  void *v255;
  id v256;
  void *v257;
  uint64_t v258;
  unsigned __int8 v259;
  void *v260;
  uint64_t v261;
  void *v262;
  id v263;
  id v264;
  uint64_t v265;
  unsigned __int8 v266;
  unsigned __int8 v267;
  unint64_t v268;
  unint64_t v269;
  double *v270;
  uint64_t *v271;
  uint64_t v272;
  unint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  char v277;
  double *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  BOOL v284;
  unint64_t v285;
  double *v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  double *v291;
  uint64_t v292;
  uint64_t v293;
  BOOL v294;
  uint64_t v295;
  char v296;
  double *v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  BOOL v301;
  uint64_t v302;
  uint64_t v303;
  double *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  double *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  unint64_t v312;
  double *v313;
  uint64_t v314;
  double *v315;
  uint64_t v316;
  double *v317;
  double v318;
  unint64_t v319;
  char v320;
  void *v321;
  unsigned __int8 v322;
  void *v323;
  void *v324;
  uint64_t v325;
  void *v326;
  id v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  void *v333;
  uint64_t v334;
  unsigned __int8 v335;
  void *v336;
  uint64_t v337;
  uint64_t v338;
  unint64_t v339;
  double *v340;
  double *v341;
  double v342;
  double v343;
  double *v344;
  unint64_t v345;
  uint64_t v346;
  uint64_t v347;
  double *v348;
  double *v349;
  uint64_t *v350;
  Swift::Int v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  NSString *v357;
  long long *v358;
  void (**v359)(char *, uint64_t);
  void (**v360)(char *, uint64_t);
  void (**v361)(char *, uint64_t);
  void (**v362)(char *, void, uint64_t);
  unsigned int v363;
  char *v364;
  uint64_t v365;
  char *v366;
  char *v367;
  uint64_t v368;
  char *v369;
  uint64_t v370;
  void **v371;
  id v372;
  void *v373;
  char *v374;
  id v375;
  id v376;
  uint64_t v377;
  uint64_t v378;
  id v379;
  void *v380;
  void *v381;
  void *v382;
  id v383;

  v2 = v1;
  v370 = type metadata accessor for Calendar.Component();
  v4 = *(void *)(v370 - 8);
  __chkstk_darwin(v370, v5);
  v369 = (char *)&v346 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v368 = type metadata accessor for Date();
  v7 = *(void *)(v368 - 8);
  v9 = __chkstk_darwin(v368, v8);
  v367 = (char *)&v346 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  v366 = (char *)&v346 - v12;
  v365 = type metadata accessor for Calendar();
  v13 = *(void *)(v365 - 8);
  __chkstk_darwin(v365, v14);
  v364 = (char *)&v346 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[1];
  v17 = _minimumMergeRunLength(_:)(v16);
  if (v17 >= v16)
  {
    if (v16 < 0) {
      goto LABEL_309;
    }
    if (v16) {
      sub_100DA8A20(0, v16, 1, a1);
    }
    return;
  }
  if (v16 >= 0) {
    v18 = v16;
  }
  else {
    v18 = v16 + 1;
  }
  if (v16 < -1) {
    goto LABEL_317;
  }
  v350 = a1;
  v355 = v16;
  v351 = v17;
  if (v16 < 2)
  {
    v21 = _swiftEmptyArrayStorage;
    v371 = (void **)&_swiftEmptyArrayStorage[4];
    v349 = _swiftEmptyArrayStorage;
    if (v16 != 1)
    {
      v26 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_275:
      if (v26 >= 2)
      {
        v338 = *v350;
        do
        {
          v339 = v26 - 2;
          if (v26 < 2) {
            goto LABEL_304;
          }
          if (!v338) {
            goto LABEL_316;
          }
          v340 = v21;
          v341 = v21 + 4;
          v342 = v21[2 * v339 + 4];
          v343 = v21[2 * v26 + 3];
          sub_100DAB880((void **)(v338 + 32 * *(void *)&v342), (void **)(v338 + 32 * *(void *)&v341[2 * v26 - 2]), v338 + 32 * *(void *)&v343, v371);
          if (v2) {
            break;
          }
          if (*(uint64_t *)&v343 < *(uint64_t *)&v342) {
            goto LABEL_305;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v340 = sub_100F69F28((uint64_t)v340);
          }
          if (v339 >= *((void *)v340 + 2)) {
            goto LABEL_306;
          }
          v344 = &v340[2 * v339 + 4];
          *v344 = v342;
          v344[1] = v343;
          v345 = *((void *)v340 + 2);
          if (v26 > v345) {
            goto LABEL_307;
          }
          v21 = v340;
          memmove(&v340[2 * v26 + 2], &v340[2 * v26 + 4], 16 * (v345 - v26));
          *((void *)v340 + 2) = v345 - 1;
          v26 = v345 - 1;
        }
        while (v345 > 2);
      }
LABEL_286:
      swift_bridgeObjectRelease();
      v349[2] = 0.0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v19 = v18 >> 1;
    v20 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v20 + 16) = v19;
    v349 = (double *)v20;
    v371 = (void **)(v20 + 32);
  }
  v22 = 0;
  v23 = *v350;
  v357 = CKCurrentUserDefaultName;
  v363 = enum case for Calendar.Component.day(_:);
  v362 = (void (**)(char *, void, uint64_t))(v4 + 104);
  v361 = (void (**)(char *, uint64_t))(v4 + 8);
  v360 = (void (**)(char *, uint64_t))(v7 + 8);
  v24 = v23;
  v359 = (void (**)(char *, uint64_t))(v13 + 8);
  v21 = _swiftEmptyArrayStorage;
  v347 = v23 + 16;
  v25 = v355;
  v378 = v23;
  while (1)
  {
    v27 = v22 + 1;
    if (v22 + 1 >= v25) {
      goto LABEL_143;
    }
    v352 = v2;
    v28 = v22 + 1;
    v29 = v24 + 32 * v27;
    v30 = *(unsigned __int8 *)(v29 + 24);
    v31 = v30 >> 6;
    if (!(v30 >> 6)) {
      goto LABEL_50;
    }
    v33 = *(void *)v29;
    v32 = *(void *)(v29 + 8);
    v34 = *(void *)(v29 + 16);
    v35 = v24 + 32 * v22;
    v36 = *(void *)v35;
    v37 = *(void *)(v35 + 8);
    v38 = *(void *)(v35 + 16);
    v39 = *(unsigned __int8 *)(v35 + 24);
    if (v31 != 2)
    {
      if (v31 != 1)
      {
        if (v39 < 0x40) {
          goto LABEL_37;
        }
        v50 = 1;
        if (!(v34 | v32 | v33) && v30 == 192) {
          goto LABEL_51;
        }
LABEL_32:
        if (v39 >= 0xC0)
        {
          if (!(v38 | v37 | v36) && v39 == 192)
          {
            sub_10053BB6C(0, 0, 0, 0xC0u);
            v50 = 0;
            goto LABEL_51;
          }
          if (v39 == 192 && v36 == 1 && !(v38 | v37))
          {
            v50 = 1;
            sub_10053BB6C((id)1, 0, 0, 0xC0u);
            goto LABEL_51;
          }
        }
        if (!v50 || v30 != 192 || v33 != 1 || v34 | v32)
        {
LABEL_50:
          v50 = 1;
          goto LABEL_51;
        }
LABEL_37:
        v50 = 0;
        goto LABEL_51;
      }
      if ((v39 & 0xC0) == 0x40)
      {
        v382 = (void *)v33;
        v383 = (id)v32;
        v380 = (void *)v34;
        LODWORD(v381) = v30;
        v40 = v38;
        sub_10053BB6C((id)v33, (id)v32, v34, v30);
        sub_10053BB6C((id)v36, (id)v37, v40, v39);
        v354 = v22;
        v41 = v364;
        static Calendar.current.getter();
        v42 = v366;
        Date.init(timeIntervalSinceReferenceDate:)();
        v43 = v367;
        Date.init(timeIntervalSinceReferenceDate:)();
        v45 = v369;
        v44 = v370;
        (*v362)(v369, v363, v370);
        v46 = Calendar.compare(_:to:toGranularity:)();
        (*v361)(v45, v44);
        v47 = *v360;
        v48 = v368;
        (*v360)(v43, v368);
        v47(v42, v48);
        v24 = v378;
        v49 = v41;
        v22 = v354;
        (*v359)(v49, v365);
        sub_10053BBA0(v382, v383, (uint64_t)v380, v381);
        v50 = v46 == -1;
        goto LABEL_51;
      }
LABEL_31:
      v50 = 0;
      if (v39 >= 0x40) {
        goto LABEL_32;
      }
LABEL_51:
      v67 = v22 + 2;
      v25 = v355;
      v68 = v50;
      if (v22 + 2 < v355) {
        goto LABEL_52;
      }
LABEL_117:
      v27 = v67;
      v2 = v352;
      if ((v68 & 1) == 0) {
        goto LABEL_143;
      }
      if (v67 < v22) {
        goto LABEL_312;
      }
LABEL_119:
      if (v22 < v67) {
        goto LABEL_120;
      }
      goto LABEL_142;
    }
    if ((v39 & 0xC0) != 0x80) {
      goto LABEL_31;
    }
    if (!v33)
    {
      sub_10053BBA0(0, (id)v32, v34, v30);
      v50 = 0;
      goto LABEL_51;
    }
    if (!v36)
    {
      sub_10053BB6C(0, *(id *)(v35 + 8), *(void *)(v35 + 16), *(unsigned char *)(v35 + 24));
      v50 = 1;
      goto LABEL_51;
    }
    v348 = v21;
    v51 = v30;
    v52 = (void *)v34;
    v53 = (void *)v32;
    v379 = (id)v37;
    v377 = v38;
    v374 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    v376 = v54;
    v375 = *(id *)(v33 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
    sub_10053BB6C((id)v33, v53, (uint64_t)v52, v51);
    v55 = (void *)v37;
    v56 = v377;
    sub_10053BB6C((id)v36, v55, v377, v39);
    sub_10053BB6C((id)v33, v53, (uint64_t)v52, v51);
    sub_10053BB6C((id)v36, v379, v56, v39);
    v382 = (void *)v33;
    v383 = v53;
    v380 = v52;
    LODWORD(v381) = v51;
    sub_10053BB6C((id)v33, v53, (uint64_t)v52, v51);
    v57 = v379;
    sub_10053BB6C((id)v36, v379, v56, v39);
    v58 = [v375 userIdentity];
    v59 = [v58 userRecordID];

    if (v59)
    {
      v60 = [v59 recordName];

      v61 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      v63 = v62;

      if (v374 == v61 && v376 == v63)
      {
        swift_bridgeObjectRelease_n();
        v66 = v57;
LABEL_139:
        v169 = v382;
        v170 = v383;
        v171 = (uint64_t)v380;
        sub_10053BBA0(v382, v383, (uint64_t)v380, v381);
        v172 = (void *)v36;
        v173 = (void *)v36;
        v174 = v377;
        sub_10053BBA0(v172, v66, v377, v39);
        sub_10053BBA0(v173, v66, v174, v39);
        v175 = v381;
        sub_10053BBA0(v169, v170, v171, v381);
        sub_10053BBA0(v173, v379, v174, v39);
        sub_10053BBA0(v169, v170, v171, v175);
        v67 = v22 + 2;
        v25 = v355;
        if (v22 + 2 < v355)
        {
          v68 = 1;
          v21 = v348;
          goto LABEL_267;
        }
        v2 = v352;
        v21 = v348;
        v24 = v378;
        if (v22 < v67)
        {
LABEL_120:
          v147 = 32 * v67 - 32;
          v148 = 32 * v22;
          v149 = v67;
          v150 = v22;
          do
          {
            if (v150 != --v149)
            {
              if (!v24) {
                goto LABEL_315;
              }
              v153 = (_OWORD *)(v24 + v148);
              v154 = (_OWORD *)(v24 + v147);
              v155 = *(_OWORD *)(v24 + v148);
              v156 = *(void *)(v24 + v148 + 16);
              v157 = *(unsigned char *)(v24 + v148 + 24);
              if (v148 != v147 || v153 >= v154 + 2)
              {
                v151 = v154[1];
                *v153 = *v154;
                v153[1] = v151;
              }
              v152 = v24 + v147;
              *(_OWORD *)v152 = v155;
              *(void *)(v152 + 16) = v156;
              *(unsigned char *)(v152 + 24) = v157;
            }
            ++v150;
            v147 -= 32;
            v148 += 32;
          }
          while (v150 < v149);
        }
LABEL_142:
        v27 = v67;
        goto LABEL_143;
      }
      v65 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v66 = v57;
      if (v65) {
        goto LABEL_139;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      v66 = v57;
    }
    v158 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v160 = v159;
    v161 = [*(id *)(v36 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant) userIdentity];
    v162 = [v161 userRecordID];

    if (!v162)
    {
      swift_bridgeObjectRelease();
      v21 = v348;
LABEL_268:
      v329 = sub_100701F80();
      v331 = v330;
      if (v329 == sub_100701F80() && v331 == v332) {
        v50 = 0;
      }
      else {
        v50 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v373 = (void *)v36;
      sub_10053BBA0((void *)v36, v66, v377, v39);
      v333 = v382;
      v334 = (uint64_t)v380;
      v335 = v381;
      sub_10053BBA0(v382, v383, (uint64_t)v380, v381);
      v336 = (void *)v36;
      v337 = v377;
      sub_10053BBA0(v336, v379, v377, v39);
      sub_10053BBA0(v333, v383, v334, v335);
      sub_10053BBA0(v373, v379, v337, v39);
      sub_10053BBA0(v333, v383, v334, v335);
      v24 = v378;
      goto LABEL_51;
    }
    v163 = [v162 recordName];

    v164 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v165 = v160;
    v166 = v158;
    v168 = v167;

    if (v166 == v164 && v165 == v168)
    {
      swift_bridgeObjectRelease_n();
      v21 = v348;
      v66 = v379;
    }
    else
    {
      v320 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21 = v348;
      v66 = v379;
      if ((v320 & 1) == 0) {
        goto LABEL_268;
      }
    }
    v321 = v382;
    v322 = v381;
    sub_10053BBA0(v382, v383, (uint64_t)v380, v381);
    v323 = (void *)v36;
    v324 = (void *)v36;
    v325 = v377;
    sub_10053BBA0(v323, v66, v377, v39);
    sub_10053BBA0(v324, v66, v325, v39);
    v326 = v321;
    v327 = v383;
    v328 = (uint64_t)v380;
    sub_10053BBA0(v326, v383, (uint64_t)v380, v322);
    sub_10053BBA0(v324, v379, v325, v39);
    sub_10053BBA0(v382, v327, v328, v322);
    v67 = v22 + 2;
    v25 = v355;
    if (v22 + 2 < v355) {
      break;
    }
    v27 = v22 + 2;
    v2 = v352;
    v24 = v378;
LABEL_143:
    v377 = v27;
    if (v27 >= v25) {
      goto LABEL_215;
    }
    v284 = __OFSUB__(v27, v22);
    v176 = v27 - v22;
    if (v284) {
      goto LABEL_308;
    }
    if (v176 >= v351) {
      goto LABEL_215;
    }
    if (__OFADD__(v22, v351)) {
      goto LABEL_310;
    }
    if (v22 + v351 >= v25) {
      v177 = v25;
    }
    else {
      v177 = v22 + v351;
    }
    if (v177 < v22)
    {
LABEL_311:
      __break(1u);
      goto LABEL_312;
    }
    if (v377 == v177) {
      goto LABEL_215;
    }
    v348 = v21;
    v352 = v2;
    v178 = (long long *)(v24 + 32 * v377);
    v179 = v377;
    v354 = v22;
    v353 = v177;
    while (2)
    {
      v358 = v178;
      v180 = v22;
      v377 = v179;
      while (1)
      {
        v181 = *((unsigned __int8 *)v178 + 24);
        v182 = *((void *)v178 - 4);
        v183 = v181 >> 6;
        if (!(v181 >> 6)) {
          goto LABEL_206;
        }
        v185 = *(void *)v178;
        v184 = *((void *)v178 + 1);
        v186 = *((void *)v178 + 2);
        v187 = *((void *)v178 - 3);
        v188 = *((void *)v178 - 2);
        v189 = *((unsigned __int8 *)v178 - 8);
        if (v183 != 2)
        {
          if (v183 == 1)
          {
            if ((v189 & 0xC0) == 0x40)
            {
              v379 = (id)*((void *)v178 + 1);
              v380 = (void *)v186;
              v381 = (void *)v185;
              v190 = (void *)v185;
              v191 = (void *)v187;
              v192 = v188;
              sub_10053BB6C(v190, (id)v184, v186, v181);
              sub_10053BB6C((id)v182, v191, v192, v189);
              v193 = v364;
              static Calendar.current.getter();
              v194 = v366;
              Date.init(timeIntervalSinceReferenceDate:)();
              LODWORD(v383) = v181;
              v195 = v367;
              Date.init(timeIntervalSinceReferenceDate:)();
              v197 = v369;
              v196 = v370;
              (*v362)(v369, v363, v370);
              v382 = (void *)Calendar.compare(_:to:toGranularity:)();
              (*v361)(v197, v196);
              v198 = *v360;
              v199 = v368;
              (*v360)(v195, v368);
              v198(v194, v199);
              v200 = v193;
              v179 = v377;
              v24 = v378;
              (*v359)(v200, v365);
              sub_10053BBA0(v381, v379, (uint64_t)v380, v383);
              if (v382 != (void *)-1) {
                goto LABEL_154;
              }
              goto LABEL_206;
            }
LABEL_172:
            if (v189 < 0x40) {
              goto LABEL_154;
            }
            v219 = 0;
          }
          else
          {
            if (v189 < 0x40) {
              goto LABEL_154;
            }
            v219 = 1;
            if (!(v186 | v184 | v185) && v181 == 192) {
              goto LABEL_206;
            }
          }
          if (v189 < 0xC0) {
            goto LABEL_320;
          }
          if (!(v188 | v187 | v182) && v189 == 192)
          {
            sub_10053BB6C(0, 0, 0, 0xC0u);
            goto LABEL_154;
          }
          if (v189 != 192 || v182 != 1 || v188 | v187)
          {
LABEL_320:
            if (v219 && v181 == 192 && v185 == 1 && !(v186 | v184)) {
              goto LABEL_154;
            }
            goto LABEL_206;
          }
          v220 = 1;
          v187 = 0;
          v221 = 0;
          v222 = -64;
LABEL_191:
          sub_10053BB6C((id)v220, (id)v187, v221, v222);
          goto LABEL_206;
        }
        if ((v189 & 0xC0) != 0x80) {
          goto LABEL_172;
        }
        if (!v185)
        {
          sub_10053BBA0(0, *((id *)v178 + 1), v186, *((unsigned char *)v178 + 24));
          goto LABEL_154;
        }
        if (!v182)
        {
          v220 = 0;
          v221 = *((void *)v178 - 2);
          v222 = *((unsigned char *)v178 - 8);
          goto LABEL_191;
        }
        v201 = (void *)*((void *)v178 + 1);
        v202 = (void *)*((void *)v178 + 2);
        v375 = (id)*((void *)v178 - 3);
        v376 = (id)v188;
        LODWORD(v382) = v189;
        v203 = (void *)v187;
        v356 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v373 = v204;
        v372 = *(id *)(v185 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
        sub_10053BB6C((id)v185, v201, (uint64_t)v202, v181);
        v374 = (char *)v182;
        v205 = v203;
        v206 = (uint64_t)v376;
        sub_10053BB6C((id)v182, v205, (uint64_t)v376, v382);
        sub_10053BB6C((id)v185, v201, (uint64_t)v202, v181);
        v207 = (void *)v182;
        v208 = v375;
        sub_10053BB6C(v207, v375, v206, v382);
        v380 = v202;
        v381 = (void *)v185;
        v379 = v201;
        LODWORD(v383) = v181;
        sub_10053BB6C((id)v185, v201, (uint64_t)v202, v181);
        v209 = v374;
        sub_10053BB6C(v374, v208, v206, v382);
        v210 = [v372 userIdentity];
        v211 = [v210 userRecordID];

        if (v211)
        {
          v212 = [v211 recordName];

          v213 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v215 = v214;

          if (v356 == v213 && v373 == v215)
          {
            swift_bridgeObjectRelease_n();
            v218 = v209;
LABEL_201:
            v234 = v381;
            v235 = v379;
            sub_10053BBA0(v381, v379, (uint64_t)v380, v383);
            v236 = v382;
            v238 = v375;
            v237 = (uint64_t)v376;
            sub_10053BBA0(v218, v375, (uint64_t)v376, v382);
            sub_10053BBA0(v218, v238, v237, v236);
            v239 = (uint64_t)v380;
            sub_10053BBA0(v234, v235, (uint64_t)v380, v383);
            sub_10053BBA0(v374, v238, v237, v236);
            sub_10053BBA0(v234, v235, v239, v383);
            v179 = v377;
            v24 = v378;
            goto LABEL_206;
          }
          v217 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v218 = v209;
          if (v217) {
            goto LABEL_201;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          v218 = v209;
        }
        v223 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v225 = v224;
        v226 = [*(id *)&v218[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant] userIdentity];
        v227 = [v226 userRecordID];

        if (v227) {
          break;
        }
        swift_bridgeObjectRelease();
LABEL_203:
        v240 = sub_100701F80();
        v242 = v241;
        if (v240 == sub_100701F80() && v242 == v243)
        {
          swift_bridgeObjectRelease_n();
          v255 = v218;
          v256 = v375;
          v257 = v218;
          v258 = (uint64_t)v376;
          v259 = v382;
          sub_10053BBA0(v255, v375, (uint64_t)v376, v382);
          v261 = (uint64_t)v380;
          v260 = v381;
          v262 = v381;
          v263 = v379;
          v264 = v379;
          v265 = (uint64_t)v380;
          v266 = v383;
          v267 = v383;
          goto LABEL_213;
        }
        LODWORD(v373) = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v244 = v375;
        sub_10053BBA0(v218, v375, (uint64_t)v376, v382);
        v246 = (uint64_t)v380;
        v245 = v381;
        v247 = v379;
        v248 = v383;
        sub_10053BBA0(v381, v379, (uint64_t)v380, v383);
        v249 = v218;
        v250 = (uint64_t)v376;
        sub_10053BBA0(v249, v244, (uint64_t)v376, v382);
        sub_10053BBA0(v245, v247, v246, v248);
        sub_10053BBA0(v374, v244, v250, v382);
        sub_10053BBA0(v245, v247, v246, v248);
        v179 = v377;
        v24 = v378;
        if ((v373 & 1) == 0) {
          goto LABEL_154;
        }
LABEL_206:
        if (!v24) {
          goto LABEL_313;
        }
        v251 = *((void *)v178 + 2);
        v252 = *((unsigned char *)v178 + 24);
        v253 = *v178;
        v254 = *(v178 - 1);
        *v178 = *(v178 - 2);
        v178[1] = v254;
        *((void *)v178 - 2) = v251;
        *((unsigned char *)v178 - 8) = v252;
        *(v178 - 2) = v253;
        v178 -= 2;
        if (v179 == ++v180) {
          goto LABEL_154;
        }
      }
      v228 = [v227 recordName];

      v229 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v231 = v230;

      if (v223 != v229 || v225 != v231)
      {
        v233 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v233) {
          goto LABEL_212;
        }
        goto LABEL_203;
      }
      swift_bridgeObjectRelease_n();
LABEL_212:
      v261 = (uint64_t)v380;
      v260 = v381;
      v263 = v379;
      v266 = v383;
      sub_10053BBA0(v381, v379, (uint64_t)v380, v383);
      v262 = v218;
      v259 = v382;
      v256 = v375;
      v264 = v375;
      v257 = v218;
      v258 = (uint64_t)v376;
      v265 = (uint64_t)v376;
      v267 = v382;
LABEL_213:
      sub_10053BBA0(v262, v264, v265, v267);
      sub_10053BBA0(v257, v256, v258, v259);
      sub_10053BBA0(v260, v263, v261, v266);
      sub_10053BBA0(v257, v256, v258, v259);
      sub_10053BBA0(v260, v263, v261, v266);
      v179 = v377;
      v24 = v378;
LABEL_154:
      ++v179;
      v178 = v358 + 2;
      v22 = v354;
      if (v179 != v353) {
        continue;
      }
      break;
    }
    v377 = v353;
    v2 = v352;
    v21 = v348;
LABEL_215:
    if (v377 < v22) {
      goto LABEL_303;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      v21 = sub_100F697E0(0, *((void *)v21 + 2) + 1, 1, (uint64_t)v21);
    }
    v269 = *((void *)v21 + 2);
    v268 = *((void *)v21 + 3);
    v26 = v269 + 1;
    if (v269 >= v268 >> 1) {
      v21 = sub_100F697E0((double *)(v268 > 1), v269 + 1, 1, (uint64_t)v21);
    }
    *((void *)v21 + 2) = v26;
    v270 = v21 + 4;
    v271 = (uint64_t *)&v21[2 * v269 + 4];
    v272 = v377;
    *v271 = v22;
    v271[1] = v272;
    if (v269)
    {
      v24 = v378;
      while (1)
      {
        v273 = v26 - 1;
        if (v26 >= 4)
        {
          v278 = &v270[2 * v26];
          v279 = *((void *)v278 - 8);
          v280 = *((void *)v278 - 7);
          v284 = __OFSUB__(v280, v279);
          v281 = v280 - v279;
          if (v284) {
            goto LABEL_292;
          }
          v283 = *((void *)v278 - 6);
          v282 = *((void *)v278 - 5);
          v284 = __OFSUB__(v282, v283);
          v276 = v282 - v283;
          v277 = v284;
          if (v284) {
            goto LABEL_293;
          }
          v285 = v26 - 2;
          v286 = &v270[2 * v26 - 4];
          v288 = *(void *)v286;
          v287 = *((void *)v286 + 1);
          v284 = __OFSUB__(v287, v288);
          v289 = v287 - v288;
          if (v284) {
            goto LABEL_295;
          }
          v284 = __OFADD__(v276, v289);
          v290 = v276 + v289;
          if (v284) {
            goto LABEL_298;
          }
          if (v290 >= v281)
          {
            v308 = &v270[2 * v273];
            v310 = *(void *)v308;
            v309 = *((void *)v308 + 1);
            v284 = __OFSUB__(v309, v310);
            v311 = v309 - v310;
            if (v284) {
              goto LABEL_302;
            }
            v301 = v276 < v311;
            goto LABEL_253;
          }
        }
        else
        {
          if (v26 != 3)
          {
            v302 = *((void *)v21 + 4);
            v303 = *((void *)v21 + 5);
            v284 = __OFSUB__(v303, v302);
            v295 = v303 - v302;
            v296 = v284;
            goto LABEL_247;
          }
          v275 = *((void *)v21 + 4);
          v274 = *((void *)v21 + 5);
          v284 = __OFSUB__(v274, v275);
          v276 = v274 - v275;
          v277 = v284;
        }
        if (v277) {
          goto LABEL_294;
        }
        v285 = v26 - 2;
        v291 = &v270[2 * v26 - 4];
        v293 = *(void *)v291;
        v292 = *((void *)v291 + 1);
        v294 = __OFSUB__(v292, v293);
        v295 = v292 - v293;
        v296 = v294;
        if (v294) {
          goto LABEL_297;
        }
        v297 = &v270[2 * v273];
        v299 = *(void *)v297;
        v298 = *((void *)v297 + 1);
        v284 = __OFSUB__(v298, v299);
        v300 = v298 - v299;
        if (v284) {
          goto LABEL_300;
        }
        if (__OFADD__(v295, v300)) {
          goto LABEL_301;
        }
        if (v295 + v300 >= v276)
        {
          v301 = v276 < v300;
LABEL_253:
          if (v301) {
            v273 = v285;
          }
          goto LABEL_255;
        }
LABEL_247:
        if (v296) {
          goto LABEL_296;
        }
        v304 = &v270[2 * v273];
        v306 = *(void *)v304;
        v305 = *((void *)v304 + 1);
        v284 = __OFSUB__(v305, v306);
        v307 = v305 - v306;
        if (v284) {
          goto LABEL_299;
        }
        if (v307 < v295) {
          goto LABEL_14;
        }
LABEL_255:
        v312 = v273 - 1;
        if (v273 - 1 >= v26)
        {
          __break(1u);
LABEL_289:
          __break(1u);
LABEL_290:
          __break(1u);
LABEL_291:
          __break(1u);
LABEL_292:
          __break(1u);
LABEL_293:
          __break(1u);
LABEL_294:
          __break(1u);
LABEL_295:
          __break(1u);
LABEL_296:
          __break(1u);
LABEL_297:
          __break(1u);
LABEL_298:
          __break(1u);
LABEL_299:
          __break(1u);
LABEL_300:
          __break(1u);
LABEL_301:
          __break(1u);
LABEL_302:
          __break(1u);
LABEL_303:
          __break(1u);
LABEL_304:
          __break(1u);
LABEL_305:
          __break(1u);
LABEL_306:
          __break(1u);
LABEL_307:
          __break(1u);
LABEL_308:
          __break(1u);
LABEL_309:
          __break(1u);
LABEL_310:
          __break(1u);
          goto LABEL_311;
        }
        if (!v24) {
          goto LABEL_314;
        }
        v313 = v21;
        v314 = v24;
        v315 = &v270[2 * v312];
        v316 = *(void *)v315;
        v317 = &v270[2 * v273];
        v318 = v317[1];
        sub_100DAB880((void **)(v314 + 32 * *(void *)v315), (void **)(v314 + 32 * *(void *)v317), v314 + 32 * *(void *)&v318, v371);
        if (v2) {
          goto LABEL_286;
        }
        if (*(uint64_t *)&v318 < v316) {
          goto LABEL_289;
        }
        if (v273 > *((void *)v313 + 2)) {
          goto LABEL_290;
        }
        *(void *)v315 = v316;
        v270[2 * v312 + 1] = v318;
        v319 = *((void *)v313 + 2);
        if (v273 >= v319) {
          goto LABEL_291;
        }
        v21 = v313;
        v26 = v319 - 1;
        memmove(&v270[2 * v273], v317 + 2, 16 * (v319 - 1 - v273));
        *((void *)v313 + 2) = v319 - 1;
        v24 = v378;
        if (v319 <= 2) {
          goto LABEL_14;
        }
      }
    }
    v26 = 1;
    v24 = v378;
LABEL_14:
    v25 = v355;
    v22 = v377;
    if (v377 >= v355) {
      goto LABEL_275;
    }
  }
  v68 = 0;
LABEL_267:
  v24 = v378;
LABEL_52:
  v69 = v347 + 32 * v67;
  v70 = (char *)v67;
  v377 = v68;
  while (1)
  {
    v67 = (uint64_t)v70;
    v72 = *(unsigned __int8 *)(v69 + 8);
    v73 = v72 >> 6;
    if (!(v72 >> 6)) {
      goto LABEL_54;
    }
    v75 = *(void *)(v69 - 16);
    v74 = *(void *)(v69 - 8);
    v76 = *(void *)v69;
    v77 = v24 + 32 * v28;
    v78 = *(void *)v77;
    v79 = *(void *)(v77 + 8);
    v80 = *(void *)(v77 + 16);
    v81 = *(unsigned __int8 *)(v77 + 24);
    if (v73 != 2)
    {
      if (v73 == 1)
      {
        if ((v81 & 0xC0) == 0x40)
        {
          v383 = (id)v67;
          v379 = (id)v74;
          v380 = (void *)v75;
          v381 = (void *)v76;
          LODWORD(v382) = v72;
          sub_10053BB6C((id)v75, (id)v74, v76, v72);
          sub_10053BB6C((id)v78, (id)v79, v80, v81);
          v82 = v364;
          static Calendar.current.getter();
          v83 = v366;
          Date.init(timeIntervalSinceReferenceDate:)();
          v84 = v22;
          v85 = v367;
          Date.init(timeIntervalSinceReferenceDate:)();
          v87 = v369;
          v86 = v370;
          (*v362)(v369, v363, v370);
          v376 = (id)Calendar.compare(_:to:toGranularity:)();
          (*v361)(v87, v86);
          v88 = *v360;
          v89 = v85;
          v22 = v84;
          v90 = v368;
          (*v360)(v89, v368);
          v91 = v377;
          v88(v83, v90);
          (*v359)(v82, v365);
          sub_10053BBA0(v380, v379, (uint64_t)v381, v382);
          v92 = v376 == (id)-1;
          goto LABEL_61;
        }
LABEL_73:
        if (v81 < 0x40) {
          goto LABEL_92;
        }
        v111 = 0;
        if (v81 < 0xC0) {
          goto LABEL_321;
        }
LABEL_75:
        if (!(v80 | v79 | v78) && v81 == 192)
        {
          v112 = v67;
          v113 = v68;
          sub_10053BB6C(0, 0, 0, 0xC0u);
LABEL_84:
          v68 = v113;
          v67 = v112;
LABEL_92:
          v25 = v355;
          if (v68) {
            break;
          }
          goto LABEL_55;
        }
        if (v81 == 192 && v78 == 1 && !(v80 | v79))
        {
          v71 = v68;
          sub_10053BB6C((id)1, 0, 0, 0xC0u);
          v68 = v71;
        }
        else
        {
LABEL_321:
          if (v111 && v72 == 192 && v75 == 1 && !(v76 | v74)) {
            goto LABEL_92;
          }
        }
      }
      else
      {
        if (v81 < 0x40) {
          goto LABEL_92;
        }
        v111 = 1;
        if (v76 | v74 | v75 || v72 != 192) {
          goto LABEL_75;
        }
      }
LABEL_54:
      v25 = v355;
      if ((v68 & 1) == 0) {
        goto LABEL_129;
      }
      goto LABEL_55;
    }
    if ((v81 & 0xC0) != 0x80) {
      goto LABEL_73;
    }
    if (!v75)
    {
      v112 = v67;
      v113 = v68;
      sub_10053BBA0(0, (id)v74, v76, v72);
      goto LABEL_84;
    }
    v383 = (id)v67;
    if (!v78)
    {
      sub_10053BB6C(0, (id)v79, v80, v81);
      v25 = v355;
      goto LABEL_105;
    }
    v348 = v21;
    v376 = (id)v79;
    v94 = (char *)v78;
    v95 = v80;
    v96 = v72;
    v97 = (void *)v76;
    v98 = (void *)v74;
    v372 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
    v374 = v99;
    v373 = *(void **)(v75 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
    sub_10053BB6C((id)v75, v98, (uint64_t)v97, v96);
    sub_10053BB6C(v94, v376, v95, v81);
    sub_10053BB6C((id)v75, v98, (uint64_t)v97, v96);
    sub_10053BB6C(v94, v376, v95, v81);
    v379 = v98;
    v380 = (void *)v75;
    v100 = v98;
    v381 = v97;
    LODWORD(v382) = v96;
    v101 = (void *)v95;
    v102 = v376;
    sub_10053BB6C((id)v75, v100, (uint64_t)v97, v96);
    v375 = v101;
    sub_10053BB6C(v94, v102, (uint64_t)v101, v81);
    v103 = [v373 userIdentity];
    v104 = [v103 userRecordID];

    if (v104)
    {
      v105 = [v104 recordName];

      v106 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
      v108 = v107;

      if (v372 == v106 && v374 == v108)
      {
        swift_bridgeObjectRelease_n();
LABEL_104:
        v125 = v379;
        v124 = v380;
        v126 = v102;
        v127 = (uint64_t)v375;
        v128 = (uint64_t)v381;
        sub_10053BBA0(v380, v379, (uint64_t)v381, v382);
        sub_10053BBA0(v94, v126, v127, v81);
        sub_10053BBA0(v94, v126, v127, v81);
        v129 = v128;
        LOBYTE(v128) = (_BYTE)v382;
        sub_10053BBA0(v124, v125, v129, v382);
        sub_10053BBA0(v94, v126, v127, v81);
        sub_10053BBA0(v124, v125, (uint64_t)v381, v128);
        v21 = v348;
        v25 = v355;
        v24 = v378;
LABEL_105:
        v67 = (uint64_t)v383;
        v68 = v377;
        if ((v377 & 1) == 0)
        {
LABEL_129:
          v27 = v67;
          v2 = v352;
          goto LABEL_143;
        }
        goto LABEL_55;
      }
      v110 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v110) {
        goto LABEL_104;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v374 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    v115 = v114;
    v116 = [*(id *)&v94[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant] userIdentity];
    v117 = [v116 userRecordID];

    if (!v117)
    {
      swift_bridgeObjectRelease();
      v21 = v348;
LABEL_108:
      v130 = sub_100701F80();
      v132 = v131;
      if (v130 == sub_100701F80() && v132 == v133) {
        v92 = 0;
      }
      else {
        v92 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v141 = (uint64_t)v375;
      sub_10053BBA0(v94, v102, (uint64_t)v375, v81);
      v142 = v102;
      v143 = v379;
      sub_10053BBA0(v380, v379, (uint64_t)v381, v382);
      sub_10053BBA0(v94, v142, v141, v81);
      v144 = v380;
      v145 = v143;
      v146 = (uint64_t)v381;
      LOBYTE(v142) = (_BYTE)v382;
      sub_10053BBA0(v380, v145, (uint64_t)v381, v382);
      sub_10053BBA0(v94, v376, (uint64_t)v375, v81);
      sub_10053BBA0(v144, v379, v146, v142);
      v91 = v377;
LABEL_61:
      v93 = v91 ^ v92;
      v25 = v355;
      v24 = v378;
      v67 = (uint64_t)v383;
      v68 = v91;
      if (v93) {
        goto LABEL_117;
      }
      goto LABEL_55;
    }
    v118 = [v117 recordName];

    v119 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    v121 = v120;

    if (v374 == v119 && v115 == v121)
    {
      swift_bridgeObjectRelease_n();
      v21 = v348;
    }
    else
    {
      v123 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21 = v348;
      if ((v123 & 1) == 0) {
        goto LABEL_108;
      }
    }
    v134 = v380;
    v135 = v102;
    v136 = (uint64_t)v375;
    v137 = (uint64_t)v381;
    sub_10053BBA0(v380, v379, (uint64_t)v381, v382);
    sub_10053BBA0(v94, v135, v136, v81);
    sub_10053BBA0(v94, v135, v136, v81);
    v138 = v134;
    v139 = v379;
    v140 = v137;
    LOBYTE(v137) = (_BYTE)v382;
    sub_10053BBA0(v138, v379, v140, v382);
    sub_10053BBA0(v94, v135, v136, v81);
    sub_10053BBA0(v380, v139, (uint64_t)v381, v137);
    v25 = v355;
    v68 = v377;
    v24 = v378;
    v67 = (uint64_t)v383;
    if (v377) {
      break;
    }
LABEL_55:
    v69 += 32;
    v70 = (char *)(v67 + 1);
    v28 = v67;
    if (v67 + 1 >= v25)
    {
      ++v67;
      goto LABEL_117;
    }
  }
  v2 = v352;
  if (v67 >= v22) {
    goto LABEL_119;
  }
LABEL_312:
  __break(1u);
LABEL_313:
  __break(1u);
LABEL_314:
  __break(1u);
LABEL_315:
  __break(1u);
LABEL_316:
  __break(1u);
LABEL_317:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100DA7B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, int a5)
{
  int v49 = a5;
  v57 = a4;
  uint64_t v47 = a1;
  uint64_t v7 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v9 = __chkstk_darwin(v7, v8);
  uint64_t v54 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9, v11);
  v14 = (char *)&v45 - v13;
  uint64_t v16 = __chkstk_darwin(v12, v15);
  v18 = (char *)&v45 - v17;
  uint64_t v20 = __chkstk_darwin(v16, v19);
  v22 = (char *)&v45 - v21;
  uint64_t result = __chkstk_darwin(v20, v23);
  v27 = (char *)&v45 - v26;
  uint64_t v53 = a3;
  uint64_t v46 = a2;
  if (a3 != a2)
  {
    uint64_t v28 = *(void *)(v25 + 72);
    uint64_t v64 = v28 * (v53 - 1);
    v51 = v18;
    uint64_t v52 = v28;
    uint64_t v59 = v28 * v53;
    v48 = v14;
    v50 = (char *)&v45 - v26;
    while (2)
    {
      uint64_t v30 = 0;
      uint64_t v58 = v47;
      while (1)
      {
        uint64_t v31 = *v57;
        uint64_t v32 = v59 + v30;
        sub_100DBF940(v59 + v30 + *v57, (uint64_t)v27, type metadata accessor for CRLBoardLibraryViewModel.Item);
        uint64_t v56 = v64 + v30;
        sub_100DBF940(v64 + v30 + v31, (uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100DBF940((uint64_t)v27, (uint64_t)v18, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (swift_getEnumCaseMultiPayload() != 2) {
          break;
        }
        uint64_t v55 = v32;
        uint64_t v33 = sub_1005057FC(&qword_101677100);
        v34 = &v18[*(int *)(v33 + 48)];
        uint64_t v35 = v7;
        uint64_t v36 = *(void *)v34;
        uint64_t v37 = *((void *)v34 + 1);
        sub_100DBFA10((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
        sub_100DBF940((uint64_t)v22, (uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
        uint64_t v38 = v35;
        if (swift_getEnumCaseMultiPayload() != 2)
        {
          swift_bridgeObjectRelease();
          uint64_t v29 = (uint64_t)v14;
          uint64_t v7 = v35;
          v27 = v50;
          v18 = v51;
          goto LABEL_5;
        }
        v39 = &v14[*(int *)(v33 + 48)];
        uint64_t v40 = *(void *)v39;
        uint64_t v41 = *((void *)v39 + 1);
        sub_100DBFA10((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
        if (v49)
        {
          uint64_t v62 = v36;
          uint64_t v63 = v37;
          uint64_t v60 = v40;
          uint64_t v61 = v41;
        }
        else
        {
          uint64_t v62 = v40;
          uint64_t v63 = v41;
          uint64_t v60 = v36;
          uint64_t v61 = v37;
        }
        sub_10052E310();
        uint64_t v42 = StringProtocol.localizedStandardCompare<A>(_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100DBFA10((uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v27 = v50;
        uint64_t result = sub_100DBFA10((uint64_t)v50, type metadata accessor for CRLBoardLibraryViewModel.Item);
        uint64_t v7 = v38;
        v14 = v48;
        v18 = v51;
        if (v42 != -1) {
          goto LABEL_6;
        }
        uint64_t v43 = *v57;
        if (!*v57)
        {
          __break(1u);
          return result;
        }
        uint64_t v44 = v43 + v64 + v30;
        sub_100DBF9A8(v43 + v59 + v30, v54, type metadata accessor for CRLBoardLibraryViewModel.Item);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t result = sub_100DBF9A8(v54, v44, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v30 -= v52;
        if (v53 == ++v58) {
          goto LABEL_6;
        }
      }
      uint64_t v29 = (uint64_t)v18;
LABEL_5:
      sub_100DBFA10(v29, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100DBFA10((uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t result = sub_100DBFA10((uint64_t)v27, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_6:
      v64 += v52;
      v59 += v52;
      if (++v53 == v46) {
        return result;
      }
      continue;
    }
  }
  return result;
}

void sub_100DA7FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v108 = a1;
  uint64_t v122 = type metadata accessor for Calendar.Component();
  uint64_t v7 = *(void *)(v122 - 8);
  __chkstk_darwin(v122, v8);
  v121 = (char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v120 - 8);
  uint64_t v12 = __chkstk_darwin(v120, v11);
  v119 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v14);
  v118 = (char *)&v106 - v15;
  uint64_t v117 = type metadata accessor for Calendar();
  __chkstk_darwin(v117, v16);
  v116 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = a3;
  uint64_t v107 = a2;
  if (a3 != a2)
  {
    uint64_t v19 = *a4;
    v109 = CKCurrentUserDefaultName;
    v115 = (void (**)(char *, void, uint64_t))(v7 + 104);
    v114 = (void (**)(char *, uint64_t))(v7 + 8);
    v113 = (void (**)(char *, uint64_t))(v10 + 8);
    v112 = (void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v135 = v19;
    uint64_t v20 = (long long *)(v19 + 32 * v128);
    unsigned int v111 = enum case for Calendar.Component.day(_:);
LABEL_5:
    v123 = v20;
    uint64_t v21 = v108;
    uint64_t v22 = v128;
    while (1)
    {
      unint64_t v23 = *((void *)v20 - 4);
      unsigned int v24 = *((unsigned __int8 *)v20 - 8);
      unsigned int v25 = v24 >> 6;
      if (!(v24 >> 6)) {
        goto LABEL_62;
      }
      unint64_t v27 = *(void *)v20;
      unint64_t v26 = *((void *)v20 + 1);
      uint64_t v28 = *((void *)v20 + 2);
      unsigned int v29 = *((unsigned __int8 *)v20 + 24);
      unint64_t v30 = *((void *)v20 - 3);
      uint64_t v31 = *((void *)v20 - 2);
      if (v25 != 2) {
        break;
      }
      if ((v29 & 0xC0) != 0x80) {
        goto LABEL_26;
      }
      if (!v23)
      {
        sub_10053BBA0(0, *((id *)v20 - 3), *((void *)v20 - 2), *((unsigned char *)v20 - 8));
        goto LABEL_4;
      }
      if (!v27)
      {
        sub_10053BB6C(0, (id)v26, v28, *((unsigned char *)v20 + 24));
        goto LABEL_62;
      }
      int v129 = *((unsigned __int8 *)v20 - 8);
      uint64_t v42 = (void *)v30;
      uint64_t v43 = v28;
      uint64_t v130 = v31;
      uint64_t v44 = (void *)v26;
      uint64_t v110 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v127 = v45;
      id v126 = *(id *)(v23 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
      sub_10053BB6C((id)v23, v42, v130, v129);
      sub_10053BB6C((id)v27, v44, v43, v29);
      sub_10053BB6C((id)v27, v44, v43, v29);
      sub_10053BB6C((id)v23, v42, v130, v129);
      id v132 = v44;
      v133 = (char *)v27;
      uint64_t v134 = v43;
      unsigned int v131 = v29;
      sub_10053BB6C((id)v27, v44, v43, v29);
      id v125 = v42;
      uint64_t v46 = v42;
      unsigned __int8 v47 = v129;
      sub_10053BB6C((id)v23, v46, v130, v129);
      id v48 = [v126 userIdentity];
      id v49 = [v48 userRecordID];

      v124 = (void *)v23;
      if (v49)
      {
        id v50 = [v49 recordName];

        uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v53 = v52;

        if (v110 == v51 && v127 == v53)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v56 = v133;
LABEL_57:
          v71 = (void *)v23;
          unsigned __int8 v72 = v47;
          id v73 = v125;
          uint64_t v74 = v130;
          sub_10053BBA0(v71, v125, v130, v72);
          v75 = v56;
          id v76 = v132;
          v77 = v56;
          uint64_t v78 = v134;
          unsigned __int8 v79 = v131;
          sub_10053BBA0(v75, v132, v134, v131);
          sub_10053BBA0(v77, v76, v78, v79);
          v80 = v124;
          LOBYTE(v76) = v129;
          sub_10053BBA0(v124, v73, v74, v129);
          sub_10053BBA0(v80, v73, v74, v76);
          sub_10053BBA0(v133, v132, v78, v79);
          uint64_t v22 = v128;
          goto LABEL_62;
        }
        char v55 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v56 = v133;
        if (v55) {
          goto LABEL_57;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v56 = v133;
      }
      uint64_t v127 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v61 = v60;
      id v62 = [*(id *)&v56[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant] userIdentity];
      id v63 = [v62 userRecordID];

      if (v63)
      {
        id v64 = [v63 recordName];

        uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v67 = v66;

        if (v127 == v65 && v61 == v67)
        {
          swift_bridgeObjectRelease_n();
          unsigned __int8 v70 = v129;
LABEL_68:
          v105 = (void *)v23;
          v99 = (void *)v23;
          id v100 = v125;
          uint64_t v102 = v130;
          sub_10053BBA0(v105, v125, v130, v70);
          v98 = v56;
          id v95 = v132;
          id v101 = v132;
          uint64_t v96 = v134;
          uint64_t v103 = v134;
          unsigned __int8 v97 = v131;
          unsigned __int8 v104 = v131;
LABEL_69:
          sub_10053BBA0(v98, v101, v103, v104);
          sub_10053BBA0(v56, v95, v96, v97);
          sub_10053BBA0(v99, v100, v102, v70);
          sub_10053BBA0(v99, v100, v102, v70);
          sub_10053BBA0(v56, v95, v96, v97);
          uint64_t v22 = v128;
LABEL_4:
          uint64_t v20 = v123 + 2;
          uint64_t v128 = v22 + 1;
          if (v22 + 1 == v107) {
            return;
          }
          goto LABEL_5;
        }
        char v69 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unsigned __int8 v70 = v129;
        if (v69) {
          goto LABEL_68;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        unsigned __int8 v70 = v129;
      }
      uint64_t v81 = sub_100701F80();
      uint64_t v83 = v82;
      if (v81 == sub_100701F80() && v83 == v84)
      {
        swift_bridgeObjectRelease_n();
        id v95 = v132;
        uint64_t v96 = v134;
        unsigned __int8 v97 = v131;
        sub_10053BBA0(v56, v132, v134, v131);
        v98 = (void *)v23;
        v99 = (void *)v23;
        id v100 = v125;
        id v101 = v125;
        uint64_t v102 = v130;
        uint64_t v103 = v130;
        unsigned __int8 v104 = v70;
        goto LABEL_69;
      }
      LODWORD(v127) = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v85 = v132;
      unsigned __int8 v86 = v131;
      sub_10053BBA0(v56, v132, v134, v131);
      v87 = (void *)v23;
      id v88 = v125;
      uint64_t v89 = v130;
      sub_10053BBA0(v87, v125, v130, v70);
      sub_10053BBA0(v56, v85, v134, v86);
      v90 = v124;
      sub_10053BBA0(v124, v88, v89, v70);
      sub_10053BBA0(v90, v88, v89, v70);
      sub_10053BBA0(v133, v85, v134, v86);
      uint64_t v22 = v128;
      if ((v127 & 1) == 0) {
        goto LABEL_4;
      }
LABEL_62:
      if (!v135)
      {
        __break(1u);
        return;
      }
      uint64_t v91 = *((void *)v20 + 2);
      char v92 = *((unsigned char *)v20 + 24);
      long long v93 = *v20;
      long long v94 = *(v20 - 1);
      *uint64_t v20 = *(v20 - 2);
      v20[1] = v94;
      *((void *)v20 - 2) = v91;
      *((unsigned char *)v20 - 8) = v92;
      *(v20 - 2) = v93;
      v20 -= 2;
      if (v22 == ++v21) {
        goto LABEL_4;
      }
    }
    if (v25 == 1)
    {
      if ((v29 & 0xC0) == 0x40)
      {
        uint64_t v32 = (void *)*((void *)v20 - 3);
        uint64_t v33 = *(void **)v20;
        id v132 = (id)*((void *)v20 + 1);
        uint64_t v134 = v28;
        sub_10053BB6C(v33, (id)v26, v28, v29);
        sub_10053BB6C((id)v23, v32, v31, v24);
        v133 = (char *)v27;
        v34 = v116;
        static Calendar.current.getter();
        uint64_t v35 = v118;
        Date.init(timeIntervalSinceReferenceDate:)();
        uint64_t v36 = v119;
        Date.init(timeIntervalSinceReferenceDate:)();
        uint64_t v37 = *v115;
        unsigned int v131 = v29;
        v39 = v121;
        uint64_t v38 = v122;
        v37(v121, v111, v122);
        uint64_t v130 = Calendar.compare(_:to:toGranularity:)();
        (*v114)(v39, v38);
        uint64_t v40 = *v113;
        uint64_t v41 = v120;
        (*v113)(v36, v120);
        v40(v35, v41);
        uint64_t v22 = v128;
        (*v112)(v34, v117);
        sub_10053BBA0(v133, v132, v134, v131);
        if (v130 != -1) {
          goto LABEL_4;
        }
        goto LABEL_62;
      }
LABEL_26:
      if (v29 < 0x40) {
        goto LABEL_4;
      }
      if (v29 < 0xC0) {
        goto LABEL_62;
      }
      char v57 = 1;
    }
    else
    {
      if (v29 < 0x40) {
        goto LABEL_4;
      }
      if (!(v31 | v30 | v23) && v24 == 192)
      {
        sub_10053BB6C(0, 0, 0, 0xC0u);
        goto LABEL_62;
      }
      if (v29 <= 0xBF)
      {
LABEL_43:
        if (v24 == 192 && v23 == 1 && !(v31 | v30))
        {
          sub_10053BB6C((id)1, 0, 0, 0xC0u);
          goto LABEL_4;
        }
        goto LABEL_62;
      }
      char v57 = 0;
    }
    if (!(v28 | v26 | v27) && v29 == 192) {
      goto LABEL_4;
    }
    if (v27 == 1 && (v28 | v26) == 0 && v29 == 192) {
      char v57 = 1;
    }
    if (v57) {
      goto LABEL_62;
    }
    goto LABEL_43;
  }
}

void sub_100DA8A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v104 = a1;
  uint64_t v118 = type metadata accessor for Calendar.Component();
  uint64_t v7 = *(void *)(v118 - 8);
  __chkstk_darwin(v118, v8);
  uint64_t v117 = &v102[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v116 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v116 - 8);
  uint64_t v12 = __chkstk_darwin(v116, v11);
  v115 = &v102[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12, v14);
  v114 = &v102[-v15];
  uint64_t v113 = type metadata accessor for Calendar();
  __chkstk_darwin(v113, v16);
  v112 = &v102[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v124 = a3;
  uint64_t v103 = a2;
  if (a3 != a2)
  {
    uint64_t v19 = *a4;
    v105 = CKCurrentUserDefaultName;
    unsigned int v111 = enum case for Calendar.Component.day(_:);
    uint64_t v110 = (void (**)(unsigned char *, void, uint64_t))(v7 + 104);
    v109 = (void (**)(unsigned char *, uint64_t))(v7 + 8);
    uint64_t v108 = (void (**)(unsigned char *, uint64_t))(v10 + 8);
    uint64_t v107 = (void (**)(unsigned char *, uint64_t))(v17 + 8);
    uint64_t v130 = v19;
    uint64_t v20 = (long long *)(v19 + 32 * v124);
LABEL_6:
    v119 = v20;
    uint64_t v21 = v104;
    uint64_t v22 = v124;
    while (1)
    {
      unsigned int v23 = *((unsigned __int8 *)v20 + 24);
      unint64_t v24 = *((void *)v20 - 4);
      unsigned int v25 = v23 >> 6;
      if (!(v23 >> 6)) {
        goto LABEL_56;
      }
      unint64_t v27 = *(void *)v20;
      unint64_t v26 = *((void *)v20 + 1);
      uint64_t v28 = *((void *)v20 + 2);
      unint64_t v29 = *((void *)v20 - 3);
      uint64_t v30 = *((void *)v20 - 2);
      unsigned int v31 = *((unsigned __int8 *)v20 - 8);
      if (v25 != 2) {
        break;
      }
      if ((v31 & 0xC0) != 0x80) {
        goto LABEL_28;
      }
      if (!v27)
      {
        sub_10053BBA0(0, *((id *)v20 + 1), v28, *((unsigned char *)v20 + 24));
        goto LABEL_5;
      }
      if (!v24)
      {
        sub_10053BB6C(0, (id)v29, *((void *)v20 - 2), *((unsigned char *)v20 - 8));
        goto LABEL_56;
      }
      uint64_t v41 = (void *)*((void *)v20 + 1);
      v123 = (char *)*((void *)v20 - 4);
      uint64_t v125 = v30;
      uint64_t v42 = v28;
      uint64_t v43 = (void *)v29;
      uint64_t v106 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v122 = v44;
      id v121 = *(id *)(v27 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
      sub_10053BB6C((id)v27, v41, v42, v23);
      sub_10053BB6C(v123, v43, v125, v31);
      sub_10053BB6C((id)v27, v41, v42, v23);
      sub_10053BB6C(v123, v43, v125, v31);
      id v126 = (void *)v27;
      id v127 = v41;
      uint64_t v45 = v41;
      uint64_t v128 = v42;
      uint64_t v46 = v123;
      unsigned int v129 = v23;
      sub_10053BB6C((id)v27, v45, v42, v23);
      unsigned __int8 v47 = v46;
      id v120 = v43;
      sub_10053BB6C(v46, v43, v125, v31);
      id v48 = [v121 userIdentity];
      id v49 = [v48 userRecordID];

      if (v49)
      {
        id v50 = [v49 recordName];

        uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v53 = v52;

        if (v106 == v51 && v122 == v53)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v56 = v126;
          char v57 = v47;
LABEL_51:
          v71 = v56;
          uint64_t v72 = v125;
          id v73 = v56;
          uint64_t v74 = v128;
          sub_10053BBA0(v71, v127, v128, v129);
          id v75 = v120;
          sub_10053BBA0(v57, v120, v72, v31);
          sub_10053BBA0(v57, v75, v72, v31);
          uint64_t v76 = v74;
          LOBYTE(v74) = v129;
          sub_10053BBA0(v73, v127, v76, v129);
          sub_10053BBA0(v57, v75, v72, v31);
          sub_10053BBA0(v73, v127, v128, v74);
          uint64_t v22 = v124;
          goto LABEL_56;
        }
        char v55 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v56 = v126;
        char v57 = v47;
        if (v55) {
          goto LABEL_51;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v56 = v126;
        char v57 = v47;
      }
      uint64_t v122 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v60 = v59;
      id v61 = [*(id *)&v57[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant] userIdentity];
      id v62 = [v61 userRecordID];

      if (v62)
      {
        id v63 = [v62 recordName];

        uint64_t v64 = v60;
        uint64_t v65 = v63;
        uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v68 = v67;

        if (v122 == v66 && v64 == v68)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v56 = v126;
LABEL_62:
          id v101 = v56;
          char v92 = v57;
          uint64_t v93 = v125;
          long long v94 = v56;
          id v96 = v127;
          uint64_t v95 = v128;
          unsigned __int8 v99 = v129;
          sub_10053BBA0(v101, v127, v128, v129);
          uint64_t v91 = v92;
          id v89 = v120;
          id v97 = v120;
          uint64_t v98 = v93;
          unsigned __int8 v100 = v31;
LABEL_63:
          sub_10053BBA0(v91, v97, v98, v100);
          sub_10053BBA0(v92, v89, v93, v31);
          sub_10053BBA0(v94, v96, v95, v99);
          sub_10053BBA0(v92, v89, v93, v31);
          sub_10053BBA0(v94, v96, v95, v99);
          uint64_t v22 = v124;
LABEL_5:
          uint64_t v20 = v119 + 2;
          uint64_t v124 = v22 + 1;
          if (v22 + 1 == v103) {
            return;
          }
          goto LABEL_6;
        }
        char v70 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v56 = v126;
        if (v70) {
          goto LABEL_62;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v77 = sub_100701F80();
      uint64_t v79 = v78;
      if (v77 == sub_100701F80() && v79 == v80)
      {
        swift_bridgeObjectRelease_n();
        id v89 = v120;
        uint64_t v90 = v125;
        sub_10053BBA0(v57, v120, v125, v31);
        uint64_t v91 = v56;
        char v92 = v57;
        uint64_t v93 = v90;
        long long v94 = v56;
        id v96 = v127;
        uint64_t v95 = v128;
        id v97 = v127;
        uint64_t v98 = v128;
        unsigned __int8 v99 = v129;
        unsigned __int8 v100 = v129;
        goto LABEL_63;
      }
      LODWORD(v122) = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v81 = v125;
      id v82 = v120;
      sub_10053BBA0(v57, v120, v125, v31);
      id v83 = v127;
      sub_10053BBA0(v56, v127, v128, v129);
      sub_10053BBA0(v57, v82, v81, v31);
      uint64_t v84 = v128;
      LOBYTE(v81) = v129;
      sub_10053BBA0(v56, v83, v128, v129);
      sub_10053BBA0(v123, v82, v125, v31);
      sub_10053BBA0(v56, v83, v84, v81);
      uint64_t v22 = v124;
      if ((v122 & 1) == 0) {
        goto LABEL_5;
      }
LABEL_56:
      if (!v130)
      {
        __break(1u);
        return;
      }
      uint64_t v85 = *((void *)v20 + 2);
      char v86 = *((unsigned char *)v20 + 24);
      long long v87 = *v20;
      long long v88 = *(v20 - 1);
      *uint64_t v20 = *(v20 - 2);
      v20[1] = v88;
      *((void *)v20 - 2) = v85;
      *((unsigned char *)v20 - 8) = v86;
      *(v20 - 2) = v87;
      v20 -= 2;
      if (v22 == ++v21) {
        goto LABEL_5;
      }
    }
    if (v25 == 1)
    {
      if ((v31 & 0xC0) == 0x40)
      {
        id v127 = (id)*((void *)v20 + 1);
        uint64_t v128 = v28;
        uint64_t v32 = (void *)v29;
        sub_10053BB6C((id)v27, (id)v26, v28, v23);
        sub_10053BB6C((id)v24, v32, v30, v31);
        id v126 = (void *)v27;
        uint64_t v33 = v112;
        static Calendar.current.getter();
        v34 = v114;
        Date.init(timeIntervalSinceReferenceDate:)();
        uint64_t v35 = v115;
        Date.init(timeIntervalSinceReferenceDate:)();
        uint64_t v36 = *v110;
        unsigned int v129 = v23;
        uint64_t v38 = v117;
        uint64_t v37 = v118;
        v36(v117, v111, v118);
        uint64_t v125 = Calendar.compare(_:to:toGranularity:)();
        (*v109)(v38, v37);
        v39 = *v108;
        uint64_t v40 = v116;
        (*v108)(v35, v116);
        v39(v34, v40);
        uint64_t v22 = v124;
        (*v107)(v33, v113);
        sub_10053BBA0(v126, v127, v128, v129);
        if (v125 != -1) {
          goto LABEL_5;
        }
        goto LABEL_56;
      }
LABEL_28:
      if (v31 < 0x40) {
        goto LABEL_5;
      }
      int v58 = 0;
      if (v31 < 0xC0)
      {
LABEL_36:
        if (v58 && v23 == 192 && v27 == 1 && !(v28 | v26)) {
          goto LABEL_5;
        }
        goto LABEL_56;
      }
    }
    else
    {
      if (v31 < 0x40) {
        goto LABEL_5;
      }
      int v58 = 1;
      if (!(v28 | v26 | v27) && v23 == 192) {
        goto LABEL_56;
      }
      if (v31 < 0xC0) {
        goto LABEL_36;
      }
    }
    if (!(v30 | v29 | v24) && v31 == 192)
    {
      sub_10053BB6C(0, 0, 0, 0xC0u);
      goto LABEL_5;
    }
    if (v31 == 192 && v24 == 1 && !(v30 | v29))
    {
      sub_10053BB6C((id)1, 0, 0, 0xC0u);
      goto LABEL_56;
    }
    goto LABEL_36;
  }
}

uint64_t sub_100DA948C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, void *a5, int a6, uint64_t (*a7)(char *, char *, id, void))
{
  int v58 = a7;
  id v59 = a5;
  unint64_t v8 = v7;
  int v57 = a6;
  uint64_t v56 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v14 = __chkstk_darwin(v56, v13);
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v14, v17);
  uint64_t v20 = __chkstk_darwin(v18, v19);
  uint64_t v22 = (char *)&v52 - v21;
  __chkstk_darwin(v20, v23);
  unint64_t v26 = (char *)&v52 - v25;
  uint64_t v28 = *(void *)(v27 + 72);
  if (!v28)
  {
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if (a2 - a1 == 0x8000000000000000 && v28 == -1) {
    goto LABEL_66;
  }
  int64_t v29 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v28 == -1) {
    goto LABEL_67;
  }
  uint64_t v30 = (uint64_t)(a2 - a1) / v28;
  unint64_t v62 = a1;
  unint64_t v61 = a4;
  uint64_t v31 = v29 / v28;
  if (v30 >= v29 / v28)
  {
    if ((v31 & 0x8000000000000000) == 0)
    {
      uint64_t v33 = v31 * v28;
      uint64_t v54 = v24;
      if (a4 < a2 || a2 + v33 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v40 = a4 + v33;
      unint64_t v60 = a4 + v33;
      unint64_t v62 = a2;
      if (v33 < 1 || a1 >= a2) {
        goto LABEL_64;
      }
      unint64_t v52 = a1;
      uint64_t v53 = v16;
      uint64_t v42 = -v28;
      unint64_t v26 = v54;
      while (1)
      {
        unint64_t v43 = v8;
        unint64_t v44 = a3;
        unint64_t v45 = a4;
        sub_100DBF940(v40 + v42, (uint64_t)v26, type metadata accessor for CRLBoardLibraryViewModel.Item);
        unint64_t v46 = a2 + v42;
        sub_100DBF940(a2 + v42, (uint64_t)v16, type metadata accessor for CRLBoardLibraryViewModel.Item);
        char v47 = v58(v26, v16, v59, v57 & 1);
        if (v43) {
          break;
        }
        char v48 = v47;
        unint64_t v55 = 0;
        a3 += v42;
        sub_100DBFA10((uint64_t)v16, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100DBFA10((uint64_t)v26, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (v48)
        {
          if (v44 < a2 || a3 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
            uint64_t v16 = v53;
          }
          else
          {
            uint64_t v16 = v53;
            if (v44 != a2) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          v62 += v42;
        }
        else
        {
          unint64_t v49 = v60;
          v60 += v42;
          if (v44 < v49 || a3 >= v49)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v46 = a2;
            uint64_t v16 = v53;
          }
          else
          {
            uint64_t v16 = v53;
            if (v44 != v49) {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v46 = a2;
          }
        }
        unint64_t v8 = v55;
        unint64_t v40 = v60;
        if (v60 > v45)
        {
          a2 = v46;
          BOOL v50 = v46 > v52;
          a4 = v45;
          if (v50) {
            continue;
          }
        }
        goto LABEL_64;
      }
      uint64_t v22 = v16;
      goto LABEL_63;
    }
  }
  else if ((v30 & 0x8000000000000000) == 0)
  {
    uint64_t v32 = v30 * v28;
    if (a4 < a1 || a1 + v32 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v55 = a4 + v32;
    unint64_t v60 = a4 + v32;
    if (v32 < 1 || a2 >= a3) {
      goto LABEL_64;
    }
    while (1)
    {
      sub_100DBF940(a2, (uint64_t)v26, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100DBF940(a4, (uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
      char v35 = v58(v26, v22, v59, v57 & 1);
      if (v7) {
        break;
      }
      char v36 = v35;
      sub_100DBFA10((uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100DBFA10((uint64_t)v26, type metadata accessor for CRLBoardLibraryViewModel.Item);
      unint64_t v37 = v62;
      if (v36)
      {
        unint64_t v38 = a2 + v28;
        if (v62 < a2 || v62 >= v38)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v62 == a2)
        {
          unint64_t v37 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        unint64_t v39 = v61 + v28;
        if (v62 < v61 || v62 >= v39)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v62 != v61)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v61 = v39;
        unint64_t v38 = a2;
      }
      unint64_t v62 = v37 + v28;
      a4 = v61;
      if (v61 < v55)
      {
        a2 = v38;
        if (v38 < a3) {
          continue;
        }
      }
      goto LABEL_64;
    }
LABEL_63:
    sub_100DBFA10((uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100DBFA10((uint64_t)v26, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_64:
    sub_100F69B54(&v62, &v61, (uint64_t *)&v60);

    return 1;
  }
LABEL_68:

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100DA9A6C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, int a5)
{
  uint64_t v6 = v5;
  int v85 = a5;
  uint64_t v11 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v15 = __chkstk_darwin(v13, v14);
  id v89 = (char *)&v83 - v16;
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v88 = (uint64_t)&v83 - v19;
  uint64_t v21 = __chkstk_darwin(v18, v20);
  unint64_t v90 = (unint64_t)&v83 - v22;
  uint64_t v24 = __chkstk_darwin(v21, v23);
  unint64_t v26 = (char *)&v83 - v25;
  uint64_t v28 = __chkstk_darwin(v24, v27);
  uint64_t v30 = (char *)&v83 - v29;
  uint64_t v32 = __chkstk_darwin(v28, v31);
  v34 = (char *)&v83 - v33;
  __chkstk_darwin(v32, v35);
  unint64_t v39 = (char *)&v83 - v38;
  uint64_t v91 = *(void *)(v40 + 72);
  if (!v91)
  {
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  if (a2 - a1 == 0x8000000000000000 && v91 == -1) {
    goto LABEL_78;
  }
  int64_t v41 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v91 == -1) {
    goto LABEL_79;
  }
  uint64_t v42 = (uint64_t)(a2 - a1) / v91;
  unint64_t v99 = a1;
  unint64_t v98 = a4;
  uint64_t v43 = v41 / v91;
  uint64_t v92 = v36;
  uint64_t v83 = v6;
  if (v42 >= v41 / v91)
  {
    if ((v43 & 0x8000000000000000) == 0)
    {
      uint64_t v45 = v43 * v91;
      uint64_t v84 = v37;
      uint64_t v46 = v88;
      if (a4 < a2 || a2 + v45 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v64 = a4 + v45;
      unint64_t v97 = a4 + v45;
      unint64_t v99 = a2;
      unint64_t v87 = a1;
      BOOL v65 = v45 < 1 || a1 >= a2;
      uint64_t v66 = (uint64_t)v89;
      if (!v65)
      {
        uint64_t v67 = -v91;
        do
        {
          uint64_t v68 = v90;
          sub_100DBF940(v64 + v67, v90, type metadata accessor for CRLBoardLibraryViewModel.Item);
          unint64_t v69 = a2 + v67;
          sub_100DBF940(a2 + v67, v46, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_100DBF940(v68, v66, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if (swift_getEnumCaseMultiPayload() == 2)
          {
            uint64_t v91 = a3;
            uint64_t v70 = sub_1005057FC(&qword_101677100);
            v71 = (uint64_t *)(v66 + *(int *)(v70 + 48));
            uint64_t v72 = v66;
            uint64_t v73 = v71[1];
            uint64_t v86 = *v71;
            sub_100DBFA10(v72, type metadata accessor for CRLBoardIdentifier);
            uint64_t v74 = v84;
            sub_100DBF940(v46, v84, type metadata accessor for CRLBoardLibraryViewModel.Item);
            if (swift_getEnumCaseMultiPayload() == 2)
            {
              id v75 = (uint64_t *)(v74 + *(int *)(v70 + 48));
              uint64_t v76 = *v75;
              uint64_t v77 = v75[1];
              sub_100DBFA10(v74, type metadata accessor for CRLBoardIdentifier);
              if (v85)
              {
                uint64_t v95 = v86;
                uint64_t v96 = v73;
                uint64_t v93 = v76;
                uint64_t v94 = v77;
              }
              else
              {
                uint64_t v95 = v76;
                uint64_t v96 = v77;
                uint64_t v93 = v86;
                uint64_t v94 = v73;
              }
              sub_10052E310();
              uint64_t v79 = StringProtocol.localizedStandardCompare<A>(_:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              BOOL v78 = v79 == -1;
            }
            else
            {
              swift_bridgeObjectRelease();
              sub_100DBFA10(v74, type metadata accessor for CRLBoardLibraryViewModel.Item);
              BOOL v78 = 0;
            }
            a3 = v91;
          }
          else
          {
            sub_100DBFA10(v66, type metadata accessor for CRLBoardLibraryViewModel.Item);
            BOOL v78 = 0;
          }
          unint64_t v80 = a3 + v67;
          uint64_t v46 = v88;
          sub_100DBFA10(v88, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_100DBFA10(v90, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if (v78)
          {
            if (a3 < a2 || v80 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v66 = (uint64_t)v89;
            }
            else
            {
              uint64_t v66 = (uint64_t)v89;
              if (a3 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v99 += v67;
          }
          else
          {
            unint64_t v81 = v97;
            v97 += v67;
            if (a3 < v81 || v80 >= v81)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v69 = a2;
              uint64_t v66 = (uint64_t)v89;
            }
            else
            {
              uint64_t v66 = (uint64_t)v89;
              if (a3 != v81) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v69 = a2;
            }
          }
          unint64_t v64 = v97;
          if (v97 <= a4) {
            break;
          }
          a2 = v69;
          a3 += v67;
        }
        while (v69 > v87);
      }
LABEL_76:
      sub_100F69B54(&v99, &v98, (uint64_t *)&v97);
      return 1;
    }
  }
  else if ((v42 & 0x8000000000000000) == 0)
  {
    uint64_t v44 = v42 * v91;
    id v89 = v26;
    if (a4 < a1 || a1 + v44 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v90 = a4 + v44;
    unint64_t v97 = a4 + v44;
    if (v44 >= 1 && a2 < a3)
    {
      unint64_t v87 = (unint64_t)v39;
      while (1)
      {
        sub_100DBF940(a2, (uint64_t)v39, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100DBF940(a4, (uint64_t)v34, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100DBF940((uint64_t)v39, (uint64_t)v30, type metadata accessor for CRLBoardLibraryViewModel.Item);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v49 = (uint64_t)v30;
        if (EnumCaseMultiPayload != 2) {
          goto LABEL_28;
        }
        uint64_t v50 = sub_1005057FC(&qword_101677100);
        uint64_t v51 = &v30[*(int *)(v50 + 48)];
        uint64_t v52 = *(void *)v51;
        uint64_t v53 = *((void *)v51 + 1);
        sub_100DBFA10((uint64_t)v30, type metadata accessor for CRLBoardIdentifier);
        uint64_t v54 = (uint64_t)v34;
        uint64_t v55 = (uint64_t)v34;
        uint64_t v56 = (uint64_t)v89;
        sub_100DBF940(v55, (uint64_t)v89, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (swift_getEnumCaseMultiPayload() != 2) {
          break;
        }
        int v57 = (uint64_t *)(v56 + *(int *)(v50 + 48));
        uint64_t v59 = *v57;
        uint64_t v58 = v57[1];
        sub_100DBFA10(v56, type metadata accessor for CRLBoardIdentifier);
        if (v85)
        {
          uint64_t v95 = v52;
          uint64_t v96 = v53;
          uint64_t v93 = v59;
          uint64_t v94 = v58;
        }
        else
        {
          uint64_t v95 = v59;
          uint64_t v96 = v58;
          uint64_t v93 = v52;
          uint64_t v94 = v53;
        }
        sub_10052E310();
        uint64_t v63 = StringProtocol.localizedStandardCompare<A>(_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v34 = (char *)v54;
        sub_100DBFA10(v54, type metadata accessor for CRLBoardLibraryViewModel.Item);
        unint64_t v39 = (char *)v87;
        sub_100DBFA10(v87, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (v63 != -1) {
          goto LABEL_29;
        }
        unint64_t v60 = v99;
        unint64_t v62 = a2 + v91;
        if (v99 < a2 || v99 >= v62)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v99 == a2)
        {
          unint64_t v60 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_35:
        unint64_t v99 = v60 + v91;
        a4 = v98;
        if (v98 < v90)
        {
          a2 = v62;
          if (v62 < a3) {
            continue;
          }
        }
        goto LABEL_76;
      }
      swift_bridgeObjectRelease();
      uint64_t v49 = v56;
      v34 = (char *)v54;
      unint64_t v39 = (char *)v87;
LABEL_28:
      sub_100DBFA10(v49, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100DBFA10((uint64_t)v34, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100DBFA10((uint64_t)v39, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_29:
      unint64_t v60 = v99;
      unint64_t v61 = v98 + v91;
      if (v99 < v98 || v99 >= v61)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v99 != v98)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v98 = v61;
      unint64_t v62 = a2;
      goto LABEL_35;
    }
    goto LABEL_76;
  }
LABEL_80:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100DAA350(void **a1, void **a2, uint64_t a3, void **a4)
{
  uint64_t v214 = type metadata accessor for Calendar.Component();
  uint64_t v7 = *(void *)(v214 - 8);
  __chkstk_darwin(v214, v8);
  v213 = (char *)&v192 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v212 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v212 - 8);
  uint64_t v12 = __chkstk_darwin(v212, v11);
  v211 = (char *)&v192 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v14);
  v210 = (char *)&v192 - v15;
  uint64_t v209 = type metadata accessor for Calendar();
  uint64_t v16 = *(void *)(v209 - 8);
  __chkstk_darwin(v209, v17);
  v217 = v18;
  v218 = (char *)&v192 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (char *)a2 - (char *)a1;
  uint64_t v21 = (char *)a2 - (char *)a1 + 31;
  if ((char *)a2 - (char *)a1 >= 0) {
    uint64_t v21 = (char *)a2 - (char *)a1;
  }
  uint64_t v22 = v21 >> 5;
  uint64_t v23 = (char *)v18 - (char *)a2;
  uint64_t v24 = (char *)v18 - (char *)a2 + 31;
  if ((char *)v18 - (char *)a2 >= 0) {
    uint64_t v24 = (char *)v18 - (char *)a2;
  }
  uint64_t v25 = v24 >> 5;
  v220 = a1;
  v221 = a4;
  v224 = a1;
  v223 = a4;
  if (v22 >= v25)
  {
    if (v23 < -31) {
      goto LABEL_169;
    }
    size_t v97 = 4 * v25;
    if (v221 != a2 || &a2[v97] <= v221)
    {
      memmove(v221, a2, v97 * 8);
      uint64_t v18 = v217;
    }
    unint64_t v219 = (unint64_t)&v221[v97];
    v222 = &v221[v97];
    v224 = a2;
    if ((unint64_t)(v23 - 32) > 0xFFFFFFFFFFFFFFC0 || v220 >= a2)
    {
LABEL_168:
      sub_100F69E70((void **)&v224, (const void **)&v223, &v222);
      return 1;
    }
    v199 = CKCurrentUserDefaultName;
    v205 = (void (**)(char *, uint64_t))(v7 + 104);
    v204 = (void (**)(char *, uint64_t))(v7 + 8);
    v203 = (void (**)(char *, uint64_t))(v10 + 8);
    v202 = (void (**)(char *, uint64_t))(v16 + 8);
    unint64_t v98 = v18 - 4;
    LODWORD(v201) = enum case for Calendar.Component.day(_:);
    unint64_t v99 = a2;
    while (1)
    {
      unsigned __int8 v100 = v98 + 4;
      unint64_t v102 = (unint64_t)*(v99 - 4);
      v99 -= 4;
      unint64_t v101 = v102;
      unsigned int v103 = *((unsigned __int8 *)v99 + 24);
      unsigned int v104 = v103 >> 6;
      if (!(v103 >> 6)) {
        goto LABEL_147;
      }
      unint64_t v106 = *(void *)(v219 - 32);
      unint64_t v105 = *(void *)(v219 - 24);
      uint64_t v107 = (void **)(v219 - 32);
      uint64_t v108 = *(void *)(v219 - 16);
      unsigned int v109 = *(unsigned __int8 *)(v219 - 8);
      unint64_t v111 = (unint64_t)v99[1];
      uint64_t v110 = (uint64_t)v99[2];
      if (v104 != 2) {
        break;
      }
      if ((v109 & 0xC0) != 0x80) {
        goto LABEL_110;
      }
      if (!v101)
      {
        sub_10053BBA0(0, v99[1], (uint64_t)v99[2], *((unsigned char *)v99 + 24));
        goto LABEL_158;
      }
      if (!v106)
      {
        sub_10053BB6C(0, (id)v105, v108, *(unsigned char *)(v219 - 8));
        goto LABEL_147;
      }
      v197 = a2;
      v208 = v98 + 4;
      id v121 = (void **)v106;
      v216 = (char *)v108;
      v217 = (void **)v105;
      uint64_t v122 = v110;
      uint64_t v200 = v110;
      uint64_t v193 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v196 = v123;
      id v195 = *(id *)(v101 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
      sub_10053BB6C((id)v101, (id)v111, v122, v103);
      v215 = v121;
      uint64_t v124 = (uint64_t)v216;
      v206 = (void (**)(char *, void, uint64_t))v111;
      uint64_t v125 = (void *)v101;
      unsigned int v126 = v103;
      sub_10053BB6C(v121, v217, (uint64_t)v216, v109);
      id v127 = v121;
      uint64_t v128 = v217;
      sub_10053BB6C(v127, v217, v124, v109);
      uint64_t v129 = v200;
      sub_10053BB6C(v125, v206, v200, v103);
      sub_10053BB6C(v215, v128, (uint64_t)v216, v109);
      uint64_t v130 = v125;
      LODWORD(v198) = v126;
      sub_10053BB6C(v125, v206, v129, v126);
      id v131 = [v195 userIdentity];
      id v132 = [v131 userRecordID];

      if (v132)
      {
        id v133 = [v132 recordName];

        uint64_t v134 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v136 = v135;

        if (v193 == v134 && v196 == v136)
        {
          swift_bridgeObjectRelease_n();
          v139 = v130;
LABEL_146:
          v194 = v139;
          v156 = v139;
          id v157 = v206;
          uint64_t v158 = v200;
          unsigned __int8 v159 = v198;
          sub_10053BBA0(v156, v206, v200, v198);
          v161 = v215;
          uint64_t v160 = (uint64_t)v216;
          v162 = v217;
          sub_10053BBA0(v215, v217, (uint64_t)v216, v109);
          sub_10053BBA0(v161, v162, v160, v109);
          v163 = v194;
          sub_10053BBA0(v194, v157, v158, v159);
          sub_10053BBA0(v163, v157, v158, v159);
          sub_10053BBA0(v161, v217, v160, v109);
          unsigned __int8 v100 = v208;
          a2 = v197;
          goto LABEL_147;
        }
        char v138 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v139 = v130;
        if (v138) {
          goto LABEL_146;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        v139 = v130;
      }
      uint64_t v143 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v145 = v144;
      id v146 = [*(void **)((char *)v215 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant) userIdentity];
      id v147 = [v146 userRecordID];

      if (v147)
      {
        v194 = v139;
        id v148 = [v147 recordName];

        uint64_t v149 = v145;
        uint64_t v150 = v143;
        uint64_t v151 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v153 = v152;

        if (v150 == v151 && v149 == v153)
        {
          swift_bridgeObjectRelease_n();
          v139 = v194;
LABEL_156:
          v178 = v139;
          id v172 = v206;
          uint64_t v173 = v200;
          unsigned __int8 v175 = v198;
          sub_10053BBA0(v178, v206, v200, v198);
          v169 = v215;
          uint64_t v177 = (uint64_t)v216;
          v179 = v217;
          sub_10053BBA0(v215, v217, (uint64_t)v216, v109);
          sub_10053BBA0(v169, v179, v177, v109);
          v174 = v194;
LABEL_157:
          sub_10053BBA0(v174, v172, v173, v175);
          sub_10053BBA0(v174, v172, v173, v175);
          sub_10053BBA0(v169, v217, v177, v109);
          unsigned __int8 v100 = v208;
          a2 = v197;
LABEL_158:
          v222 = v107;
          if ((unint64_t)v100 < v219 || (unint64_t)v98 >= v219 || v100 != (void **)v219)
          {
            long long v180 = *((_OWORD *)v107 + 1);
            *(_OWORD *)unint64_t v98 = *(_OWORD *)v107;
            *((_OWORD *)v98 + 1) = v180;
          }
          unint64_t v99 = a2;
          unint64_t v219 = (unint64_t)v107;
          goto LABEL_163;
        }
        char v155 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v139 = v194;
        if (v155) {
          goto LABEL_156;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v165 = sub_100701F80();
      uint64_t v167 = v166;
      if (v165 == sub_100701F80() && v167 == v168)
      {
        swift_bridgeObjectRelease_n();
        v169 = v215;
        v170 = v217;
        sub_10053BBA0(v215, v217, (uint64_t)v216, v109);
        v171 = v139;
        id v172 = v206;
        uint64_t v173 = v200;
        v174 = v139;
        unsigned __int8 v175 = v198;
        sub_10053BBA0(v171, v206, v200, v198);
        v176 = v170;
        uint64_t v177 = (uint64_t)v216;
        sub_10053BBA0(v169, v176, (uint64_t)v216, v109);
        goto LABEL_157;
      }
      LODWORD(v196) = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v181 = v215;
      uint64_t v182 = (uint64_t)v216;
      LODWORD(v207) = v109;
      sub_10053BBA0(v215, v217, (uint64_t)v216, v109);
      v183 = v139;
      id v184 = v206;
      uint64_t v185 = v200;
      v186 = v139;
      unsigned __int8 v187 = v198;
      sub_10053BBA0(v183, v206, v200, v198);
      v188 = v181;
      v189 = v217;
      uint64_t v190 = v182;
      LOBYTE(v182) = v207;
      sub_10053BBA0(v188, v217, v190, v207);
      sub_10053BBA0(v186, v184, v185, v187);
      sub_10053BBA0(v186, v184, v185, v187);
      sub_10053BBA0(v215, v189, (uint64_t)v216, v182);
      unsigned __int8 v100 = v208;
      a2 = v197;
      if ((v196 & 1) == 0) {
        goto LABEL_158;
      }
LABEL_147:
      if (v100 != a2 || v98 >= a2)
      {
        long long v164 = *((_OWORD *)v99 + 1);
        *(_OWORD *)unint64_t v98 = *(_OWORD *)v99;
        *((_OWORD *)v98 + 1) = v164;
      }
      v224 = v99;
LABEL_163:
      if (v219 > (unint64_t)v221)
      {
        v98 -= 4;
        a2 = v99;
        if (v99 > v220) {
          continue;
        }
      }
      goto LABEL_168;
    }
    if (v104 == 1)
    {
      if ((v109 & 0xC0) == 0x40)
      {
        v215 = *(void ***)(v219 - 32);
        v216 = (char *)v108;
        v217 = (void **)v105;
        LODWORD(v207) = v109;
        unsigned __int8 v112 = v109;
        unsigned __int8 v113 = v103;
        uint64_t v114 = v110;
        sub_10053BB6C((id)v106, (id)v105, v108, v112);
        sub_10053BB6C((id)v101, (id)v111, v114, v113);
        static Calendar.current.getter();
        v115 = v210;
        Date.init(timeIntervalSinceReferenceDate:)();
        uint64_t v116 = v211;
        Date.init(timeIntervalSinceReferenceDate:)();
        uint64_t v118 = v213;
        uint64_t v117 = v214;
        ((void (*)(char *, void, uint64_t))*v205)(v213, v201, v214);
        v208 = v98 + 4;
        v206 = (void (**)(char *, void, uint64_t))Calendar.compare(_:to:toGranularity:)();
        (*v204)(v118, v117);
        v119 = *v203;
        uint64_t v120 = v212;
        (*v203)(v116, v212);
        v119(v115, v120);
        unsigned __int8 v100 = v208;
        (*v202)(v218, v209);
        sub_10053BBA0(v215, v217, (uint64_t)v216, v207);
        if (v206 != (void (**)(char *, void, uint64_t))-1) {
          goto LABEL_158;
        }
        goto LABEL_147;
      }
LABEL_110:
      if (v109 < 0x40) {
        goto LABEL_158;
      }
      if (v109 < 0xC0) {
        goto LABEL_147;
      }
      char v140 = 1;
    }
    else
    {
      if (v109 < 0x40) {
        goto LABEL_158;
      }
      if (!(v110 | v111 | v101) && v103 == 192)
      {
        sub_10053BB6C(0, 0, 0, 0xC0u);
        goto LABEL_147;
      }
      if (v109 <= 0xBF)
      {
LABEL_131:
        if (v103 == 192 && v101 == 1 && !(v110 | v111))
        {
          sub_10053BB6C((id)1, 0, 0, 0xC0u);
          goto LABEL_158;
        }
        goto LABEL_147;
      }
      char v140 = 0;
    }
    if (!(v108 | v105 | v106) && v109 == 192) {
      goto LABEL_158;
    }
    if (v106 == 1 && (v108 | v105) == 0 && v109 == 192) {
      char v140 = 1;
    }
    if (v140) {
      goto LABEL_147;
    }
    goto LABEL_131;
  }
  if (v20 >= -31)
  {
    size_t v26 = 4 * v22;
    if (v221 != v220 || &v220[v26] <= v221)
    {
      memmove(v221, v220, v26 * 8);
      uint64_t v18 = v217;
    }
    uint64_t v27 = &v221[v26];
    v222 = &v221[v26];
    if ((unint64_t)(v20 - 32) <= 0xFFFFFFFFFFFFFFC0 && a2 < v18)
    {
      v201 = CKCurrentUserDefaultName;
      v206 = (void (**)(char *, void, uint64_t))(v7 + 104);
      v205 = (void (**)(char *, uint64_t))(v7 + 8);
      v204 = (void (**)(char *, uint64_t))(v10 + 8);
      v203 = (void (**)(char *, uint64_t))(v16 + 8);
      LODWORD(v202) = enum case for Calendar.Component.day(_:);
      v215 = &v221[v26];
      while (1)
      {
        unsigned int v28 = *((unsigned __int8 *)v221 + 24);
        unsigned int v29 = v28 >> 6;
        if (!(v28 >> 6)) {
          goto LABEL_68;
        }
        unint64_t v31 = (unint64_t)*a2;
        unint64_t v30 = (unint64_t)a2[1];
        unint64_t v219 = (unint64_t)a2[2];
        unsigned int v32 = *((unsigned __int8 *)a2 + 24);
        unint64_t v34 = (unint64_t)*v221;
        unint64_t v33 = (unint64_t)v221[1];
        uint64_t v35 = (uint64_t)v221[2];
        if (v29 != 2) {
          break;
        }
        if ((v32 & 0xC0) != 0x80) {
          goto LABEL_29;
        }
        if (!v34)
        {
          sub_10053BBA0(0, v221[1], (uint64_t)v221[2], v28);
          goto LABEL_55;
        }
        if (!v31)
        {
          sub_10053BB6C(0, (id)v30, v219, *((unsigned char *)a2 + 24));
          goto LABEL_67;
        }
        uint64_t v46 = (uint64_t)v221[2];
        char v47 = (void *)v30;
        uint64_t v198 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v207 = v48;
        v199 = *(NSString **)(v34 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
        sub_10053BB6C((id)v34, (id)v33, v46, v28);
        uint64_t v49 = v219;
        sub_10053BB6C((id)v31, v47, v219, v32);
        sub_10053BB6C((id)v31, v47, v49, v32);
        sub_10053BB6C((id)v34, (id)v33, v46, v28);
        v216 = (char *)v31;
        v208 = (void **)v47;
        sub_10053BB6C((id)v31, v47, v49, v32);
        uint64_t v200 = v46;
        sub_10053BB6C((id)v34, (id)v33, v46, v28);
        id v50 = [(NSString *)v199 userIdentity];
        id v51 = [v50 userRecordID];

        if (v51)
        {
          id v52 = [v51 recordName];

          uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v55 = v54;

          if (v198 == v53 && v207 == v55)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v58 = v216;
LABEL_66:
            uint64_t v73 = v200;
            sub_10053BBA0((void *)v34, (id)v33, v200, v28);
            uint64_t v74 = v208;
            uint64_t v75 = v219;
            sub_10053BBA0(v58, v208, v219, v32);
            sub_10053BBA0(v58, v74, v75, v32);
            sub_10053BBA0((void *)v34, (id)v33, v73, v28);
            sub_10053BBA0((void *)v34, (id)v33, v73, v28);
            sub_10053BBA0(v58, v74, v75, v32);
LABEL_67:
            uint64_t v18 = v217;
            uint64_t v27 = v215;
            goto LABEL_68;
          }
          char v57 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v58 = v216;
          if (v57) {
            goto LABEL_66;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v58 = v216;
        }
        uint64_t v207 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v63 = v62;
        id v64 = [*(id *)&v58[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant] userIdentity];
        id v65 = [v64 userRecordID];

        if (v65)
        {
          id v66 = [v65 recordName];

          uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v69 = v68;

          if (v207 == v67 && v63 == v69)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v72 = v216;
LABEL_77:
            uint64_t v89 = v200;
            sub_10053BBA0((void *)v34, (id)v33, v200, v28);
            unint64_t v90 = v208;
            uint64_t v91 = v219;
            sub_10053BBA0(v72, v208, v219, v32);
            sub_10053BBA0(v72, v90, v91, v32);
            sub_10053BBA0((void *)v34, (id)v33, v89, v28);
            sub_10053BBA0((void *)v34, (id)v33, v89, v28);
            uint64_t v86 = v72;
            unint64_t v87 = v90;
            uint64_t v88 = v91;
LABEL_78:
            sub_10053BBA0(v86, v87, v88, v32);
            uint64_t v18 = v217;
            uint64_t v27 = v215;
LABEL_79:
            if (v220 != v221)
            {
              long long v92 = *((_OWORD *)v221 + 1);
              uint64_t v93 = v220;
              *(_OWORD *)v220 = *(_OWORD *)v221;
              *((_OWORD *)v93 + 1) = v92;
            }
            v221 += 4;
            v223 = v221;
            unint64_t v76 = (unint64_t)a2;
            goto LABEL_82;
          }
          char v71 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v72 = v216;
          if (v71) {
            goto LABEL_77;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v72 = v216;
        }
        uint64_t v79 = sub_100701F80();
        uint64_t v81 = v80;
        if (v79 == sub_100701F80() && v81 == v82)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v83 = v208;
          uint64_t v84 = v219;
          sub_10053BBA0(v72, v208, v219, v32);
          uint64_t v85 = v200;
          sub_10053BBA0((void *)v34, (id)v33, v200, v28);
          sub_10053BBA0(v72, v83, v84, v32);
          sub_10053BBA0((void *)v34, (id)v33, v85, v28);
          sub_10053BBA0((void *)v34, (id)v33, v85, v28);
          uint64_t v86 = v72;
          unint64_t v87 = v83;
          uint64_t v88 = v84;
          goto LABEL_78;
        }
        LODWORD(v216) = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v94 = v208;
        uint64_t v95 = v219;
        sub_10053BBA0(v72, v208, v219, v32);
        uint64_t v96 = v200;
        sub_10053BBA0((void *)v34, (id)v33, v200, v28);
        sub_10053BBA0(v72, v94, v95, v32);
        sub_10053BBA0((void *)v34, (id)v33, v96, v28);
        sub_10053BBA0((void *)v34, (id)v33, v96, v28);
        sub_10053BBA0(v72, v94, v95, v32);
        uint64_t v18 = v217;
        uint64_t v27 = v215;
        if ((v216 & 1) == 0) {
          goto LABEL_79;
        }
LABEL_68:
        unint64_t v76 = (unint64_t)(a2 + 4);
        if (v220 < a2 || (unint64_t)v220 >= v76 || v220 != a2)
        {
          long long v77 = *((_OWORD *)a2 + 1);
          BOOL v78 = v220;
          *(_OWORD *)v220 = *(_OWORD *)a2;
          *((_OWORD *)v78 + 1) = v77;
        }
LABEL_82:
        v220 += 4;
        v224 = v220;
        if (v221 < v27)
        {
          a2 = (void **)v76;
          if (v76 < (unint64_t)v18) {
            continue;
          }
        }
        goto LABEL_168;
      }
      if (v29 == 1)
      {
        if ((v32 & 0xC0) == 0x40)
        {
          uint64_t v36 = v221[1];
          uint64_t v37 = (void *)v30;
          uint64_t v38 = v219;
          sub_10053BB6C((id)v31, (id)v30, v219, *((unsigned char *)a2 + 24));
          sub_10053BB6C((id)v34, v36, v35, v28);
          unint64_t v39 = v218;
          static Calendar.current.getter();
          v216 = (char *)v31;
          uint64_t v40 = v210;
          Date.init(timeIntervalSinceReferenceDate:)();
          int64_t v41 = v211;
          Date.init(timeIntervalSinceReferenceDate:)();
          uint64_t v43 = v213;
          uint64_t v42 = v214;
          (*v206)(v213, v202, v214);
          v208 = (void **)Calendar.compare(_:to:toGranularity:)();
          (*v205)(v43, v42);
          LODWORD(v207) = v32;
          uint64_t v44 = *v204;
          uint64_t v45 = v212;
          (*v204)(v41, v212);
          v44(v40, v45);
          (*v203)(v39, v209);
          sub_10053BBA0(v216, v37, v38, v207);
          uint64_t v27 = v215;
          uint64_t v18 = v217;
          if (v208 != (void **)-1) {
            goto LABEL_79;
          }
          goto LABEL_68;
        }
LABEL_29:
        if (v32 < 0x40) {
          goto LABEL_79;
        }
        if (v32 < 0xC0) {
          goto LABEL_68;
        }
        char v59 = 1;
      }
      else
      {
        if (v32 < 0x40) {
          goto LABEL_79;
        }
        if (!(v35 | v33 | v34) && v28 == 192)
        {
          sub_10053BB6C(0, 0, 0, 0xC0u);
          uint64_t v27 = v215;
          uint64_t v18 = v217;
          goto LABEL_68;
        }
        if (v32 <= 0xBF)
        {
LABEL_50:
          if (v28 == 192 && v34 == 1 && !(v35 | v33))
          {
            sub_10053BB6C((id)1, 0, 0, 0xC0u);
LABEL_55:
            uint64_t v27 = v215;
            uint64_t v18 = v217;
            goto LABEL_79;
          }
          goto LABEL_68;
        }
        char v59 = 0;
      }
      if (!(v219 | v30 | v31) && v32 == 192) {
        goto LABEL_79;
      }
      if (v31 == 1 && (v219 | v30) == 0 && v32 == 192) {
        char v59 = 1;
      }
      if (v59) {
        goto LABEL_68;
      }
      goto LABEL_50;
    }
    goto LABEL_168;
  }
LABEL_169:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100DAB880(void **a1, void **a2, uint64_t a3, void **a4)
{
  uint64_t v213 = type metadata accessor for Calendar.Component();
  uint64_t v7 = *(void *)(v213 - 8);
  __chkstk_darwin(v213, v8);
  uint64_t v212 = (char *)&v194 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v211 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v211 - 8);
  uint64_t v12 = __chkstk_darwin(v211, v11);
  v210 = (char *)&v194 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v14);
  uint64_t v209 = (char *)&v194 - v15;
  uint64_t v208 = type metadata accessor for Calendar();
  uint64_t v16 = *(void *)(v208 - 8);
  __chkstk_darwin(v208, v17);
  v216 = v18;
  v217 = (char *)&v194 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (char *)a2 - (char *)a1;
  uint64_t v21 = (char *)a2 - (char *)a1 + 31;
  if ((char *)a2 - (char *)a1 >= 0) {
    uint64_t v21 = (char *)a2 - (char *)a1;
  }
  uint64_t v22 = v21 >> 5;
  uint64_t v23 = (char *)v18 - (char *)a2;
  uint64_t v24 = (char *)v18 - (char *)a2 + 31;
  if ((char *)v18 - (char *)a2 >= 0) {
    uint64_t v24 = (char *)v18 - (char *)a2;
  }
  uint64_t v25 = v24 >> 5;
  v220 = a4;
  v221 = a1;
  v224 = a1;
  v223 = a4;
  if (v22 >= v25)
  {
    if (v23 < -31) {
      goto LABEL_157;
    }
    size_t v102 = 4 * v25;
    if (v220 != a2 || &a2[v102] <= v220)
    {
      memmove(v220, a2, v102 * 8);
      uint64_t v18 = v216;
    }
    unint64_t v219 = (char *)&v220[v102];
    v222 = &v220[v102];
    v224 = a2;
    if ((unint64_t)(v23 - 32) > 0xFFFFFFFFFFFFFFC0 || v221 >= a2)
    {
LABEL_156:
      sub_100F69E70((void **)&v224, (const void **)&v223, &v222);
      return 1;
    }
    uint64_t v197 = (uint64_t)CKCurrentUserDefaultName;
    v204 = (void (**)(char *, void, uint64_t))(v7 + 104);
    v203 = (void (**)(char *, uint64_t))(v7 + 8);
    v202 = (void (**)(char *, uint64_t))(v10 + 8);
    v201 = (void (**)(char *, uint64_t))(v16 + 8);
    unsigned int v103 = v18 - 4;
    LODWORD(v200) = enum case for Calendar.Component.day(_:);
    unsigned int v104 = a2;
    while (1)
    {
      unint64_t v105 = v103 + 4;
      uint64_t v107 = v219 - 32;
      unint64_t v106 = *((void *)v219 - 4);
      unint64_t v109 = (unint64_t)*(v104 - 4);
      v104 -= 4;
      unint64_t v108 = v109;
      LODWORD(v218) = *(v219 - 8);
      unsigned int v110 = v218 >> 6;
      if (!(v218 >> 6)) {
        goto LABEL_135;
      }
      unint64_t v111 = *((void *)v219 - 3);
      uint64_t v112 = *((void *)v219 - 2);
      unint64_t v113 = (unint64_t)v104[1];
      uint64_t v114 = (uint64_t)v104[2];
      unsigned int v115 = *((unsigned __int8 *)v104 + 24);
      if (v110 != 2) {
        break;
      }
      if ((v115 & 0xC0) != 0x80) {
        goto LABEL_104;
      }
      if (!v106)
      {
        sub_10053BBA0(0, (id)v111, v112, v218);
        goto LABEL_146;
      }
      if (!v108)
      {
        sub_10053BB6C(0, v104[1], (uint64_t)v104[2], v115);
        goto LABEL_135;
      }
      uint64_t v207 = v103 + 4;
      uint64_t v124 = (char *)v106;
      uint64_t v125 = (char *)v108;
      uint64_t v126 = v112;
      v215 = (void *)v112;
      v216 = (void **)v111;
      id v127 = (void *)v111;
      LODWORD(v199) = v115;
      uint64_t v198 = v114;
      uint64_t v128 = (void *)v113;
      id v205 = (id)v113;
      uint64_t v194 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v196 = v129;
      id v195 = *(id *)&v124[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant];
      uint64_t v130 = v126;
      LOBYTE(v126) = v218;
      sub_10053BB6C(v124, v127, v130, v218);
      v206 = v125;
      id v131 = v128;
      uint64_t v132 = v198;
      LOBYTE(v128) = (_BYTE)v199;
      sub_10053BB6C(v125, v131, v198, v199);
      sub_10053BB6C(v124, v216, (uint64_t)v215, v126);
      id v133 = v125;
      id v134 = v205;
      sub_10053BB6C(v133, v205, v132, v128);
      uint64_t v214 = (void **)v124;
      sub_10053BB6C(v124, v216, (uint64_t)v215, v126);
      sub_10053BB6C(v206, v134, v132, v128);
      id v135 = [v195 userIdentity];
      id v136 = [v135 userRecordID];

      if (v136)
      {
        id v137 = [v136 recordName];

        uint64_t v138 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v140 = v139;

        if (v194 == v138 && v196 == v140)
        {
          swift_bridgeObjectRelease_n();
LABEL_134:
          char v155 = v214;
          v156 = v216;
          sub_10053BBA0(v214, v216, (uint64_t)v215, v218);
          id v157 = v206;
          id v158 = v205;
          uint64_t v159 = v198;
          unsigned __int8 v160 = v199;
          sub_10053BBA0(v206, v205, v198, v199);
          sub_10053BBA0(v157, v158, v159, v160);
          v161 = v155;
          v162 = v156;
          uint64_t v163 = (uint64_t)v215;
          LOBYTE(v156) = v218;
          sub_10053BBA0(v161, v162, (uint64_t)v215, v218);
          sub_10053BBA0(v157, v158, v159, v160);
          sub_10053BBA0(v214, v216, v163, v156);
          unint64_t v105 = v207;
          goto LABEL_135;
        }
        char v142 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v142) {
          goto LABEL_134;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v144 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v146 = v145;
      id v147 = [*(id *)&v206[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant] userIdentity];
      id v148 = [v147 userRecordID];

      if (v148)
      {
        id v149 = [v148 recordName];

        uint64_t v150 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v152 = v151;

        if (v144 == v150 && v146 == v152)
        {
          swift_bridgeObjectRelease_n();
LABEL_144:
          v179 = v214;
          long long v180 = v216;
          sub_10053BBA0(v214, v216, (uint64_t)v215, v218);
          v181 = v206;
          id v182 = v205;
          uint64_t v183 = v198;
          unsigned __int8 v184 = v199;
          sub_10053BBA0(v206, v205, v198, v199);
          sub_10053BBA0(v181, v182, v183, v184);
          uint64_t v185 = v179;
          uint64_t v186 = (uint64_t)v215;
          sub_10053BBA0(v185, v180, (uint64_t)v215, v218);
          sub_10053BBA0(v181, v182, v183, v184);
          unsigned __int8 v175 = v214;
          v176 = v180;
          uint64_t v177 = v186;
          unsigned __int8 v178 = v218;
LABEL_145:
          sub_10053BBA0(v175, v176, v177, v178);
          unint64_t v105 = v207;
LABEL_146:
          v222 = (void **)v107;
          if (v105 < (void **)v219 || v103 >= (void **)v219 || v105 != (void **)v219)
          {
            long long v187 = *((_OWORD *)v107 + 1);
            *(_OWORD *)unsigned int v103 = *(_OWORD *)v107;
            *((_OWORD *)v103 + 1) = v187;
          }
          unsigned int v104 = a2;
          unint64_t v219 = v107;
          goto LABEL_151;
        }
        char v154 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v154) {
          goto LABEL_144;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v165 = sub_100701F80();
      uint64_t v167 = v166;
      if (v165 == sub_100701F80() && v167 == v168)
      {
        swift_bridgeObjectRelease_n();
        v169 = v206;
        uint64_t v170 = v198;
        unsigned __int8 v171 = v199;
        sub_10053BBA0(v206, v205, v198, v199);
        uint64_t v172 = (uint64_t)v215;
        uint64_t v173 = v216;
        unsigned __int8 v174 = v218;
        sub_10053BBA0(v214, v216, (uint64_t)v215, v218);
        sub_10053BBA0(v169, v205, v170, v171);
        sub_10053BBA0(v214, v173, v172, v174);
        sub_10053BBA0(v169, v205, v170, v171);
        unsigned __int8 v175 = v214;
        v176 = v173;
        uint64_t v177 = v172;
        unsigned __int8 v178 = v174;
        goto LABEL_145;
      }
      LODWORD(v196) = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v188 = v206;
      uint64_t v189 = v198;
      unsigned __int8 v190 = v199;
      sub_10053BBA0(v206, v205, v198, v199);
      uint64_t v191 = (uint64_t)v215;
      unsigned __int8 v192 = v218;
      sub_10053BBA0(v214, v216, (uint64_t)v215, v218);
      sub_10053BBA0(v188, v205, v189, v190);
      sub_10053BBA0(v214, v216, v191, v192);
      sub_10053BBA0(v188, v205, v189, v190);
      sub_10053BBA0(v214, v216, v191, v192);
      unint64_t v105 = v207;
      if ((v196 & 1) == 0) {
        goto LABEL_146;
      }
LABEL_135:
      if (v105 != a2 || v103 >= a2)
      {
        long long v164 = *((_OWORD *)v104 + 1);
        *(_OWORD *)unsigned int v103 = *(_OWORD *)v104;
        *((_OWORD *)v103 + 1) = v164;
      }
      v224 = v104;
LABEL_151:
      if (v219 > (char *)v220)
      {
        v103 -= 4;
        a2 = v104;
        if (v104 > v221) {
          continue;
        }
      }
      goto LABEL_156;
    }
    if (v110 == 1)
    {
      if ((v115 & 0xC0) == 0x40)
      {
        uint64_t v214 = (void **)v106;
        v215 = (void *)v112;
        v216 = (void **)v111;
        unsigned __int8 v116 = v115;
        uint64_t v117 = (void *)v113;
        sub_10053BB6C((id)v106, (id)v111, v112, v218);
        sub_10053BB6C((id)v108, v117, v114, v116);
        static Calendar.current.getter();
        uint64_t v118 = v209;
        Date.init(timeIntervalSinceReferenceDate:)();
        v119 = v210;
        Date.init(timeIntervalSinceReferenceDate:)();
        id v121 = v212;
        uint64_t v120 = v213;
        (*v204)(v212, v200, v213);
        uint64_t v207 = v103 + 4;
        v206 = (char *)Calendar.compare(_:to:toGranularity:)();
        (*v203)(v121, v120);
        uint64_t v122 = *v202;
        uint64_t v123 = v211;
        (*v202)(v119, v211);
        v122(v118, v123);
        unint64_t v105 = v207;
        (*v201)(v217, v208);
        sub_10053BBA0(v214, v216, (uint64_t)v215, v218);
        if (v206 != (char *)-1) {
          goto LABEL_146;
        }
        goto LABEL_135;
      }
LABEL_104:
      if (v115 < 0x40) {
        goto LABEL_146;
      }
      int v143 = 0;
    }
    else
    {
      if (v115 < 0x40) {
        goto LABEL_146;
      }
      int v143 = 1;
      if (!(v112 | v111 | v106) && v218 == 192) {
        goto LABEL_135;
      }
    }
    if (v115 < 0xC0) {
      goto LABEL_122;
    }
    if (!(v114 | v113 | v108) && v115 == 192)
    {
      sub_10053BB6C(0, 0, 0, 0xC0u);
      goto LABEL_146;
    }
    if (v115 == 192 && v108 == 1 && !(v114 | v113))
    {
      sub_10053BB6C((id)1, 0, 0, 0xC0u);
    }
    else
    {
LABEL_122:
      if (v143 && v218 == 192 && v106 == 1 && !(v112 | v111)) {
        goto LABEL_146;
      }
    }
    goto LABEL_135;
  }
  if (v20 >= -31)
  {
    size_t v26 = 4 * v22;
    if (v220 != v221 || &v221[v26] <= v220)
    {
      memmove(v220, v221, v26 * 8);
      uint64_t v18 = v216;
    }
    uint64_t v27 = &v220[v26];
    v222 = &v220[v26];
    if ((unint64_t)(v20 - 32) <= 0xFFFFFFFFFFFFFFC0 && a2 < v18)
    {
      uint64_t v200 = CKCurrentUserDefaultName;
      LODWORD(v205) = enum case for Calendar.Component.day(_:);
      v204 = (void (**)(char *, void, uint64_t))(v7 + 104);
      v203 = (void (**)(char *, uint64_t))(v7 + 8);
      v202 = (void (**)(char *, uint64_t))(v10 + 8);
      v201 = (void (**)(char *, uint64_t))(v16 + 8);
      uint64_t v214 = &v220[v26];
      while (1)
      {
        LODWORD(v219) = *((unsigned __int8 *)a2 + 24);
        unsigned int v28 = v219 >> 6;
        if (!(v219 >> 6)) {
          goto LABEL_62;
        }
        unint64_t v29 = (unint64_t)*a2;
        unint64_t v30 = (unint64_t)a2[1];
        uint64_t v218 = (uint64_t)a2[2];
        unint64_t v32 = (unint64_t)*v220;
        unint64_t v31 = (unint64_t)v220[1];
        uint64_t v33 = (uint64_t)v220[2];
        unsigned int v34 = *((unsigned __int8 *)v220 + 24);
        if (v28 != 2) {
          break;
        }
        if ((v34 & 0xC0) != 0x80) {
          goto LABEL_29;
        }
        if (!v29)
        {
          sub_10053BBA0(0, (id)v30, v218, v219);
          goto LABEL_40;
        }
        if (!v32)
        {
          sub_10053BB6C(0, v220[1], (uint64_t)v220[2], *((unsigned char *)v220 + 24));
          goto LABEL_61;
        }
        uint64_t v46 = (uint64_t)v220[2];
        uint64_t v197 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v206 = v47;
        id v199 = *(id *)(v29 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
        uint64_t v48 = v218;
        uint64_t v49 = (char *)v32;
        unsigned __int8 v50 = v219;
        sub_10053BB6C((id)v29, (id)v30, v218, v219);
        sub_10053BB6C(v49, (id)v31, v46, v34);
        sub_10053BB6C((id)v29, (id)v30, v48, v50);
        sub_10053BB6C(v49, (id)v31, v46, v34);
        v215 = (void *)v29;
        uint64_t v207 = (void **)v30;
        unsigned __int8 v51 = v50;
        id v52 = v49;
        sub_10053BB6C((id)v29, (id)v30, v48, v51);
        uint64_t v198 = v46;
        sub_10053BB6C(v49, (id)v31, v46, v34);
        id v53 = [v199 userIdentity];
        id v54 = [v53 userRecordID];

        if (v54)
        {
          id v55 = [v54 recordName];

          uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v58 = v57;

          if (v197 == v56 && v206 == v58)
          {
            swift_bridgeObjectRelease_n();
LABEL_60:
            uint64_t v74 = v215;
            uint64_t v75 = v207;
            uint64_t v76 = v218;
            unsigned __int8 v77 = v219;
            sub_10053BBA0(v215, v207, v218, v219);
            uint64_t v78 = v198;
            sub_10053BBA0(v52, (id)v31, v198, v34);
            sub_10053BBA0(v52, (id)v31, v78, v34);
            sub_10053BBA0(v74, v75, v76, v77);
            sub_10053BBA0(v52, (id)v31, v78, v34);
            sub_10053BBA0(v74, v75, v76, v77);
LABEL_61:
            uint64_t v18 = v216;
            uint64_t v27 = v214;
            goto LABEL_62;
          }
          char v60 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v60) {
            goto LABEL_60;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v64 = v63;
        id v65 = [*(id *)&v52[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant] userIdentity];
        id v66 = [v65 userRecordID];

        if (v66)
        {
          id v67 = [v66 recordName];

          uint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v70 = v69;

          if (v62 == v68 && v64 == v70)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v73 = v207;
LABEL_71:
            uint64_t v93 = v215;
            uint64_t v94 = v218;
            unsigned __int8 v89 = v219;
            sub_10053BBA0(v215, v73, v218, v219);
            uint64_t v95 = v198;
            sub_10053BBA0(v52, (id)v31, v198, v34);
            sub_10053BBA0(v52, (id)v31, v95, v34);
            sub_10053BBA0(v93, v73, v94, v89);
            sub_10053BBA0(v52, (id)v31, v95, v34);
            unint64_t v90 = v93;
            uint64_t v91 = v73;
            uint64_t v92 = v94;
LABEL_72:
            sub_10053BBA0(v90, v91, v92, v89);
            uint64_t v18 = v216;
            uint64_t v27 = v214;
LABEL_73:
            if (v221 != v220)
            {
              long long v96 = *((_OWORD *)v220 + 1);
              size_t v97 = v221;
              *(_OWORD *)v221 = *(_OWORD *)v220;
              *((_OWORD *)v97 + 1) = v96;
            }
            v220 += 4;
            v223 = v220;
            unint64_t v79 = (unint64_t)a2;
            goto LABEL_76;
          }
          char v72 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v73 = v207;
          if (v72) {
            goto LABEL_71;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v73 = v207;
        }
        uint64_t v82 = sub_100701F80();
        uint64_t v84 = v83;
        if (v82 == sub_100701F80() && v84 == v85)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v86 = v198;
          sub_10053BBA0(v52, (id)v31, v198, v34);
          unint64_t v87 = v215;
          uint64_t v88 = v218;
          unsigned __int8 v89 = v219;
          sub_10053BBA0(v215, v73, v218, v219);
          sub_10053BBA0(v52, (id)v31, v86, v34);
          sub_10053BBA0(v87, v73, v88, v89);
          sub_10053BBA0(v52, (id)v31, v86, v34);
          unint64_t v90 = v87;
          uint64_t v91 = v73;
          uint64_t v92 = v88;
          goto LABEL_72;
        }
        LODWORD(v207) = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v98 = v198;
        sub_10053BBA0(v52, (id)v31, v198, v34);
        unint64_t v99 = v215;
        uint64_t v100 = v218;
        unsigned __int8 v101 = v219;
        sub_10053BBA0(v215, v73, v218, v219);
        sub_10053BBA0(v52, (id)v31, v98, v34);
        sub_10053BBA0(v99, v73, v100, v101);
        sub_10053BBA0(v52, (id)v31, v98, v34);
        sub_10053BBA0(v99, v73, v100, v101);
        uint64_t v18 = v216;
        uint64_t v27 = v214;
        if ((v207 & 1) == 0) {
          goto LABEL_73;
        }
LABEL_62:
        unint64_t v79 = (unint64_t)(a2 + 4);
        if (v221 < a2 || (unint64_t)v221 >= v79 || v221 != a2)
        {
          long long v80 = *((_OWORD *)a2 + 1);
          uint64_t v81 = v221;
          *(_OWORD *)v221 = *(_OWORD *)a2;
          *((_OWORD *)v81 + 1) = v80;
        }
LABEL_76:
        v221 += 4;
        v224 = v221;
        if (v220 < v27)
        {
          a2 = (void **)v79;
          if (v79 < (unint64_t)v18) {
            continue;
          }
        }
        goto LABEL_156;
      }
      if (v28 == 1)
      {
        if ((v34 & 0xC0) == 0x40)
        {
          uint64_t v35 = v220[1];
          uint64_t v36 = v218;
          unsigned __int8 v37 = v219;
          sub_10053BB6C((id)v29, (id)v30, v218, v219);
          sub_10053BB6C((id)v32, v35, v33, v34);
          v215 = (void *)v29;
          uint64_t v38 = v217;
          static Calendar.current.getter();
          unint64_t v39 = v209;
          Date.init(timeIntervalSinceReferenceDate:)();
          uint64_t v40 = v210;
          Date.init(timeIntervalSinceReferenceDate:)();
          int64_t v41 = *v204;
          uint64_t v42 = v212;
          uint64_t v207 = (void **)v30;
          uint64_t v43 = v213;
          v41(v212, v205, v213);
          v206 = (char *)Calendar.compare(_:to:toGranularity:)();
          (*v203)(v42, v43);
          uint64_t v44 = *v202;
          uint64_t v45 = v211;
          (*v202)(v40, v211);
          v44(v39, v45);
          (*v201)(v38, v208);
          sub_10053BBA0(v215, v207, v36, v37);
          uint64_t v27 = v214;
          uint64_t v18 = v216;
          if (v206 != (char *)-1) {
            goto LABEL_73;
          }
          goto LABEL_62;
        }
LABEL_29:
        if (v34 < 0x40) {
          goto LABEL_73;
        }
        int v61 = 0;
      }
      else
      {
        if (v34 < 0x40) {
          goto LABEL_73;
        }
        int v61 = 1;
        if (!(v218 | v30 | v29) && v219 == 192) {
          goto LABEL_62;
        }
      }
      if (v34 < 0xC0) {
        goto LABEL_48;
      }
      if (!(v33 | v31 | v32) && v34 == 192)
      {
        sub_10053BB6C(0, 0, 0, 0xC0u);
LABEL_40:
        uint64_t v27 = v214;
        uint64_t v18 = v216;
        goto LABEL_73;
      }
      if (v34 == 192 && v32 == 1 && !(v33 | v31))
      {
        sub_10053BB6C((id)1, 0, 0, 0xC0u);
        uint64_t v27 = v214;
        uint64_t v18 = v216;
      }
      else
      {
LABEL_48:
        if (v61 && v219 == 192 && v29 == 1 && !(v218 | v30)) {
          goto LABEL_73;
        }
      }
      goto LABEL_62;
    }
    goto LABEL_156;
  }
LABEL_157:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100DACDDC(unint64_t *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8;
  uint64_t v7 = __chkstk_darwin(v5, v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v7, v10);
  uint64_t v36 = (uint64_t)&v32 - v12;
  __chkstk_darwin(v11, v13);
  unint64_t v16 = *a1;
  uint64_t v17 = *(void *)(*a1 + 16);
  if (!v17)
  {
    unint64_t v20 = 0;
LABEL_11:
    swift_bridgeObjectRelease();
    return v20;
  }
  unsigned int v34 = (char *)&v32 - v15;
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v19 = *(void *)(v14 + 72);
  swift_bridgeObjectRetain();
  unint64_t v20 = 0;
  unint64_t v35 = v18;
  while (1)
  {
    char v21 = sub_100B81DB0(v16 + v18, a2);
    if (v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    if (v21) {
      break;
    }
    ++v20;
    v18 += v19;
    if (v17 == v20)
    {
      swift_bridgeObjectRelease();
      unint64_t v20 = *(void *)(v16 + 16);
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v20, 1))
  {
    unint64_t v23 = *(void *)(v16 + 16);
    if (v20 + 1 == v23) {
      goto LABEL_11;
    }
    unint64_t v32 = a1;
    uint64_t v33 = v9;
    uint64_t v24 = v19 + v18;
    unint64_t v25 = v20 + 1;
    uint64_t v26 = (uint64_t)v34;
    while (v25 < v23)
    {
      sub_100DBF940(v16 + v24, v26, type metadata accessor for CRLBoardLibraryViewModel.Item);
      char v27 = sub_100B81DB0(v26, a2);
      uint64_t result = sub_100DBFA10(v26, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if ((v27 & 1) == 0)
      {
        if (v25 != v20)
        {
          if ((v20 & 0x8000000000000000) != 0) {
            goto LABEL_31;
          }
          unint64_t v28 = *a1;
          unint64_t v29 = *(void *)(*a1 + 16);
          if (v20 >= v29) {
            goto LABEL_32;
          }
          uint64_t result = sub_100DBF940(v28 + v35 + v20 * v19, v36, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if (v25 >= v29) {
            goto LABEL_33;
          }
          sub_100DBF940(v28 + v24, (uint64_t)v33, type metadata accessor for CRLBoardLibraryViewModel.Item);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          a1 = v32;
          *unint64_t v32 = v28;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_100F68774(v28);
            unint64_t v28 = result;
            *a1 = result;
          }
          if (v20 >= *(void *)(v28 + 16)) {
            goto LABEL_34;
          }
          uint64_t result = sub_10076FB88((uint64_t)v33, v28 + v35 + v20 * v19);
          if (v25 >= *(void *)(*a1 + 16)) {
            goto LABEL_35;
          }
          uint64_t result = sub_10076FB88(v36, *a1 + v24);
          uint64_t v26 = (uint64_t)v34;
        }
        if (__OFADD__(v20++, 1)) {
          goto LABEL_30;
        }
      }
      unint64_t v31 = v25 + 1;
      if (__OFADD__(v25, 1)) {
        goto LABEL_29;
      }
      unint64_t v16 = *a1;
      unint64_t v23 = *(void *)(*a1 + 16);
      ++v25;
      v24 += v19;
      if (v31 == v23) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100DAD138(char *a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5, void *a6, void *a7)
{
  id v286 = a7;
  id v262 = a6;
  uint64_t v274 = a5;
  unint64_t v284 = a4;
  v272 = a2;
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_1016741E0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v256 = (uint64_t)&v251 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v260 = (uint64_t)&v251 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v259 = type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v258 = *(void *)(v259 - 8);
  __chkstk_darwin(v259, v15);
  uint64_t v257 = (uint64_t)&v251 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v277 = (uint64_t)&v251 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v253 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20 - 8, v21);
  uint64_t v255 = (uint64_t)&v251 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v254 = v23;
  __chkstk_darwin(v22, v24);
  uint64_t v26 = (char *)&v251 - v25;
  uint64_t v265 = type metadata accessor for UUID();
  uint64_t v264 = *(void *)(v265 - 8);
  __chkstk_darwin(v265, v27);
  v263 = (char *)&v251 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1005057FC(&qword_10169B5F0);
  __chkstk_darwin(v29 - 8, v30);
  v266 = (char *)&v251 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v268 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v267 = *(void *)(v268 - 8);
  __chkstk_darwin(v268, v32);
  v269 = (char *)&v251 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v285 = (void *)type metadata accessor for AppEntityVisualState();
  uint64_t v279 = *(v285 - 1);
  __chkstk_darwin(v285, v34);
  uint64_t v36 = (char *)&v251 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  uint64_t v39 = __chkstk_darwin(v37 - 8, v38);
  uint64_t v252 = (uint64_t)&v251 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __chkstk_darwin(v39, v41);
  uint64_t v44 = (char *)&v251 - v43;
  __chkstk_darwin(v42, v45);
  v271 = (char *)&v251 - v46;
  uint64_t v47 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v292 = *(unsigned __int8 **)(v47 - 8);
  uint64_t v49 = __chkstk_darwin(v47, v48);
  uint64_t v291 = (uint64_t)&v251 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __chkstk_darwin(v49, v51);
  uint64_t v289 = (uint64_t)&v251 - v53;
  uint64_t v55 = __chkstk_darwin(v52, v54);
  v288 = (char *)&v251 - v56;
  uint64_t v58 = __chkstk_darwin(v55, v57);
  v287 = (char *)&v251 - v59;
  uint64_t v61 = __chkstk_darwin(v58, v60);
  uint64_t v278 = (uint64_t)&v251 - v62;
  uint64_t v64 = __chkstk_darwin(v61, v63);
  uint64_t v281 = (uint64_t)&v251 - v65;
  unint64_t v282 = v66;
  __chkstk_darwin(v64, v67);
  uint64_t v69 = (char *)&v251 - v68;
  uint64_t v70 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v70 - 8, v71);
  uint64_t v73 = (char *)&v251 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = (uint64_t)&a1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_item];
  swift_beginAccess();
  sub_100522E9C(v74, (uint64_t)v73, (uint64_t *)&unk_101676310);
  v283 = (unsigned __int8 *)sub_100DB18E8((uint64_t)a1, (uint64_t)v73, a3, &OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController);
  sub_100522F00((uint64_t)v73, (uint64_t *)&unk_101676310);
  sub_100DBF940(a3, (uint64_t)v69, type metadata accessor for CRLBoardLibraryViewModel.Item);
  uint64_t v290 = v47;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v76 = (uint64_t)v69;
      uint64_t v69 = v271;
      sub_100DBF9A8(v76, (uint64_t)v271, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      uint64_t v77 = sub_100DD4C48();
      uint64_t v79 = v78;
      long long v80 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
    }
    else
    {
      uint64_t v82 = (uint64_t *)&v69[*(int *)(sub_1005057FC(&qword_101677100) + 48)];
      uint64_t v77 = *v82;
      uint64_t v79 = v82[1];
      long long v80 = type metadata accessor for CRLBoardIdentifier;
    }
    sub_100DBFA10((uint64_t)v69, v80);
  }
  else
  {
    uint64_t v77 = sub_100DD8CAC();
    uint64_t v79 = v81;
  }
  sub_100D21BE4(v77, v79);
  sub_100DBF940(a3, (uint64_t)v73, type metadata accessor for CRLBoardLibraryViewModel.Item);
  (*((void (**)(char *, void, uint64_t, uint64_t))v292 + 7))(v73, 0, 1, v290);
  swift_beginAccess();
  sub_1006063BC((uint64_t)v73, v74, (uint64_t *)&unk_101676310);
  swift_endAccess();
  *(void *)&a1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxDelegate + 8] = &off_10152BBA8;
  id v83 = v286;
  swift_unknownObjectWeakAssign();
  uint64_t v84 = &selRef_clearCache;
  id v85 = [v83 collectionView];
  if (!v85) {
    goto LABEL_94;
  }
  uint64_t v86 = v85;
  v270 = v26;
  v273 = v44;
  uint64_t v280 = a3;
  id v87 = [v85 isEditing];

  uint64_t v88 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController;
  unsigned __int8 v89 = *(void **)&a1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController];
  if (!v89)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  unint64_t v90 = *(void (**)(id))((swift_isaMask & *v89) + 0x168);
  uint64_t v91 = v89;
  v90(v87);

  uint64_t v92 = a1;
  [v92 isSelected];
  [v92 isHighlighted];
  uint64_t v276 = v88;
  uint64_t v93 = *(void **)&a1[v88];
  if (!v93)
  {
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  (*(void (**)(void))((swift_isaMask & *v93) + 0x160))();
  AppEntityVisualState.init(isSelected:isHighlighted:isFocused:isDisabled:isEditing:isPrimary:)();

  UIView.updateAppEntityAnnotation(with:)();
  (*(void (**)(char *, void *))(v279 + 8))(v36, v285);
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    uint64_t v94 = (double *)v92;
  }
  else {
    uint64_t v94 = 0;
  }
  v285 = v92;
  unint64_t v95 = v284;
  v275 = a1;
  if (!v94)
  {
LABEL_20:
    unsigned int v103 = 0;
    goto LABEL_21;
  }
  swift_unknownObjectRetain_n();
  id v96 = [v286 collectionView];
  if (!v96) {
    goto LABEL_97;
  }
  size_t v97 = v96;
  id v98 = [v96 indexPathsForSelectedItems];

  if (!v98)
  {

    goto LABEL_20;
  }
  type metadata accessor for IndexPath();
  uint64_t v99 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  __chkstk_darwin(v100, v101);
  v294._object = v272;
  id v102 = v285;
  swift_unknownObjectRetain();
  unsigned int v103 = 0;
  BOOL v104 = sub_101022164((uint64_t (*)(char *))sub_100DBFA90, (uint64_t)&v249, v99);
  swift_bridgeObjectRelease();
  [v94 setSelected:v104];

  swift_unknownObjectRetain();
  uint64_t v105 = (uint64_t)v269;
  UICollectionViewCell.defaultBackgroundConfiguration()();

  if (qword_10166EC58 != -1) {
    goto LABEL_91;
  }
  while (1)
  {
    UIBackgroundConfiguration.cornerRadius.setter();
    id v106 = [v286 v84[50]];
    if (!v106) {
      goto LABEL_103;
    }
    uint64_t v107 = v106;
    id v108 = [v106 backgroundColor];

    UIBackgroundConfiguration.backgroundColor.setter();
    uint64_t v109 = v105;
    uint64_t v110 = v267;
    unint64_t v111 = v266;
    uint64_t v112 = v268;
    (*(void (**)(char *, uint64_t, uint64_t))(v267 + 16))(v266, v109, v268);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v111, 0, 1, v112);
    id v113 = v285;
    swift_unknownObjectRetain();
    UICollectionViewCell.backgroundConfiguration.setter();

    (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v109, v112);
LABEL_21:
    uint64_t v114 = swift_allocObject();
    *(void *)(v114 + 24) = &off_10152AA10;
    swift_unknownObjectWeakInit();
    uint64_t v115 = v280;
    uint64_t v116 = v281;
    sub_100DBF940(v280, v281, type metadata accessor for CRLBoardLibraryViewModel.Item);
    uint64_t v117 = v292[80];
    uint64_t v118 = (v117 + 24) & ~v117;
    uint64_t v279 = v117;
    uint64_t v119 = v117 | 7;
    uint64_t v120 = swift_allocObject();
    *(void *)(v120 + 16) = v114;
    sub_100DBF9A8(v116, v120 + v118, type metadata accessor for CRLBoardLibraryViewModel.Item);
    [self crl_screenScale];
    uint64_t v122 = v121;
    uint64_t v123 = v278;
    sub_100DBF940(v115, v278, type metadata accessor for CRLBoardLibraryViewModel.Item);
    int v124 = swift_getEnumCaseMultiPayload();
    if (!v124)
    {
      v272 = (void *)v120;
      v261 = v94;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      uint64_t v142 = sub_100DD71D4();
      uint64_t v144 = v143;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v142;
      *(void *)(inited + 40) = v144;
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2, 363, (uint64_t)"Unhandled item: %@", 18, 2u, inited);
      LOBYTE(v294._object) = 2;
      v249 = "Unhandled item: %@";
      uint64_t v250 = 18;
      sub_1005598CC(inited, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2, 363);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
      uint64_t v145 = self;
      NSString v146 = String._bridgeToObjectiveC()();
      v292 = (unsigned __int8 *)[v145 systemImageNamed:v146];

      sub_100DBFA10(v123, type metadata accessor for CRLBoardLibraryViewModel.Item);
      int v147 = 0;
      LODWORD(v289) = 0;
      LODWORD(v290) = 0;
      LODWORD(v291) = 0;
      id v148 = 0;
      id v149 = 0;
      uint64_t v150 = 0;
      uint64_t v151 = 0;
      uint64_t v152 = 0;
      uint64_t v153 = 0;
      char v154 = 0;
      unint64_t v155 = 0xE000000000000000;
      uint64_t v156 = 0xE000000000000000;
      goto LABEL_81;
    }
    if (v124 != 1)
    {
      sub_1005057FC(&qword_101677100);
      swift_bridgeObjectRelease();
      id v157 = v270;
      sub_100DBF9A8(v123, (uint64_t)v270, type metadata accessor for CRLBoardIdentifier);
      type metadata accessor for CRLBoardLibrary();
      uint64_t v158 = swift_dynamicCastClass();
      if (!v158)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2, 299, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        LOBYTE(v294._object) = 2;
        v249 = "invalid nil found when unwrapping value";
        uint64_t v250 = 39;
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2, 299);
        sub_100DBFA10((uint64_t)v157, type metadata accessor for CRLBoardIdentifier);

        swift_release();
LABEL_89:

        return;
      }
      uint64_t v159 = v158;
      swift_unknownObjectRetain();
      uint64_t v160 = v260;
      sub_100ED7F04((uint64_t)v157, v260);
      if (v103)
      {
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v258 + 56))(v160, 1, 1, v259);
        swift_unknownObjectRelease();
        swift_release();

        sub_100DBFA10((uint64_t)v157, type metadata accessor for CRLBoardIdentifier);
        sub_100522F00(v160, (uint64_t *)&unk_1016741D0);
        return;
      }
      v261 = v94;
      uint64_t v177 = (int *)v259;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v258 + 56))(v160, 0, 1, v259);
      uint64_t v178 = v257;
      sub_100DBF9A8(v160, v257, type metadata accessor for CRLBoardViewModelMetadata);
      uint64_t v281 = sub_100DC5C40();
      uint64_t v156 = v179;
      v287 = v180;
      unint64_t v282 = v181;
      uint64_t v182 = v256;
      sub_100522E9C(v178 + v177[7], v256, (uint64_t *)&unk_1016741E0);
      uint64_t v183 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v183 - 8) + 48))(v182, 1, v183) == 1)
      {
        uint64_t v184 = sub_100522F00(v182, (uint64_t *)&unk_1016741E0);
        v288 = 0;
        uint64_t v151 = 0;
      }
      else
      {
        uint64_t v151 = *(void *)(v182 + 16);
        v288 = *(char **)(v182 + 8);
        swift_bridgeObjectRetain();
        uint64_t v184 = sub_100DBFA10(v182, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
      }
      LODWORD(v289) = *(unsigned __int8 *)(v178 + 1);
      BOOL v198 = *(unsigned char *)(v178 + v177[8]) == 1;
      v272 = (void *)v120;
      if (v198)
      {
        unint64_t v199 = *(void *)(*(void *)(v159 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController)
                         + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
        __chkstk_darwin(v184, v185);
        v294._object = v157;
        swift_bridgeObjectRetain();
        uint64_t v200 = (char *)sub_100ED4F9C((uint64_t (*)(id *))sub_100DBFA74, (uint64_t)&v249, v199);
        swift_bridgeObjectRelease();
        if (!v200)
        {
          swift_unknownObjectRelease();
          sub_100DBFA10(v257, type metadata accessor for CRLBoardViewModelMetadata);
          sub_100DBFA10((uint64_t)v157, type metadata accessor for CRLBoardIdentifier);
          LODWORD(v290) = 0;
          v292 = 0;
          id v148 = 0;
          id v149 = 0;
          char v154 = 0;
          int v147 = 1;
          LODWORD(v291) = 1;
          uint64_t v152 = v287;
          unint64_t v155 = v282;
          uint64_t v153 = v281;
          uint64_t v150 = v288;
          goto LABEL_81;
        }
        v201 = *(void **)&v200[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_previewImage];
        uint64_t v202 = v257;
        if (v201) {
          v292 = (unsigned __int8 *)[v201 UIImage];
        }
        else {
          v292 = 0;
        }
        uint64_t v150 = v288;
        uint64_t v218 = *(void *)&v275[v276];
        if (!v218) {
          goto LABEL_104;
        }
        char v154 = *(void **)(v218
                        + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionView);
        uint64_t v280 = v151;
        if (v154)
        {
          id v219 = v154;
        }
        else
        {
          id v219 = [objc_allocWithZone((Class)SWAttributionView) init];
          [v219 setTranslatesAutoresizingMaskIntoConstraints:0];
          [v219 setHorizontalAlignment:2];
          [v219 setBackgroundStyle:2];
          char v154 = v219;
        }
        uint64_t v220 = *(void *)&v200[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight];
        id v221 = v219;
        [v221 setHighlight:v220];
        swift_unknownObjectRelease();

        sub_100DBFA10(v202, type metadata accessor for CRLBoardViewModelMetadata);
        sub_100DBFA10((uint64_t)v270, type metadata accessor for CRLBoardIdentifier);

        LODWORD(v290) = 0;
        id v148 = 0;
        id v149 = 0;
        int v147 = 1;
        LODWORD(v291) = 1;
        uint64_t v152 = v287;
        unint64_t v155 = v282;
        uint64_t v153 = v281;
      }
      else
      {
        uint64_t v203 = v252;
        sub_100DBF940((uint64_t)v286 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder, v252, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        uint64_t v204 = sub_1005057FC(&qword_101670F30);
        int v205 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v204 - 8) + 48))(v203, 5, v204);
        sub_100DBFA10(v203, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        uint64_t v280 = v151;
        LODWORD(v290) = v205 != 5;
        if (v205 == 5)
        {
          LODWORD(v291) = 0;
        }
        else
        {
          if (*(unsigned char *)(v178 + v177[9])) {
            int v206 = 2;
          }
          else {
            int v206 = 0;
          }
          LODWORD(v291) = v206;
        }
        uint64_t v207 = type metadata accessor for TaskPriority();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v207 - 8) + 56))(v277, 1, 1, v207);
        uint64_t v208 = v255;
        sub_100DBF940((uint64_t)v157, v255, type metadata accessor for CRLBoardIdentifier);
        type metadata accessor for MainActor();
        uint64_t v209 = v283;
        v210 = v283;
        v292 = (unsigned __int8 *)v262;
        uint64_t v211 = (uint64_t (*)(uint64_t))v272;
        swift_retain();
        uint64_t v212 = static MainActor.shared.getter();
        unint64_t v213 = (*(unsigned __int8 *)(v253 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v253 + 80);
        unint64_t v214 = (v254 + v213 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v215 = (v214 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v216 = swift_allocObject();
        *(void *)(v216 + 16) = v212;
        *(void *)(v216 + 24) = &protocol witness table for MainActor;
        sub_100DBF9A8(v208, v216 + v213, type metadata accessor for CRLBoardIdentifier);
        *(void *)(v216 + v214) = v292;
        *(void *)(v216 + v215) = v122;
        v217 = (uint64_t (**)(uint64_t))(v216 + ((v215 + 15) & 0xFFFFFFFFFFFFFFF8));
        char *v217 = sub_100DBCE00;
        v217[1] = v211;
        sub_1005912D0(v277, (uint64_t)&unk_10169B620, v216);
        swift_unknownObjectRelease();
        swift_release();
        sub_100DBFA10(v257, type metadata accessor for CRLBoardViewModelMetadata);
        sub_100DBFA10((uint64_t)v270, type metadata accessor for CRLBoardIdentifier);
        int v147 = 0;
        id v148 = 0;
        id v149 = 0;
        char v154 = 0;
        v292 = v209;
        uint64_t v152 = v287;
        unint64_t v155 = v282;
        uint64_t v153 = v281;
        uint64_t v150 = v288;
      }
      uint64_t v151 = v280;
      goto LABEL_81;
    }
    v270 = (char *)v119;
    uint64_t v125 = (uint64_t)v273;
    sub_100DBF9A8(v123, (uint64_t)v273, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    unint64_t v126 = *(void *)(v95 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
    swift_bridgeObjectRetain();
    id v127 = v263;
    uint64_t v128 = sub_100DD59E0((uint64_t)v263);
    __chkstk_darwin(v128, v129);
    v294._object = v127;
    uint64_t v130 = (char *)sub_1008E81F4(1, (uint64_t (*)(id))sub_100DBFAAC, (uint64_t)&v249, v126);
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v264 + 8))(v127, v265);
    if (!v130)
    {
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v161 = swift_initStackObject();
      *(_OWORD *)(v161 + 16) = xmmword_10117E810;
      uint64_t v162 = (uint64_t)v271;
      sub_100DBF940(v125, (uint64_t)v271, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      uint64_t v163 = sub_100DD4C48();
      uint64_t v165 = v164;
      sub_100DBFA10(v162, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      *(void *)(v161 + 56) = &type metadata for String;
      *(void *)(v161 + 64) = sub_100528BE4();
      *(void *)(v161 + 32) = v163;
      *(void *)(v161 + 40) = v165;
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2, 256, (uint64_t)"Folder does not exist: %@", 25, 2u, v161);
      LOBYTE(v294._object) = 2;
      v249 = "Folder does not exist: %@";
      uint64_t v250 = 25;
      sub_1005598CC(v161, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2, 256);
      swift_bridgeObjectRelease();
      swift_release();

      sub_100DBFA10(v125, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      return;
    }
    uint64_t v131 = ~v279;
    v271 = v130;
    id v132 = [v130 children];
    type metadata accessor for CRLBoardLibraryViewModelItemNode();
    unint64_t v133 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    v261 = v94;
    v272 = (void *)v120;
    uint64_t v278 = v131;
    if (v133 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v134 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v134 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v135 = (uint64_t)v288;
    uint64_t v105 = (uint64_t)v287;
    if (!v134)
    {
      swift_bridgeObjectRelease();
      uint64_t v94 = _swiftEmptyArrayStorage;
      goto LABEL_43;
    }
    v293 = _swiftEmptyArrayStorage;
    sub_1006BB704(0, v134 & ~(v134 >> 63), 0);
    if (v134 < 0)
    {
      __break(1u);
LABEL_94:
      __break(1u);
      goto LABEL_95;
    }
    uint64_t v136 = 0;
    uint64_t v94 = v293;
    unint64_t v95 = v133 & 0xC000000000000001;
    uint64_t v137 = (v279 + 32) & v131;
    do
    {
      if (v95)
      {
        uint64_t v138 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_100DBF940(v138 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, v291, type metadata accessor for CRLBoardLibraryViewModel.Item);
        swift_unknownObjectRelease();
      }
      else
      {
        sub_100DBF940(*(void *)(v133 + 8 * v136 + 32) + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, v291, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      v293 = v94;
      unint64_t v140 = *((void *)v94 + 2);
      unint64_t v139 = *((void *)v94 + 3);
      if (v140 >= v139 >> 1)
      {
        sub_1006BB704(v139 > 1, v140 + 1, 1);
        uint64_t v94 = v293;
      }
      ++v136;
      *((void *)v94 + 2) = v140 + 1;
      sub_100DBF9A8(v291, (uint64_t)v94 + v137 + *((void *)v292 + 9) * v140, type metadata accessor for CRLBoardLibraryViewModel.Item);
    }
    while (v134 != v136);
    swift_bridgeObjectRelease();
    uint64_t v135 = (uint64_t)v288;
    uint64_t v105 = (uint64_t)v287;
LABEL_43:
    v293 = _swiftEmptyArrayStorage;
    uint64_t v84 = (char **)*((void *)v94 + 2);
    swift_bridgeObjectRetain();
    if (!v84) {
      break;
    }
    unint64_t v166 = 0;
    uint64_t v291 = v135 + 8;
    uint64_t v167 = (v279 + 32) & v278;
    unsigned int v103 = (char *)v94 + v167;
    while (v166 < *((void *)v94 + 2))
    {
      unint64_t v95 = *((void *)v292 + 9);
      sub_100DBF940((uint64_t)&v103[v95 * v166], v105, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100DBF940(v105, v135, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        sub_1005057FC(&qword_101677100);
        swift_bridgeObjectRelease();
        sub_100DBFA10(v135, type metadata accessor for CRLBoardIdentifier);
        sub_100DBF9A8(v105, v289, type metadata accessor for CRLBoardLibraryViewModel.Item);
        uint64_t v168 = v293;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB704(0, *((void *)v168 + 2) + 1, 1);
          uint64_t v168 = v293;
        }
        unint64_t v170 = *((void *)v168 + 2);
        unint64_t v169 = *((void *)v168 + 3);
        if (v170 >= v169 >> 1)
        {
          sub_1006BB704(v169 > 1, v170 + 1, 1);
          uint64_t v168 = v293;
        }
        *((void *)v168 + 2) = v170 + 1;
        sub_100DBF9A8(v289, (uint64_t)v168 + v167 + v170 * v95, type metadata accessor for CRLBoardLibraryViewModel.Item);
        uint64_t v135 = (uint64_t)v288;
        uint64_t v105 = (uint64_t)v287;
      }
      else
      {
        sub_100DBFA10(v135, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100DBFA10(v105, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      if (v84 == (char **)++v166) {
        goto LABEL_54;
      }
    }
    __break(1u);
LABEL_91:
    swift_once();
  }
LABEL_54:
  swift_bridgeObjectRelease();
  uint64_t v171 = *((void *)v293 + 2);
  swift_release();
  if (v171)
  {
    id v172 = [self mainBundle];
    v294._countAndFlagsBits = 0xD00000000000001ALL;
    v294._object = (void *)0x8000000101289AB0;
    v173._countAndFlagsBits = 0x72616F6220756C25;
    v173._object = (void *)0xEC00000029732864;
    v174._countAndFlagsBits = 0;
    v174._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v173, (Swift::String_optional)0, (NSBundle)v172, v174, v294);

    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v175 = swift_allocObject();
    *(_OWORD *)(v175 + 16) = xmmword_10117E810;
    *(void *)(v175 + 56) = &type metadata for Int;
    *(void *)(v175 + 64) = &protocol witness table for Int;
    *(void *)(v175 + 32) = v171;
    v288 = (char *)static String.localizedStringWithFormat(_:_:)();
    v287 = v176;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v288 = 0;
    v287 = 0;
  }
  uint64_t v186 = v272;
  uint64_t v187 = v280;
  uint64_t v188 = type metadata accessor for TaskPriority();
  uint64_t v189 = v277;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v188 - 8) + 56))(v277, 1, 1, v188);
  uint64_t v190 = v281;
  sub_100DBF940(v187, v281, type metadata accessor for CRLBoardLibraryViewModel.Item);
  type metadata accessor for MainActor();
  uint64_t v191 = v283;
  unsigned __int8 v192 = v283;
  id v193 = v262;
  swift_retain();
  id v194 = v286;
  uint64_t v195 = static MainActor.shared.getter();
  uint64_t v196 = (v279 + 80) & v278;
  uint64_t v197 = (void *)swift_allocObject();
  v197[2] = v195;
  v197[3] = &protocol witness table for MainActor;
  v197[4] = v94;
  v197[5] = v193;
  v197[6] = v194;
  v197[7] = v122;
  v197[8] = sub_100DBCE00;
  v197[9] = v186;
  sub_100DBF9A8(v190, (uint64_t)v197 + v196, type metadata accessor for CRLBoardLibraryViewModel.Item);
  sub_1005912D0(v189, (uint64_t)&unk_10169B628, (uint64_t)v197);
  swift_release();

  sub_100DBFA10((uint64_t)v273, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  int v147 = 0;
  LODWORD(v289) = 0;
  LODWORD(v290) = 0;
  LODWORD(v291) = 0;
  uint64_t v150 = 0;
  uint64_t v151 = 0;
  uint64_t v152 = 0;
  uint64_t v153 = 0;
  char v154 = 0;
  unint64_t v155 = 0xE000000000000000;
  v292 = v191;
  uint64_t v156 = 0xE000000000000000;
  id v148 = v288;
  id v149 = v287;
LABEL_81:
  v222 = v285;
  sub_100D21CB8(v153, v156);
  v223 = (void *)((char *)v222
                  + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxLastEditedTimestampText);
  void *v223 = v152;
  v223[1] = v155;
  swift_bridgeObjectRelease();
  v224 = (void *)((char *)v222 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_collaboratorName);
  uint64_t v225 = *(void *)((char *)v222 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_collaboratorName);
  uint64_t v226 = *(void *)((char *)v222 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_collaboratorName + 8);
  void *v224 = v150;
  v224[1] = v151;
  sub_100D22710(v225, v226);
  swift_bridgeObjectRelease();
  v227 = (void *)((char *)v222 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_folderName);
  void *v227 = v148;
  v227[1] = v149;
  swift_bridgeObjectRelease();
  v228 = v275;
  uint64_t v229 = v276;
  uint64_t v230 = *(void *)&v275[v276];
  if (!v230) {
    goto LABEL_98;
  }
  [*(id *)(v230 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView) setImage:v292];
  v231 = *(char **)&v228[v229];
  if (!v231) {
    goto LABEL_99;
  }
  v232 = *(void **)&v231[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionView];
  id v233 = v232;
  v234 = v231;
  id v235 = v154;
  sub_100D20FB8(v154);

  v236 = v285;
  sub_1005D531C(v232);

  v236[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardAccessState] = v291;
  v237 = *(void **)&v228[v229];
  if (!v237) {
    goto LABEL_100;
  }
  id v238 = v237;
  sub_100D21110();

  int v239 = v290;
  v236[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_canShowFavoriteButton] = v290;
  uint64_t v240 = *(void *)&v228[v229];
  if (v240)
  {
    [*(id *)(v240 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton) setHidden:v239 ^ 1u];
    v236[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_isFavorite] = v289;
    sub_100D22880();
    v236[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_dimsThumbnail] = v147;
    uint64_t v241 = *(void *)&v228[v229];
    if (!v241) {
      goto LABEL_102;
    }
    *(unsigned char *)(v241 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_dimsThumbnail) = v147;
    double v242 = 1.0;
    if (v147) {
      double v242 = 0.5;
    }
    [*(id *)(v241 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView) setAlpha:v242];
    uint64_t v243 = type metadata accessor for TaskPriority();
    uint64_t v244 = v277;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v243 - 8) + 56))(v277, 1, 1, v243);
    type metadata accessor for MainActor();
    v245 = v236;
    unint64_t v246 = v284;
    swift_unknownObjectRetain();
    uint64_t v247 = static MainActor.shared.getter();
    v248 = (void *)swift_allocObject();
    v248[2] = v247;
    v248[3] = &protocol witness table for MainActor;
    v248[4] = v245;
    v248[5] = &off_10152AA10;
    v248[6] = v246;
    v248[7] = v274;
    sub_1005912D0(v244, (uint64_t)&unk_10169B618, (uint64_t)v248);

    swift_release();
    swift_release();

    goto LABEL_89;
  }
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
}

void sub_100DAF60C(double *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  id v263 = a7;
  uint64_t v253 = a5;
  uint64_t v261 = a4;
  uint64_t v259 = a2;
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_1016741E0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v239 = (uint64_t)&v234 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v241 = (uint64_t)&v234 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v243 = (int *)type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v242 = *((void *)v243 - 1);
  __chkstk_darwin(v243, v16);
  uint64_t v240 = (uint64_t)&v234 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v255 = (char *)&v234 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v236 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21 - 8, v22);
  uint64_t v238 = (uint64_t)&v234 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v237 = v24;
  __chkstk_darwin(v23, v25);
  uint64_t v256 = (char *)&v234 - v26;
  uint64_t v248 = type metadata accessor for UUID();
  uint64_t v247 = *(void *)(v248 - 8);
  __chkstk_darwin(v248, v27);
  unint64_t v246 = (char *)&v234 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1005057FC(&qword_10169B5F0);
  __chkstk_darwin(v29 - 8, v30);
  v249 = (char *)&v234 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v250 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v32 = *(void *)(v250 - 8);
  __chkstk_darwin(v250, v33);
  uint64_t v254 = (double *)((char *)&v234 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v35 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  uint64_t v37 = __chkstk_darwin(v35 - 8, v36);
  uint64_t v235 = (uint64_t)&v234 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __chkstk_darwin(v37, v39);
  uint64_t v252 = (uint64_t)&v234 - v41;
  __chkstk_darwin(v40, v42);
  uint64_t v251 = (uint64_t)&v234 - v43;
  uint64_t v44 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v269 = *(unsigned __int8 **)(v44 - 8);
  uint64_t v46 = __chkstk_darwin(v44, v45);
  uint64_t v268 = (uint64_t)&v234 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __chkstk_darwin(v46, v48);
  uint64_t v266 = (uint64_t)&v234 - v50;
  uint64_t v52 = __chkstk_darwin(v49, v51);
  uint64_t v265 = (char *)&v234 - v53;
  uint64_t v55 = __chkstk_darwin(v52, v54);
  uint64_t v267 = (double *)((char *)&v234 - v56);
  uint64_t v58 = __chkstk_darwin(v55, v57);
  uint64_t v60 = (char *)&v234 - v59;
  uint64_t v62 = __chkstk_darwin(v58, v61);
  uint64_t v257 = (uint64_t)&v234 - v63;
  uint64_t v258 = v64;
  __chkstk_darwin(v62, v65);
  uint64_t v67 = (char *)&v234 - v66;
  uint64_t v68 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v68 - 8, v69);
  uint64_t v71 = (char *)&v234 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = (uint64_t)a1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_item;
  swift_beginAccess();
  sub_100522E9C(v72, (uint64_t)v71, (uint64_t *)&unk_101676310);
  uint64_t v260 = (unsigned __int8 *)sub_100DB18E8((uint64_t)a1, (uint64_t)v71, a3, &OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController);
  sub_100522F00((uint64_t)v71, (uint64_t *)&unk_101676310);
  uint64_t v264 = a3;
  sub_100DBF940(a3, (uint64_t)v67, type metadata accessor for CRLBoardLibraryViewModel.Item);
  uint64_t v262 = v44;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  id v245 = a6;
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v74 = (uint64_t)v67;
      uint64_t v67 = (char *)v251;
      sub_100DBF9A8(v74, v251, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      uint64_t v75 = sub_100DD4C48();
      uint64_t v77 = v76;
      uint64_t v78 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
    }
    else
    {
      long long v80 = (uint64_t *)&v67[*(int *)(sub_1005057FC(&qword_101677100) + 48)];
      uint64_t v75 = *v80;
      uint64_t v77 = v80[1];
      uint64_t v78 = type metadata accessor for CRLBoardIdentifier;
    }
    sub_100DBFA10((uint64_t)v67, v78);
  }
  else
  {
    uint64_t v75 = sub_100DD8CAC();
    uint64_t v77 = v79;
  }
  unint64_t v81 = (unint64_t)v60;
  sub_1007E3EC4(v75, v77);
  sub_100DBF940(v264, (uint64_t)v71, type metadata accessor for CRLBoardLibraryViewModel.Item);
  (*((void (**)(char *, void, uint64_t, uint64_t))v269 + 7))(v71, 0, 1, v262);
  swift_beginAccess();
  sub_1006063BC((uint64_t)v71, v72, (uint64_t *)&unk_101676310);
  swift_endAccess();
  *(void *)((char *)a1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_crlaxDelegate + 8) = &off_10152BBA8;
  id v82 = v263;
  swift_unknownObjectWeakAssign();
  id v83 = &selRef_clearCache;
  id v84 = [v82 collectionView];
  if (!v84)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  id v85 = v84;
  char v86 = [v84 isEditing];

  sub_1007E3C7C(v86);
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    id v87 = a1;
  }
  else {
    id v87 = 0;
  }
  if (!v87) {
    goto LABEL_18;
  }
  swift_unknownObjectRetain_n();
  id v88 = [v263 collectionView];
  if (!v88)
  {
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  unsigned __int8 v89 = v88;
  id v90 = [v88 indexPathsForSelectedItems];

  if (!v90)
  {

LABEL_18:
    uint64_t v94 = 0;
    goto LABEL_19;
  }
  type metadata accessor for IndexPath();
  uint64_t v91 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  __chkstk_darwin(v92, v93);
  v271._object = v259;
  swift_unknownObjectRetain();
  uint64_t v94 = 0;
  BOOL v95 = sub_101022164((uint64_t (*)(char *))sub_100575C00, (uint64_t)&v232, v91);
  swift_bridgeObjectRelease();
  [v87 setSelected:v95];

  swift_unknownObjectRetain();
  unint64_t v96 = (unint64_t)v254;
  UICollectionViewCell.defaultBackgroundConfiguration()();

  if (qword_10166EC58 != -1) {
    goto LABEL_89;
  }
  while (1)
  {
    UIBackgroundConfiguration.cornerRadius.setter();
    id v97 = [v263 v83[50]];
    if (!v97) {
      goto LABEL_98;
    }
    id v98 = v97;
    id v99 = [v97 backgroundColor];

    UIBackgroundConfiguration.backgroundColor.setter();
    uint64_t v100 = v249;
    uint64_t v101 = v250;
    (*(void (**)(char *, unint64_t, uint64_t))(v32 + 16))(v249, v96, v250);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v100, 0, 1, v101);
    swift_unknownObjectRetain();
    UICollectionViewCell.backgroundConfiguration.setter();

    (*(void (**)(unint64_t, uint64_t))(v32 + 8))(v96, v101);
LABEL_19:
    uint64_t v102 = swift_allocObject();
    *(void *)(v102 + 24) = &off_101515668;
    uint64_t v254 = a1;
    swift_unknownObjectWeakInit();
    uint64_t v103 = v264;
    uint64_t v104 = v257;
    sub_100DBF940(v264, v257, type metadata accessor for CRLBoardLibraryViewModel.Item);
    uint64_t v105 = v269[80];
    unint64_t v96 = v105 | 7;
    uint64_t v106 = swift_allocObject();
    *(void *)(v106 + 16) = v102;
    uint64_t v259 = (void *)v106;
    sub_100DBF9A8(v104, v106 + ((v105 + 24) & ~v105), type metadata accessor for CRLBoardLibraryViewModel.Item);
    [self crl_screenScale];
    uint64_t v108 = v107;
    sub_100DBF940(v103, v81, type metadata accessor for CRLBoardLibraryViewModel.Item);
    int v109 = swift_getEnumCaseMultiPayload();
    if (!v109)
    {
      uint64_t v244 = v87;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      uint64_t v124 = sub_100DD71D4();
      uint64_t v126 = v125;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v124;
      *(void *)(inited + 40) = v126;
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2, 363, (uint64_t)"Unhandled item: %@", 18, 2u, inited);
      LOBYTE(v271._object) = 2;
      v232 = "Unhandled item: %@";
      uint64_t v233 = 18;
      sub_1005598CC(inited, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2, 363);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
      id v127 = self;
      NSString v128 = String._bridgeToObjectiveC()();
      v269 = (unsigned __int8 *)[v127 systemImageNamed:v128];

      sub_100DBFA10(v81, type metadata accessor for CRLBoardLibraryViewModel.Item);
      int v129 = 0;
      LODWORD(v266) = 0;
      LODWORD(v267) = 0;
      LODWORD(v268) = 0;
      uint64_t v130 = 0;
      uint64_t v131 = 0;
      uint64_t v132 = 0;
      uint64_t v133 = 0;
      uint64_t v134 = 0;
      uint64_t v135 = 0;
      uint64_t v136 = 0;
      unint64_t v137 = 0xE000000000000000;
      uint64_t v138 = 0xE000000000000000;
      goto LABEL_80;
    }
    if (v109 != 1)
    {
      sub_1005057FC(&qword_101677100);
      swift_bridgeObjectRelease();
      uint64_t v139 = (uint64_t)v256;
      sub_100DBF9A8(v81, (uint64_t)v256, type metadata accessor for CRLBoardIdentifier);
      type metadata accessor for CRLBoardLibrary();
      uint64_t v140 = swift_dynamicCastClass();
      if (!v140)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2, 299, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        LOBYTE(v271._object) = 2;
        v232 = "invalid nil found when unwrapping value";
        uint64_t v233 = 39;
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2, 299);
        sub_100DBFA10(v139, type metadata accessor for CRLBoardIdentifier);

        swift_release();
LABEL_87:

        return;
      }
      uint64_t v141 = v140;
      swift_unknownObjectRetain();
      uint64_t v142 = v241;
      sub_100ED7F04(v139, v241);
      if (v94)
      {
        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v242 + 56))(v142, 1, 1, v243);
        swift_unknownObjectRelease();
        swift_release();

        sub_100DBFA10(v139, type metadata accessor for CRLBoardIdentifier);
        sub_100522F00(v142, (uint64_t *)&unk_1016741D0);
        return;
      }
      uint64_t v158 = v243;
      (*(void (**)(uint64_t, void, uint64_t, int *))(v242 + 56))(v142, 0, 1, v243);
      uint64_t v159 = v142;
      uint64_t v160 = v240;
      sub_100DBF9A8(v159, v240, type metadata accessor for CRLBoardViewModelMetadata);
      uint64_t v262 = sub_100DC5C40();
      uint64_t v258 = v161;
      uint64_t v265 = v162;
      uint64_t v164 = v163;
      uint64_t v165 = v239;
      sub_100522E9C(v160 + v158[7], v239, (uint64_t *)&unk_1016741E0);
      uint64_t v166 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
      int v167 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v166 - 8) + 48))(v165, 1, v166);
      uint64_t v264 = v164;
      if (v167 == 1)
      {
        uint64_t v168 = sub_100522F00(v165, (uint64_t *)&unk_1016741E0);
        uint64_t v170 = 0;
        uint64_t v171 = 0;
      }
      else
      {
        uint64_t v170 = *(void *)(v165 + 8);
        uint64_t v171 = *(void *)(v165 + 16);
        swift_bridgeObjectRetain();
        uint64_t v168 = sub_100DBFA10(v165, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
      }
      LODWORD(v266) = *(unsigned __int8 *)(v160 + 1);
      BOOL v184 = *(unsigned char *)(v160 + v158[8]) == 1;
      uint64_t v244 = v87;
      if (v184)
      {
        unint64_t v185 = *(void *)(*(void *)(v141 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController)
                         + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
        __chkstk_darwin(v168, v169);
        uint64_t v186 = (uint64_t)v256;
        v271._object = v256;
        swift_bridgeObjectRetain();
        uint64_t v187 = (char *)sub_100ED4F9C((uint64_t (*)(id *))sub_1007E7080, (uint64_t)&v232, v185);
        swift_bridgeObjectRelease();
        if (!v187)
        {
          swift_unknownObjectRelease();
          sub_100DBFA10(v240, type metadata accessor for CRLBoardViewModelMetadata);
          sub_100DBFA10(v186, type metadata accessor for CRLBoardIdentifier);
          LODWORD(v267) = 0;
          v269 = 0;
          uint64_t v130 = 0;
          uint64_t v131 = 0;
          uint64_t v136 = 0;
          int v129 = 1;
          LODWORD(v268) = 1;
          uint64_t v134 = v265;
          uint64_t v133 = v171;
          uint64_t v132 = v170;
          unint64_t v137 = v264;
          uint64_t v135 = v262;
LABEL_79:
          uint64_t v138 = v258;
          goto LABEL_80;
        }
        uint64_t v188 = *(void **)&v187[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_previewImage];
        uint64_t v189 = v240;
        if (v188) {
          v269 = (unsigned __int8 *)[v188 UIImage];
        }
        else {
          v269 = 0;
        }
        uint64_t v206 = *(void *)((char *)v254
                         + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController);
        if (!v206) {
          goto LABEL_99;
        }
        uint64_t v136 = *(void **)(v206
                        + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionView);
        uint64_t v257 = v170;
        uint64_t v252 = v171;
        if (v136)
        {
          id v207 = v136;
        }
        else
        {
          id v207 = [objc_allocWithZone((Class)SWAttributionView) init];
          [v207 setTranslatesAutoresizingMaskIntoConstraints:0];
          [v207 setHorizontalAlignment:2];
          [v207 setBackgroundStyle:2];
          uint64_t v136 = v207;
        }
        uint64_t v208 = *(void *)&v187[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight];
        id v209 = v207;
        [v209 setHighlight:v208];
        swift_unknownObjectRelease();

        sub_100DBFA10(v189, type metadata accessor for CRLBoardViewModelMetadata);
        sub_100DBFA10((uint64_t)v256, type metadata accessor for CRLBoardIdentifier);

        LODWORD(v267) = 0;
        uint64_t v130 = 0;
        uint64_t v131 = 0;
        int v129 = 1;
        LODWORD(v268) = 1;
      }
      else
      {
        uint64_t v190 = v235;
        sub_100DBF940((uint64_t)v263 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder, v235, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        uint64_t v191 = sub_1005057FC(&qword_101670F30);
        int v192 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v191 - 8) + 48))(v190, 5, v191);
        sub_100DBFA10(v190, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        uint64_t v257 = v170;
        uint64_t v252 = v171;
        LODWORD(v267) = v192 != 5;
        if (v192 == 5)
        {
          LODWORD(v268) = 0;
        }
        else
        {
          if (*(unsigned char *)(v160 + v243[9])) {
            int v193 = 2;
          }
          else {
            int v193 = 0;
          }
          LODWORD(v268) = v193;
        }
        uint64_t v194 = type metadata accessor for TaskPriority();
        uint64_t v195 = (uint64_t)v255;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v194 - 8) + 56))(v255, 1, 1, v194);
        uint64_t v196 = v238;
        sub_100DBF940((uint64_t)v256, v238, type metadata accessor for CRLBoardIdentifier);
        type metadata accessor for MainActor();
        uint64_t v197 = v260;
        BOOL v198 = v260;
        v269 = (unsigned __int8 *)v245;
        unint64_t v199 = (uint64_t (*)(uint64_t))v259;
        swift_retain();
        uint64_t v200 = static MainActor.shared.getter();
        unint64_t v201 = (*(unsigned __int8 *)(v236 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v236 + 80);
        unint64_t v202 = (v237 + v201 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v203 = (v202 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v204 = swift_allocObject();
        *(void *)(v204 + 16) = v200;
        *(void *)(v204 + 24) = &protocol witness table for MainActor;
        sub_100DBF9A8(v196, v204 + v201, type metadata accessor for CRLBoardIdentifier);
        *(void *)(v204 + v202) = v269;
        *(void *)(v204 + v203) = v108;
        int v205 = (uint64_t (**)(uint64_t))(v204 + ((v203 + 15) & 0xFFFFFFFFFFFFFFF8));
        *int v205 = sub_100DBCE00;
        v205[1] = v199;
        sub_1005912D0(v195, (uint64_t)&unk_10169B600, v204);
        swift_unknownObjectRelease();
        swift_release();
        sub_100DBFA10(v240, type metadata accessor for CRLBoardViewModelMetadata);
        sub_100DBFA10((uint64_t)v256, type metadata accessor for CRLBoardIdentifier);
        int v129 = 0;
        uint64_t v130 = 0;
        uint64_t v131 = 0;
        uint64_t v136 = 0;
        v269 = v197;
      }
      uint64_t v134 = v265;
      unint64_t v137 = v264;
      uint64_t v135 = v262;
      uint64_t v132 = v257;
      uint64_t v133 = v252;
      goto LABEL_79;
    }
    uint64_t v110 = v252;
    sub_100DBF9A8(v81, v252, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    unint64_t v111 = *(void *)(v261 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
    swift_bridgeObjectRetain();
    uint64_t v112 = v246;
    uint64_t v113 = sub_100DD59E0((uint64_t)v246);
    __chkstk_darwin(v113, v114);
    v271._object = v112;
    uint64_t v32 = sub_1008E81F4(1, (uint64_t (*)(id))sub_100DBD0D0, (uint64_t)&v232, v111);
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v247 + 8))(v112, v248);
    if (!v32)
    {
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v143 = swift_initStackObject();
      *(_OWORD *)(v143 + 16) = xmmword_10117E810;
      uint64_t v144 = v251;
      sub_100DBF940(v110, v251, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      uint64_t v145 = v110;
      uint64_t v146 = sub_100DD4C48();
      uint64_t v148 = v147;
      sub_100DBFA10(v144, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      *(void *)(v143 + 56) = &type metadata for String;
      *(void *)(v143 + 64) = sub_100528BE4();
      *(void *)(v143 + 32) = v146;
      *(void *)(v143 + 40) = v148;
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2, 256, (uint64_t)"Folder does not exist: %@", 25, 2u, v143);
      LOBYTE(v271._object) = 2;
      v232 = "Folder does not exist: %@";
      uint64_t v233 = 25;
      sub_1005598CC(v143, (uint64_t)"configure(cell:at:using:libraryProvider:boardPreviewImageCache:)", 64, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2, 256);
      swift_bridgeObjectRelease();
      swift_release();

      sub_100DBFA10(v145, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      return;
    }
    id v115 = [(id)v32 children];
    type metadata accessor for CRLBoardLibraryViewModelItemNode();
    unint64_t v116 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v244 = v87;
    v249 = (char *)(v105 | 7);
    uint64_t v250 = v105;
    uint64_t v243 = (int *)v32;
    uint64_t v251 = ~v105;
    if (v116 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v117 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v117 = *(void *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    a1 = v267;
    if (!v117)
    {
      swift_bridgeObjectRelease();
      id v87 = _swiftEmptyArrayStorage;
      uint64_t v119 = (uint64_t)v265;
      goto LABEL_41;
    }
    v270 = _swiftEmptyArrayStorage;
    sub_1006BB704(0, v117 & ~(v117 >> 63), 0);
    if (v117 < 0)
    {
      __break(1u);
      goto LABEL_92;
    }
    uint64_t v118 = 0;
    id v87 = v270;
    unint64_t v96 = v116 & 0xC000000000000001;
    uint64_t v119 = (uint64_t)v265;
    do
    {
      if (v96)
      {
        uint64_t v120 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_100DBF940(v120 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, v268, type metadata accessor for CRLBoardLibraryViewModel.Item);
        uint64_t v119 = (uint64_t)v265;
        swift_unknownObjectRelease();
      }
      else
      {
        sub_100DBF940(*(void *)(v116 + 8 * v118 + 32) + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, v268, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      v270 = v87;
      unint64_t v122 = *((void *)v87 + 2);
      unint64_t v121 = *((void *)v87 + 3);
      uint64_t v32 = v122 + 1;
      if (v122 >= v121 >> 1)
      {
        sub_1006BB704(v121 > 1, v122 + 1, 1);
        uint64_t v119 = (uint64_t)v265;
        id v87 = v270;
      }
      ++v118;
      *((void *)v87 + 2) = v32;
      sub_100DBF9A8(v268, (uint64_t)v87 + ((v105 + 32) & ~v105) + *((void *)v269 + 9) * v122, type metadata accessor for CRLBoardLibraryViewModel.Item);
      a1 = v267;
    }
    while (v117 != v118);
    swift_bridgeObjectRelease();
LABEL_41:
    v270 = _swiftEmptyArrayStorage;
    id v83 = (char **)*((void *)v87 + 2);
    swift_bridgeObjectRetain();
    if (!v83) {
      break;
    }
    unint64_t v81 = 0;
    uint64_t v268 = v119 + 8;
    uint64_t v256 = (char *)((v250 + 32) & v251);
    uint64_t v94 = &v256[(void)v87];
    while (v81 < *((void *)v87 + 2))
    {
      unint64_t v96 = *((void *)v269 + 9);
      sub_100DBF940((uint64_t)&v94[v96 * v81], (uint64_t)a1, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100DBF940((uint64_t)a1, v119, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        sub_1005057FC(&qword_101677100);
        swift_bridgeObjectRelease();
        sub_100DBFA10(v119, type metadata accessor for CRLBoardIdentifier);
        sub_100DBF9A8((uint64_t)a1, v266, type metadata accessor for CRLBoardLibraryViewModel.Item);
        id v149 = v270;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB704(0, *((void *)v149 + 2) + 1, 1);
          uint64_t v119 = (uint64_t)v265;
          id v149 = v270;
        }
        unint64_t v151 = *((void *)v149 + 2);
        unint64_t v150 = *((void *)v149 + 3);
        uint64_t v32 = v151 + 1;
        if (v151 >= v150 >> 1)
        {
          sub_1006BB704(v150 > 1, v151 + 1, 1);
          uint64_t v119 = (uint64_t)v265;
          id v149 = v270;
        }
        *((void *)v149 + 2) = v32;
        sub_100DBF9A8(v266, (uint64_t)&v256[(void)v149 + v151 * v96], type metadata accessor for CRLBoardLibraryViewModel.Item);
        a1 = v267;
      }
      else
      {
        sub_100DBFA10(v119, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100DBFA10((uint64_t)a1, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      if (v83 == (char **)++v81) {
        goto LABEL_52;
      }
    }
    __break(1u);
LABEL_89:
    swift_once();
  }
LABEL_52:
  swift_bridgeObjectRelease();
  uint64_t v152 = *((void *)v270 + 2);
  swift_release();
  if (v152)
  {
    id v153 = [self mainBundle];
    v271._countAndFlagsBits = 0xD00000000000001ALL;
    v271._object = (void *)0x8000000101289AB0;
    v154._countAndFlagsBits = 0x72616F6220756C25;
    v154._object = (void *)0xEC00000029732864;
    v155._countAndFlagsBits = 0;
    v155._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v154, (Swift::String_optional)0, (NSBundle)v153, v155, v271);

    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v156 = swift_allocObject();
    *(_OWORD *)(v156 + 16) = xmmword_10117E810;
    *(void *)(v156 + 56) = &type metadata for Int;
    *(void *)(v156 + 64) = &protocol witness table for Int;
    *(void *)(v156 + 32) = v152;
    uint64_t v265 = (char *)static String.localizedStringWithFormat(_:_:)();
    uint64_t v262 = v157;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v265 = 0;
    uint64_t v262 = 0;
  }
  id v172 = v245;
  uint64_t v173 = type metadata accessor for TaskPriority();
  uint64_t v174 = (uint64_t)v255;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v173 - 8) + 56))(v255, 1, 1, v173);
  uint64_t v175 = v257;
  sub_100DBF940(v264, v257, type metadata accessor for CRLBoardLibraryViewModel.Item);
  type metadata accessor for MainActor();
  v176 = v260;
  uint64_t v177 = v260;
  id v178 = v172;
  uint64_t v179 = v259;
  swift_retain();
  id v180 = v263;
  uint64_t v181 = static MainActor.shared.getter();
  uint64_t v182 = (v250 + 80) & v251;
  uint64_t v183 = (void *)swift_allocObject();
  v183[2] = v181;
  v183[3] = &protocol witness table for MainActor;
  v183[4] = v87;
  v183[5] = v178;
  v183[6] = v180;
  v183[7] = v108;
  v183[8] = sub_100DBCE00;
  v183[9] = v179;
  sub_100DBF9A8(v175, (uint64_t)v183 + v182, type metadata accessor for CRLBoardLibraryViewModel.Item);
  sub_1005912D0(v174, (uint64_t)&unk_10169B608, (uint64_t)v183);
  swift_release();

  sub_100DBFA10(v252, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  int v129 = 0;
  LODWORD(v266) = 0;
  LODWORD(v267) = 0;
  LODWORD(v268) = 0;
  uint64_t v132 = 0;
  uint64_t v133 = 0;
  uint64_t v134 = 0;
  uint64_t v135 = 0;
  uint64_t v136 = 0;
  unint64_t v137 = 0xE000000000000000;
  v269 = v176;
  uint64_t v138 = 0xE000000000000000;
  uint64_t v130 = v265;
  uint64_t v131 = v262;
LABEL_80:
  v210 = v254;
  sub_1007E3EE4(v135, v138);
  uint64_t v211 = (void *)((char *)v210
                  + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_crlaxLastEditedTimestampText);
  void *v211 = v134;
  v211[1] = v137;
  swift_bridgeObjectRelease();
  uint64_t v212 = (uint64_t *)((char *)v210
                   + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_collaboratorName);
  uint64_t v213 = *(void *)((char *)v210
                   + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_collaboratorName);
  uint64_t v214 = *(void *)((char *)v210
                   + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_collaboratorName
                   + 8);
  *uint64_t v212 = v132;
  v212[1] = v133;
  sub_1007E3FEC(v213, v214);
  swift_bridgeObjectRelease();
  unint64_t v215 = (void *)((char *)v210 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_folderName);
  void *v215 = v130;
  v215[1] = v131;
  swift_bridgeObjectRelease();
  uint64_t v216 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController;
  uint64_t v217 = *(void *)((char *)v210
                   + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_viewController);
  if (!v217) {
    goto LABEL_94;
  }
  [*(id *)(v217 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView) setImage:v269];
  id v218 = v136;
  sub_1007E4224(v136);
  *((unsigned char *)v210 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_boardAccessState) = v268;
  id v219 = *(void **)((char *)v210 + v216);
  uint64_t v220 = v261;
  uint64_t v221 = v253;
  if (!v219) {
    goto LABEL_95;
  }
  id v222 = v219;
  sub_100D21110();

  int v223 = (int)v267;
  *((unsigned char *)v210 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_canShowFavoriteButton) = (_BYTE)v267;
  uint64_t v224 = *(void *)((char *)v210 + v216);
  if (!v224) {
    goto LABEL_96;
  }
  [*(id *)(v224 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton) setHidden:v223 ^ 1u];
  *((unsigned char *)v210 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_isFavorite) = v266;
  sub_1007E4128();
  *((unsigned char *)v210 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController11iOSListItem_dimsThumbnail) = v129;
  uint64_t v225 = *(void *)((char *)v210 + v216);
  if (v225)
  {
    *(unsigned char *)(v225 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_dimsThumbnail) = v129;
    double v226 = 1.0;
    if (v129) {
      double v226 = 0.5;
    }
    [*(id *)(v225 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView) setAlpha:v226];
    uint64_t v227 = type metadata accessor for TaskPriority();
    uint64_t v228 = (uint64_t)v255;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v227 - 8) + 56))(v255, 1, 1, v227);
    type metadata accessor for MainActor();
    uint64_t v229 = v210;
    swift_unknownObjectRetain();
    uint64_t v230 = static MainActor.shared.getter();
    v231 = (void *)swift_allocObject();
    v231[2] = v230;
    v231[3] = &protocol witness table for MainActor;
    v231[4] = v229;
    v231[5] = &off_101515668;
    v231[6] = v220;
    v231[7] = v221;
    sub_1005912D0(v228, (uint64_t)&unk_10169B5F8, (uint64_t)v231);

    swift_release();
    swift_release();

    goto LABEL_87;
  }
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
}

id sub_100DB18E8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v65 = a1;
  uint64_t v66 = a4;
  uint64_t v69 = type metadata accessor for UUID();
  uint64_t v67 = *(void *)(v69 - 8);
  uint64_t v7 = __chkstk_darwin(v69, v6);
  uint64_t v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v65 - v11;
  uint64_t v13 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v18);
  uint64_t v20 = (char *)&v65 - v19;
  uint64_t v21 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v23 = __chkstk_darwin(v21 - 8, v22);
  uint64_t v68 = (uint64_t)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v70 = (uint64_t)&v65 - v27;
  uint64_t v29 = __chkstk_darwin(v26, v28);
  uint64_t v71 = (uint64_t)&v65 - v30;
  __chkstk_darwin(v29, v31);
  uint64_t v72 = (uint64_t)&v65 - v32;
  uint64_t v33 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v33 - 8, v34);
  uint64_t v36 = (char *)&v65 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1005057FC(&qword_10169B610);
  uint64_t v39 = __chkstk_darwin(v37 - 8, v38);
  uint64_t v41 = (char *)&v65 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = (uint64_t)&v41[*(int *)(v39 + 56)];
  sub_100522E9C(a2, (uint64_t)v41, (uint64_t *)&unk_101676310);
  sub_100DBF940(a3, v42, type metadata accessor for CRLBoardLibraryViewModel.Item);
  uint64_t v43 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v41, 1, v43) == 1) {
    goto LABEL_13;
  }
  sub_100522E9C((uint64_t)v41, (uint64_t)v36, (uint64_t *)&unk_101676310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v45 = type metadata accessor for CRLBoardLibraryViewModel.Item;
  if (!EnumCaseMultiPayload) {
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload == 1)
  {
    int v46 = swift_getEnumCaseMultiPayload();
    uint64_t v45 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
    if (v46 == 1)
    {
      sub_100DBF9A8((uint64_t)v36, (uint64_t)v20, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      sub_100DBF9A8(v42, (uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      sub_100DD59E0((uint64_t)v12);
      sub_100DD59E0((uint64_t)v9);
      char v47 = static UUID.== infix(_:_:)();
      uint64_t v48 = *(void (**)(char *, uint64_t))(v67 + 8);
      uint64_t v49 = v69;
      v48(v9, v69);
      v48(v12, v49);
      sub_100DBFA10((uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      sub_100DBFA10((uint64_t)v20, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      id result = (id)sub_100522F00((uint64_t)v41, (uint64_t *)&unk_101676310);
      if (v47) {
        goto LABEL_19;
      }
      return 0;
    }
    goto LABEL_12;
  }
  sub_1005057FC(&qword_101677100);
  swift_bridgeObjectRelease();
  int v51 = swift_getEnumCaseMultiPayload();
  uint64_t v45 = type metadata accessor for CRLBoardIdentifier;
  if (v51 != 2)
  {
LABEL_12:
    sub_100DBFA10((uint64_t)v36, v45);
LABEL_13:
    uint64_t v62 = &qword_10169B610;
LABEL_14:
    sub_100522F00((uint64_t)v41, v62);
    return 0;
  }
  swift_bridgeObjectRelease();
  uint64_t v52 = v72;
  sub_100DBF9A8((uint64_t)v36, v72, type metadata accessor for CRLBoardIdentifier);
  uint64_t v53 = v42;
  uint64_t v54 = v71;
  sub_100DBF9A8(v53, v71, type metadata accessor for CRLBoardIdentifier);
  char v55 = static UUID.== infix(_:_:)();
  uint64_t v56 = v70;
  sub_100DBF940(v52, v70, type metadata accessor for CRLBoardIdentifier);
  uint64_t v57 = v68;
  sub_100DBF940(v54, v68, type metadata accessor for CRLBoardIdentifier);
  if ((v55 & 1) == 0)
  {
    sub_100DBFA10(v57, type metadata accessor for CRLBoardIdentifier);
    sub_100DBFA10(v56, type metadata accessor for CRLBoardIdentifier);
    sub_100DBFA10(v54, type metadata accessor for CRLBoardIdentifier);
    sub_100DBFA10(v52, type metadata accessor for CRLBoardIdentifier);
    uint64_t v62 = (uint64_t *)&unk_101676310;
    goto LABEL_14;
  }
  uint64_t v58 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v59 = *(void *)(v56 + v58);
  uint64_t v60 = *(void *)(v56 + v58 + 8);
  uint64_t v61 = (void *)(v57 + v58);
  if (v59 == *v61 && v60 == v61[1])
  {
    sub_100DBFA10(v57, type metadata accessor for CRLBoardIdentifier);
    sub_100DBFA10(v56, type metadata accessor for CRLBoardIdentifier);
    sub_100DBFA10(v54, type metadata accessor for CRLBoardIdentifier);
    sub_100DBFA10(v52, type metadata accessor for CRLBoardIdentifier);
    id result = (id)sub_100522F00((uint64_t)v41, (uint64_t *)&unk_101676310);
    goto LABEL_19;
  }
  char v63 = _stringCompareWithSmolCheck(_:_:expecting:)();
  sub_100DBFA10(v57, type metadata accessor for CRLBoardIdentifier);
  sub_100DBFA10(v56, type metadata accessor for CRLBoardIdentifier);
  sub_100DBFA10(v54, type metadata accessor for CRLBoardIdentifier);
  sub_100DBFA10(v52, type metadata accessor for CRLBoardIdentifier);
  id result = (id)sub_100522F00((uint64_t)v41, (uint64_t *)&unk_101676310);
  if ((v63 & 1) == 0) {
    return 0;
  }
LABEL_19:
  uint64_t v64 = *(void *)(v65 + *v66);
  if (v64) {
    return [*(id *)(v64+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView) image];
  }
  __break(1u);
  return result;
}

BOOL sub_100DB1FA4(void *a1, char a2, void *a3, char a4)
{
  switch(a2)
  {
    case 1:
      if (a4 != 1) {
        return 0;
      }
      sub_10050BF48(0, (unint64_t *)&qword_101672E50);
      sub_1007A0914(a1, 1u);
      sub_1007A0914(a3, 1u);
      char v6 = static NSObject.== infix(_:_:)();
      sub_1007A0938(a3, 1u);
      uint64_t v7 = a1;
      unsigned __int8 v8 = 1;
      goto LABEL_8;
    case 2:
      if (a4 != 2) {
        return 0;
      }
      sub_10050BF48(0, (unint64_t *)&qword_101672E50);
      sub_1007A0914(a1, 2u);
      sub_1007A0914(a3, 2u);
      char v6 = static NSObject.== infix(_:_:)();
      sub_1007A0938(a3, 2u);
      uint64_t v7 = a1;
      unsigned __int8 v8 = 2;
      goto LABEL_8;
    case 3:
      if (!a1) {
        return a4 == 3 && !a3;
      }
      if (a1 != (void *)1) {
        return a4 == 3 && a3 == (void *)2;
      }
      return a4 == 3 && a3 == (void *)1;
    default:
      if (a4) {
        return 0;
      }
      sub_10050BF48(0, (unint64_t *)&qword_101672E50);
      sub_1007A0914(a1, 0);
      sub_1007A0914(a3, 0);
      char v6 = static NSObject.== infix(_:_:)();
      sub_1007A0938(a3, 0);
      uint64_t v7 = a1;
      unsigned __int8 v8 = 0;
LABEL_8:
      sub_1007A0938(v7, v8);
      return v6 & 1;
  }
}

double *sub_100DB2190(uint64_t a1, uint64_t a2)
{
  uint64_t v50 = a2;
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v40 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v7 = *(void *)(v49 - 8);
  uint64_t v9 = __chkstk_darwin(v49, v8);
  uint64_t v48 = (uint64_t)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  uint64_t v39 = (uint64_t)v37 - v12;
  uint64_t v13 = type metadata accessor for IndexPath();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005057FC((uint64_t *)&unk_10169B4A0);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v21 = (char *)v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22)
  {
    v37[2] = v2;
    uint64_t v38 = v7;
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    uint64_t v24 = v14 + 16;
    uint64_t v25 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    int v51 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 40);
    uint64_t v26 = *(void *)(v24 + 56);
    uint64_t v45 = (unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 32);
    int v46 = v23;
    uint64_t v43 = (void (**)(char *, char *, uint64_t))(v24 + 16);
    uint64_t v44 = v26;
    uint64_t v47 = v24;
    uint64_t v41 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v42 = (void (**)(char *, uint64_t))(v24 - 8);
    v37[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v27 = _swiftEmptyArrayStorage;
    uint64_t v28 = (uint64_t)v40;
    while (1)
    {
      v46(v21, v25, v13);
      uint64_t v29 = *v51;
      (*v51)(v21, 0, 1, v13);
      if ((*v45)(v21, 1, v13) == 1) {
        break;
      }
      (*v43)(v17, v21, v13);
      id v30 = sub_100D72460();
      dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

      (*v42)(v17, v13);
      if ((*v41)(v28, 1, v49) == 1)
      {
        sub_100522F00(v28, (uint64_t *)&unk_101676310);
      }
      else
      {
        uint64_t v31 = v28;
        uint64_t v32 = v39;
        sub_100DBF9A8(v31, v39, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100DBF9A8(v32, v48, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v27 = (double *)sub_100F6273C(0, *((void *)v27 + 2) + 1, 1, (unint64_t)v27);
        }
        unint64_t v34 = *((void *)v27 + 2);
        unint64_t v33 = *((void *)v27 + 3);
        if (v34 >= v33 >> 1) {
          uint64_t v27 = (double *)sub_100F6273C(v33 > 1, v34 + 1, 1, (unint64_t)v27);
        }
        *((void *)v27 + 2) = v34 + 1;
        sub_100DBF9A8(v48, (uint64_t)v27+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v34, type metadata accessor for CRLBoardLibraryViewModel.Item);
        uint64_t v28 = (uint64_t)v40;
      }
      v25 += v44;
      if (!--v22)
      {
        v29(v21, 1, 1, v13);
        break;
      }
    }
  }
  else
  {
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    swift_bridgeObjectRetain();
    uint64_t v27 = _swiftEmptyArrayStorage;
    v35(v21, 1, 1, v13);
  }
  swift_bridgeObjectRelease();
  return v27;
}

double *sub_100DB262C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v69 = a2;
  uint64_t v58 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v58, v5);
  uint64_t v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v8 = *(void *)(v76 - 8);
  __chkstk_darwin(v76, v9);
  uint64_t v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v71 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for Date();
  uint64_t v20 = __chkstk_darwin(v72, v19);
  uint64_t v68 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v22);
  uint64_t v60 = (char *)&v56 - v24;
  uint64_t v25 = *(void *)(a1 + 16);
  if (!v25) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v26 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v67 = v11 + 8;
  uint64_t v75 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56);
  uint64_t v57 = (void (**)(uint64_t, char *, uint64_t))(v23 + 16);
  uint64_t v66 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  uint64_t v59 = v23;
  uint64_t v65 = (void (**)(char *, uint64_t, uint64_t))(v23 + 32);
  uint64_t v74 = *(void *)(v8 + 72);
  uint64_t v56 = a1;
  swift_bridgeObjectRetain();
  uint64_t v27 = _swiftEmptyArrayStorage;
  long long v62 = xmmword_10117E810;
  unint64_t v61 = (unint64_t)"rrentFocusedBoard %{public}@";
  uint64_t v70 = v15;
  uint64_t v28 = (uint64_t)v71;
  uint64_t v29 = v72;
  uint64_t v64 = v7;
  char v63 = v11;
  do
  {
    sub_100DBF940(v26, (uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      sub_100DBFA10((uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Item);
      (*v75)(v28, 1, 1, v29);
LABEL_4:
      sub_100522F00(v28, &qword_101672EB0);
      goto LABEL_5;
    }
    sub_1005057FC(&qword_101677100);
    swift_bridgeObjectRelease();
    sub_100DBF9A8((uint64_t)v11, (uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
    sub_100ED7F04((uint64_t)v15, (uint64_t)v7);
    uint64_t v73 = v27;
    if (v3)
    {
      uint64_t v79 = v3;
      if (qword_10166FA58 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v30 = (void *)static OS_os_log.crlFolderUI;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v62;
      uint64_t v32 = (uint64_t *)&v15[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
      uint64_t v33 = *v32;
      unint64_t v34 = (void *)v32[1];
      uint64_t v35 = (void *)(v61 | 0x8000000000000000);
      if (*v32 || (uint64_t v36 = 0xD000000000000012, v34 != (void *)0xE000000000000000))
      {
        uint64_t v36 = 0xD000000000000012;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v36 = v33;
          uint64_t v35 = v34;
        }
      }
      id v37 = v30;
      uint64_t v38 = (uint64_t)v70;
      uint64_t v77 = UUID.uuidString.getter();
      uint64_t v78 = v39;
      v40._countAndFlagsBits = 15418;
      v40._object = (void *)0xE200000000000000;
      String.append(_:)(v40);
      v41._countAndFlagsBits = v36;
      v41._object = v35;
      String.append(_:)(v41);
      swift_bridgeObjectRelease();
      v42._countAndFlagsBits = 62;
      v42._object = (void *)0xE100000000000000;
      String.append(_:)(v42);
      uint64_t v43 = v77;
      uint64_t v44 = v78;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v43;
      *(void *)(inited + 40) = v44;
      uint64_t v15 = (char *)v38;
      uint64_t v45 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v37, (uint64_t)&_mh_execute_header, v45, (uint64_t)"Tried to check activityTime for board %@, but could not retrieve metadata for that board.", 89, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      uint64_t v46 = 1;
      swift_arrayDestroy();

      swift_errorRelease();
      sub_100DBFA10(v38, type metadata accessor for CRLBoardIdentifier);
      uint64_t v3 = 0;
      uint64_t v7 = v64;
      uint64_t v11 = v63;
      uint64_t v28 = (uint64_t)v71;
      uint64_t v29 = v72;
    }
    else
    {
      sub_100DBFA10((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
      uint64_t v29 = v72;
      (*v57)(v28, &v7[*(int *)(v58 + 24)], v72);
      sub_100DBFA10((uint64_t)v7, type metadata accessor for CRLBoardViewModelMetadata);
      uint64_t v46 = 0;
    }
    (*v75)(v28, v46, 1, v29);
    if ((*v66)(v28, 1, v29) == 1)
    {
      uint64_t v27 = v73;
      goto LABEL_4;
    }
    uint64_t v79 = 0;
    uint64_t v47 = v29;
    uint64_t v48 = *v65;
    uint64_t v49 = v60;
    (*v65)(v60, v28, v47);
    v48(v68, (uint64_t)v49, v47);
    uint64_t v27 = v73;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v27 = (double *)sub_100F64BB4(0, *((void *)v27 + 2) + 1, 1, (unint64_t)v27);
    }
    unint64_t v51 = *((void *)v27 + 2);
    unint64_t v50 = *((void *)v27 + 3);
    uint64_t v52 = v59;
    if (v51 >= v50 >> 1)
    {
      uint64_t v54 = sub_100F64BB4(v50 > 1, v51 + 1, 1, (unint64_t)v27);
      uint64_t v52 = v59;
      uint64_t v27 = (double *)v54;
    }
    uint64_t v3 = v79;
    *((void *)v27 + 2) = v51 + 1;
    uint64_t v53 = v72;
    v48((char *)v27+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(void *)(v52 + 72) * v51, (uint64_t)v68, v72);
    uint64_t v29 = v53;
    uint64_t v15 = v70;
    uint64_t v28 = (uint64_t)v71;
LABEL_5:
    v26 += v74;
    --v25;
  }
  while (v25);
  swift_bridgeObjectRelease();
  return v27;
}

void sub_100DB2E18(uint64_t a1, void *a2)
{
  id v47 = (id)_convertErrorToNSError(_:)();
  if ([v47 code] == (id)3072)
  {
  }
  else
  {
    sub_10050BF48(0, (unint64_t *)&qword_10167B170);
    uint64_t v3 = (void *)static OS_os_log.default.getter();
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v46 = a2;
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    swift_getErrorValue();
    uint64_t v5 = Error.localizedDescription.getter();
    uint64_t v7 = v6;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v44 = sub_100528BE4();
    *(void *)(inited + 64) = v44;
    *(void *)(inited + 32) = v5;
    *(void *)(inited + 40) = v7;
    uint64_t v8 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Sharing failed with error: %@", 29, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    id v45 = self;
    id v9 = [v45 mainBundle];
    NSString v10 = String._bridgeToObjectiveC()();
    NSString v11 = String._bridgeToObjectiveC()();
    id v12 = [v9 localizedStringForKey:v10 value:v11 table:0];

    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;

    id v16 = [v45 mainBundle];
    NSString v17 = String._bridgeToObjectiveC()();
    NSString v18 = String._bridgeToObjectiveC()();
    id v19 = [v16 localizedStringForKey:v17 value:v18 table:0];

    uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;

    uint64_t v22 = (void *)static OS_os_log.default.getter();
    uint64_t v23 = swift_initStackObject();
    *(_OWORD *)(v23 + 16) = xmmword_10117DF40;
    *(void *)(v23 + 32) = v13;
    *(void *)(v23 + 56) = &type metadata for String;
    *(void *)(v23 + 64) = v44;
    *(void *)(v23 + 40) = v15;
    *(void *)(v23 + 96) = &type metadata for String;
    *(void *)(v23 + 104) = v44;
    *(void *)(v23 + 72) = v43;
    *(void *)(v23 + 80) = v21;
    swift_getErrorValue();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v24 = Error.localizedDescription.getter();
    *(void *)(v23 + 136) = &type metadata for String;
    *(void *)(v23 + 144) = v44;
    *(void *)(v23 + 112) = v24;
    *(void *)(v23 + 120) = v25;
    uint64_t v26 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v22, (uint64_t)&_mh_execute_header, v26, (uint64_t)"Alert: %@ %@ With error: %@", 27, 2, v23);
    swift_setDeallocating();
    swift_arrayDestroy();

    NSString v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v29 = [self alertControllerWithTitle:v27 message:v28 preferredStyle:1];

    id v30 = [v45 mainBundle];
    NSString v31 = String._bridgeToObjectiveC()();
    NSString v32 = String._bridgeToObjectiveC()();
    id v33 = [v30 localizedStringForKey:v31 value:v32 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v35 = [self actionWithTitle:v34 style:0 handler:0];

    [v29 addAction:v35];
    id v36 = [v46 presentedViewController];
    if (v36 && (id v37 = v36, self, v38 = swift_dynamicCastObjCClass(), v37, v38))
    {
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v46;
      *(void *)(v39 + 24) = v29;
      aBlock[4] = sub_100DB3490;
      aBlock[5] = v39;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100679958;
      aBlock[3] = &unk_10152BC08;
      Swift::String v40 = _Block_copy(aBlock);
      id v41 = v46;
      id v42 = v29;
      swift_release();
      [v41 dismissViewControllerAnimated:1 completion:v40];

      _Block_release(v40);
    }
    else
    {
      [v46 presentViewController:v29 animated:1 completion:0];
    }
  }
}

uint64_t sub_100DB3450()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_100DB3490()
{
  return [*(id *)(v0 + 16) presentViewController:*(void *)(v0 + 24) animated:1 completion:0];
}

uint64_t sub_100DB34A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100DB34B8()
{
  return swift_release();
}

uint64_t sub_100DB34C0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void *sub_100DB34F8()
{
  return sub_100D788A0(1);
}

uint64_t sub_100DB3520(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100DB3568()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100DB35A0()
{
  return sub_100DBF830((void (*)(void))&_swift_release, (void (*)(void))&_swift_release, 56);
}

uint64_t sub_100DB35D0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_100528D08;
  *(void *)(v5 + 400) = v4;
  *(_OWORD *)(v5 + 384) = v6;
  *(void *)(v5 + 376) = a1;
  return _swift_task_switch(sub_100D9A234, 0, 0);
}

void sub_100DB3694()
{
  sub_100D72F88(*(void *)(v0 + 16));
}

double *sub_100DB369C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  __chkstk_darwin(v6 - 8, v7);
  id v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v10 = *(void *)(v50 - 8);
  __chkstk_darwin(v50, v11);
  uint64_t v47 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v13 - 8, v14);
  id v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v18 = __chkstk_darwin(v51, v17);
  uint64_t v46 = (uint64_t)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18, v20);
  uint64_t v23 = (char *)&v41 - v22;
  __chkstk_darwin(v21, v24);
  NSString v27 = (char *)&v41 - v26;
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v53 = _swiftEmptyArrayStorage;
  uint64_t v29 = *(void *)(a1 + 16);
  if (v29)
  {
    uint64_t v30 = *(unsigned __int8 *)(v25 + 80);
    uint64_t v52 = *(void *)(v25 + 72);
    uint64_t v43 = (v30 + 32) & ~v30;
    uint64_t v44 = a2;
    uint64_t v31 = v10;
    uint64_t v32 = a1 + v43;
    uint64_t v48 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
    uint64_t v49 = v23 + 8;
    id v45 = v16;
    while (1)
    {
      sub_100DBF940(v32, (uint64_t)v27, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100DBF940((uint64_t)v27, (uint64_t)v23, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        sub_1005057FC(&qword_101677100);
        swift_bridgeObjectRelease();
        sub_100DBF9A8((uint64_t)v23, (uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
        sub_100ED7F04((uint64_t)v16, (uint64_t)v9);
        if (v3)
        {
          swift_errorRelease();
          sub_100DBFA10((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
          (*v48)(v9, 1, 1, v50);
          sub_100522F00((uint64_t)v9, (uint64_t *)&unk_1016741D0);
          uint64_t v3 = 0;
        }
        else
        {
          sub_100DBFA10((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
          uint64_t v33 = v50;
          (*v48)(v9, 0, 1, v50);
          NSString v34 = v9;
          uint64_t v35 = (uint64_t)v9;
          uint64_t v36 = v47;
          sub_100DBF9A8(v35, v47, type metadata accessor for CRLBoardViewModelMetadata);
          LOBYTE(v33) = *(unsigned char *)(v36 + *(int *)(v33 + 32));
          sub_100DBFA10(v36, type metadata accessor for CRLBoardViewModelMetadata);
          if (v33)
          {
            sub_100DBF9A8((uint64_t)v27, v46, type metadata accessor for CRLBoardLibraryViewModel.Item);
            id v37 = v53;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1006BB704(0, *((void *)v37 + 2) + 1, 1);
              id v37 = v53;
            }
            id v9 = v34;
            unint64_t v39 = *((void *)v37 + 2);
            unint64_t v38 = *((void *)v37 + 3);
            unint64_t v40 = v39 + 1;
            id v16 = v45;
            if (v39 >= v38 >> 1)
            {
              unint64_t v42 = v39 + 1;
              sub_1006BB704(v38 > 1, v39 + 1, 1);
              unint64_t v40 = v42;
              id v37 = v53;
            }
            *((void *)v37 + 2) = v40;
            sub_100DBF9A8(v46, (uint64_t)v37 + v43 + v39 * v52, type metadata accessor for CRLBoardLibraryViewModel.Item);
            goto LABEL_8;
          }
          id v9 = v34;
          id v16 = v45;
        }
      }
      else
      {
        sub_100DBFA10((uint64_t)v23, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      sub_100DBFA10((uint64_t)v27, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_8:
      v32 += v52;
      if (!--v29) {
        return v53;
      }
    }
  }
  return result;
}

double *sub_100DB3BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v42 = a2;
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v7 = *(void *)(v41 - 8);
  __chkstk_darwin(v41, v8);
  id v37 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v15 = __chkstk_darwin(v45, v14);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v15, v18);
  uint64_t v21 = (char *)&v37 - v20;
  __chkstk_darwin(v19, v22);
  uint64_t v25 = (char *)&v37 - v24;
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v47 = _swiftEmptyArrayStorage;
  uint64_t v27 = *(void *)(a1 + 16);
  if (v27)
  {
    unint64_t v39 = v21 + 8;
    unint64_t v40 = v13;
    uint64_t v28 = *(void *)(v23 + 72);
    unint64_t v43 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v44 = v6;
    uint64_t v29 = a1 + v43;
    unint64_t v38 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    while (1)
    {
      sub_100DBF940(v29, (uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100DBF940((uint64_t)v25, (uint64_t)v21, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() != 2) {
        break;
      }
      sub_1005057FC(&qword_101677100);
      swift_bridgeObjectRelease();
      uint64_t v30 = (uint64_t)v40;
      sub_100DBF9A8((uint64_t)v21, (uint64_t)v40, type metadata accessor for CRLBoardIdentifier);
      uint64_t v31 = v46;
      sub_100ED7F04(v30, (uint64_t)v6);
      if (v31)
      {
        swift_errorRelease();
        sub_100DBFA10(v30, type metadata accessor for CRLBoardIdentifier);
        (*v38)(v6, 1, 1, v41);
        sub_100522F00((uint64_t)v6, (uint64_t *)&unk_1016741D0);
        uint64_t v46 = 0;
LABEL_7:
        sub_100DBF9A8((uint64_t)v25, (uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
        uint64_t v32 = v47;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB704(0, *((void *)v32 + 2) + 1, 1);
          uint64_t v32 = v47;
        }
        unint64_t v34 = *((void *)v32 + 2);
        unint64_t v33 = *((void *)v32 + 3);
        if (v34 >= v33 >> 1)
        {
          sub_1006BB704(v33 > 1, v34 + 1, 1);
          uint64_t v32 = v47;
        }
        *((void *)v32 + 2) = v34 + 1;
        sub_100DBF9A8((uint64_t)v17, (uint64_t)v32 + v43 + v34 * v28, type metadata accessor for CRLBoardLibraryViewModel.Item);
        uint64_t v6 = v44;
        goto LABEL_12;
      }
      uint64_t v46 = 0;
      sub_100DBFA10(v30, type metadata accessor for CRLBoardIdentifier);
      (*v38)(v6, 0, 1, v41);
      uint64_t v35 = v37;
      sub_100DBF9A8((uint64_t)v6, (uint64_t)v37, type metadata accessor for CRLBoardViewModelMetadata);
      char v36 = *v35;
      sub_100DBFA10((uint64_t)v35, type metadata accessor for CRLBoardViewModelMetadata);
      if ((v36 & 1) == 0) {
        goto LABEL_7;
      }
      sub_100DBFA10((uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_12:
      v29 += v28;
      if (!--v27) {
        return v47;
      }
    }
    sub_100DBFA10((uint64_t)v21, type metadata accessor for CRLBoardLibraryViewModel.Item);
    goto LABEL_7;
  }
  return result;
}

double *sub_100DB4080(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8;
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v23 = _swiftEmptyArrayStorage;
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    uint64_t v21 = v2;
    uint64_t v16 = *(void *)(v11 + 72);
    unint64_t v22 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v17 = a1 + v22;
    uint64_t v18 = _swiftEmptyArrayStorage;
    do
    {
      sub_100DBF940(v17, (uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (sub_1006E63C8((uint64_t)v13, a2))
      {
        sub_100DBF9A8((uint64_t)v13, (uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1006BB704(0, *((void *)v18 + 2) + 1, 1);
        }
        uint64_t v18 = v23;
        unint64_t v20 = *((void *)v23 + 2);
        unint64_t v19 = *((void *)v23 + 3);
        if (v20 >= v19 >> 1)
        {
          sub_1006BB704(v19 > 1, v20 + 1, 1);
          uint64_t v18 = v23;
        }
        *((void *)v18 + 2) = v20 + 1;
        sub_100DBF9A8((uint64_t)v8, (uint64_t)v18 + v22 + v20 * v16, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      else
      {
        sub_100DBFA10((uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      v17 += v16;
      --v15;
    }
    while (v15);
    return v23;
  }
  return result;
}

double *sub_100DB42A8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v60 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5 - 8, v6);
  uint64_t v70 = (uint64_t)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7, v9);
  uint64_t v12 = (char *)&v57 - v11;
  uint64_t v14 = __chkstk_darwin(v10, v13);
  uint64_t v16 = (char *)&v57 - v15;
  __chkstk_darwin(v14, v17);
  uint64_t v71 = (char *)&v57 - v18;
  uint64_t v19 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v21 = __chkstk_darwin(v19, v20);
  uint64_t v61 = (uint64_t)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v21, v23);
  uint64_t v26 = (char *)&v57 - v25;
  __chkstk_darwin(v24, v27);
  uint64_t v30 = (char *)&v57 - v29;
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v73 = _swiftEmptyArrayStorage;
  uint64_t v32 = *(void *)(a1 + 16);
  if (v32)
  {
    uint64_t v57 = v2;
    uint64_t v33 = 0;
    uint64_t v65 = v26 + 8;
    uint64_t v34 = *(unsigned __int8 *)(v28 + 80);
    uint64_t v67 = *(void *)(v28 + 72);
    uint64_t v58 = (v34 + 32) & ~v34;
    uint64_t v66 = a1 + v58;
    uint64_t v72 = a2 + 56;
    uint64_t v35 = (uint64_t)v71;
    uint64_t v59 = v19;
    char v63 = v26;
    uint64_t v64 = (char *)&v57 - v29;
    uint64_t v62 = v32;
    while (1)
    {
      uint64_t v69 = v33;
      sub_100DBF940(v66 + v67 * v33, (uint64_t)v30, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100DBF940((uint64_t)v30, (uint64_t)v26, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        char v36 = type metadata accessor for CRLBoardLibraryViewModel.Item;
        uint64_t v37 = (uint64_t)v26;
LABEL_4:
        sub_100DBFA10(v37, v36);
LABEL_5:
        sub_100DBFA10((uint64_t)v30, type metadata accessor for CRLBoardLibraryViewModel.Item);
        goto LABEL_6;
      }
      sub_1005057FC(&qword_101677100);
      swift_bridgeObjectRelease();
      sub_100DBF9A8((uint64_t)v26, v35, type metadata accessor for CRLBoardIdentifier);
      if (!*(void *)(a2 + 16))
      {
        char v36 = type metadata accessor for CRLBoardIdentifier;
        uint64_t v37 = v35;
        goto LABEL_4;
      }
      Hasher.init(_seed:)();
      type metadata accessor for UUID();
      sub_100DB3520((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
      dispatch thunk of Hashable.hash(into:)();
      uint64_t v68 = type metadata accessor for CRLBoardIdentifierStorage(0);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      Swift::Int v38 = Hasher._finalize()();
      uint64_t v39 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v40 = v38 & ~v39;
      if (((*(void *)(v72 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40) & 1) == 0)
      {
LABEL_21:
        sub_100DBFA10(v35, type metadata accessor for CRLBoardIdentifier);
        uint64_t v26 = v63;
        uint64_t v30 = v64;
        uint64_t v32 = v62;
        goto LABEL_5;
      }
      uint64_t v41 = ~v39;
      uint64_t v42 = *(void *)(v60 + 72);
      while (1)
      {
        uint64_t v43 = a2;
        sub_100DBF940(*(void *)(a2 + 48) + v42 * v40, (uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
        char v44 = static UUID.== infix(_:_:)();
        sub_100DBF940((uint64_t)v16, (uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
        uint64_t v45 = v35;
        uint64_t v46 = (uint64_t)v12;
        uint64_t v47 = v70;
        sub_100DBF940(v45, v70, type metadata accessor for CRLBoardIdentifier);
        if ((v44 & 1) == 0)
        {
          sub_100DBFA10(v47, type metadata accessor for CRLBoardIdentifier);
          sub_100DBFA10(v46, type metadata accessor for CRLBoardIdentifier);
          sub_100DBFA10((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
          a2 = v43;
          uint64_t v12 = (char *)v46;
          uint64_t v35 = (uint64_t)v71;
          goto LABEL_12;
        }
        uint64_t v48 = *(int *)(v68 + 20);
        uint64_t v49 = *(void *)(v46 + v48);
        uint64_t v50 = *(void *)(v46 + v48 + 8);
        uint64_t v51 = (void *)(v47 + v48);
        if (v49 == *v51 && v50 == v51[1]) {
          break;
        }
        char v53 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_100DBFA10(v47, type metadata accessor for CRLBoardIdentifier);
        sub_100DBFA10(v46, type metadata accessor for CRLBoardIdentifier);
        sub_100DBFA10((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
        a2 = v43;
        uint64_t v12 = (char *)v46;
        uint64_t v35 = (uint64_t)v71;
        if (v53) {
          goto LABEL_23;
        }
LABEL_12:
        unint64_t v40 = (v40 + 1) & v41;
        if (((*(void *)(v72 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40) & 1) == 0) {
          goto LABEL_21;
        }
      }
      sub_100DBFA10(v47, type metadata accessor for CRLBoardIdentifier);
      sub_100DBFA10(v46, type metadata accessor for CRLBoardIdentifier);
      sub_100DBFA10((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
      a2 = v43;
      uint64_t v12 = (char *)v46;
      uint64_t v35 = (uint64_t)v71;
LABEL_23:
      sub_100DBFA10(v35, type metadata accessor for CRLBoardIdentifier);
      sub_100DBF9A8((uint64_t)v64, v61, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v54 = v73;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB704(0, *((void *)v54 + 2) + 1, 1);
        uint64_t v54 = v73;
      }
      unint64_t v56 = *((void *)v54 + 2);
      unint64_t v55 = *((void *)v54 + 3);
      if (v56 >= v55 >> 1)
      {
        sub_1006BB704(v55 > 1, v56 + 1, 1);
        uint64_t v54 = v73;
      }
      *((void *)v54 + 2) = v56 + 1;
      sub_100DBF9A8(v61, (uint64_t)v54 + v58 + v56 * v67, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v26 = v63;
      uint64_t v30 = v64;
      uint64_t v32 = v62;
LABEL_6:
      uint64_t v33 = v69 + 1;
      if (v69 + 1 == v32) {
        return v73;
      }
    }
  }
  return result;
}

double *sub_100DB499C(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  char v36 = a2;
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v35 = (uint64_t)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v37, v9);
  uint64_t v34 = (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v30 - v13;
  __chkstk_darwin(v15, v16);
  uint64_t v19 = (char *)&v30 - v18;
  uint64_t result = _swiftEmptyArrayStorage;
  Swift::Int v38 = _swiftEmptyArrayStorage;
  uint64_t v21 = *(void *)(a1 + 16);
  if (v21)
  {
    uint64_t v33 = v14 + 8;
    uint64_t v22 = *(unsigned __int8 *)(v17 + 80);
    uint64_t v23 = *(void *)(v17 + 72);
    uint64_t v30 = v3;
    uint64_t v31 = (v22 + 32) & ~v22;
    uint64_t v24 = a1 + v31;
    uint64_t v25 = _swiftEmptyArrayStorage;
    uint64_t v32 = a3;
    while (1)
    {
      sub_100DBF940(v24, (uint64_t)v19, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100DBF940((uint64_t)v19, (uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        sub_1005057FC(&qword_101677100);
        swift_bridgeObjectRelease();
        uint64_t v26 = v35;
        sub_100DBF9A8((uint64_t)v14, v35, type metadata accessor for CRLBoardIdentifier);
        char v27 = v36(v26);
        sub_100DBFA10(v26, type metadata accessor for CRLBoardIdentifier);
        if (v27)
        {
          sub_100DBF9A8((uint64_t)v19, v34, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1006BB704(0, *((void *)v25 + 2) + 1, 1);
          }
          uint64_t v25 = v38;
          unint64_t v29 = *((void *)v38 + 2);
          unint64_t v28 = *((void *)v38 + 3);
          if (v29 >= v28 >> 1)
          {
            sub_1006BB704(v28 > 1, v29 + 1, 1);
            uint64_t v25 = v38;
          }
          *((void *)v25 + 2) = v29 + 1;
          sub_100DBF9A8(v34, (uint64_t)v25 + v31 + v29 * v23, type metadata accessor for CRLBoardLibraryViewModel.Item);
          goto LABEL_5;
        }
      }
      else
      {
        sub_100DBFA10((uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      sub_100DBFA10((uint64_t)v19, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_5:
      v24 += v23;
      if (!--v21) {
        return v38;
      }
    }
  }
  return result;
}

uint64_t sub_100DB4CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = a2;
  uint64_t v4 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8, v10);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v30 - v15;
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v31 = a1 + 56;
  uint64_t v18 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v32 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v34 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v22 = 0;
  while (1)
  {
    if (v20)
    {
      unint64_t v23 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v24 = v23 | (v22 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v22++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v22 >= v32) {
      goto LABEL_28;
    }
    unint64_t v26 = *(void *)(v31 + 8 * v22);
    if (!v26) {
      break;
    }
LABEL_18:
    unint64_t v20 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v22 << 6);
LABEL_19:
    sub_100DBF940(*(void *)(v34 + 48) + *(void *)(v9 + 72) * v24, (uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
    sub_100DBF9A8((uint64_t)v16, (uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
    sub_100ED7F04((uint64_t)v12, (uint64_t)v7);
    if (v2)
    {
      swift_errorRelease();
      sub_100DBFA10((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
LABEL_27:
      uint64_t v29 = 1;
LABEL_29:
      swift_release();
      return v29;
    }
    char v28 = v7[1];
    sub_100DBFA10((uint64_t)v7, type metadata accessor for CRLBoardViewModelMetadata);
    uint64_t result = sub_100DBFA10((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
    if ((v28 & 1) == 0) {
      goto LABEL_27;
    }
  }
  int64_t v27 = v22 + 1;
  if (v22 + 1 >= v32) {
    goto LABEL_28;
  }
  unint64_t v26 = *(void *)(v31 + 8 * v27);
  if (v26) {
    goto LABEL_17;
  }
  int64_t v27 = v22 + 2;
  if (v22 + 2 >= v32) {
    goto LABEL_28;
  }
  unint64_t v26 = *(void *)(v31 + 8 * v27);
  if (v26) {
    goto LABEL_17;
  }
  int64_t v27 = v22 + 3;
  if (v22 + 3 >= v32) {
    goto LABEL_28;
  }
  unint64_t v26 = *(void *)(v31 + 8 * v27);
  if (v26) {
    goto LABEL_17;
  }
  int64_t v27 = v22 + 4;
  if (v22 + 4 >= v32)
  {
LABEL_28:
    uint64_t v29 = 0;
    goto LABEL_29;
  }
  unint64_t v26 = *(void *)(v31 + 8 * v27);
  if (v26)
  {
LABEL_17:
    int64_t v22 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v22 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v22 >= v32) {
      goto LABEL_28;
    }
    unint64_t v26 = *(void *)(v31 + 8 * v22);
    ++v27;
    if (v26) {
      goto LABEL_18;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_100DB504C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, int a6)
{
  int v83 = a6;
  int v109 = a4;
  uint64_t v82 = a1;
  uint64_t v105 = type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v9 = __chkstk_darwin(v105, v8);
  uint64_t v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  uint64_t v92 = (uint64_t)&v81 - v13;
  uint64_t v14 = sub_1005057FC(&qword_101672EB0);
  uint64_t v16 = __chkstk_darwin(v14 - 8, v15);
  uint64_t v18 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v19);
  uint64_t v21 = (char *)&v81 - v20;
  uint64_t v91 = type metadata accessor for Date();
  uint64_t v22 = *(void *)(v91 - 8);
  uint64_t v24 = __chkstk_darwin(v91, v23);
  id v88 = (char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v26);
  uint64_t v104 = (char *)&v81 - v27;
  uint64_t v28 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v30 = __chkstk_darwin(v28 - 8, v29);
  uint64_t v115 = (uint64_t)&v81 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30, v32);
  uint64_t v87 = (uint64_t)&v81 - v33;
  uint64_t v98 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v35 = __chkstk_darwin(v98, v34);
  uint64_t v99 = (uint64_t)&v81 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v35, v37);
  uint64_t v40 = __chkstk_darwin(v38, v39);
  uint64_t v42 = (char *)&v81 - v41;
  uint64_t v44 = __chkstk_darwin(v40, v43);
  uint64_t v111 = (uint64_t)&v81 - v45;
  uint64_t result = __chkstk_darwin(v44, v46);
  uint64_t v112 = (uint64_t)&v81 - v50;
  uint64_t v81 = a2;
  if (a3 != a2)
  {
    id v90 = v21;
    id v84 = v18;
    char v86 = v11;
    uint64_t v51 = *(void *)(v48 + 72);
    uint64_t v94 = v42 + 8;
    uint64_t v95 = v49;
    uint64_t v89 = v49 + 8;
    uint64_t v110 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
    uint64_t v102 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
    uint64_t v103 = (void (**)(char *, uint64_t, uint64_t))(v22 + 16);
    uint64_t v101 = (void (**)(char *, uint64_t, uint64_t))(v22 + 32);
    id v85 = (void (**)(char *, uint64_t))(v22 + 8);
    uint64_t v96 = v51;
    uint64_t v113 = v51 * a3;
    uint64_t v114 = v51 * (a3 - 1);
    uint64_t v52 = v87;
    char v53 = v88;
    uint64_t v93 = v42;
LABEL_9:
    uint64_t v56 = 0;
    uint64_t v57 = v82;
    uint64_t v97 = a3;
    while (1)
    {
      uint64_t v107 = v57;
      uint64_t v58 = a3;
      uint64_t v59 = v53;
      uint64_t v60 = *v109;
      uint64_t v61 = v112;
      uint64_t v106 = v113 + v56;
      sub_100DBF940(v113 + v56 + v60, v112, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v108 = v56;
      uint64_t v62 = v114 + v56;
      uint64_t v63 = v62 + v60;
      uint64_t v55 = v111;
      sub_100DBF940(v63, v111, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100DBF940(v61, (uint64_t)v42, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() != 2) {
        break;
      }
      sub_1005057FC(&qword_101677100);
      swift_bridgeObjectRelease();
      sub_100DBF9A8((uint64_t)v42, v52, type metadata accessor for CRLBoardIdentifier);
      uint64_t v64 = v95;
      sub_100DBF940(v55, v95, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        sub_100DBFA10(v52, type metadata accessor for CRLBoardIdentifier);
        sub_100DBFA10(v64, type metadata accessor for CRLBoardLibraryViewModel.Item);
        uint64_t v42 = v93;
        uint64_t v55 = v111;
        goto LABEL_22;
      }
      swift_bridgeObjectRelease();
      sub_100DBF9A8(v64, v115, type metadata accessor for CRLBoardIdentifier);
      uint64_t v65 = v92;
      uint64_t v66 = v116;
      sub_100ED7F04(v52, v92);
      if (v66)
      {
        char v53 = v59;
        swift_errorRelease();
        uint64_t v54 = (uint64_t)v90;
        (*v110)(v90, 1, 1, v91);
        uint64_t v116 = 0;
        a3 = v58;
LABEL_5:
        sub_100DBFA10(v115, type metadata accessor for CRLBoardIdentifier);
        sub_100DBFA10(v52, type metadata accessor for CRLBoardIdentifier);
        sub_100522F00(v54, &qword_101672EB0);
        uint64_t v42 = v93;
        goto LABEL_6;
      }
      uint64_t v100 = v62;
      uint64_t v116 = 0;
      uint64_t v67 = *v103;
      uint64_t v54 = (uint64_t)v90;
      uint64_t v68 = v91;
      (*v103)(v90, v65 + *(int *)(v105 + 24), v91);
      sub_100DBFA10(v65, type metadata accessor for CRLBoardViewModelMetadata);
      uint64_t v69 = *v110;
      (*v110)((char *)v54, 0, 1, v68);
      uint64_t v70 = *v102;
      if ((*v102)(v54, 1, v68) == 1)
      {
        a3 = v58;
        char v53 = v88;
        uint64_t v52 = v87;
        goto LABEL_5;
      }
      uint64_t v71 = *v101;
      (*v101)(v104, v54, v68);
      uint64_t v72 = (uint64_t)v86;
      uint64_t v73 = v116;
      sub_100ED7F04(v115, (uint64_t)v86);
      if (v73)
      {
        swift_errorRelease();
        uint64_t v74 = (uint64_t)v84;
        v69(v84, 1, 1, v68);
LABEL_25:
        char v53 = v88;
        uint64_t v52 = v87;
        uint64_t v42 = v93;
        uint64_t v116 = 0;
        (*v85)(v104, v68);
        sub_100DBFA10(v115, type metadata accessor for CRLBoardIdentifier);
        sub_100DBFA10(v52, type metadata accessor for CRLBoardIdentifier);
        sub_100522F00(v74, &qword_101672EB0);
        a3 = v97;
LABEL_6:
        uint64_t v55 = v111;
LABEL_7:
        sub_100DBFA10(v55, type metadata accessor for CRLBoardLibraryViewModel.Item);
        uint64_t result = sub_100DBFA10(v112, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_8:
        ++a3;
        v114 += v96;
        v113 += v96;
        if (a3 == v81) {
          return result;
        }
        goto LABEL_9;
      }
      uint64_t v74 = (uint64_t)v84;
      v67(v84, v72 + *(int *)(v105 + 24), v68);
      sub_100DBFA10(v72, type metadata accessor for CRLBoardViewModelMetadata);
      v69((char *)v74, 0, 1, v68);
      if (v70(v74, 1, v68) == 1) {
        goto LABEL_25;
      }
      char v53 = v88;
      v71(v88, v74, v68);
      uint64_t v42 = v93;
      uint64_t v75 = v104;
      char v76 = static Date.< infix(_:_:)();
      uint64_t v77 = *v85;
      (*v85)(v53, v68);
      v77(v75, v68);
      sub_100DBFA10(v115, type metadata accessor for CRLBoardIdentifier);
      uint64_t v52 = v87;
      sub_100DBFA10(v87, type metadata accessor for CRLBoardIdentifier);
      sub_100DBFA10(v111, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t result = sub_100DBFA10(v112, type metadata accessor for CRLBoardLibraryViewModel.Item);
      a3 = v97;
      uint64_t v116 = 0;
      if ((v76 & 1) == 0) {
        goto LABEL_8;
      }
      uint64_t v78 = *v109;
      if (!*v109)
      {
        __break(1u);
        return result;
      }
      uint64_t v79 = v108;
      uint64_t v80 = v78 + v114 + v108;
      sub_100DBF9A8(v78 + v113 + v108, v99, type metadata accessor for CRLBoardLibraryViewModel.Item);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_100DBF9A8(v99, v80, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v56 = v79 - v96;
      uint64_t v57 = v107 + 1;
      if (a3 == v107 + 1) {
        goto LABEL_8;
      }
    }
    sub_100DBFA10((uint64_t)v42, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_22:
    char v53 = v59;
    a3 = v58;
    goto LABEL_7;
  }
  return result;
}

void sub_100DB5B08(uint64_t *a1, void *a2, int a3)
{
  uint64_t v4 = v3;
  int v296 = a3;
  uint64_t v306 = type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v8 = __chkstk_darwin(v306, v7);
  uint64_t v10 = (char *)&v256 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v8, v11);
  uint64_t v14 = (char *)&v256 - v13;
  uint64_t v16 = __chkstk_darwin(v12, v15);
  uint64_t v18 = (char *)&v256 - v17;
  __chkstk_darwin(v16, v19);
  uint64_t v267 = (uint64_t)&v256 - v20;
  uint64_t v21 = sub_1005057FC(&qword_101672EB0);
  uint64_t v23 = __chkstk_darwin(v21 - 8, v22);
  unint64_t v284 = (char *)&v256 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v23, v25);
  v297 = (char *)&v256 - v27;
  uint64_t v29 = __chkstk_darwin(v26, v28);
  uint64_t v261 = (char *)&v256 - v30;
  __chkstk_darwin(v29, v31);
  uint64_t v266 = (char *)&v256 - v32;
  uint64_t v291 = type metadata accessor for Date();
  uint64_t v33 = *(void *)(v291 - 8);
  uint64_t v35 = __chkstk_darwin(v291, v34);
  uint64_t v281 = (char *)&v256 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v35, v37);
  v295 = (char *)&v256 - v39;
  uint64_t v41 = __chkstk_darwin(v38, v40);
  uint64_t v258 = (char *)&v256 - v42;
  __chkstk_darwin(v41, v43);
  uint64_t v262 = (char *)&v256 - v44;
  uint64_t v45 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v47 = __chkstk_darwin(v45 - 8, v46);
  unint64_t v313 = (unint64_t)&v256 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __chkstk_darwin(v47, v49);
  uint64_t v287 = (uint64_t)&v256 - v51;
  uint64_t v53 = __chkstk_darwin(v50, v52);
  uint64_t v269 = (uint64_t)&v256 - v54;
  __chkstk_darwin(v53, v55);
  uint64_t v57 = (char *)&v256 - v56;
  uint64_t v293 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v280 = *(void *)(v293 - 8);
  uint64_t v59 = __chkstk_darwin(v293, v58);
  uint64_t v273 = (uint64_t)&v256 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __chkstk_darwin(v59, v61);
  uint64_t v298 = (uint64_t)&v256 - v63;
  uint64_t v65 = __chkstk_darwin(v62, v64);
  uint64_t v290 = (uint64_t)&v256 - v66;
  uint64_t v68 = __chkstk_darwin(v65, v67);
  uint64_t v292 = (uint64_t)&v256 - v69;
  uint64_t v71 = __chkstk_darwin(v68, v70);
  v309 = (char *)&v256 - v72;
  uint64_t v74 = __chkstk_darwin(v71, v73);
  uint64_t v308 = (uint64_t)&v256 - v75;
  uint64_t v77 = __chkstk_darwin(v74, v76);
  uint64_t v270 = (uint64_t)&v256 - v78;
  uint64_t v80 = __chkstk_darwin(v77, v79);
  uint64_t v274 = (uint64_t)&v256 - v81;
  uint64_t v83 = __chkstk_darwin(v80, v82);
  uint64_t v277 = (uint64_t)&v256 - v84;
  uint64_t v86 = __chkstk_darwin(v83, v85);
  uint64_t v276 = (uint64_t)&v256 - v87;
  uint64_t v89 = __chkstk_darwin(v86, v88);
  uint64_t v264 = (uint64_t)&v256 - v90;
  __chkstk_darwin(v89, v91);
  uint64_t v279 = (char *)&v256 - v92;
  v311 = a1;
  Swift::Int v93 = a1[1];
  v312 = a2;
  Swift::Int v94 = _minimumMergeRunLength(_:)(v93);
  if (v94 >= v93)
  {
    if (v93 < 0) {
      goto LABEL_177;
    }
    uint64_t v102 = v93;
    if (v93)
    {
      uint64_t v103 = v312;
      uint64_t v104 = v312;
      sub_100DB504C(0, v102, 1, v311, (uint64_t)v104, v296 & 1);
    }
    else
    {
      uint64_t v103 = v312;
    }
    goto LABEL_153;
  }
  Swift::Int v259 = v94;
  if (v93 >= 0) {
    uint64_t v95 = v93;
  }
  else {
    uint64_t v95 = v93 + 1;
  }
  if (v93 < -1) {
    goto LABEL_185;
  }
  unint64_t v282 = v10;
  id v286 = v14;
  Swift::Int v300 = v93;
  if (v93 < 2)
  {
    uint64_t v105 = _swiftEmptyArrayStorage;
    unint64_t v278 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v280 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v280 + 80));
    uint64_t v101 = (uint64_t)v279;
    if (v93 != 1)
    {
      unint64_t v183 = *(void *)&_swiftEmptyArrayStorage[2];
      int v109 = _swiftEmptyArrayStorage;
      if (v183 < 2) {
        goto LABEL_151;
      }
      goto LABEL_139;
    }
    uint64_t v265 = _swiftEmptyArrayStorage;
    uint64_t v99 = v290;
    uint64_t v100 = v292;
  }
  else
  {
    uint64_t v96 = v95 >> 1;
    uint64_t v97 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v97 + 16) = v96;
    uint64_t v98 = *(unsigned __int8 *)(v280 + 80);
    uint64_t v265 = (double *)v97;
    unint64_t v278 = v97 + ((v98 + 32) & ~v98);
    uint64_t v99 = v290;
    uint64_t v100 = v292;
    uint64_t v101 = (uint64_t)v279;
  }
  uint64_t v106 = v297;
  int64_t v107 = 0;
  uint64_t v268 = v274 + 8;
  uint64_t v263 = v270 + 8;
  v307 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56);
  v304 = (void (**)(char *, uint64_t, uint64_t))(v33 + 16);
  v303 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  v299 = (void (**)(char *, uint64_t, uint64_t))(v33 + 32);
  v283 = (void (**)(char *, uint64_t))(v33 + 8);
  uint64_t v288 = v100 + 8;
  uint64_t v285 = v99 + 8;
  uint64_t v257 = v18;
  uint64_t v108 = v295;
  Swift::String v271 = v57;
  int v109 = _swiftEmptyArrayStorage;
  uint64_t v110 = v300;
  while (1)
  {
    int64_t v111 = v107;
    int64_t v112 = v107 + 1;
    Swift::Int v300 = v110;
    int64_t v275 = v107;
    if (v107 + 1 >= v110)
    {
      int64_t v144 = v107 + 1;
      uint64_t v145 = (uint64_t)v309;
      goto LABEL_54;
    }
    uint64_t v113 = v106;
    uint64_t v114 = *v311;
    uint64_t v115 = *(void *)(v280 + 72);
    int64_t v116 = v107;
    sub_100DBF940(*v311 + v115 * v112, v101, type metadata accessor for CRLBoardLibraryViewModel.Item);
    uint64_t v289 = v114;
    uint64_t v117 = v264;
    sub_100DBF940(v114 + v115 * v116, v264, type metadata accessor for CRLBoardLibraryViewModel.Item);
    LODWORD(v310) = sub_100D70BBC(v101, v117, v312, v296 & 1);
    uint64_t v145 = (uint64_t)v309;
    if (v4)
    {
      sub_100DBFA10(v117, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100DBFA10(v101, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_136:
      swift_bridgeObjectRelease();
      uint64_t v105 = v265;
LABEL_152:
      v105[2] = 0.0;
      uint64_t v103 = v312;

      swift_bridgeObjectRelease();
LABEL_153:

      return;
    }
    sub_100DBFA10(v117, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100DBFA10(v101, type metadata accessor for CRLBoardLibraryViewModel.Item);
    int64_t v144 = v116 + 2;
    if (v116 + 2 >= v300)
    {
      int64_t v111 = v116;
      uint64_t v106 = v113;
      if (v310) {
        goto LABEL_40;
      }
LABEL_52:
      uint64_t v108 = v295;
      goto LABEL_54;
    }
    uint64_t v260 = v109;
    int64_t v294 = 0;
    uint64_t v302 = v115 * v112;
    uint64_t v118 = v289;
    unint64_t v301 = v115 * v144;
    Swift::Int v119 = v300;
    while (1)
    {
      uint64_t v305 = v144;
      uint64_t v120 = v276;
      sub_100DBF940(v118 + v301, v276, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v121 = v277;
      sub_100DBF940(v118 + v302, v277, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v122 = v120;
      uint64_t v123 = v274;
      sub_100DBF940(v122, v274, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        uint64_t v130 = v123;
LABEL_25:
        sub_100DBFA10(v130, type metadata accessor for CRLBoardLibraryViewModel.Item);
        int v131 = 0;
        goto LABEL_28;
      }
      sub_1005057FC(&qword_101677100);
      swift_bridgeObjectRelease();
      uint64_t v124 = v123;
      uint64_t v125 = (uint64_t)v271;
      sub_100DBF9A8(v124, (uint64_t)v271, type metadata accessor for CRLBoardIdentifier);
      uint64_t v126 = v270;
      sub_100DBF940(v121, v270, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        sub_100DBFA10(v125, type metadata accessor for CRLBoardIdentifier);
        uint64_t v130 = v126;
        goto LABEL_25;
      }
      swift_bridgeObjectRelease();
      sub_100DBF9A8(v126, v269, type metadata accessor for CRLBoardIdentifier);
      uint64_t v127 = v267;
      uint64_t v128 = v294;
      sub_100ED7F04(v125, v267);
      uint64_t v129 = (uint64_t)v266;
      if (v128)
      {
        swift_errorRelease();
        (*v307)(v129, 1, 1, v291);
        int64_t v294 = 0;
LABEL_27:
        sub_100DBFA10(v269, type metadata accessor for CRLBoardIdentifier);
        sub_100DBFA10((uint64_t)v271, type metadata accessor for CRLBoardIdentifier);
        sub_100522F00(v129, &qword_101672EB0);
        int v131 = 0;
        goto LABEL_28;
      }
      int64_t v294 = 0;
      uint64_t v132 = *v304;
      uint64_t v133 = v291;
      (*v304)(v266, v127 + *(int *)(v306 + 24), v291);
      sub_100DBFA10(v127, type metadata accessor for CRLBoardViewModelMetadata);
      uint64_t v134 = *v307;
      (*v307)(v129, 0, 1, v133);
      uint64_t v135 = *v303;
      if ((*v303)(v129, 1, v133) == 1) {
        goto LABEL_27;
      }
      uint64_t v136 = *v299;
      (*v299)(v262, v129, v133);
      uint64_t v137 = (uint64_t)v257;
      uint64_t v138 = v294;
      sub_100ED7F04(v269, (uint64_t)v257);
      if (v138)
      {
        swift_errorRelease();
        uint64_t v139 = (uint64_t)v261;
        v134((uint64_t)v261, 1, 1, v133);
        int64_t v294 = 0;
LABEL_34:
        Swift::Int v119 = v300;
        (*v283)(v262, v133);
        sub_100DBFA10(v269, type metadata accessor for CRLBoardIdentifier);
        sub_100DBFA10((uint64_t)v271, type metadata accessor for CRLBoardIdentifier);
        sub_100522F00(v139, &qword_101672EB0);
        int v131 = 0;
        goto LABEL_28;
      }
      int64_t v294 = 0;
      uint64_t v139 = (uint64_t)v261;
      v132(v261, v137 + *(int *)(v306 + 24), v133);
      sub_100DBFA10(v137, type metadata accessor for CRLBoardViewModelMetadata);
      v134(v139, 0, 1, v133);
      if (v135(v139, 1, v133) == 1) {
        goto LABEL_34;
      }
      uint64_t v140 = v258;
      v136(v258, v139, v133);
      Swift::Int v119 = v300;
      uint64_t v141 = v262;
      int v131 = static Date.< infix(_:_:)();
      uint64_t v142 = *v283;
      uint64_t v143 = v291;
      (*v283)(v140, v291);
      v142(v141, v143);
      sub_100DBFA10(v269, type metadata accessor for CRLBoardIdentifier);
      sub_100DBFA10((uint64_t)v271, type metadata accessor for CRLBoardIdentifier);
LABEL_28:
      sub_100DBFA10(v277, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100DBFA10(v276, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if ((v310 ^ v131)) {
        break;
      }
      int64_t v144 = v305 + 1;
      v118 += v115;
      uint64_t v145 = (uint64_t)v309;
      if (v119 == v305 + 1)
      {
        int64_t v144 = v119;
        uint64_t v4 = v294;
        int v109 = v260;
        uint64_t v101 = (uint64_t)v279;
        goto LABEL_39;
      }
    }
    uint64_t v4 = v294;
    uint64_t v145 = (uint64_t)v309;
    int v109 = v260;
    uint64_t v101 = (uint64_t)v279;
    int64_t v144 = v305;
LABEL_39:
    uint64_t v106 = v297;
    int64_t v111 = v275;
    if ((v310 & 1) == 0) {
      goto LABEL_52;
    }
LABEL_40:
    if (v144 < v111) {
      goto LABEL_180;
    }
    if (v111 >= v144) {
      goto LABEL_52;
    }
    uint64_t v260 = v109;
    int64_t v294 = v4;
    uint64_t v146 = 0;
    uint64_t v147 = v115 * (v144 - 1);
    int64_t v148 = v144 * v115;
    int64_t v149 = v111;
    uint64_t v150 = v111 * v115;
    do
    {
      if (v149 != v144 + v146 - 1)
      {
        uint64_t v152 = v289;
        if (!v289) {
          goto LABEL_183;
        }
        int64_t v153 = v144;
        unint64_t v154 = v289 + v150;
        uint64_t v310 = v289 + v147;
        sub_100DBF9A8(v289 + v150, v273, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (v150 < v147 || v154 >= v152 + v148)
        {
          uint64_t v151 = v310;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v151 = v310;
          if (v150 != v147) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        sub_100DBF9A8(v273, v151, type metadata accessor for CRLBoardLibraryViewModel.Item);
        uint64_t v145 = (uint64_t)v309;
        int64_t v144 = v153;
        int64_t v111 = v275;
      }
      ++v149;
      --v146;
      v147 -= v115;
      v148 -= v115;
      v150 += v115;
    }
    while (v149 < v144 + v146);
    uint64_t v4 = v294;
    uint64_t v108 = v295;
    uint64_t v106 = v297;
    int v109 = v260;
    uint64_t v101 = (uint64_t)v279;
LABEL_54:
    if (v144 < v300)
    {
      if (__OFSUB__(v144, v111)) {
        goto LABEL_176;
      }
      if (v144 - v111 < v259) {
        break;
      }
    }
LABEL_85:
    if (v144 < v111) {
      goto LABEL_172;
    }
    uint64_t v305 = v144;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v109 = sub_100F697E0(0, *((void *)v109 + 2) + 1, 1, (uint64_t)v109);
    }
    unint64_t v182 = *((void *)v109 + 2);
    unint64_t v181 = *((void *)v109 + 3);
    unint64_t v183 = v182 + 1;
    BOOL v184 = v312;
    if (v182 >= v181 >> 1)
    {
      int v109 = sub_100F697E0((double *)(v181 > 1), v182 + 1, 1, (uint64_t)v109);
      BOOL v184 = v312;
    }
    *((void *)v109 + 2) = v183;
    unint64_t v185 = v109 + 4;
    uint64_t v186 = (int64_t *)&v109[2 * v182 + 4];
    uint64_t v187 = v305;
    int64_t *v186 = v111;
    v186[1] = v187;
    if (v182)
    {
      uint64_t v310 = (uint64_t)(v109 + 4);
      while (1)
      {
        unint64_t v188 = v183 - 1;
        if (v183 >= 4)
        {
          int v193 = &v185[2 * v183];
          uint64_t v194 = *((void *)v193 - 8);
          uint64_t v195 = *((void *)v193 - 7);
          BOOL v199 = __OFSUB__(v195, v194);
          uint64_t v196 = v195 - v194;
          if (v199) {
            goto LABEL_160;
          }
          uint64_t v198 = *((void *)v193 - 6);
          uint64_t v197 = *((void *)v193 - 5);
          BOOL v199 = __OFSUB__(v197, v198);
          uint64_t v191 = v197 - v198;
          char v192 = v199;
          if (v199) {
            goto LABEL_161;
          }
          unint64_t v200 = v183 - 2;
          unint64_t v201 = &v185[2 * v183 - 4];
          uint64_t v203 = *(void *)v201;
          uint64_t v202 = *((void *)v201 + 1);
          BOOL v199 = __OFSUB__(v202, v203);
          uint64_t v204 = v202 - v203;
          if (v199) {
            goto LABEL_163;
          }
          BOOL v199 = __OFADD__(v191, v204);
          uint64_t v205 = v191 + v204;
          if (v199) {
            goto LABEL_166;
          }
          if (v205 >= v196)
          {
            int v223 = &v185[2 * v188];
            uint64_t v225 = *(void *)v223;
            uint64_t v224 = *((void *)v223 + 1);
            BOOL v199 = __OFSUB__(v224, v225);
            uint64_t v226 = v224 - v225;
            if (v199) {
              goto LABEL_170;
            }
            BOOL v216 = v191 < v226;
            goto LABEL_123;
          }
        }
        else
        {
          if (v183 != 3)
          {
            uint64_t v217 = *((void *)v109 + 4);
            uint64_t v218 = *((void *)v109 + 5);
            BOOL v199 = __OFSUB__(v218, v217);
            uint64_t v210 = v218 - v217;
            char v211 = v199;
            goto LABEL_117;
          }
          uint64_t v190 = *((void *)v109 + 4);
          uint64_t v189 = *((void *)v109 + 5);
          BOOL v199 = __OFSUB__(v189, v190);
          uint64_t v191 = v189 - v190;
          char v192 = v199;
        }
        if (v192) {
          goto LABEL_162;
        }
        unint64_t v200 = v183 - 2;
        uint64_t v206 = &v185[2 * v183 - 4];
        uint64_t v208 = *(void *)v206;
        uint64_t v207 = *((void *)v206 + 1);
        BOOL v209 = __OFSUB__(v207, v208);
        uint64_t v210 = v207 - v208;
        char v211 = v209;
        if (v209) {
          goto LABEL_165;
        }
        uint64_t v212 = &v185[2 * v188];
        uint64_t v214 = *(void *)v212;
        uint64_t v213 = *((void *)v212 + 1);
        BOOL v199 = __OFSUB__(v213, v214);
        uint64_t v215 = v213 - v214;
        if (v199) {
          goto LABEL_168;
        }
        if (__OFADD__(v210, v215)) {
          goto LABEL_169;
        }
        if (v210 + v215 >= v191)
        {
          BOOL v216 = v191 < v215;
LABEL_123:
          if (v216) {
            unint64_t v188 = v200;
          }
          goto LABEL_125;
        }
LABEL_117:
        if (v211) {
          goto LABEL_164;
        }
        id v219 = &v185[2 * v188];
        uint64_t v221 = *(void *)v219;
        uint64_t v220 = *((void *)v219 + 1);
        BOOL v199 = __OFSUB__(v220, v221);
        uint64_t v222 = v220 - v221;
        if (v199) {
          goto LABEL_167;
        }
        if (v222 < v210) {
          goto LABEL_134;
        }
LABEL_125:
        unint64_t v227 = v188 - 1;
        if (v188 - 1 >= v183)
        {
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
          goto LABEL_179;
        }
        uint64_t v228 = *v311;
        if (!*v311) {
          goto LABEL_182;
        }
        uint64_t v229 = v109;
        uint64_t v230 = &v185[2 * v227];
        uint64_t v231 = *(void *)v230;
        unint64_t v232 = v188;
        uint64_t v233 = &v185[2 * v188];
        uint64_t v234 = *((void *)v233 + 1);
        uint64_t v235 = *(void *)(v280 + 72);
        unint64_t v236 = v228 + v235 * *(void *)v230;
        unint64_t v237 = v228 + v235 * *(void *)v233;
        unint64_t v301 = v228 + v235 * v234;
        uint64_t v302 = v237;
        uint64_t v238 = v184;
        sub_100DA948C(v236, v302, v301, v278, v238, v296 & 1, (uint64_t (*)(char *, char *, id, void))sub_100D70BBC);
        if (v4) {
          goto LABEL_136;
        }
        uint64_t v108 = v295;
        if (v234 < v231) {
          goto LABEL_157;
        }
        if (v232 > *((void *)v229 + 2)) {
          goto LABEL_158;
        }
        *(void *)uint64_t v230 = v231;
        *(void *)(v310 + 16 * v227 + 8) = v234;
        unint64_t v239 = *((void *)v229 + 2);
        if (v232 >= v239) {
          goto LABEL_159;
        }
        int v109 = v229;
        unint64_t v183 = v239 - 1;
        memmove(v233, v233 + 2, 16 * (v239 - 1 - v232));
        unint64_t v185 = (double *)v310;
        *((void *)v109 + 2) = v239 - 1;
        BOOL v184 = v312;
        uint64_t v106 = v297;
        uint64_t v101 = (uint64_t)v279;
        if (v239 <= 2) {
          goto LABEL_134;
        }
      }
    }
    unint64_t v183 = 1;
LABEL_134:
    uint64_t v110 = v311[1];
    int64_t v107 = v305;
    if (v305 >= v110)
    {
      uint64_t v105 = v265;
      if (v183 < 2)
      {
LABEL_151:
        swift_bridgeObjectRelease();
        goto LABEL_152;
      }
LABEL_139:
      uint64_t v240 = (uint64_t *)*v311;
      uint64_t v265 = v105;
      v311 = v240;
      while (1)
      {
        unint64_t v241 = v183 - 2;
        if (v183 < 2) {
          goto LABEL_171;
        }
        if (!v240) {
          goto LABEL_184;
        }
        double v242 = v109[2 * v241 + 4];
        double v243 = v109[2 * v183 + 3];
        double v244 = v109[2 * v183 + 2];
        uint64_t v245 = *(void *)(v280 + 72);
        unint64_t v313 = (unint64_t)v240 + v245 * *(void *)&v242;
        unint64_t v246 = (unint64_t)v240 + v245 * *(void *)&v244;
        unint64_t v247 = (unint64_t)v240 + v245 * *(void *)&v243;
        uint64_t v248 = v312;
        sub_100DA948C(v313, v246, v247, v278, v248, v296 & 1, (uint64_t (*)(char *, char *, id, void))sub_100D70BBC);
        if (v4) {
          goto LABEL_136;
        }
        if (*(uint64_t *)&v243 < *(uint64_t *)&v242) {
          goto LABEL_173;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v109 = sub_100F69F28((uint64_t)v109);
        }
        if (v241 >= *((void *)v109 + 2)) {
          goto LABEL_174;
        }
        v249 = &v109[2 * v241 + 4];
        double *v249 = v242;
        v249[1] = v243;
        unint64_t v250 = *((void *)v109 + 2);
        if (v183 > v250) {
          goto LABEL_175;
        }
        memmove(&v109[2 * v183 + 2], &v109[2 * v183 + 4], 16 * (v250 - v183));
        *((void *)v109 + 2) = v250 - 1;
        unint64_t v183 = v250 - 1;
        uint64_t v105 = v265;
        uint64_t v240 = v311;
        if (v250 <= 2) {
          goto LABEL_151;
        }
      }
    }
  }
  if (__OFADD__(v111, v259)) {
    goto LABEL_178;
  }
  int64_t v155 = v300;
  if (v111 + v259 < v300) {
    int64_t v155 = v111 + v259;
  }
  if (v155 >= v111)
  {
    if (v144 != v155)
    {
      uint64_t v260 = v109;
      uint64_t v156 = *(void *)(v280 + 72);
      uint64_t v310 = v156 * (v144 - 1);
      uint64_t v289 = v156;
      int64_t v157 = v144 * v156;
      uint64_t v158 = v287;
      int64_t v272 = v155;
      do
      {
        uint64_t v160 = 0;
        uint64_t v305 = v144;
        int64_t v294 = v157;
        while (1)
        {
          uint64_t v161 = *v311;
          unint64_t v301 = v157 + v160;
          uint64_t v302 = v111;
          uint64_t v162 = v157 + v160 + v161;
          uint64_t v163 = v308;
          sub_100DBF940(v162, v308, type metadata accessor for CRLBoardLibraryViewModel.Item);
          Swift::Int v300 = v310 + v160;
          sub_100DBF940(v310 + v160 + v161, v145, type metadata accessor for CRLBoardLibraryViewModel.Item);
          uint64_t v164 = v292;
          sub_100DBF940(v163, v292, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if (swift_getEnumCaseMultiPayload() != 2) {
            goto LABEL_64;
          }
          sub_1005057FC(&qword_101677100);
          swift_bridgeObjectRelease();
          sub_100DBF9A8(v164, v158, type metadata accessor for CRLBoardIdentifier);
          uint64_t v164 = v290;
          sub_100DBF940(v145, v290, type metadata accessor for CRLBoardLibraryViewModel.Item);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v166 = (uint64_t)v297;
          if (EnumCaseMultiPayload != 2)
          {
            sub_100DBFA10(v158, type metadata accessor for CRLBoardIdentifier);
LABEL_64:
            sub_100DBFA10(v164, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_65:
            int64_t v157 = v294;
LABEL_66:
            sub_100DBFA10(v145, type metadata accessor for CRLBoardLibraryViewModel.Item);
            sub_100DBFA10(v308, type metadata accessor for CRLBoardLibraryViewModel.Item);
            goto LABEL_67;
          }
          swift_bridgeObjectRelease();
          sub_100DBF9A8(v164, v313, type metadata accessor for CRLBoardIdentifier);
          uint64_t v167 = (uint64_t)v286;
          sub_100ED7F04(v158, (uint64_t)v286);
          if (v4)
          {
            swift_errorRelease();
            (*v307)(v166, 1, 1, v291);
            uint64_t v4 = 0;
LABEL_81:
            sub_100DBFA10(v313, type metadata accessor for CRLBoardIdentifier);
            sub_100DBFA10(v158, type metadata accessor for CRLBoardIdentifier);
            sub_100522F00(v166, &qword_101672EB0);
            goto LABEL_65;
          }
          uint64_t v168 = *v304;
          uint64_t v169 = v291;
          (*v304)((char *)v166, v167 + *(int *)(v306 + 24), v291);
          sub_100DBFA10(v167, type metadata accessor for CRLBoardViewModelMetadata);
          uint64_t v170 = *v307;
          (*v307)(v166, 0, 1, v169);
          uint64_t v171 = *v303;
          if ((*v303)(v166, 1, v169) == 1)
          {
            uint64_t v4 = 0;
            uint64_t v158 = v287;
            uint64_t v145 = (uint64_t)v309;
            goto LABEL_81;
          }
          id v172 = v108;
          uint64_t v173 = *v299;
          (*v299)(v172, v166, v169);
          uint64_t v174 = (uint64_t)v282;
          sub_100ED7F04(v313, (uint64_t)v282);
          uint64_t v175 = (uint64_t)v284;
          v168(v284, v174 + *(int *)(v306 + 24), v169);
          sub_100DBFA10(v174, type metadata accessor for CRLBoardViewModelMetadata);
          v170(v175, 0, 1, v169);
          if (v171(v175, 1, v169) == 1)
          {
            uint64_t v4 = 0;
            uint64_t v145 = (uint64_t)v309;
            int64_t v157 = v294;
            uint64_t v108 = v295;
            (*v283)(v295, v169);
            sub_100DBFA10(v313, type metadata accessor for CRLBoardIdentifier);
            uint64_t v158 = v287;
            sub_100DBFA10(v287, type metadata accessor for CRLBoardIdentifier);
            sub_100522F00(v175, &qword_101672EB0);
            goto LABEL_66;
          }
          v176 = v281;
          v173(v281, v175, v169);
          uint64_t v145 = (uint64_t)v309;
          uint64_t v108 = v295;
          char v177 = static Date.< infix(_:_:)();
          id v178 = *v283;
          (*v283)(v176, v169);
          v178(v108, v169);
          sub_100DBFA10(v313, type metadata accessor for CRLBoardIdentifier);
          uint64_t v158 = v287;
          sub_100DBFA10(v287, type metadata accessor for CRLBoardIdentifier);
          sub_100DBFA10(v145, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_100DBFA10(v308, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if ((v177 & 1) == 0) {
            break;
          }
          uint64_t v179 = *v311;
          int64_t v157 = v294;
          if (!*v311) {
            goto LABEL_181;
          }
          uint64_t v4 = 0;
          uint64_t v180 = v179 + v310 + v160;
          sub_100DBF9A8(v179 + v294 + v160, v298, type metadata accessor for CRLBoardLibraryViewModel.Item);
          swift_arrayInitWithTakeFrontToBack();
          sub_100DBF9A8(v298, v180, type metadata accessor for CRLBoardLibraryViewModel.Item);
          v160 -= v289;
          int64_t v111 = v302 + 1;
          uint64_t v159 = v305;
          uint64_t v145 = (uint64_t)v309;
          if (v305 == v302 + 1) {
            goto LABEL_68;
          }
        }
        uint64_t v4 = 0;
        int64_t v157 = v294;
LABEL_67:
        uint64_t v159 = v305;
LABEL_68:
        int64_t v144 = v159 + 1;
        v310 += v289;
        v157 += v289;
        int64_t v111 = v275;
      }
      while (v144 != v272);
      int64_t v144 = v272;
      int v109 = v260;
      uint64_t v101 = (uint64_t)v279;
      uint64_t v106 = v297;
    }
    goto LABEL_85;
  }
LABEL_179:
  __break(1u);
LABEL_180:
  __break(1u);
LABEL_181:
  uint64_t v251 = v312;

  __break(1u);
LABEL_182:
  uint64_t v252 = v184;

  __break(1u);
LABEL_183:
  uint64_t v253 = v312;

  __break(1u);
LABEL_184:
  uint64_t v254 = v312;

  __break(1u);
LABEL_185:
  uint64_t v255 = v312;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100DB777C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, char a6)
{
  uint64_t v44 = a5;
  uint64_t v47 = a4;
  uint64_t v37 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v11 = __chkstk_darwin(v37, v10);
  uint64_t v46 = (uint64_t)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v43 = (uint64_t)&v34 - v15;
  uint64_t result = __chkstk_darwin(v14, v16);
  uint64_t v42 = (uint64_t)&v34 - v19;
  uint64_t v36 = a2;
  if (a3 != a2)
  {
    uint64_t v20 = *(void *)(v18 + 72);
    uint64_t v21 = v20 * (a3 - 1);
    uint64_t v38 = v20;
    uint64_t v22 = v20 * a3;
    int v39 = a6 & 1;
    uint64_t v35 = a1;
LABEL_4:
    uint64_t v23 = 0;
    uint64_t v40 = a3;
    uint64_t v41 = v22;
    while (1)
    {
      uint64_t v45 = a1;
      uint64_t v25 = *v47;
      uint64_t v26 = v42;
      sub_100DBF940(v22 + v23 + *v47, v42, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v27 = v21;
      uint64_t v28 = v21 + v23 + v25;
      uint64_t v29 = v43;
      sub_100DBF940(v28, v43, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v30 = v48;
      char v31 = sub_100D712D4(v26, v29, v44, v39);
      sub_100DBFA10(v29, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t result = sub_100DBFA10(v26, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v48 = v30;
      if (v30) {
        break;
      }
      if ((v31 & 1) == 0)
      {
        uint64_t v24 = v40;
        uint64_t v22 = v41;
        uint64_t v21 = v27;
LABEL_11:
        a3 = v24 + 1;
        v21 += v38;
        v22 += v38;
        a1 = v35;
        if (a3 != v36) {
          goto LABEL_4;
        }
        return result;
      }
      uint64_t v32 = *v47;
      uint64_t v22 = v41;
      if (!*v47)
      {
        __break(1u);
        return result;
      }
      uint64_t v21 = v27;
      uint64_t v33 = v32 + v27 + v23;
      sub_100DBF9A8(v32 + v41 + v23, v46, type metadata accessor for CRLBoardLibraryViewModel.Item);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_100DBF9A8(v46, v33, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v23 -= v38;
      a1 = v45 + 1;
      uint64_t v24 = v40;
      if (v40 == v45 + 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

void sub_100DB7A5C(uint64_t *a1, unint64_t a2, int a3)
{
  unint64_t v4 = v3;
  int v241 = a3;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_1016741E0);
  uint64_t v9 = __chkstk_darwin(v7 - 8, v8);
  unint64_t v239 = (char *)&v217 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  uint64_t v229 = (uint64_t)&v217 - v12;
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v232 = (uint64_t)&v217 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v17);
  uint64_t v233 = (uint64_t)&v217 - v18;
  uint64_t v253 = type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v19 = *(void *)(v253 - 8);
  uint64_t v21 = __chkstk_darwin(v253, v20);
  unint64_t v260 = (unint64_t)&v217 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v23);
  uint64_t v25 = (char *)&v217 - v24;
  uint64_t v26 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v28 = __chkstk_darwin(v26 - 8, v27);
  uint64_t v255 = (uint64_t)&v217 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28, v30);
  uint64_t v249 = (uint64_t)&v217 - v31;
  uint64_t v244 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v228 = *(void *)(v244 - 8);
  uint64_t v33 = __chkstk_darwin(v244, v32);
  uint64_t v225 = (uint64_t)&v217 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v33, v35);
  uint64_t v246 = (uint64_t)&v217 - v37;
  uint64_t v39 = __chkstk_darwin(v36, v38);
  uint64_t v41 = (char *)&v217 - v40;
  uint64_t v43 = __chkstk_darwin(v39, v42);
  uint64_t v237 = (uint64_t)&v217 - v44;
  uint64_t v46 = __chkstk_darwin(v43, v45);
  uint64_t v48 = (char *)&v217 - v47;
  uint64_t v50 = __chkstk_darwin(v46, v49);
  uint64_t v251 = (uint64_t)&v217 - v51;
  uint64_t v53 = __chkstk_darwin(v50, v52);
  uint64_t v55 = (char *)&v217 - v54;
  uint64_t v57 = __chkstk_darwin(v53, v56);
  uint64_t v223 = (uint64_t)&v217 - v58;
  uint64_t v60 = __chkstk_darwin(v57, v59);
  uint64_t v221 = (uint64_t)&v217 - v61;
  __chkstk_darwin(v60, v62);
  uint64_t v220 = (uint64_t)&v217 - v63;
  uint64_t v254 = a1;
  Swift::Int v64 = a1[1];
  id v65 = (id)a2;
  Swift::Int v66 = _minimumMergeRunLength(_:)(v64);
  if (v66 >= v64)
  {
    if (v64 < 0) {
      goto LABEL_184;
    }
    if (v64)
    {
      id v72 = v65;
      sub_100DB777C(0, v64, 1, v254, (uint64_t)v72, v241 & 1);
    }
    else
    {
    }
LABEL_161:

    return;
  }
  Swift::Int v218 = v66;
  if (v64 >= 0) {
    uint64_t v67 = v64;
  }
  else {
    uint64_t v67 = v64 + 1;
  }
  if (v64 < -1) {
    goto LABEL_193;
  }
  id v243 = v65;
  uint64_t v68 = v237;
  if (v64 < 2)
  {
    unint64_t v227 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v228 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v228 + 80));
    id v219 = _swiftEmptyArrayStorage;
    if (v64 != 1)
    {
      uint64_t v74 = _swiftEmptyArrayStorage;
      a2 = *(void *)&_swiftEmptyArrayStorage[2];
      goto LABEL_147;
    }
    uint64_t v222 = v55;
  }
  else
  {
    uint64_t v222 = v55;
    uint64_t v69 = v67 >> 1;
    uint64_t v70 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v70 + 16) = v69;
    uint64_t v71 = *(unsigned __int8 *)(v228 + 80);
    id v219 = (double *)v70;
    unint64_t v227 = v70 + ((v71 + 32) & ~v71);
  }
  Swift::Int v73 = 0;
  uint64_t v234 = v68 + 8;
  uint64_t v235 = v41;
  uint64_t v231 = v41 + 8;
  uint64_t v230 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
  uint64_t v74 = _swiftEmptyArrayStorage;
  uint64_t v240 = v25;
  double v242 = v48;
  while (1)
  {
    int64_t v75 = v73;
    Swift::Int v76 = v73 + 1;
    if (v73 + 1 >= v64)
    {
      a2 = v73 + 1;
      goto LABEL_94;
    }
    unint64_t v77 = *v254;
    unint64_t v78 = *(void *)(v228 + 72);
    uint64_t v79 = *v254 + v78 * v76;
    uint64_t v250 = v4;
    uint64_t v80 = v220;
    sub_100DBF940(v79, v220, type metadata accessor for CRLBoardLibraryViewModel.Item);
    uint64_t v248 = v77;
    uint64_t v252 = v78;
    uint64_t v81 = v77 + v78 * v75;
    uint64_t v82 = v221;
    sub_100DBF940(v81, v221, type metadata accessor for CRLBoardLibraryViewModel.Item);
    unint64_t v83 = v250;
    int v84 = sub_100D712D4(v80, v82, (uint64_t)v243, v241 & 1);
    uint64_t v250 = v83;
    if (v83)
    {
      sub_100DBFA10(v82, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100DBFA10(v80, type metadata accessor for CRLBoardLibraryViewModel.Item);
      swift_bridgeObjectRelease();
      uint64_t v196 = v219;
      id v195 = v243;
      goto LABEL_160;
    }
    int v85 = v84;
    sub_100DBFA10(v82, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100DBFA10(v80, type metadata accessor for CRLBoardLibraryViewModel.Item);
    Swift::Int v226 = v75;
    Swift::Int v245 = v75 + 2;
    if (v75 + 2 >= v64)
    {
      unint64_t v4 = v250;
      unint64_t v92 = v248;
      if (v85) {
        goto LABEL_25;
      }
LABEL_42:
      uint64_t v98 = (uint64_t)v240;
      a2 = v245;
      int64_t v75 = v226;
      if (v245 >= v64) {
        goto LABEL_94;
      }
      goto LABEL_43;
    }
    int64_t v247 = v64;
    uint64_t v217 = v74;
    unint64_t v238 = v252 * v76;
    unint64_t v86 = v248;
    unint64_t v87 = v252 * (v75 + 2);
    unint64_t v4 = v250;
    do
    {
      uint64_t v88 = v223;
      sub_100DBF940(v86 + v87, v223, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v89 = (uint64_t)v222;
      sub_100DBF940(v86 + v238, (uint64_t)v222, type metadata accessor for CRLBoardLibraryViewModel.Item);
      int v90 = sub_100D712D4(v88, v89, (uint64_t)v243, v241 & 1);
      if (v4)
      {
        sub_100DBFA10(v89, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100DBFA10(v88, type metadata accessor for CRLBoardLibraryViewModel.Item);
        swift_bridgeObjectRelease();
        id v195 = v243;
        uint64_t v196 = v219;
LABEL_160:
        v196[2] = 0.0;

        swift_bridgeObjectRelease();
        id v65 = v195;
        goto LABEL_161;
      }
      int v91 = v90;
      sub_100DBFA10(v89, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100DBFA10(v88, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if ((v85 ^ v91))
      {
        uint64_t v74 = v217;
        uint64_t v48 = v242;
        Swift::Int v64 = v247;
        unint64_t v92 = v248;
        if (v85) {
          goto LABEL_25;
        }
        goto LABEL_42;
      }
      v86 += v252;
      ++v245;
      unint64_t v92 = v248;
      uint64_t v48 = v242;
    }
    while (v247 != v245);
    Swift::Int v64 = v247;
    Swift::Int v245 = v247;
    uint64_t v74 = v217;
    if ((v85 & 1) == 0) {
      goto LABEL_42;
    }
LABEL_25:
    a2 = v245;
    if (v245 < v226) {
      goto LABEL_188;
    }
    if (v226 >= v245)
    {
      uint64_t v98 = (uint64_t)v240;
      int64_t v75 = v226;
      if (v245 >= v64) {
        goto LABEL_94;
      }
    }
    else
    {
      int64_t v247 = v64;
      uint64_t v217 = v74;
      uint64_t v250 = v4;
      uint64_t v93 = 0;
      int64_t v94 = v252 * (v245 - 1);
      unint64_t v95 = v245 * v252;
      int64_t v96 = v226;
      int64_t v97 = v226 * v252;
      do
      {
        if (v96 != a2 + v93 - 1)
        {
          if (!v92) {
            goto LABEL_191;
          }
          sub_100DBF9A8(v92 + v97, v225, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if (v97 < v94 || v92 + v97 >= v92 + v95)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v97 != v94)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          sub_100DBF9A8(v225, v92 + v94, type metadata accessor for CRLBoardLibraryViewModel.Item);
          a2 = v245;
        }
        ++v96;
        --v93;
        v94 -= v252;
        v95 -= v252;
        v97 += v252;
      }
      while (v96 < (uint64_t)(a2 + v93));
      unint64_t v4 = v250;
      uint64_t v98 = (uint64_t)v240;
      uint64_t v74 = v217;
      uint64_t v48 = v242;
      int64_t v75 = v226;
      Swift::Int v64 = v247;
      if ((uint64_t)a2 >= v247) {
        goto LABEL_94;
      }
    }
LABEL_43:
    if (__OFSUB__(a2, v75)) {
      goto LABEL_185;
    }
    if ((uint64_t)(a2 - v75) >= v218) {
      goto LABEL_94;
    }
    if (__OFADD__(v75, v218)) {
      goto LABEL_186;
    }
    if (v75 + v218 >= v64) {
      Swift::Int v99 = v64;
    }
    else {
      Swift::Int v99 = v75 + v218;
    }
    if (v99 < v75)
    {
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
LABEL_189:
      id v214 = v243;

      __break(1u);
LABEL_190:
      id v215 = v243;

      __break(1u);
LABEL_191:
      id v216 = v243;

      __break(1u);
LABEL_192:
      id v65 = v243;

      __break(1u);
LABEL_193:

      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      goto LABEL_194;
    }
    if (a2 == v99) {
      goto LABEL_94;
    }
    Swift::Int v226 = v75;
    uint64_t v250 = v4;
    uint64_t v217 = v74;
    uint64_t v100 = *(void *)(v228 + 72);
    uint64_t v101 = v100 * (a2 - 1);
    uint64_t v236 = v100;
    uint64_t v252 = a2 * v100;
    unint64_t v224 = v99;
LABEL_57:
    uint64_t v103 = 0;
    Swift::Int v104 = v226;
    Swift::Int v245 = a2;
    unint64_t v238 = v101;
    while (2)
    {
      uint64_t v105 = *v254;
      uint64_t v106 = v251;
      uint64_t v248 = v252 + v103;
      sub_100DBF940(v252 + v103 + v105, v251, type metadata accessor for CRLBoardLibraryViewModel.Item);
      int64_t v247 = v101 + v103;
      sub_100DBF940(v101 + v103 + v105, (uint64_t)v48, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v107 = v237;
      sub_100DBF940(v106, v237, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        uint64_t v136 = type metadata accessor for CRLBoardLibraryViewModel.Item;
        uint64_t v137 = v107;
LABEL_88:
        sub_100DBFA10(v137, v136);
        goto LABEL_54;
      }
      sub_1005057FC(&qword_101677100);
      swift_bridgeObjectRelease();
      uint64_t v108 = v107;
      uint64_t v109 = v249;
      sub_100DBF9A8(v108, v249, type metadata accessor for CRLBoardIdentifier);
      uint64_t v110 = (uint64_t)v235;
      sub_100DBF940((uint64_t)v48, (uint64_t)v235, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        sub_100DBFA10(v109, type metadata accessor for CRLBoardIdentifier);
        sub_100DBFA10(v110, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_53:
        uint64_t v48 = v242;
        goto LABEL_54;
      }
      swift_bridgeObjectRelease();
      sub_100DBF9A8(v110, v255, type metadata accessor for CRLBoardIdentifier);
      uint64_t v111 = v233;
      unint64_t v112 = v250;
      sub_100ED7F04(v109, v233);
      if (v112)
      {
        swift_errorRelease();
        (*v230)(v111, 1, 1, v253);
        sub_100DBFA10(v255, type metadata accessor for CRLBoardIdentifier);
        sub_100DBFA10(v249, type metadata accessor for CRLBoardIdentifier);
        sub_100522F00(v111, (uint64_t *)&unk_1016741D0);
        uint64_t v250 = 0;
        goto LABEL_53;
      }
      uint64_t v113 = *v230;
      uint64_t v114 = v111;
      uint64_t v115 = v98;
      uint64_t v116 = v111;
      uint64_t v117 = v253;
      (*v230)(v114, 0, 1, v253);
      sub_100DBF9A8(v116, v115, type metadata accessor for CRLBoardViewModelMetadata);
      uint64_t v118 = v232;
      sub_100ED7F04(v255, v232);
      v113(v118, 0, 1, v117);
      sub_100DBF9A8(v118, v260, type metadata accessor for CRLBoardViewModelMetadata);
      uint64_t v119 = v229;
      sub_100522E9C(v115 + *(int *)(v117 + 28), v229, (uint64_t *)&unk_1016741E0);
      uint64_t v120 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
      uint64_t v121 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 48);
      int v122 = v121(v119, 1, v120);
      uint64_t v250 = 0;
      if (v122 == 1)
      {
        sub_100522F00(v119, (uint64_t *)&unk_1016741E0);
        uint64_t v123 = 0;
        uint64_t v124 = 0;
        uint64_t v125 = (uint64_t)v239;
      }
      else
      {
        if (*(void *)v119)
        {
          id v126 = *(id *)v119;
          uint64_t v123 = sub_100701F80();
          uint64_t v124 = v127;
        }
        else
        {
          uint64_t v123 = *(void *)(v119 + 8);
          uint64_t v124 = *(void *)(v119 + 16);
          swift_bridgeObjectRetain();
        }
        uint64_t v125 = (uint64_t)v239;
        sub_100DBFA10(v119, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
      }
      sub_100522E9C(v260 + *(int *)(v253 + 28), v125, (uint64_t *)&unk_1016741E0);
      if (v121(v125, 1, v120) == 1)
      {
        sub_100522F00(v125, (uint64_t *)&unk_1016741E0);
        uint64_t v128 = v249;
        uint64_t v48 = v242;
        uint64_t v101 = v238;
        if (v124)
        {
          swift_bridgeObjectRelease();
          goto LABEL_82;
        }
LABEL_80:
        uint64_t v98 = (uint64_t)v240;
        if (v241) {
          uint64_t v133 = static Date.< infix(_:_:)();
        }
        else {
          uint64_t v133 = static Date.> infix(_:_:)();
        }
        a2 = v133;
        sub_100DBFA10(v260, type metadata accessor for CRLBoardViewModelMetadata);
        sub_100DBFA10(v98, type metadata accessor for CRLBoardViewModelMetadata);
        sub_100DBFA10(v255, type metadata accessor for CRLBoardIdentifier);
        sub_100DBFA10(v128, type metadata accessor for CRLBoardIdentifier);
        sub_100DBFA10((uint64_t)v48, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100DBFA10(v251, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if ((a2 & 1) == 0) {
          goto LABEL_55;
        }
LABEL_85:
        uint64_t v134 = *v254;
        if (!*v254) {
          goto LABEL_189;
        }
        uint64_t v135 = v134 + v101 + v103;
        sub_100DBF9A8(v134 + v252 + v103, v246, type metadata accessor for CRLBoardLibraryViewModel.Item);
        swift_arrayInitWithTakeFrontToBack();
        sub_100DBF9A8(v246, v135, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v103 -= v236;
        ++v104;
        Swift::Int v102 = v245;
        if (v245 == v104) {
          goto LABEL_56;
        }
        continue;
      }
      break;
    }
    uint64_t v128 = v249;
    if (*(void *)v125)
    {
      id v129 = *(id *)v125;
      uint64_t v130 = sub_100701F80();
      uint64_t v132 = v131;

      uint64_t v125 = (uint64_t)v239;
    }
    else
    {
      uint64_t v130 = *(void *)(v125 + 8);
      uint64_t v132 = *(void *)(v125 + 16);
      swift_bridgeObjectRetain();
    }
    sub_100DBFA10(v125, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
    if (v124) {
      break;
    }
    swift_bridgeObjectRelease();
    sub_100DBFA10(v260, type metadata accessor for CRLBoardViewModelMetadata);
    uint64_t v98 = (uint64_t)v240;
    sub_100DBFA10((uint64_t)v240, type metadata accessor for CRLBoardViewModelMetadata);
    sub_100DBFA10(v255, type metadata accessor for CRLBoardIdentifier);
    sub_100DBFA10(v128, type metadata accessor for CRLBoardIdentifier);
    uint64_t v48 = v242;
    uint64_t v101 = v238;
LABEL_54:
    sub_100DBFA10((uint64_t)v48, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100DBFA10(v251, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_55:
    Swift::Int v102 = v245;
LABEL_56:
    a2 = v102 + 1;
    v101 += v236;
    v252 += v236;
    if (a2 != v224) {
      goto LABEL_57;
    }
    a2 = v224;
    uint64_t v74 = v217;
    unint64_t v4 = v250;
    int64_t v75 = v226;
LABEL_94:
    if ((uint64_t)a2 < v75) {
      goto LABEL_183;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v245 = a2;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v74 = sub_100F697E0(0, *((void *)v74 + 2) + 1, 1, (uint64_t)v74);
    }
    unint64_t v140 = *((void *)v74 + 2);
    unint64_t v139 = *((void *)v74 + 3);
    a2 = v140 + 1;
    if (v140 >= v139 >> 1) {
      uint64_t v74 = sub_100F697E0((double *)(v139 > 1), v140 + 1, 1, (uint64_t)v74);
    }
    *((void *)v74 + 2) = a2;
    uint64_t v141 = v74 + 4;
    uint64_t v142 = &v74[2 * v140 + 4];
    Swift::Int v143 = v245;
    *(void *)uint64_t v142 = v75;
    *((void *)v142 + 1) = v143;
    if (v140)
    {
      while (2)
      {
        unint64_t v144 = a2 - 1;
        if (a2 >= 4)
        {
          int64_t v149 = &v141[2 * a2];
          uint64_t v150 = *((void *)v149 - 8);
          uint64_t v151 = *((void *)v149 - 7);
          BOOL v155 = __OFSUB__(v151, v150);
          uint64_t v152 = v151 - v150;
          if (v155) {
            goto LABEL_168;
          }
          uint64_t v154 = *((void *)v149 - 6);
          uint64_t v153 = *((void *)v149 - 5);
          BOOL v155 = __OFSUB__(v153, v154);
          uint64_t v147 = v153 - v154;
          char v148 = v155;
          if (v155) {
            goto LABEL_169;
          }
          unint64_t v156 = a2 - 2;
          int64_t v157 = &v141[2 * a2 - 4];
          uint64_t v159 = *(void *)v157;
          uint64_t v158 = *((void *)v157 + 1);
          BOOL v155 = __OFSUB__(v158, v159);
          uint64_t v160 = v158 - v159;
          if (v155) {
            goto LABEL_171;
          }
          BOOL v155 = __OFADD__(v147, v160);
          uint64_t v161 = v147 + v160;
          if (v155) {
            goto LABEL_174;
          }
          if (v161 >= v152)
          {
            uint64_t v179 = &v141[2 * v144];
            uint64_t v181 = *(void *)v179;
            uint64_t v180 = *((void *)v179 + 1);
            BOOL v155 = __OFSUB__(v180, v181);
            uint64_t v182 = v180 - v181;
            if (v155) {
              goto LABEL_178;
            }
            BOOL v172 = v147 < v182;
          }
          else
          {
LABEL_113:
            if (v148) {
              goto LABEL_170;
            }
            unint64_t v156 = a2 - 2;
            uint64_t v162 = &v141[2 * a2 - 4];
            uint64_t v164 = *(void *)v162;
            uint64_t v163 = *((void *)v162 + 1);
            BOOL v165 = __OFSUB__(v163, v164);
            uint64_t v166 = v163 - v164;
            char v167 = v165;
            if (v165) {
              goto LABEL_173;
            }
            uint64_t v168 = &v141[2 * v144];
            uint64_t v170 = *(void *)v168;
            uint64_t v169 = *((void *)v168 + 1);
            BOOL v155 = __OFSUB__(v169, v170);
            uint64_t v171 = v169 - v170;
            if (v155) {
              goto LABEL_176;
            }
            if (__OFADD__(v166, v171)) {
              goto LABEL_177;
            }
            if (v166 + v171 < v147) {
              goto LABEL_125;
            }
            BOOL v172 = v147 < v171;
          }
          if (v172) {
            unint64_t v144 = v156;
          }
        }
        else
        {
          if (a2 == 3)
          {
            uint64_t v146 = *((void *)v74 + 4);
            uint64_t v145 = *((void *)v74 + 5);
            BOOL v155 = __OFSUB__(v145, v146);
            uint64_t v147 = v145 - v146;
            char v148 = v155;
            goto LABEL_113;
          }
          uint64_t v173 = *((void *)v74 + 4);
          uint64_t v174 = *((void *)v74 + 5);
          BOOL v155 = __OFSUB__(v174, v173);
          uint64_t v166 = v174 - v173;
          char v167 = v155;
LABEL_125:
          if (v167) {
            goto LABEL_172;
          }
          uint64_t v175 = &v141[2 * v144];
          uint64_t v177 = *(void *)v175;
          uint64_t v176 = *((void *)v175 + 1);
          BOOL v155 = __OFSUB__(v176, v177);
          uint64_t v178 = v176 - v177;
          if (v155) {
            goto LABEL_175;
          }
          if (v178 < v166) {
            goto LABEL_142;
          }
        }
        unint64_t v183 = v144 - 1;
        if (v144 - 1 >= a2)
        {
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
LABEL_186:
          __break(1u);
          goto LABEL_187;
        }
        uint64_t v184 = *v254;
        if (!*v254) {
          goto LABEL_190;
        }
        a2 = (unint64_t)v74;
        unint64_t v185 = v4;
        uint64_t v186 = &v141[2 * v183];
        uint64_t v187 = *(void *)v186;
        unint64_t v188 = v144;
        uint64_t v189 = &v141[2 * v144];
        uint64_t v190 = *(void *)v189;
        double v191 = v189[1];
        uint64_t v192 = *(void *)(v228 + 72);
        uint64_t v252 = v184 + v192 * *(void *)v186;
        uint64_t v250 = v184 + v192 * v190;
        uint64_t v248 = v184 + v192 * *(void *)&v191;
        id v193 = v243;
        sub_100DA948C(v252, v250, v248, v227, v193, v241 & 1, (uint64_t (*)(char *, char *, id, void))sub_100D712D4);
        if (v185)
        {
LABEL_144:
          swift_bridgeObjectRelease();
          id v195 = v243;
          uint64_t v196 = v219;
          goto LABEL_160;
        }
        if (*(uint64_t *)&v191 < v187) {
          goto LABEL_165;
        }
        if (v188 > *(void *)(a2 + 16)) {
          goto LABEL_166;
        }
        *(void *)uint64_t v186 = v187;
        v141[2 * v183 + 1] = v191;
        unint64_t v194 = *(void *)(a2 + 16);
        if (v188 >= v194) {
          goto LABEL_167;
        }
        uint64_t v74 = (double *)a2;
        a2 = v194 - 1;
        memmove(v189, v189 + 2, 16 * (v194 - 1 - v188));
        *((void *)v74 + 2) = v194 - 1;
        uint64_t v48 = v242;
        unint64_t v4 = 0;
        if (v194 <= 2) {
          goto LABEL_142;
        }
        continue;
      }
    }
    a2 = 1;
LABEL_142:
    Swift::Int v64 = v254[1];
    Swift::Int v73 = v245;
    if (v245 >= v64)
    {
LABEL_147:
      if (a2 >= 2)
      {
        uint64_t v197 = *v254;
        uint64_t v255 = *v254;
        do
        {
          unint64_t v198 = a2 - 2;
          if (a2 < 2) {
            goto LABEL_179;
          }
          if (!v197) {
            goto LABEL_192;
          }
          unint64_t v199 = v4;
          unint64_t v200 = v74;
          unint64_t v201 = v74 + 4;
          double v202 = v74[2 * v198 + 4];
          uint64_t v203 = *(void *)&v201[2 * a2 - 1];
          double v204 = v201[2 * a2 - 2];
          uint64_t v205 = *(void *)(v228 + 72);
          unint64_t v260 = v197 + v205 * *(void *)&v202;
          unint64_t v206 = v197 + v205 * *(void *)&v204;
          unint64_t v207 = v197 + v205 * v203;
          id v208 = v243;
          sub_100DA948C(v260, v206, v207, v227, v208, v241 & 1, (uint64_t (*)(char *, char *, id, void))sub_100D712D4);
          if (v199) {
            goto LABEL_144;
          }
          if (v203 < *(uint64_t *)&v202) {
            goto LABEL_180;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v200 = sub_100F69F28((uint64_t)v200);
          }
          if (v198 >= *((void *)v200 + 2)) {
            goto LABEL_181;
          }
          BOOL v209 = v200;
          uint64_t v210 = v200 + 4;
          char v211 = &v200[2 * v198 + 4];
          double *v211 = v202;
          *((void *)v211 + 1) = v203;
          unint64_t v212 = *((void *)v200 + 2);
          if (a2 > v212) {
            goto LABEL_182;
          }
          uint64_t v74 = v209;
          memmove(&v210[2 * a2 - 2], &v210[2 * a2], 16 * (v212 - a2));
          *((void *)v74 + 2) = v212 - 1;
          a2 = v212 - 1;
          unint64_t v4 = 0;
          uint64_t v197 = v255;
        }
        while (v212 > 2);
      }
      swift_bridgeObjectRelease();
      v219[2] = 0.0;
      id v213 = v243;

      id v65 = v213;
      swift_bridgeObjectRelease();
      goto LABEL_161;
    }
  }
  if (v241)
  {
    unint64_t v258 = v123;
    uint64_t v259 = v124;
    uint64_t v256 = v130;
    uint64_t v257 = v132;
  }
  else
  {
    unint64_t v258 = v130;
    uint64_t v259 = v132;
    uint64_t v256 = v123;
    uint64_t v257 = v124;
  }
  sub_10052E310();
  a2 = StringProtocol.localizedStandardCompare<A>(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for ComparisonResult(0);
  uint64_t v48 = v242;
  uint64_t v101 = v238;
  switch(a2)
  {
    case 0xFFFFFFFFFFFFFFFFLL:
LABEL_82:
      sub_100DBFA10(v260, type metadata accessor for CRLBoardViewModelMetadata);
      uint64_t v98 = (uint64_t)v240;
      sub_100DBFA10((uint64_t)v240, type metadata accessor for CRLBoardViewModelMetadata);
      sub_100DBFA10(v255, type metadata accessor for CRLBoardIdentifier);
      sub_100DBFA10(v128, type metadata accessor for CRLBoardIdentifier);
      a2 = (unint64_t)type metadata accessor for CRLBoardLibraryViewModel.Item;
      sub_100DBFA10((uint64_t)v48, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100DBFA10(v251, type metadata accessor for CRLBoardLibraryViewModel.Item);
      goto LABEL_85;
    case 0uLL:
      goto LABEL_80;
    case 1uLL:
      sub_100DBFA10(v260, type metadata accessor for CRLBoardViewModelMetadata);
      uint64_t v98 = (uint64_t)v240;
      sub_100DBFA10((uint64_t)v240, type metadata accessor for CRLBoardViewModelMetadata);
      sub_100DBFA10(v255, type metadata accessor for CRLBoardIdentifier);
      uint64_t v137 = v128;
      uint64_t v136 = type metadata accessor for CRLBoardIdentifier;
      goto LABEL_88;
  }
LABEL_194:
  unint64_t v258 = a2;
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
}

void sub_100DB92FC(unint64_t *a1, void *a2, char a3, void (*a4)(void *, id, void))
{
  uint64_t v8 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  unint64_t v9 = *a1;
  id v10 = a2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v9 = sub_100F6A024(v9);
  }
  uint64_t v11 = *(void *)(v9 + 16);
  v13[0] = v9 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v13[1] = v11;
  id v12 = v10;
  a4(v13, v12, a3 & 1);

  *a1 = v9;
}

void sub_100DB93F4(void *a1)
{
  uint64_t v2 = self;
  id v3 = [v2 mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 localizedStringForKey:v4 value:v5 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v7 = [v2 mainBundle];
  NSString v8 = String._bridgeToObjectiveC()();
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [self systemImageNamed:v11];

  if (v12)
  {
    [a1 setImage:v12];

    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [a1 setAccessibilityValue:v13];

    id v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [a1 setAccessibilityHint:v14];
  }
  else
  {
    __break(1u);
  }
}

void sub_100DB9788()
{
  id v0 = [self sharedApplication];
  id v1 = [v0 delegate];

  if (v1)
  {
    type metadata accessor for CRLiOSAppDelegate();
    uint64_t v2 = *(void **)(swift_dynamicCastClassUnconditional()
                  + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
    if (v2)
    {
      id v3 = v2;
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61);
    }
    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_100DB98DC()
{
  *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_thumbnailProvider + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___diffableDataSource] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_pendingBoardIdentifiersToRefresh] = &_swiftEmptySetSingleton;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_imageCacheObserver] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_storeMetadataObserver] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_renameDeleteObserver] = 0;
  id v1 = &v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString];
  *id v1 = 0;
  v1[1] = 0xE000000000000000;
  v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchComplete] = 0;
  v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isCurrentlyInMultipleSelectionInteraction] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_gridLayout] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_listLayout] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_iCloudStatusObserver];
  *uint64_t v2 = 0u;
  v2[1] = 0u;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___libraryProviderRefreshLimiter] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidEndObserver] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidBeginObserver] = 0;
  v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isPresentingBoardNavigationController] = 0;
  id v3 = &v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__currentSnapshotWithExpandedSections];
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_10168E130);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_collapsedSections] = &_swiftEmptySetSingleton;
  v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_shouldSaveViewState] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___layoutBarButtonItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___toolbarItemToAddBoard] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___toolbarItemToSelectAllOrNone] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___editModeToolbarButtonToDuplicateSelectedItems] = 0;
  NSString v5 = (uint64_t *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_defaultTitleForToolbarItemToSelectAllOrNone];
  id v6 = self;
  id v7 = [v6 mainBundle];
  NSString v8 = String._bridgeToObjectiveC()();
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];

  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  *NSString v5 = v11;
  v5[1] = v13;
  id v14 = (uint64_t *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_alternateTitleForToolbarItemToSelectAllOrNone];
  id v15 = [v6 mainBundle];
  NSString v16 = String._bridgeToObjectiveC()();
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  uint64_t *v14 = v19;
  v14[1] = v21;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___emptyFolderViewController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_emptyFolderBottomConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_keyboardHeight] = 0;
  v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_showsEmptyFolderView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100DB9C78(uint64_t a1, SEL *a2, SEL *a3)
{
  NSString v5 = self;
  id v6 = [v5 sharedApplication];
  id v7 = [v6 delegate];

  if (!v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  type metadata accessor for CRLiOSAppDelegate();
  NSString v8 = *(void **)(swift_dynamicCastClassUnconditional()
                + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
  if (!v8)
  {
LABEL_11:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61);
    swift_unknownObjectRelease();
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v9 = v8;
  swift_unknownObjectRelease();
  unsigned int v10 = [v9 *a2];

  if (!v10) {
    return;
  }
  id v11 = [v5 sharedApplication];
  id v12 = [v11 delegate];

  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = *(void **)(swift_dynamicCastClassUnconditional()
                 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
  if (!v13)
  {
LABEL_13:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61);
    swift_unknownObjectRelease();
    __break(1u);
    return;
  }
  id v14 = v13;
  swift_unknownObjectRelease();
  [v14 *a3];
}

BOOL sub_100DB9F44()
{
  uint64_t v0 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v0 - 8, v1);
  id v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = sub_100D72460();
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  int v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5);
  sub_100522F00((uint64_t)v3, (uint64_t *)&unk_101676310);
  if (v6 == 1)
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    type metadata accessor for IndexPath();
    sub_100DB3520(&qword_10169B640, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t v8 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v10 = v9;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v8;
    *(void *)(inited + 40) = v10;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"collectionView(_:shouldBeginMultipleSelectionInteractionAt:)", 60, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1405, (uint64_t)"No item for index path: %@", 26, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"collectionView(_:shouldBeginMultipleSelectionInteractionAt:)", 60, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1405);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  return v6 != 1;
}

id sub_100DBA194(void *a1, uint64_t a2)
{
  uint64_t v82 = a1;
  uint64_t v86 = type metadata accessor for IndexPath();
  uint64_t v85 = *(void *)(v86 - 8);
  uint64_t v4 = *(void *)(v85 + 64);
  __chkstk_darwin(v86, v5);
  int v84 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v83 = (uint64_t)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v88 = (uint64_t)&v74 - v15;
  uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v22);
  uint64_t v24 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v26);
  uint64_t v28 = (char *)&v74 - v27;
  id v87 = v2;
  id v29 = sub_100D72460();
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_100522F00((uint64_t)v19, (uint64_t *)&unk_101676310);
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    sub_100DB3520(&qword_10169B640, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v33 = v32;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v31;
    *(void *)(inited + 40) = v33;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"collectionView(_:contextMenuConfigurationForItemAt:point:)", 58, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1428, (uint64_t)"No item for index path: %@", 26, 2u, inited);
    LOBYTE(v73) = 2;
    v72[0] = "No item for index path: %@";
    v72[1] = 26;
    sub_1005598CC(inited, (uint64_t)"collectionView(_:contextMenuConfigurationForItemAt:point:)", 58, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1428);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    return 0;
  }
  unint64_t v77 = (uint64_t *)v24;
  Swift::Int v76 = v12;
  uint64_t v80 = v21;
  uint64_t v79 = v4;
  uint64_t v78 = v20;
  uint64_t v35 = a2;
  sub_100DBF9A8((uint64_t)v19, (uint64_t)v28, type metadata accessor for CRLBoardLibraryViewModel.Item);
  uint64_t v36 = type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56);
  v38(v88, 1, 1, v36);
  type metadata accessor for CRLBoardLibrary();
  uint64_t v39 = swift_dynamicCastClass();
  uint64_t v81 = v28;
  if (v39)
  {
    uint64_t v40 = v39;
    uint64_t v41 = (uint64_t)v77;
    sub_100DBF940((uint64_t)v28, (uint64_t)v77, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      int64_t v75 = v38;
      sub_1005057FC(&qword_101677100);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v42 = v41;
      uint64_t v43 = v83;
      uint64_t v44 = sub_100DBF9A8(v42, v83, type metadata accessor for CRLBoardIdentifier);
      unint64_t v77 = &v74;
      unint64_t v45 = *(void *)(*(void *)(v40 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController)
                      + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
      __chkstk_darwin(v44, v46);
      uint64_t v73 = v43;
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_100ED4F9C((uint64_t (*)(id *))sub_100DBFA74, (uint64_t)v72, v45);
      swift_bridgeObjectRelease();
      sub_100ED7F04(v43, (uint64_t)v76);
      sub_100DBFA10(v43, type metadata accessor for CRLBoardIdentifier);
      swift_unknownObjectRelease();
      uint64_t v48 = v80;
      uint64_t v49 = (uint64_t)v76;
      v75((uint64_t)v76, 0, 1, v36);
      sub_1006063BC(v49, v88, (uint64_t *)&unk_1016741D0);
      id v50 = v87;
      uint64_t v51 = v85;
      uint64_t v52 = v84;
      goto LABEL_8;
    }
    sub_100DBFA10(v41, type metadata accessor for CRLBoardLibraryViewModel.Item);
  }
  uint64_t v47 = 0;
  id v50 = v87;
  uint64_t v51 = v85;
  uint64_t v52 = v84;
  uint64_t v48 = v80;
LABEL_8:
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v88, 1, v36)
    || *(unsigned char *)(v88 + *(int *)(v36 + 32)) != 1)
  {
    uint64_t v53 = (uint64_t)v81;
    id v34 = sub_100D8221C((uint64_t)v81, v35, v47);
  }
  else
  {
    uint64_t v53 = (uint64_t)v81;
    if (v47)
    {
      uint64_t v54 = v52;
      uint64_t v55 = v52;
      uint64_t v56 = v86;
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v54, v35, v86);
      unint64_t v57 = (*(unsigned __int8 *)(v51 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
      uint64_t v58 = swift_allocObject();
      uint64_t v59 = v82;
      *(void *)(v58 + 16) = v82;
      uint64_t v60 = v58;
      (*(void (**)(unint64_t, char *, uint64_t))(v51 + 32))(v58 + v57, v55, v56);
      sub_1005057FC(&qword_10169B510);
      unint64_t v61 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
      uint64_t v62 = swift_allocObject();
      *(_OWORD *)(v62 + 16) = xmmword_10117E810;
      sub_100DBF940(v53, v62 + v61, type metadata accessor for CRLBoardLibraryViewModel.Item);
      id v63 = v47;
      id v64 = v59;
      sub_100CDD514(v62);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      sub_100DB3520((unint64_t *)&qword_10169B5A0, (void (*)(uint64_t))type metadata accessor for CRLBoardLibraryViewModel.Item);
      Class isa = Set._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      uint64_t v66 = swift_allocObject();
      *(void *)(v66 + 16) = v50;
      *(void *)(v66 + 24) = v63;
      id v87 = self;
      uint64_t v93 = sub_100DBD780;
      uint64_t v94 = v60;
      aBlock = _NSConcreteStackBlock;
      uint64_t v90 = *(void *)"";
      int v91 = sub_100598AC4;
      unint64_t v92 = &unk_10152C4F0;
      uint64_t v67 = _Block_copy(&aBlock);
      swift_retain_n();
      id v68 = v63;
      id v69 = v50;
      swift_release();
      uint64_t v93 = sub_100DBD798;
      uint64_t v94 = v66;
      aBlock = _NSConcreteStackBlock;
      uint64_t v90 = *(void *)"";
      int v91 = sub_10059474C;
      unint64_t v92 = &unk_10152C518;
      uint64_t v70 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      id v34 = [v87 configurationWithIdentifier:isa previewProvider:v67 actionProvider:v70];
      swift_release();
      swift_release();

      _Block_release(v70);
      _Block_release(v67);

      swift_release();
    }
    else
    {
      id v34 = 0;
    }
  }
  sub_100DBFA10(v53, type metadata accessor for CRLBoardLibraryViewModel.Item);
  sub_100522F00(v88, (uint64_t *)&unk_1016741D0);
  return v34;
}

void sub_100DBAC60(void *a1)
{
  uint64_t v2 = sub_100D73EEC();
  sub_100D9AE1C(a1, 2u, 1);
  uint64_t v32 = v2;
  uint64_t v3 = *(void *)(v2 + 48);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(2uLL);
  swift_bridgeObjectRetain_n();
  uint64_t v31 = a1;
  id v4 = a1;
  NSObject.hash(into:)();
  Swift::Int v5 = Hasher._finalize()();
  uint64_t v6 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v8 = ~v6;
    while (1)
    {
      uint64_t v9 = *(void *)(v3 + 48) + 16 * v7;
      if (*(unsigned char *)(v9 + 8) == 2)
      {
        uint64_t v10 = *(void **)v9;
        sub_10050BF48(0, (unint64_t *)&qword_101672E50);
        id v11 = v4;
        sub_1007A0914(v10, 2u);
        char v12 = static NSObject.== infix(_:_:)();

        sub_1007A0938(v10, 2u);
        if (v12) {
          break;
        }
      }
      unint64_t v7 = (v7 + 1) & v8;
      if (((*(void *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v14 = *(void *)(v3 + 16);
    unint64_t v15 = *(void *)(v3 + 24);
    id v16 = v4;
    if (v15 <= v14)
    {
      if (isUniquelyReferenced_nonNull_native) {
        sub_100CC3A40();
      }
      else {
        sub_100CD4C78();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(2uLL);
      id v18 = v16;
      NSObject.hash(into:)();

      Swift::Int v19 = Hasher._finalize()();
      uint64_t v20 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v7 = v19 & ~v20;
      if ((*(void *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
      {
        uint64_t v21 = ~v20;
        while (1)
        {
          uint64_t v22 = *(void *)(v3 + 48) + 16 * v7;
          if (*(unsigned char *)(v22 + 8) == 2)
          {
            uint64_t v23 = *(void **)v22;
            sub_10050BF48(0, (unint64_t *)&qword_101672E50);
            id v24 = v18;
            sub_1007A0914(v23, 2u);
            char v25 = static NSObject.== infix(_:_:)();

            sub_1007A0938(v23, 2u);
            if (v25) {
              break;
            }
          }
          unint64_t v7 = (v7 + 1) & v21;
          if (((*(void *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_19;
          }
        }
        ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
LABEL_19:
        uint64_t v17 = v31;
      }
      else
      {
        uint64_t v17 = v31;
      }
    }
    else
    {
      uint64_t v17 = v31;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_100CCDF1C();
      }
    }
    *(void *)(v3 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v7;
    uint64_t v26 = *(void *)(v3 + 48) + 16 * v7;
    *(void *)uint64_t v26 = v17;
    *(unsigned char *)(v26 + 8) = 2;
    uint64_t v27 = *(void *)(v3 + 16);
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28)
    {
      __break(1u);
      return;
    }
    *(void *)(v3 + 16) = v29;
    swift_bridgeObjectRelease();
  }
  uint64_t v30 = *(void *)(v32 + 48);
  swift_bridgeObjectRetain();
  sub_100D991B4(v3);
  *(void *)(v32 + 48) = v3;
  swift_bridgeObjectRelease();
  sub_100D994DC(v30);
  swift_bridgeObjectRelease();

  swift_release();
}

void sub_100DBAFF4(void *a1)
{
  uint64_t v2 = *(void *)(sub_100D73EEC() + 48);
  swift_bridgeObjectRetain();
  swift_release();
  if (*(void *)(v2 + 16))
  {
    Hasher.init(_seed:)();
    Hasher._combine(_:)(2uLL);
    id v26 = a1;
    NSObject.hash(into:)();
    Swift::Int v3 = Hasher._finalize()();
    uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v5 = v3 & ~v4;
    if ((*(void *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
    {
      uint64_t v6 = ~v4;
      while (1)
      {
        uint64_t v7 = *(void *)(v2 + 48) + 16 * v5;
        if (*(unsigned char *)(v7 + 8) == 2)
        {
          uint64_t v8 = *(void **)v7;
          sub_10050BF48(0, (unint64_t *)&qword_101672E50);
          id v9 = v26;
          sub_1007A0914(v8, 2u);
          char v10 = static NSObject.== infix(_:_:)();

          sub_1007A0938(v8, 2u);
          if (v10) {
            break;
          }
        }
        unint64_t v5 = (v5 + 1) & v6;
        if (((*(void *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();

      uint64_t v11 = sub_100D73EEC();
      sub_100D9AE1C(v9, 2u, 0);
      uint64_t v12 = *(void *)(v11 + 48);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(2uLL);
      swift_bridgeObjectRetain_n();
      id v13 = v9;
      NSObject.hash(into:)();

      Swift::Int v14 = Hasher._finalize()();
      uint64_t v15 = -1 << *(unsigned char *)(v12 + 32);
      unint64_t v16 = v14 & ~v15;
      if ((*(void *)(v12 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16))
      {
        id v27 = (id)v11;
        uint64_t v17 = ~v15;
        while (1)
        {
          uint64_t v18 = *(void *)(v12 + 48) + 16 * v16;
          if (*(unsigned char *)(v18 + 8) == 2)
          {
            Swift::Int v19 = *(void **)v18;
            id v20 = v13;
            sub_1007A0914(v19, 2u);
            char v21 = static NSObject.== infix(_:_:)();

            sub_1007A0938(v19, 2u);
            if (v21) {
              break;
            }
          }
          unint64_t v16 = (v16 + 1) & v17;
          if (((*(void *)(v12 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v11 = (uint64_t)v27;
            goto LABEL_23;
          }
        }
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_100CCDF1C();
        }
        uint64_t v22 = *(void *)(v12 + 48) + 16 * v16;
        uint64_t v23 = *(void **)v22;
        unsigned __int8 v24 = *(unsigned char *)(v22 + 8);
        sub_100DA1A78(v16);
        swift_bridgeObjectRelease();
        sub_1007A0938(v23, v24);
        uint64_t v11 = (uint64_t)v27;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
LABEL_23:
      uint64_t v25 = *(void *)(v11 + 48);
      swift_bridgeObjectRetain();
      sub_100D991B4(v12);
      *(void *)(v11 + 48) = v12;
      swift_bridgeObjectRelease();
      sub_100D994DC(v25);
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
LABEL_15:
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100DBB3B8(void *a1, int a2)
{
  uint64_t v5 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = &v42[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = &v42[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13, v16);
  uint64_t v17 = &v42[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __n128 v20 = __chkstk_darwin(v18, v19);
  uint64_t v22 = &v42[-v21];
  if (!a1)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, __n128))(v14 + 56))(v12, 1, 1, v13, v20);
    return sub_100522F00((uint64_t)v12, &qword_101672C30);
  }
  uint64_t v44 = v8;
  uint64_t v45 = v2;
  id v23 = [a1 recordID:v20.n128_f64[0]];
  id v24 = [v23 zoneID];

  sub_100D29C10((uint64_t)v12);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1) {
    return sub_100522F00((uint64_t)v12, &qword_101672C30);
  }
  int v43 = a2;
  sub_100DBF9A8((uint64_t)v12, (uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v25 = (void *)static OS_os_log.shareState;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v27 = v25;
  uint64_t v28 = UUID.uuidString.getter();
  uint64_t v30 = v29;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v28;
  *(void *)(inited + 40) = v30;
  uint64_t v31 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v27, (uint64_t)&_mh_execute_header, v31, (uint64_t)"Stopped sharing board: %@", 25, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_100D7795C((uint64_t)v22);
  type metadata accessor for CRLBoardLibrary();
  uint64_t v32 = swift_dynamicCastClass();
  if (v32)
  {
    uint64_t v33 = v32;
    uint64_t v34 = type metadata accessor for TaskPriority();
    uint64_t v35 = (uint64_t)v44;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v44, 1, 1, v34);
    sub_100DBF940((uint64_t)v22, (uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
    type metadata accessor for MainActor();
    swift_unknownObjectRetain_n();
    id v36 = a1;
    uint64_t v37 = static MainActor.shared.getter();
    unint64_t v38 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v39 = (void *)swift_allocObject();
    v39[2] = v37;
    v39[3] = &protocol witness table for MainActor;
    v39[4] = v33;
    sub_100DBF9A8((uint64_t)v17, (uint64_t)v39 + v38, type metadata accessor for CRLBoardIdentifier);
    uint64_t v40 = (char *)v39 + ((v15 + v38 + 7) & 0xFFFFFFFFFFFFFFF8);
    *(void *)uint64_t v40 = a1;
    v40[8] = v43 & 1;
    sub_1006D9104(v35, (uint64_t)&unk_10169B4F8, (uint64_t)v39);
    swift_unknownObjectRelease();
    swift_release();
  }
  return sub_100DBFA10((uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
}

void sub_100DBB878(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = (void *)static OS_os_log.shareState;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v6 = v4;
  uint64_t v7 = Error.localizedDescription.getter();
  uint64_t v9 = v8;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v9;
  uint64_t v10 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Share failed with error %@", 26, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_100DB2E18(a1, v2);
}

uint64_t sub_100DBB9E4()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v5 + 9, v4);
}

uint64_t sub_100DBBB00(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *(void *)v10;
  char v12 = v10[8];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100528D08;
  return sub_100D8C6E4(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_100DBBC48()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100DBBC84(uint64_t a1)
{
  return sub_100DBCE18(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100D817E8);
}

uint64_t sub_100DBBC9C()
{
  return sub_100DBF830((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release, 48);
}

uint64_t sub_100DBBCCC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_100D941C4(a1, v4, v5, v7, v6);
}

void sub_100DBBD8C(uint64_t a1)
{
  sub_100D7C020(a1, v1, (void (*)(double *))sub_100D7BBE0);
}

void sub_100DBBDBC()
{
}

void sub_100DBBDC4(uint64_t a1)
{
  sub_100D7C020(a1, v1, (void (*)(double *))sub_100D7C1E0);
}

uint64_t sub_100DBBDF4()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100DBBE34(uint64_t a1)
{
  return sub_100D946C0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100DBBE3C()
{
  return sub_100DBF830((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease, 48);
}

uint64_t sub_100DBBE6C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528488;
  return sub_100D94854(a1, v4, v5, v7, v6);
}

uint64_t sub_100DBBF2C()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100DBBF94(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100528D08;
  return sub_100D914D8(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100DBC080(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_100528488;
  return sub_100EF6180(a1, a2, v7, v6);
}

uint64_t sub_100DBC134()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100DBC16C()
{
  swift_bridgeObjectRelease();

  swift_release();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100DBC1CC(uint64_t a1)
{
  return sub_100D93EB8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_100DBC1DC()
{
  swift_release();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100DBC234()
{
  return sub_100D93A9C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_100DBC24C(uint64_t a1)
{
  return sub_100D93E50(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_100DBC258(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1005057FC((uint64_t *)&unk_10168E130) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 40);
  char v9 = *(unsigned char *)(v1 + 48);
  uint64_t v10 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100528D08;
  return sub_100D93038(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100DBC370()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_10168E130);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 49) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100DBC454()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_10168E130);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 33) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100DBC52C()
{
  uint64_t v1 = *(void *)(sub_1005057FC((uint64_t *)&unk_10168E130) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 32);
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100D93860(v2, v3, v4, v5);
}

uint64_t sub_100DBC598()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100DBC5E8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  char v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *char v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100D95120(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100DBC6B0()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

void sub_100DBC6E8(void (*a1)(double *), uint64_t a2)
{
  sub_100D7C380(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

void sub_100DBC6F4()
{
}

void sub_100DBC6FC()
{
}

void sub_100DBC704()
{
}

void sub_100DBC70C()
{
}

void sub_100DBC714(uint64_t a1)
{
  sub_100D7D754(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

void sub_100DBC720(void (*a1)(unint64_t))
{
}

void sub_100DBC728()
{
}

void sub_100DBC730()
{
}

uint64_t sub_100DBC738()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100DBC770(void *a1)
{
  return sub_100D78A8C(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_100DBC77C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100DBC7BC(void *a1)
{
  return sub_100D78E28(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

void sub_100DBC7CC()
{
  sub_100D769A0(*(void **)(v0 + 16));
}

void sub_100DBC7D4()
{
}

id sub_100DBC7DC(uint64_t a1, uint64_t a2)
{
  return sub_100D9DD48(a1, a2);
}

id sub_100DBC7E4()
{
  return sub_100D9E4B8();
}

void sub_100DBC7EC(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_100D9EF30(a1, *(unsigned char *)(v2 + 24), a2);
}

void sub_100DBC7FC(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v10 = *(void *)(v4 + 16);
  uint64_t v11 = v4 + ((*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  sub_100D9E940(a1, a2, a3, a4, v10, v11);
}

uint64_t sub_100DBC898()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100DBC8D0()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v3, v8);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1005057FC(&qword_101677100);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = sub_1005057FC(&qword_101670F30);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v3, 5, v6))
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100DBCA90(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100D9EC58(a1, v4, v5, v6);
}

void sub_100DBCB04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100D9F1E0(a1, a2, a3, v3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id, void *))sub_100DAD138);
}

void sub_100DBCB34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100D9F1E0(a1, a2, a3, v3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id, void *))sub_100DAF60C);
}

uint64_t sub_100DBCB64()
{
  uint64_t v1 = sub_1005057FC(&qword_10169B5C8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_1005057FC(&qword_10169B5C0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_100DBCCC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1005057FC(&qword_10169B5C8);
  sub_1005057FC(&qword_10169B5C0);

  return sub_100D9F2B4(a1, a2, a3);
}

unint64_t sub_100DBCDBC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100D9F448(a1, a2, a3, a4);
}

uint64_t sub_100DBCDC4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100DBCE00(uint64_t a1)
{
  return sub_100DBCE18(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10101BD7C);
}

uint64_t sub_100DBCE18(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5, v6);
}

uint64_t sub_100DBCEA4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100528D08;
  return sub_10101D430(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_100DBCF7C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t v10 = *(void *)(v1 + v6);
  double v11 = *(double *)(v1 + v7);
  uint64_t v12 = v1 + v5;
  uint64_t v13 = (uint64_t *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v14 = *v13;
  uint64_t v15 = v13[1];
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_100528D08;
  return sub_10101CDA8(v11, a1, v8, v9, v12, v10, v14, v15);
}

uint64_t sub_100DBD0D0(uint64_t a1)
{
  return sub_1008EA12C(a1);
}

uint64_t sub_100DBD0DC(uint64_t a1)
{
  type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  uint64_t v7 = *((void *)v1 + 5);
  uint64_t v8 = *((void *)v1 + 6);
  double v9 = v1[7];
  uint64_t v10 = *((void *)v1 + 8);
  uint64_t v11 = *((void *)v1 + 9);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_100528D08;
  return sub_10101C194(v9, a1, v4, v5, v6, v7, v8, v10, v11);
}

uint64_t sub_100DBD214()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100DBD260()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v4);
}

uint64_t sub_100DBD394()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 80) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v3, v8);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1005057FC(&qword_101677100);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = sub_1005057FC(&qword_101670F30);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v3, 5, v6))
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_100DBD574()
{
}

uint64_t sub_100DBD57C()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100DBD650()
{
  type metadata accessor for IndexPath();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);

  sub_100D8315C(v1, v2);
}

uint64_t sub_100DBD6B4()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100DBD780()
{
  return sub_100DBD898((uint64_t (*)(uint64_t, uint64_t))sub_100D81B74);
}

UIMenu sub_100DBD798(uint64_t a1)
{
  return sub_100D81CD0(a1, *(void *)(v1 + 16), *(char **)(v1 + 24));
}

void sub_100DBD7A8(uint64_t a1)
{
  sub_100D8EFA4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_100DBD7B4()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100DBD880()
{
  return sub_100DBD898((uint64_t (*)(uint64_t, uint64_t))sub_100D8C930);
}

uint64_t sub_100DBD898(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3, v4);
}

uint64_t sub_100DBD910()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);

  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v3, v8);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1005057FC(&qword_101677100);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = sub_1005057FC(&qword_101670F30);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v3, 5, v6))
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }
  unint64_t v9 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = v9 + 8;

  return _swift_deallocObject(v0, v10, v2 | 7);
}

Class sub_100DBDAEC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void **)(v1 + 16);
  uint64_t v6 = *(char **)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_100D8CB24(a1, v5, v1 + v4, v6);
}

uint64_t sub_100DBDB8C()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_bridgeObjectRelease();
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v3, v8);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1005057FC(&qword_101677100);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = sub_1005057FC(&qword_101670F30);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v3, 5, v6))
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_100DBDD54(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_100D8FA40(a1, a2, v6, v7, v8);
}

uint64_t sub_100DBDDDC(uint64_t a1)
{
  return sub_100DBDE08(a1, (uint64_t)sub_100D7BBE0, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_100D90204);
}

uint64_t sub_100DBDE08(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, unint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  return a3(a1, *(void *)(v3 + 16), v3 + ((*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), a2);
}

uint64_t sub_100DBDE8C(uint64_t a1)
{
  return sub_100DBDE08(a1, (uint64_t)sub_100D84E04, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_100D8F380);
}

uint64_t sub_100DBDEC0(uint64_t a1)
{
  return sub_100DBDE08(a1, (uint64_t)sub_100D7C1E0, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_100D90204);
}

uint64_t sub_100DBDEEC()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);

  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v3, v8);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1005057FC(&qword_101677100);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = sub_1005057FC(&qword_101670F30);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v3, 5, v6))
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_100DBE0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_100D96684(a1, a2, v6, v7);
}

void sub_100DBE130()
{
  sub_100D97498(*(void **)(v0 + 16));
}

uint64_t sub_100DBE138()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v3, v8);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1005057FC(&qword_101677100);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = sub_1005057FC(&qword_101670F30);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v3, 5, v6))
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }
  unint64_t v9 = (((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  return _swift_deallocObject(v0, v9 + 8, v2 | 7);
}

uint64_t sub_100DBE318(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + v5);
  uint64_t v7 = *(void **)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_100D975DC(a1, v1 + v4, v6, v7);
}

uint64_t sub_100DBE3C0()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v14 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v2 = (v14 + 32) & ~v14;
  unint64_t v3 = (((((((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v13 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v5 = (v13 + v3 + 16) & ~v13;
  uint64_t v12 = *(void *)(v4 + 64);
  swift_unknownObjectRelease();
  uint64_t v6 = v0 + v2;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v11(v6, v7);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v11(v0 + v5, v7);
    swift_bridgeObjectRelease();
    sub_1005057FC(&qword_101677100);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = sub_1005057FC(&qword_101670F30);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v0 + v5, 5, v9))
    {
      v11(v0 + v5, v7);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }

  return _swift_deallocObject(v0, v5 + v12, v14 | v13 | 7);
}

uint64_t sub_100DBE66C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v15 = *(void *)(v1 + 24);
  uint64_t v16 = *(void *)(v1 + 16);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + v5);
  uint64_t v10 = *(void *)(v8 + 8);
  uint64_t v11 = *(void *)(v1 + v6);
  uint64_t v12 = *(void *)(v1 + v7);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100528D08;
  return sub_100D979F4(a1, v16, v15, v1 + v4, v9, v10, v11, v12);
}

uint64_t sub_100DBE830(uint64_t a1)
{
  return sub_100DBDE08(a1, (uint64_t)sub_100D85320, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_100D8F380);
}

uint64_t sub_100DBE860(uint64_t a1)
{
  return sub_100DBCE18(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100D8F3F0);
}

uint64_t sub_100DBE87C(uint64_t a1)
{
  return sub_100DBCE18(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100D8F16C);
}

uint64_t sub_100DBE898(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100D8B69C(a1, v5, v6, v7, v8);
}

uint64_t sub_100DBE998(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100D9028C(a1, v5, v6, v7, v8);
}

uint64_t sub_100DBEA98(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100D87D6C(a1, v5, v6, v7, v8);
}

id sub_100DBEB94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100D8ACC0(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_100DBEB9C()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;

  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

void sub_100DBEC94(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v10 = *(void **)(v4 + 16);
  uint64_t v11 = v4 + ((*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  sub_100D8B358(a1, a2, a3, a4, v10, v11);
}

uint64_t sub_100DBED30()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100DBED88()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();

  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100DBEE88(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100D8B5E0(a1, v5, v6, v7, v8);
}

uint64_t sub_100DBEF88(uint64_t a1)
{
  return sub_100DBCE18(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100D900AC);
}

uint64_t sub_100DBEFA4()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v3, v8);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1005057FC(&qword_101677100);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = sub_1005057FC(&qword_101670F30);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v3, 5, v6))
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100DBF164(uint64_t a1)
{
  return sub_100DBCE18(a1, sub_100D8FE84);
}

uint64_t sub_100DBF17C()
{
  return sub_100DBF830((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease, 49);
}

uint64_t sub_100DBF1AC()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v3, v8);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1005057FC(&qword_101677100);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = sub_1005057FC(&qword_101670F30);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v3, 5, v6))
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }
  unint64_t v9 = (((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  return _swift_deallocObject(v0, v9 + 8, v2 | 7);
}

uint64_t sub_100DBF398()
{
  return sub_100D791B0();
}

uint64_t sub_100DBF3A0(uint64_t a1)
{
  return sub_100D75B0C(a1, v1, (uint64_t)&unk_10152CC80, (uint64_t)&unk_10169B6E8);
}

uint64_t sub_100DBF3D8(uint64_t a1)
{
  return sub_100D75B0C(a1, v1, (uint64_t)&unk_10152CC58, (uint64_t)&unk_10169B6D8);
}

uint64_t sub_100DBF414(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100D75C5C(a1, v4, v5, v6);
}

uint64_t sub_100DBF4CC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100D75A74(a1, v4, v5, v6);
}

void sub_100DBF580()
{
}

void sub_100DBF588()
{
}

uint64_t sub_100DBF590(unint64_t a1)
{
  return sub_100D9BFC8(a1);
}

uint64_t sub_100DBF598()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100DBF5D8()
{
  return sub_100D9C028(*(void *)(v0 + 16), *(void (**)(char *))(v0 + 24));
}

uint64_t sub_100DBF5E4()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

id sub_100DBF624(unint64_t a1, void *a2)
{
  return sub_1005D3EFC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_100DBF638()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();

  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v3, v8);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1005057FC(&qword_101677100);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = sub_1005057FC(&qword_101670F30);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v3, 5, v6))
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100DBF800()
{
  return sub_100DBF830((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease, 49);
}

uint64_t sub_100DBF830(void (*a1)(void), void (*a2)(void), uint64_t a3)
{
  swift_unknownObjectRelease();
  a1(*(void *)(v3 + 32));
  a2(*(void *)(v3 + 40));

  return _swift_deallocObject(v3, a3, 7);
}

void sub_100DBF89C()
{
  uint64_t v1 = (void (**)(void))[*(id *)(v0 + 16) actionBlock];
  v1[2]();

  _Block_release(v1);
}

uint64_t sub_100DBF8F8()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100DBF940(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100DBF9A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100DBFA10(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100DBFA74(void *a1)
{
  return sub_1007E7080(a1) & 1;
}

uint64_t sub_100DBFA90(uint64_t a1)
{
  return sub_100575C00(a1) & 1;
}

id sub_100DBFC00(void *a1)
{
  id v2 = [a1 accessibilityContrast];
  id v3 = [a1 userInterfaceStyle];
  uint64_t v4 = self;
  BOOL v5 = v3 == (id)2 && v2 == (id)1;
  uint64_t v6 = &selRef_blackColor;
  if (!v5) {
    uint64_t v6 = &selRef_whiteColor;
  }
  id v7 = [v4 *v6];

  return v7;
}

double CRLiOSPageTitleButton.insets.getter()
{
  return sub_100DBFD74(&OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_insets);
}

uint64_t CRLiOSPageTitleButton.insets.setter(double a1, double a2, double a3, double a4)
{
  return sub_100DBFE3C(&OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_insets, a1, a2, a3, a4);
}

uint64_t (*CRLiOSPageTitleButton.insets.modify())()
{
  return j_j__swift_endAccess;
}

double sub_100DBFD20(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a1 + *a3;
  swift_beginAccess();
  return *(double *)v3;
}

double CRLiOSPageTitleButton.hitTestingInsets.getter()
{
  return sub_100DBFD74(&OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_hitTestingInsets);
}

double sub_100DBFD74(void *a1)
{
  uint64_t v2 = v1 + *a1;
  swift_beginAccess();
  return *(double *)v2;
}

uint64_t sub_100DBFDC8(uint64_t a1, double a2, double a3, double a4, double a5, uint64_t a6, void *a7)
{
  uint64_t v11 = (double *)(a1 + *a7);
  uint64_t result = swift_beginAccess();
  *uint64_t v11 = a2;
  v11[1] = a3;
  v11[2] = a4;
  v11[3] = a5;
  return result;
}

uint64_t CRLiOSPageTitleButton.hitTestingInsets.setter(double a1, double a2, double a3, double a4)
{
  return sub_100DBFE3C(&OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_hitTestingInsets, a1, a2, a3, a4);
}

uint64_t sub_100DBFE3C(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10 = (double *)(v5 + *a1);
  uint64_t result = swift_beginAccess();
  *uint64_t v10 = a2;
  v10[1] = a3;
  v10[2] = a4;
  v10[3] = a5;
  return result;
}

uint64_t (*CRLiOSPageTitleButton.hitTestingInsets.modify())()
{
  return j__swift_endAccess;
}

id CRLiOSPageTitleButton.__allocating_init(title:insets:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  id v13 = objc_allocWithZone(v6);
  return CRLiOSPageTitleButton.init(title:insets:)(a1, a2, a3, a4, a5, a6);
}

id CRLiOSPageTitleButton.init(title:insets:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v47 = a1;
  uint64_t v48 = a2;
  uint64_t v11 = sub_1005057FC(&qword_10168A8B0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for UIButton.Configuration();
  uint64_t v20 = *(void *)(v46 - 8);
  __chkstk_darwin(v46, v21);
  id v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_titleFont;
  uint64_t v25 = self;
  id v26 = v6;
  *(void *)&v6[v24] = [v25 systemFontOfSize:14.0 weight:UIFontWeightRegular];
  uint64_t v27 = OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_selectedTitleColor;
  id v28 = objc_allocWithZone((Class)UIColor);
  aBlock[4] = sub_100DBFC00;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_1005058D4;
  aBlock[3] = &unk_10152CE50;
  uint64_t v29 = _Block_copy(aBlock);
  id v30 = [v28 initWithDynamicProvider:v29];
  _Block_release(v29);
  swift_release();
  *(void *)&v26[v27] = v30;
  uint64_t v31 = &v26[OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_hitTestingInsets];
  long long v32 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)uint64_t v31 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v31 + 1) = v32;
  uint64_t v33 = (double *)&v26[OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_insets];
  *uint64_t v33 = a3;
  v33[1] = a4;
  v33[2] = a5;
  v33[3] = a6;

  uint64_t v34 = (objc_class *)type metadata accessor for CRLiOSPageTitleButton();
  v49.receiver = v26;
  v49.super_class = v34;
  id v35 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  static UIButton.Configuration.plain()();
  UIButton.Configuration.title.setter();
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v19, enum case for UIButton.Configuration.CornerStyle.large(_:), v15);
  UIButton.Configuration.cornerStyle.setter();
  uint64_t v36 = v46;
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v14, v23, v46);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v14, 0, 1, v36);
  id v37 = v35;
  UIButton.configuration.setter();

  id v38 = [v37 layer];
  [v38 setCornerRadius:7.5];

  [v37 setPointerInteractionEnabled:1];
  *(void *)(swift_allocObject() + 16) = v37;
  id v39 = v37;
  UIButton.pointerStyleProvider.setter();
  [v39 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v39 setShowsLargeContentViewer:1];
  id v40 = [self sharedHelper];
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_101177E70;
  *(void *)(v41 + 32) = v39;
  aBlock[0] = v41;
  specialized Array._endMutation()();
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  id v42 = v39;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v40 startHandlingTouchUpDownAnimationsForControl:v42 withViews:isa];

  (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v36);
  return v42;
}

id CRLiOSPageTitleButton.__deallocating_deinit()
{
  id v1 = [self sharedHelper];
  [v1 stopHandlingTouchUpDownAnimationsForControl:v0];

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for CRLiOSPageTitleButton();
  [super dealloc];
}

id CRLiOSAutoSizingHostingController.__allocating_init(coder:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithCoder:a1];

  return v3;
}

Swift::Void __swiftcall CRLiOSPageTitleButton.setAttributedTitle(_:for:)(NSAttributedString_optional _, UIControlState a2)
{
  uint64_t v3 = *(void *)&_.is_nil;
  if (_.value.super.isa)
  {
    id v4 = [(objc_class *)_.value.super.isa string];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v5 = 0;
  }
  [v2 setTitle:v5 forState:v3];
}

Swift::Void __swiftcall CRLiOSPageTitleButton.updateConfiguration()()
{
  id v1 = v0;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_1016725A0);
  __chkstk_darwin(v2 - 8, v3);
  id v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UIButton.Configuration.CornerStyle();
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v8 = sub_1005057FC(&qword_10168A8B0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v35 - v14;
  uint64_t v16 = type metadata accessor for UIButton.Configuration();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v23 = __chkstk_darwin(v21, v22).n128_u64[0];
  uint64_t v25 = (char *)&v35 - v24;
  if (objc_msgSend(v0, "isSelected", v23))
  {
    static UIButton.Configuration.filled()();
  }
  else if ([v0 isHighlighted])
  {
    static UIButton.Configuration.tinted()();
  }
  else
  {
    static UIButton.Configuration.plain()();
  }
  UIButton.configuration.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1009A7098((uint64_t)v15);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v15, v16);
    UIButton.Configuration.title.getter();
    UIButton.Configuration.title.setter();
    UIButton.Configuration.cornerStyle.getter();
    UIButton.Configuration.cornerStyle.setter();
    sub_1003E86EC();
    swift_beginAccess();
    UIButton.Configuration.contentInsets.setter();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  }
  if ([v0 isSelected]) {
    id v26 = *(id *)&v0[OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_selectedTitleColor];
  }
  else {
    id v26 = [v0 tintColor];
  }
  uint64_t v27 = v26;
  id v28 = *(void **)&v1[OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_titleFont];
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v28;
  *(void *)(v29 + 24) = v27;
  id v30 = v28;
  id v31 = v27;
  UIConfigurationTextAttributesTransformer.init(_:)();
  uint64_t v32 = type metadata accessor for UIConfigurationTextAttributesTransformer();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v5, 0, 1, v32);
  UIButton.Configuration.titleTextAttributesTransformer.setter();
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v11, v25, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v11, 0, 1, v16);
  UIButton.configuration.setter();
  UIButton.Configuration.title.getter();
  if (v33)
  {
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v34 = 0;
  }
  [v1 setAccessibilityLabel:v34];

  (*(void (**)(char *, uint64_t))(v17 + 8))(v25, v16);
}

uint64_t sub_100DC0CDC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for AttributeContainer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a4, a1, v8);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100522B9C();
  id v9 = a2;
  AttributeContainer.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100DC17B0();
  id v10 = a3;
  return AttributeContainer.subscript.setter();
}

uint64_t sub_100DC0DE4()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

id CRLiOSPageTitleButton.point(inside:with:)(uint64_t a1, CGFloat a2, CGFloat a3)
{
  if ([v3 isEnabled] && (objc_msgSend(v3, "isHidden") & 1) == 0)
  {
    [v3 bounds];
    double v9 = v8;
    double v11 = v10;
    double v13 = v12;
    double v15 = v14;
    uint64_t v16 = (double *)&v3[OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_hitTestingInsets];
    swift_beginAccess();
    v19.origin.x = sub_100A4A174(v9, v11, v13, v15, *v16, v16[1]);
    v18.x = a2;
    v18.y = a3;
    return (id)CGRectContainsPoint(v19, v18);
  }
  else
  {
    v17.receiver = v3;
    v17.super_class = (Class)type metadata accessor for CRLiOSPageTitleButton();
    return [super pointInside:a1 withEvent:a2];
  }
}

id CRLiOSPageTitleButton.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return [v9 initWithFrame:a1, a2, a3, a4];
}

void CRLiOSPageTitleButton.init(frame:)()
{
}

uint64_t sub_100DC1170(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100DC1180()
{
  return swift_release();
}

uint64_t type metadata accessor for CRLiOSPageTitleButton()
{
  return self;
}

uint64_t sub_100DC11AC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100DC11E4()
{
  return sub_100DC1210();
}

uint64_t sub_100DC1210()
{
  uint64_t v0 = sub_1005057FC(&qword_10169B7E8);
  __chkstk_darwin(v0 - 8, v1);
  id v39 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UIPointerShape();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (uint64_t *)((char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = type metadata accessor for UIPointerEffect();
  uint64_t v8 = *(void *)(v36 - 8);
  __chkstk_darwin(v36, v9);
  id v37 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  double v14 = (uint64_t *)((char *)&v36 - v13);
  double v15 = (void *)UIPointerEffect.preview.getter();
  uint64_t v16 = (int *)sub_1005057FC(&qword_10169B7F0);
  objc_super v17 = (char *)v14 + v16[12];
  uint64_t v18 = v16[16];
  uint64_t v19 = v16[20];
  void *v14 = v15;
  uint64_t v20 = enum case for UIPointerEffect.TintMode.underlay(_:);
  uint64_t v21 = type metadata accessor for UIPointerEffect.TintMode();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v17, v20, v21);
  *((unsigned char *)v14 + v18) = 0;
  *((unsigned char *)v14 + v19) = 0;
  uint64_t v22 = v36;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v14, enum case for UIPointerEffect.hover(_:), v36);
  id v23 = v15;
  [v38 bounds];
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  static UIPointerShape.defaultCornerRadius.getter();
  *uint64_t v7 = v25;
  v7[1] = v27;
  v7[2] = v29;
  v7[3] = v31;
  v7[4] = v32;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v7, enum case for UIPointerShape.roundedRect(_:), v3);
  sub_10050BF48(0, &qword_10169B7F8);
  (*(void (**)(char *, void *, uint64_t))(v8 + 16))(v37, v14, v22);
  uint64_t v33 = v39;
  (*(void (**)(char *, void *, uint64_t))(v4 + 16))(v39, v7, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v33, 0, 1, v3);
  uint64_t v34 = UIPointerStyle.init(effect:shape:)();

  (*(void (**)(void *, uint64_t))(v4 + 8))(v7, v3);
  (*(void (**)(void *, uint64_t))(v8 + 8))(v14, v22);
  return v34;
}

void _s8Freeform21CRLiOSPageTitleButtonC5coderACSgSo7NSCoderC_tcfc_0()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_titleFont;
  *(void *)&v0[v1] = [self systemFontOfSize:14.0 weight:UIFontWeightRegular];
  uint64_t v2 = OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_selectedTitleColor;
  id v3 = objc_allocWithZone((Class)UIColor);
  aBlock[4] = sub_100DBFC00;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_1005058D4;
  aBlock[3] = &unk_10152CF08;
  uint64_t v4 = _Block_copy(aBlock);
  id v5 = [v3 initWithDynamicProvider:v4];
  _Block_release(v4);
  swift_release();
  *(void *)&v0[v2] = v5;
  uint64_t v6 = &v0[OBJC_IVAR____TtC8Freeform21CRLiOSPageTitleButton_hitTestingInsets];
  long long v7 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)uint64_t v6 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v6 + 1) = v7;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100DC1708()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100DC1748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100DC0CDC(a1, *(void **)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t sub_100DC175C()
{
  return 8;
}

uint64_t sub_100DC1768()
{
  return swift_release();
}

uint64_t sub_100DC1770(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_100DC1784(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_100DC1790()
{
}

unint64_t sub_100DC17B0()
{
  unint64_t result = qword_10169B7D8;
  if (!qword_10169B7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169B7D8);
  }
  return result;
}

void sub_100DC1804()
{
}

uint64_t sub_100DC182C()
{
  return 8;
}

uint64_t sub_100DC183C()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

id sub_100DC18D8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSharingStringsProvider();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLSharingStringsProvider()
{
  return self;
}

uint64_t sub_100DC1930()
{
  long long v7 = &type metadata for CRLAppleAccountFeatureFlags;
  unint64_t v8 = sub_1007B9E4C();
  isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v6);
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

uint64_t sub_100DC1A68(uint64_t a1)
{
  NSString v1 = *(void **)(a1 + 16);
  if (v1
    && (id v2 = [v1 owner],
        uint64_t v3 = sub_100B44E98(0),
        uint64_t v5 = v4,
        v2,
        v5))
  {
    uint64_t v6 = self;
    swift_bridgeObjectRetain();
    id v7 = [v6 mainBundle];
    NSString v13 = String._bridgeToObjectiveC()();
    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = [v7 localizedStringForKey:v13 value:v14 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_10117E810;
    *(void *)(v16 + 56) = &type metadata for String;
    *(void *)(v16 + 64) = sub_100528BE4();
    *(void *)(v16 + 32) = v3;
    *(void *)(v16 + 40) = v5;
    uint64_t v17 = String.init(format:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v17;
  }
  else
  {
    id v8 = [self mainBundle];
    NSString v9 = String._bridgeToObjectiveC()();
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [v8 localizedStringForKey:v9 value:v10 table:0];

    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    return v12;
  }
}

uint64_t sub_100DC1D10(unint64_t a1)
{
  if (a1 > 1)
  {
    uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    __break(1u);
  }
  else
  {
    id v1 = [self mainBundle];
    NSString v2 = String._bridgeToObjectiveC()();
    NSString v3 = String._bridgeToObjectiveC()();
    id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    return v5;
  }
  return result;
}

uint64_t sub_100DC1E34(unint64_t a1)
{
  if (a1 > 1)
  {
    uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    __break(1u);
  }
  else
  {
    id v1 = [self mainBundle];
    NSString v2 = String._bridgeToObjectiveC()();
    NSString v3 = String._bridgeToObjectiveC()();
    id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    return v5;
  }
  return result;
}

uint64_t sub_100DC1F8C(uint64_t a1, uint64_t a2)
{
  id v4 = [self mainBundle];
  NSString v5 = String._bridgeToObjectiveC()();
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v4 localizedStringForKey:v5 value:v6 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10117E810;
  *(void *)(v8 + 56) = &type metadata for String;
  *(void *)(v8 + 64) = sub_100528BE4();
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v9 = String.init(format:_:)();
  swift_bridgeObjectRelease();
  return v9;
}

void *sub_100DC20D4(_WORD *a1, void *a2, int *a3)
{
  id v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *id v4 = *a2;
    id v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_WORD *)a2;
    uint64_t v7 = a3[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date();
    id v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = a3[7];
    NSString v13 = (void **)((char *)v4 + v12);
    NSString v14 = (void **)((char *)a2 + v12);
    uint64_t v15 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_1005057FC((uint64_t *)&unk_1016741E0);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      id v37 = v11;
      uint64_t v38 = v10;
      uint64_t v20 = *v14;
      uint64_t v19 = v14[1];
      *NSString v13 = *v14;
      v13[1] = v19;
      void v13[2] = v14[2];
      *((unsigned char *)v13 + 24) = *((unsigned char *)v14 + 24);
      uint64_t v21 = *(int *)(v15 + 28);
      __dst = (char *)v13 + v21;
      uint64_t v36 = (char *)v14 + v21;
      uint64_t v22 = type metadata accessor for URL();
      uint64_t v33 = *(void *)(v22 - 8);
      uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
      id v23 = v20;
      swift_bridgeObjectRetain();
      if (v35(v36, 1, v22))
      {
        uint64_t v24 = sub_1005057FC(&qword_101672E90);
        memcpy(__dst, v36, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(__dst, v36, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v22);
      }
      (*(void (**)(void **, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      id v11 = v37;
      uint64_t v10 = v38;
    }
    uint64_t v25 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *((unsigned char *)v4 + v25) = *((unsigned char *)a2 + v25);
    uint64_t v26 = a3[11];
    *((unsigned char *)v4 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    uint64_t v27 = (char *)v4 + v26;
    uint64_t v28 = (char *)a2 + v26;
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    uint64_t v29 = a3[13];
    *((unsigned char *)v4 + a3[12]) = *((unsigned char *)a2 + a3[12]);
    *((unsigned char *)v4 + v29) = *((unsigned char *)a2 + v29);
    uint64_t v30 = a3[15];
    *((unsigned char *)v4 + a3[14]) = *((unsigned char *)a2 + a3[14]);
    uint64_t v31 = a3[16];
    *((unsigned char *)v4 + v30) = *((unsigned char *)a2 + v30);
    v11((char *)v4 + v31, (char *)a2 + v31, v10);
  }
  return v4;
}

uint64_t type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10169B948);
}

uint64_t sub_100DC2444(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for Date();
  NSString v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v13(v4, v5);
  NSString v6 = (id *)(a1 + a2[7]);
  uint64_t v7 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {

    swift_bridgeObjectRelease();
    uint64_t v8 = (char *)v6 + *(int *)(v7 + 28);
    uint64_t v9 = type metadata accessor for URL();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    }
  }
  uint64_t v11 = a1 + a2[16];

  return ((uint64_t (*)(uint64_t, uint64_t))v13)(v11, v5);
}

_WORD *sub_100DC25C8(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = (void **)((char *)a1 + v11);
  NSString v13 = (void **)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_1016741E0);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v35 = v10;
    uint64_t v36 = v9;
    uint64_t v18 = *v13;
    uint64_t v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    v12[2] = v13[2];
    *((unsigned char *)v12 + 24) = *((unsigned char *)v13 + 24);
    uint64_t v19 = *(int *)(v14 + 28);
    uint64_t v33 = (char *)v13 + v19;
    __dst = (char *)v12 + v19;
    uint64_t v20 = type metadata accessor for URL();
    uint64_t v31 = *(void *)(v20 - 8);
    uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
    id v21 = v18;
    swift_bridgeObjectRetain();
    if (v32(v33, 1, v20))
    {
      uint64_t v22 = sub_1005057FC(&qword_101672E90);
      memcpy(__dst, v33, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v33, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v20);
    }
    (*(void (**)(void **, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    uint64_t v10 = v35;
    uint64_t v9 = v36;
  }
  uint64_t v23 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v23) = *((unsigned char *)a2 + v23);
  uint64_t v24 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  *(void *)uint64_t v25 = *(void *)v26;
  v25[8] = v26[8];
  uint64_t v27 = a3[13];
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  *((unsigned char *)a1 + v27) = *((unsigned char *)a2 + v27);
  uint64_t v28 = a3[15];
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  uint64_t v29 = a3[16];
  *((unsigned char *)a1 + v28) = *((unsigned char *)a2 + v28);
  v10((char *)a1 + v29, (char *)a2 + v29, v9);
  return a1;
}

unsigned char *sub_100DC28C4(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v46 = *(void (**)(unsigned char *, unsigned char *))(*(void *)(v9 - 8) + 24);
  uint64_t v47 = v9;
  v46(v7, v8);
  uint64_t v10 = a3[7];
  uint64_t v11 = (uint64_t)&a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15((uint64_t)v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      uint64_t v26 = *(void **)v11;
      uint64_t v27 = *(void **)v12;
      *(void *)uint64_t v11 = *(void *)v12;
      id v28 = v27;

      *(void *)(v11 + 8) = *((void *)v12 + 1);
      *(void *)(v11 + 16) = *((void *)v12 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v11 + 24) = v12[24];
      uint64_t v29 = *(int *)(v13 + 28);
      uint64_t v30 = (void *)(v11 + v29);
      uint64_t v31 = &v12[v29];
      uint64_t v32 = type metadata accessor for URL();
      uint64_t v33 = *(void *)(v32 - 8);
      uint64_t v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
      int v35 = v34(v30, 1, v32);
      int v36 = v34(v31, 1, v32);
      if (v35)
      {
        if (!v36)
        {
          (*(void (**)(void *, unsigned char *, uint64_t))(v33 + 16))(v30, v31, v32);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v36)
        {
          (*(void (**)(void *, unsigned char *, uint64_t))(v33 + 24))(v30, v31, v32);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v33 + 8))(v30, v32);
      }
      size_t v23 = *(void *)(*(void *)(sub_1005057FC(&qword_101672E90) - 8) + 64);
      uint64_t v24 = v30;
      uint64_t v25 = v31;
      goto LABEL_8;
    }
    sub_100DC2D68(v11);
LABEL_7:
    size_t v23 = *(void *)(*(void *)(sub_1005057FC((uint64_t *)&unk_1016741E0) - 8) + 64);
    uint64_t v24 = (void *)v11;
    uint64_t v25 = v12;
LABEL_8:
    memcpy(v24, v25, v23);
    goto LABEL_14;
  }
  if (v17) {
    goto LABEL_7;
  }
  uint64_t v18 = *(void **)v12;
  *(void *)uint64_t v11 = *(void *)v12;
  *(void *)(v11 + 8) = *((void *)v12 + 1);
  *(void *)(v11 + 16) = *((void *)v12 + 2);
  *(unsigned char *)(v11 + 24) = v12[24];
  uint64_t v19 = *(int *)(v13 + 28);
  uint64_t v44 = &v12[v19];
  __dst = (void *)(v11 + v19);
  uint64_t v20 = type metadata accessor for URL();
  uint64_t v42 = *(void *)(v20 - 8);
  int v43 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v42 + 48);
  id v21 = v18;
  swift_bridgeObjectRetain();
  if (v43(v44, 1, v20))
  {
    uint64_t v22 = sub_1005057FC(&qword_101672E90);
    memcpy(__dst, v44, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, unsigned char *, uint64_t))(v42 + 16))(__dst, v44, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(__dst, 0, 1, v20);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_14:
  a1[a3[8]] = a2[a3[8]];
  a1[a3[9]] = a2[a3[9]];
  a1[a3[10]] = a2[a3[10]];
  uint64_t v37 = a3[11];
  uint64_t v38 = &a1[v37];
  id v39 = &a2[v37];
  uint64_t v40 = *(void *)v39;
  v38[8] = v39[8];
  *(void *)uint64_t v38 = v40;
  a1[a3[12]] = a2[a3[12]];
  a1[a3[13]] = a2[a3[13]];
  a1[a3[14]] = a2[a3[14]];
  a1[a3[15]] = a2[a3[15]];
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v46)(&a1[a3[16]], &a2[a3[16]], v47);
  return a1;
}

uint64_t sub_100DC2D68(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_WORD *sub_100DC2DC4(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_1016741E0);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v30 = v10;
    *uint64_t v12 = *v13;
    *(_OWORD *)(v12 + 1) = *(_OWORD *)(v13 + 1);
    *((unsigned char *)v12 + 24) = *((unsigned char *)v13 + 24);
    uint64_t v17 = *(int *)(v14 + 28);
    __dst = (char *)v12 + v17;
    uint64_t v18 = (char *)v13 + v17;
    uint64_t v19 = type metadata accessor for URL();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_1005057FC(&qword_101672E90);
      memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    uint64_t v10 = v30;
  }
  uint64_t v22 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v22) = *((unsigned char *)a2 + v22);
  uint64_t v23 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  uint64_t v26 = a3[13];
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  *((unsigned char *)a1 + v26) = *((unsigned char *)a2 + v26);
  uint64_t v27 = a3[15];
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  uint64_t v28 = a3[16];
  *((unsigned char *)a1 + v27) = *((unsigned char *)a2 + v27);
  v10((char *)a1 + v28, (char *)a2 + v28, v9);
  return a1;
}

unsigned char *sub_100DC309C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v45 = *(void (**)(unsigned char *, unsigned char *))(*(void *)(v9 - 8) + 40);
  uint64_t v46 = v9;
  v45(v7, v8);
  uint64_t v10 = a3[7];
  uint64_t v11 = (uint64_t)&a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15((uint64_t)v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      uint64_t v27 = *(void **)v11;
      *(void *)uint64_t v11 = *(void *)v12;

      uint64_t v28 = *((void *)v12 + 2);
      *(void *)(v11 + 8) = *((void *)v12 + 1);
      *(void *)(v11 + 16) = v28;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v11 + 24) = v12[24];
      uint64_t v29 = *(int *)(v13 + 28);
      uint64_t v30 = (void *)(v11 + v29);
      uint64_t v31 = &v12[v29];
      uint64_t v32 = type metadata accessor for URL();
      uint64_t v33 = *(void *)(v32 - 8);
      uint64_t v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
      int v35 = v34(v30, 1, v32);
      int v36 = v34(v31, 1, v32);
      if (v35)
      {
        if (!v36)
        {
          (*(void (**)(void *, unsigned char *, uint64_t))(v33 + 32))(v30, v31, v32);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v36)
        {
          (*(void (**)(void *, unsigned char *, uint64_t))(v33 + 40))(v30, v31, v32);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v33 + 8))(v30, v32);
      }
      size_t v24 = *(void *)(*(void *)(sub_1005057FC(&qword_101672E90) - 8) + 64);
      uint64_t v25 = v30;
      uint64_t v26 = v31;
      goto LABEL_8;
    }
    sub_100DC2D68(v11);
LABEL_7:
    size_t v24 = *(void *)(*(void *)(sub_1005057FC((uint64_t *)&unk_1016741E0) - 8) + 64);
    uint64_t v25 = (void *)v11;
    uint64_t v26 = v12;
LABEL_8:
    memcpy(v25, v26, v24);
    goto LABEL_14;
  }
  if (v17) {
    goto LABEL_7;
  }
  *(void *)uint64_t v11 = *(void *)v12;
  *(_OWORD *)(v11 + 8) = *(_OWORD *)(v12 + 8);
  *(unsigned char *)(v11 + 24) = v12[24];
  uint64_t v18 = *(int *)(v13 + 28);
  uint64_t v19 = (void *)(v11 + v18);
  uint64_t v20 = &v12[v18];
  uint64_t v21 = type metadata accessor for URL();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_1005057FC(&qword_101672E90);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, unsigned char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_14:
  uint64_t v37 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v37] = a2[v37];
  uint64_t v38 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  id v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  *(void *)id v39 = *(void *)v40;
  v39[8] = v40[8];
  uint64_t v41 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  a1[v41] = a2[v41];
  uint64_t v42 = a3[15];
  a1[a3[14]] = a2[a3[14]];
  uint64_t v43 = a3[16];
  a1[v42] = a2[v42];
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v45)(&a1[v43], &a2[v43], v46);
  return a1;
}

uint64_t sub_100DC3500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100DC3514);
}

uint64_t sub_100DC3514(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v12 = v10;
      uint64_t v13 = &a1[*(int *)(a3 + 24)];
      uint64_t v14 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v11 + 48);
      return v14(v13, a2, v12);
    }
    else
    {
      uint64_t v15 = sub_1005057FC((uint64_t *)&unk_1016741E0);
      int v16 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
      uint64_t v17 = v15;
      uint64_t v18 = &a1[*(int *)(a3 + 28)];
      return v16(v18, a2, v17);
    }
  }
}

uint64_t sub_100DC3644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100DC3658);
}

unsigned char *sub_100DC3658(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = &v5[*(int *)(a4 + 24)];
      uint64_t v12 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (unsigned char *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005057FC((uint64_t *)&unk_1016741E0);
      uint64_t v14 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      int v16 = &v5[*(int *)(a4 + 28)];
      return (unsigned char *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLBoardViewModelMetadata(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10169B880);
}

void sub_100DC37A4()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_100DC4320(319, (unint64_t *)&unk_10169B890, (void (*)(uint64_t))type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

char *sub_100DC38B4(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unsigned int v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    BOOL v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    BOOL v5 = a1;
    int v6 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v6;
    a1[24] = *((unsigned char *)a2 + 24);
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for URL();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v13 = v4;
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v14 = sub_1005057FC(&qword_101672E90);
      memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v5;
}

uint64_t sub_100DC3A40(id *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  unsigned int v4 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_100DC3B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  id v12 = v5;
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v13 = sub_1005057FC(&qword_101672E90);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_100DC3C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_1005057FC(&qword_101672E90);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_100DC3E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_1005057FC(&qword_101672E90);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_100DC3F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_1005057FC(&qword_101672E90);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_100DC40D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100DC40E4);
}

uint64_t sub_100DC40E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1005057FC(&qword_101672E90);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100DC4198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100DC41AC);
}

uint64_t sub_100DC41AC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1005057FC(&qword_101672E90);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100DC4258()
{
  sub_100DC4320(319, (unint64_t *)&qword_10167E5C0, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100DC4320(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t destroy for CRLBoardLibraryProvidingSnapshotUpdateInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s8Freeform42CRLBoardLibraryProvidingSnapshotUpdateInfoVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CRLBoardLibraryProvidingSnapshotUpdateInfo(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLBoardLibraryProvidingSnapshotUpdateInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryProvidingSnapshotUpdateInfo()
{
  return &type metadata for CRLBoardLibraryProvidingSnapshotUpdateInfo;
}

void *sub_100DC44E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return &_swiftEmptySetSingleton;
  }
  uint64_t v2 = swift_bridgeObjectRetain() + 48;
  do
  {
    uint64_t v3 = *(void *)(v2 - 16);
    v2 += 24;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10057CE80(v3);
    uint64_t v4 = swift_bridgeObjectRetain();
    sub_10057C8B4(v4);
    uint64_t v5 = swift_bridgeObjectRetain();
    sub_10057C8B4(v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return &_swiftEmptySetSingleton;
}

uint64_t sub_100DC45D0(unsigned __int8 a1)
{
  if (a1 - 2 >= 3)
  {
    if (a1) {
      return sub_100DC46D4(1u);
    }
    else {
      return 0;
    }
  }
  else
  {
    id v1 = [self mainBundle];
    NSString v2 = String._bridgeToObjectiveC()();
    NSString v3 = String._bridgeToObjectiveC()();
    id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return v5;
}

uint64_t sub_100DC46D4(unsigned __int8 a1)
{
  uint64_t v1 = a1;
  switch(a1)
  {
    case 1u:
    case 2u:
    case 3u:
      id v2 = [self mainBundle];
      NSString v3 = String._bridgeToObjectiveC()();
      NSString v4 = String._bridgeToObjectiveC()();
      id v5 = [v2 localizedStringForKey:v3 value:v4 table:0];

      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      break;
    case 4u:
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"deleteConfirmationTitleText", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryProviding.swift", 100, 2, 188, (uint64_t)"we should never have mixed share state on a single deletion. please file a bug.", 79, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"we should never have mixed share state on a single deletion. please file a bug.");
      sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deleteConfirmationTitleText", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryProviding.swift", 100, 2, 188);
      SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v7, v8);
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      JUMPOUT(0x100DC490CLL);
    default:
      return v1;
  }
  return v1;
}

uint64_t sub_100DC4920(unsigned __int8 a1)
{
  uint64_t v1 = a1;
  switch(a1)
  {
    case 1u:
      uint64_t v1 = sub_100DC4B74(1u);
      break;
    case 2u:
      id v2 = [self mainBundle];
      NSString v3 = String._bridgeToObjectiveC()();
      NSString v4 = String._bridgeToObjectiveC()();
      id v5 = [v2 localizedStringForKey:v3 value:v4 table:0];

      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      break;
    case 3u:
    case 4u:
      id v6 = [self mainBundle];
      NSString v7 = String._bridgeToObjectiveC()();
      NSString v8 = String._bridgeToObjectiveC()();
      id v9 = [v6 localizedStringForKey:v7 value:v8 table:0];

      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      break;
    default:
      return v1;
  }
  return v1;
}

uint64_t sub_100DC4B74(unsigned __int8 a1)
{
  uint64_t v1 = a1;
  switch(a1)
  {
    case 1u:
    case 2u:
    case 3u:
      id v2 = [self mainBundle];
      NSString v3 = String._bridgeToObjectiveC()();
      NSString v4 = String._bridgeToObjectiveC()();
      id v5 = [v2 localizedStringForKey:v3 value:v4 table:0];

      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      break;
    case 4u:
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"deleteConfirmationMessageText", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryProviding.swift", 100, 2, 224, (uint64_t)"we should never have mixed share state on a single deletion. please file a bug.", 79, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"we should never have mixed share state on a single deletion. please file a bug.");
      sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deleteConfirmationMessageText", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryProviding.swift", 100, 2, 224);
      SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v7, v8);
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      JUMPOUT(0x100DC4DE8);
    default:
      return v1;
  }
  return v1;
}

uint64_t sub_100DC4DFC()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

uint64_t sub_100DC4EE8(char a1)
{
  if (a1 == 1) {
    return 0;
  }
  id v2 = [self mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 localizedStringForKey:v3 value:v4 table:0];

  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v1;
}

uint64_t sub_100DC4FC8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v4 - 8, v5);
  CKRecordID v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a1 owner];
  id v9 = objc_allocWithZone((Class)type metadata accessor for CRLCollaborationParticipant(0));
  id v10 = sub_10070B68C(v8, 1);

  *(void *)a2 = v10;
  id v11 = [a1 participants];
  sub_100DC5C00();
  unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100B46818(v12);
  uint64_t v14 = v13;
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();
  if (v16) {
    uint64_t v17 = v14;
  }
  else {
    uint64_t v17 = 0;
  }
  unint64_t v18 = 0xE000000000000000;
  if (v16) {
    unint64_t v18 = v16;
  }
  *(void *)(a2 + 8) = v17;
  *(void *)(a2 + 16) = v18;
  id v19 = [a1 currentUserParticipant];
  if (v19)
  {
    uint64_t v20 = v19;
    id v21 = [v19 permission];
  }
  else
  {
    id v21 = [a1 publicPermission];
  }
  *(unsigned char *)(a2 + 24) = v21 != (id)2;
  id v22 = [a1 URL];
  if (v22)
  {
    uint64_t v23 = v22;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v24 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v7, 0, 1, v24);
  }
  else
  {

    uint64_t v25 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v7, 1, 1, v25);
  }
  uint64_t v26 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  return sub_100602000((uint64_t)v7, a2 + *(int *)(v26 + 28));
}

NSString sub_100DC5214()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171C6C8 = (uint64_t)result;
  return result;
}

unint64_t sub_100DC524C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1005057FC(&qword_10168B3D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  *(void *)(inited + 32) = 0xD000000000000027;
  *(void *)(inited + 40) = 0x800000010128A5B0;
  uint64_t v7 = sub_1005057FC(&qword_10169B988);
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 72) = v7;
  *(void *)(inited + 80) = 0xD00000000000002ELL;
  *(void *)(inited + 88) = 0x800000010128A5E0;
  uint64_t v8 = sub_1005057FC(&qword_101677400);
  *(void *)(inited + 96) = a2;
  *(void *)(inited + 120) = v8;
  *(void *)(inited + 128) = 0xD00000000000002ELL;
  *(void *)(inited + 168) = v8;
  *(void *)(inited + 136) = 0x800000010128A610;
  *(void *)(inited + 144) = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_100A39A60(inited);
}

uint64_t sub_100DC5344(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_10169B990);
  __chkstk_darwin(v9, v10);
  unint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_1016741E0);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v15, v18);
  id v21 = (char *)&v36 - v20;
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v36 - v23;
  if (*a1 != *a2) {
    goto LABEL_14;
  }
  if (a1[1] != a2[1]) {
    goto LABEL_14;
  }
  uint64_t v39 = v5;
  uint64_t v25 = type metadata accessor for CRLBoardViewModelMetadata(0);
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_14;
  }
  sub_100522E9C((uint64_t)&a1[*(int *)(v25 + 28)], (uint64_t)v24, (uint64_t *)&unk_1016741E0);
  uint64_t v37 = (int *)v25;
  sub_100522E9C((uint64_t)&a2[*(int *)(v25 + 28)], (uint64_t)v21, (uint64_t *)&unk_1016741E0);
  uint64_t v26 = (uint64_t)&v12[*(int *)(v9 + 48)];
  sub_100522E9C((uint64_t)v24, (uint64_t)v12, (uint64_t *)&unk_1016741E0);
  uint64_t v38 = v26;
  sub_100522E9C((uint64_t)v21, v26, (uint64_t *)&unk_1016741E0);
  uint64_t v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
  if (v27((uint64_t)v12, 1, v4) != 1)
  {
    sub_100522E9C((uint64_t)v12, (uint64_t)v17, (uint64_t *)&unk_1016741E0);
    if (v27(v38, 1, v4) != 1)
    {
      sub_100DC6214(v38, (uint64_t)v8);
      char v28 = sub_100DC57B4((uint64_t)v17, (uint64_t)v8);
      sub_100DC2D68((uint64_t)v8);
      sub_100522F00((uint64_t)v21, (uint64_t *)&unk_1016741E0);
      sub_100522F00((uint64_t)v24, (uint64_t *)&unk_1016741E0);
      sub_100DC2D68((uint64_t)v17);
      sub_100522F00((uint64_t)v12, (uint64_t *)&unk_1016741E0);
      if ((v28 & 1) == 0) {
        goto LABEL_14;
      }
      goto LABEL_11;
    }
    sub_100522F00((uint64_t)v21, (uint64_t *)&unk_1016741E0);
    sub_100522F00((uint64_t)v24, (uint64_t *)&unk_1016741E0);
    sub_100DC2D68((uint64_t)v17);
LABEL_9:
    sub_100522F00((uint64_t)v12, &qword_10169B990);
    goto LABEL_14;
  }
  sub_100522F00((uint64_t)v21, (uint64_t *)&unk_1016741E0);
  sub_100522F00((uint64_t)v24, (uint64_t *)&unk_1016741E0);
  if (v27(v38, 1, v4) != 1) {
    goto LABEL_9;
  }
  sub_100522F00((uint64_t)v12, (uint64_t *)&unk_1016741E0);
LABEL_11:
  if (a1[v37[8]] != a2[v37[8]] || a1[v37[9]] != a2[v37[9]] || a1[v37[10]] != a2[v37[10]]) {
    goto LABEL_14;
  }
  uint64_t v31 = v37[11];
  uint64_t v32 = &a1[v31];
  unsigned __int8 v33 = a1[v31 + 8];
  uint64_t v34 = &a2[v31];
  int v35 = a2[v31 + 8];
  if (v33)
  {
    if (!v35) {
      goto LABEL_14;
    }
  }
  else
  {
    if (*(void *)v32 != *(void *)v34) {
      LOBYTE(v35) = 1;
    }
    if (v35) {
      goto LABEL_14;
    }
  }
  if (a1[v37[12]] == a2[v37[12]]
    && a1[v37[13]] == a2[v37[13]]
    && a1[v37[14]] == a2[v37[14]]
    && a1[v37[15]] == a2[v37[15]])
  {
    char v29 = static Date.== infix(_:_:)();
    return v29 & 1;
  }
LABEL_14:
  char v29 = 0;
  return v29 & 1;
}

uint64_t sub_100DC57B4(uint64_t a1, uint64_t a2)
{
  uint64_t v42 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v42 - 8);
  __chkstk_darwin(v42, v5);
  uint64_t v41 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_10167BEA0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_101672E90);
  uint64_t v13 = __chkstk_darwin(v11 - 8, v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v13, v16);
  uint64_t v19 = (char *)&v39 - v18;
  __chkstk_darwin(v17, v20);
  uint64_t v22 = (char *)&v39 - v21;
  uint64_t v23 = *(void **)a1;
  uint64_t v24 = *(void **)a2;
  if (*(void *)a1)
  {
    if (!v24) {
      return 0;
    }
    uint64_t v40 = v4;
    type metadata accessor for CRLCollaborationParticipant(0);
    id v25 = v24;
    id v26 = v23;
    char v27 = static NSObject.== infix(_:_:)();

    if ((v27 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v40 = v4;
    if (v24) {
      return 0;
    }
  }
  if (*(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16)
    || (v28 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v28 & 1) != 0))
  {
    if (*(unsigned __int8 *)(a1 + 24) == *(unsigned __int8 *)(a2 + 24))
    {
      uint64_t v30 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
      sub_100522E9C(a1 + *(int *)(v30 + 28), (uint64_t)v22, &qword_101672E90);
      sub_100522E9C(a2 + *(int *)(v30 + 28), (uint64_t)v19, &qword_101672E90);
      uint64_t v31 = (uint64_t)&v10[*(int *)(v7 + 48)];
      sub_100522E9C((uint64_t)v22, (uint64_t)v10, &qword_101672E90);
      sub_100522E9C((uint64_t)v19, v31, &qword_101672E90);
      uint64_t v32 = v40;
      unsigned __int8 v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
      uint64_t v34 = v42;
      if (v33((uint64_t)v10, 1, v42) == 1)
      {
        sub_100522F00((uint64_t)v19, &qword_101672E90);
        sub_100522F00((uint64_t)v22, &qword_101672E90);
        if (v33(v31, 1, v34) == 1)
        {
          sub_100522F00((uint64_t)v10, &qword_101672E90);
          return 1;
        }
        goto LABEL_15;
      }
      sub_100522E9C((uint64_t)v10, (uint64_t)v15, &qword_101672E90);
      if (v33(v31, 1, v34) == 1)
      {
        sub_100522F00((uint64_t)v19, &qword_101672E90);
        sub_100522F00((uint64_t)v22, &qword_101672E90);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v34);
LABEL_15:
        sub_100522F00((uint64_t)v10, (uint64_t *)&unk_10167BEA0);
        return 0;
      }
      uint64_t v35 = v32;
      uint64_t v36 = v41;
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v41, v31, v34);
      sub_1008AC418();
      char v37 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v38 = *(void (**)(char *, uint64_t))(v35 + 8);
      v38(v36, v34);
      sub_100522F00((uint64_t)v19, &qword_101672E90);
      sub_100522F00((uint64_t)v22, &qword_101672E90);
      v38(v15, v34);
      sub_100522F00((uint64_t)v10, &qword_101672E90);
      if (v37) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_100DC5C00()
{
  unint64_t result = qword_101693410;
  if (!qword_101693410)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101693410);
  }
  return result;
}

uint64_t sub_100DC5C40()
{
  uint64_t v0 = type metadata accessor for Calendar.Component();
  uint64_t v48 = *(void *)(v0 - 8);
  uint64_t v49 = v0;
  __chkstk_darwin(v0, v1);
  NSString v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  uint64_t v10 = __chkstk_darwin(v8, v9);
  uint64_t v46 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v12);
  uint64_t v47 = (char *)&v45 - v13;
  uint64_t v14 = type metadata accessor for Calendar();
  uint64_t v52 = *(void *)(v14 - 8);
  uint64_t v53 = v14;
  __chkstk_darwin(v14, v15);
  uint64_t v54 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  id v17 = [objc_allocWithZone((Class)NSDateFormatter) init];
  [v17 setDateStyle:1];
  [v17 setTimeStyle:1];
  [v17 setDoesRelativeDateFormatting:1];
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v19 = [v17 stringFromDate:isa];

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  [v17 setDoesRelativeDateFormatting:0];
  Class v23 = Date._bridgeToObjectiveC()().super.isa;
  id v24 = [v17 stringFromDate:v23];

  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v27 = v26;

  if (v20 == v25 && v22 == v27 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v29 = v48;
    uint64_t v28 = v49;
    (*(void (**)(char *, void, uint64_t))(v48 + 104))(v3, enum case for Calendar.Component.weekOfYear(_:), v49);
    Calendar.date(byAdding:value:to:wrappingComponents:)();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v3, v28);
    uint64_t v31 = v50;
    uint64_t v30 = v51;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v7, 1, v51) == 1)
    {
      sub_100522F00((uint64_t)v7, &qword_101672EB0);
      uint64_t v33 = v52;
      uint64_t v32 = v53;
LABEL_11:
      [v17 setDateStyle:2];
      Class v42 = Date._bridgeToObjectiveC()().super.isa;
      id v43 = [v17 stringFromDate:v42];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v54, v32);
      return v25;
    }
    uint64_t v34 = v47;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v47, v7, v30);
    uint64_t v35 = v46;
    static Date.now.getter();
    uint64_t v36 = Date.compare(_:)();
    char v37 = *(void (**)(char *, uint64_t))(v31 + 8);
    v37(v35, v30);
    uint64_t v33 = v52;
    uint64_t v32 = v53;
    if (v36 != 1)
    {
      v37(v34, v30);
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    NSString v38 = String._bridgeToObjectiveC()();
    [v17 setLocalizedDateFormatFromTemplate:v38];

    uint64_t v39 = v37;
    Class v40 = Date._bridgeToObjectiveC()().super.isa;
    id v41 = [v17 stringFromDate:v40];

    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v39(v34, v30);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v54, v32);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v53);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v20;
}

uint64_t sub_100DC6214(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100DC6278(uint64_t a1)
{
  uint64_t v2 = Notification.userInfo.getter();
  if (!v2) {
    goto LABEL_14;
  }
  unint64_t v3 = sub_100CEAAC4(v2);
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_14;
  }
  if (!*(void *)(v3 + 16)
    || (unint64_t v4 = sub_100955F50(0xD000000000000027, 0x800000010128A5B0), (v5 & 1) == 0)
    || (sub_100522D7C(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v15),
        sub_1005057FC(&qword_10169B988),
        (swift_dynamicCast() & 1) == 0))
  {
LABEL_13:
    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v11 = type metadata accessor for Notification();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
    return 0;
  }
  uint64_t v6 = v14;
  if (!*(void *)(v3 + 16)
    || (unint64_t v7 = sub_100955F50(0xD00000000000002ELL, 0x800000010128A5E0), (v8 & 1) == 0)
    || (sub_100522D7C(*(void *)(v3 + 56) + 32 * v7, (uint64_t)&v15),
        sub_1005057FC(&qword_101677400),
        (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (*(void *)(v3 + 16) && (unint64_t v9 = sub_100955F50(0xD00000000000002ELL, 0x800000010128A610), (v10 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v3 + 56) + 32 * v9, (uint64_t)&v15);
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = type metadata accessor for Notification();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
  if (*((void *)&v16 + 1))
  {
    if (swift_dynamicCast()) {
      return v6;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100522F00((uint64_t)&v15, &qword_101672BF0);
  }
  return 0;
}

unsigned char *storeEnumTagSinglePayload for CRLDeleteConfirmationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100DC65BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLDeleteConfirmationType()
{
  return &type metadata for CRLDeleteConfirmationType;
}

unsigned char *storeEnumTagSinglePayload for CRLBoardLibraryBoardOpenError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100DC66C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryBoardOpenError()
{
  return &type metadata for CRLBoardLibraryBoardOpenError;
}

unint64_t sub_100DC66FC()
{
  unint64_t result = qword_10169B998;
  if (!qword_10169B998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169B998);
  }
  return result;
}

unint64_t sub_100DC6754()
{
  unint64_t result = qword_10169B9A0;
  if (!qword_10169B9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169B9A0);
  }
  return result;
}

void sub_100DC68E8(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = [v1 excludedActivityTypes];
  if (v4)
  {

    id v5 = [v1 excludedActivityTypes];
    if (v5)
    {
      unsigned int v6 = v5;
      type metadata accessor for ActivityType(0);
      uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      swift_bridgeObjectRetain();
      sub_1006E2028(a1);
      if (v7)
      {
        v8.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
      }
      else
      {
        v8.super.Class isa = 0;
      }
      [v2 setExcludedActivityTypes:v8.super.isa];
    }
    else
    {
      [v1 setExcludedActivityTypes:0];
    }
  }
  else
  {
    type metadata accessor for ActivityType(0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v1 setExcludedActivityTypes:isa];
  }
}

id sub_100DC6B34()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSelectionAwareActivityViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLSelectionAwareActivityViewController()
{
  return self;
}

NSString sub_100DC6B8C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171C6D0 = (uint64_t)result;
  return result;
}

void *sub_100DC6BC4(void *a1)
{
  sub_1005057FC(&qword_101684108);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10117E800;
  if (qword_1016700C8 != -1) {
    swift_once();
  }
  int v3 = (void *)qword_10171C6D0;
  *(void *)(v2 + 32) = qword_10171C6D0;
  *(void *)(v2 + 40) = UIActivityTypeCopyToPasteboard;
  *(void *)(v2 + 48) = UIActivityTypeAddToReadingList;
  *(void *)(v2 + 56) = UIActivityTypeAssignToContact;
  type metadata accessor for ActivityType(0);
  id v4 = v3;
  id v5 = UIActivityTypeCopyToPasteboard;
  unsigned int v6 = UIActivityTypeAddToReadingList;
  uint64_t v7 = UIActivityTypeAssignToContact;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a1 setExcludedActivityTypes:isa];

  return a1;
}

unint64_t sub_100DC6CD8()
{
  unint64_t result = qword_101677EA8;
  if (!qword_101677EA8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_101677EA8);
  }
  return result;
}

Freeform::BoardCollectionData __swiftcall BoardCollectionData.init(totalBoardCount:totalSharedBoardCount:totalFavoriteBoardCount:totalRecentAccessedBoardCount:totalRecentDeletedBoardCount:)(Swift::Int32 totalBoardCount, Swift::Int32 totalSharedBoardCount, Swift::Int32 totalFavoriteBoardCount, Swift::Int32 totalRecentAccessedBoardCount, Swift::Int32 totalRecentDeletedBoardCount)
{
  uint64_t v5 = totalBoardCount | (*(void *)&totalSharedBoardCount << 32);
  uint64_t v6 = totalFavoriteBoardCount | (*(void *)&totalRecentAccessedBoardCount << 32);
  result.totalFavoriteBoardCount = v6;
  result.totalRecentAccessedBoardCount = HIDWORD(v6);
  result.totalBoardCount = v5;
  result.totalSharedBoardCount = HIDWORD(v5);
  result.totalRecentDeletedBoardCount = totalRecentDeletedBoardCount;
  return result;
}

uint64_t BoardCollectionData.totalFavoriteBoardCount.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 8) = result;
  return result;
}

unint64_t BoardCollectionData.totalRecentAccessedBoardCount.getter(uint64_t a1, unint64_t a2)
{
  return HIDWORD(a2);
}

uint64_t BoardCollectionData.totalRecentAccessedBoardCount.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 12) = result;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *BoardCollectionData.totalRecentAccessedBoardCount.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t BoardCollectionData.totalRecentDeletedBoardCount.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

unint64_t sub_100DC6D70(char a1)
{
  unint64_t result = 0x616F426C61746F74;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100DC6E38()
{
  return sub_100DC6D70(*v0);
}

uint64_t sub_100DC6E40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100DC71AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100DC6E68(uint64_t a1)
{
  unint64_t v2 = sub_100DC70D4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100DC6EA4(uint64_t a1)
{
  unint64_t v2 = sub_100DC70D4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BoardCollectionData.encode(to:)(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  v12[3] = a4;
  uint64_t v6 = sub_1005057FC(&qword_10169B9D8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  char v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100DC70D4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v17 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v4)
  {
    char v16 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v15 = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v14 = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v13 = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

unint64_t sub_100DC70D4()
{
  unint64_t result = qword_10169B9E0;
  if (!qword_10169B9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169B9E0);
  }
  return result;
}

uint64_t BoardCollectionData.init(from:)(void *a1)
{
  uint64_t result = sub_100DC73CC(a1);
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t sub_100DC7150@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100DC73CC(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(_DWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_100DC718C(void *a1)
{
  return BoardCollectionData.encode(to:)(a1, *(void *)v1, *(void *)(v1 + 8), *(_DWORD *)(v1 + 16));
}

uint64_t sub_100DC71AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x616F426C61746F74 && a2 == 0xEF746E756F436472;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000010128AB80 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000010128ABA0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x800000010128ABC0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000010128ABE0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_100DC73CC(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_10169BA10);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100DC70D4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  char v16 = 0;
  unsigned int v8 = KeyedDecodingContainer.decode(_:forKey:)();
  char v15 = 1;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  char v14 = 2;
  KeyedDecodingContainer.decode(_:forKey:)();
  char v13 = 3;
  v11[1] = KeyedDecodingContainer.decode(_:forKey:)();
  char v12 = 4;
  KeyedDecodingContainer.decode(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return v8 | (unint64_t)(v9 << 32);
}

unint64_t sub_100DC7600()
{
  unint64_t result = qword_10169B9E8;
  if (!qword_10169B9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169B9E8);
  }
  return result;
}

unint64_t sub_100DC7658()
{
  unint64_t result = qword_10169B9F0;
  if (!qword_10169B9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169B9F0);
  }
  return result;
}

__n128 initializeBufferWithCopyOfBuffer for BoardCollectionData(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for BoardCollectionData(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 20)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BoardCollectionData(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 20) = v3;
  return result;
}

ValueMetadata *type metadata accessor for BoardCollectionData()
{
  return &type metadata for BoardCollectionData;
}

unsigned char *storeEnumTagSinglePayload for BoardCollectionData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100DC77E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BoardCollectionData.CodingKeys()
{
  return &type metadata for BoardCollectionData.CodingKeys;
}

unint64_t sub_100DC7824()
{
  unint64_t result = qword_10169B9F8;
  if (!qword_10169B9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169B9F8);
  }
  return result;
}

unint64_t sub_100DC787C()
{
  unint64_t result = qword_10169BA00;
  if (!qword_10169BA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169BA00);
  }
  return result;
}

unint64_t sub_100DC78D4()
{
  unint64_t result = qword_10169BA08;
  if (!qword_10169BA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169BA08);
  }
  return result;
}

uint64_t sub_100DC7928(uint64_t a1)
{
  return sub_100632C84(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, static BoardInitialAppStateEvent.sessionGroup, &enum case for SessionGroup.default(_:));
}

uint64_t BoardInitialAppStateEvent.sessionGroup.unsafeMutableAddressor()
{
  return sub_100632E04(&qword_1016700D0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)static BoardInitialAppStateEvent.sessionGroup);
}

uint64_t static BoardInitialAppStateEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100632E98(&qword_1016700D0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)static BoardInitialAppStateEvent.sessionGroup, a1);
}

void *BoardInitialAppStateEvent.requiresDiagnosticsConsent.unsafeMutableAddressor()
{
  return &static BoardInitialAppStateEvent.requiresDiagnosticsConsent;
}

uint64_t sub_100DC79CC(uint64_t a1)
{
  return sub_100632C84(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, static BoardInitialAppStateEvent.timestampGranularity, &enum case for TimestampGranularity.hour(_:));
}

uint64_t BoardInitialAppStateEvent.timestampGranularity.unsafeMutableAddressor()
{
  return sub_100632E04(&qword_1016700D8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)static BoardInitialAppStateEvent.timestampGranularity);
}

uint64_t static BoardInitialAppStateEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100632E98(&qword_1016700D8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)static BoardInitialAppStateEvent.timestampGranularity, a1);
}

uint64_t sub_100DC7A64()
{
  uint64_t v0 = type metadata accessor for TimeDurationGranularity();
  sub_100568B28(v0, static BoardInitialAppStateEvent.timeDurationGranularity);
  sub_100556B74(v0, (uint64_t)static BoardInitialAppStateEvent.timeDurationGranularity);
  return static TimeDurationGranularity.milliseconds.getter();
}

uint64_t BoardInitialAppStateEvent.timeDurationGranularity.unsafeMutableAddressor()
{
  return sub_100632E04(&qword_1016700E0, (uint64_t (*)(void))&type metadata accessor for TimeDurationGranularity, (uint64_t)static BoardInitialAppStateEvent.timeDurationGranularity);
}

uint64_t static BoardInitialAppStateEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100632E98(&qword_1016700E0, (uint64_t (*)(void))&type metadata accessor for TimeDurationGranularity, (uint64_t)static BoardInitialAppStateEvent.timeDurationGranularity, a1);
}

uint64_t BoardInitialAppStateEvent.boardCollectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardInitialAppStateEvent(0) + 20);
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101670430);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for BoardInitialAppStateEvent(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10169BA88);
}

uint64_t BoardInitialAppStateEvent.boardCollectionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardInitialAppStateEvent(0) + 20);
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101670430);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *BoardInitialAppStateEvent.boardCollectionData.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t BoardInitialAppStateEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for BoardInitialAppStateEvent(0) + 20);
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101670430);
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t BoardInitialAppStateEvent.Model.boardCollectionData.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for BoardInitialAppStateEvent.Model(0) + 20));
}

uint64_t type metadata accessor for BoardInitialAppStateEvent.Model(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10169BB20);
}

uint64_t BoardInitialAppStateEvent.Model.init(eventData:boardCollectionData:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v6 = a3;
  int v7 = a2;
  unint64_t v10 = HIDWORD(a2);
  unint64_t v11 = HIDWORD(a3);
  uint64_t v12 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a5, a1, v12);
  uint64_t result = type metadata accessor for BoardInitialAppStateEvent.Model(0);
  char v14 = (_DWORD *)(a5 + *(int *)(result + 20));
  _DWORD *v14 = v7;
  v14[1] = v10;
  v14[2] = v6;
  v14[3] = v11;
  v14[4] = a4;
  return result;
}

uint64_t sub_100DC7E3C()
{
  if (*v0) {
    return 0xD000000000000013;
  }
  else {
    return 0x746144746E657665;
  }
}

uint64_t sub_100DC7E80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100DC95D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100DC7EA8(uint64_t a1)
{
  unint64_t v2 = sub_100DC80E4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100DC7EE4(uint64_t a1)
{
  unint64_t v2 = sub_100DC80E4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BoardInitialAppStateEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_10169BA18);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_100DC80E4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v14) = 0;
  type metadata accessor for EventData();
  sub_10063B41C(&qword_1016776F0);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    unint64_t v10 = (long long *)(v3 + *(int *)(type metadata accessor for BoardInitialAppStateEvent.Model(0) + 20));
    int v11 = *((_DWORD *)v10 + 4);
    long long v14 = *v10;
    int v15 = v11;
    v13[15] = 1;
    sub_100DC7658();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_100DC80E4()
{
  unint64_t result = qword_10169BA20;
  if (!qword_10169BA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169BA20);
  }
  return result;
}

uint64_t BoardInitialAppStateEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v27 = type metadata accessor for EventData();
  uint64_t v25 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1005057FC(&qword_10169BA28);
  uint64_t v26 = *(void *)(v28 - 8);
  __chkstk_darwin(v28, v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BoardInitialAppStateEvent.Model(0);
  __chkstk_darwin(v10, v11);
  char v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100DC80E4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  long long v14 = v13;
  uint64_t v15 = v25;
  LOBYTE(v29) = 0;
  sub_10063B41C(&qword_101677708);
  uint64_t v16 = v27;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  char v17 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v23 = (uint64_t)v14;
  v17(v14, v6, v16);
  char v31 = 1;
  sub_100DC7600();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v28);
  int v18 = v30;
  uint64_t v20 = v23;
  uint64_t v19 = v24;
  uint64_t v21 = v23 + *(int *)(v10 + 20);
  *(_OWORD *)uint64_t v21 = v29;
  *(_DWORD *)(v21 + 16) = v18;
  sub_100DC8480(v20, v19);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return sub_100DC84E4(v20);
}

uint64_t sub_100DC8480(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BoardInitialAppStateEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100DC84E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BoardInitialAppStateEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100DC8540@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BoardInitialAppStateEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_100DC8558(void *a1)
{
  return BoardInitialAppStateEvent.Model.encode(to:)(a1);
}

uint64_t sub_100DC8570@<X0>(uint64_t a1@<X8>)
{
  return sub_100633FA8(&qword_1016700D0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)static BoardInitialAppStateEvent.sessionGroup, a1);
}

uint64_t sub_100DC85A8@<X0>(uint64_t a1@<X8>)
{
  return sub_100633FA8(&qword_1016700D8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)static BoardInitialAppStateEvent.timestampGranularity, a1);
}

uint64_t sub_100DC85E0@<X0>(uint64_t a1@<X8>)
{
  return sub_100633FA8(&qword_1016700E0, (uint64_t (*)(void))&type metadata accessor for TimeDurationGranularity, (uint64_t)static BoardInitialAppStateEvent.timeDurationGranularity, a1);
}

uint64_t sub_100DC8618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101670430);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for BoardInitialAppStateEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005057FC(&qword_101670398);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101670430);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for BoardInitialAppStateEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101670430);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for BoardInitialAppStateEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101670430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for BoardInitialAppStateEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101670430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for BoardInitialAppStateEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101670430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for BoardInitialAppStateEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101670430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for BoardInitialAppStateEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100DC8BB8);
}

uint64_t sub_100DC8BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670398);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101670430);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for BoardInitialAppStateEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100DC8CCC);
}

uint64_t sub_100DC8CCC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1005057FC(&qword_101670398);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101670430);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_100DC8DD8()
{
  sub_100634BF8();
  if (v0 <= 0x3F)
  {
    sub_100DC8EA0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100DC8EA0()
{
  if (!qword_10169BA98)
  {
    sub_100DC7600();
    sub_100DC7658();
    unint64_t v0 = type metadata accessor for EventProperty();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10169BA98);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for BoardInitialAppStateEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for EventData();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *((_DWORD *)v9 + 4) = *((_DWORD *)v10 + 4);
  }
  return a1;
}

uint64_t initializeWithCopy for BoardInitialAppStateEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
  return a1;
}

uint64_t assignWithCopy for BoardInitialAppStateEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_DWORD *)(a1 + v7);
  uint64_t v9 = (_DWORD *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  v8[3] = v9[3];
  v8[4] = v9[4];
  return a1;
}

uint64_t initializeWithTake for BoardInitialAppStateEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
  return a1;
}

uint64_t assignWithTake for BoardInitialAppStateEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for BoardInitialAppStateEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100DC9240);
}

uint64_t sub_100DC9240(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventData();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for BoardInitialAppStateEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100DC92C0);
}

uint64_t sub_100DC92C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventData();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_100DC9330()
{
  uint64_t result = type metadata accessor for EventData();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BoardInitialAppStateEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100DC9490);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BoardInitialAppStateEvent.Model.CodingKeys()
{
  return &type metadata for BoardInitialAppStateEvent.Model.CodingKeys;
}

unint64_t sub_100DC94CC()
{
  unint64_t result = qword_10169BB58;
  if (!qword_10169BB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169BB58);
  }
  return result;
}

unint64_t sub_100DC9524()
{
  unint64_t result = qword_10169BB60;
  if (!qword_10169BB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169BB60);
  }
  return result;
}

unint64_t sub_100DC957C()
{
  unint64_t result = qword_10169BB68;
  if (!qword_10169BB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169BB68);
  }
  return result;
}

uint64_t sub_100DC95D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000010128AC00)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100DC96CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = type metadata accessor for URL();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  return _swift_task_switch(sub_100DC9790, 0, 0);
}

uint64_t sub_100DC9790()
{
  if (URL.isFileURL.getter())
  {
    uint64_t v1 = v0[4];
    (*(void (**)(void, void, void))(v0[7] + 16))(v0[8], v0[3], v0[6]);
    if (v1)
    {
      BOOL v2 = (void *)v0[4];
      id v3 = v2;
    }
    else
    {
      uint64_t v7 = v0[8];
      BOOL v2 = (void *)v0[4];
      swift_getObjectType();
      id v3 = sub_1008D2D94(v7, 0, 0);
    }
    v0[9] = v3;
    uint64_t v8 = v0[8];
    uint64_t v9 = v0[6];
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0[7] + 8);
    id v11 = v2;
    v10(v8, v9);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[10] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_100DC993C;
    uint64_t v13 = v0[2];
    return sub_100B4E54C(v13);
  }
  else
  {
    sub_1008A8078();
    swift_allocError();
    *unsigned int v4 = 0;
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_100DC993C()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    BOOL v2 = sub_100DC9ABC;
  }
  else {
    BOOL v2 = sub_100DC9A50;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100DC9A50()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100DC9ABC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100DC9B28(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return _swift_task_switch(sub_100DC9B4C, 0, 0);
}

uint64_t sub_100DC9B4C()
{
  static Task<>.checkCancellation()();
  id v1 = sub_100D53FA4();
  uint64_t v2 = sub_1008A9954();
  unint64_t v4 = v3;
  v0[5] = v2;
  v0[6] = v3;

  uint64_t v6 = aLinkMetadata[0];
  unint64_t v5 = aLinkMetadata[1];
  v0[7] = aLinkMetadata[1];
  swift_bridgeObjectRetain();
  swift_getObjectType();
  v0[8] = sub_1008D2B10((uint64_t)v2, v4, v6, v5);
  static Task<>.checkCancellation()();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[9] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100DC9CD8;
  uint64_t v8 = v0[2];
  return sub_100B4E54C(v8);
}

uint64_t sub_100DC9CD8()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100DCAAB8;
  }
  else {
    uint64_t v2 = sub_100DCAAB4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100DC9DEC(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return _swift_task_switch(sub_100DC9E10, 0, 0);
}

uint64_t sub_100DC9E10()
{
  static Task<>.checkCancellation()();
  uint64_t v1 = sub_1008A9954();
  v0[5] = v1;
  v0[6] = v2;
  uint64_t v3 = (uint64_t)v1;
  unint64_t v4 = v2;
  uint64_t v6 = aLinkMetadata[0];
  unint64_t v5 = aLinkMetadata[1];
  v0[7] = aLinkMetadata[1];
  swift_bridgeObjectRetain();
  swift_getObjectType();
  v0[8] = sub_1008D2B10(v3, v4, v6, v5);
  static Task<>.checkCancellation()();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[9] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100DC9F8C;
  uint64_t v8 = v0[2];
  return sub_100B4E54C(v8);
}

uint64_t sub_100DC9F8C()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    unint64_t v2 = sub_100DCA124;
  }
  else {
    unint64_t v2 = sub_100DCA0A0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100DCA0A0()
{
  uint64_t v2 = *(void *)(v0 + 40);
  unint64_t v1 = *(void *)(v0 + 48);

  swift_bridgeObjectRelease();
  sub_100510084(v2, v1);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100DCA124()
{
  swift_bridgeObjectRelease();
  sub_100510084(*(void *)(v0 + 40), *(void *)(v0 + 48));
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for CRLBoardItemImporterHelper()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for CRLBoardItemImporterHelperError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100DCA2BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardItemImporterHelperError()
{
  return &type metadata for CRLBoardItemImporterHelperError;
}

unint64_t sub_100DCA2F8()
{
  unint64_t result = qword_10169BC50;
  if (!qword_10169BC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169BC50);
  }
  return result;
}

uint64_t sub_100DCA34C()
{
  id v1 = [v0 userInfo];
  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v2 + 16) || (unint64_t v3 = sub_100955F50(0xD000000000000026, 0x800000010128AC90), (v4 & 1) == 0))
  {
    long long v7 = 0u;
    long long v8 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_100522D7C(*(void *)(v2 + 56) + 32 * v3, (uint64_t)&v7);
  swift_bridgeObjectRelease();
  if (!*((void *)&v8 + 1))
  {
LABEL_7:
    sub_10052E2B0((uint64_t)&v7);
    return 0;
  }
  uint64_t result = swift_dynamicCast();
  if (result) {
    return v6;
  }
  return result;
}

uint64_t sub_100DCA448(uint64_t a1, id a2, char a3, uint64_t a4, char a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14 = (void *)sub_100A39A60((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v67 = a4;
  if (!a11)
  {
LABEL_41:
    *((void *)&v75 + 1) = &type metadata for Bool;
    LOBYTE(v74) = a6 & 1;
    sub_100575CE8(&v74, &v72);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v78 = v14;
    sub_1009763A8(&v72, 0xD000000000000026, 0x800000010128AC90, isUniquelyReferenced_nonNull_native);
    uint64_t v44 = v78;
    swift_bridgeObjectRelease();
    uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v47 = v46;
    swift_getErrorValue();
    uint64_t v48 = v76;
    uint64_t v49 = v77;
    *((void *)&v75 + 1) = v77;
    uint64_t v50 = sub_1005767BC((uint64_t *)&v74);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(v50, v48, v49);
    sub_100575CE8(&v74, &v72);
    char v51 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v78 = v44;
    sub_1009763A8(&v72, v45, v47, v51);
    uint64_t v52 = (uint64_t)v78;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((a5 & 1) == 0)
    {
      uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v55 = v54;
      type metadata accessor for CRLBoardItemImporterErrorMediaType(0);
      *((void *)&v75 + 1) = v56;
      *(void *)&long long v74 = v67;
      sub_100575CE8(&v74, &v72);
      char v57 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v78 = (void *)v52;
      sub_1009763A8(&v72, v53, v55, v57);
      uint64_t v52 = (uint64_t)v78;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a3)
    {
      uint64_t v58 = (void *)_convertErrorToNSError(_:)();
      a2 = [v58 code];
    }
    uint64_t v59 = self;
    uint64_t v60 = @"com.apple.freeform.CRLErrorDomainInfoImporter";
    NSString v61 = String._bridgeToObjectiveC()();
    NSString v62 = String._bridgeToObjectiveC()();
    sub_100ED2BB8(v52);
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v64 = [v59 crl_errorWithDomain:v60 code:a2 alertTitle:v61 alertMessage:v62 userInfo:isa];

    return (uint64_t)v64;
  }
  id v66 = a2;
  uint64_t v70 = a11 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(a11 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(a11 + 64);
  int64_t v71 = (unint64_t)(v15 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v18 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v21 = v20 | (v18 << 6);
LABEL_9:
      uint64_t v22 = *(void *)(a11 + 56);
      uint64_t v23 = (void *)(*(void *)(a11 + 48) + 16 * v21);
      uint64_t v24 = v23[1];
      *(void *)&long long v72 = *v23;
      *((void *)&v72 + 1) = v24;
      sub_100522D7C(v22 + 32 * v21, (uint64_t)v73);
      swift_bridgeObjectRetain();
      goto LABEL_28;
    }
    int64_t v25 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      goto LABEL_48;
    }
    if (v25 < v71)
    {
      unint64_t v26 = *(void *)(v70 + 8 * v25);
      if (v26) {
        goto LABEL_13;
      }
      int64_t v27 = v18 + 2;
      ++v18;
      if (v25 + 1 < v71)
      {
        unint64_t v26 = *(void *)(v70 + 8 * v27);
        if (v26) {
          goto LABEL_16;
        }
        int64_t v18 = v25 + 1;
        if (v25 + 2 < v71)
        {
          unint64_t v26 = *(void *)(v70 + 8 * (v25 + 2));
          if (v26)
          {
            v25 += 2;
            goto LABEL_13;
          }
          int64_t v27 = v25 + 3;
          int64_t v18 = v25 + 2;
          if (v25 + 3 < v71) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v17 = 0;
    memset(v73, 0, sizeof(v73));
    long long v72 = 0u;
LABEL_28:
    sub_100DCAA4C((uint64_t)&v72, (uint64_t)&v74);
    uint64_t v28 = *((void *)&v74 + 1);
    if (!*((void *)&v74 + 1))
    {
      swift_release();
      a2 = v66;
      goto LABEL_41;
    }
    uint64_t v29 = v74;
    sub_100575CE8(&v75, &v72);
    char v30 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v78 = v14;
    unint64_t v32 = sub_100955F50(v29, v28);
    uint64_t v33 = v14[2];
    BOOL v34 = (v31 & 1) == 0;
    uint64_t v35 = v33 + v34;
    if (__OFADD__(v33, v34))
    {
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    char v36 = v31;
    if (v14[3] >= v35)
    {
      if (v30)
      {
        uint64_t v14 = v78;
        if (v31) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_1009813B4();
        uint64_t v14 = v78;
        if (v36) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      sub_10096932C(v35, v30);
      unint64_t v37 = sub_100955F50(v29, v28);
      if ((v36 & 1) != (v38 & 1)) {
        goto LABEL_50;
      }
      unint64_t v32 = v37;
      uint64_t v14 = v78;
      if (v36)
      {
LABEL_5:
        uint64_t v19 = (_OWORD *)(v14[7] + 32 * v32);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v19);
        sub_100575CE8(&v72, v19);
        goto LABEL_6;
      }
    }
    v14[(v32 >> 6) + 8] |= 1 << v32;
    uint64_t v39 = (uint64_t *)(v14[6] + 16 * v32);
    uint64_t *v39 = v29;
    v39[1] = v28;
    sub_100575CE8(&v72, (_OWORD *)(v14[7] + 32 * v32));
    uint64_t v40 = v14[2];
    BOOL v41 = __OFADD__(v40, 1);
    uint64_t v42 = v40 + 1;
    if (v41) {
      goto LABEL_47;
    }
    v14[2] = v42;
    swift_bridgeObjectRetain();
LABEL_6:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v26 = *(void *)(v70 + 8 * v27);
  if (v26)
  {
LABEL_16:
    int64_t v25 = v27;
LABEL_13:
    unint64_t v17 = (v26 - 1) & v26;
    unint64_t v21 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v18 = v25;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v71)
    {
      int64_t v18 = v71 - 1;
      goto LABEL_27;
    }
    unint64_t v26 = *(void *)(v70 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_13;
    }
  }
LABEL_49:
  __break(1u);
LABEL_50:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100DCAA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10169BC58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100DCAABC(uint64_t a1, uint64_t a2)
{
  v2[22] = a1;
  v2[23] = a2;
  v2[24] = *(void *)(type metadata accessor for CRLBoardEntity() - 8);
  v2[25] = swift_task_alloc();
  v2[26] = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2[27] = swift_task_alloc();
  return _swift_task_switch(sub_100DCABD0, 0, 0);
}

uint64_t sub_100DCABD0()
{
  uint64_t v1 = *(void *)(v0 + 176);
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 208);
    uint64_t v4 = *(void *)(v0 + 192);
    sub_1006BB8A4(0, v2, 0);
    uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      uint64_t v7 = *(void *)(v0 + 216);
      uint64_t v8 = *(void *)(v0 + 200);
      sub_1005689B8(v5, v8, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
      sub_1005689B8(v8, v7, type metadata accessor for CRLBoardIdentifier);
      sub_1005F6324(v8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1006BB8A4(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
      }
      double v10 = _swiftEmptyArrayStorage[2];
      double v9 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v10 >= *(void *)&v9 >> 1) {
        sub_1006BB8A4(*(void *)&v9 > 1uLL, *(void *)&v10 + 1, 1);
      }
      *(void *)(v0 + 280) = _swiftEmptyArrayStorage;
      uint64_t v11 = *(void *)(v0 + 216);
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v10 + 1;
      sub_1005394E4(v11, (uint64_t)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * *(void *)&v10);
      v5 += v6;
      --v2;
    }
    while (v2);
    *(void *)(v0 + 224) = *sub_10050F848(*(void **)(v0 + 184), *(void *)(*(void *)(v0 + 184) + 24));
    type metadata accessor for MainActor();
    *(void *)(v0 + 232) = static MainActor.shared.getter();
    uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
    *(void *)(v0 + 240) = v12;
    *(void *)(v0 + 248) = v13;
    return _swift_task_switch(sub_100DCAE44, v12, v13);
  }
  else
  {
    type metadata accessor for _PrebuiltAppIntentError();
    sub_1006FD4C4();
    swift_allocError();
    static _UnrecoverableError.unknownError.getter();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
}

uint64_t sub_100DCAE44()
{
  uint64_t v1 = swift_retain();
  uint64_t v2 = sub_100CDDF48(v1);
  *(void *)(v0 + 256) = v2;
  swift_release();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100DCAEF8;
  return sub_100EE280C(v2);
}

uint64_t sub_100DCAEF8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 272) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 240);
    uint64_t v4 = *(void *)(v2 + 248);
    uint64_t v5 = sub_100DCB0F8;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 240);
    uint64_t v4 = *(void *)(v2 + 248);
    uint64_t v5 = sub_100DCB014;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100DCB014()
{
  swift_release();
  return _swift_task_switch(sub_100DCB07C, 0, 0);
}

uint64_t sub_100DCB07C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100DCB0F8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return _swift_task_switch(sub_100DCB178, 0, 0);
}

uint64_t sub_100DCB178()
{
  v0[20] = v0[34];
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    type metadata accessor for _PrebuiltAppIntentError();
    sub_1006FD4C4();
    swift_allocError();
    static _UnrecoverableError.entityNotFound.getter();
  }
  else
  {
    if (qword_10166FB50 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v1 = (void *)static OS_os_log.appIntents;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    swift_getErrorValue();
    uint64_t v3 = v0[18];
    uint64_t v4 = v0[19];
    id v5 = v1;
    uint64_t v6 = Error.publicDescription.getter(v3, v4);
    uint64_t v8 = v7;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v6;
    *(void *)(inited + 40) = v8;
    uint64_t v9 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Error deleting boards: %@", 25, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    type metadata accessor for _PrebuiltAppIntentError();
    sub_1006FD4C4();
    swift_allocError();
    static _UnrecoverableError.unknownError.getter();
  }
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  double v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

ValueMetadata *type metadata accessor for CRLDeleteBoardIntentPerformer()
{
  return &type metadata for CRLDeleteBoardIntentPerformer;
}

void *sub_100DCB3FC(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = type metadata accessor for CRLFileItemCRDTData(0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)v31 - v11;
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  unint64_t v20 = (char *)v31 - v19;
  uint64_t v21 = (uint64_t)v2 + *(void *)(v4 + 632);
  swift_beginAccess();
  if (a1)
  {
    v31[1] = v5;
    sub_100522E9C(v21, (uint64_t)v16, (uint64_t *)&unk_101683E10);
    sub_100523288((unint64_t *)&qword_1016737D8, (uint64_t *)&unk_101683E10);
    CRType.copy(renamingReferences:)();
    sub_100522F00((uint64_t)v16, (uint64_t *)&unk_101683E10);
    uint64_t v22 = (uint64_t)v2 + qword_10171C738;
    swift_beginAccess();
    sub_100DD0B24(v22, (uint64_t)v8, type metadata accessor for CRLFileItemCRDTData);
    sub_100DD03DC(&qword_10168D8F8, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);
    CRType.copy(renamingReferences:)();
    sub_100DD0BF4((uint64_t)v8, type metadata accessor for CRLFileItemCRDTData);
  }
  else
  {
    sub_100522E9C(v21, (uint64_t)v20, (uint64_t *)&unk_101683E10);
    uint64_t v23 = (uint64_t)v2 + qword_10171C738;
    swift_beginAccess();
    sub_100DD0B24(v23, (uint64_t)v12, type metadata accessor for CRLFileItemCRDTData);
  }
  uint64_t v24 = v2[4];
  uint64_t v25 = v2[5];
  uint64_t v28 = v2 + 2;
  uint64_t v26 = v2[2];
  uint64_t v27 = v28[1];
  uint64_t v29 = swift_allocObject();
  sub_100DD0B8C((uint64_t)v12, v29 + qword_10171C738, type metadata accessor for CRLFileItemCRDTData);
  sub_100B75378((uint64_t)v20, v29 + *(void *)(*(void *)v29 + 632));
  return sub_10068B398(v27, v24, v25, v26);
}

uint64_t sub_100DCB770(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7, v8);
  uint64_t v10 = &v17[-v9];
  __chkstk_darwin(v11, v12);
  uint64_t v14 = &v17[-v13];
  uint64_t v15 = a1 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_assetUUIDMap;
  swift_beginAccess();
  if (*(void *)(*(void *)v15 + 16))
  {
    swift_beginAccess();
    sub_1005057FC(&qword_101685450);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    sub_100DCCCFC((uint64_t)v14);
    uint64_t v18 = v1;
    sub_100DD0BF4((uint64_t)v10, type metadata accessor for CRLFileItemAtomicDataStruct);
    sub_100DD0B24((uint64_t)v14, (uint64_t)v10, type metadata accessor for CRLFileItemAtomicDataStruct);
    swift_beginAccess();
    sub_100DD0B24((uint64_t)v10, (uint64_t)v6, type metadata accessor for CRLFileItemAtomicDataStruct);
    CRRegister.wrappedValue.setter();
    sub_100DD0BF4((uint64_t)v10, type metadata accessor for CRLFileItemAtomicDataStruct);
    swift_endAccess();
    sub_100DD0BF4((uint64_t)v14, type metadata accessor for CRLFileItemAtomicDataStruct);
  }
  swift_beginAccess();
  sub_100F99CA4(a1);
  return swift_endAccess();
}

uint64_t sub_100DCB9AC()
{
  qword_10171C720 = 97;
  *(void *)algn_10171C728 = 0xE100000000000000;
  uint64_t result = swift_getKeyPath();
  qword_10171C730 = result;
  return result;
}

uint64_t sub_100DCB9EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v3 = sub_1005057FC(&qword_101685450);
  uint64_t v33 = *(void *)(v3 - 8);
  uint64_t v34 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for CRLFileItemCRDTData(0);
  __chkstk_darwin(v32, v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v31 - v20;
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v31 - v24;
  uint64_t v36 = a1;
  sub_100DD0B24(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  if (qword_101670198 != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for UUID();
  uint64_t v27 = sub_100556B74(v26, (uint64_t)qword_10171CB50);
  uint64_t v28 = &v25[*(int *)(v14 + 20)];
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v28, v27, v26);
  uint64_t v29 = &v28[*(int *)(v10 + 20)];
  *(void *)uint64_t v29 = 0;
  *((void *)v29 + 1) = 0xE000000000000000;
  *(void *)&v28[*(int *)(v10 + 24)] = _swiftEmptyDictionarySingleton;
  sub_100DD0B8C((uint64_t)v13, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  *(void *)&v25[*(int *)(v14 + 24)] = _swiftEmptyDictionarySingleton;
  sub_100DD0B24((uint64_t)v25, (uint64_t)v21, type metadata accessor for CRLFileItemAtomicDataStruct);
  *(void *)&v9[*(int *)(v32 + 20)] = _swiftEmptyDictionarySingleton;
  sub_100DD0B24((uint64_t)v21, (uint64_t)v17, type metadata accessor for CRLFileItemAtomicDataStruct);
  sub_100DD03DC(&qword_10168D8D8, (void (*)(uint64_t))type metadata accessor for CRLFileItemAtomicDataStruct);
  CRRegister.init(_:)();
  sub_100DD0BF4((uint64_t)v21, type metadata accessor for CRLFileItemAtomicDataStruct);
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v9, v6, v34);
  sub_100DD0B8C((uint64_t)v9, v35, type metadata accessor for CRLFileItemCRDTData);
  sub_100DD0BF4(v36, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  return sub_100DD0BF4((uint64_t)v25, type metadata accessor for CRLFileItemAtomicDataStruct);
}

uint64_t sub_100DCBDD0()
{
  uint64_t v0 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v10 - v6;
  sub_1005057FC(&qword_101685450);
  CRRegister.wrappedValue.getter();
  CRRegister.wrappedValue.getter();
  char v8 = sub_100DD0A00((uint64_t)v7, (uint64_t)v3);
  sub_100DD0BF4((uint64_t)v3, type metadata accessor for CRLFileItemAtomicDataStruct);
  sub_100DD0BF4((uint64_t)v7, type metadata accessor for CRLFileItemAtomicDataStruct);
  return v8 & 1;
}

uint64_t sub_100DCBED4()
{
  if (qword_1016700E8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_10171C720;
  swift_bridgeObjectRetain();
  swift_retain();
  return v0;
}

uint64_t sub_100DCBF54(uint64_t a1)
{
  uint64_t v2 = sub_100DD03DC(&qword_10168D8F0, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);

  return static CRStruct_1.fieldKeys.getter(a1, v2);
}

uint64_t sub_100DCBFC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_101670198 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = sub_100556B74(v6, (uint64_t)qword_10171CB50);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v5, v7, v6);
  char v8 = &v5[*(int *)(v2 + 20)];
  *(void *)char v8 = 0;
  *((void *)v8 + 1) = 0xE000000000000000;
  *(void *)&v5[*(int *)(v2 + 24)] = _swiftEmptyDictionarySingleton;
  return sub_100DCB9EC((uint64_t)v5, a1);
}

uint64_t sub_100DCC0E0(uint64_t a1)
{
  uint64_t v2 = sub_100DD03DC(&qword_10168D8F8, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);

  return CRType.context.getter(a1, v2);
}

uint64_t sub_100DCC14C()
{
  sub_100DD03DC(&qword_10168D8F0, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);

  return CRStruct_1.actionUndoingDifference(from:)();
}

uint64_t sub_100DCC1D0()
{
  sub_100DD03DC(&qword_10168D8F0, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);

  return CRStruct_1.apply(_:)();
}

uint64_t sub_100DCC24C()
{
  sub_100DD03DC(&qword_10168D8F0, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);

  return CRStruct_1.hasDelta(from:)();
}

uint64_t sub_100DCC2C8()
{
  sub_100DD03DC(&qword_10168D8F0, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);

  return CRStruct_1.delta(_:from:)();
}

uint64_t sub_100DCC35C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100DD03DC(&qword_10168D8F0, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);

  return CRStruct_1.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_100DCC3D8()
{
  sub_100DD03DC(&qword_10168D8F0, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);

  return CRStruct_1.merge(delta:)();
}

uint64_t sub_100DCC454(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100DD03DC(&qword_10168D8F0, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);

  return CRStruct_1.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100DCC4D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100DD03DC(&qword_10168D8F0, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);

  return CRStruct_1.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100DCC55C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100DD03DC(&qword_10168D8F0, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);

  return CRStruct_1.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_100DCC5F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100DD03DC(&qword_10168D8F0, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);

  return CRStruct_1.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_100DCC66C()
{
  sub_100DD03DC(&qword_10168D8F0, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);

  return CRStruct_1.needToFinalizeTimestamps()();
}

uint64_t sub_100DCC6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100DD03DC(&qword_10168D8F0, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);

  return CRStruct_1.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_100DCC754()
{
  sub_100DD03DC(&qword_10168D8F0, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);

  return CRStruct_1.merge(_:)();
}

uint64_t sub_100DCC7D0()
{
  return CRDT.serializedData(_:version:)();
}

uint64_t sub_100DCC850()
{
  return CRDT.init(serializedData:)();
}

uint64_t sub_100DCC8E0()
{
  return CRStruct_1.init(from:)();
}

uint64_t sub_100DCC960()
{
  return CRStruct_1.encode(to:)();
}

uint64_t sub_100DCC9D8(uint64_t a1)
{
  uint64_t v2 = sub_100DD03DC(&qword_10168D8F0, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);

  return CRStruct_1.minEncodingVersion.getter(a1, v2);
}

BOOL sub_100DCCA54(char *a1, char *a2)
{
  return qword_1011B4AE8[*a1] == qword_1011B4AE8[*a2];
}

Swift::Int sub_100DCCA78()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011B4AE8[v1]);
  return Hasher._finalize()();
}

void sub_100DCCAC8()
{
  Hasher._combine(_:)(qword_1011B4AE8[*v0]);
}

Swift::Int sub_100DCCB00()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011B4AE8[v1]);
  return Hasher._finalize()();
}

void sub_100DCCB4C(void *a1@<X8>)
{
  *a1 = qword_1011B4AE8[*v1];
}

uint64_t sub_100DCCB64()
{
  unint64_t v1 = 0xD000000000000015;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x65737341656C6966;
  }
}

uint64_t sub_100DCCBDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100DD0C54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100DCCC04()
{
  return qword_1011B4AE8[*v0];
}

void sub_100DCCC1C(void *a1@<X8>)
{
  *a1 = &off_1015034D8;
}

uint64_t sub_100DCCC2C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100DD05B0();
  unint64_t v5 = sub_100DD0608();

  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100DCCC84(uint64_t a1)
{
  unint64_t v2 = sub_100DD0608();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100DCCCC0(uint64_t a1)
{
  unint64_t v2 = sub_100DD0608();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100DCCCFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLAssetData();
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7, v9);
  unint64_t v37 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v34 - v13;
  sub_100A68AF0(v1, (uint64_t)v6);
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v34 = v2;
  v36(v14, v6, v2);
  uint64_t v15 = *(int *)(v8 + 28);
  uint64_t v16 = v1;
  uint64_t v18 = *(void *)(v1 + v15);
  uint64_t v17 = *(void *)(v1 + v15 + 8);
  uint64_t v19 = *(void *)(v1 + *(int *)(v8 + 32));
  char v38 = v14;
  uint64_t v20 = &v14[v15];
  *(void *)uint64_t v20 = v18;
  *((void *)v20 + 1) = v17;
  *(void *)&v14[*(int *)(v8 + 32)] = v19;
  uint64_t v35 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v21 = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21(v6, v2);
  uint64_t v22 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  uint64_t v23 = v1 + *(int *)(v22 + 20);
  sub_100A68AF0(v23, (uint64_t)v6);
  uint64_t v24 = (uint64_t)v37;
  uint64_t v25 = v34;
  v36(v37, v6, v34);
  uint64_t v26 = *(int *)(v8 + 28);
  uint64_t v28 = *(void *)(v23 + v26);
  uint64_t v27 = *(void *)(v23 + v26 + 8);
  uint64_t v29 = *(void *)(v23 + *(int *)(v8 + 32));
  char v30 = (void *)(v24 + v26);
  *char v30 = v28;
  v30[1] = v27;
  *(void *)(v24 + *(int *)(v8 + 32)) = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v35(v6, v25);
  uint64_t v31 = *(void *)(v16 + *(int *)(v22 + 24));
  uint64_t v32 = v39;
  sub_100DD0B8C((uint64_t)v38, v39, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100DD0B8C(v24, v32 + *(int *)(v22 + 20), (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  *(void *)(v32 + *(int *)(v22 + 24)) = v31;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100DCCF88(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_10169C140);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100DD0608();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v15 = 0;
  type metadata accessor for CRLAssetData();
  sub_100DD03DC(&qword_1016737B0, (void (*)(uint64_t))type metadata accessor for CRLAssetData);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
    char v14 = 1;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v12[1] = *(void *)(v3 + *(int *)(v10 + 24));
    char v13 = 2;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100DCD1A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v27 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v27, v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v28 = sub_1005057FC(&qword_10169C138);
  uint64_t v26 = *(void *)(v28 - 8);
  __chkstk_darwin(v28, v11);
  char v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v14, v15);
  uint64_t v18 = *(int *)(v17 + 24);
  uint64_t v29 = a1;
  uint64_t v30 = v18;
  uint64_t v19 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v19[v18] = _swiftEmptyDictionarySingleton;
  sub_10050F848(a1, a1[3]);
  sub_100DD0608();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v29);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = v26;
    char v34 = 0;
    sub_100DD03DC(&qword_1016737A0, (void (*)(uint64_t))type metadata accessor for CRLAssetData);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_100DD0B8C((uint64_t)v10, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    char v33 = 1;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_100DD0B8C((uint64_t)v6, (uint64_t)&v19[*(int *)(v14 + 20)], (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_1005057FC((uint64_t *)&unk_101687A40);
    char v32 = 2;
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v28);
    uint64_t v22 = v30;
    uint64_t v21 = v31;
    swift_bridgeObjectRelease();
    *(void *)&v19[v22] = v21;
    sub_100DD0B24((uint64_t)v19, v25, type metadata accessor for CRLFileItemAtomicDataStruct);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v29);
    return sub_100DD0BF4((uint64_t)v19, type metadata accessor for CRLFileItemAtomicDataStruct);
  }
}

uint64_t sub_100DCD5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = type metadata accessor for CRLAssetData();
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = *(void *)(a1 + v7);
  uint64_t v9 = *(void *)(a1 + v7 + 8);
  uint64_t v10 = (void *)(a2 + v7);
  BOOL v11 = v8 == *v10 && v9 == v10[1];
  if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  if ((sub_100ED60AC(*(void *)(a1 + *(int *)(v6 + 24)), *(void *)(a2 + *(int *)(v6 + 24))) & 1) == 0) {
    return 0;
  }
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v15 = *(int *)(v6 + 20);
  uint64_t v16 = *(void *)(v13 + v15);
  uint64_t v17 = *(void *)(v13 + v15 + 8);
  uint64_t v18 = (void *)(v14 + v15);
  BOOL v19 = v16 == *v18 && v17 == v18[1];
  if (!v19 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
    || (sub_100ED60AC(*(void *)(v13 + *(int *)(v6 + 24)), *(void *)(v14 + *(int *)(v6 + 24))) & 1) == 0)
  {
    return 0;
  }
  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v21 = *(void *)(a1 + v20);
  uint64_t v22 = *(void *)(a2 + v20);

  return sub_100ED60AC(v21, v22);
}

uint64_t sub_100DCD6EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100DCD1A4(a1, a2);
}

uint64_t sub_100DCD704(void *a1)
{
  return sub_100DCCF88(a1);
}

uint64_t sub_100DCD71C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100DD03DC(&qword_10169C148, (void (*)(uint64_t))type metadata accessor for CRLFileItemAtomicDataStruct);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100DCD7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100DD03DC(&qword_10169C148, (void (*)(uint64_t))type metadata accessor for CRLFileItemAtomicDataStruct);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100DCD824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100DD03DC(&qword_10168D8D8, (void (*)(uint64_t))type metadata accessor for CRLFileItemAtomicDataStruct);
  uint64_t v7 = sub_100DD03DC(&qword_10169C150, (void (*)(uint64_t))type metadata accessor for CRLFileItemAtomicDataStruct);

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100DCD8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100DD03DC(&qword_10169C148, (void (*)(uint64_t))type metadata accessor for CRLFileItemAtomicDataStruct);

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100DCD96C()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100DCD9EC()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100DCDA64(uint64_t a1)
{
  uint64_t v2 = sub_100DD03DC(&qword_10169C0F0, (void (*)(uint64_t))type metadata accessor for CRLFileItemAtomicDataStruct);

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100DCDAE0()
{
  return 5;
}

void sub_100DCDAEC(_UNKNOWN ****a1)
{
  uint64_t v2 = type metadata accessor for CRLFileItemCRDTData(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*a1 == &off_10169BCB8)
  {
    uint64_t v6 = (uint64_t)a1 + qword_10171C738;
    swift_beginAccess();
    sub_100DD0B24(v6, (uint64_t)v5, type metadata accessor for CRLFileItemCRDTData);
    swift_beginAccess();
    sub_100DD03DC(&qword_10168D8F0, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);
    swift_retain();
    CRStruct_1.merge(_:)();
    swift_endAccess();
    swift_release();
    sub_100DD0BF4((uint64_t)v5, type metadata accessor for CRLFileItemCRDTData);
  }
}

uint64_t sub_100DCDC7C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v45 - v9;
  uint64_t v11 = type metadata accessor for CRLFileItemCRDTData(0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v45 - v17;
  uint64_t v19 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v45 - v25;
  if (*(_UNKNOWN ****)a1 == &off_10169BCB8)
  {
    uint64_t v46 = v3;
    uint64_t v27 = v1 + *(void *)(*(void *)v1 + 632);
    swift_beginAccess();
    sub_100522E9C(v27, (uint64_t)v26, (uint64_t *)&unk_101683E10);
    uint64_t v28 = a1 + *(void *)(*(void *)a1 + 632);
    swift_beginAccess();
    sub_100522E9C(v28, (uint64_t)v22, (uint64_t *)&unk_101683E10);
    swift_retain();
    LOBYTE(v28) = sub_100FC1F68((uint64_t)v26, (uint64_t)v22);
    sub_100522F00((uint64_t)v22, (uint64_t *)&unk_101683E10);
    sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101683E10);
    if (v28)
    {
      uint64_t v29 = v1 + qword_10171C738;
      swift_beginAccess();
      sub_100DD0B24(v29, (uint64_t)v18, type metadata accessor for CRLFileItemCRDTData);
      uint64_t v30 = a1 + qword_10171C738;
      swift_beginAccess();
      sub_100DD0B24(v30, (uint64_t)v14, type metadata accessor for CRLFileItemCRDTData);
      sub_1005057FC(&qword_101685450);
      CRRegister.wrappedValue.getter();
      CRRegister.wrappedValue.getter();
      if ((static UUID.== infix(_:_:)() & 1) == 0) {
        goto LABEL_17;
      }
      uint64_t v31 = type metadata accessor for CRLAssetData();
      uint64_t v32 = *(int *)(v31 + 20);
      uint64_t v33 = *(void *)&v10[v32];
      uint64_t v34 = *(void *)&v10[v32 + 8];
      uint64_t v35 = &v6[v32];
      if (v33 != *(void *)v35 || v34 != *((void *)v35 + 1))
      {
        char v36 = 0;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          goto LABEL_18;
        }
      }
      if ((sub_100ED60AC(*(void *)&v10[*(int *)(v31 + 24)], *(void *)&v6[*(int *)(v31 + 24)]) & 1) == 0) {
        goto LABEL_17;
      }
      uint64_t v37 = *(int *)(v46 + 20);
      char v38 = &v10[v37];
      uint64_t v39 = &v6[v37];
      if ((static UUID.== infix(_:_:)() & 1) == 0) {
        goto LABEL_17;
      }
      uint64_t v40 = *(int *)(v31 + 20);
      uint64_t v41 = *(void *)&v38[v40];
      uint64_t v42 = *(void *)&v38[v40 + 8];
      id v43 = &v39[v40];
      if (v41 != *(void *)v43 || v42 != *((void *)v43 + 1))
      {
        char v36 = 0;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          goto LABEL_18;
        }
      }
      if (sub_100ED60AC(*(void *)&v38[*(int *)(v31 + 24)], *(void *)&v39[*(int *)(v31 + 24)])) {
        char v36 = sub_100ED60AC(*(void *)&v10[*(int *)(v46 + 24)], *(void *)&v6[*(int *)(v46 + 24)]);
      }
      else {
LABEL_17:
      }
        char v36 = 0;
LABEL_18:
      sub_100DD0BF4((uint64_t)v6, type metadata accessor for CRLFileItemAtomicDataStruct);
      sub_100DD0BF4((uint64_t)v10, type metadata accessor for CRLFileItemAtomicDataStruct);
      swift_release();
      sub_100DD0BF4((uint64_t)v14, type metadata accessor for CRLFileItemCRDTData);
      sub_100DD0BF4((uint64_t)v18, type metadata accessor for CRLFileItemCRDTData);
      return v36 & 1;
    }
    swift_release();
  }
  char v36 = 0;
  return v36 & 1;
}

uint64_t sub_100DCE0E4(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for CRLFileItemCRDTData(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v16 - v10;
  uint64_t v12 = v2 + qword_10171C738;
  swift_beginAccess();
  if (a2)
  {
    sub_100DD0B24(v12, (uint64_t)v7, type metadata accessor for CRLFileItemCRDTData);
    sub_100DD03DC(&qword_10168D8F8, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);
    CRType.copy(renamingReferences:)();
    sub_100DD0BF4((uint64_t)v7, type metadata accessor for CRLFileItemCRDTData);
  }
  else
  {
    sub_100DD0B24(v12, (uint64_t)v11, type metadata accessor for CRLFileItemCRDTData);
  }
  if (qword_10166EE10 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for CRCodableVersion();
  sub_100556B74(v13, (uint64_t)qword_10171A2D8);
  sub_100DD03DC(&qword_10168B240, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);
  uint64_t v14 = CRDT.serializedData(_:version:)();
  sub_100DD0BF4((uint64_t)v11, type metadata accessor for CRLFileItemCRDTData);
  return v14;
}

uint64_t sub_100DCE338(_UNKNOWN ****a1)
{
  uint64_t v3 = type metadata accessor for CRLFileItemCRDTData(0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7, v8);
  uint64_t v10 = &v15[-v9];
  if (*a1 == &off_10169BCB8)
  {
    uint64_t v11 = v1 + qword_10171C738;
    swift_beginAccess();
    sub_100DD0B24(v11, (uint64_t)v10, type metadata accessor for CRLFileItemCRDTData);
    uint64_t v12 = (uint64_t)a1 + qword_10171C738;
    swift_beginAccess();
    sub_100DD0B24(v12, (uint64_t)v6, type metadata accessor for CRLFileItemCRDTData);
    sub_100DD03DC(&qword_10168D8F0, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);
    char v13 = CRStruct_1.hasDelta(from:)();
    sub_100DD0BF4((uint64_t)v6, type metadata accessor for CRLFileItemCRDTData);
    sub_100DD0BF4((uint64_t)v10, type metadata accessor for CRLFileItemCRDTData);
    return v13 & 1;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100DCE558(uint64_t a1, uint64_t a2)
{
  v27[1] = a2;
  v27[0] = type metadata accessor for CRLFileItemCRDTData(0);
  __chkstk_darwin(v27[0], v3);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v27 - v8;
  uint64_t v10 = sub_1005057FC(&qword_10169C158);
  __chkstk_darwin(v10 - 8, v11);
  char v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)v27 - v16;
  uint64_t v18 = swift_dynamicCastClass();
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = v2 + qword_10171C738;
    swift_beginAccess();
    sub_100DD0B24(v20, (uint64_t)v9, type metadata accessor for CRLFileItemCRDTData);
    uint64_t v21 = v19 + qword_10171C738;
    swift_beginAccess();
    sub_100DD0B24(v21, (uint64_t)v5, type metadata accessor for CRLFileItemCRDTData);
    sub_100DD03DC(&qword_10168D8F0, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);
    swift_retain();
    CRStruct_1.delta(_:from:)();
    sub_100DD0BF4((uint64_t)v5, type metadata accessor for CRLFileItemCRDTData);
    sub_100DD0BF4((uint64_t)v9, type metadata accessor for CRLFileItemCRDTData);
    sub_100522E9C((uint64_t)v17, (uint64_t)v13, &qword_10169C158);
    uint64_t v22 = sub_1005057FC(&qword_10169C110);
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v13, 1, v22) == 1)
    {
      sub_100522F00((uint64_t)v17, &qword_10169C158);
      swift_release();
      sub_100522F00((uint64_t)v13, &qword_10169C158);
      return 0;
    }
    else
    {
      if (qword_10166EE10 != -1) {
        swift_once();
      }
      uint64_t v25 = type metadata accessor for CRCodableVersion();
      sub_100556B74(v25, (uint64_t)qword_10171A2D8);
      sub_100523288(&qword_10169C108, &qword_10169C110);
      uint64_t v24 = PartialCRDT.deltaSerializedData(_:version:)();
      swift_release();
      sub_100522F00((uint64_t)v17, &qword_10169C158);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v22);
    }
    return v24;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

unint64_t sub_100DCE9B0(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v39 = *v3;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v38 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_10169C110);
  uint64_t v40 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100510D4C(a1, a2);
  sub_100523288(&qword_10169C108, &qword_10169C110);
  LOBYTE(a2) = v13;
  uint64_t v18 = v41;
  PartialCRDT.init(serializedData:)();
  if (!v18)
  {
    char v36 = v12;
    uint64_t v37 = v8;
    uint64_t v41 = v9;
    swift_beginAccess();
    type metadata accessor for CRLFileItemCRDTData(0);
    sub_100DD03DC(&qword_10168D8F0, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);
    LODWORD(a2) = CRStruct_1.merge(delta:)();
    swift_endAccess();
    if ((a2 & 1) == 0)
    {
      uint64_t v33 = v16;
      uint64_t v34 = v13;
      int v35 = a2;
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v19 = (void *)static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      uint64_t v21 = (uint64_t)v3 + *(void *)(*v3 + 632);
      swift_beginAccess();
      uint64_t v22 = v21;
      uint64_t v23 = (uint64_t)v37;
      sub_100522E9C(v22, (uint64_t)v37, (uint64_t *)&unk_101683E10);
      id v24 = v19;
      sub_1005057FC(&qword_101674550);
      uint64_t v25 = v36;
      CRRegister.wrappedValue.getter();
      sub_100522F00(v23, (uint64_t *)&unk_101683E10);
      a2 = UUID.uuidString.getter();
      uint64_t v27 = v26;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v25, v41);
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v28 = sub_100528BE4();
      *(void *)(inited + 64) = v28;
      *(void *)(inited + 32) = a2;
      *(void *)(inited + 40) = v27;
      uint64_t v42 = v3;
      swift_retain();
      uint64_t v29 = String.init<A>(describing:)();
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v28;
      *(void *)(inited + 72) = v29;
      *(void *)(inited + 80) = v30;
      uint64_t v31 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v24, (uint64_t)&_mh_execute_header, v31, (uint64_t)"Delta failed to apply for %{public}@%{public}@", 46, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      LOBYTE(a2) = v35;
      uint64_t v13 = v34;
      uint64_t v16 = v33;
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v13);
  }
  return a2 & 1;
}

unint64_t sub_100DCEE80()
{
  uint64_t v0 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v35 = (uint64_t)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v27 - v5;
  uint64_t v34 = type metadata accessor for CRLFileItemAtomicDataStruct(0) - 8;
  __chkstk_darwin(v34, v7);
  uint64_t v33 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v27 - v11;
  sub_1005057FC(&qword_1016737C8);
  uint64_t v13 = (int *)(sub_1005057FC(&qword_10169A0F0) - 8);
  uint64_t v14 = *(void *)v13;
  uint64_t v31 = *(void *)(*(void *)v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v32 = v16;
  *(_OWORD *)(v16 + 16) = xmmword_10117D8C0;
  uint64_t v17 = (char *)(v16 + v15);
  unint64_t v18 = v16 + v15 + v13[14];
  *(void *)uint64_t v17 = 1701603686;
  *((void *)v17 + 1) = 0xE400000000000000;
  swift_beginAccess();
  uint64_t v29 = sub_1005057FC(&qword_101685450);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  uint64_t v30 = type metadata accessor for CRLAssetData;
  sub_100DD0B24((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  unint64_t v28 = type metadata accessor for CRLFileItemAtomicDataStruct;
  sub_100DD0BF4((uint64_t)v12, type metadata accessor for CRLFileItemAtomicDataStruct);
  uint64_t v19 = type metadata accessor for UUID();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v27 = *(void (**)(unint64_t, char *, uint64_t))(v20 + 16);
  v27(v18, v6, v19);
  sub_100DD0BF4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  uint64_t v21 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(v20 + 56);
  v21(v18, 0, 1, v19);
  uint64_t v22 = &v17[v31];
  uint64_t v23 = &v17[v31 + v13[14]];
  strcpy(&v17[v31], "linkMetadata");
  v22[13] = 0;
  *((_WORD *)v22 + 7) = -5120;
  swift_beginAccess();
  uint64_t v24 = (uint64_t)v33;
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  uint64_t v25 = v35;
  sub_100DD0B24(v24 + *(int *)(v34 + 28), v35, (uint64_t (*)(void))v30);
  sub_100DD0BF4(v24, v28);
  v27((unint64_t)v23, (char *)v25, v19);
  sub_100DD0BF4(v25, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  v21((unint64_t)v23, 0, 1, v19);
  return sub_100A394EC(v32);
}

uint64_t sub_100DCF230()
{
  return sub_100DD0BF4(v0 + qword_10171C738, type metadata accessor for CRLFileItemCRDTData);
}

uint64_t sub_100DCF268()
{
  sub_100522F00(v0 + *(void *)(*(void *)v0 + 632), (uint64_t *)&unk_101683E10);
  sub_100DD0BF4(v0 + qword_10171C738, type metadata accessor for CRLFileItemCRDTData);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLFileItemData(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10169BC90);
}

uint64_t sub_100DCF324()
{
  uint64_t result = type metadata accessor for CRLFileItemCRDTData(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLFileItemCRDTData(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10169BFC0);
}

uint64_t *sub_100DCF3D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005057FC(&qword_101685450);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100DCF4A8(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101685450);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100DCF520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101685450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100DCF5A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101685450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100DCF634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101685450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100DCF6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101685450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100DCF73C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100DCF750);
}

uint64_t sub_100DCF750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101685450);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100DCF814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100DCF828);
}

uint64_t sub_100DCF828(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1005057FC(&qword_101685450);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_100DCF8E8()
{
  sub_100DCF980();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100DCF980()
{
  if (!qword_10169BFD0)
  {
    type metadata accessor for CRLFileItemAtomicDataStruct(255);
    sub_100DD03DC(&qword_10168D8D8, (void (*)(uint64_t))type metadata accessor for CRLFileItemAtomicDataStruct);
    unint64_t v0 = type metadata accessor for CRRegister();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10169BFD0);
    }
  }
}

uint64_t type metadata accessor for CRLFileItemAtomicDataStruct(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10169C058);
}

uint64_t *sub_100DCFA34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = type metadata accessor for CRLAssetData();
    uint64_t v10 = *(int *)(v9 + 20);
    uint64_t v11 = (uint64_t *)((char *)a1 + v10);
    uint64_t v12 = (uint64_t *)((char *)a2 + v10);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    *(uint64_t *)((char *)a1 + *(int *)(v9 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v9 + 24));
    uint64_t v14 = *(int *)(a3 + 20);
    unint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8((uint64_t *)v15, (uint64_t *)v16, v7);
    uint64_t v17 = *(int *)(v9 + 20);
    unint64_t v18 = &v15[v17];
    uint64_t v19 = &v16[v17];
    uint64_t v20 = *((void *)v19 + 1);
    *(void *)unint64_t v18 = *(void *)v19;
    *((void *)v18 + 1) = v20;
    *(void *)&v15[*(int *)(v9 + 24)] = *(void *)&v16[*(int *)(v9 + 24)];
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100DCFBAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  type metadata accessor for CRLAssetData();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5(a1 + *(int *)(a2 + 20), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100DCFC9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = type metadata accessor for CRLAssetData();
  uint64_t v9 = *(int *)(v8 + 20);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  *(void *)(a1 + *(int *)(v8 + 24)) = *(void *)(a2 + *(int *)(v8 + 24));
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7(v14, v15, v6);
  uint64_t v16 = *(int *)(v8 + 20);
  uint64_t v17 = (void *)(v14 + v16);
  unint64_t v18 = (void *)(v15 + v16);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  *(void *)(v14 + *(int *)(v8 + 24)) = *(void *)(v15 + *(int *)(v8 + 24));
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100DCFDC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = type metadata accessor for CRLAssetData();
  uint64_t v9 = *(int *)(v8 + 20);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  *uint64_t v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(v8 + 24)) = *(void *)(a2 + *(int *)(v8 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  v7(a1 + v12, a2 + v12, v6);
  uint64_t v15 = *(int *)(v8 + 20);
  uint64_t v16 = (void *)(v13 + v15);
  uint64_t v17 = (void *)(v14 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v13 + *(int *)(v8 + 24)) = *(void *)(v14 + *(int *)(v8 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100DCFF2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = type metadata accessor for CRLAssetData();
  *(_OWORD *)(a1 + *(int *)(v8 + 20)) = *(_OWORD *)(a2 + *(int *)(v8 + 20));
  *(void *)(a1 + *(int *)(v8 + 24)) = *(void *)(a2 + *(int *)(v8 + 24));
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  *(_OWORD *)(v10 + *(int *)(v8 + 20)) = *(_OWORD *)(v11 + *(int *)(v8 + 20));
  *(void *)(v10 + *(int *)(v8 + 24)) = *(void *)(v11 + *(int *)(v8 + 24));
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100DD0024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = type metadata accessor for CRLAssetData();
  uint64_t v9 = *(int *)(v8 + 20);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (uint64_t *)(a2 + v9);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  *uint64_t v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(v8 + 24)) = *(void *)(a2 + *(int *)(v8 + 24));
  swift_bridgeObjectRelease();
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  v7(a1 + v14, a2 + v14, v6);
  uint64_t v17 = *(int *)(v8 + 20);
  unint64_t v18 = (void *)(v15 + v17);
  uint64_t v19 = (uint64_t *)(v16 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  void *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  *(void *)(v15 + *(int *)(v8 + 24)) = *(void *)(v16 + *(int *)(v8 + 24));
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100DD0154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100DD0168);
}

uint64_t sub_100DD0168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CRLAssetData();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100DD0228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100DD023C);
}

uint64_t sub_100DD023C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for CRLAssetData();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100DD02F8()
{
  uint64_t result = type metadata accessor for CRLAssetData();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100DD0394()
{
  return sub_100DD03DC(&qword_10169C098, (void (*)(uint64_t))type metadata accessor for CRLFileItemAtomicDataStruct);
}

uint64_t sub_100DD03DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100DD0424()
{
  return sub_100DD03DC(&qword_10168D8D8, (void (*)(uint64_t))type metadata accessor for CRLFileItemAtomicDataStruct);
}

uint64_t sub_100DD046C()
{
  return sub_100DD03DC(&qword_10169C0A0, (void (*)(uint64_t))type metadata accessor for CRLFileItemAtomicDataStruct);
}

uint64_t sub_100DD04B4()
{
  return sub_100DD03DC(&qword_10169C0A8, (void (*)(uint64_t))type metadata accessor for CRLFileItemAtomicDataStruct);
}

unint64_t sub_100DD0500()
{
  unint64_t result = qword_10169C0B0;
  if (!qword_10169C0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C0B0);
  }
  return result;
}

unint64_t sub_100DD0558()
{
  unint64_t result = qword_10169C0B8;
  if (!qword_10169C0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C0B8);
  }
  return result;
}

unint64_t sub_100DD05B0()
{
  unint64_t result = qword_10169C0C0;
  if (!qword_10169C0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C0C0);
  }
  return result;
}

unint64_t sub_100DD0608()
{
  unint64_t result = qword_10169C0C8;
  if (!qword_10169C0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C0C8);
  }
  return result;
}

unint64_t sub_100DD0660()
{
  unint64_t result = qword_10169C0D0;
  if (!qword_10169C0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C0D0);
  }
  return result;
}

unint64_t sub_100DD06B8()
{
  unint64_t result = qword_10169C0D8;
  if (!qword_10169C0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C0D8);
  }
  return result;
}

uint64_t sub_100DD070C()
{
  return sub_100523288(&qword_10169C0E0, &qword_10169C0E8);
}

uint64_t sub_100DD0748()
{
  return sub_100DD03DC(&qword_10169C0F0, (void (*)(uint64_t))type metadata accessor for CRLFileItemAtomicDataStruct);
}

uint64_t sub_100DD0790()
{
  return sub_100DD03DC(&qword_10169C0F8, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);
}

uint64_t sub_100DD07D8()
{
  return sub_100DD03DC(&qword_10169C100, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);
}

uint64_t sub_100DD0820()
{
  return sub_100DD03DC(&qword_10168D8F8, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);
}

uint64_t sub_100DD0868()
{
  return sub_100523288(&qword_10169C108, &qword_10169C110);
}

uint64_t sub_100DD08A4()
{
  return sub_100DD03DC(&qword_10168B240, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);
}

uint64_t sub_100DD08EC()
{
  return sub_100DD03DC(&qword_10169C118, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);
}

uint64_t sub_100DD0934()
{
  return sub_100523288(&qword_10169C120, &qword_101685450);
}

uint64_t sub_100DD0970()
{
  return sub_100DD03DC(&qword_10169C128, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);
}

uint64_t sub_100DD09B8()
{
  return sub_100DD03DC(&qword_10169C130, (void (*)(uint64_t))type metadata accessor for CRLFileItemAtomicDataStruct);
}

uint64_t sub_100DD0A00(uint64_t a1, uint64_t a2)
{
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for CRLAssetData();
  uint64_t v5 = *(int *)(v4 + 20);
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (!v9 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  if ((sub_100ED60AC(*(void *)(a1 + *(int *)(v4 + 24)), *(void *)(a2 + *(int *)(v4 + 24))) & 1) == 0) {
    return 0;
  }
  uint64_t v10 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v14 = *(int *)(v4 + 20);
  uint64_t v15 = *(void *)(v12 + v14);
  uint64_t v16 = *(void *)(v12 + v14 + 8);
  uint64_t v17 = (void *)(v13 + v14);
  BOOL v18 = v15 == *v17 && v16 == v17[1];
  if (!v18 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
    || (sub_100ED60AC(*(void *)(v12 + *(int *)(v4 + 24)), *(void *)(v13 + *(int *)(v4 + 24))) & 1) == 0)
  {
    return 0;
  }
  uint64_t v19 = *(int *)(v10 + 24);
  uint64_t v20 = *(void *)(a1 + v19);
  uint64_t v21 = *(void *)(a2 + v19);

  return sub_100ED60AC(v20, v21);
}

uint64_t sub_100DD0B24(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100DD0B8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100DD0BF4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100DD0C54(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65737341656C6966 && a2 == 0xED00006174614474;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001012764D0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unsigned char *storeEnumTagSinglePayload for CRLFileItemAtomicDataStruct.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100DD0E94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFileItemAtomicDataStruct.CodingKeys()
{
  return &type metadata for CRLFileItemAtomicDataStruct.CodingKeys;
}

unint64_t sub_100DD0ED0()
{
  unint64_t result = qword_10169C160;
  if (!qword_10169C160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C160);
  }
  return result;
}

uint64_t sub_100DD0F24(float32x4_t *a1, float32x4_t *a2)
{
  return sub_100DD1CC8(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_100DD0F4C(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  v9[0] = sub_1009B9348(a1.n128_u32[0]);
  v9[1] = sub_1009B9348(a1.n128_u32[1]);
  v9[2] = sub_1009B9348(a1.n128_u32[2]);
  v9[3] = sub_1009B9348(a1.n128_u32[3]);
  v9[4] = sub_1009B9348(a2.n128_u32[0]);
  v9[5] = sub_1009B9348(a2.n128_u32[1]);
  v9[6] = sub_1009B9348(a2.n128_u32[2]);
  v9[7] = sub_1009B9348(a2.n128_u32[3]);
  v9[8] = sub_1009B9348(a3.n128_u32[0]);
  v9[9] = sub_1009B9348(a3.n128_u32[1]);
  v9[10] = sub_1009B9348(a3.n128_u32[2]);
  v9[11] = sub_1009B9348(a3.n128_u32[3]);
  v9[12] = sub_1009B9348(a4.n128_u32[0]);
  v9[13] = sub_1009B9348(a4.n128_u32[1]);
  v9[14] = sub_1009B9348(a4.n128_u32[2]);
  v9[15] = sub_1009B9348(a4.n128_u32[3]);
  return sub_1009B6AEC((uint64_t)v9, (uint64_t)&v10);
}

uint64_t sub_100DD1088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100DD1870(*(void *)a1, *(void *)(a1 + 8), (uint64_t)v4);
  return sub_100DD1C60((uint64_t)v4, a2);
}

uint64_t sub_100DD10CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100DD0F4C(*v1, v1[1], v1[2], v1[3]);
  *a1 = result;
  a1[1] = v4;
  return result;
}

Swift::Int sub_100DD10FC()
{
  __n128 v2 = *v0;
  __n128 v3 = v0[1];
  __n128 v4 = v0[2];
  __n128 v5 = v0[3];
  Hasher.init(_seed:)();
  CRL3DRotation.hash(into:)(v2);
  CRL3DRotation.hash(into:)(v3);
  CRL3DRotation.hash(into:)(v4);
  CRL3DRotation.hash(into:)(v5);
  return Hasher._finalize()();
}

void sub_100DD117C()
{
  __n128 v1 = v0[1];
  __n128 v2 = v0[2];
  __n128 v3 = v0[3];
  CRL3DRotation.hash(into:)(*v0);
  CRL3DRotation.hash(into:)(v1);
  CRL3DRotation.hash(into:)(v2);

  CRL3DRotation.hash(into:)(v3);
}

Swift::Int sub_100DD11EC()
{
  __n128 v2 = *v0;
  __n128 v3 = v0[1];
  __n128 v4 = v0[2];
  __n128 v5 = v0[3];
  Hasher.init(_seed:)();
  CRL3DRotation.hash(into:)(v2);
  CRL3DRotation.hash(into:)(v3);
  CRL3DRotation.hash(into:)(v4);
  CRL3DRotation.hash(into:)(v5);
  return Hasher._finalize()();
}

__n128 sub_100DD1268@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  long long v4 = *(_OWORD *)(v1 + 32);
  long long v5 = *(_OWORD *)(v1 + 48);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t sub_100DD127C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100DD1CF4();
  unint64_t v7 = sub_100DD17C4();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100DD12EC()
{
  return CRValue<>.init(from:)();
}

uint64_t sub_100DD1358()
{
  return CRValue<>.encode(to:)();
}

uint64_t sub_100DD13B4(uint64_t a1)
{
  unint64_t v2 = sub_100DD1CF4();
  unint64_t v3 = sub_100DD1D48();

  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for Data);
}

unint64_t sub_100DD1414()
{
  return ((unint64_t)*v0 << 8) + 12387;
}

uint64_t sub_100DD1428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100DD1D9C(a1, a2);
  *a3 = result;
  return result;
}

unint64_t sub_100DD1450@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s8Freeform25CRLiCloudConnectionStatusO8rawValueACSgSi_tcfC_0(a1);
  *a2 = result;
  return result;
}

uint64_t sub_100DD1478(uint64_t a1)
{
  unint64_t v2 = sub_100DD216C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100DD14B4(uint64_t a1)
{
  unint64_t v2 = sub_100DD216C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100DD14F0(void *a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  __n128 v13 = a5;
  __n128 v14 = a4;
  __n128 v15 = a3;
  __n128 v16 = a2;
  uint64_t v7 = sub_1005057FC(&qword_10169C1A8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100DD216C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  __n128 v17 = v16;
  char v18 = 0;
  sub_1005057FC(&qword_10168FAE8);
  sub_100DD21C0(&qword_10168FAF0);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v5)
  {
    __n128 v17 = v15;
    char v18 = 1;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    __n128 v17 = v14;
    char v18 = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    __n128 v17 = v13;
    char v18 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_100DD1718@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = sub_100DD1EF8(a1);
  if (!v2)
  {
    *a2 = v5;
    a2[1] = v6;
    a2[2] = v7;
    a2[3] = v8;
  }
  return result;
}

uint64_t sub_100DD1748(void *a1)
{
  return sub_100DD14F0(a1, *v1, v1[1], v1[2], v1[3]);
}

unint64_t sub_100DD176C()
{
  unint64_t result = qword_10169C168;
  if (!qword_10169C168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C168);
  }
  return result;
}

unint64_t sub_100DD17C4()
{
  unint64_t result = qword_10169C170;
  if (!qword_10169C170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C170);
  }
  return result;
}

unint64_t sub_100DD181C()
{
  unint64_t result = qword_10169C178;
  if (!qword_10169C178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C178);
  }
  return result;
}

uint64_t sub_100DD1870@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v7) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_46;
      }
      uint64_t v7 = (int)v7;
LABEL_6:
      if (v7 == 64)
      {
        if (v4)
        {
          if (v4 != 1)
          {
            uint64_t v25 = *(void *)(a1 + 16);
            uint64_t v26 = *(void *)(a1 + 24);
            swift_retain();
            swift_retain();
            uint64_t v27 = (char *)__DataStorage._bytes.getter();
            if (v27)
            {
              uint64_t v28 = __DataStorage._offset.getter();
              if (__OFSUB__(v25, v28)) {
                goto LABEL_51;
              }
              v27 += v25 - v28;
            }
            BOOL v10 = __OFSUB__(v26, v25);
            uint64_t v29 = v26 - v25;
            if (v10) {
              goto LABEL_49;
            }
            uint64_t v30 = __DataStorage._length.getter();
            if (v27)
            {
              if (v30 >= v29) {
                uint64_t v31 = v29;
              }
              else {
                uint64_t v31 = v30;
              }
              uint64_t v32 = v31 / 4;
            }
            else
            {
              uint64_t v32 = 0;
            }
            uint64_t v33 = sub_1006B9BB0(v27, v32);
            swift_release();
            swift_release();
            int64_t v34 = *((void *)v33 + 2);
            if (v34) {
              goto LABEL_28;
            }
            goto LABEL_35;
          }
          uint64_t v11 = (a1 >> 32) - (int)a1;
          if (a1 >> 32 < (int)a1)
          {
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
            goto LABEL_50;
          }
          uint64_t v12 = __DataStorage._bytes.getter();
          if (v12)
          {
            uint64_t v13 = v12;
            uint64_t v14 = __DataStorage._offset.getter();
            uint64_t v15 = (int)a1 - v14;
            if (__OFSUB__((int)a1, v14))
            {
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
            }
            uint64_t v16 = __DataStorage._length.getter();
            __n128 v17 = (char *)(v13 + v15);
            if (v16 >= v11) {
              uint64_t v16 = (a1 >> 32) - (int)a1;
            }
            uint64_t v18 = v16 / 4;
          }
          else
          {
            __DataStorage._length.getter();
            __n128 v17 = 0;
            uint64_t v18 = 0;
          }
        }
        else
        {
          uint64_t v49 = (double *)a1;
          __int16 v50 = a2;
          char v51 = BYTE2(a2);
          char v52 = BYTE3(a2);
          char v53 = BYTE4(a2);
          uint64_t v18 = (a2 >> 50) & 0x3F;
          char v54 = BYTE5(a2);
          __n128 v17 = (char *)&v49;
        }
        uint64_t v33 = sub_1006B9BB0(v17, v18);
        int64_t v34 = *((void *)v33 + 2);
        if (v34)
        {
LABEL_28:
          uint64_t v49 = _swiftEmptyArrayStorage;
          sub_1006BB644(0, v34, 0);
          uint64_t v35 = 0;
          char v36 = v49;
          do
          {
            int v37 = sub_1009B9348(*((_DWORD *)v33 + v35 + 8));
            uint64_t v49 = v36;
            unint64_t v39 = *((void *)v36 + 2);
            unint64_t v38 = *((void *)v36 + 3);
            if (v39 >= v38 >> 1)
            {
              sub_1006BB644(v38 > 1, v39 + 1, 1);
              char v36 = v49;
            }
            ++v35;
            *((void *)v36 + 2) = v39 + 1;
            *((_DWORD *)v36 + v39 + 8) = v37;
          }
          while (v34 != v35);
          swift_bridgeObjectRelease();
LABEL_36:
          unint64_t v40 = *((void *)v36 + 2);
          if (v40 < 4)
          {
            __break(1u);
          }
          else
          {
            sub_100B4DAD0((uint64_t)(v36 + 4), 0, 9uLL);
            if (v40 >= 8)
            {
              long long v48 = v41;
              sub_100B4DAD0((uint64_t)(v36 + 4), 4, 0x11uLL);
              if (v40 >= 0xC)
              {
                long long v47 = v42;
                sub_100B4DAD0((uint64_t)(v36 + 4), 8, 0x19uLL);
                if (v40 >= 0x10)
                {
                  long long v46 = v43;
                  sub_100B4DAD0((uint64_t)(v36 + 4), 12, 0x21uLL);
                  long long v45 = v44;
                  swift_bridgeObjectRelease();
                  uint64_t result = sub_100510084(a1, a2);
                  long long v24 = v45;
                  long long v23 = v46;
                  char v21 = 0;
                  long long v22 = v47;
                  long long v20 = v48;
                  goto LABEL_41;
                }
                goto LABEL_45;
              }
LABEL_44:
              __break(1u);
LABEL_45:
              __break(1u);
LABEL_46:
              __break(1u);
LABEL_47:
              __break(1u);
              goto LABEL_48;
            }
          }
          __break(1u);
          goto LABEL_44;
        }
LABEL_35:
        swift_bridgeObjectRelease();
        char v36 = _swiftEmptyArrayStorage;
        goto LABEL_36;
      }
LABEL_15:
      uint64_t result = sub_100510084(a1, a2);
      long long v20 = 0uLL;
      char v21 = 1;
      long long v22 = 0uLL;
      long long v23 = 0uLL;
      long long v24 = 0uLL;
LABEL_41:
      *(_OWORD *)a3 = v20;
      *(_OWORD *)(a3 + 16) = v22;
      *(_OWORD *)(a3 + 32) = v23;
      *(_OWORD *)(a3 + 48) = v24;
      *(unsigned char *)(a3 + 64) = v21;
      return result;
    case 2uLL:
      uint64_t v9 = *(void *)(a1 + 16);
      uint64_t v8 = *(void *)(a1 + 24);
      BOOL v10 = __OFSUB__(v8, v9);
      uint64_t v7 = v8 - v9;
      if (!v10) {
        goto LABEL_6;
      }
      goto LABEL_47;
    case 3uLL:
      goto LABEL_15;
    default:
      uint64_t v7 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_100DD1C60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10169C180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100DD1CC8(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, float32x4_t a7, float32x4_t a8)
{
  return vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(a1, a5), (int8x16_t)vceqq_f32(a2, a6)), vandq_s8((int8x16_t)vceqq_f32(a3, a7), (int8x16_t)vceqq_f32(a4, a8)))) >> 31;
}

unint64_t sub_100DD1CF4()
{
  unint64_t result = qword_10169C188;
  if (!qword_10169C188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C188);
  }
  return result;
}

unint64_t sub_100DD1D48()
{
  unint64_t result = qword_10169C190;
  if (!qword_10169C190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C190);
  }
  return result;
}

uint64_t sub_100DD1D9C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12387 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12643 && a2 == 0xE200000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 12899 && a2 == 0xE200000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 13155 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100DD1EF8(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_10169C198);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100DD216C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    sub_1005057FC(&qword_10168FAE8);
    char v10 = 0;
    sub_100DD21C0(&qword_101690148);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v9[3] = v11;
    char v10 = 1;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v9[2] = v11;
    char v10 = 2;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v9[1] = v11;
    char v10 = 3;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    v9[0] = v11;
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
}

unint64_t sub_100DD216C()
{
  unint64_t result = qword_10169C1A0;
  if (!qword_10169C1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C1A0);
  }
  return result;
}

uint64_t sub_100DD21C0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(&qword_10168FAE8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRL3DTransform.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100DD22D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRL3DTransform.CodingKeys()
{
  return &type metadata for CRL3DTransform.CodingKeys;
}

ValueMetadata *type metadata accessor for CRL3DTransform()
{
  return &type metadata for CRL3DTransform;
}

unint64_t sub_100DD2320()
{
  unint64_t result = qword_10169C1B0;
  if (!qword_10169C1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C1B0);
  }
  return result;
}

unint64_t sub_100DD2378()
{
  unint64_t result = qword_10169C1B8;
  if (!qword_10169C1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C1B8);
  }
  return result;
}

unint64_t sub_100DD23D0()
{
  unint64_t result = qword_10169C1C0;
  if (!qword_10169C1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C1C0);
  }
  return result;
}

uint64_t sub_100DD2424(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return 0x6E776F6E6B6E55;
  }
  uint64_t result = 0x70756F7247;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6570616853;
      break;
    case 2:
      uint64_t result = 0x697463656E6E6F43;
      break;
    case 3:
      uint64_t result = 0x6567616D49;
      break;
    case 4:
      uint64_t result = 0x41724F6569766F4DLL;
      break;
    case 5:
      uint64_t result = 1701603654;
      break;
    case 6:
      uint64_t result = 0x65746973626557;
      break;
    case 7:
      uint64_t result = 0x7463656A624F4433;
      break;
    case 8:
      uint64_t result = 0x676E6977617244;
      break;
    case 9:
      uint64_t result = 0x6168536E77617244;
      break;
    case 10:
      uint64_t result = 0x6F4E796B63697453;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for CRLAnalyticsUtilities()
{
  return self;
}

char *sub_100DD25BC(uint64_t *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for CRLMovieItemAssetData(0);
  __n128 v6 = __chkstk_darwin(v4, v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(uint64_t (**)(__n128))((swift_isaMask & *a2) + 0xC8);
  uint64_t v10 = v9(v6);
  if ((v11 & 1) != 0 && !v10)
  {
    type metadata accessor for CRLGroupItem();
    uint64_t v10 = swift_dynamicCastClass();
    if (v10)
    {
      uint64_t v12 = a2;
      unint64_t v13 = (unint64_t)sub_1005430E4();
      unint64_t v14 = v13;
      id v42 = v12;
      uint64_t v43 = v4;
      if (v13 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t result = (char *)_CocoaArrayWrapper.endIndex.getter();
        uint64_t v15 = (uint64_t)result;
        if (result) {
          goto LABEL_6;
        }
      }
      else
      {
        uint64_t v15 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = (char *)swift_bridgeObjectRetain();
        if (v15)
        {
LABEL_6:
          if (v15 < 1)
          {
            __break(1u);
            goto LABEL_32;
          }
          for (uint64_t i = 0; i != v15; ++i)
          {
            if ((v14 & 0xC000000000000001) != 0) {
              id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v18 = *(id *)(v14 + 8 * i + 32);
            }
            uint64_t v19 = v18;
            sub_100DD25BC(a1, v18);
          }
        }
      }

      uint64_t v10 = swift_bridgeObjectRelease_n();
      uint64_t v4 = v43;
    }
  }
  uint64_t v20 = ((uint64_t (*)(uint64_t))v9)(v10);
  char v22 = v21;
  v23._countAndFlagsBits = sub_100DD2424(v20, v21 & 1);
  uint64_t v44 = 0x657079546D657469;
  unint64_t v45 = 0xE800000000000000;
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  uint64_t v25 = v44;
  uint64_t v24 = v45;
  if ((v22 & 1) != 0 && v20 == 4)
  {
    type metadata accessor for CRLMovieItem();
    if (swift_dynamicCastClass())
    {
      uint64_t v26 = a2;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_retain();
      sub_1005057FC(&qword_1016A4070);
      CRRegister.wrappedValue.getter();
      int v27 = v8[*(int *)(v4 + 36)];
      swift_endAccess();
      sub_100515888((uint64_t)v8);
      swift_release();
      if (v27) {
        uint64_t v28 = 0x6F69647541;
      }
      else {
        uint64_t v28 = 0x6569766F4DLL;
      }
      uint64_t v44 = 0x657079546D657469;
      unint64_t v45 = 0xE800000000000000;
      unint64_t v29 = 0xE500000000000000;
      String.append(_:)(*(Swift::String *)&v28);
      swift_bridgeObjectRelease();

      uint64_t v25 = v44;
      uint64_t v24 = v45;
    }
  }
  uint64_t v30 = *a1;
  if (!*(void *)(*a1 + 16)) {
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  unint64_t v31 = sub_100955F50(v25, v24);
  if ((v32 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_27:
    id v39 = [objc_allocWithZone((Class)NSNumber) initWithInteger:1];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v44 = *a1;
    *a1 = 0x8000000000000000;
    sub_100973904((uint64_t)v39, v25, v24, isUniquelyReferenced_nonNull_native);
    *a1 = v44;
    goto LABEL_28;
  }
  id v33 = *(id *)(*(void *)(v30 + 56) + 8 * v31);
  swift_bridgeObjectRelease();
  self;
  uint64_t v34 = swift_dynamicCastObjCClass();
  if (!v34)
  {

    return (char *)swift_bridgeObjectRelease();
  }
  uint64_t v35 = (void *)v34;
  id v36 = v33;
  uint64_t result = (char *)[v35 integerValue];
  if (!__OFADD__(result, 1))
  {
    id v37 = [objc_allocWithZone((Class)NSNumber) initWithInteger:result + 1];
    char v38 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v44 = *a1;
    *a1 = 0x8000000000000000;
    sub_100973904((uint64_t)v37, v25, v24, v38);
    *a1 = v44;

LABEL_28:
    swift_bridgeObjectRelease();
    return (char *)swift_bridgeObjectRelease();
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_100DD2A44()
{
  type metadata accessor for CRLFileReadWriteUserOptions();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_100DD2D48();
  qword_10171C740 = v0;
  return result;
}

uint64_t sub_100DD2A84()
{
  return sub_1006FF5A0();
}

void sub_100DD2A98()
{
}

uint64_t sub_100DD2AC4()
{
  return sub_1006FF5A0();
}

void sub_100DD2AD8()
{
}

void sub_100DD2B04()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  id v0 = [self standardUserDefaults];
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setBool:v2 forKey:v1];
}

uint64_t sub_100DD2C20()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform27CRLFileReadWriteUserOptions__preserveObjectUUIDs;
  uint64_t v2 = sub_1005057FC(&qword_10169FCE0);
  int v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8Freeform27CRLFileReadWriteUserOptions__preserveCRDTMetadata, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100DD2CF4()
{
  return type metadata accessor for CRLFileReadWriteUserOptions();
}

uint64_t type metadata accessor for CRLFileReadWriteUserOptions()
{
  uint64_t result = qword_10169C2A8;
  if (!qword_10169C2A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100DD2D48()
{
  uint64_t v1 = sub_1005057FC(&qword_10169FCE0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = v0 + OBJC_IVAR____TtC8Freeform27CRLFileReadWriteUserOptions__preserveObjectUUIDs;
  uint64_t v7 = self;
  id v8 = [v7 standardUserDefaults];
  NSString v9 = String._bridgeToObjectiveC()();
  unsigned __int8 v10 = [v8 BOOLForKey:v9];

  v17[15] = v10;
  Published.init(initialValue:)();
  char v11 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v2 + 32);
  v11(v6, v5, v1);
  uint64_t v12 = v0 + OBJC_IVAR____TtC8Freeform27CRLFileReadWriteUserOptions__preserveCRDTMetadata;
  id v13 = [v7 standardUserDefaults];
  NSString v14 = String._bridgeToObjectiveC()();
  unsigned __int8 v15 = [v13 BOOLForKey:v14];

  v17[14] = v15;
  Published.init(initialValue:)();
  v11(v12, v5, v1);
  return v0;
}

uint64_t sub_100DD2F4C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CRLFileReadWriteUserOptions();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t *sub_100DD2F9C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_1005057FC(&qword_101670F30);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 5, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = *(int *)(v7 + 48);
      uint64_t v12 = (uint64_t *)((char *)a1 + v11);
      id v13 = (uint64_t *)((char *)a2 + v11);
      uint64_t v14 = v13[1];
      *uint64_t v12 = *v13;
      v12[1] = v14;
      unsigned __int8 v15 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56);
      swift_bridgeObjectRetain();
      v15(a1, 0, 5, v7);
    }
  }
  return a1;
}

uint64_t sub_100DD3120(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101670F30);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 5, v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_100DD31E8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670F30);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 5, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    uint64_t v9 = *(int *)(v6 + 48);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    id v13 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
    v13(a1, 0, 5, v6);
  }
  return a1;
}

char *sub_100DD3330(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670F30);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 5, v6);
  int v10 = v8(a2, 5, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v17 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(a1, a2, v17);
      uint64_t v18 = *(int *)(v6 + 48);
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      *(void *)uint64_t v19 = *(void *)v20;
      *((void *)v19 + 1) = *((void *)v20 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_100522F00((uint64_t)a1, &qword_101670F30);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  uint64_t v12 = *(int *)(v6 + 48);
  id v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)id v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  unsigned __int8 v15 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
  swift_bridgeObjectRetain();
  v15(a1, 0, 5, v6);
  return a1;
}

char *sub_100DD3528(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670F30);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 5, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    *(_OWORD *)&a1[*(int *)(v6 + 48)] = *(_OWORD *)&a2[*(int *)(v6 + 48)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 5, v6);
  }
  return a1;
}

char *sub_100DD3664(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670F30);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 5, v6);
  int v10 = v8(a2, 5, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(a1, a2, v13);
      uint64_t v14 = *(int *)(v6 + 48);
      unsigned __int8 v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v18 = *(void *)v16;
      uint64_t v17 = *((void *)v16 + 1);
      *(void *)unsigned __int8 v15 = v18;
      *((void *)v15 + 1) = v17;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_100522F00((uint64_t)a1, &qword_101670F30);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  *(_OWORD *)&a1[*(int *)(v6 + 48)] = *(_OWORD *)&a2[*(int *)(v6 + 48)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 5, v6);
  return a1;
}

uint64_t sub_100DD3838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100DD384C);
}

uint64_t sub_100DD384C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101670F30);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 6) {
    return v5 - 5;
  }
  else {
    return 0;
  }
}

uint64_t sub_100DD38BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100DD38D0);
}

uint64_t sub_100DD38D0(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 5);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_1005057FC(&qword_101670F30);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_100DD3958(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101670F30);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 5, v2);
}

uint64_t sub_100DD39C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101670F30);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 5, v4);
}

uint64_t type metadata accessor for CRLBoardLibraryViewModel.Folder(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10169C418);
}

uint64_t sub_100DD3A58()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Library()
{
  return &type metadata for CRLBoardLibraryViewModel.Library;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel()
{
  return &type metadata for CRLBoardLibraryViewModel;
}

uint64_t *sub_100DD3B10(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v12 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      uint64_t v13 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      uint64_t v14 = (uint64_t *)((char *)a1 + v13);
      unsigned __int8 v15 = (uint64_t *)((char *)a2 + v13);
      uint64_t v16 = v15[1];
      void *v14 = *v15;
      v14[1] = v16;
      swift_bridgeObjectRetain();
      uint64_t v17 = *(int *)(sub_1005057FC(&qword_101677100) + 48);
      uint64_t v18 = (uint64_t *)((char *)a1 + v17);
      uint64_t v19 = (uint64_t *)((char *)a2 + v17);
      uint64_t v20 = v19[1];
      void *v18 = *v19;
      v18[1] = v20;
      swift_bridgeObjectRetain();
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = sub_1005057FC(&qword_101670F30);
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 5, v8))
      {
        uint64_t v10 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        uint64_t v21 = type metadata accessor for UUID();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        uint64_t v22 = *(int *)(v8 + 48);
        Swift::String v23 = (uint64_t *)((char *)a1 + v22);
        uint64_t v24 = (uint64_t *)((char *)a2 + v22);
        uint64_t v25 = v24[1];
        *Swift::String v23 = *v24;
        v23[1] = v25;
        uint64_t v26 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56);
        swift_bridgeObjectRetain();
        v26(a1, 0, 5, v8);
      }
      goto LABEL_10;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t sub_100DD3D84(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v4 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1005057FC(&qword_101677100);
  }
  else
  {
    if (result != 1) {
      return result;
    }
    uint64_t v3 = sub_1005057FC(&qword_101670F30);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(a1, 5, v3);
    if (result) {
      return result;
    }
    uint64_t v5 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  }

  return swift_bridgeObjectRelease();
}

char *sub_100DD3EC4(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v10 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    uint64_t v11 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v14 = *((void *)v13 + 1);
    *(void *)uint64_t v12 = *(void *)v13;
    *((void *)v12 + 1) = v14;
    swift_bridgeObjectRetain();
    uint64_t v15 = *(int *)(sub_1005057FC(&qword_101677100) + 48);
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    uint64_t v18 = *((void *)v17 + 1);
    *(void *)uint64_t v16 = *(void *)v17;
    *((void *)v16 + 1) = v18;
    swift_bridgeObjectRetain();
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = sub_1005057FC(&qword_101670F30);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 5, v7))
    {
      uint64_t v9 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v19 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
      uint64_t v20 = *(int *)(v7 + 48);
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      uint64_t v23 = *((void *)v22 + 1);
      *(void *)uint64_t v21 = *(void *)v22;
      *((void *)v21 + 1) = v23;
      uint64_t v24 = *(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56);
      swift_bridgeObjectRetain();
      v24(a1, 0, 5, v7);
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_100DD40F4(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100DDCBC8((uint64_t)a1, type metadata accessor for CRLBoardLibraryViewModel.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      *(void *)uint64_t v12 = *(void *)v13;
      *((void *)v12 + 1) = *((void *)v13 + 1);
      swift_bridgeObjectRetain();
      uint64_t v14 = *(int *)(sub_1005057FC(&qword_101677100) + 48);
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      *(void *)uint64_t v15 = *(void *)v16;
      *((void *)v15 + 1) = *((void *)v16 + 1);
      swift_bridgeObjectRetain();
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_1005057FC(&qword_101670F30);
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 5, v7))
      {
        uint64_t v9 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        uint64_t v17 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
        uint64_t v18 = *(int *)(v7 + 48);
        uint64_t v19 = &a1[v18];
        uint64_t v20 = &a2[v18];
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = *((void *)v20 + 1);
        uint64_t v21 = *(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56);
        swift_bridgeObjectRetain();
        v21(a1, 0, 5, v7);
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t type metadata accessor for CRLBoardLibraryViewModel.Item(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10169C498);
}

char *sub_100DD4380(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v10 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
    uint64_t v11 = type metadata accessor for CRLBoardIdentifierStorage(0);
    *(_OWORD *)&a1[*(int *)(v11 + 20)] = *(_OWORD *)&a2[*(int *)(v11 + 20)];
    uint64_t v12 = sub_1005057FC(&qword_101677100);
    *(_OWORD *)&a1[*(int *)(v12 + 48)] = *(_OWORD *)&a2[*(int *)(v12 + 48)];
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = sub_1005057FC(&qword_101670F30);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 5, v7))
    {
      uint64_t v9 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v13 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
      *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 5, v7);
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_100DD458C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100DDCBC8((uint64_t)a1, type metadata accessor for CRLBoardLibraryViewModel.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      uint64_t v11 = type metadata accessor for CRLBoardIdentifierStorage(0);
      *(_OWORD *)&a1[*(int *)(v11 + 20)] = *(_OWORD *)&a2[*(int *)(v11 + 20)];
      uint64_t v12 = sub_1005057FC(&qword_101677100);
      *(_OWORD *)&a1[*(int *)(v12 + 48)] = *(_OWORD *)&a2[*(int *)(v12 + 48)];
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_1005057FC(&qword_101670F30);
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 5, v7))
      {
        uint64_t v9 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        uint64_t v13 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
        *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 5, v7);
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100DD47BC()
{
  uint64_t v4 = &unk_1011B4FA0;
  uint64_t result = type metadata accessor for CRLBoardLibraryViewModel.Folder(319);
  if (v1 <= 0x3F)
  {
    uint64_t v5 = *(void *)(result - 8) + 64;
    uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v6 = &v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

id sub_100DD48A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100DDD17C(v1, (uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload) {
    return 0;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_100DDD1E4((uint64_t)v13, (uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    sub_100DDD17C((uint64_t)v9, (uint64_t)v6, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    uint64_t v15 = sub_1005057FC(&qword_101670F30);
    switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v6, 5, v15))
    {
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
        break;
      default:
        swift_bridgeObjectRelease();
        uint64_t v16 = type metadata accessor for UUID();
        (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v6, v16);
        break;
    }
    uint64_t v22 = self;
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v17 = [v22 systemImageNamed:v23];

    uint64_t v20 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
    uint64_t v21 = (uint64_t)v9;
  }
  else
  {
    sub_1005057FC(&qword_101677100);
    swift_bridgeObjectRelease();
    uint64_t v18 = self;
    NSString v19 = String._bridgeToObjectiveC()();
    id v17 = [v18 systemImageNamed:v19];

    if (!v17)
    {
      __break(1u);
      JUMPOUT(0x100DD4C30);
    }
    uint64_t v20 = type metadata accessor for CRLBoardIdentifier;
    uint64_t v21 = (uint64_t)v13;
  }
  sub_100DDCBC8(v21, v20);
  return v17;
}

uint64_t sub_100DD4C48()
{
  uint64_t v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100DDD17C(v0, (uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v5 = sub_1005057FC(&qword_101670F30);
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 5, v5))
  {
    case 1u:
    case 2u:
    case 3u:
    case 4u:
      id v8 = [self mainBundle];
      NSString v9 = String._bridgeToObjectiveC()();
      NSString v10 = String._bridgeToObjectiveC()();
      id v11 = [v8 localizedStringForKey:v9 value:v10 table:0];

      goto LABEL_5;
    case 5u:
      id v12 = [self mainBundle];
      NSString v13 = String._bridgeToObjectiveC()();
      NSString v14 = String._bridgeToObjectiveC()();
      id v11 = [v12 localizedStringForKey:v13 value:v14 table:0];

LABEL_5:
      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      break;
    default:
      uint64_t v6 = *(void *)&v4[*(int *)(v5 + 48)];
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
      break;
  }
  return v6;
}

uint64_t sub_100DD5064(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v4 = *(void *)(v48 - 8);
  __chkstk_darwin(v48, v5);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  id v11 = (char *)&v43 - v10;
  uint64_t v12 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v46 = (uint64_t)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v43 - v17;
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v43 - v21;
  __chkstk_darwin(v23, v24);
  uint64_t v47 = (uint64_t)&v43 - v25;
  sub_100DDD17C(a1, (uint64_t)&v43 - v25, type metadata accessor for CRLBoardIdentifier);
  uint64_t v26 = *(void *)(a2 + 16);
  if (v26)
  {
    uint64_t v27 = 0;
    uint64_t v28 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v29 = *(void *)(v4 + 72);
    uint64_t v44 = v11;
    unint64_t v45 = v7 + 8;
    while (1)
    {
      sub_100DDD17C(v28, (uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100DDD17C((uint64_t)v11, (uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() != 2) {
        break;
      }
      sub_1005057FC(&qword_101677100);
      swift_bridgeObjectRelease();
      sub_100DDD1E4((uint64_t)v7, (uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
      uint64_t v30 = (uint64_t)v22;
      uint64_t v31 = v47;
      char v32 = static UUID.== infix(_:_:)();
      sub_100DDD17C(v30, (uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
      uint64_t v33 = v31;
      uint64_t v34 = v46;
      sub_100DDD17C(v33, v46, type metadata accessor for CRLBoardIdentifier);
      if ((v32 & 1) == 0)
      {
        sub_100DDCBC8(v34, type metadata accessor for CRLBoardIdentifier);
        sub_100DDCBC8((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
        sub_100DDCBC8(v30, type metadata accessor for CRLBoardIdentifier);
        uint64_t v22 = (char *)v30;
        id v11 = v44;
        goto LABEL_4;
      }
      uint64_t v35 = v30;
      uint64_t v36 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      uint64_t v37 = *(void *)&v18[v36];
      uint64_t v38 = *(void *)&v18[v36 + 8];
      id v39 = (void *)(v34 + v36);
      if (v37 == *v39 && v38 == v39[1])
      {
        sub_100DDCBC8(v34, type metadata accessor for CRLBoardIdentifier);
        sub_100DDCBC8((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
        sub_100DDCBC8(v30, type metadata accessor for CRLBoardIdentifier);
        sub_100DDCBC8((uint64_t)v44, type metadata accessor for CRLBoardLibraryViewModel.Item);
        goto LABEL_17;
      }
      char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_100DDCBC8(v34, type metadata accessor for CRLBoardIdentifier);
      sub_100DDCBC8((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
      uint64_t v22 = (char *)v35;
      sub_100DDCBC8(v35, type metadata accessor for CRLBoardIdentifier);
      id v11 = v44;
      sub_100DDCBC8((uint64_t)v44, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (v41) {
        goto LABEL_17;
      }
LABEL_5:
      ++v27;
      v28 += v29;
      if (v26 == v27) {
        goto LABEL_15;
      }
    }
    sub_100DDCBC8((uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_4:
    sub_100DDCBC8((uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Item);
    goto LABEL_5;
  }
LABEL_15:
  uint64_t v27 = 0;
LABEL_17:
  sub_100DDCBC8(v47, type metadata accessor for CRLBoardIdentifier);
  return v27;
}

unint64_t sub_100DD54C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)0xE900000000000073;
  uint64_t v3 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100DDD17C(v1, (uint64_t)v6, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v7 = sub_1005057FC(&qword_101670F30);
  uint64_t v8 = 0x6472616F426C6C41;
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 5, v7))
  {
    case 1u:
      break;
    case 2u:
      uint64_t v2 = (void *)0xE700000000000000;
      uint64_t v8 = 0x73746E65636552;
      break;
    case 3u:
      uint64_t v8 = 0x657469726F766146;
      break;
    case 4u:
      uint64_t v2 = (void *)0xE600000000000000;
      uint64_t v8 = 0x646572616853;
      break;
    case 5u:
      uint64_t v2 = (void *)0xEF646574656C6544;
      uint64_t v8 = 0x796C746E65636552;
      break;
    default:
      swift_bridgeObjectRelease();
      uint64_t v9 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v6, v9);
      uint64_t v2 = (void *)0xE400000000000000;
      uint64_t v8 = 1919251285;
      break;
  }
  unint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  unint64_t v12 = 0xD000000000000012;
  unint64_t v13 = 0x800000010128B0F0;
  v10._countAndFlagsBits = v8;
  v10._object = v2;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100DD56F8()
{
  uint64_t v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100DDD17C(v0, (uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      id v6 = [self mainBundle];
      NSString v7 = String._bridgeToObjectiveC()();
      NSString v8 = String._bridgeToObjectiveC()();
      id v9 = [v6 localizedStringForKey:v7 value:v8 table:0];

      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v11 = type metadata accessor for CRLBoardLibraryViewModel.Item;
    }
    else
    {
      sub_1005057FC(&qword_101677100);
      swift_bridgeObjectRelease();
      id v16 = [self mainBundle];
      NSString v17 = String._bridgeToObjectiveC()();
      NSString v18 = String._bridgeToObjectiveC()();
      id v19 = [v16 localizedStringForKey:v17 value:v18 table:0];

      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v11 = type metadata accessor for CRLBoardIdentifier;
    }
    sub_100DDCBC8((uint64_t)v4, v11);
  }
  else
  {
    id v12 = [self mainBundle];
    NSString v13 = String._bridgeToObjectiveC()();
    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = [v12 localizedStringForKey:v13 value:v14 table:0];

    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return v10;
}

uint64_t sub_100DD59E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  NSString v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  id v12 = (char *)&v41 - v11;
  uint64_t v14 = __chkstk_darwin(v10, v13);
  id v16 = (char *)&v41 - v15;
  uint64_t v18 = __chkstk_darwin(v14, v17);
  uint64_t v20 = (char *)&v41 - v19;
  __chkstk_darwin(v18, v21);
  uint64_t v23 = (char *)&v41 - v22;
  uint64_t v24 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v24 - 8, v25);
  uint64_t v27 = (char *)&v41 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100DDD17C(v2, (uint64_t)v27, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v28 = sub_1005057FC(&qword_101670F30);
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v27, 5, v28))
  {
    case 1u:
      UUID.init(uuidString:)();
      uint64_t v31 = type metadata accessor for UUID();
      uint64_t v32 = *(void *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v23, 1, v31) == 1)
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        JUMPOUT(0x100DD5F08);
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v32 + 32))(a1, v23, v31);
      break;
    case 2u:
      UUID.init(uuidString:)();
      uint64_t v33 = type metadata accessor for UUID();
      uint64_t v34 = *(void *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v20, 1, v33) == 1) {
        goto LABEL_16;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 32))(a1, v20, v33);
      break;
    case 3u:
      UUID.init(uuidString:)();
      uint64_t v35 = type metadata accessor for UUID();
      uint64_t v36 = *(void *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v16, 1, v35) == 1) {
        goto LABEL_17;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v36 + 32))(a1, v16, v35);
      break;
    case 4u:
      UUID.init(uuidString:)();
      uint64_t v37 = type metadata accessor for UUID();
      uint64_t v38 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v12, 1, v37) == 1) {
        goto LABEL_18;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v38 + 32))(a1, v12, v37);
      break;
    case 5u:
      UUID.init(uuidString:)();
      uint64_t v39 = type metadata accessor for UUID();
      uint64_t v40 = *(void *)(v39 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v8, 1, v39) == 1) {
        goto LABEL_19;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v40 + 32))(a1, v8, v39);
      break;
    default:
      swift_bridgeObjectRelease();
      uint64_t v29 = type metadata accessor for UUID();
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v29 - 8) + 32))(a1, v27, v29);
  }
  return result;
}

uint64_t sub_100DD5F20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v78 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v73 = (uint64_t)&v73 - v9;
  uint64_t v10 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  long long v74 = (char *)&v73 - v16;
  uint64_t v17 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v20 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)&v73 - v23;
  __chkstk_darwin(v25, v26);
  uint64_t v28 = (char *)&v73 - v27;
  __chkstk_darwin(v29, v30);
  uint64_t v32 = (char *)&v73 - v31;
  uint64_t v33 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 56);
  uint64_t v77 = a2;
  uint64_t v79 = v33;
  uint64_t v75 = v34 + 56;
  v76(a2, 1, 1);
  id v35 = [a1 activityType];
  uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v38 = v37;

  int v39 = sub_1009C383C(v36, v38);
  if (v39 != 5)
  {
    if (v39 == 7)
    {
      id v40 = [a1 userInfo];
      if (v40)
      {
        uint64_t v41 = v40;
        uint64_t v42 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        v80[0] = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v80[1] = v43;
        AnyHashable.init<A>(_:)();
        if (*(void *)(v42 + 16) && (unint64_t v44 = sub_10095647C((uint64_t)&v81), (v45 & 1) != 0))
        {
          sub_100522D7C(*(void *)(v42 + 56) + 32 * v44, (uint64_t)&v83);
        }
        else
        {
          long long v83 = 0u;
          long long v84 = 0u;
        }
        sub_10050BFE0((uint64_t)&v81);
        swift_bridgeObjectRelease();
        if (*((void *)&v84 + 1))
        {
          uint64_t result = swift_dynamicCast();
          if (result)
          {
            uint64_t v59 = v74;
            sub_100753CE4(v81, v82, v74);
            sub_100DDD1E4((uint64_t)v59, (uint64_t)v28, type metadata accessor for CRLBoardIdentifierStorage);
            sub_100DDD1E4((uint64_t)v28, (uint64_t)v32, type metadata accessor for CRLBoardIdentifier);
            uint64_t v62 = sub_1005057FC(&qword_101677100);
            uint64_t v63 = v73;
            id v64 = (void *)(v73 + *(int *)(v62 + 48));
            sub_100DDD1E4((uint64_t)v32, v73, type metadata accessor for CRLBoardIdentifier);
            uint64_t v65 = v77;
            sub_100522F00(v77, (uint64_t *)&unk_101676310);
            *id v64 = 0;
            v64[1] = 0xE000000000000000;
            uint64_t v66 = v79;
            swift_storeEnumTagMultiPayload();
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v76)(v63, 0, 1, v66);
            uint64_t v67 = v63;
            return sub_1009C3A0C(v67, v65);
          }
          return result;
        }
        return sub_100522F00((uint64_t)&v83, &qword_101672BF0);
      }
    }
    else
    {
      id v51 = [a1 userInfo];
      if (v51)
      {
        char v52 = v51;
        uint64_t v53 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        strcpy((char *)v80, "viewModelItem");
        HIWORD(v80[1]) = -4864;
        AnyHashable.init<A>(_:)();
        if (*(void *)(v53 + 16))
        {
          unint64_t v54 = sub_10095647C((uint64_t)&v81);
          uint64_t v56 = (uint64_t)v78;
          uint64_t v55 = v79;
          if (v57)
          {
            sub_100522D7C(*(void *)(v53 + 56) + 32 * v54, (uint64_t)&v83);
          }
          else
          {
            long long v83 = 0u;
            long long v84 = 0u;
          }
        }
        else
        {
          long long v83 = 0u;
          long long v84 = 0u;
          uint64_t v56 = (uint64_t)v78;
          uint64_t v55 = v79;
        }
        sub_10050BFE0((uint64_t)&v81);
        swift_bridgeObjectRelease();
        if (*((void *)&v84 + 1))
        {
          uint64_t result = swift_dynamicCast();
          if (result)
          {
            uint64_t v60 = v81;
            unint64_t v61 = v82;
            type metadata accessor for JSONDecoder();
            swift_allocObject();
            JSONDecoder.init()();
            sub_100DDC6FC(&qword_101686D58, (void (*)(uint64_t))type metadata accessor for CRLBoardLibraryViewModel.Item);
            dispatch thunk of JSONDecoder.decode<A>(_:from:)();
            uint64_t v72 = v77;
            sub_100522F00(v77, (uint64_t *)&unk_101676310);
            swift_release();
            sub_100510084(v60, v61);
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v76)(v56, 0, 1, v55);
            return sub_1009C3A0C(v56, v72);
          }
          return result;
        }
        return sub_100522F00((uint64_t)&v83, &qword_101672BF0);
      }
    }
LABEL_15:
    long long v83 = 0u;
    long long v84 = 0u;
    return sub_100522F00((uint64_t)&v83, &qword_101672BF0);
  }
  id v46 = [a1 userInfo];
  if (!v46) {
    goto LABEL_15;
  }
  uint64_t v47 = v46;
  uint64_t v48 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  strcpy((char *)v80, "boardId");
  v80[1] = 0xE700000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v48 + 16) && (unint64_t v49 = sub_10095647C((uint64_t)&v81), (v50 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v48 + 56) + 32 * v49, (uint64_t)&v83);
  }
  else
  {
    long long v83 = 0u;
    long long v84 = 0u;
  }
  sub_10050BFE0((uint64_t)&v81);
  swift_bridgeObjectRelease();
  if (!*((void *)&v84 + 1)) {
    return sub_100522F00((uint64_t)&v83, &qword_101672BF0);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    sub_100753CE4(v81, v82, v13);
    sub_100DDD1E4((uint64_t)v13, (uint64_t)v20, type metadata accessor for CRLBoardIdentifierStorage);
    sub_100DDD1E4((uint64_t)v20, (uint64_t)v24, type metadata accessor for CRLBoardIdentifier);
    uint64_t v68 = sub_1005057FC(&qword_101677100);
    uint64_t v69 = v73;
    uint64_t v70 = (void *)(v73 + *(int *)(v68 + 48));
    sub_100DDD1E4((uint64_t)v24, v73, type metadata accessor for CRLBoardIdentifier);
    uint64_t v65 = v77;
    sub_100522F00(v77, (uint64_t *)&unk_101676310);
    *uint64_t v70 = 0;
    v70[1] = 0xE000000000000000;
    uint64_t v71 = v79;
    swift_storeEnumTagMultiPayload();
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v76)(v69, 0, 1, v71);
    uint64_t v67 = v69;
    return sub_1009C3A0C(v67, v65);
  }
  return result;
}

uint64_t sub_100DD6A3C()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = &v20[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100DDD17C(v0, (uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1005057FC(&qword_101677100);
    swift_bridgeObjectRelease();
    sub_100DDD1E4((uint64_t)v13, (uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
    sub_100ED7F04((uint64_t)v17, (uint64_t)v4);
    sub_100DDCBC8((uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    sub_100DDD1E4((uint64_t)v4, (uint64_t)v9, type metadata accessor for CRLBoardViewModelMetadata);
    uint64_t v18 = *v9;
    sub_100DDCBC8((uint64_t)v9, type metadata accessor for CRLBoardViewModelMetadata);
  }
  else
  {
    sub_100DDCBC8((uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
    return 0;
  }
  return v18;
}

uint64_t sub_100DD6D5C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v39[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v39[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  sub_100DDC6FC(&qword_101686D78, (void (*)(uint64_t))type metadata accessor for CRLBoardLibraryViewModel.Item);
  uint64_t v13 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v15 = v14;
  uint64_t result = swift_release();
  if (!v2)
  {
    uint64_t v38 = v12;
    sub_1005057FC(&qword_101677430);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    strcpy((char *)v39, "viewModelItem");
    HIWORD(v39[1]) = -4864;
    AnyHashable.init<A>(_:)();
    *(void *)(inited + 96) = &type metadata for Data;
    *(void *)(inited + 72) = v13;
    *(void *)(inited + 80) = v15;
    sub_100510D4C(v13, v15);
    sub_100A393A8(inited);
    unint64_t v18 = v15;
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v40 = a1;
    [a1 addUserInfoEntriesFromDictionary:isa];

    sub_100DDD17C(v3, (uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      unint64_t v20 = v18;
      sub_1005057FC(&qword_101677100);
      swift_bridgeObjectRelease();
      uint64_t v21 = (uint64_t)v38;
      sub_100DDD1E4((uint64_t)v8, (uint64_t)v38, type metadata accessor for CRLBoardIdentifier);
      if (qword_10166F2E0 != -1) {
        swift_once();
      }
      uint64_t v22 = type metadata accessor for UTType();
      sub_100556B74(v22, (uint64_t)qword_10171ABC8);
      id v23 = objc_allocWithZone((Class)CSSearchableItemAttributeSet);
      Class v24 = UTType._bridgeToObjectiveC()().super.isa;
      id v25 = [v23 initWithContentType:v24];

      v39[0] = UUID.uuidString.getter();
      v39[1] = v26;
      swift_bridgeObjectRetain();
      v27._countAndFlagsBits = 58;
      v27._object = (void *)0xE100000000000000;
      String.append(_:)(v27);
      swift_bridgeObjectRelease();
      uint64_t v29 = v39[0];
      uint64_t v28 = v39[1];
      uint64_t v30 = (uint64_t *)(v21 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
      uint64_t v31 = *v30;
      uint64_t v32 = (void *)v30[1];
      v39[0] = v29;
      v39[1] = v28;
      swift_bridgeObjectRetain();
      v33._countAndFlagsBits = v31;
      v33._object = v32;
      String.append(_:)(v33);
      swift_bridgeObjectRelease();
      NSString v34 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v25 setRelatedUniqueIdentifier:v34];

      id v35 = v40;
      [v40 setContentAttributeSet:v25];
      [v35 setEligibleForSearch:1];
      [v35 setEligibleForHandoff:1];
      [v35 setEligibleForPublicIndexing:0];

      sub_100510084(v13, v20);
      uint64_t v36 = type metadata accessor for CRLBoardIdentifier;
      uint64_t v37 = v21;
    }
    else
    {
      sub_100510084(v13, v18);
      uint64_t v36 = type metadata accessor for CRLBoardLibraryViewModel.Item;
      uint64_t v37 = (uint64_t)v8;
    }
    return sub_100DDCBC8(v37, v36);
  }
  return result;
}

uint64_t sub_100DD71D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v12 = __chkstk_darwin(v10, v11);
  unint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v12, v15);
  unint64_t v18 = (char *)&v51 - v17;
  __chkstk_darwin(v16, v19);
  uint64_t v21 = (char *)&v51 - v20;
  sub_100DDD17C(v1, (uint64_t)&v51 - v20, type metadata accessor for CRLBoardLibraryViewModel.Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v51 = 0x203A7265646C6F46;
      unint64_t v52 = 0xE800000000000000;
      sub_100DDD17C(v1, (uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
      int v23 = swift_getEnumCaseMultiPayload();
      if (v23)
      {
        if (v23 == 1)
        {
          sub_100DDD1E4((uint64_t)v14, (uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          uint64_t v24 = sub_100DD4C48();
          uint64_t v26 = v25;
          Swift::String v27 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
          uint64_t v28 = (uint64_t)v9;
        }
        else
        {
          char v45 = (uint64_t *)&v14[*(int *)(sub_1005057FC(&qword_101677100) + 48)];
          uint64_t v24 = *v45;
          uint64_t v26 = (void *)v45[1];
          Swift::String v27 = type metadata accessor for CRLBoardIdentifier;
          uint64_t v28 = (uint64_t)v14;
        }
        sub_100DDCBC8(v28, v27);
      }
      else
      {
        uint64_t v24 = sub_100DD8CAC();
        uint64_t v26 = v44;
      }
      v46._countAndFlagsBits = v24;
      v46._object = v26;
      String.append(_:)(v46);
      swift_bridgeObjectRelease();
      uint64_t v41 = v51;
      uint64_t v42 = type metadata accessor for CRLBoardLibraryViewModel.Item;
      uint64_t v43 = (uint64_t)v21;
    }
    else
    {
      id v35 = (uint64_t *)&v21[*(int *)(sub_1005057FC(&qword_101677100) + 48)];
      uint64_t v36 = *v35;
      uint64_t v37 = (void *)v35[1];
      sub_100DDD1E4((uint64_t)v21, (uint64_t)v5, type metadata accessor for CRLBoardIdentifier);
      uint64_t v51 = 0;
      unint64_t v52 = 0xE000000000000000;
      _StringGuts.grow(_:)(25);
      swift_bridgeObjectRelease();
      uint64_t v51 = 0x203A6472616F42;
      unint64_t v52 = 0xE700000000000000;
      v38._countAndFlagsBits = v36;
      v38._object = v37;
      String.append(_:)(v38);
      swift_bridgeObjectRelease();
      v39._countAndFlagsBits = 0x69746E656469202CLL;
      v39._object = (void *)0xEE00203A72656966;
      String.append(_:)(v39);
      v40._countAndFlagsBits = sub_100753038();
      String.append(_:)(v40);
      swift_bridgeObjectRelease();
      uint64_t v41 = v51;
      uint64_t v42 = type metadata accessor for CRLBoardIdentifier;
      uint64_t v43 = (uint64_t)v5;
    }
    sub_100DDCBC8(v43, v42);
  }
  else
  {
    uint64_t v51 = 0x3A7972617262694CLL;
    unint64_t v52 = 0xE900000000000020;
    sub_100DDD17C(v1, (uint64_t)v18, type metadata accessor for CRLBoardLibraryViewModel.Item);
    int v29 = swift_getEnumCaseMultiPayload();
    if (v29)
    {
      if (v29 == 1)
      {
        sub_100DDD1E4((uint64_t)v18, (uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        uint64_t v30 = sub_100DD4C48();
        uint64_t v32 = v31;
        Swift::String v33 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
        uint64_t v34 = (uint64_t)v9;
      }
      else
      {
        uint64_t v48 = (uint64_t *)&v18[*(int *)(sub_1005057FC(&qword_101677100) + 48)];
        uint64_t v30 = *v48;
        uint64_t v32 = (void *)v48[1];
        Swift::String v33 = type metadata accessor for CRLBoardIdentifier;
        uint64_t v34 = (uint64_t)v18;
      }
      sub_100DDCBC8(v34, v33);
    }
    else
    {
      uint64_t v30 = sub_100DD8CAC();
      uint64_t v32 = v47;
    }
    v49._countAndFlagsBits = v30;
    v49._object = v32;
    String.append(_:)(v49);
    swift_bridgeObjectRelease();
    return v51;
  }
  return v41;
}

uint64_t sub_100DD7664()
{
  uint64_t v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100DDD17C(v0, (uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1005057FC(&qword_101677100);
    swift_bridgeObjectRelease();
    sub_100DDCBC8((uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v5 localizedStringForKey:v6 value:v7 table:0];

    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    sub_100DDCBC8((uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"errorOpeningAlertTitle", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryViewModel.swift", 100, 2, 254, (uint64_t)"Unexpected case.", 16, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"errorOpeningAlertTitle", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryViewModel.swift", 100, 2, 254);
    return 0;
  }
  return v9;
}

uint64_t sub_100DD78B8()
{
  uint64_t v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100DDD17C(v0, (uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1005057FC(&qword_101677100);
    swift_bridgeObjectRelease();
    sub_100DDCBC8((uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v5 localizedStringForKey:v6 value:v7 table:0];

    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    sub_100DDCBC8((uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"errorOpeningAlertMessage", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryViewModel.swift", 100, 2, 264, (uint64_t)"Unexpected case.", 16, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"errorOpeningAlertMessage", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryViewModel.swift", 100, 2, 264);
    return 0;
  }
  return v9;
}

uint64_t sub_100DD7B0C()
{
  uint64_t v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100DDD17C(v0, (uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1005057FC(&qword_101677100);
    swift_bridgeObjectRelease();
    sub_100DDCBC8((uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v5 localizedStringForKey:v6 value:v7 table:0];

    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    sub_100DDCBC8((uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"lastOpenCrashedAlertTitle", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryViewModel.swift", 100, 2, 274, (uint64_t)"Unexpected case.", 16, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"lastOpenCrashedAlertTitle", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryViewModel.swift", 100, 2, 274);
    return 0;
  }
  return v9;
}

uint64_t sub_100DD7D70()
{
  uint64_t v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100DDD17C(v0, (uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1005057FC(&qword_101677100);
    swift_bridgeObjectRelease();
    sub_100DDCBC8((uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v5 localizedStringForKey:v6 value:v7 table:0];

    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    sub_100DDCBC8((uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"lastOpenCrashedAlertMessage", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryViewModel.swift", 100, 2, 284, (uint64_t)"Unexpected case.", 16, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"lastOpenCrashedAlertMessage", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryViewModel.swift", 100, 2, 284);
    return 0;
  }
  return v9;
}

_UNKNOWN **sub_100DD7FC4()
{
  uint64_t v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100DDD17C(v0, (uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v5 = sub_1005057FC(&qword_101670F30);
  int v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 5, v5);
  uint64_t result = &off_101504D88;
  switch(v6)
  {
    case 1:
      return result;
    case 2:
      uint64_t result = &off_101504DB0;
      break;
    case 3:
      uint64_t result = &off_101504DD8;
      break;
    case 4:
      uint64_t result = &off_101504E00;
      break;
    case 5:
      uint64_t result = &off_101504E28;
      break;
    default:
      swift_bridgeObjectRelease();
      uint64_t v8 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v4, v8);
      uint64_t result = &off_101504E50;
      break;
  }
  return result;
}

uint64_t sub_100DD8154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v47 = a3;
  uint64_t v51 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v5 = *(void *)(v51 - 8);
  __chkstk_darwin(v51, v6);
  uint64_t v8 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)v45 - v11;
  uint64_t v13 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v49 = (uint64_t)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)v45 - v18;
  __chkstk_darwin(v20, v21);
  int v23 = (char *)v45 - v22;
  __chkstk_darwin(v24, v25);
  uint64_t v50 = (uint64_t)v45 - v26;
  sub_100DDD17C(a1, (uint64_t)v45 - v26, type metadata accessor for CRLBoardIdentifier);
  uint64_t v27 = *(void *)(a2 + 16);
  v45[1] = a2;
  uint64_t v46 = v5;
  if (!v27)
  {
    swift_bridgeObjectRetain();
LABEL_16:
    sub_100DDCBC8(v50, type metadata accessor for CRLBoardIdentifier);
    swift_bridgeObjectRelease();
    uint64_t v42 = 1;
    uint64_t v43 = v47;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v43, v42, 1, v51);
  }
  uint64_t v28 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v48 = v8 + 8;
  uint64_t v29 = *(void *)(v5 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_100DDD17C(v28, (uint64_t)v12, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100DDD17C((uint64_t)v12, (uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      uint64_t v30 = type metadata accessor for CRLBoardLibraryViewModel.Item;
      uint64_t v31 = (uint64_t)v8;
LABEL_4:
      sub_100DDCBC8(v31, v30);
      goto LABEL_5;
    }
    sub_1005057FC(&qword_101677100);
    swift_bridgeObjectRelease();
    sub_100DDD1E4((uint64_t)v8, (uint64_t)v23, type metadata accessor for CRLBoardIdentifier);
    uint64_t v32 = v50;
    char v33 = static UUID.== infix(_:_:)();
    sub_100DDD17C((uint64_t)v23, (uint64_t)v19, type metadata accessor for CRLBoardIdentifier);
    uint64_t v34 = v32;
    uint64_t v35 = v49;
    sub_100DDD17C(v34, v49, type metadata accessor for CRLBoardIdentifier);
    if ((v33 & 1) == 0)
    {
      sub_100DDCBC8(v35, type metadata accessor for CRLBoardIdentifier);
      sub_100DDCBC8((uint64_t)v19, type metadata accessor for CRLBoardIdentifier);
      uint64_t v31 = (uint64_t)v23;
      uint64_t v30 = type metadata accessor for CRLBoardIdentifier;
      goto LABEL_4;
    }
    uint64_t v36 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v37 = *(void *)&v19[v36];
    uint64_t v38 = *(void *)&v19[v36 + 8];
    Swift::String v39 = (void *)(v35 + v36);
    if (v37 == *v39 && v38 == v39[1]) {
      break;
    }
    char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_100DDCBC8(v35, type metadata accessor for CRLBoardIdentifier);
    sub_100DDCBC8((uint64_t)v19, type metadata accessor for CRLBoardIdentifier);
    sub_100DDCBC8((uint64_t)v23, type metadata accessor for CRLBoardIdentifier);
    if (v41) {
      goto LABEL_18;
    }
LABEL_5:
    sub_100DDCBC8((uint64_t)v12, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v28 += v29;
    if (!--v27) {
      goto LABEL_16;
    }
  }
  sub_100DDCBC8(v35, type metadata accessor for CRLBoardIdentifier);
  sub_100DDCBC8((uint64_t)v19, type metadata accessor for CRLBoardIdentifier);
  sub_100DDCBC8((uint64_t)v23, type metadata accessor for CRLBoardIdentifier);
LABEL_18:
  sub_100DDCBC8(v50, type metadata accessor for CRLBoardIdentifier);
  swift_bridgeObjectRelease();
  uint64_t v43 = v47;
  sub_100DDD1E4((uint64_t)v12, v47, type metadata accessor for CRLBoardLibraryViewModel.Item);
  uint64_t v42 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v43, v42, 1, v51);
}

double *sub_100DD85D8(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v6 = *(void *)(v42 - 8);
  uint64_t v8 = __chkstk_darwin(v42, v7);
  uint64_t v41 = (uint64_t)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v38 = (uint64_t)v35 - v12;
  __chkstk_darwin(v11, v13);
  uint64_t v37 = (uint64_t)v35 - v14;
  uint64_t v40 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v16 = __chkstk_darwin(v40, v15);
  uint64_t v18 = (char *)v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v19);
  uint64_t v22 = (char *)v35 - v21;
  uint64_t v23 = *(void *)(a1 + 16);
  if (!v23) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v24 = a1 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  uint64_t v39 = *(void *)(v20 + 72);
  v35[2] = v18 + 8;
  uint64_t v36 = v6;
  uint64_t v25 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v26 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v35[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v27 = _swiftEmptyArrayStorage;
  do
  {
    sub_100DDD17C(v24, (uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100DDD17C((uint64_t)v22, (uint64_t)v18, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_1005057FC(&qword_101677100);
      swift_bridgeObjectRelease();
      uint64_t v28 = v38;
      sub_100DDD1E4((uint64_t)v18, v38, type metadata accessor for CRLBoardIdentifier);
      sub_100DDD1E4(v28, (uint64_t)v5, type metadata accessor for CRLBoardIdentifier);
      uint64_t v29 = 0;
    }
    else
    {
      sub_100DDCBC8((uint64_t)v18, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v29 = 1;
    }
    uint64_t v30 = v42;
    (*v25)(v5, v29, 1, v42);
    sub_100DDCBC8((uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if ((*v26)(v5, 1, v30) == 1)
    {
      sub_100522F00((uint64_t)v5, &qword_101672C30);
    }
    else
    {
      uint64_t v31 = v37;
      sub_100DDD1E4((uint64_t)v5, v37, type metadata accessor for CRLBoardIdentifier);
      sub_100DDD1E4(v31, v41, type metadata accessor for CRLBoardIdentifier);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v27 = (double *)sub_100F632EC(0, *((void *)v27 + 2) + 1, 1, (unint64_t)v27);
      }
      unint64_t v33 = *((void *)v27 + 2);
      unint64_t v32 = *((void *)v27 + 3);
      if (v33 >= v32 >> 1) {
        uint64_t v27 = (double *)sub_100F632EC(v32 > 1, v33 + 1, 1, (unint64_t)v27);
      }
      *((void *)v27 + 2) = v33 + 1;
      sub_100DDD1E4(v41, (uint64_t)v27+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v33, type metadata accessor for CRLBoardIdentifier);
    }
    v24 += v39;
    --v23;
  }
  while (v23);
  swift_bridgeObjectRelease();
  return v27;
}

id sub_100DD8A3C()
{
  uint64_t v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100DDD17C(v0, (uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v5 = sub_1005057FC(&qword_101670F30);
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 5, v5))
  {
    case 1u:
      id v10 = [self systemCyanColor];
      goto LABEL_9;
    case 2u:
      id v10 = [self systemOrangeColor];
      goto LABEL_9;
    case 3u:
      id v10 = [self systemRedColor];
      goto LABEL_9;
    case 4u:
      id v10 = [self systemBlueColor];
      goto LABEL_9;
    case 5u:
      id v10 = [self systemGrayColor];
LABEL_9:
      id result = v10;
      break;
    default:
      swift_bridgeObjectRelease();
      NSString v6 = String._bridgeToObjectiveC()();
      id v7 = [self colorNamed:v6];

      if (!v7)
      {
        __break(1u);
        JUMPOUT(0x100DD8C94);
      }
      uint64_t v8 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v4, v8);
      id result = v7;
      break;
  }
  return result;
}

uint64_t sub_100DD8CAC()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

uint64_t sub_100DD8E34(void *a1, int a2)
{
  int v28 = a2;
  uint64_t v3 = sub_1005057FC(&qword_10169C5E0);
  uint64_t v26 = *(void *)(v3 - 8);
  uint64_t v27 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v25 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_10169C5E8);
  uint64_t v23 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_10169C5F0);
  uint64_t v22 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_10169C5F8);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100DDDA08();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if ((_BYTE)v28)
  {
    if (v28 == 1)
    {
      char v30 = 1;
      sub_100DDDAB0();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
    }
    else
    {
      char v31 = 2;
      sub_100DDDA5C();
      uint64_t v19 = v25;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v19, v27);
    }
  }
  else
  {
    char v29 = 0;
    sub_100DDDB04();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v10);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

uint64_t sub_100DD91A0(uint64_t a1)
{
  unint64_t v2 = sub_100DDDA08();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100DD91DC(uint64_t a1)
{
  unint64_t v2 = sub_100DDDA08();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100DD9218(uint64_t a1)
{
  unint64_t v2 = sub_100DDDA5C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100DD9254(uint64_t a1)
{
  unint64_t v2 = sub_100DDDA5C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100DD9290(uint64_t a1)
{
  unint64_t v2 = sub_100DDDAB0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100DD92CC(uint64_t a1)
{
  unint64_t v2 = sub_100DDDAB0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100DD9308(uint64_t a1)
{
  unint64_t v2 = sub_100DDDB04();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100DD9344(uint64_t a1)
{
  unint64_t v2 = sub_100DDDB04();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100DD9380(void *a1@<X8>)
{
  *a1 = &off_101503348;
}

void *sub_100DD9390@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = sub_100DDD498(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_100DD93BC(void *a1)
{
  return sub_100DD8E34(a1, *v1);
}

uint64_t sub_100DD93D8()
{
  return sub_100DD8CAC();
}

void sub_100DD93E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (unsigned __int8 *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100DDD17C(v1, (uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_100DDD1E4((uint64_t)v13, (uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      sub_100DDAA58();
      uint64_t v15 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
      uint64_t v16 = (uint64_t)v9;
    }
    else
    {
      sub_1005057FC(&qword_101677100);
      swift_bridgeObjectRelease();
      sub_100DDD1E4((uint64_t)v13, (uint64_t)v5, type metadata accessor for CRLBoardIdentifier);
      type metadata accessor for UUID();
      sub_100DDC6FC((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
      dispatch thunk of Hashable.hash(into:)();
      type metadata accessor for CRLBoardIdentifierStorage(0);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      uint64_t v15 = type metadata accessor for CRLBoardIdentifier;
      uint64_t v16 = (uint64_t)v5;
    }
    sub_100DDCBC8(v16, v15);
  }
  else
  {
    Hasher._combine(_:)(*v13);
  }
}

uint64_t sub_100DD9658(void *a1)
{
  uint64_t v51 = sub_1005057FC(&qword_10169C648);
  uint64_t v40 = *(void *)(v51 - 8);
  __chkstk_darwin(v51, v2);
  uint64_t v50 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v48, v4);
  uint64_t v49 = (uint64_t)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_10169C650);
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v47 = v6;
  __chkstk_darwin(v6, v7);
  char v45 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v43, v9);
  uint64_t v44 = (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_10169C658);
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t v42 = v11;
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1005057FC(&qword_10169C660);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v21);
  uint64_t v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100DDDB58();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_100DDD17C(v53, (uint64_t)v18, type metadata accessor for CRLBoardLibraryViewModel.Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    uint64_t v25 = v19;
    uint64_t v26 = v52;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v27 = v44;
      sub_100DDD1E4((uint64_t)v18, v44, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      char v56 = 1;
      sub_100DDDC00();
      int v28 = v45;
      char v29 = v23;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      sub_100DDC6FC(&qword_1016772F8, (void (*)(uint64_t))type metadata accessor for CRLBoardLibraryViewModel.Folder);
      uint64_t v30 = v47;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v28, v30);
      sub_100DDCBC8(v27, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v29, v25);
    }
    else
    {
      uint64_t v34 = (uint64_t *)&v18[*(int *)(sub_1005057FC(&qword_101677100) + 48)];
      uint64_t v36 = *v34;
      uint64_t v35 = v34[1];
      uint64_t v47 = v36;
      uint64_t v53 = v35;
      uint64_t v37 = v49;
      sub_100DDD1E4((uint64_t)v18, v49, type metadata accessor for CRLBoardIdentifier);
      char v59 = 2;
      sub_100DDDBAC();
      uint64_t v38 = v50;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      char v58 = 0;
      sub_100DDC6FC((unint64_t *)&unk_1016772E0, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifier);
      uint64_t v39 = v51;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      if (!v26)
      {
        char v57 = 1;
        KeyedEncodingContainer.encode(_:forKey:)();
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v39);
      sub_100DDCBC8(v37, type metadata accessor for CRLBoardIdentifier);
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v23, v25);
    }
  }
  else
  {
    char v32 = *v18;
    char v55 = 0;
    sub_100DDDC54();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    char v54 = v32;
    sub_100DDDCFC();
    uint64_t v33 = v42;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v33);
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v23, v19);
  }
}

uint64_t sub_100DD9CF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v79 = a2;
  uint64_t v70 = sub_1005057FC(&qword_10169C600);
  uint64_t v73 = *(void *)(v70 - 8);
  __chkstk_darwin(v70, v3);
  uint64_t v78 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_10169C608);
  uint64_t v71 = *(void *)(v5 - 8);
  uint64_t v72 = (char *)v5;
  __chkstk_darwin(v5, v6);
  long long v74 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10169C610);
  uint64_t v68 = *(void *)(v8 - 8);
  uint64_t v69 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v76 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1005057FC(&qword_10169C618);
  uint64_t v75 = *(void *)(v77 - 8);
  __chkstk_darwin(v77, v11);
  uint64_t v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v64 - v20;
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v64 - v24;
  __chkstk_darwin(v26, v27);
  char v29 = (char *)&v64 - v28;
  uint64_t v30 = a1[3];
  uint64_t v80 = a1;
  sub_10050F848(a1, v30);
  sub_100DDDB58();
  char v31 = v81;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v31) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v80);
  }
  uint64_t v65 = v25;
  uint64_t v66 = v29;
  uint64_t v67 = v21;
  uint64_t v33 = v76;
  uint64_t v32 = v77;
  uint64_t v81 = v17;
  uint64_t v35 = v78;
  uint64_t v34 = v79;
  uint64_t v36 = KeyedDecodingContainer.allKeys.getter();
  if (*(void *)(v36 + 16) != 1)
  {
    uint64_t v44 = type metadata accessor for DecodingError();
    swift_allocError();
    char v45 = v13;
    uint64_t v47 = v46;
    sub_1005057FC(&qword_1016771E0);
    *uint64_t v47 = v14;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v44 - 8) + 104))(v47, enum case for DecodingError.typeMismatch(_:), v44);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v45, v32);
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v80);
  }
  uint64_t v64 = v36;
  uint64_t v37 = (char *)v14;
  if (*(unsigned char *)(v36 + 32))
  {
    if (*(unsigned char *)(v36 + 32) == 1)
    {
      char v84 = 1;
      sub_100DDDC00();
      uint64_t v38 = v74;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
      sub_100DDC6FC(&qword_1016772B8, (void (*)(uint64_t))type metadata accessor for CRLBoardLibraryViewModel.Folder);
      uint64_t v39 = (uint64_t)v67;
      uint64_t v40 = v72;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      (*(void (**)(char *, char *))(v71 + 8))(v38, v40);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v13, v32);
      uint64_t v41 = (uint64_t)v80;
      swift_storeEnumTagMultiPayload();
      uint64_t v42 = (uint64_t)v66;
      sub_100DDD1E4(v39, (uint64_t)v66, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v43 = v34;
    }
    else
    {
      char v87 = 2;
      sub_100DDDBAC();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v48 = v32;
      uint64_t v43 = v34;
      uint64_t v76 = v37;
      uint64_t v51 = v48;
      type metadata accessor for CRLBoardIdentifier(0);
      char v86 = 0;
      sub_100DDC6FC((unint64_t *)&unk_101677290, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifier);
      uint64_t v52 = v70;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v53 = v35;
      char v85 = 1;
      uint64_t v55 = KeyedDecodingContainer.decode(_:forKey:)();
      uint64_t v56 = v75;
      uint64_t v57 = v73;
      uint64_t v59 = v58;
      long long v74 = (char *)v55;
      uint64_t v60 = *(int *)(sub_1005057FC(&qword_101677100) + 48);
      uint64_t v61 = v57;
      uint64_t v72 = v13;
      uint64_t v62 = (uint64_t)v81;
      uint64_t v63 = &v81[v60];
      (*(void (**)(char *, uint64_t))(v61 + 8))(v53, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v72, v51);
      *(void *)uint64_t v63 = v74;
      *((void *)v63 + 1) = v59;
      swift_storeEnumTagMultiPayload();
      uint64_t v42 = (uint64_t)v66;
      sub_100DDD1E4(v62, (uint64_t)v66, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v41 = (uint64_t)v80;
    }
  }
  else
  {
    char v83 = 0;
    sub_100DDDC54();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    sub_100DDDCA8();
    uint64_t v49 = v69;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v33, v49);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v13, v32);
    uint64_t v50 = (uint64_t)v65;
    *uint64_t v65 = v82;
    swift_storeEnumTagMultiPayload();
    uint64_t v42 = (uint64_t)v66;
    sub_100DDD1E4(v50, (uint64_t)v66, type metadata accessor for CRLBoardLibraryViewModel.Item);
    uint64_t v41 = (uint64_t)v80;
    uint64_t v43 = v34;
  }
  sub_100DDD1E4(v42, v43, type metadata accessor for CRLBoardLibraryViewModel.Item);
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v41);
}

uint64_t sub_100DDA624()
{
  if (*v0) {
    return 0x656C746974;
  }
  else {
    return 0x6564496472616F62;
  }
}

uint64_t sub_100DDA668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100DDEEA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100DDA690(uint64_t a1)
{
  unint64_t v2 = sub_100DDDBAC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100DDA6CC(uint64_t a1)
{
  unint64_t v2 = sub_100DDDBAC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100DDA708()
{
  uint64_t v1 = 0x7265646C6F66;
  if (*v0 != 1) {
    uint64_t v1 = 0x6472616F62;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7972617262696CLL;
  }
}

uint64_t sub_100DDA75C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100DDEFB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100DDA784(uint64_t a1)
{
  unint64_t v2 = sub_100DDDB58();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100DDA7C0(uint64_t a1)
{
  unint64_t v2 = sub_100DDDB58();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100DDA7FC(uint64_t a1)
{
  unint64_t v2 = sub_100DDDC00();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100DDA838(uint64_t a1)
{
  unint64_t v2 = sub_100DDDC00();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100DDA874(uint64_t a1)
{
  unint64_t v2 = sub_100DDDC54();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100DDA8B0(uint64_t a1)
{
  unint64_t v2 = sub_100DDDC54();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100DDA8EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100DD9CF4(a1, a2);
}

uint64_t sub_100DDA904(void *a1)
{
  return sub_100DD9658(a1);
}

Swift::Int sub_100DDA920(uint64_t a1, uint64_t a2)
{
  return sub_100DDC608(a1, a2, (void (*)(unsigned char *))sub_100DD93E0);
}

Swift::Int sub_100DDA93C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100DDC66C(a1, a2, a3, (void (*)(unsigned char *))sub_100DD93E0);
}

uint64_t sub_100DDA958()
{
  return sub_100DDC6FC(&qword_10169C4D0, (void (*)(uint64_t))type metadata accessor for CRLBoardLibraryViewModel.Item);
}

unint64_t sub_100DDA9A4()
{
  unint64_t result = qword_10169C4D8;
  if (!qword_10169C4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C4D8);
  }
  return result;
}

unint64_t sub_100DDA9FC()
{
  unint64_t result = qword_10169C4E0;
  if (!qword_10169C4E0)
  {
    sub_100522D34(&qword_10169C4E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C4E0);
  }
  return result;
}

void sub_100DDAA58()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100DDD17C(v1, (uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v11 = sub_1005057FC(&qword_101670F30);
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 5, v11))
  {
    case 1u:
      Swift::UInt v12 = 0;
      goto LABEL_8;
    case 2u:
      Swift::UInt v12 = 1;
      goto LABEL_8;
    case 3u:
      Swift::UInt v12 = 2;
      goto LABEL_8;
    case 4u:
      Swift::UInt v12 = 3;
      goto LABEL_8;
    case 5u:
      Swift::UInt v12 = 4;
LABEL_8:
      Hasher._combine(_:)(v12);
      break;
    default:
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v10, v2);
      Hasher._combine(_:)(5uLL);
      sub_100DDC6FC((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
      dispatch thunk of Hashable.hash(into:)();
      String.hash(into:)();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      swift_bridgeObjectRelease();
      break;
  }
}

uint64_t sub_100DDACD4(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10169C568);
  uint64_t v65 = *(void *)(v2 - 8);
  uint64_t v66 = v2;
  __chkstk_darwin(v2, v3);
  uint64_t v62 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v63 = *(void *)(v5 - 8);
  uint64_t v64 = v5;
  __chkstk_darwin(v5, v6);
  uint64_t v67 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10169C570);
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v61 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v59 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_10169C578);
  uint64_t v57 = *(void *)(v11 - 8);
  uint64_t v58 = v11;
  __chkstk_darwin(v11, v12);
  uint64_t v56 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_10169C580);
  uint64_t v54 = *(void *)(v14 - 8);
  uint64_t v55 = v14;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005057FC(&qword_10169C588);
  uint64_t v52 = *(void *)(v18 - 8);
  uint64_t v53 = v18;
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1005057FC(&qword_10169C590);
  uint64_t v51 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v26 - 8, v27);
  char v29 = (char *)&v51 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1005057FC(&qword_10169C598);
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v68 = v30;
  uint64_t v69 = v31;
  __chkstk_darwin(v30, v32);
  uint64_t v34 = (char *)&v51 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100DDD24C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_100DDD17C(v71, (uint64_t)v29, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v35 = sub_1005057FC(&qword_101670F30);
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v29, 5, v35))
  {
    case 1u:
      char v72 = 0;
      sub_100DDD444();
      uint64_t v46 = v68;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v25, v22);
      goto LABEL_10;
    case 2u:
      char v73 = 1;
      sub_100DDD3F0();
      uint64_t v46 = v68;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v21, v53);
      goto LABEL_10;
    case 3u:
      char v74 = 2;
      sub_100DDD39C();
      uint64_t v46 = v68;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v17, v55);
      goto LABEL_10;
    case 4u:
      char v75 = 3;
      sub_100DDD348();
      uint64_t v47 = v56;
      uint64_t v46 = v68;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v49 = v57;
      uint64_t v48 = v58;
      goto LABEL_9;
    case 5u:
      char v76 = 4;
      sub_100DDD2F4();
      uint64_t v47 = v59;
      uint64_t v46 = v68;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v49 = v60;
      uint64_t v48 = v61;
LABEL_9:
      (*(void (**)(char *, uint64_t))(v49 + 8))(v47, v48);
LABEL_10:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v34, v46);
      break;
    default:
      uint64_t v36 = &v29[*(int *)(v35 + 48)];
      uint64_t v38 = *(void *)v36;
      uint64_t v37 = *((void *)v36 + 1);
      uint64_t v61 = v38;
      uint64_t v71 = v37;
      uint64_t v40 = v63;
      uint64_t v39 = v64;
      uint64_t v41 = v67;
      (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v67, v29, v64);
      char v79 = 5;
      sub_100DDD2A0();
      uint64_t v42 = v62;
      uint64_t v43 = v68;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      char v78 = 0;
      sub_100DDC6FC(&qword_101671E70, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v44 = v66;
      uint64_t v45 = v70;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      if (v45)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v65 + 8))(v42, v44);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v39);
      }
      else
      {
        char v77 = 1;
        KeyedEncodingContainer.encode(_:forKey:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v65 + 8))(v42, v44);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v67, v39);
      }
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v34, v43);
      break;
  }
  return result;
}

uint64_t sub_100DDB51C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v81 = a2;
  uint64_t v86 = sub_1005057FC(&qword_10169C4F8);
  uint64_t v82 = *(void *)(v86 - 8);
  __chkstk_darwin(v86, v3);
  uint64_t v80 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_10169C500);
  uint64_t v76 = *(void *)(v5 - 8);
  uint64_t v77 = v5;
  __chkstk_darwin(v5, v6);
  char v85 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10169C508);
  uint64_t v74 = *(void *)(v8 - 8);
  uint64_t v75 = v8;
  __chkstk_darwin(v8, v9);
  char v79 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_10169C510);
  uint64_t v72 = *(void *)(v11 - 8);
  uint64_t v73 = v11;
  __chkstk_darwin(v11, v12);
  char v78 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_10169C518);
  uint64_t v70 = *(void *)(v14 - 8);
  uint64_t v71 = v14;
  __chkstk_darwin(v14, v15);
  char v84 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC(&qword_10169C520);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v68 = v17;
  uint64_t v69 = v18;
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1005057FC(&qword_10169C528);
  uint64_t v83 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v26, v27);
  char v29 = (char *)&v66 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30, v31);
  uint64_t v33 = (char *)&v66 - v32;
  uint64_t v34 = a1[3];
  char v87 = a1;
  sub_10050F848(a1, v34);
  sub_100DDD24C();
  uint64_t v35 = v88;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v35) {
    goto LABEL_13;
  }
  uint64_t v88 = v26;
  uint64_t v36 = v84;
  uint64_t v66 = v29;
  uint64_t v37 = v85;
  uint64_t v38 = v86;
  uint64_t v67 = v33;
  uint64_t v39 = KeyedDecodingContainer.allKeys.getter();
  if (*(void *)(v39 + 16) != 1)
  {
    uint64_t v42 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v44 = v43;
    sub_1005057FC(&qword_1016771E0);
    *uint64_t v44 = v88;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v42 - 8) + 104))(v44, enum case for DecodingError.typeMismatch(_:), v42);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v25, v22);
LABEL_13:
    uint64_t v52 = (uint64_t)v87;
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v52);
  }
  switch(*(unsigned char *)(v39 + 32))
  {
    case 1:
      char v90 = 1;
      sub_100DDD3F0();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v36, v71);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v25, v22);
      uint64_t v45 = sub_1005057FC(&qword_101670F30);
      uint64_t v41 = (uint64_t)v67;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v67, 2, 5, v45);
      goto LABEL_10;
    case 2:
      char v91 = 2;
      sub_100DDD39C();
      uint64_t v46 = v78;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v46, v73);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v25, v22);
      uint64_t v47 = sub_1005057FC(&qword_101670F30);
      uint64_t v41 = (uint64_t)v67;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v67, 3, 5, v47);
      goto LABEL_10;
    case 3:
      char v92 = 3;
      sub_100DDD348();
      uint64_t v48 = v79;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v48, v75);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v25, v22);
      uint64_t v49 = sub_1005057FC(&qword_101670F30);
      uint64_t v41 = (uint64_t)v67;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v67, 4, 5, v49);
      goto LABEL_10;
    case 4:
      char v93 = 4;
      sub_100DDD2F4();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v37, v77);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v25, v22);
      uint64_t v50 = sub_1005057FC(&qword_101670F30);
      uint64_t v41 = (uint64_t)v67;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v67, 5, 5, v50);
      goto LABEL_10;
    case 5:
      uint64_t v53 = v38;
      char v96 = 5;
      sub_100DDD2A0();
      uint64_t v54 = v80;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      type metadata accessor for UUID();
      char v95 = 0;
      sub_100DDC6FC(&qword_101671E58, (void (*)(uint64_t))&type metadata accessor for UUID);
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      char v94 = 1;
      uint64_t v56 = KeyedDecodingContainer.decode(_:forKey:)();
      char v84 = v57;
      char v85 = (char *)v56;
      uint64_t v88 = 0;
      uint64_t v58 = v54;
      uint64_t v59 = v83;
      uint64_t v60 = sub_1005057FC(&qword_101670F30);
      uint64_t v61 = v53;
      uint64_t v62 = (uint64_t)v66;
      uint64_t v63 = &v66[*(int *)(v60 + 48)];
      (*(void (**)(char *, uint64_t))(v82 + 8))(v58, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v25, v22);
      uint64_t v64 = v84;
      *(void *)uint64_t v63 = v85;
      *((void *)v63 + 1) = v64;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v62, 0, 5, v60);
      uint64_t v65 = v62;
      uint64_t v41 = (uint64_t)v67;
      sub_100DDD1E4(v65, (uint64_t)v67, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      uint64_t v51 = (uint64_t)v87;
      goto LABEL_11;
    default:
      char v89 = 0;
      sub_100DDD444();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v21, v68);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v25, v22);
      uint64_t v40 = sub_1005057FC(&qword_101670F30);
      uint64_t v41 = (uint64_t)v67;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v67, 1, 5, v40);
LABEL_10:
      uint64_t v51 = (uint64_t)v87;
LABEL_11:
      sub_100DDD1E4(v41, v81, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      uint64_t v52 = v51;
      break;
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v52);
}

uint64_t sub_100DDC12C(uint64_t a1)
{
  unint64_t v2 = sub_100DDD444();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100DDC168(uint64_t a1)
{
  unint64_t v2 = sub_100DDD444();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100DDC1A4()
{
  uint64_t result = 0x6472616F426C6C61;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x73746E65636572;
      break;
    case 2:
      uint64_t result = 0x657469726F766166;
      break;
    case 3:
      uint64_t result = 0x646572616873;
      break;
    case 4:
      uint64_t result = 0x796C746E65636572;
      break;
    case 5:
      uint64_t result = 1919251317;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100DDC26C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100DDF0F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100DDC294(uint64_t a1)
{
  unint64_t v2 = sub_100DDD24C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100DDC2D0(uint64_t a1)
{
  unint64_t v2 = sub_100DDD24C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100DDC30C(uint64_t a1)
{
  unint64_t v2 = sub_100DDD39C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100DDC348(uint64_t a1)
{
  unint64_t v2 = sub_100DDD39C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100DDC384(uint64_t a1)
{
  unint64_t v2 = sub_100DDD2F4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100DDC3C0(uint64_t a1)
{
  unint64_t v2 = sub_100DDD2F4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100DDC3FC(uint64_t a1)
{
  unint64_t v2 = sub_100DDD3F0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100DDC438(uint64_t a1)
{
  unint64_t v2 = sub_100DDD3F0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100DDC474(uint64_t a1)
{
  unint64_t v2 = sub_100DDD348();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100DDC4B0(uint64_t a1)
{
  unint64_t v2 = sub_100DDD348();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100DDC4EC()
{
  if (*v0) {
    return 0x656C746974;
  }
  else {
    return 1684632949;
  }
}

uint64_t sub_100DDC51C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100DDF3A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100DDC544(uint64_t a1)
{
  unint64_t v2 = sub_100DDD2A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100DDC580(uint64_t a1)
{
  unint64_t v2 = sub_100DDD2A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100DDC5BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100DDB51C(a1, a2);
}

uint64_t sub_100DDC5D4(void *a1)
{
  return sub_100DDACD4(a1);
}

Swift::Int sub_100DDC5F0(uint64_t a1, uint64_t a2)
{
  return sub_100DDC608(a1, a2, (void (*)(unsigned char *))sub_100DDAA58);
}

Swift::Int sub_100DDC608(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *))
{
  Hasher.init(_seed:)();
  a3(v5);
  return Hasher._finalize()();
}

Swift::Int sub_100DDC654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100DDC66C(a1, a2, a3, (void (*)(unsigned char *))sub_100DDAA58);
}

Swift::Int sub_100DDC66C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  Hasher.init(_seed:)();
  a4(v6);
  return Hasher._finalize()();
}

uint64_t sub_100DDC6B4()
{
  return sub_100DDC6FC(&qword_10169C4F0, (void (*)(uint64_t))type metadata accessor for CRLBoardLibraryViewModel.Folder);
}

uint64_t sub_100DDC6FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100DDC744(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_10167BE58);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (uint64_t)&v17[*(int *)(v15 + 56)];
  sub_100DDD17C(a1, (uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  sub_100DDD17C(a2, v18, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v19 = sub_1005057FC(&qword_101670F30);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
  switch(v20((uint64_t)v17, 5, v19))
  {
    case 1u:
      if (v20(v18, 5, v19) == 1) {
        goto LABEL_13;
      }
      goto LABEL_14;
    case 2u:
      if (v20(v18, 5, v19) != 2) {
        goto LABEL_14;
      }
      goto LABEL_13;
    case 3u:
      if (v20(v18, 5, v19) != 3) {
        goto LABEL_14;
      }
      goto LABEL_13;
    case 4u:
      if (v20(v18, 5, v19) != 4) {
        goto LABEL_14;
      }
      goto LABEL_13;
    case 5u:
      if (v20(v18, 5, v19) == 5) {
        goto LABEL_13;
      }
      goto LABEL_14;
    default:
      uint64_t v34 = v5;
      sub_100DDD17C((uint64_t)v17, (uint64_t)v12, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      uint64_t v21 = *(int *)(v19 + 48);
      uint64_t v22 = *(void *)&v12[v21 + 8];
      uint64_t v33 = *(void *)&v12[v21];
      if (v20(v18, 5, v19))
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v4);
LABEL_14:
        sub_100522F00((uint64_t)v17, &qword_10167BE58);
        return 0;
      }
      uint64_t v24 = v22;
      uint64_t v25 = v18 + v21;
      uint64_t v26 = *(void *)(v18 + v21);
      uint64_t v27 = *(void *)(v25 + 8);
      uint64_t v28 = v34;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v8, v18, v4);
      char v29 = static UUID.== infix(_:_:)();
      uint64_t v30 = *(void (**)(char *, uint64_t))(v28 + 8);
      v30(v12, v4);
      if (v29)
      {
        if (v33 == v26 && v24 == v27)
        {
          swift_bridgeObjectRelease_n();
          v30(v8, v4);
        }
        else
        {
          char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v30(v8, v4);
          if ((v32 & 1) == 0) {
            goto LABEL_24;
          }
        }
LABEL_13:
        sub_100DDCBC8((uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        return 1;
      }
      v30(v8, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_24:
      sub_100DDCBC8((uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      return 0;
  }
}

uint64_t sub_100DDCBC8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100DDCC28(uint64_t a1, uint64_t a2)
{
  uint64_t v62 = a2;
  uint64_t v3 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v61 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v60 = (uint64_t)&v57 - v9;
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v59 = (uint64_t)&v57 - v12;
  __chkstk_darwin(v11, v13);
  uint64_t v58 = (char *)&v57 - v14;
  uint64_t v15 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  uint64_t v17 = __chkstk_darwin(v15 - 8, v16);
  uint64_t v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v20);
  uint64_t v22 = (char *)&v57 - v21;
  uint64_t v23 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v25 = __chkstk_darwin(v23, v24);
  uint64_t v27 = (char *)&v57 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v25, v28);
  uint64_t v31 = (char *)&v57 - v30;
  __chkstk_darwin(v29, v32);
  uint64_t v34 = (unsigned __int8 *)&v57 - v33;
  uint64_t v35 = sub_1005057FC((uint64_t *)&unk_10167BE60);
  uint64_t v37 = __chkstk_darwin(v35 - 8, v36);
  uint64_t v39 = (char *)&v57 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = &v39[*(int *)(v37 + 56)];
  sub_100DDD17C(a1, (uint64_t)v39, type metadata accessor for CRLBoardLibraryViewModel.Item);
  sub_100DDD17C(v62, (uint64_t)v40, type metadata accessor for CRLBoardLibraryViewModel.Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_100DDD17C((uint64_t)v39, (uint64_t)v31, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_100DDD1E4((uint64_t)v31, (uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        sub_100DDD1E4((uint64_t)v40, (uint64_t)v19, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        char v42 = sub_100DDC744((uint64_t)v22, (uint64_t)v19);
        uint64_t v43 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
        uint64_t v44 = (uint64_t)v19;
        uint64_t v45 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
LABEL_19:
        sub_100DDCBC8(v44, v45);
        sub_100DDCBC8((uint64_t)v22, v43);
        goto LABEL_20;
      }
      uint64_t v54 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
      uint64_t v55 = (uint64_t)v31;
    }
    else
    {
      sub_100DDD17C((uint64_t)v39, (uint64_t)v27, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1005057FC(&qword_101677100);
      swift_bridgeObjectRelease();
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        swift_bridgeObjectRelease();
        uint64_t v22 = v58;
        sub_100DDD1E4((uint64_t)v27, (uint64_t)v58, type metadata accessor for CRLBoardIdentifier);
        uint64_t v46 = v59;
        sub_100DDD1E4((uint64_t)v40, v59, type metadata accessor for CRLBoardIdentifier);
        char v47 = static UUID.== infix(_:_:)();
        uint64_t v48 = v60;
        sub_100DDD17C((uint64_t)v22, v60, type metadata accessor for CRLBoardIdentifier);
        uint64_t v49 = v61;
        sub_100DDD17C(v46, v61, type metadata accessor for CRLBoardIdentifier);
        if (v47)
        {
          uint64_t v50 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
          uint64_t v51 = *(void *)(v48 + v50);
          uint64_t v52 = *(void *)(v48 + v50 + 8);
          uint64_t v53 = (void *)(v49 + v50);
          if (v51 == *v53 && v52 == v53[1]) {
            char v42 = 1;
          }
          else {
            char v42 = _stringCompareWithSmolCheck(_:_:expecting:)();
          }
        }
        else
        {
          char v42 = 0;
        }
        uint64_t v43 = type metadata accessor for CRLBoardIdentifier;
        sub_100DDCBC8(v49, type metadata accessor for CRLBoardIdentifier);
        sub_100DDCBC8(v48, type metadata accessor for CRLBoardIdentifier);
        uint64_t v44 = v46;
        uint64_t v45 = type metadata accessor for CRLBoardIdentifier;
        goto LABEL_19;
      }
      uint64_t v54 = type metadata accessor for CRLBoardIdentifier;
      uint64_t v55 = (uint64_t)v27;
    }
    sub_100DDCBC8(v55, v54);
  }
  else
  {
    sub_100DDD17C((uint64_t)v39, (uint64_t)v34, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (!swift_getEnumCaseMultiPayload())
    {
      char v42 = *v34 == *v40;
LABEL_20:
      sub_100DDCBC8((uint64_t)v39, type metadata accessor for CRLBoardLibraryViewModel.Item);
      return v42 & 1;
    }
  }
  sub_100522F00((uint64_t)v39, (uint64_t *)&unk_10167BE60);
  char v42 = 0;
  return v42 & 1;
}

uint64_t sub_100DDD17C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100DDD1E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_100DDD24C()
{
  unint64_t result = qword_10169C530;
  if (!qword_10169C530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C530);
  }
  return result;
}

unint64_t sub_100DDD2A0()
{
  unint64_t result = qword_10169C538;
  if (!qword_10169C538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C538);
  }
  return result;
}

unint64_t sub_100DDD2F4()
{
  unint64_t result = qword_10169C540;
  if (!qword_10169C540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C540);
  }
  return result;
}

unint64_t sub_100DDD348()
{
  unint64_t result = qword_10169C548;
  if (!qword_10169C548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C548);
  }
  return result;
}

unint64_t sub_100DDD39C()
{
  unint64_t result = qword_10169C550;
  if (!qword_10169C550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C550);
  }
  return result;
}

unint64_t sub_100DDD3F0()
{
  unint64_t result = qword_10169C558;
  if (!qword_10169C558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C558);
  }
  return result;
}

unint64_t sub_100DDD444()
{
  unint64_t result = qword_10169C560;
  if (!qword_10169C560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C560);
  }
  return result;
}

void *sub_100DDD498(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10169C5A0);
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  __chkstk_darwin(v2, v3);
  uint64_t v33 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1005057FC(&qword_10169C5A8);
  uint64_t v28 = *(void *)(v31 - 8);
  __chkstk_darwin(v31, v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10169C5B0);
  uint64_t v27 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_10169C5B8);
  uint64_t v32 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (uint64_t *)((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10050F848(a1, a1[3]);
  sub_100DDDA08();
  uint64_t v16 = (uint64_t)v34;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v16) {
    goto LABEL_7;
  }
  uint64_t v26 = v8;
  uint64_t v17 = v33;
  uint64_t v34 = a1;
  uint64_t v18 = v15;
  uint64_t v19 = KeyedDecodingContainer.allKeys.getter();
  if (*(void *)(v19 + 16) != 1)
  {
    uint64_t v21 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v15 = v22;
    sub_1005057FC(&qword_1016771E0);
    *uint64_t v15 = &type metadata for CRLBoardLibraryViewModel.Library;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v15, enum case for DecodingError.typeMismatch(_:), v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v32 + 8))(v18, v12);
    a1 = v34;
LABEL_7:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    return v15;
  }
  uint64_t v15 = (void *)*(unsigned __int8 *)(v19 + 32);
  if (*(unsigned char *)(v19 + 32))
  {
    if (v15 == 1)
    {
      char v36 = 1;
      sub_100DDDAB0();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v20 = v32;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v31);
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t))(v20 + 8))(v18, v12);
    }
    else
    {
      char v37 = 2;
      sub_100DDDA5C();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v24 = v32;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v30);
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t))(v24 + 8))(v18, v12);
    }
  }
  else
  {
    char v35 = 0;
    sub_100DDDB04();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v26);
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v32 + 8))(v18, v12);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v34);
  return v15;
}

unint64_t sub_100DDDA08()
{
  unint64_t result = qword_10169C5C0;
  if (!qword_10169C5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C5C0);
  }
  return result;
}

unint64_t sub_100DDDA5C()
{
  unint64_t result = qword_10169C5C8;
  if (!qword_10169C5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C5C8);
  }
  return result;
}

unint64_t sub_100DDDAB0()
{
  unint64_t result = qword_10169C5D0;
  if (!qword_10169C5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C5D0);
  }
  return result;
}

unint64_t sub_100DDDB04()
{
  unint64_t result = qword_10169C5D8;
  if (!qword_10169C5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C5D8);
  }
  return result;
}

unint64_t sub_100DDDB58()
{
  unint64_t result = qword_10169C620;
  if (!qword_10169C620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C620);
  }
  return result;
}

unint64_t sub_100DDDBAC()
{
  unint64_t result = qword_10169C628;
  if (!qword_10169C628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C628);
  }
  return result;
}

unint64_t sub_100DDDC00()
{
  unint64_t result = qword_10169C630;
  if (!qword_10169C630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C630);
  }
  return result;
}

unint64_t sub_100DDDC54()
{
  unint64_t result = qword_10169C638;
  if (!qword_10169C638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C638);
  }
  return result;
}

unint64_t sub_100DDDCA8()
{
  unint64_t result = qword_10169C640;
  if (!qword_10169C640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C640);
  }
  return result;
}

unint64_t sub_100DDDCFC()
{
  unint64_t result = qword_10169C668;
  if (!qword_10169C668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C668);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Item.CodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Item.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Item.LibraryCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Item.LibraryCodingKeys;
}

unsigned char *_s8Freeform24CRLBoardLibraryViewModelV4ItemO17LibraryCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100DDDE10);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Item.FolderCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Item.FolderCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Item.BoardCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Item.BoardCodingKeys;
}

unsigned char *_s8Freeform24CRLBoardLibraryViewModelV7LibraryOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100DDDF28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Library.CodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Library.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Library.SpecialCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Library.SpecialCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Library.LocalCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Library.LocalCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Library.ICloudCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Library.ICloudCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for CRLBoardLibraryViewModel.Folder.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100DDE05CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Folder.CodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Folder.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Folder.AllBoardsCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Folder.AllBoardsCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Folder.RecentsCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Folder.RecentsCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Folder.FavoritesCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Folder.FavoritesCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Folder.SharedCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Folder.SharedCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Folder.RecentlyDeletedCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Folder.RecentlyDeletedCodingKeys;
}

unsigned char *_s8Freeform24CRLBoardLibraryViewModelV4ItemO15BoardCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100DDE1B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModel.Folder.UserCodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModel.Folder.UserCodingKeys;
}

unint64_t sub_100DDE1EC()
{
  unint64_t result = qword_10169C670;
  if (!qword_10169C670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C670);
  }
  return result;
}

unint64_t sub_100DDE244()
{
  unint64_t result = qword_10169C678;
  if (!qword_10169C678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C678);
  }
  return result;
}

unint64_t sub_100DDE29C()
{
  unint64_t result = qword_10169C680;
  if (!qword_10169C680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C680);
  }
  return result;
}

unint64_t sub_100DDE2F4()
{
  unint64_t result = qword_10169C688;
  if (!qword_10169C688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C688);
  }
  return result;
}

unint64_t sub_100DDE34C()
{
  unint64_t result = qword_10169C690;
  if (!qword_10169C690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C690);
  }
  return result;
}

unint64_t sub_100DDE3A4()
{
  unint64_t result = qword_10169C698;
  if (!qword_10169C698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C698);
  }
  return result;
}

unint64_t sub_100DDE3FC()
{
  unint64_t result = qword_10169C6A0;
  if (!qword_10169C6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C6A0);
  }
  return result;
}

unint64_t sub_100DDE454()
{
  unint64_t result = qword_10169C6A8;
  if (!qword_10169C6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C6A8);
  }
  return result;
}

unint64_t sub_100DDE4AC()
{
  unint64_t result = qword_10169C6B0;
  if (!qword_10169C6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C6B0);
  }
  return result;
}

unint64_t sub_100DDE504()
{
  unint64_t result = qword_10169C6B8;
  if (!qword_10169C6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C6B8);
  }
  return result;
}

unint64_t sub_100DDE55C()
{
  unint64_t result = qword_10169C6C0;
  if (!qword_10169C6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C6C0);
  }
  return result;
}

unint64_t sub_100DDE5B4()
{
  unint64_t result = qword_10169C6C8;
  if (!qword_10169C6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C6C8);
  }
  return result;
}

unint64_t sub_100DDE60C()
{
  unint64_t result = qword_10169C6D0;
  if (!qword_10169C6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C6D0);
  }
  return result;
}

unint64_t sub_100DDE664()
{
  unint64_t result = qword_10169C6D8;
  if (!qword_10169C6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C6D8);
  }
  return result;
}

unint64_t sub_100DDE6BC()
{
  unint64_t result = qword_10169C6E0;
  if (!qword_10169C6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C6E0);
  }
  return result;
}

unint64_t sub_100DDE714()
{
  unint64_t result = qword_10169C6E8;
  if (!qword_10169C6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C6E8);
  }
  return result;
}

unint64_t sub_100DDE76C()
{
  unint64_t result = qword_10169C6F0;
  if (!qword_10169C6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C6F0);
  }
  return result;
}

unint64_t sub_100DDE7C4()
{
  unint64_t result = qword_10169C6F8;
  if (!qword_10169C6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C6F8);
  }
  return result;
}

unint64_t sub_100DDE81C()
{
  unint64_t result = qword_10169C700;
  if (!qword_10169C700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C700);
  }
  return result;
}

unint64_t sub_100DDE874()
{
  unint64_t result = qword_10169C708;
  if (!qword_10169C708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C708);
  }
  return result;
}

unint64_t sub_100DDE8CC()
{
  unint64_t result = qword_10169C710;
  if (!qword_10169C710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C710);
  }
  return result;
}

unint64_t sub_100DDE924()
{
  unint64_t result = qword_10169C718;
  if (!qword_10169C718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C718);
  }
  return result;
}

unint64_t sub_100DDE97C()
{
  unint64_t result = qword_10169C720;
  if (!qword_10169C720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C720);
  }
  return result;
}

unint64_t sub_100DDE9D4()
{
  unint64_t result = qword_10169C728;
  if (!qword_10169C728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C728);
  }
  return result;
}

unint64_t sub_100DDEA2C()
{
  unint64_t result = qword_10169C730;
  if (!qword_10169C730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C730);
  }
  return result;
}

unint64_t sub_100DDEA84()
{
  unint64_t result = qword_10169C738;
  if (!qword_10169C738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C738);
  }
  return result;
}

unint64_t sub_100DDEADC()
{
  unint64_t result = qword_10169C740;
  if (!qword_10169C740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C740);
  }
  return result;
}

unint64_t sub_100DDEB34()
{
  unint64_t result = qword_10169C748;
  if (!qword_10169C748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C748);
  }
  return result;
}

unint64_t sub_100DDEB8C()
{
  unint64_t result = qword_10169C750;
  if (!qword_10169C750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C750);
  }
  return result;
}

unint64_t sub_100DDEBE4()
{
  unint64_t result = qword_10169C758;
  if (!qword_10169C758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C758);
  }
  return result;
}

unint64_t sub_100DDEC3C()
{
  unint64_t result = qword_10169C760;
  if (!qword_10169C760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C760);
  }
  return result;
}

unint64_t sub_100DDEC94()
{
  unint64_t result = qword_10169C768;
  if (!qword_10169C768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C768);
  }
  return result;
}

unint64_t sub_100DDECEC()
{
  unint64_t result = qword_10169C770;
  if (!qword_10169C770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C770);
  }
  return result;
}

unint64_t sub_100DDED44()
{
  unint64_t result = qword_10169C778;
  if (!qword_10169C778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C778);
  }
  return result;
}

unint64_t sub_100DDED9C()
{
  unint64_t result = qword_10169C780;
  if (!qword_10169C780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C780);
  }
  return result;
}

unint64_t sub_100DDEDF4()
{
  unint64_t result = qword_10169C788;
  if (!qword_10169C788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C788);
  }
  return result;
}

unint64_t sub_100DDEE4C()
{
  unint64_t result = qword_10169C790;
  if (!qword_10169C790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C790);
  }
  return result;
}

uint64_t sub_100DDEEA0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6564496472616F62 && a2 == 0xEF7265696669746ELL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100DDEFB0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7972617262696CLL && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265646C6F66 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6472616F62 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_100DDF0F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6472616F426C6C61 && a2 == 0xE900000000000073;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746E65636572 && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657469726F766166 && a2 == 0xE900000000000073 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x646572616873 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x796C746E65636572 && a2 == 0xEF646574656C6544 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1919251317 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_100DDF3A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684632949 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

id sub_100DDF47C(unint64_t a1, unint64_t a2, char a3)
{
  unint64_t v4 = a1;
  switch(a3)
  {
    case 1:
      uint64_t v13 = self;
      swift_bridgeObjectRetain();
      id v14 = [v13 mainBundle];
      NSString v15 = String._bridgeToObjectiveC()();
      NSString v16 = String._bridgeToObjectiveC()();
      id v17 = [v14 localizedStringForKey:v15 value:v16 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      if (v4 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
        sub_100DE04FC(v4, a2, 1u);
        if (v42) {
          goto LABEL_10;
        }
      }
      else if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_10:
        if ((v4 & 0xC000000000000001) != 0) {
          goto LABEL_63;
        }
        if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v18 = *(id *)(v4 + 32);
          goto LABEL_13;
        }
        __break(1u);
LABEL_65:
        id v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_39;
      }
      uint64_t v39 = v4;
      uint64_t v40 = a2;
      unsigned __int8 v41 = 1;
      goto LABEL_31;
    case 2:
      id v24 = [self mainBundle];
      v25._countAndFlagsBits = 0xD000000000000017;
      v84._countAndFlagsBits = 0xD00000000000003FLL;
      v84._object = (void *)0x800000010128B3A0;
      v25._object = (void *)0x800000010128B380;
      v26._countAndFlagsBits = 0;
      v26._object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)v24, v26, v84);

      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_10117E810;
      if (!(v4 >> 62)) {
        goto LABEL_19;
      }
      swift_bridgeObjectRetain();
      uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
      sub_100DE04FC(v4, a2, 2u);
      goto LABEL_20;
    case 3:
      id v29 = [self mainBundle];
      v30._countAndFlagsBits = 0xD000000000000015;
      v85._countAndFlagsBits = 0xD00000000000003DLL;
      v85._object = (void *)0x800000010128B340;
      v30._object = (void *)0x800000010128B320;
      v31._countAndFlagsBits = 0;
      v31._object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, (NSBundle)v29, v31, v85);

      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_10117E810;
      if (v4 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
        sub_100DE04FC(v4, a2, 3u);
      }
      else
      {
LABEL_19:
        uint64_t v28 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
LABEL_20:
      *(void *)(v27 + 56) = &type metadata for Int;
      *(void *)(v27 + 64) = &protocol witness table for Int;
      *(void *)(v27 + 32) = v28;
      goto LABEL_21;
    case 4:
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
        if (v32 >= 2) {
          goto LABEL_25;
        }
      }
      else
      {
        uint64_t v32 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v32 >= 2)
        {
LABEL_25:
          swift_bridgeObjectRelease();
          id v33 = [self mainBundle];
          NSString v34 = String._bridgeToObjectiveC()();
          NSString v35 = String._bridgeToObjectiveC()();
          id v36 = [v33 localizedStringForKey:v34 value:v35 table:0];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t v37 = swift_allocObject();
          *(_OWORD *)(v37 + 16) = xmmword_10117E810;
          *(void *)(v37 + 56) = &type metadata for Int;
          *(void *)(v37 + 64) = &protocol witness table for Int;
          *(void *)(v37 + 32) = v32;
          goto LABEL_41;
        }
      }
      id v43 = [self mainBundle];
      NSString v44 = String._bridgeToObjectiveC()();
      NSString v45 = String._bridgeToObjectiveC()();
      id v46 = [v43 localizedStringForKey:v44 value:v45 table:0];

      uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      if (v4 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v62 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v62) {
          goto LABEL_57;
        }
      }
      else if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_57;
      }
      if ((v4 & 0xC000000000000001) != 0) {
        goto LABEL_65;
      }
      if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_67;
      }
      id v48 = *(id *)(v4 + 32);
LABEL_39:
      uint64_t v49 = v48;
      swift_bridgeObjectRelease();
      id v50 = [v49 displayName];

      if (!v50)
      {
        swift_bridgeObjectRelease();
LABEL_58:
        swift_bridgeObjectRelease();
        return 0;
      }
      uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v53 = v52;

      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_10117E810;
      *(void *)(v54 + 56) = &type metadata for String;
      *(void *)(v54 + 64) = sub_100528BE4();
      *(void *)(v54 + 32) = v51;
      *(void *)(v54 + 40) = v53;
LABEL_41:
      uint64_t v47 = String.init(format:_:)();
      unint64_t v4 = v55;
      swift_bridgeObjectRelease();
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v56 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v56 >= 2) {
          goto LABEL_43;
        }
      }
      else
      {
        uint64_t v56 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v56 >= 2)
        {
LABEL_43:
          swift_bridgeObjectRelease();
          id v57 = [self mainBundle];
          NSString v58 = String._bridgeToObjectiveC()();
          NSString v59 = String._bridgeToObjectiveC()();
          id v60 = [v57 localizedStringForKey:v58 value:v59 table:0];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t v61 = swift_allocObject();
          *(_OWORD *)(v61 + 16) = xmmword_10117E810;
          *(void *)(v61 + 56) = &type metadata for Int;
          *(void *)(v61 + 64) = &protocol witness table for Int;
          *(void *)(v61 + 32) = v56;
          goto LABEL_55;
        }
      }
      id v63 = [self mainBundle];
      NSString v64 = String._bridgeToObjectiveC()();
      NSString v65 = String._bridgeToObjectiveC()();
      id v66 = [v63 localizedStringForKey:v64 value:v65 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      if (!(a2 >> 62))
      {
        if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_50;
        }
        goto LABEL_57;
      }
      swift_bridgeObjectRetain();
      uint64_t v82 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v82)
      {
LABEL_57:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_58;
      }
LABEL_50:
      if ((a2 & 0xC000000000000001) == 0)
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          JUMPOUT(0x100DE020CLL);
        }
        id v67 = *(id *)(a2 + 32);
        goto LABEL_53;
      }
LABEL_67:
      id v67 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_53:
      uint64_t v68 = v67;
      swift_bridgeObjectRelease();
      id v19 = [v68 displayName];

      if (!v19)
      {
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v71 = v70;

      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v72 = swift_allocObject();
      *(_OWORD *)(v72 + 16) = xmmword_10117E810;
      *(void *)(v72 + 56) = &type metadata for String;
      *(void *)(v72 + 64) = sub_100528BE4();
      *(void *)(v72 + 32) = v69;
      *(void *)(v72 + 40) = v71;
LABEL_55:
      uint64_t v73 = String.init(format:_:)();
      uint64_t v75 = v74;
      swift_bridgeObjectRelease();
      id v76 = [self mainBundle];
      NSString v77 = String._bridgeToObjectiveC()();
      NSString v78 = String._bridgeToObjectiveC()();
      id v79 = [v76 localizedStringForKey:v77 value:v78 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v80 = swift_allocObject();
      *(_OWORD *)(v80 + 16) = xmmword_10117D8C0;
      *(void *)(v80 + 56) = &type metadata for String;
      unint64_t v81 = sub_100528BE4();
      *(void *)(v80 + 32) = v47;
      *(void *)(v80 + 40) = v4;
      *(void *)(v80 + 96) = &type metadata for String;
      *(void *)(v80 + 104) = v81;
      *(void *)(v80 + 64) = v81;
      *(void *)(v80 + 72) = v73;
      *(void *)(v80 + 80) = v75;
      id v19 = (id)static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
LABEL_22:
      swift_bridgeObjectRelease();
      return v19;
    default:
      uint64_t v5 = self;
      swift_bridgeObjectRetain();
      id v6 = [v5 mainBundle];
      NSString v7 = String._bridgeToObjectiveC()();
      NSString v8 = String._bridgeToObjectiveC()();
      id v9 = [v6 localizedStringForKey:v7 value:v8 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      if (v4 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
        sub_100DE04FC(v4, a2, 0);
        if (v38)
        {
LABEL_4:
          if ((v4 & 0xC000000000000001) != 0)
          {
            id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_63:
              id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_13:
              uint64_t v11 = v18;
              sub_100DE04FC(v4, a2, 1u);
              id v12 = [v11 displayName];
LABEL_14:
              id v19 = v12;

              if (v19)
              {
                uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                uint64_t v22 = v21;

                sub_1005057FC((uint64_t *)&unk_101672B40);
                uint64_t v23 = swift_allocObject();
                *(_OWORD *)(v23 + 16) = xmmword_10117E810;
                *(void *)(v23 + 56) = &type metadata for String;
                *(void *)(v23 + 64) = sub_100528BE4();
                *(void *)(v23 + 32) = v20;
                *(void *)(v23 + 40) = v22;
LABEL_21:
                id v19 = (id)String.init(format:_:)();
              }
              goto LABEL_22;
            }
            id v10 = *(id *)(v4 + 32);
          }
          uint64_t v11 = v10;
          sub_100DE04FC(v4, a2, 0);
          id v12 = [v11 displayName];
          goto LABEL_14;
        }
      }
      else if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_4;
      }
      uint64_t v39 = v4;
      uint64_t v40 = a2;
      unsigned __int8 v41 = 0;
LABEL_31:
      sub_100DE04FC(v39, v40, v41);
      goto LABEL_58;
  }
}

id sub_100DE0220()
{
  return sub_100DDF47C(*(void *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event), *(void *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event + 8), *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event + 16));
}

id sub_100DE0238()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi__cachedAccessoryView;
  BOOL v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi__cachedAccessoryView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi__cachedAccessoryView);
  }
  else
  {
    int v4 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event + 16);
    if ((v4 - 2) >= 3)
    {
      if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event + 16))
      {
        uint64_t v5 = 0xD000000000000015;
        uint64_t v6 = 0x800000010128B3E0;
        LOBYTE(v4) = 1;
      }
      else
      {
        uint64_t v6 = 0x800000010128B400;
        uint64_t v5 = 0xD000000000000013;
      }
    }
    else
    {
      uint64_t v5 = 0xD000000000000019;
      uint64_t v6 = 0x800000010124B160;
    }
    id v7 = sub_100DE06E0(v5, v6, *(void *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event), *(void *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event + 8), v4);
    NSString v8 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v7;
    id v3 = v7;

    BOOL v2 = 0;
  }
  id v9 = v2;
  return v3;
}

void sub_100DE0318()
{
  sub_100DE04FC(*(void *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event), *(void *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event + 8), *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event + 16));
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi__cachedAccessoryView);
}

id sub_100DE0360()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCollaboratorStatusHUDController_mi();
  [super dealloc];
}

uint64_t sub_100DE03EC()
{
  return type metadata accessor for CRLCollaboratorStatusHUDController_mi();
}

uint64_t type metadata accessor for CRLCollaboratorStatusHUDController_mi()
{
  uint64_t result = qword_10169C7C0;
  if (!qword_10169C7C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100DE0440()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100DE0490(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 >= 4u)
  {
    if (a3 != 4) {
      return result;
    }
    swift_bridgeObjectRetain();
  }

  return swift_bridgeObjectRetain();
}

uint64_t destroy for CRLCollaboratorListChangedEvent(uint64_t a1)
{
  return sub_100DE04FC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_100DE04FC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 >= 4u)
  {
    if (a3 != 4) {
      return result;
    }
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t _s8Freeform31CRLCollaboratorListChangedEventOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_100DE0490(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CRLCollaboratorListChangedEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_100DE0490(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_100DE04FC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CRLCollaboratorListChangedEvent(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_100DE04FC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLCollaboratorListChangedEvent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLCollaboratorListChangedEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCollaboratorListChangedEvent()
{
  return &type metadata for CRLCollaboratorListChangedEvent;
}

id sub_100DE06E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  swift_bridgeObjectRetain();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v7 = self;
  id v8 = [v7 imageNamed:v6];

  if (!v8)
  {
    swift_bridgeObjectRetain();
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v8 = [v7 systemImageNamed:v9];
  }
  id v10 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 22.0, 22.0];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v10 setContentMode:4];
  [v10 setImage:v8];
  id v11 = [self *(&off_10152DB38)[a5]];
  id v12 = [self configurationWithHierarchicalColor:v11];
  [v10 setPreferredSymbolConfiguration:v12];

  return v10;
}

uint64_t sub_100DE0890()
{
  if (*(void *)&v0[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType] >= 3uLL)
  {
    type metadata accessor for CRLiOSPencilModeType(0);
    uint64_t v5 = v0;
    uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    __break(1u);
  }
  else
  {
    uint64_t v8 = *(void *)&v0[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType];
    char v9 = 0;
    id v10 = &_swiftEmptyDictionarySingleton;
    type metadata accessor for CRContext();
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    uint64_t v1 = (void *)static CRContext.newTransientContext(uniqueAssetManager:encryptionDelegate:)();
    sub_100B0C9AC((uint64_t)v6);
    if (qword_10166EE10 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for CRCodableVersion();
    sub_100556B74(v2, (uint64_t)qword_10171A2D8);
    sub_100DE1198();
    uint64_t v3 = CRValue.serializedData(_:version:)();

    return v3;
  }
  return result;
}

unint64_t sub_100DE0A70()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_100DE0AB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100DE16D0(a1, a2);
  *a3 = result;
  return result;
}

void sub_100DE0AD8(void *a1@<X8>)
{
  *a1 = &off_101503620;
}

uint64_t sub_100DE0AE8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100DE13BC();
  unint64_t v5 = sub_100DE1414();

  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100DE0B40(uint64_t a1)
{
  unint64_t v2 = sub_100DE1414();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100DE0B7C(uint64_t a1)
{
  unint64_t v2 = sub_100DE1414();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100DE0BB8(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v15 = a4;
  uint64_t v8 = sub_1005057FC(&qword_10169C858);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  id v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100DE1414();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v16 = a2;
  char v17 = a3;
  char v18 = 0;
  sub_1005057FC(&qword_10169C848);
  sub_100DE19CC(&qword_10169C860);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v4)
  {
    uint64_t v16 = v15;
    char v18 = 1;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_100DE0D8C(uint64_t a1, uint64_t a2)
{
  return sub_100DE1628(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)(a1 + 16), *(void *)a2, *(unsigned char *)(a2 + 8), *(void *)(a2 + 16));
}

uint64_t sub_100DE0DAC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100DE17BC(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_100DE0DE0(void *a1)
{
  return sub_100DE0BB8(a1, *(void *)v1, *(unsigned char *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_100DE0E04(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100DE1A34();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100DE0E58(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100DE1A34();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100DE0EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100DE1198();
  unint64_t v7 = sub_100DE1A88();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100DE0F1C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100DE1A34();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100DE0F68()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100DE0FB8()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100DE1000(uint64_t a1)
{
  unint64_t v2 = sub_100DE157C();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100DE104C(uint64_t a1, unint64_t a2)
{
  sub_100510D4C(a1, a2);
  sub_100DE1198();
  CRValue.init(serializedData:)();
  if (v5 != 255 && (v5 & 1) == 0 && v4)
  {
    if (v4 == 1) {
      unint64_t v2 = v4;
    }
    else {
      unint64_t v2 = 2;
    }
    sub_100742780(v2);
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_100DE1198()
{
  unint64_t result = qword_10169C7D0;
  if (!qword_10169C7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C7D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLiOSPencilMediatorUIStateData()
{
  return &type metadata for CRLiOSPencilMediatorUIStateData;
}

unint64_t sub_100DE1200()
{
  unint64_t result = qword_10169C7D8;
  if (!qword_10169C7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C7D8);
  }
  return result;
}

unint64_t sub_100DE125C()
{
  unint64_t result = qword_10169C7E0;
  if (!qword_10169C7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C7E0);
  }
  return result;
}

unint64_t sub_100DE12B4()
{
  unint64_t result = qword_10169C7E8;
  if (!qword_10169C7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C7E8);
  }
  return result;
}

unint64_t sub_100DE130C()
{
  unint64_t result = qword_10169C7F0;
  if (!qword_10169C7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C7F0);
  }
  return result;
}

unint64_t sub_100DE1364()
{
  unint64_t result = qword_10169C7F8;
  if (!qword_10169C7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C7F8);
  }
  return result;
}

unint64_t sub_100DE13BC()
{
  unint64_t result = qword_10169C800;
  if (!qword_10169C800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C800);
  }
  return result;
}

unint64_t sub_100DE1414()
{
  unint64_t result = qword_10169C808;
  if (!qword_10169C808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C808);
  }
  return result;
}

unint64_t sub_100DE146C()
{
  unint64_t result = qword_10169C810;
  if (!qword_10169C810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C810);
  }
  return result;
}

unint64_t sub_100DE14C4()
{
  unint64_t result = qword_10169C818;
  if (!qword_10169C818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C818);
  }
  return result;
}

unint64_t sub_100DE151C()
{
  unint64_t result = qword_10169C820;
  if (!qword_10169C820)
  {
    sub_100522D34(&qword_10169C828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C820);
  }
  return result;
}

unint64_t sub_100DE157C()
{
  unint64_t result = qword_10169C830;
  if (!qword_10169C830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C830);
  }
  return result;
}

unint64_t sub_100DE15D4()
{
  unint64_t result = qword_10169C838;
  if (!qword_10169C838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C838);
  }
  return result;
}

uint64_t sub_100DE1628(uint64_t a1, char a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6)
{
  if (a2 != -1)
  {
    if (a5 == 255) {
      goto LABEL_4;
    }
    sub_1009EA3E0();
    if ((static CRExtensible.== infix(_:_:)() & 1) == 0) {
      goto LABEL_4;
    }
LABEL_6:
    char v8 = sub_100ED60AC(a3, a6);
    return v8 & 1;
  }
  if (a5 == 255) {
    goto LABEL_6;
  }
LABEL_4:
  char v8 = 0;
  return v8 & 1;
}

uint64_t sub_100DE16D0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000010124C260
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100DE17BC(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10169C840);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  unint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100DE1414();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  sub_1005057FC(&qword_10169C848);
  char v10 = 0;
  sub_100DE19CC(&qword_10169C850);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v7 = v11;
  sub_1005057FC((uint64_t *)&unk_101687A40);
  char v10 = 1;
  sub_100557304();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return v7;
}

uint64_t sub_100DE19CC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(&qword_10169C848);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100DE1A34()
{
  unint64_t result = qword_10169C868;
  if (!qword_10169C868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C868);
  }
  return result;
}

unint64_t sub_100DE1A88()
{
  unint64_t result = qword_10169C870;
  if (!qword_10169C870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C870);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLiOSPencilMediatorUIStateData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100DE1BA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLiOSPencilMediatorUIStateData.CodingKeys()
{
  return &type metadata for CRLiOSPencilMediatorUIStateData.CodingKeys;
}

unint64_t sub_100DE1BE4()
{
  unint64_t result = qword_10169C878;
  if (!qword_10169C878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C878);
  }
  return result;
}

void sub_100DE1C38(char a1)
{
  uint64_t v2 = v1;
  unsigned int v4 = *(unsigned char **)(v1 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  if (v4)
  {
    int v5 = v4[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying];
    v4[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying] = 0;
    if (v5 == 1)
    {
      unsigned int v6 = v4;
      sub_10066E87C();
    }
  }
  sub_100DE25CC((a1 & 1) == 0);
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState) & 0xFE) == 2)
  {
    uint64_t v7 = self;
    [v7 cancelPreviousPerformRequestsWithTarget:v2 selector:"hideWithImmediately:" object:0];
  }
}

void sub_100DE1D0C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  if (v1)
  {
    id v2 = v1;
    sub_10066E2C4();
    int v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_currentKnobs);
    swift_beginAccess();
    unint64_t v4 = *v3;
    swift_bridgeObjectRetain();
    char v5 = sub_100ED5DB0((uint64_t)v2, v4);
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0)
    {
      uint64_t v7 = v2;
LABEL_22:

      return;
    }
    id v6 = [v2 rep];
    if (v6)
    {
      uint64_t v7 = v6;
      type metadata accessor for CRLUSDZRep(0);
      char v8 = (void *)swift_dynamicCastClassUnconditional();
      [v8 boundsForStandardKnobs];
      double v10 = v9;
      CGFloat v12 = v11;
      CGFloat v14 = v13;
      CGFloat v16 = v15;
      id v17 = [v8 canvas];
      if (v17)
      {
        char v18 = v17;
        [v17 viewScale];
        double v20 = v19;
      }
      else
      {
        double v20 = 1.0;
      }
      sub_1000652FC(v10, v12, v14, v16, v20);
      if (v21 >= 174.0 && v22 >= 53.0) {
        goto LABEL_21;
      }
      if (v21 >= 53.0 && v22 >= 174.0) {
        goto LABEL_21;
      }
      swift_beginAccess();
      id v25 = v2;
      uint64_t v26 = sub_100DE2C80(v3);

      if ((unint64_t)*v3 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v27 = v28;
        if (v28 >= v26) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v27 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v27 >= v26)
        {
LABEL_20:
          sub_100F4E1AC(v26, v27);
          swift_endAccess();
LABEL_21:

          goto LABEL_22;
        }
      }
      __break(1u);
    }
    __break(1u);
  }
}

void sub_100DE1F64(char a1)
{
  uint64_t v2 = OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState;
  switch(v1[OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState])
  {
    case 1:
    case 2:
      [self cancelPreviousPerformRequestsWithTarget:v1 selector:"hideWithImmediately:" object:0];
      if (a1) {
        goto LABEL_7;
      }
      break;
    case 3:
      [self cancelPreviousPerformRequestsWithTarget:v1 selector:"hideWithImmediately:" object:0];
      v1[v2] = 2;
      if (a1) {
        goto LABEL_7;
      }
      break;
    default:
      sub_100DE25CC(0);
      if (a1)
      {
LABEL_7:
        if (v1[v2] - 1 <= 1)
        {
          [v1 performSelector:"hideWithImmediately:" withObject:0 afterDelay:3.25];
          v1[v2] = 3;
        }
      }
      break;
  }
}

void sub_100DE2078(char a1)
{
  uint64_t v2 = OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState;
  if ((v1[OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState] | 4) != 4)
  {
    unint64_t v4 = (uint64_t *)&v1[OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_currentKnobs];
    swift_beginAccess();
    if ((unint64_t)*v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v24) {
        return;
      }
    }
    else if (!*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      return;
    }
    if ((v1[v2] & 0xFE) == 2) {
      [self cancelPreviousPerformRequestsWithTarget:v1 selector:"hideWithImmediately:" object:0];
    }
    v1[v2] = 4;
    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = [self animationWithKeyPath:v5];

    Class isa = Int._bridgeToObjectiveC()().super.super.isa;
    [v6 setFromValue:isa];

    Class v8 = Int._bridgeToObjectiveC()().super.super.isa;
    [v6 setToValue:v8];

    double v9 = 0.2;
    if (a1) {
      double v9 = 0.01;
    }
    [v6 setDuration:v9];
    double v10 = self;
    [v10 begin];
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v1;
    aBlock[4] = sub_100DE2C78;
    aBlock[5] = v11;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_100679958;
    aBlock[3] = &unk_10152DD78;
    CGFloat v12 = _Block_copy(aBlock);
    double v13 = v1;
    swift_release();
    [v10 setCompletionBlock:v12];
    _Block_release(v12);
    uint64_t v14 = *v4;
    if ((unint64_t)*v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      if (v15) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v15)
      {
LABEL_10:
        if (v15 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v15; ++i)
        {
          if ((v14 & 0xC000000000000001) != 0) {
            id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v17 = *(id *)(v14 + 8 * i + 32);
          }
          char v18 = v17;
          id v19 = [v17 renderable];
          if (v19)
          {
            double v20 = v19;
            [v19 setOpacity:0.0];
          }
          id v21 = [v18 renderable];
          if (v21)
          {
            double v22 = v21;
            NSString v23 = String._bridgeToObjectiveC()();
            [v22 addAnimation:v6 forKey:v23];
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    [v10 commit];
  }
}

uint64_t sub_100DE2438(uint64_t result)
{
  if (*(unsigned char *)(result + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState) == 4)
  {
    *(unsigned char *)(result + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState) = 0;
    uint64_t v1 = (unint64_t *)(result + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_currentKnobs);
    swift_beginAccess();
    unint64_t v2 = *v1;
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v3 = result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t result = swift_bridgeObjectRetain();
      if (v3)
      {
LABEL_4:
        if (v3 < 1)
        {
          __break(1u);
          return result;
        }
        for (uint64_t i = 0; i != v3; ++i)
        {
          if ((v2 & 0xC000000000000001) != 0) {
            id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v5 = *(id *)(v2 + 8 * i + 32);
          }
          id v6 = v5;
          id v7 = [v5 renderable];
          if (v7)
          {
            Class v8 = v7;
            [v7 setHidden:1];
          }
        }
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100DE25CC(char a1)
{
  uint64_t v3 = (uint64_t *)&v1[OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_currentKnobs];
  swift_beginAccess();
  if ((unint64_t)*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v26) {
      return;
    }
  }
  else if (!*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return;
  }
  if ((v1[OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState] | 4) == 4)
  {
    v1[OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState] = 1;
    NSString v4 = String._bridgeToObjectiveC()();
    id v5 = [self animationWithKeyPath:v4];

    Class isa = Int._bridgeToObjectiveC()().super.super.isa;
    [v5 setFromValue:isa];

    Class v7 = Int._bridgeToObjectiveC()().super.super.isa;
    [v5 setToValue:v7];

    double v8 = 0.2;
    if (a1) {
      double v8 = 0.01;
    }
    [v5 setDuration:v8];
    double v9 = self;
    [v9 begin];
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v1;
    aBlock[4] = sub_100DE2C48;
    aBlock[5] = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_100679958;
    aBlock[3] = &unk_10152DD28;
    uint64_t v11 = _Block_copy(aBlock);
    CGFloat v12 = v1;
    swift_release();
    [v9 setCompletionBlock:v11];
    _Block_release(v11);
    uint64_t v13 = *v3;
    if ((unint64_t)*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      if (v14) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v14)
      {
LABEL_8:
        if (v14 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v14; ++i)
        {
          if ((v13 & 0xC000000000000001) != 0) {
            id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v16 = *(id *)(v13 + 8 * i + 32);
          }
          id v17 = v16;
          id v18 = [v16 renderable];
          if (v18)
          {
            double v20 = v18;
            LODWORD(v19) = 1.0;
            [v18 setOpacity:v19];
          }
          id v21 = [v17 renderable];
          if (v21)
          {
            double v22 = v21;
            [v21 setHidden:0];
          }
          id v23 = [v17 renderable];
          if (v23)
          {
            uint64_t v24 = v23;
            NSString v25 = String._bridgeToObjectiveC()();
            [v24 addAnimation:v5 forKey:v25];
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    [v9 commit];
  }
}

id sub_100DE2A00()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUSDZKnobController();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLUSDZKnobController()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for CRLUSDZKnobController.KnobVisibilityState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100DE2B80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDZKnobController.KnobVisibilityState()
{
  return &type metadata for CRLUSDZKnobController.KnobVisibilityState;
}

unint64_t sub_100DE2BBC()
{
  unint64_t result = qword_10169C8C8;
  if (!qword_10169C8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C8C8);
  }
  return result;
}

uint64_t sub_100DE2C10()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100DE2C48()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState) = 2;
}

uint64_t sub_100DE2C60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100DE2C70()
{
  return swift_release();
}

uint64_t sub_100DE2C78()
{
  return sub_100DE2438(*(void *)(v0 + 16));
}

uint64_t sub_100DE2C80(uint64_t *a1)
{
  unint64_t v2 = *a1;
  if ((unint64_t)*a1 >> 62) {
    goto LABEL_62;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v3)
  {
LABEL_3:
    sub_10057BCD8();
    unint64_t v4 = 0;
    while (1)
    {
      id v5 = (v2 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v2 + 8 * v4 + 32);
      unsigned int v6 = v5;
      char v7 = static NSObject.== infix(_:_:)();

      if (v7) {
        break;
      }
      unint64_t v8 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        swift_bridgeObjectRetain();
        uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
        if (!v3) {
          goto LABEL_10;
        }
        goto LABEL_3;
      }
      ++v4;
      if (v8 == v3) {
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
    }
    else if (!((unint64_t)*a1 >> 62))
    {
      if (v10 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_16:
        for (unint64_t i = v4 + 5; ; ++i)
        {
          unint64_t v2 = i - 4;
          uint64_t v12 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if ((v2 & 0x8000000000000000) != 0) {
              goto LABEL_52;
            }
            if (v2 >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_53;
            }
            id v13 = *(id *)(v12 + 8 * i);
          }
          uint64_t v14 = v13;
          char v15 = static NSObject.== infix(_:_:)();

          if (v15) {
            goto LABEL_42;
          }
          if (v2 != v4) {
            break;
          }
LABEL_41:
          if (__OFADD__(v4++, 1)) {
            goto LABEL_55;
          }
LABEL_42:
          unint64_t v26 = i - 3;
          if (__OFADD__(v2, 1)) {
            goto LABEL_54;
          }
          if ((unint64_t)*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v27 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v26 == v27) {
            return v4;
          }
        }
        uint64_t v16 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v16 = *a1;
          if ((*a1 & 0xC000000000000001) == 0)
          {
LABEL_27:
            if ((v2 & 0x8000000000000000) != 0) {
              goto LABEL_58;
            }
            if (v2 >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_59;
            }
            id v18 = *(id *)(v16 + 8 * i);
            goto LABEL_30;
          }
        }
        else
        {
          if ((v4 & 0x8000000000000000) != 0) {
            goto LABEL_56;
          }
          if (v4 >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_57;
          }
          id v17 = *(id *)(v16 + 8 * v4 + 32);
          if ((v16 & 0xC000000000000001) == 0) {
            goto LABEL_27;
          }
        }
        id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v16 = *a1;
LABEL_30:
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v16;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v16 < 0 || (v16 & 0x4000000000000000) != 0)
        {
          uint64_t v16 = sub_100F68540(v16);
          *a1 = v16;
        }
        double v20 = *(void **)((v16 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20);
        *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v18;

        specialized Array._endMutation()();
        uint64_t v21 = *a1;
        int v22 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v21;
        if (!v22 || v21 < 0 || (v21 & 0x4000000000000000) != 0)
        {
          uint64_t v21 = sub_100F68540(v21);
          *a1 = v21;
        }
        if ((v2 & 0x8000000000000000) != 0) {
          goto LABEL_60;
        }
        uint64_t v23 = v21 & 0xFFFFFFFFFFFFFF8;
        if (v2 >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_61;
        }
        uint64_t v24 = *(void **)(v23 + 8 * i);
        *(void *)(v23 + 8 * i) = v17;

        specialized Array._endMutation()();
        goto LABEL_41;
      }
      return v4;
    }
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 != v29) {
      goto LABEL_16;
    }
    return v4;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  if (!((unint64_t)*a1 >> 62)) {
    return *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_100DE3040(void *a1, unsigned __int8 a2)
{
  uint64_t v3 = v2;
  int v5 = a2;
  [a1 boundsForStandardKnobs];
  double v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  id v14 = [a1 canvas];
  if (v14)
  {
    char v15 = v14;
    [v14 viewScale];
    double v17 = v16;
  }
  else
  {
    double v17 = 1.0;
  }
  sub_1000652FC(v7, v9, v11, v13, v17);
  double v20 = v18;
  double v21 = v19;
  if ((v5 | 2) != 2)
  {
    BOOL v22 = 0;
    uint64_t v23 = (void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_rotationKnob);
    uint64_t v25 = 1;
    goto LABEL_14;
  }
  BOOL v22 = v19 >= 68.0 || v18 >= 68.0;
  uint64_t v23 = (void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_rotationKnob);
  uint64_t v24 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_rotationKnob);
  uint64_t v25 = !v22;
  if (v24) {
    BOOL v26 = 1;
  }
  else {
    BOOL v26 = !v22;
  }
  if (!v26)
  {
    id v27 = objc_allocWithZone((Class)type metadata accessor for CRLUSDZRotationKnob());
    id v28 = sub_100E381E8(a1);
    uint64_t v29 = *v23;
    *uint64_t v23 = v28;

    BOOL v22 = 1;
LABEL_14:
    uint64_t v24 = *v23;
  }
  if (v24)
  {
    id v30 = [v24 renderable];
    if (v30)
    {
      Swift::String v31 = v30;
      [v30 setHidden:v25];
    }
  }
  uint64_t v32 = *v23;
  if (*v23)
  {
    int v33 = v5 == 3;
    int v34 = v32[OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isError];
    v32[OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isError] = v33;
    if (v33 != v34)
    {
      NSString v35 = v32;
      sub_100E38548();
    }
  }
  if ((v5 - 1) > 1) {
    goto LABEL_28;
  }
  if (v20 < 174.0 || v21 < 53.0)
  {
    if (v20 >= 53.0)
    {
      BOOL v39 = v21 >= 174.0;
      goto LABEL_30;
    }
LABEL_28:
    BOOL v39 = 0;
    uint64_t v37 = (void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
    uint64_t v38 = 1;
LABEL_33:
    uint64_t v40 = *v37;
    goto LABEL_34;
  }
  BOOL v39 = 1;
LABEL_30:
  uint64_t v37 = (void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  uint64_t v40 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  uint64_t v38 = !v39;
  if (!v40 && v39)
  {
    id v41 = objc_allocWithZone((Class)type metadata accessor for CRLUSDZPlayPauseKnob());
    id v42 = sub_10066E0F8(a1);
    id v43 = *v37;
    *uint64_t v37 = v42;

    BOOL v39 = 1;
    goto LABEL_33;
  }
LABEL_34:
  if (v40)
  {
    id v44 = [v40 renderable];
    if (v44)
    {
      NSString v45 = v44;
      [v44 setHidden:v38];
    }
  }
  uint64_t v46 = v3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_currentKnobs;
  swift_beginAccess();
  *(void *)uint64_t v46 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v47 = *v23;
  if (*v23 && v22)
  {
    swift_beginAccess();
    id v48 = v47;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v46 & 0xFFFFFFFFFFFFFF8)
                                                                                 + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
  }
  uint64_t v49 = *v37;
  if (*v37 && v39)
  {
    swift_beginAccess();
    id v50 = v49;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v46 & 0xFFFFFFFFFFFFFF8)
                                                                                 + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    sub_100DE1D0C();
  }
  return *(void *)v46;
}

void sub_100DE3454(uint64_t a1, double a2, double a3)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  id v24 = (id)Strong;
  id v7 = *(id *)(a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_logger);
  sub_100DE3960((uint64_t *)&v25);

  double v8 = v25;
  if (v25)
  {
    uint64_t v9 = OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanFromKeyboard;
    double v10 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanFromKeyboard);
    if (!v10
      || [v10 gestureState] != 1
      && ((CGFloat v11 = *(void **)(a1 + v9)) == 0 || [v11 gestureState] != 2))
    {
      double v12 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v12)
      {
        unsigned __int8 v13 = [v12 wantsVisibleKeyboard];
        swift_unknownObjectRelease();
        if (v13)
        {
          id v14 = *(void **)(a1 + v9);
          if (!v14) {
            goto LABEL_12;
          }
          if (![v14 gestureState])
          {
            char v15 = *(void **)(a1 + v9);
            if (v15)
            {
LABEL_13:
              [v15 setTargetRep:v8, v24];
              char v15 = *(void **)(a1 + v9);
LABEL_14:
              [v15 gestureBeganAtLocation:a2, a3];
              double v21 = *(void **)(a1 + v9);
              if (!v21 || [v21 gestureState] != 5)
              {

                uint64_t v23 = a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanLastKnownPoint;
                *(double *)uint64_t v23 = a2;
                *(double *)(v23 + 8) = a3;
                *(unsigned char *)(v23 + 16) = 0;
                return;
              }
              id v22 = *(id *)(a1 + v9);
              [v22 reset];

              goto LABEL_17;
            }
LABEL_12:
            id v16 = [v24 gestureDispatcher];
            static String._unconditionallyBridgeFromObjectiveC(_:)();
            id v17 = objc_allocWithZone((Class)CRLBaseGesture);
            NSString v18 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v19 = [v17 initWithGestureDispatcher:v16 gestureKind:v18];

            double v20 = *(void **)(a1 + v9);
            *(void *)(a1 + v9) = v19;

            char v15 = *(void **)(a1 + v9);
            if (!v15) {
              goto LABEL_14;
            }
            goto LABEL_13;
          }
        }
      }
    }
LABEL_17:
  }
}

void sub_100DE36C4(uint64_t a1, double a2, double a3)
{
  id v6 = *(id *)(a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_logger);
  sub_100DE3960((uint64_t *)&v16);

  id v15 = v16;
  if (v16)
  {
    uint64_t v7 = OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanFromKeyboard;
    double v8 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanFromKeyboard);
    if (v8) {
      [v8 setTargetRep:v16];
    }
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong
      && (unsigned __int8 v10 = [Strong wantsVisibleKeyboard],
          swift_unknownObjectRelease(),
          (v10 & 1) != 0)
      && (CGFloat v11 = *(void **)(a1 + v7)) != 0
      && ([v11 gestureState] == 1
       || (double v12 = *(void **)(a1 + v7)) != 0 && [v12 gestureState] == 2))
    {
      id v13 = *(id *)(a1 + v7);
      [v13 gestureMovedToLocation:a2, a3];

      uint64_t v14 = a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanLastKnownPoint;
      *(double *)uint64_t v14 = a2;
      *(double *)(v14 + 8) = a3;
      *(unsigned char *)(v14 + 16) = 0;
    }
    else
    {
    }
  }
}

void sub_100DE382C(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanFromKeyboard;
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanFromKeyboard);
  if (v3)
  {
    if ([v3 gestureState] == 1
      || (unint64_t v4 = *(void **)(a1 + v2)) != 0 && [v4 gestureState] == 2)
    {
      int v5 = *(void **)(a1 + v2);
      if (v5)
      {
        if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanLastKnownPoint + 16))
        {
          __break(1u);
          return;
        }
        [v5 gestureEndedAtLocation:*(double *)(a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanLastKnownPoint), *(double *)(a1 + OBJC_IVAR____TtC8Freeform17CRLFloatingCursor_twoFingerPanLastKnownPoint + 8)];
        int v5 = *(void **)(a1 + v2);
      }
      [v5 reset];
      id v6 = *(void **)(a1 + v2);
      if (v6)
      {
        id v7 = [v6 gestureDelegate];
        if (v7) {
          [v7 didReset:*(void *)(a1 + v2)];
        }
        id v8 = *(id *)(a1 + v2);
      }
      else
      {
        id v8 = 0;
      }
      *(void *)(a1 + v2) = 0;
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_100DE3960@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (!result) {
    goto LABEL_14;
  }
  uint64_t v3 = (void *)result;
  if (!swift_unknownObjectWeakLoadStrong()) {
    goto LABEL_12;
  }
  type metadata accessor for CRLWPEditor();
  uint64_t result = swift_dynamicCastClass();
  if (!result)
  {
    swift_unknownObjectRelease();
LABEL_12:

    goto LABEL_13;
  }
  if (*(void *)(*(void *)(result + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
  {
    id v4 = [v3 repsForInfo:];
    sub_10055A764();
    sub_10055A7A4();
    uint64_t v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    if ((v5 & 0xC000000000000001) != 0)
    {
      if (__CocoaSet.count.getter() == 1) {
        goto LABEL_8;
      }
    }
    else if (*(void *)(v5 + 16) == 1)
    {
LABEL_8:
      id v6 = (void *)sub_10099985C(v5);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      if (v6)
      {
        self;
        uint64_t result = swift_dynamicCastObjCClass();
        if (result)
        {
LABEL_14:
          *a1 = result;
          return result;
        }
      }
LABEL_13:
      uint64_t result = 0;
      goto LABEL_14;
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"repForFloatingCursor()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLFloatingCursor.swift", 83, 2, 94, (uint64_t)"Should only ever be one editing text rep.", 41, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"repForFloatingCursor()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLFloatingCursor.swift", 83, 2, 94);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

id sub_100DE3BA4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLFloatingCursor();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLFloatingCursor()
{
  return self;
}

uint64_t sub_100DE3C68@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for CRLCanvasLayerAnimation();
  sub_1005498A4(v3 + *(int *)(v6 + 48), (uint64_t)v11);
  sub_1005057FC((uint64_t *)&unk_101683FD0);
  if (swift_dynamicCast())
  {
    long long v13 = v10[0];
    memcpy(__dst, (char *)&v10[1] + 8, sizeof(__dst));
    sub_100DE435C(v3, a1);
    *((void *)&v10[1] + 1) = &type metadata for CRLSpringLayerAnimation.Def;
    *(void *)&v10[2] = sub_100860DAC();
    uint64_t v7 = swift_allocObject();
    *(void *)&v10[0] = v7;
    *(_OWORD *)(v7 + 16) = v13;
    *(double *)(v7 + 32) = a2;
    memcpy((void *)(v7 + 40), __dst, 0x124uLL);
    uint64_t v8 = a1 + *(int *)(v6 + 48);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v8);
    return sub_10053974C(v10, v8);
  }
  else
  {
    memset(v10, 0, 304);
    *(void *)&v10[19] = 1;
    DWORD2(v10[19]) = 0;
    sub_100DE43C0((uint64_t)v10);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100DE3DFC@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for CRLCanvasLayerAnimation();
  sub_1005498A4(v3 + *(int *)(v6 + 48), (uint64_t)v13);
  sub_1005057FC((uint64_t *)&unk_101683FD0);
  if (swift_dynamicCast())
  {
    long long v15 = v10;
    uint64_t v16 = v11;
    memcpy(__dst, v12, sizeof(__dst));
    sub_100DE435C(v3, a1);
    *((void *)&v11 + 1) = &type metadata for CRLSpringLayerAnimation.Def;
    *(void *)&v12[0] = sub_100860DAC();
    uint64_t v7 = swift_allocObject();
    *(void *)&long long v10 = v7;
    *(_OWORD *)(v7 + 16) = v15;
    *(void *)(v7 + 32) = v16;
    *(double *)(v7 + 40) = a2;
    memcpy((void *)(v7 + 48), __dst, 0x11CuLL);
    uint64_t v8 = a1 + *(int *)(v6 + 48);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v8);
    return sub_10053974C(&v10, v8);
  }
  else
  {
    long long v11 = 0u;
    memset(v12, 0, 272);
    long long v10 = 0u;
    *(void *)&v12[17] = 1;
    DWORD2(v12[17]) = 0;
    sub_100DE43C0((uint64_t)&v10);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100DE3FA0@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for CRLCanvasLayerAnimation();
  sub_1005498A4(v3 + *(int *)(v6 + 48), (uint64_t)v11);
  sub_1005057FC((uint64_t *)&unk_101683FD0);
  if (swift_dynamicCast())
  {
    memcpy(__dst, (char *)v10 + 8, sizeof(__dst));
    sub_100DE435C(v3, a1);
    *((void *)&v10[1] + 1) = &type metadata for CRLSpringLayerAnimation.Def;
    *(void *)&v10[2] = sub_100860DAC();
    uint64_t v7 = swift_allocObject();
    *(void *)&v10[0] = v7;
    *(double *)(v7 + 16) = a2;
    memcpy((void *)(v7 + 24), __dst, 0x134uLL);
    uint64_t v8 = a1 + *(int *)(v6 + 48);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v8);
    return sub_10053974C(v10, v8);
  }
  else
  {
    memset(v10, 0, 304);
    *(void *)&v10[19] = 1;
    DWORD2(v10[19]) = 0;
    sub_100DE43C0((uint64_t)v10);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100DE4124@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for CRLCanvasLayerAnimation();
  sub_1005498A4(v3 + *(int *)(v6 + 48), (uint64_t)v13);
  sub_1005057FC((uint64_t *)&unk_101683FD0);
  if (swift_dynamicCast())
  {
    uint64_t v7 = v11;
    memcpy(__dst, v12, sizeof(__dst));
    sub_100DE435C(v3, a1);
    *((void *)&v12[0] + 1) = &type metadata for CRLSpringLayerAnimation.Def;
    *(void *)&v12[1] = sub_100860DAC();
    uint64_t v8 = swift_allocObject();
    *(void *)&long long v11 = v8;
    *(void *)(v8 + 16) = v7;
    *(double *)(v8 + 24) = a2;
    memcpy((void *)(v8 + 32), __dst, 0x12CuLL);
    uint64_t v9 = a1 + *(int *)(v6 + 48);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v9);
    return sub_10053974C(&v11, v9);
  }
  else
  {
    memset(v12, 0, 288);
    long long v11 = 0u;
    *(void *)&_OWORD v12[18] = 1;
    DWORD2(v12[18]) = 0;
    sub_100DE43C0((uint64_t)&v11);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100DE42AC@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  sub_100DE435C(v2, a1);
  uint64_t v5 = a1 + *(int *)(type metadata accessor for CRLCanvasLayerAnimation() + 48);
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = *(void *)(v5 + 32);
  sub_1005231B4(v5, v6);
  uint64_t v8 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v7 + 32) + 24))(v11, v6);
  *uint64_t v9 = *v9 + a2;
  return v8(v11, 0);
}

uint64_t sub_100DE435C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLCanvasLayerAnimationProvider();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100DE43C0(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10167C0C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100DE4420()
{
  uint64_t v1 = (id *)(v0 + 56);
  switch(*(unsigned char *)(v0 + 312))
  {
    case 0:
    case 0x22:
      if (*(void *)(v0 + 80)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      if (*(void *)(v0 + 112)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 88);
      }
      break;
    case 1:
    case 0x23:
      if (*(void *)(v0 + 80)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      break;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:

      break;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 0x21:
    case 0x25:
      goto LABEL_17;
    case 0x3A:

      break;
    case 0x3F:

      if (*(void *)(v0 + 176)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 152);
      }
      goto LABEL_17;
    case 0x40:

      if (*(void *)(v0 + 144)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 120);
      }
LABEL_17:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, 332, 7);
}

uint64_t sub_100DE4670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[20] = a5;
  v6[21] = a6;
  v6[18] = a3;
  v6[19] = a4;
  v6[16] = a1;
  v6[17] = a2;
  type metadata accessor for UUID();
  v6[22] = swift_task_alloc();
  return _swift_task_switch(sub_100DE4708, 0, 0);
}

uint64_t sub_100DE4708()
{
  uint64_t v2 = (void *)v0[21];
  uint64_t v1 = v0[22];
  uint64_t v3 = v0[16];
  UUID.init()();
  sub_100753370(v1, 0, 0xE000000000000000, v3);
  id v4 = sub_100DE787C(v3);
  v0[23] = v4;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_100DE4844;
  uint64_t v5 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10074AC54;
  v0[13] = &unk_10152DE58;
  v0[14] = v5;
  [v2 saveRecordZone:v4 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100DE4844()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 192) = v1;
  if (v1) {
    uint64_t v2 = sub_100DE4C04;
  }
  else {
    uint64_t v2 = sub_100DE4954;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100DE4954()
{
  long long v4 = *(_OWORD *)(v0 + 144);
  int8x16_t v5 = *(int8x16_t *)(v0 + 128);
  long long v6 = *(_OWORD *)(v0 + 160);

  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 200) = v1;
  *(_OWORD *)(v1 + 16) = v4;
  *(_OWORD *)(v1 + 32) = v6;
  *(int8x16_t *)(v1 + 48) = vextq_s8(v5, v5, 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 208) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100DE4A64;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v2, (char *)&type metadata for () + 8, (char *)&type metadata for () + 8, 0, 0, &unk_10169C930, v1, (char *)&type metadata for () + 8);
}

uint64_t sub_100DE4A64()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100DE4C88;
  }
  else {
    uint64_t v2 = sub_100DE4B98;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100DE4B98()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100DE4C04()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v2 = v0[16];
  swift_willThrow();

  sub_100510028(v2);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100DE4C88()
{
  uint64_t v1 = *(void *)(v0 + 128);

  sub_100510028(v1);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100DE4D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[126] = a8;
  v8[125] = a7;
  v8[124] = a6;
  v8[123] = a5;
  v8[122] = a4;
  v8[121] = a3;
  v8[120] = a2;
  sub_1005057FC(&qword_101672BB0);
  v8[127] = swift_task_alloc();
  v8[128] = swift_task_alloc();
  return _swift_task_switch(sub_100DE4DBC, 0, 0);
}

uint64_t sub_100DE4DBC()
{
  uint64_t v1 = *(void *)(v0 + 1000);
  uint64_t v2 = *(void *)(v0 + 968);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  sub_1005057FC(&qword_10169C938);
  OS_dispatch_queue.sync<A>(execute:)();
  swift_task_dealloc();
  uint64_t v4 = *(void *)(v0 + 952);
  *(void *)(v0 + 1032) = v4;
  if (!v4)
  {
    sub_100DE7B40();
    swift_allocError();
    *double v12 = 1;
    swift_willThrow();
    goto LABEL_4;
  }
  uint64_t v5 = *(void *)(v0 + 1000);
  uint64_t v6 = *(void *)(v0 + 968);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  sub_1005057FC(&qword_1016997B8);
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v8 = *(void *)(v0 + 1000);
  uint64_t v9 = *(void *)(v0 + 968);
  swift_task_dealloc();
  unint64_t v10 = *(void *)(v0 + 944);
  uint64_t v11 = swift_task_alloc();
  *(void *)(v11 + 16) = v9;
  *(void *)(v11 + 24) = v8;
  sub_1005057FC(&qword_10169C948);
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v15 = *(void *)(v0 + 1008);
  swift_task_dealloc();
  unint64_t v16 = *(void *)(v0 + 936);
  *(void *)(v0 + 928) = _swiftEmptyArrayStorage;
  uint64_t v17 = swift_retain();
  id v18 = sub_1008F1400(v17, (uint64_t)&off_10152B020, v15);
  swift_release();
  if (v18)
  {
    unint64_t v188 = v16;
    unint64_t v183 = v18;
    if (v10 >> 62) {
      goto LABEL_58;
    }
    uint64_t v19 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      double v20 = (unint64_t *)(v0 + 928);
      if (!v19) {
        break;
      }
      uint64_t v21 = 0;
      unint64_t v185 = (void *)(v0 + 640);
      uint64_t v22 = v0 + 600;
      uint64_t v184 = *(void *)(v0 + 976);
      uint64_t v23 = *(void *)(v0 + 968);
      uint64_t v24 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
      uint64_t v214 = *(void *)(v23 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock);
      unint64_t v208 = v10 & 0xC000000000000001;
      unint64_t v203 = v10;
      uint64_t v192 = v23;
      uint64_t v195 = v19;
      uint64_t v197 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
      while (1)
      {
        if (v208)
        {
          uint64_t v33 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v33 = *(void *)(v10 + 8 * v21 + 32);
          swift_retain();
        }
        uint64_t v212 = v21 + 1;
        if (__OFADD__(v21, 1)) {
          break;
        }
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v214 + 16));
        int v34 = *(void **)(v23 + v24);
        if (v34)
        {
          id v35 = *(id *)(v23 + v24);
        }
        else
        {
          uint64_t v36 = v24;
          uint64_t v37 = *(void **)(v0 + 968);
          id v38 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
          id v39 = v37;
          id v40 = sub_100EAFDE4((uint64_t)v39);

          id v41 = *(void **)(v23 + v36);
          *(void *)(v23 + v36) = v40;
          id v35 = v40;

          int v34 = 0;
        }
        id v42 = *(os_unfair_lock_s **)(v214 + 16);
        id v43 = v34;
        os_unfair_lock_unlock(v42);
        LOBYTE(v42) = sub_100EA58A4(v33);

        if (v42)
        {
          if (qword_10166FA90 != -1) {
            swift_once();
          }
          swift_beginAccess();
          uint64_t v25 = (void *)static OS_os_log.crlSendACopy;
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_10117E810;
          id v27 = v25;
          uint64_t v28 = UUID.uuidString.getter();
          uint64_t v30 = v29;
          *(void *)(inited + 56) = &type metadata for String;
          *(void *)(inited + 64) = sub_100528BE4();
          *(void *)(inited + 32) = v28;
          *(void *)(inited + 40) = v30;
          uint64_t v31 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v27, (uint64_t)&_mh_execute_header, v31, (uint64_t)"Skipping item %{public}@ due to checkIfAssetIsStillDownloading being true", 73, 2, inited);
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();
          double v20 = (unint64_t *)(v0 + 928);
          uint64_t v23 = v192;
          uint64_t v32 = v195;
        }
        else
        {
          *(void *)(v0 + 880) = v33;
          *(void *)(v0 + 888) = &off_10152B158;
          swift_retain_n();
          sub_1005057FC((uint64_t *)&unk_10167BE80);
          sub_1005057FC(&qword_101687010);
          if (!swift_dynamicCast())
          {
            *(void *)(v22 + 32) = 0;
            *(_OWORD *)uint64_t v22 = 0u;
            *(_OWORD *)(v22 + 16) = 0u;
            sub_100522F00(v22, &qword_101687018);
            if (qword_10166FB88 != -1) {
              swift_once();
            }
            swift_beginAccess();
            NSString v59 = (void *)static OS_os_log.dataSync;
            sub_1005057FC((uint64_t *)&unk_101672B40);
            uint64_t v60 = swift_initStackObject();
            *(_OWORD *)(v60 + 16) = xmmword_10117E810;
            swift_getObjectType();
            id v61 = v59;
            uint64_t v62 = _typeName(_:qualified:)();
            uint64_t v64 = v63;
            *(void *)(v60 + 56) = &type metadata for String;
            *(void *)(v60 + 64) = sub_100528BE4();
            *(void *)(v60 + 32) = v62;
            *(void *)(v60 + 40) = v64;
            uint64_t v65 = static os_log_type_t.error.getter();
            sub_100BAC898((uint64_t)v61, (uint64_t)&_mh_execute_header, v65, (uint64_t)"CRLBoardLogicProvider cannot create a cloud record from an unknown local record. Local Record: %{public}@", 105, 2, v60);
            swift_setDeallocating();
            sub_1005057FC(&qword_101672B50);
            swift_arrayDestroy();

            sub_1008F16B8();
            swift_allocError();
            *id v66 = 1;
            swift_willThrow();
            swift_bridgeObjectRelease();
            swift_release_n();

            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
          uint64_t v44 = *(void *)(v0 + 1008);
          sub_10053974C((long long *)v22, (uint64_t)v185);
          uint64_t v45 = *(void *)(v0 + 664);
          uint64_t v46 = *(void *)(v0 + 672);
          sub_10050F848(v185, v45);
          uint64_t v47 = (void *)(*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v46 + 8))(*(void *)(v184 + 16), v44, v45, v46);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v185);
          swift_release();
          if (!v47)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (qword_10166FA90 != -1) {
              swift_once();
            }
            swift_beginAccess();
            id v67 = (void *)static OS_os_log.crlSendACopy;
            sub_1005057FC((uint64_t *)&unk_101672B40);
            uint64_t v68 = swift_initStackObject();
            *(_OWORD *)(v68 + 16) = xmmword_10117E810;
            id v69 = v67;
            uint64_t v70 = UUID.uuidString.getter();
            uint64_t v72 = v71;
            *(void *)(v68 + 56) = &type metadata for String;
            *(void *)(v68 + 64) = sub_100528BE4();
            *(void *)(v68 + 32) = v70;
            *(void *)(v68 + 40) = v72;
            uint64_t v73 = static os_log_type_t.error.getter();
            sub_100BAC898((uint64_t)v69, (uint64_t)&_mh_execute_header, v73, (uint64_t)"Upload failed to create board item %{public}@", 45, 2, v68);
            swift_setDeallocating();
            sub_1005057FC(&qword_101672B50);
            swift_arrayDestroy();

            sub_100DE7B40();
            swift_allocError();
            *uint64_t v74 = 4;
            swift_willThrow();
LABEL_55:
            swift_release();

            swift_release();
            goto LABEL_4;
          }
          id v27 = v47;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          uint64_t v23 = v192;
          if (*(void *)((*v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          uint64_t v32 = v195;
        }

        swift_release();
        ++v21;
        unint64_t v10 = v203;
        uint64_t v22 = v0 + 600;
        uint64_t v24 = v197;
        if (v212 == v32) {
          goto LABEL_29;
        }
      }
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      swift_bridgeObjectRetain();
      uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
LABEL_29:
    swift_bridgeObjectRelease();
    unint64_t v48 = v188;
    if (v188 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v10)
      {
LABEL_31:
        uint64_t v49 = 0;
        BOOL v209 = (void *)(v0 + 520);
        uint64_t v50 = v0 + 560;
        uint64_t v204 = *(void *)(v0 + 976);
        while (1)
        {
          if ((v188 & 0xC000000000000001) != 0)
          {
            uint64_t v51 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v51 = *(void *)(v48 + 8 * v49 + 32);
            swift_retain();
          }
          uint64_t v52 = v49 + 1;
          if (__OFADD__(v49, 1)) {
            goto LABEL_57;
          }
          *(void *)(v0 + 896) = v51;
          *(void *)(v0 + 904) = &off_10152AF08;
          swift_retain_n();
          sub_1005057FC((uint64_t *)&unk_10167BE80);
          sub_1005057FC(&qword_101687010);
          if (!swift_dynamicCast()) {
            break;
          }
          uint64_t v53 = *(void *)(v0 + 1008);
          sub_10053974C((long long *)v50, (uint64_t)v209);
          uint64_t v54 = *(void *)(v0 + 544);
          uint64_t v55 = *(void *)(v0 + 552);
          sub_10050F848(v209, v54);
          uint64_t v56 = (void *)(*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v55 + 8))(*(void *)(v204 + 16), v53, v54, v55);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v209);
          swift_release();
          if (!v56)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (qword_10166FA90 != -1) {
              swift_once();
            }
            swift_beginAccess();
            id v83 = (id)static OS_os_log.crlSendACopy;
            uint64_t v84 = static os_log_type_t.error.getter();
            sub_100BAC898((uint64_t)v83, (uint64_t)&_mh_execute_header, v84, (uint64_t)"Upload failed to create cloud record for freehand drawing item records.", 71, 2, (uint64_t)_swiftEmptyArrayStorage);

            sub_100DE7B40();
            swift_allocError();
            *Swift::String v85 = 5;
            swift_willThrow();
            goto LABEL_55;
          }
          id v57 = v56;
          double v20 = (unint64_t *)(v0 + 928);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_release();

          ++v49;
          unint64_t v48 = v188;
          uint64_t v50 = v0 + 560;
          if (v52 == v10) {
            goto LABEL_60;
          }
        }
        *(void *)(v50 + 32) = 0;
        *(_OWORD *)uint64_t v50 = 0u;
        *(_OWORD *)(v50 + 16) = 0u;
        sub_100522F00(v50, &qword_101687018);
        if (qword_10166FB88 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v75 = (void *)static OS_os_log.dataSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v76 = swift_initStackObject();
        *(_OWORD *)(v76 + 16) = xmmword_10117E810;
        swift_getObjectType();
        id v77 = v75;
        uint64_t v78 = _typeName(_:qualified:)();
        uint64_t v80 = v79;
        *(void *)(v76 + 56) = &type metadata for String;
        *(void *)(v76 + 64) = sub_100528BE4();
        *(void *)(v76 + 32) = v78;
        *(void *)(v76 + 40) = v80;
        uint64_t v81 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v77, (uint64_t)&_mh_execute_header, v81, (uint64_t)"CRLBoardLogicProvider cannot create a cloud record from an unknown local record. Local Record: %{public}@", 105, 2, v76);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        sub_1008F16B8();
        swift_allocError();
        *uint64_t v82 = 1;
        swift_willThrow();
        swift_release_n();

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_4:
        swift_task_dealloc();
        swift_task_dealloc();
        long long v13 = *(uint64_t (**)(void))(v0 + 8);
        return v13();
      }
    }
    else
    {
      unint64_t v10 = *(void *)((v188 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v10) {
        goto LABEL_31;
      }
    }
LABEL_60:
    swift_bridgeObjectRelease();
    id v86 = v183;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    unint64_t v58 = *v20;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v58 = (unint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v87 = v58 >> 62;
  if (v58 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v88 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v88 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (qword_10166FA90 != -1) {
    swift_once();
  }
  swift_beginAccess();
  char v89 = (void *)static OS_os_log.crlSendACopy;
  *(void *)(v0 + 1040) = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v90 = swift_initStackObject();
  *(_OWORD *)(v90 + 16) = xmmword_10117E810;
  *(void *)(v0 + 920) = v88;
  id v91 = v89;
  uint64_t v92 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v94 = v93;
  *(void *)(v90 + 56) = &type metadata for String;
  unint64_t v95 = sub_100528BE4();
  *(void *)(v0 + 1048) = v95;
  unint64_t v186 = v95;
  *(void *)(v90 + 64) = v95;
  *(void *)(v90 + 32) = v92;
  *(void *)(v90 + 40) = v94;
  uint64_t v96 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v91, (uint64_t)&_mh_execute_header, v96, (uint64_t)"Starting to upload [%{public}@] records to public publicDatabase", 64, 2, v90);
  swift_setDeallocating();
  *(void *)(v0 + 1056) = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  if (v87)
  {
    swift_bridgeObjectRetain();
    uint64_t v97 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v97 >= 1)
    {
LABEL_69:
      uint64_t v98 = 0;
      int64_t v99 = 0;
      do
      {
        ++v99;
        uint64_t v100 = v98 + 50;
        if (__OFADD__(v98, 50)) {
          break;
        }
        v98 += 50;
      }
      while (v100 < v97);
      goto LABEL_76;
    }
  }
  else
  {
    uint64_t v97 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v97 >= 1) {
      goto LABEL_69;
    }
  }
  int64_t v99 = 0;
LABEL_76:
  sub_1006BBBC4(0, v99, 0);
  uint64_t v198 = v97;
  if (!v99)
  {
    if (v97 < 1) {
      goto LABEL_200;
    }
    uint64_t v127 = 0;
    unint64_t v196 = v58 & 0xC000000000000001;
    uint64_t v103 = v58 & 0xFFFFFFFFFFFFFF8;
    goto LABEL_138;
  }
  uint64_t v101 = 0;
  uint64_t v102 = 0;
  uint64_t v103 = v58 & 0xFFFFFFFFFFFFFF8;
  unint64_t v196 = v58 & 0xC000000000000001;
  while (v102 < v97)
  {
    if (__OFADD__(v102, 50)) {
      uint64_t v104 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v104 = v102 + 50;
    }
    if (v102 > 0x7FFFFFFFFFFFFFCDLL) {
      goto LABEL_214;
    }
    if (v97 >= v102 + 50) {
      uint64_t v97 = v102 + 50;
    }
    if (v97 < v102) {
      goto LABEL_215;
    }
    uint64_t v201 = v104;
    uint64_t v205 = v102 + 50;
    if (v87)
    {
      swift_bridgeObjectRetain();
      uint64_t v105 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v105 = *(void *)(v103 + 16);
    }
    if (v105 < v102) {
      goto LABEL_216;
    }
    if (v102 < 0) {
      goto LABEL_217;
    }
    if (v87)
    {
      swift_bridgeObjectRetain();
      uint64_t v106 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v106 = *(void *)(v103 + 16);
    }
    if (v106 < v97) {
      goto LABEL_218;
    }
    if (v196 && v102 != v97)
    {
      if (v102 >= (unint64_t)v97) {
        goto LABEL_224;
      }
      sub_100DE7BCC();
      Swift::Int v107 = v102;
      do
      {
        Swift::Int v108 = v107 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v107);
        Swift::Int v107 = v108;
      }
      while (v97 != v108);
    }
    if (v87)
    {
      swift_bridgeObjectRetain();
      uint64_t v97 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v111 = v119;
      uint64_t v102 = v120;
      unint64_t v109 = v121;
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v200 = v101;
      if ((v109 & 1) == 0)
      {
LABEL_112:
        unint64_t v114 = v109 >> 1;
        uint64_t v103 = (v109 >> 1) - v102;
        if (__OFSUB__(v109 >> 1, v102))
        {
LABEL_133:
          __break(1u);
LABEL_134:
          if (v110 >= v97) {
            goto LABEL_200;
          }
          uint64_t v127 = v205;
LABEL_138:
          uint64_t v210 = v103;
          uint64_t v191 = v103 + 32;
          uint64_t v128 = v127 + 50;
          uint64_t v129 = v127;
          uint64_t v206 = v127;
          while (2)
          {
            if (v97 >= v128) {
              uint64_t v130 = v128;
            }
            else {
              uint64_t v130 = v97;
            }
            uint64_t v131 = v129 + 50;
            BOOL v132 = __OFADD__(v129, 50);
            if (v129 > 0x7FFFFFFFFFFFFFCDLL) {
              goto LABEL_219;
            }
            if (v97 >= v131) {
              uint64_t v97 = v129 + 50;
            }
            if (v97 < v129) {
              goto LABEL_220;
            }
            if (v87)
            {
              swift_bridgeObjectRetain();
              uint64_t v133 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              uint64_t v127 = v206;
            }
            else
            {
              uint64_t v133 = *(void *)(v210 + 16);
            }
            if (v133 < v129) {
              goto LABEL_221;
            }
            if (v127 < 0) {
              goto LABEL_222;
            }
            if (v87)
            {
              swift_bridgeObjectRetain();
              uint64_t v134 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v134 = *(void *)(v210 + 16);
            }
            if (v134 < v97) {
              goto LABEL_223;
            }
            if (v196 && v129 != v97)
            {
              if (v129 >= (unint64_t)v97) {
                goto LABEL_226;
              }
              sub_100DE7BCC();
              Swift::Int v135 = v129;
              do
              {
                Swift::Int v136 = v135 + 1;
                _ArrayBuffer._typeCheckSlowPath(_:)(v135);
                Swift::Int v135 = v136;
              }
              while (v130 != v136);
            }
            if (!(v58 >> 62))
            {
              unint64_t v137 = (2 * v97) | 1;
              swift_bridgeObjectRetain();
              uint64_t v138 = v191;
              BOOL v202 = v132;
              goto LABEL_165;
            }
            swift_bridgeObjectRetain();
            _CocoaArrayWrapper.subscript.getter();
            uint64_t v138 = v147;
            uint64_t v129 = v148;
            unint64_t v137 = v149;
            uint64_t result = swift_bridgeObjectRelease();
            BOOL v202 = v132;
            if (v137)
            {
LABEL_165:
              type metadata accessor for __ContiguousArrayStorageBase();
              swift_unknownObjectRetain_n();
              unint64_t v139 = (double *)swift_dynamicCastClass();
              if (!v139)
              {
                swift_unknownObjectRelease();
                unint64_t v139 = _swiftEmptyArrayStorage;
              }
              uint64_t v140 = *((void *)v139 + 2);
              swift_release();
              unint64_t v141 = v137 >> 1;
              BOOL v142 = __OFSUB__(v137 >> 1, v129);
              uint64_t v143 = (v137 >> 1) - v129;
              char v144 = v142;
              if (v142) {
                goto LABEL_227;
              }
              if (v140 != v143)
              {
                uint64_t result = swift_unknownObjectRelease();
                if (v144) {
                  goto LABEL_199;
                }
                goto LABEL_179;
              }
              uint64_t v145 = (double *)swift_dynamicCastClass();
              char v146 = v202;
              if (!v145)
              {
                swift_unknownObjectRelease();
                uint64_t v145 = _swiftEmptyArrayStorage;
              }
            }
            else
            {
              unint64_t v141 = v137 >> 1;
              uint64_t v143 = (v137 >> 1) - v129;
              if (__OFSUB__(v137 >> 1, v129))
              {
LABEL_199:
                __break(1u);
LABEL_200:
                swift_bridgeObjectRelease();
                double v156 = _swiftEmptyArrayStorage[2];
                int64_t v157 = (void *)static OS_os_log.crlSendACopy;
                uint64_t v158 = swift_initStackObject();
                *(_OWORD *)(v158 + 16) = xmmword_10117E810;
                double v211 = v156;
                *(double *)(v0 + 912) = v156;
                id v159 = v157;
                uint64_t v160 = dispatch thunk of CustomStringConvertible.description.getter();
                *(void *)(v158 + 56) = &type metadata for String;
                *(void *)(v158 + 64) = v186;
                *(void *)(v158 + 32) = v160;
                *(void *)(v158 + 40) = v161;
                uint64_t v162 = static os_log_type_t.default.getter();
                sub_100BAC898((uint64_t)v159, (uint64_t)&_mh_execute_header, v162, (uint64_t)"Uploading as [%{public}@] chunks", 32, 2, v158);
                swift_setDeallocating();
                swift_arrayDestroy();

                double v207 = _swiftEmptyArrayStorage[2];
                if (v207 == 0.0)
                {
LABEL_210:
                  swift_release();
                  id v215 = (char *)&dword_10169C960 + dword_10169C960;
                  uint64_t v182 = (void *)swift_task_alloc();
                  *(void *)(v0 + 1064) = v182;
                  *uint64_t v182 = v0;
                  v182[1] = sub_100DE69B8;
                  return ((uint64_t (*)(void, void))v215)(0, 0);
                }
                uint64_t v163 = type metadata accessor for TaskPriority();
                uint64_t v164 = 0;
                uint64_t v165 = *(void *)(v163 - 8);
                unint64_t v199 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v165 + 56);
                unint64_t v194 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v165 + 48);
                uint64_t v187 = (void (**)(uint64_t, uint64_t))(v165 + 8);
                while (2)
                {
                  uint64_t v167 = *(void *)(v0 + 1024);
                  uint64_t v168 = *(void *)(v0 + 1016);
                  uint64_t v169 = *(void **)(v0 + 992);
                  uint64_t v170 = *(void **)(v0 + 968);
                  double v171 = _swiftEmptyArrayStorage[v164 + 4];
                  long long v213 = *(_OWORD *)(v0 + 976);
                  v199(v167, 1, 1, v163);
                  uint64_t v172 = swift_allocObject();
                  *(void *)(v172 + 16) = 0;
                  uint64_t v173 = (void *)(v172 + 16);
                  *(void *)(v172 + 24) = 0;
                  *(void *)(v172 + 32) = v170;
                  *(_OWORD *)(v172 + 40) = v213;
                  *(void *)(v172 + 56) = v169;
                  *(double *)(v172 + 64) = v171;
                  *(void *)(v172 + 72) = v164;
                  *(double *)(v172 + 80) = v211;
                  sub_100538BF8(v167, v168);
                  LODWORD(v168) = (*v194)(v168, 1, v163);
                  id v174 = v170;
                  swift_bridgeObjectRetain();
                  swift_unknownObjectRetain();
                  id v175 = v169;
                  uint64_t v176 = *(void *)(v0 + 1016);
                  if (v168 == 1)
                  {
                    sub_100522F00(*(void *)(v0 + 1016), &qword_101672BB0);
                    if (*v173) {
                      goto LABEL_205;
                    }
LABEL_207:
                    uint64_t v177 = 0;
                    uint64_t v179 = 0;
                  }
                  else
                  {
                    TaskPriority.rawValue.getter();
                    (*v187)(v176, v163);
                    if (!*v173) {
                      goto LABEL_207;
                    }
LABEL_205:
                    swift_getObjectType();
                    swift_unknownObjectRetain();
                    uint64_t v177 = dispatch thunk of Actor.unownedExecutor.getter();
                    uint64_t v179 = v178;
                    swift_unknownObjectRelease();
                  }
                  uint64_t v180 = **(void **)(v0 + 960);
                  uint64_t v181 = v179 | v177;
                  if (v179 | v177)
                  {
                    uint64_t v181 = v0 + 680;
                    *(void *)(v0 + 680) = 0;
                    *(void *)(v0 + 688) = 0;
                    *(void *)(v0 + 696) = v177;
                    *(void *)(v0 + 704) = v179;
                  }
                  ++v164;
                  uint64_t v166 = *(void *)(v0 + 1024);
                  *(void *)(v0 + 712) = 1;
                  *(void *)(v0 + 720) = v181;
                  *(void *)(v0 + 728) = v180;
                  swift_task_create();
                  swift_release();
                  sub_100522F00(v166, &qword_101672BB0);
                  if (*(void *)&v207 == v164) {
                    goto LABEL_210;
                  }
                  continue;
                }
              }
LABEL_179:
              if (v143)
              {
                uint64_t v193 = v143;
                if (v143 < 1)
                {
                  uint64_t v145 = _swiftEmptyArrayStorage;
                }
                else
                {
                  sub_1005057FC((uint64_t *)&unk_101676C10);
                  uint64_t v145 = (double *)swift_allocObject();
                  uint64_t result = j__malloc_size_2(v145);
                  uint64_t v151 = result - 32;
                  if (result < 32) {
                    uint64_t v151 = result - 25;
                  }
                  *((void *)v145 + 2) = v143;
                  *((void *)v145 + 3) = (2 * (v151 >> 3)) | 1;
                }
                if (v129 == v141) {
                  goto LABEL_230;
                }
                char v146 = v202;
                if (v143 < 0) {
                  return _fatalErrorMessage(_:_:file:line:flags:)();
                }
                unint64_t v152 = v138 + 8 * v129;
                if (v152 < (unint64_t)&v145[v193 + 4] && (unint64_t)(v145 + 4) < v152 + v193 * 8) {
                  return _fatalErrorMessage(_:_:file:line:flags:)();
                }
                sub_100DE7BCC();
                swift_arrayInitWithCopy();
              }
              else
              {
                uint64_t v145 = _swiftEmptyArrayStorage;
                char v146 = v202;
              }
            }
            swift_unknownObjectRelease();
            double v154 = _swiftEmptyArrayStorage[2];
            double v153 = _swiftEmptyArrayStorage[3];
            unint64_t v87 = v58 >> 62;
            if (*(void *)&v154 >= *(void *)&v153 >> 1) {
              sub_1006BBBC4(*(void *)&v153 > 1uLL, *(void *)&v154 + 1, 1);
            }
            *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v154 + 1;
            *(void *)&_swiftEmptyArrayStorage[*(void *)&v154 + 4] = v145;
            uint64_t v97 = v198;
            if (v131 >= v198) {
              char v155 = 1;
            }
            else {
              char v155 = v146;
            }
            v128 += 50;
            uint64_t v129 = v131;
            uint64_t v127 = v206;
            if (v155) {
              goto LABEL_200;
            }
            continue;
          }
        }
        goto LABEL_116;
      }
    }
    else
    {
      unint64_t v109 = (2 * v97) | 1;
      uint64_t result = swift_bridgeObjectRetain();
      uint64_t v97 = v103;
      uint64_t v111 = (v58 & 0xFFFFFFFFFFFFFF8) + 32;
      uint64_t v200 = v101;
      if ((v109 & 1) == 0) {
        goto LABEL_112;
      }
    }
    uint64_t v189 = v111;
    type metadata accessor for __ContiguousArrayStorageBase();
    swift_unknownObjectRetain_n();
    unint64_t v112 = (double *)swift_dynamicCastClass();
    if (!v112)
    {
      swift_unknownObjectRelease();
      unint64_t v112 = _swiftEmptyArrayStorage;
    }
    uint64_t v113 = *((void *)v112 + 2);
    swift_release();
    unint64_t v114 = v109 >> 1;
    BOOL v115 = __OFSUB__(v109 >> 1, v102);
    uint64_t v103 = (v109 >> 1) - v102;
    char v116 = v115;
    if (v115) {
      goto LABEL_225;
    }
    if (v113 == v103)
    {
      uint64_t v117 = (double *)swift_dynamicCastClass();
      unint64_t v87 = v58 >> 62;
      uint64_t v118 = v200;
      if (!v117)
      {
        swift_unknownObjectRelease();
        uint64_t v117 = _swiftEmptyArrayStorage;
      }
      goto LABEL_128;
    }
    uint64_t result = swift_unknownObjectRelease();
    unint64_t v87 = v58 >> 62;
    uint64_t v111 = v189;
    if (v116) {
      goto LABEL_133;
    }
LABEL_116:
    if (v103)
    {
      uint64_t v190 = v103;
      if (v103 < 1)
      {
        uint64_t v117 = _swiftEmptyArrayStorage;
      }
      else
      {
        sub_1005057FC((uint64_t *)&unk_101676C10);
        uint64_t v117 = (double *)swift_allocObject();
        uint64_t result = j__malloc_size_2(v117);
        uint64_t v123 = result - 32;
        if (result < 32) {
          uint64_t v123 = result - 25;
        }
        *((void *)v117 + 2) = v103;
        *((void *)v117 + 3) = (2 * (v123 >> 3)) | 1;
      }
      if (v102 == v114)
      {
        __break(1u);
LABEL_230:
        __break(1u);
        return result;
      }
      uint64_t v118 = v200;
      if (v103 < 0) {
        return _fatalErrorMessage(_:_:file:line:flags:)();
      }
      unint64_t v124 = v111 + 8 * v102;
      if (v124 < (unint64_t)&v117[v190 + 4] && (unint64_t)(v117 + 4) < v124 + v190 * 8) {
        return _fatalErrorMessage(_:_:file:line:flags:)();
      }
      sub_100DE7BCC();
      swift_arrayInitWithCopy();
      unint64_t v87 = v58 >> 62;
    }
    else
    {
      uint64_t v117 = _swiftEmptyArrayStorage;
      uint64_t v118 = v200;
    }
LABEL_128:
    swift_unknownObjectRelease();
    double v126 = _swiftEmptyArrayStorage[2];
    double v125 = _swiftEmptyArrayStorage[3];
    if (*(void *)&v126 >= *(void *)&v125 >> 1) {
      sub_1006BBBC4(*(void *)&v125 > 1uLL, *(void *)&v126 + 1, 1);
    }
    uint64_t v101 = v118 + 1;
    *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v126 + 1;
    *(void *)&_swiftEmptyArrayStorage[*(void *)&v126 + 4] = v117;
    uint64_t v110 = v201;
    uint64_t v102 = v201;
    uint64_t v97 = v198;
    uint64_t v103 = v58 & 0xFFFFFFFFFFFFFF8;
    if (v101 == v99) {
      goto LABEL_134;
    }
  }
  __break(1u);
LABEL_214:
  __break(1u);
LABEL_215:
  __break(1u);
LABEL_216:
  __break(1u);
LABEL_217:
  __break(1u);
LABEL_218:
  __break(1u);
LABEL_219:
  __break(1u);
LABEL_220:
  __break(1u);
LABEL_221:
  __break(1u);
LABEL_222:
  __break(1u);
LABEL_223:
  __break(1u);
LABEL_224:
  __break(1u);
LABEL_225:
  __break(1u);
LABEL_226:
  __break(1u);
LABEL_227:
  __break(1u);
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_100DE69B8()
{
  *(void *)(*(void *)v1 + 1072) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100DE6C04;
  }
  else {
    uint64_t v2 = sub_100DE6ACC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100DE6ACC()
{
  uint64_t v1 = *(void *)(v0 + 1048);
  uint64_t v2 = (void *)static OS_os_log.crlSendACopy;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v4 = v2;
  uint64_t v5 = UUID.uuidString.getter();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v6;
  uint64_t v7 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Successfully saved all chunks for %{public}@", 44, 2, inited);
  swift_release();
  swift_setDeallocating();
  swift_arrayDestroy();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100DE6C04()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100DE6C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[39] = v13;
  v8[40] = v14;
  uint64_t v10 = (void *)swift_task_alloc();
  v8[41] = v10;
  *uint64_t v10 = v8;
  v10[1] = sub_100DE6D38;
  return CKDatabase.modifyRecords(saving:deleting:savePolicy:atomically:)(a8, _swiftEmptyArrayStorage, 0, 1);
}

uint64_t sub_100DE6D38(uint64_t a1, uint64_t a2)
{
  id v4 = (void *)*v3;
  v4[42] = a1;
  v4[43] = a2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v5 = (uint64_t (*)(void))v4[1];
    return v5();
  }
  else
  {
    return _swift_task_switch(sub_100DE6E6C, 0, 0);
  }
}

uint64_t sub_100DE6E6C()
{
  int64_t v1 = 0;
  uint64_t v2 = v0 + 2;
  uint64_t v3 = v0[42];
  uint64_t v4 = v3 + 64;
  id v5 = v0 + 30;
  uint64_t v6 = -1 << *(unsigned char *)(v3 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v3 + 64);
  int64_t v9 = (unint64_t)(63 - v6) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v1 << 6);
LABEL_6:
    uint64_t v12 = *(void *)(v3 + 56) + 16 * v11;
    if (*(unsigned char *)(v12 + 8) == 1)
    {
      unint64_t v16 = *(void **)(*(void *)(v3 + 48) + 8 * v11);
      uint64_t v2 = *(void **)v12;
      sub_100626B48(*(void **)v12, 1);
      sub_100626B48(v2, 1);
      id v5 = v16;
      swift_bridgeObjectRelease();
      if (qword_10166FA90 != -1) {
        goto LABEL_32;
      }
      goto LABEL_23;
    }
  }
  int64_t v13 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v13 >= v9) {
    goto LABEL_24;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  ++v1;
  if (v14) {
    goto LABEL_21;
  }
  int64_t v1 = v13 + 1;
  if (v13 + 1 >= v9) {
    goto LABEL_24;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v1);
  if (v14) {
    goto LABEL_21;
  }
  int64_t v1 = v13 + 2;
  if (v13 + 2 >= v9) {
    goto LABEL_24;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v1);
  if (v14)
  {
LABEL_21:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v1 << 6);
    goto LABEL_6;
  }
  int64_t v15 = v13 + 3;
  if (v15 < v9)
  {
    unint64_t v14 = *(void *)(v4 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v1 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          break;
        }
        if (v1 >= v9) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v4 + 8 * v1);
        ++v15;
        if (v14) {
          goto LABEL_21;
        }
      }
LABEL_31:
      __break(1u);
LABEL_32:
      swift_once();
LABEL_23:
      swift_beginAccess();
      uint64_t v17 = (void *)static OS_os_log.crlSendACopy;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      id v19 = v17;
      id v20 = [v5 description];
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v23 = v22;

      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v21;
      *(void *)(inited + 40) = v23;
      uint64_t v24 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v24, (uint64_t)"Encountered error while saving record with id %{public}@", 56, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_willThrow();
      sub_100541080(v2, 1);
      swift_release();
      uint64_t v25 = (uint64_t (*)(void))v0[1];
      goto LABEL_27;
    }
    int64_t v1 = v15;
    goto LABEL_21;
  }
LABEL_24:
  if (qword_10166FA90 != -1) {
    goto LABEL_34;
  }
  while (1)
  {
    uint64_t v26 = v0[39];
    swift_beginAccess();
    id v27 = (void *)static OS_os_log.crlSendACopy;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v28 = swift_initStackObject();
    *(_OWORD *)(v28 + 16) = xmmword_10117DF40;
    if (!__OFADD__(v26, 1)) {
      break;
    }
    __break(1u);
LABEL_34:
    swift_once();
  }
  uint64_t v29 = (void *)v28;
  uint64_t v30 = v0[42];
  uint64_t v31 = v0[40];
  v0[36] = v26 + 1;
  id v43 = v27;
  uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v34 = v33;
  v29[7] = &type metadata for String;
  unint64_t v35 = sub_100528BE4();
  v29[8] = v35;
  v29[4] = v32;
  v29[5] = v34;
  v0[37] = v31;
  uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
  v29[12] = &type metadata for String;
  v29[13] = v35;
  v29[9] = v36;
  v29[10] = v37;
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void *)(v30 + 16);
  swift_bridgeObjectRelease();
  v0[38] = v38;
  uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
  v29[17] = &type metadata for String;
  v29[18] = v35;
  v29[14] = v39;
  v29[15] = v40;
  uint64_t v41 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v43, (uint64_t)&_mh_execute_header, v41, (uint64_t)"Successfully saved chunk %{public}@ of %{public}@, with %{public}@ records", 74, 2, (uint64_t)v29);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_27:
  return v25();
}

uint64_t sub_100DE731C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  if (a1)
  {
    swift_getObjectType();
    uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  v3[5] = v4;
  v3[6] = v6;
  return _swift_task_switch(sub_100DE73BC, v4, v6);
}

uint64_t sub_100DE73BC()
{
  v0[7] = sub_1005057FC(&qword_101672BD0);
  if (ThrowingTaskGroup.isEmpty.getter())
  {
    int64_t v1 = (uint64_t (*)(void))v0[1];
    return v1();
  }
  else
  {
    v0[8] = 0;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[9] = v3;
    uint64_t v4 = sub_1005057FC(&qword_101672BC8);
    *uint64_t v3 = v0;
    v3[1] = sub_100DE74F0;
    uint64_t v5 = v0[3];
    uint64_t v6 = v0[2];
    return ThrowingTaskGroup.next(isolation:)(v0 + 11, v6, v5, v4);
  }
}

uint64_t sub_100DE74F0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_100DE773C;
  }
  else
  {
    *(unsigned char *)(v2 + 89) = *(unsigned char *)(v2 + 88);
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_100DE760C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100DE760C()
{
  if (*(unsigned char *)(v0 + 89))
  {
    uint64_t v1 = *(void *)(v0 + 64);
    if (ThrowingTaskGroup.isEmpty.getter())
    {
      if (v1) {
        swift_willThrow();
      }
      uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
      return v2();
    }
    *(void *)(v0 + 64) = v1;
  }
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  uint64_t v5 = sub_1005057FC(&qword_101672BC8);
  *uint64_t v4 = v0;
  v4[1] = sub_100DE74F0;
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = *(void *)(v0 + 16);
  return ThrowingTaskGroup.next(isolation:)(v0 + 88, v7, v6, v5);
}

uint64_t sub_100DE773C()
{
  uint64_t v1 = v0[10];
  if (v0[8])
  {
    swift_errorRelease();
    uint64_t v1 = v0[8];
  }
  if (ThrowingTaskGroup.isEmpty.getter())
  {
    if (v1) {
      swift_willThrow();
    }
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    v0[8] = v1;
    uint64_t v4 = (void *)swift_task_alloc();
    v0[9] = v4;
    uint64_t v5 = sub_1005057FC(&qword_101672BC8);
    *uint64_t v4 = v0;
    v4[1] = sub_100DE74F0;
    uint64_t v6 = v0[3];
    uint64_t v7 = v0[2];
    return ThrowingTaskGroup.next(isolation:)(v0 + 11, v7, v6, v5);
  }
}

id sub_100DE787C(uint64_t a1)
{
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v3 = sub_100753038();
  uint64_t v5 = v4;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 40) = v5;
  uint64_t v6 = (void *)(a1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  if (*v6) {
    BOOL v7 = 0;
  }
  else {
    BOOL v7 = v6[1] == 0xE000000000000000;
  }
  if (!v7 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"crl_publicBoardZone(for:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLPublicCloudDataController.swift", 93, 2, 132, (uint64_t)"Attempting to create public board identifier that has non-default owner %{public}@", 82, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"crl_publicBoardZone(for:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLPublicCloudDataController.swift", 93, 2, 132);
  }
  swift_bridgeObjectRelease();
  Class v8 = sub_100D3EC2C(a1);
  id v9 = [(objc_class *)v8 zoneName];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v10 = objc_allocWithZone((Class)CKRecordZone);
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [v10 initWithZoneName:v11];

  return v12;
}

uint64_t sub_100DE7A48(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v11 = v2[6];
  uint64_t v10 = v2[7];
  id v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *id v12 = v3;
  v12[1] = sub_100528488;
  return sub_100DE4D00(a1, a2, v6, v7, v8, v9, v11, v10);
}

uint64_t sub_100DE7B24@<X0>(uint64_t *a1@<X8>)
{
  return sub_100C9D050(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_100DE7B40()
{
  unint64_t result = qword_10169C940;
  if (!qword_10169C940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C940);
  }
  return result;
}

void sub_100DE7B94(uint64_t *a1@<X8>)
{
  sub_100C9D5FC(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_100DE7BB0(uint64_t *a1@<X8>)
{
  sub_100C9E550(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_100DE7BCC()
{
  unint64_t result = qword_10167C060;
  if (!qword_10167C060)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10167C060);
  }
  return result;
}

uint64_t sub_100DE7C0C()
{
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100DE7C64()
{
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100528D08;
  v5[39] = v3;
  v5[40] = v4;
  uint64_t v6 = (void *)swift_task_alloc();
  v5[41] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_100DE6D38;
  return CKDatabase.modifyRecords(saving:deleting:savePolicy:atomically:)(v2, _swiftEmptyArrayStorage, 0, 1);
}

uint64_t sub_100DE7D70(uint64_t a1, uint64_t a2)
{
  v2[37] = a1;
  v2[38] = a2;
  uint64_t v3 = type metadata accessor for UUID();
  v2[39] = v3;
  v2[40] = *(void *)(v3 - 8);
  v2[41] = swift_task_alloc();
  sub_1005057FC(&qword_101672C30);
  v2[42] = swift_task_alloc();
  v2[43] = swift_task_alloc();
  return _swift_task_switch(sub_100DE7E70, 0, 0);
}

uint64_t sub_100DE7E70()
{
  id v1 = sub_100DE787C(v0[37]);
  v0[44] = v1;
  v0[36] = _swiftEmptyArrayStorage;
  if (qword_10166FA90 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[43];
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.crlSendACopy;
  v0[45] = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v5 = v3;
  id v6 = [v1 zoneID];
  sub_100D29C10(v2);

  uint64_t v7 = type metadata accessor for CRLBoardIdentifier(0);
  v0[46] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  v0[47] = v9;
  v0[48] = (v8 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  int v10 = v9(v2, 1, v7);
  uint64_t v11 = v0[43];
  if (v10 == 1)
  {
    sub_100522F00(v0[43], &qword_101672C30);
    uint64_t v12 = 0;
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v15 = v0[40];
    uint64_t v14 = v0[41];
    uint64_t v16 = v0[39];
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 16))(v14, v0[43], v16);
    sub_100510028(v11);
    uint64_t v12 = UUID.uuidString.getter();
    uint64_t v13 = v17;
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  v0[33] = v12;
  v0[34] = v13;
  v0[49] = sub_1005057FC(&qword_101674580);
  v18._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v19 = sub_100528BE4();
  v0[50] = v19;
  *(void *)(inited + 64) = v19;
  *(void *)(inited + 32) = 0;
  *(void *)(inited + 40) = 0xE000000000000000;
  uint64_t v20 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v20, (uint64_t)"Fetching zone in public database: %{public}@", 44, 2, inited);
  swift_setDeallocating();
  v0[51] = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  id v21 = [v1 zoneID];
  v0[52] = v21;
  uint64_t v22 = (void *)swift_task_alloc();
  v0[53] = v22;
  void *v22 = v0;
  v22[1] = sub_100DE81A8;
  return sub_10074736C((uint64_t)v21, 1, 33);
}

uint64_t sub_100DE81A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 432) = a1;
  *(void *)(v4 + 440) = a2;
  *(void *)(v4 + 448) = v2;
  swift_task_dealloc();
  if (v2)
  {
    id v5 = *(void **)(v4 + 416);
    swift_bridgeObjectRelease();

    id v6 = sub_100DE87E4;
  }
  else
  {

    id v6 = sub_100DE82D8;
  }
  return _swift_task_switch(v6, 0, 0);
}

void sub_100DE82D8()
{
  uint64_t v1 = v0[54];
  if (*(void *)(v1 + 16))
  {
    swift_bridgeObjectRelease();
    int64_t v2 = 0;
    uint64_t v3 = v1 + 64;
    uint64_t v4 = -1;
    uint64_t v5 = -1 << *(unsigned char *)(v1 + 32);
    if (-v5 < 64) {
      uint64_t v4 = ~(-1 << -(char)v5);
    }
    unint64_t v6 = v4 & *(void *)(v1 + 64);
    int64_t v7 = (unint64_t)(63 - v5) >> 6;
    if (!v6) {
      goto LABEL_6;
    }
LABEL_5:
    unint64_t v8 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    for (unint64_t i = v8 | (v2 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v2 << 6))
    {
      uint64_t v13 = *(void *)(v1 + 56) + 16 * i;
      uint64_t v14 = *(void **)v13;
      if (*(unsigned char *)(v13 + 8)) {
        break;
      }
      id v15 = v14;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v0[36] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v0[36] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      sub_100541080(v14, 0);
      if (v6) {
        goto LABEL_5;
      }
LABEL_6:
      int64_t v10 = v2 + 1;
      if (__OFADD__(v2, 1))
      {
        __break(1u);
LABEL_37:
        __break(1u);
        return;
      }
      if (v10 >= v7) {
        goto LABEL_28;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v10);
      ++v2;
      if (!v11)
      {
        int64_t v2 = v10 + 1;
        if (v10 + 1 >= v7) {
          goto LABEL_28;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 2;
          if (v10 + 2 >= v7) {
            goto LABEL_28;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11)
          {
            int64_t v12 = v10 + 3;
            if (v12 >= v7)
            {
LABEL_28:
              uint64_t v31 = (void *)v0[44];
              swift_release();

              uint64_t v32 = v0[36];
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              uint64_t v33 = (void (*)(uint64_t))v0[1];
              v33(v32);
              return;
            }
            unint64_t v11 = *(void *)(v3 + 8 * v12);
            if (!v11)
            {
              while (1)
              {
                int64_t v2 = v12 + 1;
                if (__OFADD__(v12, 1)) {
                  goto LABEL_37;
                }
                if (v2 >= v7) {
                  goto LABEL_28;
                }
                unint64_t v11 = *(void *)(v3 + 8 * v2);
                ++v12;
                if (v11) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v2 = v12;
          }
        }
      }
LABEL_19:
      unint64_t v6 = (v11 - 1) & v11;
    }
    uint64_t v18 = v0[50];
    uint64_t v44 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[47];
    uint64_t v43 = v0[46];
    unint64_t v19 = (void *)v0[44];
    uint64_t v20 = v0[42];
    swift_errorRetain();
    swift_bridgeObjectRelease();
    id v21 = (void *)static OS_os_log.crlSendACopy;
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    swift_getErrorValue();
    uint64_t v23 = v0[29];
    uint64_t v24 = v0[30];
    sub_100626B48(v14, 1);
    id v45 = v21;
    *(void *)(inited + 32) = Error.publicDescription.getter(v23, v24);
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = v18;
    *(void *)(inited + 40) = v25;
    id v26 = [v19 zoneID];
    sub_100D29C10(v20);

    int v27 = v44(v20, 1, v43);
    uint64_t v28 = v0[42];
    if (v27 == 1)
    {
      sub_100522F00(v0[42], &qword_101672C30);
      uint64_t v29 = 0;
      uint64_t v30 = 0;
    }
    else
    {
      uint64_t v35 = v0[40];
      uint64_t v34 = v0[41];
      uint64_t v36 = v0[39];
      (*(void (**)(uint64_t, void, uint64_t))(v35 + 16))(v34, v0[42], v36);
      sub_100510028(v28);
      uint64_t v29 = UUID.uuidString.getter();
      uint64_t v30 = v37;
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
    }
    uint64_t v38 = v0[50];
    uint64_t v39 = (void *)v0[44];
    v0[31] = v29;
    v0[32] = v30;
    v40._countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v40);
    swift_bridgeObjectRelease();
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v38;
    *(void *)(inited + 72) = 0;
    *(void *)(inited + 80) = 0xE000000000000000;
    uint64_t v41 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v45, (uint64_t)&_mh_execute_header, v41, (uint64_t)"Caught error when fetching records from public database: %{public}@ for %{public}@", 82, 2, inited);
    swift_setDeallocating();
    swift_arrayDestroy();

    swift_willThrow();
    sub_100541080(v14, 1);
    swift_release();
  }
  else
  {
    uint64_t v16 = (void *)v0[44];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100DE7B40();
    swift_allocError();
    *uint64_t v17 = 0;
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v42 = (void (*)(void))v0[1];
  v42();
}

uint64_t sub_100DE87E4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unsigned char *storeEnumTagSinglePayload for CRLPublicCloudDataControllerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100DE8938);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLPublicCloudDataControllerError()
{
  return &type metadata for CRLPublicCloudDataControllerError;
}

void destroy for CRLPublicCloudDataController(uint64_t a1)
{
  swift_unknownObjectRelease();
  int64_t v2 = *(void **)(a1 + 24);
}

uint64_t initializeWithCopy for CRLPublicCloudDataController(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  unsigned int v4 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v4;
  id v5 = v3;
  swift_unknownObjectRetain();
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for CRLPublicCloudDataController(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = v7;
  unint64_t v8 = *(void **)(a2 + 24);
  uint64_t v9 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v8;
  id v10 = v8;

  return a1;
}

uint64_t assignWithTake for CRLPublicCloudDataController(uint64_t a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_unknownObjectRelease();
  unsigned int v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for CRLPublicCloudDataController()
{
  return &type metadata for CRLPublicCloudDataController;
}

unint64_t sub_100DE8AE8()
{
  unint64_t result = qword_10169C970;
  if (!qword_10169C970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169C970);
  }
  return result;
}

id sub_100DE8B5C(void *a1, uint64_t a2, SEL *a3)
{
  unsigned int v4 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0xE0);
  id v5 = a1;
  id v6 = (void *)v4();
  id v7 = [v6 *a3];

  return v7;
}

void sub_100DE8BDC()
{
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.shareState;
  uint64_t v1 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v0, (uint64_t)&_mh_execute_header, v1, (uint64_t)"Updating toolbar buttons.", 25, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    int v3 = Strong;
    id v4 = [Strong traitCollection];
    sub_1005919EC(v4, (int)[*(id *)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] documentIsSharedReadOnly], (uint64_t)v5);
    sub_100591DC0(v5, 0);
    sub_1005393A8((uint64_t)v5);
  }
}

uint64_t CRLGelatoInterstitialUIController.isBoardShared.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100DE8D78@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100DE8DFC(uint64_t a1, void **a2)
{
  int64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t CRLGelatoInterstitialUIController.isBoardShared.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  return static Published.subscript.setter();
}

void (*CRLGelatoInterstitialUIController.isBoardShared.modify(void *a1))(void *a1)
{
  int64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return sub_1007D36B8;
}

uint64_t CRLGelatoInterstitialUIController.$isBoardShared.getter()
{
  return swift_endAccess();
}

uint64_t CRLGelatoInterstitialUIController.$isBoardShared.setter(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101681298);
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v5 = __chkstk_darwin(v2, v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v5);
  swift_beginAccess();
  sub_1005057FC(&qword_10169FCE0);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*CRLGelatoInterstitialUIController.$isBoardShared.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_1005057FC(&qword_101681298);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  id v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController__isBoardShared;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_1005057FC(&qword_10169FCE0);
  Published.projectedValue.getter();
  swift_endAccess();
  return sub_1007D39D4;
}

id sub_100DE9208(char *a1)
{
  uint64_t v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = sub_1005057FC(&qword_10169FCE0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  uint64_t v9 = OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_boardLibrary;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_boardLibrary] = 0;
  v2[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_isTornDown] = 0;
  id v10 = &v2[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController__isBoardShared];
  char v37 = 0;
  unint64_t v11 = v2;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v8, v4);
  *(void *)&v11[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem] = 0;
  swift_unknownObjectWeakAssign();
  int64_t v12 = *(void **)(*(void *)&a1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v13 = OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_board;
  *(void *)&v11[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_board] = v12;
  uint64_t v33 = a1;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  id v15 = *(void **)&v2[v9];
  *(void *)&v2[v9] = Strong;
  id v16 = v12;

  LOBYTE(v15) = *(void *)(*(void *)(*(void *)&v11[v13] + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState) + 16) != 0;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  char v36 = (char)v15;
  Published.init(initialValue:)();
  swift_endAccess();

  v35.receiver = v11;
  v35.super_class = ObjectType;
  id v17 = [super init];
  uint64_t v18 = swift_unknownObjectWeakLoadStrong();
  if (v18)
  {
    unint64_t v19 = (void *)v18;
    uint64_t v20 = *(void **)(v18 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);
    id v21 = v17;
    uint64_t v22 = v20;

    uint64_t v23 = *(void **)&v22[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_shareObservers];
    id v24 = v21;
    if (([v23 containsObject:v24] & 1) == 0) {
      [v23 addObject:v24];
    }
  }
  else
  {
    id v25 = v17;
  }
  id v26 = v33;

  id v27 = [self defaultCenter];
  uint64_t v28 = qword_10166FE58;
  id v29 = v17;
  if (v28 != -1) {
    swift_once();
  }
  [v27 addObserver:v29 selector:"newParticipantJoinedSessionWithNotification:" name:qword_10171C3B8 object:0];

  uint64_t v30 = qword_10166EE88;
  id v31 = v29;
  if (v30 != -1) {
    swift_once();
  }
  [v27 addObserver:v31 selector:"realTimeSessionParticipantsChangedWithNotification:" name:qword_10171A4B0 object:0];

  return v31;
}

id sub_100DE95E8()
{
  uint64_t v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v9 - 8, v10);
  int64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v13 = (id)static OS_os_log.shareState;
  uint64_t v14 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Making a collaboration button. Checking for an existing share.", 62, 2, (uint64_t)_swiftEmptyArrayStorage);

  id v15 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_boardLibrary);
  if (!v15) {
    return 0;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v17 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_board);
  uint64_t v50 = v0;
  uint64_t v18 = (uint64_t)v12;
  uint64_t v19 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v20 = *(void *)(v17 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  uint64_t v47 = (void *)Strong;
  swift_beginAccess();
  sub_100DECB80(v20, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  id v46 = v15;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100DEC048((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  id v21 = (uint64_t *)(*(void *)(v17 + v19) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v22 = *v21;
  unint64_t v23 = v21[1];
  swift_bridgeObjectRetain();
  uint64_t v48 = v18;
  sub_100753370((uint64_t)v8, v22, v23, v18);
  id v24 = *(void **)(*(void *)(v17 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState) + 16);
  type metadata accessor for CRLBoardShareItemProviderHelper();
  uint64_t v25 = *(void *)(v17 + v19) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100DECB80(v25, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  id v49 = v24;
  sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  uint64_t v26 = v51;
  uint64_t v27 = v52;
  sub_100DEC048((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  id v28 = v46;
  id v29 = sub_100B73A38(v24, (uint64_t)v46, v18, v26, v27, 0, 0xF000000000000000);
  swift_bridgeObjectRelease();
  id v30 = [objc_allocWithZone((Class)_SWCollaborationBarButtonItem) initWithItemProvider:v29];
  id v31 = v47;
  [v30 setCloudSharingControllerDelegate:v47];
  [v30 setShowManageButton:0];
  id v32 = [self mainBundle];
  NSString v33 = String._bridgeToObjectiveC()();
  NSString v34 = String._bridgeToObjectiveC()();
  id v35 = [v32 localizedStringForKey:v33 value:v34 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v30 setManageButtonTitle:v36];

  char v37 = (void **)(v50 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem);
  swift_beginAccess();
  uint64_t v38 = *v37;
  *char v37 = v30;
  id v39 = v30;

  UIAccessibilityTraits v40 = UIAccessibilityTraitButton;
  id v41 = v39;
  unint64_t v42 = (unint64_t)[v41 accessibilityTraits];
  if ((v40 & ~v42) != 0) {
    UIAccessibilityTraits v43 = v40;
  }
  else {
    UIAccessibilityTraits v43 = 0;
  }
  [v41 setAccessibilityTraits:v43 | v42];

  sub_100DEC048(v48, type metadata accessor for CRLBoardIdentifier);
  return v30;
}

void sub_100DE9B38()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_isTornDown;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_isTornDown) == 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"tearDown()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Gelato/CRLGelatoInterstitialUIController.swift", 116, 2, 67, (uint64_t)"Should not call tearDown() twice.", 33, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"tearDown()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Gelato/CRLGelatoInterstitialUIController.swift", 116, 2, 67);
  }
  *(unsigned char *)(v0 + v1) = 1;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    uint64_t v4 = (char *)*(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);

    uint64_t v5 = *(void **)&v4[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_shareObservers];
    if ([v5 containsObject:v0]) {
      [v5 removeObject:v0];
    }
  }
  id v6 = [self defaultCenter];
  [v6 removeObserver:v0];

  uint64_t v7 = (void **)(v0 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if (*v7)
  {
    id v9 = objc_allocWithZone((Class)UIView);
    id v10 = v8;
    id v11 = [v9 init];
    [v10 setDetailViewListContent:v11];
  }
}

id CRLGelatoInterstitialUIController.__deallocating_deinit()
{
  ObjectType = (objc_class *)swift_getObjectType();
  if ((v0[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_isTornDown] & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Gelato/CRLGelatoInterstitialUIController.swift", 116, 2, 83, (uint64_t)"Deallocated without calling tearDown()!", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v5) = 2;
    uint64_t v3 = "Deallocated without calling tearDown()!";
    uint64_t v4 = 39;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Gelato/CRLGelatoInterstitialUIController.swift", 116, 2, 83);
  }
  v6.receiver = v0;
  v6.super_class = ObjectType;
  return [super dealloc:v3, v4, v5];
}

uint64_t sub_100DE9FD4()
{
  uint64_t v1 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10169A1A0);
  __chkstk_darwin(v6 - 8, v7);
  id v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_board)
      + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
  swift_beginAccess();
  sub_100522E9C(v10, (uint64_t)v9, (uint64_t *)&unk_10169A1A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v9, 1, v1))
  {
    sub_100522F00((uint64_t)v9, (uint64_t *)&unk_10169A1A0);
    return 0;
  }
  else
  {
    sub_100DECB80((uint64_t)v9, (uint64_t)v5, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    sub_100522F00((uint64_t)v9, (uint64_t *)&unk_10169A1A0);
    swift_retain();
    sub_100DEC048((uint64_t)v5, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    int64_t v12 = (void *)static OS_os_log.shareState;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = &type metadata for Int;
    *(void *)(inited + 64) = &protocol witness table for Int;
    *(void *)(inited + 32) = v11;
    id v14 = v12;
    uint64_t v15 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v15, (uint64_t)"Found realTimeSessionInfo. Participant count is: %d", 51, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    swift_release();
  }
  return v11;
}

uint64_t sub_100DEA324()
{
  uint64_t v1 = sub_1005057FC(&qword_10169C9D8);
  __chkstk_darwin(v1 - 8, v2);
  unint64_t v42 = (void *)((char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_1005057FC(&qword_1016746C8);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v41 = (uint64_t)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v40 - v9;
  uint64_t v11 = type metadata accessor for CRLActiveParticipantDetailView(0);
  __chkstk_darwin(v11, v12);
  id v14 = (void *)((char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1005057FC((uint64_t *)&unk_10169A1A0);
  __chkstk_darwin(v20 - 8, v21);
  unint64_t v23 = (char *)v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = v0;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v25 = (char *)result;
    v40[1] = v4;
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v26 = (id)static OS_os_log.shareState;
    uint64_t v27 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v26, (uint64_t)&_mh_execute_header, v27, (uint64_t)"Updating participant list.", 26, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t v28 = *(void *)(v43 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_board)
        + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
    swift_beginAccess();
    sub_100522E9C(v28, (uint64_t)v23, (uint64_t *)&unk_10169A1A0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v23, 1, v15))
    {
      sub_100522F00((uint64_t)v23, (uint64_t *)&unk_10169A1A0);
      type metadata accessor for CRLCollaborationParticipantCollection(0);
      swift_allocObject();
      sub_10070A9D8();
    }
    else
    {
      sub_100DECB80((uint64_t)v23, (uint64_t)v19, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      sub_100522F00((uint64_t)v23, (uint64_t *)&unk_10169A1A0);
      swift_retain();
      sub_100DEC048((uint64_t)v19, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    }
    id v29 = *(void **)&v25[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator];
    uint64_t v30 = type metadata accessor for Tips.Status();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v10, 1, 1, v30);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v32 = (uint64_t)v42;
    *unint64_t v42 = KeyPath;
    sub_1005057FC(&qword_10169C9E0);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for CRLEditingCoordinator();
    sub_100DEC000(&qword_10169C9E8, (void (*)(uint64_t))type metadata accessor for CRLEditingCoordinator);
    id v33 = v29;
    swift_retain();
    NSString v34 = v25;
    uint64_t *v14 = ObservedObject.init(wrappedValue:)();
    v14[1] = v35;
    type metadata accessor for CRLCollaborationParticipantCollection(0);
    sub_100DEC000(&qword_10167C538, (void (*)(uint64_t))type metadata accessor for CRLCollaborationParticipantCollection);
    v14[2] = ObservedObject.init(wrappedValue:)();
    v14[3] = v36;
    sub_100522E9C((uint64_t)v10, v41, &qword_1016746C8);
    State.init(wrappedValue:)();
    sub_100522F00((uint64_t)v10, &qword_1016746C8);
    sub_100DEBF98(v32, (uint64_t)v14 + *(int *)(v11 + 28));
    *(uint64_t *)((char *)v14 + *(int *)(v11 + 36) + 8) = (uint64_t)&off_1015071B0;
    swift_unknownObjectWeakInit();

    char v37 = (void **)(v43 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem);
    swift_beginAccess();
    uint64_t v38 = *v37;
    if (*v37)
    {
      swift_endAccess();
      sub_100DEC000(&qword_10169C9F0, (void (*)(uint64_t))type metadata accessor for CRLActiveParticipantDetailView);
      id v39 = v38;
      _SWCollaborationBarButtonItem.setDetailViewListContent<A>(_:)();
      swift_release();

      return sub_100DEC048((uint64_t)v14, type metadata accessor for CRLActiveParticipantDetailView);
    }
    else
    {
      sub_100DEC048((uint64_t)v14, type metadata accessor for CRLActiveParticipantDetailView);
      swift_endAccess();

      return swift_release();
    }
  }
  return result;
}

id sub_100DEA974()
{
  uint64_t v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_boardLibrary);
  if (v13)
  {
    uint64_t v41 = v1;
    uint64_t v14 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_board);
    uint64_t v15 = *(void **)(*(void *)(v14 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState) + 16);
    uint64_t v16 = qword_10166FBE0;
    id v40 = v13;
    id v39 = v15;
    if (v16 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v17 = (void *)static OS_os_log.shareState;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    uint64_t v44 = v15;
    id v19 = v17;
    sub_1005057FC(&qword_101699928);
    uint64_t v20 = Optional.debugDescription.getter();
    uint64_t v22 = v21;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    uint64_t v38 = v15;
    *(void *)(inited + 32) = v20;
    *(void *)(inited + 40) = v22;
    uint64_t v23 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v23, (uint64_t)"Creating new item provider with share:", 38, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v37 = type metadata accessor for CRLBoardShareItemProviderHelper();
    uint64_t v24 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v25 = *(void *)(v14 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100DECB80(v25, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
    swift_retain();
    sub_1005057FC(&qword_101674550);
    CRRegister.wrappedValue.getter();
    sub_100DEC048((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    id v26 = (uint64_t *)(*(void *)(v14 + v24) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v27 = *v26;
    unint64_t v28 = v26[1];
    swift_bridgeObjectRetain();
    sub_100753370((uint64_t)v8, v27, v28, (uint64_t)v12);
    uint64_t v29 = *(void *)(v14 + v24) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100DECB80(v29, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
    sub_1005057FC(&qword_101674450);
    CRRegister.wrappedValue.getter();
    uint64_t v30 = v42;
    uint64_t v31 = v43;
    sub_100DEC048((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
    id v32 = v40;
    id v33 = sub_100B73A38(v38, (uint64_t)v40, (uint64_t)v12, v30, v31, 0, 0xF000000000000000);

    swift_bridgeObjectRelease();
    sub_100DEC048((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v34 = (id)static OS_os_log.shareState;
    uint64_t v35 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v34, (uint64_t)&_mh_execute_header, v35, (uint64_t)"Error creating share item provider: board library is expected.", 62, 2, (uint64_t)_swiftEmptyArrayStorage);

    return 0;
  }
  return v33;
}

void CRLGelatoInterstitialUIController.init()()
{
}

uint64_t sub_100DEAFB8@<X0>(uint64_t *a1@<X8>)
{
  swift_getObjectType();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100DEAFF8()
{
  return type metadata accessor for CRLGelatoInterstitialUIController();
}

uint64_t type metadata accessor for CRLGelatoInterstitialUIController()
{
  uint64_t result = qword_10169C9C8;
  if (!qword_10169C9C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100DEB04C()
{
  sub_100702A7C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100DEB108(void *a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v113 = *(void *)(v2 - 8);
  uint64_t v114 = v2;
  __chkstk_darwin(v2, v3);
  uint64_t v105 = (uint64_t)&v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v106 = (uint64_t)&v105 - v7;
  __chkstk_darwin(v8, v9);
  uint64_t v107 = (uint64_t)&v105 - v10;
  uint64_t v112 = sub_1005057FC(&qword_10169C9F8);
  __chkstk_darwin(v112, v11);
  uint64_t v115 = (uint64_t)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v105 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for UUID();
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v20 = (char *)&v105 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v21 - 8, v22);
  uint64_t v109 = (uint64_t)&v105 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v25);
  uint64_t v117 = (uint64_t)&v105 - v26;
  __chkstk_darwin(v27, v28);
  uint64_t v116 = (uint64_t)&v105 - v29;
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v30 = (void *)static OS_os_log.shareState;
  uint64_t v110 = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  long long v111 = xmmword_10117E810;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)uint64_t v119 = a1;
  id v32 = v30;
  sub_1005057FC(&qword_101699928);
  uint64_t v33 = Optional.debugDescription.getter();
  uint64_t v35 = v34;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v33;
  *(void *)(inited + 40) = v35;
  uint64_t v36 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v32, (uint64_t)&_mh_execute_header, v36, (uint64_t)"Interstitial UI controller notified of updated share: %@", 56, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  if (!a1)
  {
    id v76 = (id)static OS_os_log.shareState;
    uint64_t v77 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v76, (uint64_t)&_mh_execute_header, v77, (uint64_t)"Nil share was found. Removing SWCollaborationView.", 50, 2, (uint64_t)_swiftEmptyArrayStorage);

    swift_getKeyPath();
    swift_getKeyPath();
    v119[0] = 0;
    uint64_t v78 = v118;
    static Published.subscript.setter();
    id v79 = (id)static OS_os_log.shareState;
    uint64_t v80 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v79, (uint64_t)&_mh_execute_header, v80, (uint64_t)"Updating toolbar buttons.", 25, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v82 = Strong;
      id v83 = [Strong traitCollection];
      sub_1005919EC(v83, (int)[*(id *)&v82[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] documentIsSharedReadOnly], (uint64_t)v119);
      sub_100591DC0(v119, 0);
      sub_1005393A8((uint64_t)v119);
    }
    id v84 = (id)static OS_os_log.shareState;
    uint64_t v85 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v84, (uint64_t)&_mh_execute_header, v85, (uint64_t)"Dismissing Gelato Interstitial popover", 38, 2, (uint64_t)_swiftEmptyArrayStorage);

    id v86 = (id *)&v78[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem];
    swift_beginAccess();
    if (*v86) {
      [*v86 dismissPopoverAnimated:1 completion:0];
    }
    uint64_t v87 = sub_100DE9FD4();
    uint64_t v88 = (void *)static OS_os_log.shareState;
    uint64_t v89 = swift_initStackObject();
    *(_OWORD *)(v89 + 16) = v111;
    *(void *)(v89 + 56) = &type metadata for Int;
    *(void *)(v89 + 64) = &protocol witness table for Int;
    *(void *)(v89 + 32) = v87;
    id v90 = v88;
    uint64_t v91 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v90, (uint64_t)&_mh_execute_header, v91, (uint64_t)"Updating active participant count to: %d.", 41, 2, v89);
    swift_setDeallocating();
    swift_arrayDestroy();

    if (*v86) {
      [*v86 setActiveParticipantCount:v87];
    }
    goto LABEL_34;
  }
  id v37 = a1;
  id v38 = [v37 recordID];
  id v39 = [v38 zoneID];

  uint64_t v40 = v116;
  sub_100D29C10(v116);

  uint64_t v41 = *(void *)&v118[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_board];
  uint64_t v42 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v43 = *(void *)(v41 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100DECB80(v43, (uint64_t)v16, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100DEC048((uint64_t)v16, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v44 = (uint64_t *)(*(void *)(v41 + v42) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v45 = *v44;
  unint64_t v46 = v44[1];
  swift_bridgeObjectRetain();
  uint64_t v47 = v117;
  sub_100753370((uint64_t)v20, v45, v46, v117);
  uint64_t v49 = v113;
  uint64_t v48 = v114;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v113 + 56))(v47, 0, 1, v114);
  uint64_t v50 = v115;
  uint64_t v51 = v115 + *(int *)(v112 + 48);
  sub_100522E9C(v40, v115, &qword_101672C30);
  uint64_t v52 = v48;
  sub_100522E9C(v47, v51, &qword_101672C30);
  uint64_t v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
  int v54 = v53(v50, 1, v52);
  id v108 = v37;
  if (v54 != 1)
  {
    uint64_t v92 = v109;
    sub_100522E9C(v50, v109, &qword_101672C30);
    if (v53(v51, 1, v52) == 1)
    {
      uint64_t v93 = &qword_10169C9F8;
    }
    else
    {
      uint64_t v94 = v107;
      sub_1005394E4(v51, v107);
      char v95 = static UUID.== infix(_:_:)();
      uint64_t v96 = v92;
      uint64_t v97 = v106;
      sub_100DECB80(v96, v106, type metadata accessor for CRLBoardIdentifier);
      uint64_t v98 = v105;
      sub_100DECB80(v94, v105, type metadata accessor for CRLBoardIdentifier);
      if (v95)
      {
        uint64_t v99 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        uint64_t v100 = *(void *)(v97 + v99);
        uint64_t v101 = *(void *)(v97 + v99 + 8);
        uint64_t v102 = (void *)(v98 + v99);
        if (v100 == *v102 && v101 == v102[1])
        {
          sub_100DEC048(v98, type metadata accessor for CRLBoardIdentifier);
          sub_100DEC048(v97, type metadata accessor for CRLBoardIdentifier);
          sub_100DEC048(v94, type metadata accessor for CRLBoardIdentifier);
          sub_100522F00(v117, &qword_101672C30);
          sub_100522F00(v116, &qword_101672C30);
          sub_100DEC048(v109, type metadata accessor for CRLBoardIdentifier);
          goto LABEL_6;
        }
        char v104 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_100DEC048(v98, type metadata accessor for CRLBoardIdentifier);
        sub_100DEC048(v97, type metadata accessor for CRLBoardIdentifier);
        sub_100DEC048(v94, type metadata accessor for CRLBoardIdentifier);
        sub_100522F00(v117, &qword_101672C30);
        sub_100522F00(v116, &qword_101672C30);
        sub_100DEC048(v109, type metadata accessor for CRLBoardIdentifier);
        sub_100522F00(v50, &qword_101672C30);
        if (v104) {
          goto LABEL_7;
        }
        goto LABEL_33;
      }
      sub_100DEC048(v98, type metadata accessor for CRLBoardIdentifier);
      sub_100DEC048(v97, type metadata accessor for CRLBoardIdentifier);
      sub_100DEC048(v94, type metadata accessor for CRLBoardIdentifier);
      uint64_t v93 = &qword_101672C30;
      uint64_t v92 = v109;
      uint64_t v40 = v116;
    }
    sub_100522F00(v117, &qword_101672C30);
    sub_100522F00(v40, &qword_101672C30);
    sub_100DEC048(v92, type metadata accessor for CRLBoardIdentifier);
LABEL_32:
    sub_100522F00(v50, v93);
LABEL_33:

LABEL_34:
    id v75 = (id)static OS_os_log.shareState;
    uint64_t v103 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v75, (uint64_t)&_mh_execute_header, v103, (uint64_t)"No appropriate actions necessary for this updated share.", 56, 2, (uint64_t)_swiftEmptyArrayStorage);
    goto LABEL_35;
  }
  sub_100522F00(v47, &qword_101672C30);
  sub_100522F00(v40, &qword_101672C30);
  if (v53(v51, 1, v52) != 1)
  {
    uint64_t v93 = &qword_10169C9F8;
    goto LABEL_32;
  }
LABEL_6:
  sub_100522F00(v50, &qword_101672C30);
LABEL_7:
  id v55 = (id)static OS_os_log.shareState;
  uint64_t v56 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v55, (uint64_t)&_mh_execute_header, v56, (uint64_t)"Share state changed.", 20, 2, (uint64_t)_swiftEmptyArrayStorage);

  swift_getKeyPath();
  swift_getKeyPath();
  v119[0] = 1;
  id v57 = v118;
  static Published.subscript.setter();
  id v58 = (id)static OS_os_log.shareState;
  uint64_t v59 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v58, (uint64_t)&_mh_execute_header, v59, (uint64_t)"Updating collaboration button with new item provider.", 53, 2, (uint64_t)_swiftEmptyArrayStorage);

  id v60 = sub_100DEA974();
  if (v60)
  {
    id v61 = v60;
    uint64_t v62 = (id *)&v57[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem];
    swift_beginAccess();
    if (*v62)
    {
      id v63 = *v62;
      [v63 setItemProvider:v61];
    }
  }
  id v64 = (id)static OS_os_log.shareState;
  uint64_t v65 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v64, (uint64_t)&_mh_execute_header, v65, (uint64_t)"Updating toolbar buttons.", 25, 2, (uint64_t)_swiftEmptyArrayStorage);

  id v66 = (char *)swift_unknownObjectWeakLoadStrong();
  if (v66)
  {
    id v67 = v66;
    id v68 = [v66 traitCollection];
    sub_1005919EC(v68, (int)[*(id *)&v67[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] documentIsSharedReadOnly], (uint64_t)v119);
    sub_100591DC0(v119, 0);
    sub_1005393A8((uint64_t)v119);
  }
  sub_100DEA324();
  uint64_t v69 = sub_100DE9FD4();
  uint64_t v70 = (void *)static OS_os_log.shareState;
  uint64_t v71 = swift_initStackObject();
  *(_OWORD *)(v71 + 16) = v111;
  *(void *)(v71 + 56) = &type metadata for Int;
  *(void *)(v71 + 64) = &protocol witness table for Int;
  *(void *)(v71 + 32) = v69;
  id v72 = v70;
  uint64_t v73 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v72, (uint64_t)&_mh_execute_header, v73, (uint64_t)"Updating active participant count to: %d.", 41, 2, v71);
  swift_setDeallocating();
  swift_arrayDestroy();

  uint64_t v74 = (id *)&v57[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem];
  swift_beginAccess();
  if (*v74) {
    [*v74 setActiveParticipantCount:v69];
  }
  id v75 = v108;
LABEL_35:
}

void sub_100DEBF10(void *a1, uint64_t a2, char a3)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (char *)Strong;
    id v6 = a1;
    sub_100DEC594(a3 & 1, v7);
  }
}

uint64_t sub_100DEBF98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10169C9D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100DEC000(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100DEC048(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_100DEC0A8()
{
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = (id)static OS_os_log.shareState;
  uint64_t v2 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v1, (uint64_t)&_mh_execute_header, v2, (uint64_t)"Notified of CRLBoardRealTimeNewParticipantDidJoinSession.", 57, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_100DEA324();
  uint64_t v3 = sub_100DE9FD4();
  uint64_t v4 = (void *)static OS_os_log.shareState;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = &type metadata for Int;
  *(void *)(inited + 64) = &protocol witness table for Int;
  *(void *)(inited + 32) = v3;
  id v6 = v4;
  uint64_t v7 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Updating active participant count to: %d.", 41, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v8 = (id *)(v0 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem);
  swift_beginAccess();
  id result = *v8;
  if (*v8) {
    return [result setActiveParticipantCount:v3];
  }
  return result;
}

id sub_100DEC24C()
{
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = (id)static OS_os_log.shareState;
  uint64_t v2 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v1, (uint64_t)&_mh_execute_header, v2, (uint64_t)"Notified of participant change.", 31, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_100DEA324();
  uint64_t v3 = sub_100DE9FD4();
  uint64_t v4 = (void *)static OS_os_log.shareState;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = &type metadata for Int;
  *(void *)(inited + 64) = &protocol witness table for Int;
  *(void *)(inited + 32) = v3;
  id v6 = v4;
  uint64_t v7 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Updating active participant count to: %d.", 41, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v8 = (id *)(v0 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem);
  swift_beginAccess();
  id result = *v8;
  if (*v8) {
    return [result setActiveParticipantCount:v3];
  }
  return result;
}

id sub_100DEC3F0()
{
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = (id)static OS_os_log.shareState;
  uint64_t v2 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v1, (uint64_t)&_mh_execute_header, v2, (uint64_t)"Notified of CRLBoardRealTimeStateDidChange.", 43, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_100DEA324();
  uint64_t v3 = sub_100DE9FD4();
  uint64_t v4 = (void *)static OS_os_log.shareState;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = &type metadata for Int;
  *(void *)(inited + 64) = &protocol witness table for Int;
  *(void *)(inited + 32) = v3;
  id v6 = v4;
  uint64_t v7 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Updating active participant count to: %d.", 41, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v8 = (id *)(v0 + OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem);
  swift_beginAccess();
  id result = *v8;
  if (*v8) {
    return [result setActiveParticipantCount:v3];
  }
  return result;
}

void sub_100DEC594(char a1, char *a2)
{
  uint64_t v4 = *(void **)(*(void *)(*(void *)(*(void *)&a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                                        + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                            + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState)
                + 16);
  if (!v4
    || (id v5 = [v4 owner],
        uint64_t v6 = sub_100B44E98(0),
        unint64_t v8 = v7,
        v5,
        !v8))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"showAlertForEditPermissionChange(toReadOnly:boardViewController:)", 65, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Gelato/CRLGelatoInterstitialUIController.swift", 116, 2, 272, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v34) = 2;
    id v32 = "invalid nil found when unwrapping value";
    uint64_t v33 = 39;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showAlertForEditPermissionChange(toReadOnly:boardViewController:)", 65, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Gelato/CRLGelatoInterstitialUIController.swift", 116, 2, 272);
    swift_bridgeObjectRelease();
    uint64_t v6 = 0;
    unint64_t v8 = 0xE000000000000000;
  }
  uint64_t v9 = self;
  id v10 = [v9 mainBundle];
  char v35 = a1;
  if (a1)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = [v10 localizedStringForKey:v11 value:v12 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    NSString v17 = String._bridgeToObjectiveC()();
    NSString v18 = String._bridgeToObjectiveC()();
    id v19 = [v10 localizedStringForKey:v17 value:v18 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10117E810;
  *(void *)(v14 + 56) = &type metadata for String;
  *(void *)(v14 + 64) = sub_100528BE4();
  *(void *)(v14 + 32) = v6;
  *(void *)(v14 + 40) = v8;
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  id v15 = [v9 mainBundle];
  NSString v16 = String._bridgeToObjectiveC()();
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v15 localizedStringForKey:v16 value:v20 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v36 = [self alertControllerWithTitle:v22 message:v23 preferredStyle:1];

  id v24 = [self mainBundle];
  NSString v25 = String._bridgeToObjectiveC()();
  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [v24 localizedStringForKey:v25 value:v26 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v29 = [self actionWithTitle:v28 style:0 handler:0];

  [v36 addAction:v29];
  sub_100E3C230(v35 & 1);
  id v30 = [a2 presentedViewController];
  if (v30)
  {
    uint64_t v31 = v30;
    [v30 dismissViewControllerAnimated:1 completion:0];
  }
  [a2 presentViewController:v36 animated:1 completion:v32, v33, v34];
  sub_100F2BCC8(v36);
}

uint64_t sub_100DECB80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100DECBF0(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v40 = type metadata accessor for CRLImageItemCRDTData(0);
  __chkstk_darwin(v40, v5);
  unint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  NSString v11 = (char *)&v40 - v10;
  __chkstk_darwin(v12, v13);
  id v15 = (char *)&v40 - v14;
  uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v16, v17);
  uint64_t v41 = (uint64_t)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  NSString v22 = (char *)&v40 - v21;
  __chkstk_darwin(v23, v24);
  NSString v26 = (char *)&v40 - v25;
  uint64_t v27 = (uint64_t)v2 + *(void *)(v4 + 632);
  swift_beginAccess();
  if (a1)
  {
    sub_100522E9C(v27, (uint64_t)v22, (uint64_t *)&unk_101683E10);
    sub_100523288((unint64_t *)&qword_1016737D8, (uint64_t *)&unk_101683E10);
    CRType.copy(renamingReferences:)();
    sub_100522F00((uint64_t)v22, (uint64_t *)&unk_101683E10);
    uint64_t v28 = (uint64_t)v2 + qword_10171C7A8;
    swift_beginAccess();
    sub_100DF48C4(v28, (uint64_t)v11, type metadata accessor for CRLImageItemCRDTData);
    sub_100DF20AC(&qword_10168C8F8, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);
    CRType.copy(renamingReferences:)();
    sub_100DF4864((uint64_t)v11, type metadata accessor for CRLImageItemCRDTData);
  }
  else
  {
    sub_100522E9C(v27, (uint64_t)v26, (uint64_t *)&unk_101683E10);
    uint64_t v29 = (uint64_t)v2 + qword_10171C7A8;
    swift_beginAccess();
    sub_100DF48C4(v29, (uint64_t)v15, type metadata accessor for CRLImageItemCRDTData);
  }
  sub_100522E9C((uint64_t)v26, v41, (uint64_t *)&unk_101683E10);
  sub_100DF48C4((uint64_t)v15, (uint64_t)v7, type metadata accessor for CRLImageItemCRDTData);
  uint64_t v31 = v2[4];
  uint64_t v30 = v2[5];
  uint64_t v34 = v2 + 2;
  uint64_t v32 = v2[2];
  uint64_t v33 = v34[1];
  uint64_t v35 = swift_allocObject();
  sub_100DF48C4((uint64_t)v7, v35 + qword_10171C7A8, type metadata accessor for CRLImageItemCRDTData);
  id v36 = [self standardUserDefaults:v40];
  unsigned int v37 = [v36 BOOLForKey:@"CRLNewImageItemsHaveGoodEnoughFidelityVersionSetAboveCurrentDefault"];

  if (v37 && (uint64_t result = sub_1002094A4(), v31 = result + 1, result == -1))
  {
    __break(1u);
  }
  else
  {
    sub_100DF4864((uint64_t)v7, type metadata accessor for CRLImageItemCRDTData);
    sub_10051B3EC(v41, v35 + *(void *)(*(void *)v35 + 632), (uint64_t *)&unk_101683E10);
    id v39 = sub_10068B398(v33, v31, v30, v32);
    sub_100DF4864((uint64_t)v15, type metadata accessor for CRLImageItemCRDTData);
    sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101683E10);
    return (uint64_t)v39;
  }
  return result;
}

uint64_t sub_100DED06C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7, v8);
  uint64_t v10 = &v17[-v9];
  __chkstk_darwin(v11, v12);
  uint64_t v14 = &v17[-v13];
  uint64_t v15 = a1 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_assetUUIDMap;
  swift_beginAccess();
  if (*(void *)(*(void *)v15 + 16))
  {
    swift_beginAccess();
    sub_1005057FC(&qword_10167F4B0);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    sub_100DEDA2C((uint64_t)v14);
    uint64_t v18 = v1;
    sub_100DF4864((uint64_t)v10, type metadata accessor for CRLImageItemAssetData);
    sub_100DF48C4((uint64_t)v14, (uint64_t)v10, type metadata accessor for CRLImageItemAssetData);
    swift_beginAccess();
    sub_100DF48C4((uint64_t)v10, (uint64_t)v6, type metadata accessor for CRLImageItemAssetData);
    CRRegister.wrappedValue.setter();
    sub_100DF4864((uint64_t)v10, type metadata accessor for CRLImageItemAssetData);
    swift_endAccess();
    sub_100DF4864((uint64_t)v14, type metadata accessor for CRLImageItemAssetData);
  }
  swift_beginAccess();
  sub_100F99CA4(a1);
  return swift_endAccess();
}

uint64_t sub_100DED2A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v45 = a4;
  uint64_t v46 = a5;
  uint64_t v41 = a3;
  uint64_t v38 = a2;
  uint64_t v39 = a1;
  uint64_t v7 = sub_1005057FC(&qword_10168C8A8);
  uint64_t v47 = *(void *)(v7 - 8);
  uint64_t v48 = v7;
  __chkstk_darwin(v7, v8);
  uint64_t v44 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_101673478);
  uint64_t v42 = *(void *)(v10 - 8);
  uint64_t v43 = v10;
  __chkstk_darwin(v10, v11);
  uint64_t v40 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1005057FC(&qword_10168C8A0);
  __chkstk_darwin(v33, v17);
  uint64_t v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v32 - v22;
  uint64_t v24 = (int *)type metadata accessor for CRLImageItemCRDTData(0);
  uint64_t v37 = a6 + v24[5];
  sub_10051A3F4((uint64_t)v50);
  sub_10051B3EC((uint64_t)v50, (uint64_t)v49, (uint64_t *)&unk_101685110);
  uint64_t v36 = sub_1005057FC((uint64_t *)&unk_101685110);
  unint64_t v35 = sub_100552CB8();
  CRRegister.init(wrappedValue:)();
  uint64_t v34 = a6 + v24[6];
  uint64_t v25 = type metadata accessor for CRLMaskInfoData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v23, 1, 1, v25);
  sub_100522E9C((uint64_t)v23, (uint64_t)v19, &qword_10168C8A0);
  sub_100DF2008();
  CRRegister.init(wrappedValue:)();
  sub_100522F00((uint64_t)v23, &qword_10168C8A0);
  *(void *)(a6 + v24[7]) = _swiftEmptyDictionarySingleton;
  uint64_t v26 = v39;
  sub_100DF48C4(v39, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  uint64_t v27 = v38;
  sub_100522E9C(v38, (uint64_t)&v16[v13[5]], (uint64_t *)&unk_10167D2B0);
  *(void *)&v16[v13[6]] = v41;
  v16[v13[7]] = 2;
  *(void *)&v16[v13[8]] = _swiftEmptyDictionarySingleton;
  sub_100DF20AC(&qword_10169CD70, (void (*)(uint64_t))type metadata accessor for CRLImageItemAssetData);
  CRRegister.init(_:)();
  sub_10051B3EC(v45, (uint64_t)v49, (uint64_t *)&unk_101685110);
  uint64_t v28 = v40;
  CRRegister.init(_:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 40))(v37, v28, v43);
  uint64_t v29 = v46;
  sub_100522E9C(v46, (uint64_t)v23, &qword_10168C8A0);
  uint64_t v30 = v44;
  CRRegister.init(_:)();
  sub_100522F00(v29, &qword_10168C8A0);
  sub_100522F00(v27, (uint64_t *)&unk_10167D2B0);
  sub_100DF4864(v26, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v47 + 40))(v34, v30, v48);
}

unint64_t sub_100DED724(char a1)
{
  unint64_t result = 0x7461446567616D69;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x69616E626D756874;
      break;
    case 2:
      unint64_t result = 0x6150646563617274;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_100DED7F4(char *a1, char *a2)
{
  return qword_1011B6F60[*a1] == qword_1011B6F60[*a2];
}

Swift::Int sub_100DED818()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011B6F60[v1]);
  return Hasher._finalize()();
}

void sub_100DED868()
{
  Hasher._combine(_:)(qword_1011B6F60[*v0]);
}

Swift::Int sub_100DED8A0()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011B6F60[v1]);
  return Hasher._finalize()();
}

void sub_100DED8EC(void *a1@<X8>)
{
  *a1 = qword_1011B6F60[*v1];
}

unint64_t sub_100DED904()
{
  return sub_100DED724(*v0);
}

uint64_t sub_100DED90C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100DF492C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100DED934()
{
  return qword_1011B6F60[*v0];
}

void sub_100DED94C(void *a1@<X8>)
{
  *a1 = &off_1015031A0;
}

uint64_t sub_100DED95C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100DF32DC();
  unint64_t v5 = sub_100DF3334();

  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100DED9B4(uint64_t a1)
{
  unint64_t v2 = sub_100DF3334();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100DED9F0(uint64_t a1)
{
  unint64_t v2 = sub_100DF3334();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100DEDA2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v60 = a1;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v2 - 8, v3);
  int v54 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v56 = (uint64_t)&v49 - v7;
  __chkstk_darwin(v8, v9);
  uint64_t v59 = (uint64_t)&v49 - v10;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CRLAssetData();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v52 = (uint64_t)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v49 - v22;
  sub_100A68AF0(v1, (uint64_t)v15);
  uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v50(v23, v15, v11);
  uint64_t v24 = *(int *)(v16 + 20);
  uint64_t v26 = *(void *)(v1 + v24);
  uint64_t v25 = *(void *)(v1 + v24 + 8);
  uint64_t v27 = *(void *)(v1 + *(int *)(v16 + 24));
  uint64_t v28 = &v23[v24];
  *(void *)uint64_t v28 = v26;
  *((void *)v28 + 1) = v25;
  uint64_t v29 = *(int *)(v16 + 24);
  id v55 = v23;
  *(void *)&v23[v29] = v27;
  uint64_t v30 = *(void (**)(char *, uint64_t))(v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v53 = v11;
  uint64_t v51 = v30;
  v30(v15, v11);
  uint64_t v31 = (int *)type metadata accessor for CRLImageItemAssetData(0);
  uint64_t v32 = v31[5];
  uint64_t v57 = v1;
  uint64_t v33 = v56;
  sub_100522E9C(v1 + v32, v56, (uint64_t *)&unk_10167D2B0);
  uint64_t v58 = v17;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v33, 1, v16) == 1)
  {
    sub_100522F00(v33, (uint64_t *)&unk_10167D2B0);
    uint64_t v34 = v59;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v59, 1, 1, v16);
  }
  else
  {
    uint64_t v35 = v33;
    uint64_t v36 = v52;
    sub_100A37464(v35, v52, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100A68AF0(v36, (uint64_t)v15);
    uint64_t v37 = v53;
    uint64_t v38 = (uint64_t)v54;
    v50(v54, v15, v53);
    uint64_t v39 = *(int *)(v16 + 20);
    uint64_t v41 = *(void *)(v36 + v39);
    uint64_t v40 = *(void *)(v36 + v39 + 8);
    uint64_t v42 = *(void *)(v36 + *(int *)(v16 + 24));
    uint64_t v43 = (void *)(v38 + v39);
    *uint64_t v43 = v41;
    v43[1] = v40;
    *(void *)(v38 + *(int *)(v16 + 24)) = v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v51(v15, v37);
    sub_100DF4864(v36, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v38, 0, 1, v16);
    uint64_t v34 = v59;
    sub_10051B3EC(v38, v59, (uint64_t *)&unk_10167D2B0);
  }
  uint64_t v44 = *(void *)(v57 + v31[6]);
  char v45 = *(unsigned char *)(v57 + v31[7]);
  uint64_t v46 = *(void *)(v57 + v31[8]);
  uint64_t v47 = v60;
  sub_100A37464((uint64_t)v55, v60, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_10051B3EC(v34, v47 + v31[5], (uint64_t *)&unk_10167D2B0);
  *(void *)(v47 + v31[6]) = v44;
  *(unsigned char *)(v47 + v31[7]) = v45;
  *(void *)(v47 + v31[8]) = v46;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_100DEDEA0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_10169CF08);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100DF3334();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v14) = 0;
  type metadata accessor for CRLAssetData();
  sub_100DF20AC(&qword_1016737B0, (void (*)(uint64_t))type metadata accessor for CRLAssetData);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for CRLImageItemAssetData(0);
    LOBYTE(v14) = 1;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    uint64_t v14 = *(void *)(v3 + *(int *)(v10 + 24));
    char v13 = 2;
    sub_10089DB5C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v14) = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    uint64_t v14 = *(void *)(v3 + *(int *)(v10 + 32));
    char v13 = 4;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100DEE12C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLAssetData();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v38 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1005057FC(&qword_10169CF00);
  uint64_t v37 = *(void *)(v39 - 8);
  __chkstk_darwin(v39, v11);
  char v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLImageItemAssetData(0);
  uint64_t v15 = (int *)(v14 - 8);
  __n128 v17 = __chkstk_darwin(v14, v16);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void (**)(__n128))(v8 + 56);
  uint64_t v44 = &v19[v15[7]];
  v20(v17);
  uint64_t v41 = v15[8];
  *(void *)&v19[v41] = 0;
  uint64_t v21 = v15[9];
  v19[v21] = 2;
  uint64_t v22 = v15[10];
  uint64_t v42 = a1;
  uint64_t v43 = v22;
  *(void *)&v19[v22] = _swiftEmptyDictionarySingleton;
  sub_10050F848(a1, a1[3]);
  sub_100DF3334();
  uint64_t v40 = v13;
  uint64_t v23 = v45;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v23)
  {
    uint64_t v28 = (uint64_t)v44;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v42);
    sub_100522F00(v28, (uint64_t *)&unk_10167D2B0);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v45 = v21;
    uint64_t v24 = (uint64_t)v6;
    uint64_t v25 = v37;
    LOBYTE(v47) = 0;
    sub_100DF20AC(&qword_1016737A0, (void (*)(uint64_t))type metadata accessor for CRLAssetData);
    uint64_t v26 = (uint64_t)v38;
    uint64_t v27 = v39;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_100A37464(v26, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    LOBYTE(v47) = 1;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_100557504(v24, (uint64_t)v44);
    char v46 = 2;
    sub_10089DAB4();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v29 = v47;
    uint64_t v30 = v41;
    swift_bridgeObjectRelease();
    *(void *)&v19[v30] = v29;
    LOBYTE(v47) = 3;
    v19[v45] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    sub_1005057FC((uint64_t *)&unk_101687A40);
    char v46 = 4;
    sub_100557304();
    uint64_t v31 = v40;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v31, v27);
    uint64_t v32 = v47;
    uint64_t v33 = v43;
    swift_bridgeObjectRelease();
    *(void *)&v19[v33] = v32;
    sub_100DF48C4((uint64_t)v19, v36, type metadata accessor for CRLImageItemAssetData);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v42);
    return sub_100DF4864((uint64_t)v19, type metadata accessor for CRLImageItemAssetData);
  }
}

uint64_t sub_100DEE690@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100DEE12C(a1, a2);
}

uint64_t sub_100DEE6A8(void *a1)
{
  return sub_100DEDEA0(a1);
}

uint64_t sub_100DEE6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100DF20AC(&qword_10169CF10, (void (*)(uint64_t))type metadata accessor for CRLImageItemAssetData);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100DEE744(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100DF20AC(&qword_10169CF10, (void (*)(uint64_t))type metadata accessor for CRLImageItemAssetData);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100DEE7C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100DF20AC(&qword_10169CD70, (void (*)(uint64_t))type metadata accessor for CRLImageItemAssetData);
  uint64_t v7 = sub_100DF20AC(&qword_10169CF18, (void (*)(uint64_t))type metadata accessor for CRLImageItemAssetData);

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100DEE894(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100DF20AC(&qword_10169CF10, (void (*)(uint64_t))type metadata accessor for CRLImageItemAssetData);

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100DEE910()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100DEE990()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100DEEA08(uint64_t a1)
{
  uint64_t v2 = sub_100DF20AC(&qword_10169CEB0, (void (*)(uint64_t))type metadata accessor for CRLImageItemAssetData);

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100DEEA84()
{
  qword_10171C760 = 97;
  *(void *)algn_10171C768 = 0xE100000000000000;
  qword_10171C770 = swift_getKeyPath();
  unk_10171C778 = 98;
  qword_10171C780 = 0xE100000000000000;
  qword_10171C788 = swift_getKeyPath();
  qword_10171C790 = 99;
  qword_10171C798 = 0xE100000000000000;
  uint64_t result = swift_getKeyPath();
  qword_10171C7A0 = result;
  return result;
}

uint64_t sub_100DEEAFC@<X0>(void *a1@<X8>)
{
  if (qword_1016700F8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_10171C768;
  uint64_t v4 = qword_10171C770;
  uint64_t v3 = unk_10171C778;
  uint64_t v5 = qword_10171C780;
  uint64_t v6 = qword_10171C788;
  uint64_t v7 = qword_10171C790;
  uint64_t v8 = qword_10171C798;
  uint64_t v9 = qword_10171C7A0;
  *a1 = qword_10171C760;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  a1[8] = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();

  return swift_retain();
}

uint64_t sub_100DEEBC4(uint64_t a1)
{
  uint64_t v2 = sub_100DF20AC(&qword_10168C8E0, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);

  return static CRStruct_3.fieldKeys.getter(a1, v2);
}

uint64_t sub_100DEEC30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1005057FC(&qword_10168C8A0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for CRLAssetData();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = &v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_101670198 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = sub_100556B74(v15, (uint64_t)qword_10171CB50);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v14, v16, v15);
  __n128 v17 = &v14[*(int *)(v10 + 20)];
  *__n128 v17 = 0;
  v17[1] = 0xE000000000000000;
  *(void *)&v14[*(int *)(v10 + 24)] = _swiftEmptyDictionarySingleton;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  sub_10051A3F4((uint64_t)v21);
  sub_10051B3EC((uint64_t)v21, (uint64_t)v20, (uint64_t *)&unk_101685110);
  uint64_t v18 = type metadata accessor for CRLMaskInfoData();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v5, 1, 1, v18);
  return sub_100DED2A8((uint64_t)v14, (uint64_t)v9, 0, (uint64_t)v20, (uint64_t)v5, a1);
}

uint64_t sub_100DEEEB8(uint64_t a1)
{
  uint64_t v2 = sub_100DF20AC(&qword_10168C8F8, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);

  return CRType.context.getter(a1, v2);
}

uint64_t sub_100DEEF24()
{
  sub_100DF20AC(&qword_10168C8E0, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);

  return CRStruct_3.actionUndoingDifference(from:)();
}

uint64_t sub_100DEEFA8()
{
  sub_100DF20AC(&qword_10168C8E0, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);

  return CRStruct_3.apply(_:)();
}

uint64_t sub_100DEF024()
{
  sub_100DF20AC(&qword_10168C8E0, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);

  return CRStruct_3.hasDelta(from:)();
}

uint64_t sub_100DEF0A0()
{
  sub_100DF20AC(&qword_10168C8E0, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);

  return CRStruct_3.delta(_:from:)();
}

uint64_t sub_100DEF134(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100DF20AC(&qword_10168C8E0, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);

  return CRStruct_3.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_100DEF1B0()
{
  sub_100DF20AC(&qword_10168C8E0, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);

  return CRStruct_3.merge(delta:)();
}

uint64_t sub_100DEF22C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100DF20AC(&qword_10168C8E0, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);

  return CRStruct_3.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100DEF2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100DF20AC(&qword_10168C8E0, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);

  return CRStruct_3.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100DEF334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100DF20AC(&qword_10168C8E0, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);

  return CRStruct_3.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_100DEF3C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100DF20AC(&qword_10168C8E0, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);

  return CRStruct_3.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_100DEF444()
{
  sub_100DF20AC(&qword_10168C8E0, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);

  return CRStruct_3.needToFinalizeTimestamps()();
}

uint64_t sub_100DEF4B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100DF20AC(&qword_10168C8E0, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);

  return CRStruct_3.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_100DEF52C()
{
  sub_100DF20AC(&qword_10168C8E0, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);

  return CRStruct_3.merge(_:)();
}

uint64_t sub_100DEF5A8()
{
  return CRDT.serializedData(_:version:)();
}

uint64_t sub_100DEF628()
{
  return CRDT.init(serializedData:)();
}

uint64_t sub_100DEF6B8()
{
  return CRStruct_3.init(from:)();
}

uint64_t sub_100DEF738()
{
  return CRStruct_3.encode(to:)();
}

uint64_t sub_100DEF7B0(uint64_t a1)
{
  uint64_t v2 = sub_100DF20AC(&qword_10168C8E0, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);

  return CRStruct_3.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100DEF82C()
{
  return 3;
}

uint64_t sub_100DEF838()
{
  uint64_t v1 = *v0;
  id v2 = [self standardUserDefaults];
  unsigned __int8 v3 = [v2 BOOLForKey:@"CRLImageItemsUseUnsupportedMinVersionUserDefault"];

  if (v3)
  {
    return sub_1002094FC(999, 999, 0);
  }
  else
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    unint64_t v6 = v0[3];
    *(void *)(inited + 56) = &type metadata for UInt64;
    *(void *)(inited + 64) = &protocol witness table for UInt64;
    *(void *)(inited + 32) = v6;
    if (sub_1002094A4() < v6)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"computedMinRequiredVersion", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 242, (uint64_t)"Call to computedMinRequiredVersion while current minRequiredVersion is higher than current: %{public}d", 102, 2u, inited);
      sub_1005598CC(inited, (uint64_t)"computedMinRequiredVersion", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 242);
    }
    uint64_t v7 = swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t))(v1 + 104))(v7);
  }
}

uint64_t sub_100DEFA08()
{
  uint64_t v1 = self;
  id v2 = [v1 standardUserDefaults];
  unsigned __int8 v3 = [v2 BOOLForKey:@"CRLUnsupportedBoardItemsPropagatesToBoardUserDefault"];

  if (v3) {
    return 1;
  }
  id v4 = [v1 standardUserDefaults];
  unsigned __int8 v5 = [v4 BOOLForKey:@"CRLImageItemsUseUnsupportedMinVersionUserDefault"];

  if (v5) {
    return 1;
  }
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  unint64_t v8 = *(void *)(v0 + 24);
  *(void *)(inited + 56) = &type metadata for UInt64;
  *(void *)(inited + 64) = &protocol witness table for UInt64;
  *(void *)(inited + 32) = v8;
  if (sub_1002094A4() < v8)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"computedMinRequiredVersionMakesBoardUnsupported", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 276, (uint64_t)"Call to computedMinRequiredVersionMakesBoardUnsupported while current minRequiredVersion is higher than current: %{public}d", 123, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"computedMinRequiredVersionMakesBoardUnsupported", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItemData.swift", 87, 2, 276);
  }
  swift_bridgeObjectRelease();
  return 0;
}

void sub_100DEFBA0(_UNKNOWN ****a1)
{
  uint64_t v2 = type metadata accessor for CRLImageItemCRDTData(0);
  __chkstk_darwin(v2, v3);
  unsigned __int8 v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*a1 == &off_10169CA50)
  {
    uint64_t v6 = (uint64_t)a1 + qword_10171C7A8;
    swift_beginAccess();
    sub_100DF48C4(v6, (uint64_t)v5, type metadata accessor for CRLImageItemCRDTData);
    swift_beginAccess();
    sub_100DF20AC(&qword_10168C8E0, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);
    swift_retain();
    CRStruct_3.merge(_:)();
    swift_endAccess();
    swift_release();
    sub_100DF4864((uint64_t)v5, type metadata accessor for CRLImageItemCRDTData);
  }
}

uint64_t sub_100DEFD30(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CRLImageItemCRDTData(0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7, v8);
  uint64_t v10 = &v25[-v9];
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = &v25[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15, v16);
  uint64_t v18 = &v25[-v17];
  if (*(_UNKNOWN ****)a1 != &off_10169CA50) {
    goto LABEL_5;
  }
  uint64_t v19 = v1 + *(void *)(*(void *)v1 + 632);
  swift_beginAccess();
  sub_100522E9C(v19, (uint64_t)v18, (uint64_t *)&unk_101683E10);
  uint64_t v20 = a1 + *(void *)(*(void *)a1 + 632);
  swift_beginAccess();
  sub_100522E9C(v20, (uint64_t)v14, (uint64_t *)&unk_101683E10);
  swift_retain();
  LOBYTE(v20) = sub_100FC1F68((uint64_t)v18, (uint64_t)v14);
  sub_100522F00((uint64_t)v14, (uint64_t *)&unk_101683E10);
  sub_100522F00((uint64_t)v18, (uint64_t *)&unk_101683E10);
  if ((v20 & 1) == 0)
  {
    swift_release();
LABEL_5:
    char v23 = 0;
    return v23 & 1;
  }
  uint64_t v21 = v1 + qword_10171C7A8;
  swift_beginAccess();
  sub_100DF48C4(v21, (uint64_t)v10, type metadata accessor for CRLImageItemCRDTData);
  uint64_t v22 = a1 + qword_10171C7A8;
  swift_beginAccess();
  sub_100DF48C4(v22, (uint64_t)v6, type metadata accessor for CRLImageItemCRDTData);
  char v23 = sub_100DF3DE8((uint64_t)v10, (uint64_t)v6);
  swift_release();
  sub_100DF4864((uint64_t)v6, type metadata accessor for CRLImageItemCRDTData);
  sub_100DF4864((uint64_t)v10, type metadata accessor for CRLImageItemCRDTData);
  return v23 & 1;
}

uint64_t sub_100DEFFEC(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for CRLImageItemCRDTData(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v16 - v10;
  uint64_t v12 = v2 + qword_10171C7A8;
  swift_beginAccess();
  if (a2)
  {
    sub_100DF48C4(v12, (uint64_t)v7, type metadata accessor for CRLImageItemCRDTData);
    sub_100DF20AC(&qword_10168C8F8, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);
    CRType.copy(renamingReferences:)();
    sub_100DF4864((uint64_t)v7, type metadata accessor for CRLImageItemCRDTData);
  }
  else
  {
    sub_100DF48C4(v12, (uint64_t)v11, type metadata accessor for CRLImageItemCRDTData);
  }
  if (qword_10166EE10 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for CRCodableVersion();
  sub_100556B74(v13, (uint64_t)qword_10171A2D8);
  sub_100DF20AC(&qword_10168B258, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);
  uint64_t v14 = CRDT.serializedData(_:version:)();
  sub_100DF4864((uint64_t)v11, type metadata accessor for CRLImageItemCRDTData);
  return v14;
}

uint64_t sub_100DF0240(_UNKNOWN ****a1)
{
  uint64_t v3 = type metadata accessor for CRLImageItemCRDTData(0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7, v8);
  uint64_t v10 = &v15[-v9];
  if (*a1 == &off_10169CA50)
  {
    uint64_t v11 = v1 + qword_10171C7A8;
    swift_beginAccess();
    sub_100DF48C4(v11, (uint64_t)v10, type metadata accessor for CRLImageItemCRDTData);
    uint64_t v12 = (uint64_t)a1 + qword_10171C7A8;
    swift_beginAccess();
    sub_100DF48C4(v12, (uint64_t)v6, type metadata accessor for CRLImageItemCRDTData);
    sub_100DF20AC(&qword_10168C8E0, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);
    char v13 = CRStruct_3.hasDelta(from:)();
    sub_100DF4864((uint64_t)v6, type metadata accessor for CRLImageItemCRDTData);
    sub_100DF4864((uint64_t)v10, type metadata accessor for CRLImageItemCRDTData);
    return v13 & 1;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100DF0460(uint64_t a1, uint64_t a2)
{
  v27[1] = a2;
  v27[0] = type metadata accessor for CRLImageItemCRDTData(0);
  __chkstk_darwin(v27[0], v3);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v27 - v8;
  uint64_t v10 = sub_1005057FC(&qword_10169CF20);
  __chkstk_darwin(v10 - 8, v11);
  char v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)v27 - v16;
  uint64_t v18 = swift_dynamicCastClass();
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = v2 + qword_10171C7A8;
    swift_beginAccess();
    sub_100DF48C4(v20, (uint64_t)v9, type metadata accessor for CRLImageItemCRDTData);
    uint64_t v21 = v19 + qword_10171C7A8;
    swift_beginAccess();
    sub_100DF48C4(v21, (uint64_t)v5, type metadata accessor for CRLImageItemCRDTData);
    sub_100DF20AC(&qword_10168C8E0, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);
    swift_retain();
    CRStruct_3.delta(_:from:)();
    sub_100DF4864((uint64_t)v5, type metadata accessor for CRLImageItemCRDTData);
    sub_100DF4864((uint64_t)v9, type metadata accessor for CRLImageItemCRDTData);
    sub_100522E9C((uint64_t)v17, (uint64_t)v13, &qword_10169CF20);
    uint64_t v22 = sub_1005057FC(&qword_10169CED0);
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v13, 1, v22) == 1)
    {
      sub_100522F00((uint64_t)v17, &qword_10169CF20);
      swift_release();
      sub_100522F00((uint64_t)v13, &qword_10169CF20);
      return 0;
    }
    else
    {
      if (qword_10166EE10 != -1) {
        swift_once();
      }
      uint64_t v25 = type metadata accessor for CRCodableVersion();
      sub_100556B74(v25, (uint64_t)qword_10171A2D8);
      sub_100523288(&qword_10169CEC8, &qword_10169CED0);
      uint64_t v24 = PartialCRDT.deltaSerializedData(_:version:)();
      swift_release();
      sub_100522F00((uint64_t)v17, &qword_10169CF20);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v22);
    }
    return v24;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

unint64_t sub_100DF08B8(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v39 = *v3;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v38 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_10169CED0);
  uint64_t v40 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100510D4C(a1, a2);
  sub_100523288(&qword_10169CEC8, &qword_10169CED0);
  LOBYTE(a2) = v13;
  uint64_t v18 = v41;
  PartialCRDT.init(serializedData:)();
  if (!v18)
  {
    uint64_t v36 = v12;
    uint64_t v37 = v8;
    uint64_t v41 = v9;
    swift_beginAccess();
    type metadata accessor for CRLImageItemCRDTData(0);
    sub_100DF20AC(&qword_10168C8E0, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);
    LODWORD(a2) = CRStruct_3.merge(delta:)();
    swift_endAccess();
    if ((a2 & 1) == 0)
    {
      uint64_t v33 = v16;
      uint64_t v34 = v13;
      int v35 = a2;
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v19 = (void *)static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      uint64_t v21 = (uint64_t)v3 + *(void *)(*v3 + 632);
      swift_beginAccess();
      uint64_t v22 = v21;
      uint64_t v23 = (uint64_t)v37;
      sub_100522E9C(v22, (uint64_t)v37, (uint64_t *)&unk_101683E10);
      id v24 = v19;
      sub_1005057FC(&qword_101674550);
      uint64_t v25 = v36;
      CRRegister.wrappedValue.getter();
      sub_100522F00(v23, (uint64_t *)&unk_101683E10);
      a2 = UUID.uuidString.getter();
      uint64_t v27 = v26;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v25, v41);
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v28 = sub_100528BE4();
      *(void *)(inited + 64) = v28;
      *(void *)(inited + 32) = a2;
      *(void *)(inited + 40) = v27;
      uint64_t v42 = v3;
      swift_retain();
      uint64_t v29 = String.init<A>(describing:)();
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v28;
      *(void *)(inited + 72) = v29;
      *(void *)(inited + 80) = v30;
      uint64_t v31 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v24, (uint64_t)&_mh_execute_header, v31, (uint64_t)"Delta failed to apply for %{public}@%{public}@", 46, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      LOBYTE(a2) = v35;
      uint64_t v13 = v34;
      uint64_t v16 = v33;
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v13);
  }
  return a2 & 1;
}

unint64_t sub_100DF0D88()
{
  uint64_t v0 = type metadata accessor for CRLAssetData();
  uint64_t v38 = *(void *)(v0 - 8);
  uint64_t v39 = v0;
  __chkstk_darwin(v0, v1);
  uint64_t v34 = (uint64_t)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v33 - v5;
  uint64_t v7 = type metadata accessor for CRLImageItemAssetData(0);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7, v9);
  uint64_t v36 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v33 - v13;
  sub_1005057FC(&qword_1016737C8);
  uint64_t v15 = (int *)(sub_1005057FC(&qword_10169A0F0) - 8);
  uint64_t v16 = *(void *)v15;
  uint64_t v35 = *(void *)(*(void *)v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_10117D8C0;
  uint64_t v37 = v18;
  uint64_t v19 = (void *)(v18 + v17);
  unint64_t v20 = v18 + v17 + v15[14];
  *uint64_t v19 = 0x6567616D69;
  v19[1] = 0xE500000000000000;
  swift_beginAccess();
  sub_1005057FC(&qword_10167F4B0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  sub_100DF48C4((uint64_t)v14, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100DF4864((uint64_t)v14, type metadata accessor for CRLImageItemAssetData);
  uint64_t v21 = type metadata accessor for UUID();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v33 = *(void (**)(unint64_t, char *, uint64_t))(v22 + 16);
  v33(v20, v6, v21);
  sub_100DF4864((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  uint64_t v23 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
  v23(v20, 0, 1, v21);
  id v24 = (void *)((char *)v19 + v35);
  uint64_t v25 = (char *)v19 + v35 + v15[14];
  *id v24 = 0x69616E626D756874;
  v24[1] = 0xE90000000000006CLL;
  swift_beginAccess();
  uint64_t v26 = v36;
  CRRegister.wrappedValue.getter();
  uint64_t v27 = (uint64_t)v26;
  swift_endAccess();
  uint64_t v28 = (uint64_t)&v26[*(int *)(v8 + 28)];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v28, 1, v39))
  {
    sub_100DF4864(v27, type metadata accessor for CRLImageItemAssetData);
    uint64_t v29 = 1;
  }
  else
  {
    uint64_t v30 = v28;
    uint64_t v31 = v34;
    sub_100DF48C4(v30, v34, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100DF4864(v27, type metadata accessor for CRLImageItemAssetData);
    v33((unint64_t)v25, (char *)v31, v21);
    sub_100DF4864(v31, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    uint64_t v29 = 0;
  }
  v23((unint64_t)v25, v29, 1, v21);
  return sub_100A394EC(v37);
}

uint64_t sub_100DF11D8()
{
  return sub_100DF4864(v0 + qword_10171C7A8, type metadata accessor for CRLImageItemCRDTData);
}

uint64_t sub_100DF1210()
{
  sub_100522F00(v0 + *(void *)(*(void *)v0 + 632), (uint64_t *)&unk_101683E10);
  sub_100DF4864(v0 + qword_10171C7A8, type metadata accessor for CRLImageItemCRDTData);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLImageItemData(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10169CA28);
}

uint64_t sub_100DF12CC()
{
  uint64_t result = type metadata accessor for CRLImageItemCRDTData(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLImageItemCRDTData(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10169CD58);
}

uint64_t *sub_100DF137C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005057FC(&qword_10167F4B0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1005057FC(&qword_101673478);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1005057FC(&qword_10168C8A8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100DF14F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10167F4B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_1005057FC(&qword_10168C8A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100DF15F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_10167F4B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_10168C8A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100DF171C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_10167F4B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_10168C8A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100DF184C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_10167F4B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_10168C8A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100DF196C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_10167F4B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_10168C8A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100DF1A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100DF1AA8);
}

uint64_t sub_100DF1AA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_10167F4B0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1005057FC(&qword_101673478);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_1005057FC(&qword_10168C8A8);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[7]);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_100DF1C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100DF1C28);
}

uint64_t sub_100DF1C28(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1005057FC(&qword_10167F4B0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_1005057FC(&qword_101673478);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t result = sub_1005057FC(&qword_10168C8A8);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[7]) = (a2 - 1);
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[6];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_100DF1D90()
{
  sub_100DF1EE8();
  if (v0 <= 0x3F)
  {
    sub_100DF1F9C(319, &qword_101673500, (uint64_t *)&unk_101685110, (void (*)(void))sub_100552CB8);
    if (v1 <= 0x3F)
    {
      sub_100DF1F9C(319, &qword_10169CD78, &qword_10168C8A0, (void (*)(void))sub_100DF2008);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100DF1EE8()
{
  if (!qword_10169CD68)
  {
    type metadata accessor for CRLImageItemAssetData(255);
    sub_100DF20AC(&qword_10169CD70, (void (*)(uint64_t))type metadata accessor for CRLImageItemAssetData);
    unint64_t v0 = type metadata accessor for CRRegister();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10169CD68);
    }
  }
}

uint64_t type metadata accessor for CRLImageItemAssetData(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10169CE10);
}

void sub_100DF1F9C(uint64_t a1, unint64_t *a2, uint64_t *a3, void (*a4)(void))
{
  if (!*a2)
  {
    sub_100522D34(a3);
    a4();
    unint64_t v6 = type metadata accessor for CRRegister();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_100DF2008()
{
  unint64_t result = qword_10169CD80;
  if (!qword_10169CD80)
  {
    sub_100522D34(&qword_10168C8A0);
    sub_100DF20AC(&qword_10168B7A0, (void (*)(uint64_t))type metadata accessor for CRLMaskInfoData);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169CD80);
  }
  return result;
}

uint64_t sub_100DF20AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_100DF20F4(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v26(a1, a2, v7);
    uint64_t v8 = type metadata accessor for CRLAssetData();
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    *(void *)&a1[*(int *)(v8 + 24)] = *(void *)&a2[*(int *)(v8 + 24)];
    uint64_t v13 = a3[5];
    __dst = &a1[v13];
    uint64_t v14 = &a2[v13];
    uint64_t v15 = *(void *)(v8 - 8);
    unint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16(v14, 1, v8))
    {
      uint64_t v17 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
      memcpy(__dst, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v26(__dst, v14, v7);
      uint64_t v19 = *(int *)(v8 + 20);
      unint64_t v20 = &__dst[v19];
      uint64_t v21 = &v14[v19];
      uint64_t v22 = *((void *)v21 + 1);
      *(void *)unint64_t v20 = *(void *)v21;
      *((void *)v20 + 1) = v22;
      *(void *)&__dst[*(int *)(v8 + 24)] = *(void *)&v14[*(int *)(v8 + 24)];
      uint64_t v23 = *(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23(__dst, 0, 1, v8);
    }
    uint64_t v24 = a3[7];
    *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
    a1[v24] = a2[v24];
    *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100DF233C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = type metadata accessor for CRLAssetData();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v7, 1, v6))
  {
    v5(v7, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100DF2470(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v24(a1, a2, v6);
  uint64_t v7 = type metadata accessor for CRLAssetData();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  uint64_t v12 = a3[5];
  __dst = (char *)(a1 + v12);
  uint64_t v13 = (char *)(a2 + v12);
  uint64_t v14 = *(void *)(v7 - 8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15(v13, 1, v7))
  {
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
    memcpy(__dst, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v24((uint64_t)__dst, (uint64_t)v13, v6);
    uint64_t v17 = *(int *)(v7 + 20);
    uint64_t v18 = &__dst[v17];
    uint64_t v19 = &v13[v17];
    uint64_t v20 = *((void *)v19 + 1);
    *(void *)uint64_t v18 = *(void *)v19;
    *((void *)v18 + 1) = v20;
    *(void *)&__dst[*(int *)(v7 + 24)] = *(void *)&v13[*(int *)(v7 + 24)];
    uint64_t v21 = *(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(__dst, 0, 1, v7);
  }
  uint64_t v22 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v22) = *(unsigned char *)(a2 + v22);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100DF2668(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 24);
  v28(a1, a2, v6);
  uint64_t v7 = type metadata accessor for CRLAssetData();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[5];
  uint64_t v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = *(void *)(v7 - 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(a1 + v11, 1, v7);
  int v17 = v15((uint64_t)v13, 1, v7);
  if (!v16)
  {
    if (!v17)
    {
      v28((uint64_t)v12, (uint64_t)v13, v6);
      uint64_t v24 = *(int *)(v7 + 20);
      uint64_t v25 = &v12[v24];
      uint64_t v26 = &v13[v24];
      *(void *)uint64_t v25 = *(void *)v26;
      *((void *)v25 + 1) = *((void *)v26 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v12[*(int *)(v7 + 24)] = *(void *)&v13[*(int *)(v7 + 24)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_100DF4864((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v22 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
    memcpy(v12, v13, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v12, v13, v6);
  uint64_t v18 = *(int *)(v7 + 20);
  uint64_t v19 = &v12[v18];
  uint64_t v20 = &v13[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  *(void *)&v12[*(int *)(v7 + 24)] = *(void *)&v13[*(int *)(v7 + 24)];
  uint64_t v21 = *(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21(v12, 0, 1, v7);
LABEL_7:
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100DF2974(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = type metadata accessor for CRLAssetData();
  *(_OWORD *)(a1 + *(int *)(v8 + 20)) = *(_OWORD *)(a2 + *(int *)(v8 + 20));
  *(void *)(a1 + *(int *)(v8 + 24)) = *(void *)(a2 + *(int *)(v8 + 24));
  uint64_t v9 = a3[5];
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2 + v9, 1, v8))
  {
    uint64_t v13 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v6);
    *(_OWORD *)&v10[*(int *)(v8 + 20)] = *(_OWORD *)&v11[*(int *)(v8 + 20)];
    *(void *)&v10[*(int *)(v8 + 24)] = *(void *)&v11[*(int *)(v8 + 24)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v8);
  }
  uint64_t v14 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100DF2B20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v28 = *(void *)(v6 - 8);
  uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 40);
  v29(a1, a2, v6);
  uint64_t v7 = type metadata accessor for CRLAssetData();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  swift_bridgeObjectRelease();
  uint64_t v30 = a3;
  uint64_t v13 = a3[5];
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  uint64_t v16 = *(void *)(v7 - 8);
  int v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(a1 + v13, 1, v7);
  int v19 = v17((uint64_t)v15, 1, v7);
  if (!v18)
  {
    if (!v19)
    {
      v29((uint64_t)v14, (uint64_t)v15, v6);
      uint64_t v23 = *(int *)(v7 + 20);
      uint64_t v24 = &v14[v23];
      uint64_t v25 = &v15[v23];
      uint64_t v27 = *(void *)v25;
      uint64_t v26 = *((void *)v25 + 1);
      *(void *)uint64_t v24 = v27;
      *((void *)v24 + 1) = v26;
      swift_bridgeObjectRelease();
      *(void *)&v14[*(int *)(v7 + 24)] = *(void *)&v15[*(int *)(v7 + 24)];
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_100DF4864((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
    memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v14, v15, v6);
  *(_OWORD *)&v14[*(int *)(v7 + 20)] = *(_OWORD *)&v15[*(int *)(v7 + 20)];
  *(void *)&v14[*(int *)(v7 + 24)] = *(void *)&v15[*(int *)(v7 + 24)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v7);
LABEL_7:
  *(void *)(a1 + v30[6]) = *(void *)(a2 + v30[6]);
  swift_bridgeObjectRelease();
  uint64_t v21 = v30[8];
  *(unsigned char *)(a1 + v30[7]) = *(unsigned char *)(a2 + v30[7]);
  *(void *)(a1 + v21) = *(void *)(a2 + v21);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100DF2DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100DF2DE0);
}

uint64_t sub_100DF2DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CRLAssetData();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 32));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_100DF2EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100DF2F0C);
}

uint64_t sub_100DF2F0C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for CRLAssetData();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1005057FC((uint64_t *)&unk_10167D2B0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_100DF3020()
{
  type metadata accessor for CRLAssetData();
  if (v0 <= 0x3F)
  {
    sub_10055420C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100DF3108()
{
  return sub_100DF20AC(&qword_10169CE58, (void (*)(uint64_t))type metadata accessor for CRLImageItemAssetData);
}

uint64_t sub_100DF3150()
{
  return sub_100DF20AC(&qword_10169CD70, (void (*)(uint64_t))type metadata accessor for CRLImageItemAssetData);
}

uint64_t sub_100DF3198()
{
  return sub_100DF20AC(&qword_10169CE60, (void (*)(uint64_t))type metadata accessor for CRLImageItemAssetData);
}

uint64_t sub_100DF31E0()
{
  return sub_100DF20AC(&qword_10169CE68, (void (*)(uint64_t))type metadata accessor for CRLImageItemAssetData);
}

unint64_t sub_100DF322C()
{
  unint64_t result = qword_10169CE70;
  if (!qword_10169CE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169CE70);
  }
  return result;
}

unint64_t sub_100DF3284()
{
  unint64_t result = qword_10169CE78;
  if (!qword_10169CE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169CE78);
  }
  return result;
}

unint64_t sub_100DF32DC()
{
  unint64_t result = qword_10169CE80;
  if (!qword_10169CE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169CE80);
  }
  return result;
}

unint64_t sub_100DF3334()
{
  unint64_t result = qword_10169CE88;
  if (!qword_10169CE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169CE88);
  }
  return result;
}

unint64_t sub_100DF338C()
{
  unint64_t result = qword_10169CE90;
  if (!qword_10169CE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169CE90);
  }
  return result;
}

unint64_t sub_100DF33E4()
{
  unint64_t result = qword_10169CE98;
  if (!qword_10169CE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169CE98);
  }
  return result;
}

uint64_t sub_100DF3438()
{
  return sub_100523288(&qword_10169CEA0, &qword_10169CEA8);
}

uint64_t sub_100DF3474()
{
  return sub_100DF20AC(&qword_10169CEB0, (void (*)(uint64_t))type metadata accessor for CRLImageItemAssetData);
}

uint64_t sub_100DF34BC()
{
  return sub_100DF20AC(&qword_10169CEB8, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);
}

uint64_t sub_100DF3504()
{
  return sub_100DF20AC(&qword_10169CEC0, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);
}

uint64_t sub_100DF354C()
{
  return sub_100DF20AC(&qword_10168C8F8, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);
}

uint64_t sub_100DF3594()
{
  return sub_100523288(&qword_10169CEC8, &qword_10169CED0);
}

uint64_t sub_100DF35D0()
{
  return sub_100DF20AC(&qword_10168B258, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);
}

uint64_t sub_100DF3618()
{
  return sub_100DF20AC(&qword_10169CED8, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);
}

uint64_t sub_100DF3660()
{
  return sub_100523288(&qword_10169CEE0, &qword_10167F4B0);
}

uint64_t sub_100DF369C()
{
  return sub_100523288(&qword_101673730, &qword_101673478);
}

uint64_t sub_100DF36D8()
{
  return sub_100523288(&qword_10169CEE8, &qword_10168C8A8);
}

uint64_t sub_100DF3714()
{
  return sub_100DF20AC(&qword_10169CEF0, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);
}

uint64_t sub_100DF375C()
{
  return sub_100DF20AC(&qword_10169CEF8, (void (*)(uint64_t))type metadata accessor for CRLImageItemAssetData);
}

uint64_t sub_100DF37A4@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  type metadata accessor for CRLImageItemCRDTData(0);
  sub_1005057FC(&qword_101673478);
  CRRegister.wrappedValue.getter();
  sub_10051B3EC((uint64_t)v3, (uint64_t)v4, (uint64_t *)&unk_101685110);
  swift_endAccess();
  return sub_10051B3EC((uint64_t)v4, a1, (uint64_t *)&unk_101685110);
}

uint64_t sub_100DF384C(uint64_t a1)
{
  swift_beginAccess();
  sub_10051B3EC(a1, (uint64_t)&v3, (uint64_t *)&unk_101685110);
  type metadata accessor for CRLImageItemCRDTData(0);
  sub_1005057FC(&qword_101673478);
  CRRegister.wrappedValue.setter();
  return swift_endAccess();
}

uint64_t sub_100DF38E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLAssetData();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_10167D2D0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v53 - v19;
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)&v53 - v23;
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    goto LABEL_26;
  }
  uint64_t v25 = *(int *)(v4 + 20);
  uint64_t v26 = *(void *)(a1 + v25);
  uint64_t v27 = *(void *)(a1 + v25 + 8);
  uint64_t v28 = (void *)(a2 + v25);
  if (v26 != *v28 || v27 != v28[1])
  {
    char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
    char v31 = 0;
    if ((v30 & 1) == 0) {
      return v31 & 1;
    }
  }
  if ((sub_100ED60AC(*(void *)(a1 + *(int *)(v4 + 24)), *(void *)(a2 + *(int *)(v4 + 24))) & 1) == 0) {
    goto LABEL_26;
  }
  uint64_t v56 = v16;
  int v54 = v8;
  uint64_t v32 = type metadata accessor for CRLImageItemAssetData(0);
  sub_100522E9C(a1 + *(int *)(v32 + 20), (uint64_t)v24, (uint64_t *)&unk_10167D2B0);
  uint64_t v55 = v32;
  sub_100522E9C(a2 + *(int *)(v32 + 20), (uint64_t)v20, (uint64_t *)&unk_10167D2B0);
  uint64_t v33 = (uint64_t)&v12[*(int *)(v9 + 48)];
  sub_100522E9C((uint64_t)v24, (uint64_t)v12, (uint64_t *)&unk_10167D2B0);
  sub_100522E9C((uint64_t)v20, v33, (uint64_t *)&unk_10167D2B0);
  uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v34((uint64_t)v12, 1, v4) == 1)
  {
    sub_100522F00((uint64_t)v20, (uint64_t *)&unk_10167D2B0);
    sub_100522F00((uint64_t)v24, (uint64_t *)&unk_10167D2B0);
    if (v34(v33, 1, v4) == 1)
    {
      sub_100522F00((uint64_t)v12, (uint64_t *)&unk_10167D2B0);
      goto LABEL_11;
    }
    goto LABEL_17;
  }
  uint64_t v39 = (uint64_t)v56;
  sub_100522E9C((uint64_t)v12, (uint64_t)v56, (uint64_t *)&unk_10167D2B0);
  if (v34(v33, 1, v4) == 1)
  {
    sub_100522F00((uint64_t)v20, (uint64_t *)&unk_10167D2B0);
    sub_100522F00((uint64_t)v24, (uint64_t *)&unk_10167D2B0);
    sub_100DF4864(v39, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
LABEL_17:
    uint64_t v40 = &qword_10167D2D0;
    uint64_t v41 = (uint64_t)v12;
LABEL_25:
    sub_100522F00(v41, v40);
    goto LABEL_26;
  }
  uint64_t v42 = (uint64_t)v54;
  sub_100A37464(v33, (uint64_t)v54, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  if ((static UUID.== infix(_:_:)() & 1) == 0
    || ((uint64_t v43 = *(int *)(v4 + 20),
         uint64_t v44 = *(void *)(v39 + v43),
         uint64_t v45 = *(void *)(v39 + v43 + 8),
         char v46 = (void *)(v42 + v43),
         v44 != *v46)
     || v45 != v46[1])
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    sub_100DF4864(v42, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100522F00((uint64_t)v20, (uint64_t *)&unk_10167D2B0);
    sub_100522F00((uint64_t)v24, (uint64_t *)&unk_10167D2B0);
    sub_100DF4864(v39, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    uint64_t v41 = (uint64_t)v12;
    uint64_t v40 = (uint64_t *)&unk_10167D2B0;
    goto LABEL_25;
  }
  char v47 = sub_100ED60AC(*(void *)(v39 + *(int *)(v4 + 24)), *(void *)(v42 + *(int *)(v4 + 24)));
  sub_100DF4864(v42, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100522F00((uint64_t)v20, (uint64_t *)&unk_10167D2B0);
  sub_100522F00((uint64_t)v24, (uint64_t *)&unk_10167D2B0);
  sub_100DF4864(v39, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100522F00((uint64_t)v12, (uint64_t *)&unk_10167D2B0);
  if ((v47 & 1) == 0) {
    goto LABEL_26;
  }
LABEL_11:
  uint64_t v35 = v55;
  uint64_t v36 = *(int *)(v55 + 24);
  uint64_t v37 = *(void *)(a1 + v36);
  uint64_t v38 = *(void *)(a2 + v36);
  if (v37)
  {
    if (v38 && sub_1005BA910(v37, v38)) {
      goto LABEL_29;
    }
LABEL_26:
    char v31 = 0;
    return v31 & 1;
  }
  if (v38) {
    goto LABEL_26;
  }
LABEL_29:
  uint64_t v49 = *(int *)(v35 + 28);
  int v50 = *(unsigned __int8 *)(a1 + v49);
  int v51 = *(unsigned __int8 *)(a2 + v49);
  if (v50 == 2)
  {
    if (v51 == 2)
    {
LABEL_34:
      char v31 = sub_100ED60AC(*(void *)(a1 + *(int *)(v35 + 32)), *(void *)(a2 + *(int *)(v35 + 32)));
      return v31 & 1;
    }
    goto LABEL_26;
  }
  char v31 = 0;
  BOOL v52 = (v50 & 1) == 0;
  if (v51 != 2 && ((v52 ^ v51) & 1) != 0) {
    goto LABEL_34;
  }
  return v31 & 1;
}

uint64_t sub_100DF3DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v65 = type metadata accessor for CRLMaskInfoData();
  uint64_t v68 = *(void *)(v65 - 8);
  __chkstk_darwin(v65, v4);
  uint64_t v61 = (uint64_t)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1005057FC(&qword_10168C8B0);
  __chkstk_darwin(v63, v6);
  uint64_t v66 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10168C8A0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v62 = (uint64_t)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v67 = (uint64_t)&v61 - v13;
  __chkstk_darwin(v14, v15);
  id v64 = (char *)&v61 - v16;
  uint64_t v17 = type metadata accessor for CRLImageItemCRDTData(0);
  __chkstk_darwin(v17, v18);
  uint64_t v69 = (uint64_t)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v70 = (uint64_t)&v61 - v22;
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v61 - v25;
  __chkstk_darwin(v27, v28);
  char v30 = (char *)&v61 - v29;
  uint64_t v31 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v31 - 8, v32);
  uint64_t v34 = (char *)&v61 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35, v36);
  uint64_t v38 = (char *)&v61 - v37;
  sub_1005057FC(&qword_10167F4B0);
  CRRegister.wrappedValue.getter();
  CRRegister.wrappedValue.getter();
  char v39 = sub_100DF38E4((uint64_t)v38, (uint64_t)v34);
  sub_100DF4864((uint64_t)v34, type metadata accessor for CRLImageItemAssetData);
  sub_100DF4864((uint64_t)v38, type metadata accessor for CRLImageItemAssetData);
  sub_100DF48C4(a1, (uint64_t)v30, type metadata accessor for CRLImageItemCRDTData);
  sub_100DF48C4(a2, (uint64_t)v26, type metadata accessor for CRLImageItemCRDTData);
  if ((v39 & 1) == 0)
  {
    sub_100DF4864((uint64_t)v26, type metadata accessor for CRLImageItemCRDTData);
    sub_100DF4864((uint64_t)v30, type metadata accessor for CRLImageItemCRDTData);
    uint64_t v40 = v70;
LABEL_9:
    sub_100DF48C4(a1, v40, type metadata accessor for CRLImageItemCRDTData);
    uint64_t v43 = a2;
    uint64_t v42 = v69;
    sub_100DF48C4(v43, v69, type metadata accessor for CRLImageItemCRDTData);
LABEL_10:
    sub_100DF4864(v42, type metadata accessor for CRLImageItemCRDTData);
    sub_100DF4864(v40, type metadata accessor for CRLImageItemCRDTData);
LABEL_11:
    char v44 = 0;
    return v44 & 1;
  }
  sub_1005057FC(&qword_101673478);
  CRRegister.wrappedValue.getter();
  sub_10051B3EC((uint64_t)v78, (uint64_t)v79, (uint64_t *)&unk_101685110);
  CRRegister.wrappedValue.getter();
  sub_10051B3EC((uint64_t)v78, (uint64_t)v80, (uint64_t *)&unk_101685110);
  sub_10051B3EC((uint64_t)v79, (uint64_t)v78, (uint64_t *)&unk_101685110);
  sub_10051B3EC((uint64_t)v80, (uint64_t)&v78[14] + 8, (uint64_t *)&unk_101685110);
  sub_10051B3EC((uint64_t)v79, (uint64_t)v81, (uint64_t *)&unk_101685110);
  if (sub_100556850((uint64_t)v81) == 1)
  {
    sub_100DF4864((uint64_t)v26, type metadata accessor for CRLImageItemCRDTData);
    sub_100DF4864((uint64_t)v30, type metadata accessor for CRLImageItemCRDTData);
    sub_10051B3EC((uint64_t)&v78[14] + 8, (uint64_t)v82, (uint64_t *)&unk_101685110);
    sub_10051B3EC((uint64_t)v82, (uint64_t)v77, (uint64_t *)&unk_101685110);
    if (sub_100556850((uint64_t)v77) == 1)
    {
      sub_10051B3EC((uint64_t)v78, (uint64_t)v76, (uint64_t *)&unk_101685110);
      sub_1005569D0(v76);
      uint64_t v40 = v70;
      sub_100DF48C4(a1, v70, type metadata accessor for CRLImageItemCRDTData);
      uint64_t v41 = a2;
      uint64_t v42 = v69;
      sub_100DF48C4(v41, v69, type metadata accessor for CRLImageItemCRDTData);
      goto LABEL_14;
    }
    goto LABEL_8;
  }
  sub_10051B3EC((uint64_t)v80, (uint64_t)v76, (uint64_t *)&unk_101685110);
  if (sub_100556850((uint64_t)v76) == 1)
  {
    sub_10051B3EC((uint64_t)v79, (uint64_t)v77, (uint64_t *)&unk_101685110);
    sub_100556A44(v77);
    sub_100DF4864((uint64_t)v26, type metadata accessor for CRLImageItemCRDTData);
    sub_100DF4864((uint64_t)v30, type metadata accessor for CRLImageItemCRDTData);
    sub_1005569D0(v79);
LABEL_8:
    uint64_t v40 = v70;
    memcpy(v77, v78, sizeof(v77));
    sub_100556868((uint64_t)v77);
    goto LABEL_9;
  }
  sub_10051B3EC((uint64_t)v79, (uint64_t)v71, (uint64_t *)&unk_101685110);
  v82[12] = v71[12];
  v82[13] = v71[13];
  uint64_t v83 = v72;
  v82[8] = v71[8];
  v82[9] = v71[9];
  v82[11] = v71[11];
  v82[10] = v71[10];
  v82[4] = v71[4];
  v82[5] = v71[5];
  v82[7] = v71[7];
  v82[6] = v71[6];
  v82[0] = v71[0];
  v82[1] = v71[1];
  v82[3] = v71[3];
  v82[2] = v71[2];
  sub_10051B3EC((uint64_t)v80, (uint64_t)v73, (uint64_t *)&unk_101685110);
  v77[12] = v73[12];
  v77[13] = v73[13];
  *(void *)&v77[14] = v74;
  v77[8] = v73[8];
  v77[9] = v73[9];
  v77[11] = v73[11];
  v77[10] = v73[10];
  v77[4] = v73[4];
  v77[5] = v73[5];
  v77[7] = v73[7];
  v77[6] = v73[6];
  v77[0] = v73[0];
  v77[1] = v73[1];
  v77[3] = v73[3];
  v77[2] = v73[2];
  sub_100556A44(v71);
  char v46 = sub_100A1CC04(v82, v77);
  sub_1005569D0(v80);
  sub_1005569D0(v79);
  sub_100DF4864((uint64_t)v26, type metadata accessor for CRLImageItemCRDTData);
  sub_100DF4864((uint64_t)v30, type metadata accessor for CRLImageItemCRDTData);
  sub_10051B3EC((uint64_t)v78, (uint64_t)v75, (uint64_t *)&unk_101685110);
  sub_1005569D0(v75);
  uint64_t v40 = v70;
  sub_100DF48C4(a1, v70, type metadata accessor for CRLImageItemCRDTData);
  uint64_t v47 = a2;
  uint64_t v42 = v69;
  sub_100DF48C4(v47, v69, type metadata accessor for CRLImageItemCRDTData);
  if ((v46 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  sub_1005057FC(&qword_10168C8A8);
  uint64_t v48 = (uint64_t)v64;
  CRRegister.wrappedValue.getter();
  uint64_t v49 = v67;
  CRRegister.wrappedValue.getter();
  uint64_t v50 = v66;
  uint64_t v51 = v66 + *(int *)(v63 + 48);
  sub_100522E9C(v48, v66, &qword_10168C8A0);
  sub_100522E9C(v49, v51, &qword_10168C8A0);
  uint64_t v52 = v68 + 48;
  uint64_t v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
  uint64_t v54 = v65;
  if (v53(v50, 1, v65) == 1)
  {
    uint64_t v68 = v52;
    sub_100522F00(v49, &qword_10168C8A0);
    sub_100522F00(v48, &qword_10168C8A0);
    sub_100DF4864(v42, type metadata accessor for CRLImageItemCRDTData);
    sub_100DF4864(v40, type metadata accessor for CRLImageItemCRDTData);
    if (v53(v51, 1, v54) == 1)
    {
      sub_100522F00(v50, &qword_10168C8A0);
      char v44 = 1;
      return v44 & 1;
    }
    goto LABEL_19;
  }
  uint64_t v55 = v62;
  sub_100522E9C(v50, v62, &qword_10168C8A0);
  if (v53(v51, 1, v54) == 1)
  {
    sub_100522F00(v67, &qword_10168C8A0);
    sub_100522F00(v48, &qword_10168C8A0);
    sub_100DF4864(v42, type metadata accessor for CRLImageItemCRDTData);
    sub_100DF4864(v40, type metadata accessor for CRLImageItemCRDTData);
    sub_100DF4864(v55, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
LABEL_19:
    sub_100522F00(v50, &qword_10168C8B0);
    goto LABEL_11;
  }
  uint64_t v56 = v61;
  sub_100A37464(v51, v61, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
  if ((sub_100AA7144(v55, v56) & 1) == 0) {
    goto LABEL_23;
  }
  uint64_t v57 = (long long *)(v55 + *(int *)(v54 + 20));
  long long v58 = *v57;
  v81[1] = v57[1];
  v81[0] = v58;
  uint64_t v59 = (long long *)(v56 + *(int *)(v54 + 20));
  long long v60 = *v59;
  v78[1] = v59[1];
  v78[0] = v60;
  if (sub_100FB9CB0((uint64_t)v81, (uint64_t)v78)) {
    char v44 = sub_100ED60AC(*(void *)(v55 + *(int *)(v54 + 24)), *(void *)(v56 + *(int *)(v54 + 24)));
  }
  else {
LABEL_23:
  }
    char v44 = 0;
  sub_100DF4864(v56, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
  sub_100522F00(v67, &qword_10168C8A0);
  sub_100522F00(v48, &qword_10168C8A0);
  sub_100DF4864(v42, type metadata accessor for CRLImageItemCRDTData);
  sub_100DF4864(v40, type metadata accessor for CRLImageItemCRDTData);
  sub_100DF4864(v55, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
  sub_100522F00(v50, &qword_10168C8A0);
  return v44 & 1;
}

uint64_t sub_100DF4864(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100DF48C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100DF492C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461446567616D69 && a2 == 0xE900000000000061;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69616E626D756874 && a2 == 0xED0000617461446CLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6150646563617274 && a2 == 0xEA00000000006874 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000010126A0D0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unsigned char *storeEnumTagSinglePayload for CRLImageItemAssetData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100DF4C48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLImageItemAssetData.CodingKeys()
{
  return &type metadata for CRLImageItemAssetData.CodingKeys;
}

unint64_t sub_100DF4C84()
{
  unint64_t result = qword_10169CF28;
  if (!qword_10169CF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169CF28);
  }
  return result;
}

void sub_100DF4CD8(char a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  if ((a1 & 1) != 0
    && (id v9 = [self availableMediaTypesForSourceType:1]) != 0)
  {
    uint64_t v10 = v9;
    id v11 = [objc_allocWithZone((Class)UIImagePickerController) init];
    [v11 setSourceType:1];
    [v11 setVideoQuality:0];
    [v11 setMediaTypes:v10];

    [v11 setDelegate:a2];
    uint64_t v12 = (void *)swift_allocObject();
    void v12[2] = a4;
    v12[3] = a5;
    _DWORD v12[4] = v11;
    char v39 = sub_100DF5290;
    uint64_t v40 = v12;
    aBlock = _NSConcreteStackBlock;
    uint64_t v36 = *(void *)"";
    uint64_t v37 = sub_100679958;
    uint64_t v38 = &unk_10152E0D8;
    uint64_t v13 = _Block_copy(&aBlock);
    swift_retain();
    id v14 = v11;
    swift_release();
    [a3 presentViewController:v14 animated:1 completion:v13];
    _Block_release(v13);
  }
  else
  {
    uint64_t v15 = self;
    id v16 = [v15 mainBundle];
    id v34 = a3;
    NSString v17 = String._bridgeToObjectiveC()();
    NSString v18 = String._bridgeToObjectiveC()();
    id v19 = [v16 localizedStringForKey:v17 value:v18 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v20 = [v15 mainBundle];
    NSString v21 = String._bridgeToObjectiveC()();
    NSString v22 = String._bridgeToObjectiveC()();
    id v23 = [v20 localizedStringForKey:v21 value:v22 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v26 = [self alertControllerWithTitle:v24 message:v25 preferredStyle:1];

    id v27 = [v15 mainBundle];
    NSString v28 = String._bridgeToObjectiveC()();
    NSString v29 = String._bridgeToObjectiveC()();
    id v30 = [v27 localizedStringForKey:v28 value:v29 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = a4;
    *(void *)(v31 + 24) = a5;
    swift_retain();
    NSString v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    char v39 = sub_100DF520C;
    uint64_t v40 = (void *)v31;
    aBlock = _NSConcreteStackBlock;
    uint64_t v36 = *(void *)"";
    uint64_t v37 = sub_10051CE64;
    uint64_t v38 = &unk_10152E088;
    uint64_t v33 = _Block_copy(&aBlock);
    swift_release();
    id v14 = [self actionWithTitle:v32 style:0 handler:v33];
    _Block_release(v33);

    [v26 addAction:v14];
    [v34 presentViewController:v26 animated:1 completion:0];
  }
}

uint64_t sub_100DF51D4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100DF520C()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_100DF5238(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100DF5248()
{
  return swift_release();
}

uint64_t sub_100DF5250()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100DF5290()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_100DF52C8(uint64_t a1, uint64_t a2)
{
  v3[2] = type metadata accessor for MainActor();
  v3[3] = static MainActor.shared.getter();
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)((swift_isaMask & *v2) + 0x50)
                                                + **(int **)((swift_isaMask & *v2) + 0x50));
  unsigned int v6 = (void *)swift_task_alloc();
  v3[4] = v6;
  *unsigned int v6 = v3;
  v6[1] = sub_100766CCC;
  return v8(a1, a2);
}

id sub_100DF547C(uint64_t a1)
{
  return sub_100DFA304(a1, type metadata accessor for CRLBoardLibraryCommand);
}

uint64_t type metadata accessor for CRLBoardLibraryCommand()
{
  return self;
}

id sub_100DF54C8(uint64_t a1, char a2)
{
  uint64_t v77 = type metadata accessor for CRLBoardIdentifierAndValue(0);
  uint64_t v67 = *(void *)(v77 - 8);
  __chkstk_darwin(v77, v5);
  uint64_t v7 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v68 = (uint64_t)&v64 - v10;
  __chkstk_darwin(v11, v12);
  id v14 = (char *)&v64 - v13;
  uint64_t v15 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v72 = *(void *)(v15 - 8);
  __chkstk_darwin(v15 - 8, v16);
  NSString v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  NSString v22 = (char *)&v64 - v21;
  __chkstk_darwin(v23, v24);
  id v26 = (char *)&v64 - v25;
  __chkstk_darwin(v27, v28);
  uint64_t v70 = (uint64_t)&v64 - v29;
  *(void *)(v2 + OBJC_IVAR____TtC8Freeform23CRLBoardFavoriteCommand_initialState) = &_swiftEmptySetSingleton;
  if (!*(void *)(a1 + 16)) {
    goto LABEL_45;
  }
  *(void *)(v2 + OBJC_IVAR____TtC8Freeform23CRLBoardFavoriteCommand_boardIdentifiers) = a1;
  int v69 = a2 & 1;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform23CRLBoardFavoriteCommand_favorite) = a2 & 1;
  uint64_t v30 = *(void *)(a1 + 56);
  uint64_t v65 = a1 + 56;
  uint64_t v31 = 1 << *(unsigned char *)(a1 + 32);
  if (v31 < 64) {
    uint64_t v32 = ~(-1 << v31);
  }
  else {
    uint64_t v32 = -1;
  }
  unint64_t v33 = v32 & v30;
  int64_t v66 = (unint64_t)(v31 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  id v64 = (char *)(id)v2;
  int64_t v34 = 0;
  id v79 = &_swiftEmptySetSingleton;
  uint64_t v73 = a1;
  uint64_t v71 = v26;
LABEL_8:
  if (v33)
  {
    uint64_t v74 = (v33 - 1) & v33;
    int64_t v75 = v34;
    unint64_t v38 = __clz(__rbit64(v33)) | (v34 << 6);
LABEL_28:
    uint64_t v43 = v70;
    sub_100DFA44C(*(void *)(a1 + 48) + *(void *)(v72 + 72) * v38, v70, type metadata accessor for CRLBoardIdentifier);
    sub_1005394E4(v43, (uint64_t)v26);
    sub_100DFA44C((uint64_t)v26, (uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
    Swift::UInt8 v44 = v69;
    uint64_t v76 = *(int *)(v77 + 20);
    v14[v76] = v69;
    uint64_t v45 = v79;
    Hasher.init(_seed:)();
    type metadata accessor for UUID();
    sub_100DFA3F4();
    swift_bridgeObjectRetain();
    dispatch thunk of Hashable.hash(into:)();
    uint64_t v78 = type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Hasher._combine(_:)(v44);
    Swift::Int v46 = Hasher._finalize()();
    uint64_t v47 = -1 << *((unsigned char *)v45 + 32);
    unint64_t v48 = v46 & ~v47;
    uint64_t v49 = v45 + 7;
    if (((*(void *)((char *)v49 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48) & 1) == 0)
    {
LABEL_6:
      uint64_t v35 = v79;
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v37 = v68;
      sub_100DFA44C((uint64_t)v14, v68, type metadata accessor for CRLBoardIdentifierAndValue);
      uint64_t v81 = v35;
      uint64_t v2 = (uint64_t)&v81;
      sub_100CCA42C(v37, v48, isUniquelyReferenced_nonNull_native);
      id v79 = v81;
      goto LABEL_7;
    }
    uint64_t v50 = ~v47;
    uint64_t v51 = *(void *)(v67 + 72);
    while (1)
    {
      sub_100DFA44C(v79[6] + v51 * v48, (uint64_t)v7, type metadata accessor for CRLBoardIdentifierAndValue);
      char v52 = static UUID.== infix(_:_:)();
      sub_100DFA44C((uint64_t)v7, (uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
      sub_100DFA44C((uint64_t)v14, (uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
      if (v52)
      {
        uint64_t v53 = *(int *)(v78 + 20);
        uint64_t v54 = *(void *)&v22[v53];
        uint64_t v55 = *(void *)&v22[v53 + 8];
        uint64_t v56 = &v18[v53];
        if (v54 == *(void *)v56 && v55 == *((void *)v56 + 1))
        {
          uint64_t v2 = (uint64_t)type metadata accessor for CRLBoardIdentifier;
          sub_100DFAB3C((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
          sub_100DFAB3C((uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
        }
        else
        {
          uint64_t v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
          sub_100DFAB3C((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
          sub_100DFAB3C((uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
          if ((v2 & 1) == 0) {
            goto LABEL_31;
          }
        }
        if (v7[*(int *)(v77 + 20)] == v14[v76])
        {
          sub_100DFAB3C((uint64_t)v7, type metadata accessor for CRLBoardIdentifierAndValue);
LABEL_7:
          swift_bridgeObjectRelease();
          sub_100DFAB3C((uint64_t)v14, type metadata accessor for CRLBoardIdentifierAndValue);
          id v26 = v71;
          sub_100DFAB3C((uint64_t)v71, type metadata accessor for CRLBoardIdentifier);
          a1 = v73;
          unint64_t v33 = v74;
          int64_t v34 = v75;
          goto LABEL_8;
        }
      }
      else
      {
        sub_100DFAB3C((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
        sub_100DFAB3C((uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
      }
LABEL_31:
      sub_100DFAB3C((uint64_t)v7, type metadata accessor for CRLBoardIdentifierAndValue);
      unint64_t v48 = (v48 + 1) & v50;
      if (((*(void *)((char *)v49 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48) & 1) == 0) {
        goto LABEL_6;
      }
    }
  }
  int64_t v39 = v34 + 1;
  if (__OFADD__(v34, 1))
  {
    __break(1u);
    goto LABEL_44;
  }
  if (v39 >= v66) {
    goto LABEL_42;
  }
  unint64_t v40 = *(void *)(v65 + 8 * v39);
  int64_t v41 = v34 + 1;
  if (v40) {
    goto LABEL_27;
  }
  int64_t v41 = v34 + 2;
  if (v34 + 2 >= v66) {
    goto LABEL_42;
  }
  unint64_t v40 = *(void *)(v65 + 8 * v41);
  if (v40) {
    goto LABEL_27;
  }
  int64_t v41 = v34 + 3;
  if (v34 + 3 >= v66) {
    goto LABEL_42;
  }
  unint64_t v40 = *(void *)(v65 + 8 * v41);
  if (v40) {
    goto LABEL_27;
  }
  int64_t v41 = v34 + 4;
  if (v34 + 4 >= v66) {
    goto LABEL_42;
  }
  unint64_t v40 = *(void *)(v65 + 8 * v41);
  if (v40) {
    goto LABEL_27;
  }
  int64_t v41 = v34 + 5;
  if (v34 + 5 >= v66) {
    goto LABEL_42;
  }
  unint64_t v40 = *(void *)(v65 + 8 * v41);
  if (v40)
  {
LABEL_27:
    uint64_t v74 = (v40 - 1) & v40;
    int64_t v75 = v41;
    unint64_t v38 = __clz(__rbit64(v40)) + (v41 << 6);
    goto LABEL_28;
  }
  uint64_t v42 = v34 + 6;
  if (v34 + 6 >= v66)
  {
LABEL_42:
    swift_release();
    swift_bridgeObjectRelease();
    long long v58 = v64;
    *(void *)&v64[OBJC_IVAR____TtC8Freeform23CRLBoardFavoriteCommand_newState] = v79;

    uint64_t v59 = (objc_class *)type metadata accessor for CRLBoardFavoriteCommand();
    v80.receiver = v58;
    v80.super_class = v59;
    return [super init];
  }
  unint64_t v40 = *(void *)(v65 + 8 * v42);
  if (v40)
  {
    int64_t v41 = v34 + 6;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v41 = v42 + 1;
    if (__OFADD__(v42, 1)) {
      break;
    }
    if (v41 >= v66) {
      goto LABEL_42;
    }
    unint64_t v40 = *(void *)(v65 + 8 * v41);
    ++v42;
    if (v40) {
      goto LABEL_27;
    }
  }
LABEL_44:
  __break(1u);
LABEL_45:
  id v61 = (id)v2;
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(boardIdentifiers:favorite:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2, 42, (uint64_t)"CRLBoardFavoriteCommand received an empty board list", 52, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"CRLBoardFavoriteCommand received an empty board list");
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(boardIdentifiers:favorite:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2, 42);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v62, v63);
  id result = (id)_assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100DF5D60(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  type metadata accessor for MainActor();
  v3[5] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[6] = v5;
  v3[7] = v4;
  return _swift_task_switch(sub_100DF5DFC, v5, v4);
}

uint64_t sub_100DF5DFC()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform23CRLBoardFavoriteCommand_boardIdentifiers);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_100DFA754((uint64_t)&_swiftEmptySetSingleton, v3, v2);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform23CRLBoardFavoriteCommand_initialState) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform23CRLBoardFavoriteCommand_newState);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[8] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100DF5F14;
  return sub_100EE13A4(v5);
}

uint64_t sub_100DF5F14()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v4 = *(void *)(v2 + 48);
  if (v0) {
    uint64_t v5 = sub_100DF6050;
  }
  else {
    uint64_t v5 = sub_100761D4C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100DF6050()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100DF60B4(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_100DF614C, v4, v3);
}

uint64_t sub_100DF614C()
{
  uint64_t v1 = *(void *)(v0[3] + OBJC_IVAR____TtC8Freeform23CRLBoardFavoriteCommand_initialState);
  v0[7] = v1;
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100DF6208;
  return sub_100EE13A4(v1);
}

uint64_t sub_100DF6208()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_100DF6324;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_10076EE4C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100DF6324()
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100DF6394(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_100DF642C, v4, v3);
}

uint64_t sub_100DF642C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC8Freeform23CRLBoardFavoriteCommand_newState);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100DF64D0;
  return sub_100EE13A4(v1);
}

uint64_t sub_100DF64D0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v5 = sub_10076EE40;
  }
  else {
    uint64_t v5 = sub_10076EE4C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100DF660C()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v0 localizedStringForKey:v1 value:v2 table:v3];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v5;
}

uint64_t sub_100DF67F0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_100DF6840(uint64_t a1)
{
  return sub_100DFA304(a1, type metadata accessor for CRLBoardFavoriteCommand);
}

uint64_t type metadata accessor for CRLBoardFavoriteCommand()
{
  return self;
}

uint64_t sub_100DF68AC(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_100DF6944, v4, v3);
}

uint64_t sub_100DF6944()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC8Freeform21CRLBoardDeleteCommand_boardIdentifiers);
  NSString v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *NSString v2 = v0;
  v2[1] = sub_100DF64D0;
  return sub_100EE280C(v1);
}

uint64_t sub_100DF69E8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_100DF6A80, v4, v3);
}

uint64_t sub_100DF6A80()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC8Freeform21CRLBoardDeleteCommand_boardIdentifiers);
  NSString v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *NSString v2 = v0;
  v2[1] = sub_100DF6B24;
  return sub_100EF8088(v1);
}

uint64_t sub_100DF6B24()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v5 = sub_100768420;
  }
  else {
    uint64_t v5 = sub_1007683BC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100DF6DC4()
{
  return swift_bridgeObjectRelease();
}

id sub_100DF6DD4(uint64_t a1)
{
  return sub_100DFA304(a1, type metadata accessor for CRLBoardDeleteCommand);
}

uint64_t type metadata accessor for CRLBoardDeleteCommand()
{
  return self;
}

uint64_t sub_100DF6E20(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_100DF6EB8, v4, v3);
}

uint64_t sub_100DF6EB8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC8Freeform23CRLBoardUndeleteCommand_boardIdentifiers);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100DF64D0;
  return sub_100EF8088(v1);
}

uint64_t sub_100DF6F5C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_100DF6FF4, v4, v3);
}

uint64_t sub_100DF6FF4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC8Freeform23CRLBoardUndeleteCommand_boardIdentifiers);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100DF64D0;
  return sub_100EE280C(v1);
}

uint64_t sub_100DF7098()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v0 localizedStringForKey:v1 value:v2 table:v3];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v5;
}

uint64_t sub_100DF7304()
{
  return swift_bridgeObjectRelease();
}

id sub_100DF7314(uint64_t a1)
{
  return sub_100DFA304(a1, type metadata accessor for CRLBoardUndeleteCommand);
}

uint64_t type metadata accessor for CRLBoardUndeleteCommand()
{
  return self;
}

uint64_t sub_100DF7360(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v2[4] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[5] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[6] = v4;
  v2[7] = v3;
  return _swift_task_switch(sub_100DF7424, v4, v3);
}

uint64_t sub_100DF7424()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = *(void *)(v0[3] + OBJC_IVAR____TtC8Freeform24CRLBoardDuplicateCommand_sourceBoardIdentifiers);
  uint64_t v3 = sub_1005057FC(&qword_101670F30);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 5, v3);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1016A2510 + dword_1016A2510);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[8] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100DF7528;
  uint64_t v5 = v0[4];
  return v7(v2, v5);
}

uint64_t sub_100DF7528(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[9] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[4];
  if (v1)
  {
    sub_100DFAB3C(v5, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    uint64_t v6 = v4[6];
    uint64_t v7 = v4[7];
    uint64_t v8 = sub_100DF7728;
  }
  else
  {
    v4[10] = a1;
    sub_100DFAB3C(v5, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    uint64_t v6 = v4[6];
    uint64_t v7 = v4[7];
    uint64_t v8 = sub_100DF7698;
  }
  return _swift_task_switch(v8, v6, v7);
}

uint64_t sub_100DF7698()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[3];
  swift_release();
  *(void *)(v2 + OBJC_IVAR____TtC8Freeform24CRLBoardDuplicateCommand_duplicateBoardIdentifiers) = v1;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100DF7728()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100DF7794(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_100DF782C, v4, v3);
}

uint64_t sub_100DF782C()
{
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_100CDDF48(v1);
  *(void *)(v0 + 56) = v2;
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100DF78EC;
  return sub_100EE280C(v2);
}

uint64_t sub_100DF78EC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_100DFAE24;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_10076EE4C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100DF7A08(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_100DF7AA0, v4, v3);
}

uint64_t sub_100DF7AA0()
{
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_100CDDF48(v1);
  *(void *)(v0 + 56) = v2;
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100DF78EC;
  return sub_100EF8088(v2);
}

uint64_t sub_100DF7B60()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v0 localizedStringForKey:v1 value:v2 table:v3];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v5;
}

uint64_t sub_100DF7DDC()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_100DF7E1C(uint64_t a1)
{
  return sub_100DFA304(a1, type metadata accessor for CRLBoardDuplicateCommand);
}

uint64_t type metadata accessor for CRLBoardDuplicateCommand()
{
  return self;
}

uint64_t sub_100DF7FD4(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_100DF806C, v4, v3);
}

uint64_t sub_100DF806C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = v1 + OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_boardIdentifier;
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_boardTitle);
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100DF8134;
  return sub_100EDFE94(v2, v4, v5, 0);
}

uint64_t sub_100DF8134(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v3;
  *(void *)(*(void *)v3 + 64) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = v6[5];
    uint64_t v8 = v6[6];
    uint64_t v9 = sub_100768420;
  }
  else
  {
    v6[9] = a2;
    v6[10] = a1;
    uint64_t v7 = v6[5];
    uint64_t v8 = v6[6];
    uint64_t v9 = sub_100DF8268;
  }
  return _swift_task_switch(v9, v7, v8);
}

uint64_t sub_100DF8268()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[3];
  swift_release();
  uint64_t v4 = (void *)(v3 + OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_previousBoardTitle);
  *uint64_t v4 = v2;
  v4[1] = v1;
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100DF82F0(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_100DF8388, v4, v3);
}

uint64_t sub_100DF8388()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_previousBoardTitle);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_previousBoardTitle + 8);
  v0[7] = v3;
  if (v3)
  {
    uint64_t v4 = *v2;
    uint64_t v5 = v1 + OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_boardIdentifier;
    swift_bridgeObjectRetain();
    uint64_t v6 = (void *)swift_task_alloc();
    v0[8] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_100DF854C;
    return sub_100EDFE94(v5, v4, v3, 1);
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"undo(boardLibrary:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2, 184, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"undo(boardLibrary:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2, 184);
    swift_release();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_100DF854C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_100DF8680;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_1007683BC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100DF8680()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100DF86F0()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v0 localizedStringForKey:v1 value:v2 table:v3];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v5;
}

uint64_t sub_100DF894C()
{
  sub_100DFAB3C(v0 + OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_100DF89B8()
{
  return sub_100DFA304(0, type metadata accessor for CRLSetBoardTitleCommand);
}

uint64_t sub_100DF8A4C()
{
  return type metadata accessor for CRLSetBoardTitleCommand();
}

uint64_t type metadata accessor for CRLSetBoardTitleCommand()
{
  uint64_t result = qword_10169D0C8;
  if (!qword_10169D0C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100DF8AA0()
{
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100DF8B44(uint64_t a1)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = v1;
  return _swift_task_switch(sub_100DF8B64, 0, 0);
}

uint64_t sub_100DF8B64()
{
  uint64_t v1 = (uint64_t *)(*(void *)(v0 + 72) + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_boardLibrary);
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)((swift_isaMask & **(void **)(v0 + 64)) + 0x50)
                                                + **(int **)((swift_isaMask & **(void **)(v0 + 64)) + 0x50));
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v4;
  *id v4 = v0;
  v4[1] = sub_100DF8C90;
  return v6(v3, v2);
}

uint64_t sub_100DF8C90()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return _swift_task_switch(sub_100DF8DC0, 0, 0);
  }
}

uint64_t sub_100DF8DC0()
{
  uint64_t v1 = (void *)v0[8];
  uint64_t v2 = (void *)(v0[9] + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_undoStack);
  swift_beginAccess();
  id v3 = v1;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  uint64_t v4 = v0[9];
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  uint64_t v5 = (void *)(v4 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_redoStack);
  swift_beginAccess();
  *uint64_t v5 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

id sub_100DF8EE4(void *a1, uint64_t a2, void *a3)
{
  id v4 = a1;
  sub_100DF8F60(a3);

  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v5;
}

unint64_t sub_100DF8F60(void *a1)
{
  uint64_t v2 = (unint64_t *)(v1 + *a1);
  swift_beginAccess();
  unint64_t v3 = *v2;
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  if (!v4) {
    goto LABEL_10;
  }
LABEL_3:
  unint64_t result = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_13:
    uint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v6 = *(id *)(v3 + 8 * result + 32);
LABEL_8:
    uint64_t v7 = v6;
    uint64_t v8 = swift_bridgeObjectRelease();
    uint64_t v9 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v7) + 0x68))(v8);

    return v9;
  }
  __break(1u);
  return result;
}

BOOL sub_100DF90B4(char *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = &a1[*a3];
  swift_beginAccess();
  unint64_t v5 = *(void *)v4;
  if (v5 >> 62)
  {
    uint64_t v8 = a1;
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();

    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  return v6 != 0;
}

uint64_t sub_100DF9154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 v5[40] = a4;
  v5[41] = a5;
  type metadata accessor for MainActor();
  v5[42] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[43] = v7;
  v5[44] = v6;
  return _swift_task_switch(sub_100DF91EC, v7, v6);
}

uint64_t sub_100DF91EC()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v2 = (void *)result;
    unint64_t v3 = (void *)v0[41];
    uint64_t v4 = result + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_boardLibrary;
    uint64_t v5 = *(void *)(result + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_boardLibrary);
    v0[45] = v5;
    uint64_t v6 = *(void *)(v4 + 8);
    swift_unknownObjectRetain();

    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)((swift_isaMask & *v3) + 0x58)
                                                  + **(int **)((swift_isaMask & *v3) + 0x58));
    swift_unknownObjectRetain();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[46] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100DF9370;
    return v8(v5, v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100DF9370()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 376) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 344);
    uint64_t v4 = *(void *)(v2 + 352);
    uint64_t v5 = sub_100DF95BC;
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v3 = *(void *)(v2 + 344);
    uint64_t v4 = *(void *)(v2 + 352);
    uint64_t v5 = sub_100DF948C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100DF948C()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    uint64_t v3 = *(void **)(v0 + 328);
    uint64_t v4 = (void *)(Strong + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_redoStack);
    swift_beginAccess();
    id v5 = v3;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
  }
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100DF95BC()
{
  swift_release();
  swift_unknownObjectRelease_n();
  if (qword_10166FB90 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.commandController;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v3 = v1;
  uint64_t v4 = Error.localizedDescription.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v7 = sub_100528BE4();
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  uint64_t v8 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Board library command execution failed with error %@", 52, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v9 = swift_initStackObject();
  *(_OWORD *)(v9 + 16) = xmmword_10117E810;
  swift_getErrorValue();
  uint64_t v10 = Error.localizedDescription.getter();
  *(void *)(v9 + 56) = &type metadata for String;
  *(void *)(v9 + 64) = v7;
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 40) = v11;
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"undo()", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2, 255, (uint64_t)"Command execution failed with error %@", 38, 2u, v9);
  sub_1005598CC(v9, (uint64_t)"undo()", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2, 255);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

void sub_100DF98DC(SEL *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1005057FC(&qword_101672BB0);
  *(void *)&double v10 = __chkstk_darwin(v8 - 8, v9).n128_u64[0];
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v4, *a1, v10))
  {
    uint64_t v4 = (void *)((char *)v4 + *a2);
    swift_beginAccess();
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_4;
      }
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v22) {
    goto LABEL_11;
  }
LABEL_4:
  uint64_t v13 = sub_100DFA4CC(sub_100F68540);
  if (v13)
  {
LABEL_8:
    uint64_t v16 = (void *)v13;
    swift_endAccess();
    uint64_t v17 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v12, 1, 1, v17);
    uint64_t v18 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    id v19 = v16;
    uint64_t v20 = static MainActor.shared.getter();
    uint64_t v21 = (void *)swift_allocObject();
    v21[2] = v20;
    v21[3] = &protocol witness table for MainActor;
    v21[4] = v18;
    v21[5] = v19;
    swift_release();
    sub_1005912D0((uint64_t)v12, a4, (uint64_t)v21);
    swift_release();

    return;
  }
  if (*v4 >> 62)
  {
LABEL_12:
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    unint64_t v15 = v23 - 1;
    if (!__OFSUB__(v23, 1)) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
  uint64_t v14 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  unint64_t v15 = v14 - 1;
  if (!__OFSUB__(v14, 1))
  {
LABEL_7:
    uint64_t v13 = sub_100E870B8(v15);
    goto LABEL_8;
  }
LABEL_14:
  __break(1u);
}

uint64_t sub_100DF9B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 v5[40] = a4;
  v5[41] = a5;
  type metadata accessor for MainActor();
  v5[42] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[43] = v7;
  v5[44] = v6;
  return _swift_task_switch(sub_100DF9BCC, v7, v6);
}

uint64_t sub_100DF9BCC()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v2 = (void *)result;
    id v3 = (void *)v0[41];
    uint64_t v4 = result + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_boardLibrary;
    uint64_t v5 = *(void *)(result + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_boardLibrary);
    v0[45] = v5;
    uint64_t v6 = *(void *)(v4 + 8);
    swift_unknownObjectRetain();

    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)((swift_isaMask & *v3) + 0x60)
                                                  + **(int **)((swift_isaMask & *v3) + 0x60));
    swift_unknownObjectRetain();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[46] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100DF9D50;
    return v8(v5, v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100DF9D50()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 376) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 344);
    uint64_t v4 = *(void *)(v2 + 352);
    uint64_t v5 = sub_100DF9F9C;
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v3 = *(void *)(v2 + 344);
    uint64_t v4 = *(void *)(v2 + 352);
    uint64_t v5 = sub_100DF9E6C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100DF9E6C()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    uint64_t v3 = *(void **)(v0 + 328);
    uint64_t v4 = (void *)(Strong + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryCommandController_undoStack);
    swift_beginAccess();
    id v5 = v3;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
  }
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100DF9F9C()
{
  swift_release();
  swift_unknownObjectRelease_n();
  if (qword_10166FB90 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.commandController;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v3 = v1;
  uint64_t v4 = Error.localizedDescription.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v7 = sub_100528BE4();
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  uint64_t v8 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Board library command execution failed with error %@", 52, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v9 = swift_initStackObject();
  *(_OWORD *)(v9 + 16) = xmmword_10117E810;
  swift_getErrorValue();
  uint64_t v10 = Error.localizedDescription.getter();
  *(void *)(v9 + 56) = &type metadata for String;
  *(void *)(v9 + 64) = v7;
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 40) = v11;
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"redo()", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2, 270, (uint64_t)"Command execution failed with error %@", 38, 2u, v9);
  sub_1005598CC(v9, (uint64_t)"redo()", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2, 270);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

id sub_100DFA2EC(uint64_t a1)
{
  return sub_100DFA304(a1, type metadata accessor for CRLBoardLibraryCommandController);
}

id sub_100DFA304(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  [super dealloc];
}

uint64_t sub_100DFA36C(uint64_t a1, uint64_t a2, void *a3, void (*a4)(void))
{
  a4(*(void *)(a1 + *a3));
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for CRLBoardLibraryCommandController()
{
  return self;
}

unint64_t sub_100DFA3F4()
{
  unint64_t result = qword_1016770E0;
  if (!qword_1016770E0)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016770E0);
  }
  return result;
}

uint64_t sub_100DFA44C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100DFA4B4()
{
  return sub_100DFA4CC((uint64_t (*)(uint64_t))sub_100F68540);
}

uint64_t sub_100DFA4CC(uint64_t (*a1)(uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if (!result || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    uint64_t result = a1(v3);
    uint64_t v3 = result;
    *uint64_t v1 = result;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    uint64_t v7 = v6 - 1;
    uint64_t v8 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20);
    *(void *)(v5 + 16) = v7;
    specialized Array._endMutation()();
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100DFA54C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100DFA588(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528488;
  return sub_100DF9B34(a1, v4, v5, v7, v6);
}

uint64_t sub_100DFA64C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100DFA694(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_100DF9154(a1, v4, v5, v7, v6);
}

uint64_t sub_100DFA754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v42 = a3;
  uint64_t v41 = type metadata accessor for CRLBoardIdentifierAndValue(0);
  __chkstk_darwin(v41, v7);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v38 - v12;
  uint64_t v14 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v40 = *(void *)(v18 - 8);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v38 - v24;
  uint64_t v44 = a1;
  uint64_t v26 = *(void *)(a2 + 56);
  uint64_t v38 = a2 + 56;
  uint64_t v27 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & v26;
  int64_t v39 = (unint64_t)(v27 + 63) >> 6;
  uint64_t v43 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v31 = 0;
  while (1)
  {
    if (v29)
    {
      unint64_t v33 = __clz(__rbit64(v29));
      v29 &= v29 - 1;
      unint64_t v34 = v33 | (v31 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v31++, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v31 >= v39) {
      goto LABEL_27;
    }
    unint64_t v36 = *(void *)(v38 + 8 * v31);
    if (!v36) {
      break;
    }
LABEL_20:
    unint64_t v29 = (v36 - 1) & v36;
    unint64_t v34 = __clz(__rbit64(v36)) + (v31 << 6);
LABEL_21:
    sub_100DFA44C(*(void *)(v43 + 48) + *(void *)(v40 + 72) * v34, (uint64_t)v25, type metadata accessor for CRLBoardIdentifier);
    sub_1005394E4((uint64_t)v25, (uint64_t)v21);
    sub_100ED7F04((uint64_t)v21, (uint64_t)v17);
    if (v4)
    {
      swift_errorRelease();
      char v32 = 0;
      uint64_t v4 = 0;
    }
    else
    {
      char v32 = v17[1];
      sub_100DFAB3C((uint64_t)v17, type metadata accessor for CRLBoardViewModelMetadata);
    }
    sub_100DFA44C((uint64_t)v21, (uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
    v9[*(int *)(v41 + 20)] = v32;
    sub_100CB9858((uint64_t)v13, (uint64_t)v9);
    sub_100DFAB3C((uint64_t)v13, type metadata accessor for CRLBoardIdentifierAndValue);
    uint64_t result = sub_100DFAB3C((uint64_t)v21, type metadata accessor for CRLBoardIdentifier);
  }
  int64_t v37 = v31 + 1;
  if (v31 + 1 >= v39) {
    goto LABEL_27;
  }
  unint64_t v36 = *(void *)(v38 + 8 * v37);
  if (v36) {
    goto LABEL_19;
  }
  int64_t v37 = v31 + 2;
  if (v31 + 2 >= v39) {
    goto LABEL_27;
  }
  unint64_t v36 = *(void *)(v38 + 8 * v37);
  if (v36) {
    goto LABEL_19;
  }
  int64_t v37 = v31 + 3;
  if (v31 + 3 >= v39) {
    goto LABEL_27;
  }
  unint64_t v36 = *(void *)(v38 + 8 * v37);
  if (v36) {
    goto LABEL_19;
  }
  int64_t v37 = v31 + 4;
  if (v31 + 4 >= v39)
  {
LABEL_27:
    swift_release();
    return v44;
  }
  unint64_t v36 = *(void *)(v38 + 8 * v37);
  if (v36)
  {
LABEL_19:
    int64_t v31 = v37;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v31 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    if (v31 >= v39) {
      goto LABEL_27;
    }
    unint64_t v36 = *(void *)(v38 + 8 * v31);
    ++v37;
    if (v36) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_100DFAB3C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_100DFAB9C(uint64_t a1)
{
  uint64_t v2 = (objc_class *)type metadata accessor for CRLBoardDeleteCommand();
  uint64_t v3 = (char *)objc_allocWithZone(v2);
  if (*(void *)(a1 + 16))
  {
    *(void *)&v3[OBJC_IVAR____TtC8Freeform21CRLBoardDeleteCommand_boardIdentifiers] = a1;
    v8.receiver = v3;
    v8.super_class = v2;
    return [super init];
  }
  else
  {
    uint64_t v5 = v3;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(boardIdentifiers:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2, 88, (uint64_t)"CRLBoardDeleteCommand received an empty board list", 50, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"CRLBoardDeleteCommand received an empty board list");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(boardIdentifiers:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2, 88);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v6, v7);
    id result = (id)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

id sub_100DFACE0(uint64_t a1)
{
  uint64_t v2 = (objc_class *)type metadata accessor for CRLBoardUndeleteCommand();
  uint64_t v3 = (char *)objc_allocWithZone(v2);
  if (*(void *)(a1 + 16))
  {
    *(void *)&v3[OBJC_IVAR____TtC8Freeform23CRLBoardUndeleteCommand_boardIdentifiers] = a1;
    v8.receiver = v3;
    v8.super_class = v2;
    return [super init];
  }
  else
  {
    uint64_t v5 = v3;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(boardIdentifiers:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2, 116, (uint64_t)"CRLBoardUndeleteCommand received an empty board list", 52, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"CRLBoardUndeleteCommand received an empty board list");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(boardIdentifiers:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardLibraryCommandController.swift", 104, 2, 116);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v6, v7);
    id result = (id)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100DFAE28@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v53 = a3;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v54 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v55 = (uint64_t)&v50 - v10;
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v58 = (uint64_t)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v56 = *(void *)(v14 - 8);
  uint64_t v57 = v14;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (uint64_t *)((char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v59 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v50 - v24;
  uint64_t v26 = type metadata accessor for BinaryDecodingOptions();
  __chkstk_darwin(v26 - 8, v27);
  uint64_t v28 = type metadata accessor for CRLProto_RefuseOrEndFollow(0);
  __chkstk_darwin(v28, v29);
  int64_t v31 = (char *)&v50 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = 0;
  long long v60 = 0u;
  long long v61 = 0u;
  sub_100510D4C(a1, a2);
  BinaryDecodingOptions.init()();
  sub_100DFB8BC();
  char v32 = v63;
  Message.init(serializedData:extensions:partial:options:)();
  if (v32) {
    return sub_100510084(a1, a2);
  }
  uint64_t v51 = v21;
  char v52 = v25;
  unint64_t v34 = a2;
  uint64_t v35 = *(int *)(v28 + 24);
  Swift::String v63 = v31;
  uint64_t v36 = v58;
  sub_100522E9C((uint64_t)&v31[v35], v58, (uint64_t *)&unk_101674160);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v36, 1, v57) == 1)
  {
    *(_OWORD *)uint64_t v17 = xmmword_101180360;
    UnknownStorage.init()();
    sub_100522F00(v36, (uint64_t *)&unk_101674160);
  }
  else
  {
    sub_1005CC5B8(v36, (uint64_t)v17);
  }
  uint64_t v37 = a1;
  uint64_t v38 = *v17;
  unint64_t v39 = v17[1];
  sub_100510D4C(*v17, v39);
  sub_100DFB914((uint64_t)v17, type metadata accessor for CRLProto_Data);
  uint64_t v40 = v52;
  uint64_t result = UUID.init(crl_data:)(v38, v39);
  uint64_t v41 = v59;
  uint64_t v42 = v18;
  unint64_t v43 = *v63;
  if ((*v63 & 0x8000000000000000) == 0)
  {
    uint64_t v44 = v55;
    if (v43 > 1)
    {
      unint64_t v43 = 0;
      LODWORD(v58) = 1;
    }
    else
    {
      LODWORD(v58) = 0;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))(v55, v40, v42);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v44, 0, 1, v42);
    uint64_t v45 = v54;
    sub_100522E9C(v44, v54, (uint64_t *)&unk_101674520);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v45, 1, v42) == 1)
    {
      sub_100522F00(v45, (uint64_t *)&unk_101674520);
    }
    else
    {
      Swift::Int v46 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 32);
      uint64_t v47 = v51;
      v46(v51, v45, v42);
      if ((v58 & 1) == 0)
      {
        sub_100522F00(v55, (uint64_t *)&unk_101674520);
        uint64_t v49 = v53;
        v46(v53, (uint64_t)v47, v42);
        sub_100510084(v37, v34);
        *(void *)&v49[*(int *)(type metadata accessor for CRLRefuseOrEndFollow() + 20)] = v43;
        (*(void (**)(char *, uint64_t))(v59 + 8))(v52, v42);
        return sub_100DFB914((uint64_t)v63, type metadata accessor for CRLProto_RefuseOrEndFollow);
      }
      uint64_t v41 = v59;
      (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v42);
      uint64_t v44 = v55;
      uint64_t v40 = v52;
    }
    sub_1005F7CE8();
    swift_allocError();
    unsigned char *v48 = 0;
    swift_willThrow();
    sub_100522F00(v44, (uint64_t *)&unk_101674520);
    sub_100510084(v37, v34);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v40, v42);
    return sub_100DFB914((uint64_t)v63, type metadata accessor for CRLProto_RefuseOrEndFollow);
  }
  __break(1u);
  return result;
}

uint64_t sub_100DFB430()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100DFB490()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100DFB4E0()
{
  uint64_t v0 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRLProto_Data(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (long long *)((char *)&v26 - v11);
  uint64_t v13 = type metadata accessor for CRLProto_RefuseOrEndFollow(0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (void *)((char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v16 = 0;
  UnknownStorage.init()();
  uint64_t v28 = v13;
  uint64_t v17 = (uint64_t)v16 + *(int *)(v13 + 24);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v18(v17, 1, 1, v4);
  long long v26 = xmmword_101180360;
  *uint64_t v12 = xmmword_101180360;
  UnknownStorage.init()();
  sub_100522F00(v17, (uint64_t *)&unk_101674160);
  sub_1005CC5B8((uint64_t)v12, v17);
  uint64_t v27 = v18;
  v18(v17, 0, 1, v4);
  uint64_t v19 = (uint64_t)v3;
  uint64_t v20 = UUID.crl_data()();
  uint64_t v22 = v21;
  sub_100522E9C(v17, v19, (uint64_t *)&unk_101674160);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v19, 1, v4) == 1)
  {
    *(_OWORD *)uint64_t v8 = v26;
    UnknownStorage.init()();
    sub_100522F00(v19, (uint64_t *)&unk_101674160);
  }
  else
  {
    sub_1005CC5B8(v19, (uint64_t)v8);
  }
  sub_100510084(*(void *)v8, *((void *)v8 + 1));
  *(void *)uint64_t v8 = v20;
  *((void *)v8 + 1) = v22;
  sub_100522F00(v17, (uint64_t *)&unk_101674160);
  sub_1005CC5B8((uint64_t)v8, v17);
  v27(v17, 0, 1, v4);
  uint64_t v23 = *(void *)(v29 + *(int *)(type metadata accessor for CRLRefuseOrEndFollow() + 20));
  if (v23 < 0)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    *uint64_t v16 = v23;
    sub_100DFB8BC();
    uint64_t v24 = Message.serializedData(partial:)();
    sub_100DFB914((uint64_t)v16, type metadata accessor for CRLProto_RefuseOrEndFollow);
    return v24;
  }
  return result;
}

uint64_t type metadata accessor for CRLRefuseOrEndFollow()
{
  uint64_t result = qword_10169D1A8;
  if (!qword_10169D1A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_100DFB8BC()
{
  unint64_t result = qword_1016979C8;
  if (!qword_1016979C8)
  {
    type metadata accessor for CRLProto_RefuseOrEndFollow(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016979C8);
  }
  return result;
}

uint64_t sub_100DFB914(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *type metadata accessor for CRLRefuseOrEndFollowReason()
{
  return &type metadata for CRLRefuseOrEndFollowReason;
}

uint64_t sub_100DFB984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100DFB998);
}

uint64_t sub_100DFB998(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100DFBA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100DFBA18);
}

uint64_t sub_100DFBA18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

unint64_t sub_100DFBA8C()
{
  unint64_t result = qword_10169D1E0;
  if (!qword_10169D1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169D1E0);
  }
  return result;
}

unint64_t sub_100DFBAE0()
{
  unint64_t result = qword_10169D1E8;
  if (!qword_10169D1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169D1E8);
  }
  return result;
}

char *sub_100DFBB34(void *a1, void *a2)
{
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findReplaceController] = a1;
  swift_unknownObjectWeakAssign();
  v13.receiver = v2;
  v13.super_class = (Class)type metadata accessor for CRLiOSFindSession();
  id v5 = a1;
  uint64_t v6 = (char *)[super init];
  [v6 setSearchResultDisplayStyle:0];
  uint64_t v7 = *(void **)&v6[OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findReplaceController];
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  _DWORD v12[4] = sub_100DFC904;
  v12[5] = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = *(void *)"";
  void v12[2] = sub_100DFBD28;
  v12[3] = &unk_10152E1C0;
  uint64_t v9 = _Block_copy(v12);
  id v10 = v7;
  swift_release();
  [v10 setSearchProgressBlock:v9];

  _Block_release(v9);
  return v6;
}

void sub_100DFBCA8(uint64_t a1, char a2)
{
  if (a2)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v3 = (void *)Strong;
      uint64_t v4 = (void *)swift_unknownObjectWeakLoadStrong();

      [v4 updateResultCount];
    }
  }
}

uint64_t sub_100DFBD28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);

  return swift_release();
}

id sub_100DFBD88()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findReplaceController];
  id v2 = [v1 findReplaceDelegate];
  if (v2)
  {
    id v3 = [v2 interactiveCanvasControllerForFindController:v1];
    swift_unknownObjectRelease();
    [v3 setShowGrayOverlay:0];
  }
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for CRLiOSFindSession();
  return [super dealloc];
}

id sub_100DFBF34()
{
  if (![*(id *)(v0 + OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findReplaceController) findReplaceDelegate])return 0; {
  type metadata accessor for CRLiOSBoardViewController();
  }
  if (!swift_dynamicCastClass())
  {
    swift_unknownObjectRelease();
    return 0;
  }
  id v1 = sub_100E3C594();
  id v2 = [v1 mode];

  sub_100DFC924();
  id v3 = [v2 isKindOfClass:swift_getObjCClassFromMetadata()];
  swift_unknownObjectRelease();

  return v3;
}

void sub_100DFC038()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findReplaceController);
  unint64_t v2 = (unint64_t)[v1 searchResultsCount];
  id v3 = [v1 findReplaceDelegate];
  if (v3)
  {
    id v4 = [v3 interactiveCanvasControllerForFindController:v1];
    swift_unknownObjectRelease();
    BOOL v5 = v2 && (sub_100DFBF34() & 1) != 0;
    [v4 setShowGrayOverlay:v5];
  }
  if ((v2 & 0x8000000000000000) != 0) {
    __break(1u);
  }
}

void sub_100DFC160(uint64_t a1)
{
  BOOL v2 = a1 != 0;
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findReplaceController);
  [v3 setSearchHighlightsEnabled:1];
  [v3 findNextResultInDirection:v2];
  id Strong = (id)swift_unknownObjectWeakLoadStrong();
  [Strong updateResultCount];
}

id sub_100DFC250()
{
  id Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    BOOL v2 = Strong;
    id v3 = [Strong searchText];

    if (v3)
    {
      uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v6 = v5;

      swift_bridgeObjectRelease();
      uint64_t v7 = HIBYTE(v6) & 0xF;
      if ((v6 & 0x2000000000000000) == 0) {
        uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
      }
      if (!v7)
      {
        uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findReplaceController);
        NSString v9 = String._bridgeToObjectiveC()();
        [v8 setSearchString:v9];

        id v10 = (void *)swift_unknownObjectWeakLoadStrong();
        [v10 updateResultCount];
      }
    }
  }
  uint64_t v11 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findReplaceController);

  return [v11 invalidateSearchResults];
}

void sub_100DFC3A0(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3)
  {
    id v4 = a3;
    BOOL v5 = [v4 wordMatchMethod] == (id)2;
    unsigned __int8 v6 = [v4 stringCompareOptions];

    a3 = (void *)(v6 & 1 | (unint64_t)(8 * v5));
  }
  uint64_t v7 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findReplaceController);
  [v7 setSearchOptions:a3];
  id v8 = String._bridgeToObjectiveC()();
  [v7 setSearchString:v8];
}

uint64_t sub_100DFC524()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLiOSFindSession_findReplaceController);
  id v2 = [v1 findReplaceDelegate];
  if (v2)
  {
    id v3 = [v2 interactiveCanvasControllerForFindController:v1];
    swift_unknownObjectRelease();
    unsigned int v4 = [v3 editingDisabled];

    return v4 ^ 1;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"supportsReplacement", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSFindSession.swift", 84, 2, 116, (uint64_t)"No icc for search", 17, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"supportsReplacement", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSFindSession.swift", 84, 2, 116);
    return 0;
  }
}

uint64_t type metadata accessor for CRLiOSFindSession()
{
  return self;
}

uint64_t sub_100DFC8CC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100DFC904(uint64_t a1, char a2)
{
}

uint64_t sub_100DFC90C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100DFC91C()
{
  return swift_release();
}

unint64_t sub_100DFC924()
{
  unint64_t result = qword_10169FD80;
  if (!qword_10169FD80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_10169FD80);
  }
  return result;
}

uint64_t sub_100DFC964(uint64_t a1, uint64_t a2)
{
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

char *CRLiOSAutoSizingHostingController.init<A>(defaultSize:showScrollIndicators:content:)(BOOL a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  id v8 = sub_100E04BEC(a1, a2, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a2, a3);
  return v8;
}

id CRLiOSAutoSizingHostingController.fixedLength(for:)()
{
  swift_getAtKeyPath();
  if (v3 == 0.0) {
    return 0;
  }
  swift_getAtKeyPath();
  id result = [v0 view];
  if (result)
  {
    uint64_t v2 = result;
    [result frame];

    swift_getAtKeyPath();
    return *(id *)&v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void CRLiOSAutoSizingHostingController.safeAreaInsets.getter()
{
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v2 = v1;
  [v1 safeAreaInsets];

  id v3 = [v0 view];
  if (!v3)
  {
LABEL_7:
    __break(1u);
    return;
  }
  unsigned int v4 = v3;
  id v5 = [v3 superview];

  if (v5)
  {
    [v5 safeAreaInsets];
  }
}

void CRLiOSAutoSizingHostingController.hostingControllerDidLayoutSubviews()()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_didChangeSize;
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_didChangeSize) != 1)
  {
LABEL_18:
    *((unsigned char *)v0 + v1) = 0;
    return;
  }
  uint64_t v2 = (double *)((char *)v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_defaultSize);
  if (*(double *)((char *)v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_defaultSize) == 0.0)
  {
    double v3 = *(double *)((char *)v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize);
    unsigned int v4 = *(void **)((char *)v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_hostingController);
    id v5 = [v4 view];
    if (!v5)
    {
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    unsigned __int8 v6 = v5;
    [v5 frame];
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    CGFloat v12 = v11;
    CGFloat v14 = v13;

    v39.origin.x = v8;
    v39.origin.y = v10;
    v39.size.width = v12;
    v39.size.height = v14;
    if (CGRectGetWidth(v39) < v3)
    {
      id v15 = [v4 view];
      if (!v15)
      {
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      uint64_t v16 = v15;
      [v15 frame];
      [v16 setFrame:];
    }
  }
  if (v2[1] != 0.0)
  {
LABEL_12:
    id v31 = [*(id *)((char *)v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_scrollView) setContentSize:*(double *)((char *)v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize), *(double *)((char *)v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize + 8)];
    (*(void (**)(id))((swift_isaMask & *v0) + 0xF8))(v31);
    uint64_t v32 = OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator;
    if (*(void *)((char *)v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator))
    {
      id v33 = [v0 presentingViewController];
      id v34 = [v33 presentedViewController];

      if (v34 || (id v34 = [v0 presentedViewController]) != 0)
      {
        id v35 = [v34 traitCollection];
        unsigned __int8 v36 = [v35 crl_isCompactWidth];

        if (v36) {
          goto LABEL_17;
        }
      }
      id v37 = [v0 popoverPresentationController];

      if (v37)
      {
LABEL_17:
        uint64_t v38 = *(void **)((char *)v0 + v32);
        *(void *)((char *)v0 + v32) = 0;
      }
    }
    goto LABEL_18;
  }
  double v17 = *(double *)((char *)v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize + 8);
  uint64_t v18 = *(void **)((char *)v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_hostingController);
  id v19 = [v18 view];
  if (!v19) {
    goto LABEL_20;
  }
  uint64_t v20 = v19;
  [v19 frame];
  CGFloat v22 = v21;
  CGFloat v24 = v23;
  CGFloat v26 = v25;
  CGFloat v28 = v27;

  v40.origin.x = v22;
  v40.origin.y = v24;
  v40.size.width = v26;
  v40.size.height = v28;
  if (CGRectGetHeight(v40) >= v17) {
    goto LABEL_12;
  }
  id v29 = [v18 view];
  if (v29)
  {
    uint64_t v30 = v29;
    [v29 frame];
    [v30 setFrame:];

    goto LABEL_12;
  }
LABEL_22:
  __break(1u);
}

Swift::Void __swiftcall CRLiOSAutoSizingHostingController.setNeedsContentSizeUpdate()()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  double v2 = COERCE_DOUBLE(CRLiOSAutoSizingHostingController.fixedLength(for:)());
  char v4 = v3;
  swift_release();
  double v5 = 0.0;
  if (v4) {
    double v6 = 0.0;
  }
  else {
    double v6 = v2;
  }
  swift_getKeyPath();
  double v7 = COERCE_DOUBLE(CRLiOSAutoSizingHostingController.fixedLength(for:)());
  char v9 = v8;
  uint64_t v10 = swift_release();
  if ((v9 & 1) == 0) {
    double v5 = v7;
  }
  if (v6 == 0.0) {
    double v6 = *(double *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize];
  }
  if (v5 == 0.0) {
    double v5 = *(double *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize + 8];
  }
  if (v6 == 0.0 || v5 == 0.0)
  {
    double v6 = (*(double (**)(uint64_t, double, double))&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_calculatePreliminaryFittingSize])(v10, v6, v5);
    double v5 = v11;
    CGFloat v12 = (double *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize];
    *CGFloat v12 = v6;
    v12[1] = v11;
    v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_didChangeSize] = 1;
  }
  [v1 setPreferredContentSize:v6, v5];
  id v13 = [v1 navigationController];
  if (v13)
  {
    id v14 = v13;
    [v13 setPreferredContentSize:v6, v5];
  }
}

void CRLiOSAutoSizingHostingController.withPresentationResize<A>(_:)(void (*a1)(void))
{
  static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
  id v3 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:0 curve:0 animations:0.0];
  id v4 = [v1 popoverPresentationController];

  if (v4)
  {
    double v5 = *(void **)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator];
    *(void *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator] = v3;
    id v6 = v3;

    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v1;
    *(void *)(v7 + 24) = v6;
    id v8 = v6;
    char v9 = v1;
    sub_100E01B88((uint64_t)sub_100E087B8, v7);
    swift_release();
    swift_retain();
    withAnimation<A>(_:_:)();

LABEL_7:
    swift_release_n();
    return;
  }
  id v10 = [v1 presentingViewController];
  id v11 = [v10 presentedViewController];

  if (v11 || (id v11 = [v1 presentedViewController]) != 0)
  {
    id v12 = [v11 traitCollection];
    unsigned int v13 = [v12 crl_isCompactWidth];

    if (v13)
    {
      id v14 = *(void **)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator];
      *(void *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator] = v3;
      id v15 = v3;

      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = v1;
      *(void *)(v16 + 24) = v15;
      id v17 = v15;
      uint64_t v18 = v1;
      sub_100E01B88((uint64_t)sub_100E05220, v16);
      swift_release();
      swift_retain();
      withAnimation<A>(_:_:)();

      goto LABEL_7;
    }
  }
  a1();
  swift_release();
}

void CRLiOSAutoSizingHostingController.performAfterAnimations(_:)(void (*a1)(void), uint64_t a2)
{
  double v5 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator);
  if (v5)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a1;
    *(void *)(v6 + 24) = a2;
    _OWORD v9[4] = sub_1006DAE04;
    v9[5] = v6;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = *(void *)"";
    v9[2] = sub_100DFC964;
    v9[3] = &unk_10152E260;
    uint64_t v7 = _Block_copy(v9);
    id v8 = v5;
    swift_retain();
    swift_release();
    [v8 addCompletion:v7];
    _Block_release(v7);
  }
  else
  {
    a1();
  }
}

uint64_t CRLiOSAutoSizingHostingController.updateScrollTargets(_:)(uint64_t a1)
{
  unint64_t v3 = sub_100A3BE78((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v4 = v1 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_scrollTargets;
  swift_beginAccess();
  *(void *)uint64_t v4 = v3;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6) {
    return result;
  }
  uint64_t v7 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_100E07DA0(v7, (uint64_t)v32);
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    AnyHashable.description.getter();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    *(void *)(inited + 56) = sub_10050BF48(0, (unint64_t *)&qword_101673918);
    *(void *)(inited + 64) = sub_1007973E0();
    *(void *)(inited + 32) = v10;
    if (*(void *)(*(void *)v4 + 16))
    {
      swift_bridgeObjectRetain();
      sub_10095647C((uint64_t)v32);
      if (v11)
      {
        swift_bridgeObjectRelease();
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateScrollTargets(_:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Inspectors/CRLiOSAutoSizingHostingController.swift", 108, 2, 729, (uint64_t)"Duplicate scroll target ID: %@", 30, 2u, inited);
        sub_1005598CC(inited, (uint64_t)"updateScrollTargets(_:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Inspectors/CRLiOSAutoSizingHostingController.swift", 108, 2, 729);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    sub_10050BF84((uint64_t)v32, (uint64_t)v31);
    uint64_t v13 = v33;
    uint64_t v12 = v34;
    uint64_t v15 = v35;
    uint64_t v14 = v36;
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v17 = *(void **)v4;
    uint64_t v30 = *(void **)v4;
    *(void *)uint64_t v4 = 0x8000000000000000;
    unint64_t v19 = sub_10095647C((uint64_t)v31);
    uint64_t v20 = v17[2];
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21)) {
      break;
    }
    char v23 = v18;
    if (v17[3] >= v22)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v18) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_100983FD8();
        id v17 = v30;
        if (v23) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_10096DB7C(v22, isUniquelyReferenced_nonNull_native);
      id v17 = v30;
      unint64_t v24 = sub_10095647C((uint64_t)v31);
      if ((v23 & 1) != (v25 & 1)) {
        goto LABEL_25;
      }
      unint64_t v19 = v24;
      if (v23)
      {
LABEL_3:
        id v8 = (void *)(v17[7] + 32 * v19);
        *id v8 = v13;
        v8[1] = v12;
        v8[2] = v15;
        v8[3] = v14;
        goto LABEL_4;
      }
    }
    v17[(v19 >> 6) + 8] |= 1 << v19;
    sub_10050BF84((uint64_t)v31, v17[6] + 40 * v19);
    CGFloat v26 = (void *)(v17[7] + 32 * v19);
    *CGFloat v26 = v13;
    v26[1] = v12;
    v26[2] = v15;
    v26[3] = v14;
    uint64_t v27 = v17[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_24;
    }
    v17[2] = v29;
LABEL_4:
    *(void *)uint64_t v4 = v17;
    swift_bridgeObjectRelease();
    sub_10050BFE0((uint64_t)v31);
    swift_endAccess();
    sub_100E07E14((uint64_t)v32);
    v7 += 72;
    if (!--v6) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

id CRLiOSAutoSizingHostingController.scrollToTarget<A>(_:anchor:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v6 = v5;
  __n128 v11 = __chkstk_darwin(a1, a1);
  (*(void (**)(char *, __n128))(v13 + 16))((char *)&MaxY - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  AnyHashable.init<A>(_:)();
  uint64_t v14 = (uint64_t *)(v5 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_scrollTargets);
  swift_beginAccess();
  uint64_t v15 = *v14;
  if (!*(void *)(v15 + 16)) {
    return (id)sub_10050BFE0((uint64_t)v44);
  }
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_10095647C((uint64_t)v44);
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return (id)sub_10050BFE0((uint64_t)v44);
  }
  char v18 = (double *)(*(void *)(v15 + 56) + 32 * v16);
  double v20 = *v18;
  double v19 = v18[1];
  double v21 = v18[2];
  double v22 = v18[3];
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)v44);
  char v23 = *(void **)(v6 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_scrollView);
  [v23 bounds];
  CGFloat v28 = v26;
  double v29 = v27;
  if (a4)
  {
    CGFloat v34 = v24;
    double MinY = v25;
    v59.origin.x = v20;
    v59.origin.y = v19;
    v59.size.width = v21;
    v59.size.height = v22;
    if (CGRectContainsRect(*(CGRect *)&v24, v59))
    {
      double v31 = v34;
    }
    else
    {
      v45.origin.x = v20;
      v45.origin.y = v19;
      v45.size.width = v21;
      CGFloat v43 = v22;
      v45.size.height = v22;
      double MaxX = CGRectGetMaxX(v45);
      v46.origin.x = v34;
      v46.origin.y = MinY;
      v46.size.width = v28;
      v46.size.height = v29;
      if (CGRectGetMaxX(v46) <= MaxX)
      {
        v50.origin.x = v20;
        v50.origin.y = v19;
        v50.size.width = v21;
        v50.size.height = v43;
        double v38 = CGRectGetMaxX(v50);
        v51.origin.x = v34;
        v51.origin.y = MinY;
        v51.size.width = v28;
        v51.size.height = v29;
        double v31 = v38 - CGRectGetWidth(v51);
      }
      else
      {
        v47.origin.x = v20;
        v47.origin.y = v19;
        v47.size.width = v21;
        v47.size.height = v43;
        double MinX = CGRectGetMinX(v47);
        v48.origin.x = v34;
        v48.origin.y = MinY;
        v48.size.width = v28;
        v48.size.height = v29;
        BOOL v37 = MinX < CGRectGetMinX(v48);
        double v31 = v34;
        if (v37)
        {
          v49.origin.x = v20;
          v49.origin.y = v19;
          v49.size.width = v21;
          v49.size.height = v43;
          double v31 = CGRectGetMinX(v49);
        }
      }
      v52.origin.x = v20;
      v52.origin.y = v19;
      v52.size.width = v21;
      v52.size.height = v43;
      double MaxY = CGRectGetMaxY(v52);
      v53.origin.x = v34;
      v53.origin.y = MinY;
      v53.size.width = v28;
      v53.size.height = v29;
      if (CGRectGetMaxY(v53) <= MaxY)
      {
        v57.origin.x = v20;
        v57.origin.y = v19;
        v57.size.width = v21;
        v57.size.height = v43;
        double v39 = CGRectGetMaxY(v57);
        v58.origin.x = v34;
        v58.origin.y = MinY;
        v58.size.width = v28;
        v58.size.height = v29;
        double MinY = v39 - CGRectGetHeight(v58);
      }
      else
      {
        v54.origin.x = v20;
        v54.origin.y = v19;
        v54.size.width = v21;
        v54.size.height = v43;
        double MaxY = CGRectGetMinY(v54);
        v55.origin.x = v34;
        v55.origin.y = MinY;
        v55.size.width = v28;
        v55.size.height = v29;
        if (MaxY < CGRectGetMinY(v55))
        {
          v56.origin.x = v20;
          v56.origin.y = v19;
          v56.size.width = v21;
          v56.size.height = v43;
          double MinY = CGRectGetMinY(v56);
        }
      }
    }
  }
  else
  {
    double v30 = v19 + v22 * *(double *)&a3;
    double v31 = v20 + v21 * *(double *)&a2 - v26 * *(double *)&a2;
    double MinY = v30 - v29 * *(double *)&a3;
  }
  [v23 contentSize];
  if (v40 >= v31) {
    double v40 = v31;
  }
  if (v31 < 0.0) {
    double v40 = 0.0;
  }
  if (v41 >= MinY) {
    double v41 = MinY;
  }
  if (MinY < 0.0) {
    double v41 = 0.0;
  }
  return [v23 setContentOffset:a5 & 1, v40, v41];
}

char *CRLiOSAutoSizingHostingController.__allocating_init<A>(defaultSize:showScrollIndicators:content:)(BOOL a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  id v13 = objc_allocWithZone(v6);
  uint64_t v14 = sub_100E04BEC(a1, a2, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a2, a3);
  return v14;
}

uint64_t sub_100DFDCC4(uint64_t a1)
{
  uint64_t v3 = sub_100E04BB8(a1);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + qword_10169D3E0) - 8) + 8))(a1);
  return v3;
}

double sub_100DFDD30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIHostingController();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
  uint64_t v7 = (void *)UIHostingController.__allocating_init(rootView:)();
  dispatch thunk of UIHostingController.sizeThatFits(in:)();
  double v9 = v8;

  return v9;
}

uint64_t CRLiOSAutoSizingHostingController.__allocating_init<A>(defaultSize:content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v11 = (void (*)(void))__chkstk_darwin(a1, a2);
  id v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t, double, double))(v6 + 152))(2, v13, a3, a4, a5, a6);
}

void CRLiOSAutoSizingHostingController.init(coder:)()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize];
  *uint64_t v1 = 0;
  v1[1] = 0;
  v0[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_didChangeSize] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator] = 0;
  uint64_t v2 = OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_scrollTargets;
  *(void *)&v0[v2] = sub_100A3BE78((uint64_t)_swiftEmptyArrayStorage);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall CRLiOSAutoSizingHostingController.loadView()()
{
  id v1 = [objc_allocWithZone((Class)UIView) init];
  [v0 setView:v1];
}

Swift::Void __swiftcall CRLiOSAutoSizingHostingController.viewDidLoad()()
{
  id v1 = v0;
  v34.receiver = v0;
  v34.super_class = (Class)type metadata accessor for CRLiOSAutoSizingHostingController();
  [super viewDidLoad];
  [v0 setEdgesForExtendedLayout:0];
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v3 = v2;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_scrollView];
  [v2 addSubview:v4];

  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10117FBE0;
  id v6 = [v4 topAnchor];
  id v7 = [v1 view];
  if (!v7)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  double v8 = v7;
  id v9 = [v7 safeAreaLayoutGuide];

  id v10 = [v9 topAnchor];
  id v11 = [v6 constraintEqualToAnchor:v10];

  *(void *)(v5 + 32) = v11;
  id v12 = [v4 leadingAnchor];
  id v13 = [v1 view];
  if (!v13)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v14 = v13;
  id v15 = [v13 leadingAnchor];

  id v16 = [v12 constraintEqualToAnchor:v15];
  *(void *)(v5 + 40) = v16;
  id v17 = [v4 trailingAnchor];
  id v18 = [v1 view];
  if (!v18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  double v19 = v18;
  id v20 = [v18 trailingAnchor];

  id v21 = [v17 constraintEqualToAnchor:v20];
  *(void *)(v5 + 48) = v21;
  id v22 = [v4 bottomAnchor];
  id v23 = [v1 view];
  if (!v23)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  CGFloat v24 = v23;
  double v25 = self;
  id v26 = [v24 bottomAnchor];

  id v27 = [v22 constraintEqualToAnchor:v26];
  *(void *)(v5 + 56) = v27;
  specialized Array._endMutation()();
  sub_10050BF48(0, (unint64_t *)&qword_101674200);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v25 activateConstraints:isa];

  double v29 = *(void **)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_hostingController];
  [v1 addChildViewController:v29];
  id v30 = [v29 view];
  if (!v30)
  {
LABEL_18:
    __break(1u);
    return;
  }
  double v31 = v30;
  [v30 setBackgroundColor:0];
  [v4 addSubview:v31];
  double v32 = 10000.0;
  if (*(double *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_defaultSize] <= 0.0) {
    double v33 = 10000.0;
  }
  else {
    double v33 = *(double *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_defaultSize];
  }
  if (*(double *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_defaultSize + 8] > 0.0) {
    double v32 = *(double *)&v1[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_defaultSize + 8];
  }
  [v31 setFrame:0.0, 0.0, v33, v32];
  [v29 didMoveToParentViewController:v1];
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  [v31 layoutIfNeeded];
}

Swift::Void __swiftcall CRLiOSAutoSizingHostingController.viewWillAppear(_:)(Swift::Bool a1)
{
  id v2 = v1;
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for CRLiOSAutoSizingHostingController();
  [super viewWillAppear:a1];
  id v4 = [v2 popoverPresentationController];
  id v5 = v4;
  if (v4) {

  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((v5 != 0) != v6)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.setter();
  }
}

uint64_t sub_100DFE724()
{
  return sub_1006FF5A0();
}

Swift::Void __swiftcall CRLiOSAutoSizingHostingController.viewWillLayoutSubviews()()
{
  id v1 = v0;
  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for CRLiOSAutoSizingHostingController();
  [super viewWillLayoutSubviews];
  CRLiOSAutoSizingHostingController.safeAreaInsets.getter();
  id v2 = [v0 view];
  if (!v2) {
    goto LABEL_16;
  }
  uint64_t v3 = v2;
  [v2 effectiveUserInterfaceLayoutDirection];

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((static EdgeInsets.== infix(_:_:)() & 1) == 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.setter();
  }
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF50;
  *(void *)(inited + 32) = swift_getKeyPath();
  *(void *)(inited + 40) = swift_getKeyPath();
  specialized Array._endMutation()();
  char v5 = 0;
  unint64_t v6 = 0;
  unint64_t v7 = inited & 0xC000000000000001;
  uint64_t v11 = inited & 0xFFFFFFFFFFFFFF8;
  while (1)
  {
    char v8 = v5;
    if (v7)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_10;
    }
    if (v6 >= *(void *)(v11 + 16)) {
      break;
    }
    swift_retain();
LABEL_10:
    swift_getAtKeyPath();
    if (v12 != 0.0)
    {
      swift_getAtKeyPath();
      id v9 = [v1 view];
      if (!v9) {
        goto LABEL_15;
      }
      id v10 = v9;
      [v9 frame];

      swift_getAtKeyPath();
      swift_retain();
      swift_getAtKeyPath();
      swift_release();
    }
    swift_release();
    char v5 = 1;
    unint64_t v6 = 1;
    if (v8)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
  __break(1u);
  __break(1u);
  __break(1u);
  __break(1u);
LABEL_16:
  __break(1u);
}

double sub_100DFEE50()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

double sub_100DFEEC8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

id CRLiOSAutoSizingHostingController.navigationItem.getter()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_hostingController) navigationItem];

  return v1;
}

uint64_t sub_100DFF008()
{
  return sub_1006FF5A0();
}

uint64_t sub_100DFF01C@<X0>(unsigned char *a1@<X8>)
{
  return sub_1006FF6A0(a1);
}

uint64_t sub_100DFF030()
{
  return sub_100DFF24C();
}

double sub_100DFF044@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_100DFF0C4()
{
  return static Published.subscript.setter();
}

double sub_100DFF140@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_100DFF1C0()
{
  return static Published.subscript.setter();
}

uint64_t sub_100DFF24C()
{
  return static Published.subscript.setter();
}

uint64_t sub_100DFF2BC()
{
  swift_unknownObjectWeakDestroy();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCC8Freeform33CRLiOSAutoSizingHostingControllerP33_8C020DAD5868DEC95F698F6F7ADDCC229HostProxy__showEmptyView;
  uint64_t v2 = sub_1005057FC(&qword_10169FCE0);
  long long v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  uint64_t v4 = v0
     + OBJC_IVAR____TtCC8Freeform33CRLiOSAutoSizingHostingControllerP33_8C020DAD5868DEC95F698F6F7ADDCC229HostProxy__frameSize;
  uint64_t v5 = sub_1005057FC(&qword_10169D690);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v0
     + OBJC_IVAR____TtCC8Freeform33CRLiOSAutoSizingHostingControllerP33_8C020DAD5868DEC95F698F6F7ADDCC229HostProxy__safeAreaInsets;
  uint64_t v7 = sub_1005057FC(&qword_10169D698);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  v3(v0+ OBJC_IVAR____TtCC8Freeform33CRLiOSAutoSizingHostingControllerP33_8C020DAD5868DEC95F698F6F7ADDCC229HostProxy__isPresentedInsidePopover, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100DFF428()
{
  uint64_t v1 = sub_1005057FC(&qword_10169D698);
  uint64_t v21 = *(void *)(v1 - 8);
  uint64_t v22 = v1;
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_10169D690);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  id v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_10169FCE0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  uint64_t v15 = v0
      + OBJC_IVAR____TtCC8Freeform33CRLiOSAutoSizingHostingControllerP33_8C020DAD5868DEC95F698F6F7ADDCC229HostProxy__showEmptyView;
  LOBYTE(v23) = 0;
  Published.init(initialValue:)();
  id v16 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
  v16(v15, v14, v10);
  uint64_t v17 = v0
      + OBJC_IVAR____TtCC8Freeform33CRLiOSAutoSizingHostingControllerP33_8C020DAD5868DEC95F698F6F7ADDCC229HostProxy__frameSize;
  type metadata accessor for CGSize(0);
  long long v23 = 0uLL;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v17, v9, v5);
  uint64_t v18 = v0
      + OBJC_IVAR____TtCC8Freeform33CRLiOSAutoSizingHostingControllerP33_8C020DAD5868DEC95F698F6F7ADDCC229HostProxy__safeAreaInsets;
  long long v23 = 0u;
  long long v24 = 0u;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v18, v4, v22);
  uint64_t v19 = v0
      + OBJC_IVAR____TtCC8Freeform33CRLiOSAutoSizingHostingControllerP33_8C020DAD5868DEC95F698F6F7ADDCC229HostProxy__isPresentedInsidePopover;
  LOBYTE(v23) = 0;
  Published.init(initialValue:)();
  v16(v19, v14, v10);
  return v0;
}

uint64_t sub_100DFF6F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

void sub_100DFF740()
{
  xmmword_10169D228 = 0uLL;
}

double sub_100DFF750@<D0>(_OWORD *a1@<X8>)
{
  if (qword_101670100 != -1) {
    swift_once();
  }
  double result = *(double *)&xmmword_10169D228;
  *a1 = xmmword_10169D228;
  return result;
}

void sub_100DFF7B8(uint64_t (**a1)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  *a1 = sub_100880E84;
  a1[1] = 0;
}

double sub_100DFF7D0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_1005057FC(&qword_10169D6E0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10, v13);
  if ((a4 & 1) != 0
    || (swift_getKeyPath(),
        swift_getKeyPath(),
        swift_retain(),
        static Published.subscript.getter(),
        swift_release(),
        swift_release(),
        swift_release(),
        v23 == 1))
  {
    id v20 = 0;
    uint64_t v21 = 0;
    char v22 = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
    unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v15 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
    unint64_t v16 = v15 + ((v12 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
    *(void *)unint64_t v16 = a2;
    *(void *)(v16 + 8) = a3;
    *(unsigned char *)(v16 + 16) = 0;
    id v20 = sub_100E083C0;
    uint64_t v21 = v15;
    char v22 = 1;
    swift_retain();
  }
  sub_1005057FC(&qword_10169D6E8);
  sub_100523288(&qword_10169D6F0, &qword_10169D6E8);
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v23;
  char v18 = v24;
  *(_OWORD *)a5 = v23;
  *(unsigned char *)(a5 + 16) = v18;
  return result;
}

uint64_t sub_100DFFA18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  int v92 = a5;
  uint64_t v96 = a3;
  uint64_t v83 = a2;
  uint64_t v87 = a1;
  uint64_t v104 = a6;
  uint64_t v7 = type metadata accessor for CoordinateSpace();
  uint64_t v102 = *(void *)(v7 - 8);
  uint64_t v103 = v7;
  __chkstk_darwin(v7, v8);
  uint64_t v101 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1005057FC(&qword_10169D6F8);
  __chkstk_darwin(v82, v10);
  uint64_t v12 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1005057FC(&qword_10169D700);
  __chkstk_darwin(v81, v13);
  uint64_t v15 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1005057FC(&qword_10169D708);
  __chkstk_darwin(v80, v16);
  char v18 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1005057FC(&qword_10169D710);
  __chkstk_darwin(v79, v19);
  uint64_t v21 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1005057FC(&qword_10169D718);
  __chkstk_darwin(v84, v22);
  char v24 = (char *)&v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1005057FC(&qword_10169D720);
  __chkstk_darwin(v85, v25);
  id v27 = (char *)&v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1005057FC(&qword_10169D728);
  __chkstk_darwin(v86, v28);
  uint64_t v89 = (uint64_t)&v79 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_1005057FC(&qword_10169D730);
  __chkstk_darwin(v88, v30);
  uint64_t v93 = (char *)&v79 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_1005057FC(&qword_10169D738);
  __chkstk_darwin(v90, v32);
  uint64_t v95 = (uint64_t)&v79 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_1005057FC(&qword_10169D740);
  __chkstk_darwin(v91, v34);
  uint64_t v98 = (char *)&v79 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_1005057FC(&qword_10169D748);
  __chkstk_darwin(v94, v36);
  uint64_t v100 = (char *)&v79 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_1005057FC(&qword_10169D750);
  __chkstk_darwin(v97, v38);
  uint64_t v99 = (char *)&v79 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (*(double *)&v109 > 0.0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (*((double *)&v109 + 1) > 0.0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    if (!sub_1003E86EC()) {
      goto LABEL_5;
    }
  }
  else if (!sub_1003E86EC())
  {
LABEL_5:
    static Alignment.topLeading.getter();
    goto LABEL_8;
  }
  static Alignment.topTrailing.getter();
LABEL_8:
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v40 = sub_1005057FC(&qword_10169D6E0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v12, v83, v40);
  double v41 = &v12[*(int *)(v82 + 36)];
  long long v42 = v107;
  *(_OWORD *)double v41 = v106;
  *((_OWORD *)v41 + 1) = v42;
  *((_OWORD *)v41 + 2) = v108;
  sub_100522E9C((uint64_t)v12, (uint64_t)v15, &qword_10169D6F8);
  *(_WORD *)&v15[*(int *)(v81 + 36)] = 257;
  sub_100522F00((uint64_t)v12, &qword_10169D6F8);
  sub_100522E9C((uint64_t)v15, (uint64_t)v18, &qword_10169D700);
  *(void *)&v18[*(int *)(v80 + 36)] = a4;
  sub_100522F00((uint64_t)v15, &qword_10169D700);
  uint64_t v43 = static Alignment.center.getter();
  uint64_t v45 = v44;
  sub_100522E9C((uint64_t)v18, (uint64_t)v21, &qword_10169D708);
  CGRect v46 = (uint64_t *)&v21[*(int *)(v79 + 36)];
  *CGRect v46 = v43;
  v46[1] = v45;
  sub_100522F00((uint64_t)v18, &qword_10169D708);
  GeometryProxy.size.getter();
  GeometryProxy.size.getter();
  if (sub_1003E86EC()) {
    static Alignment.topTrailing.getter();
  }
  else {
    static Alignment.topLeading.getter();
  }
  _FrameLayout.init(width:height:alignment:)();
  sub_100522E9C((uint64_t)v21, (uint64_t)v24, &qword_10169D710);
  CGRect v47 = &v24[*(int *)(v84 + 36)];
  long long v48 = v110;
  *(_OWORD *)CGRect v47 = v109;
  *((_OWORD *)v47 + 1) = v48;
  *((_OWORD *)v47 + 2) = v111;
  sub_100522F00((uint64_t)v21, &qword_10169D710);
  uint64_t v49 = swift_allocObject();
  uint64_t v50 = v96;
  *(void *)(v49 + 16) = v96;
  *(void *)(v49 + 24) = a4;
  char v51 = v92 & 1;
  *(unsigned char *)(v49 + 32) = v92 & 1;
  sub_100522E9C((uint64_t)v24, (uint64_t)v27, &qword_10169D718);
  CGRect v52 = (void (**)(uint64_t *))&v27[*(int *)(v85 + 36)];
  *CGRect v52 = sub_100E084B0;
  v52[1] = (void (*)(uint64_t *))v49;
  swift_retain();
  sub_100522F00((uint64_t)v24, &qword_10169D718);
  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = v50;
  *(void *)(v53 + 24) = a4;
  *(unsigned char *)(v53 + 32) = v51;
  uint64_t v54 = v89;
  sub_100522E9C((uint64_t)v27, v89, &qword_10169D720);
  CGRect v55 = (void (**)(uint64_t *))(v54 + *(int *)(v86 + 36));
  *CGRect v55 = sub_100E084BC;
  v55[1] = (void (*)(uint64_t *))v53;
  swift_retain();
  sub_100522F00((uint64_t)v27, &qword_10169D720);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v105 = a4;
  CGRect v57 = v101;
  AnyHashable.init<A>(_:)();
  uint64_t v59 = v102;
  uint64_t v58 = v103;
  (*(void (**)(char *, void, uint64_t))(v102 + 104))(v57, enum case for CoordinateSpace.named(_:), v103);
  uint64_t v60 = (uint64_t)v93;
  long long v61 = (uint64_t *)&v93[*(int *)(v88 + 36)];
  uint64_t v62 = sub_1005057FC(&qword_10169D758);
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))((char *)v61 + *(int *)(v62 + 28), v57, v58);
  *long long v61 = KeyPath;
  sub_100522E9C(v54, v60, &qword_10169D728);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v57, v58);
  sub_100522F00(v54, &qword_10169D728);
  uint64_t v63 = swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v58) = v105;
  uint64_t v64 = v95;
  sub_100522E9C(v60, v95, &qword_10169D730);
  uint64_t v65 = v64 + *(int *)(v90 + 36);
  *(void *)uint64_t v65 = v63;
  *(unsigned char *)(v65 + 8) = v58;
  sub_100522F00(v60, &qword_10169D730);
  uint64_t v66 = swift_getKeyPath();
  id Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v68 = (uint64_t)v98;
  int v69 = (uint64_t *)&v98[*(int *)(v91 + 36)];
  sub_100E0545C();
  *int v69 = v66;
  sub_100522E9C(v64, v68, &qword_10169D738);
  sub_100523398((uint64_t)&v105);
  sub_100522F00(v64, &qword_10169D738);
  uint64_t v70 = swift_getKeyPath();
  uint64_t v71 = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v72 = (uint64_t)v100;
  uint64_t v73 = (uint64_t *)&v100[*(int *)(v94 + 36)];
  sub_100E0545C();
  *uint64_t v73 = v70;
  sub_100522E9C(v68, v72, &qword_10169D740);
  sub_100523398((uint64_t)&v105);
  sub_100522F00(v68, &qword_10169D740);
  uint64_t v74 = swift_getKeyPath();
  int64_t v75 = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v76 = (uint64_t)v99;
  uint64_t v77 = (uint64_t *)&v99[*(int *)(v97 + 36)];
  sub_100E0545C();
  uint64_t *v77 = v74;
  sub_100522E9C(v72, v76, &qword_10169D748);
  sub_100523398((uint64_t)&v105);
  sub_100522F00(v72, &qword_10169D748);
  return sub_10051B3EC(v76, v104, &qword_10169D750);
}

void sub_100E00690(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  id Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = &Strong[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize];
    *uint64_t v4 = v1;
    v4[1] = v2;
    Strong[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_didChangeSize] = 1;
  }
}

void sub_100E006F8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = (id)Strong;
    CRLiOSAutoSizingHostingController.updateScrollTargets(_:)(v1);
  }
}

uint64_t EnvironmentValues.crl_scrollViewContentCoordinateSpace.getter()
{
  sub_100E05360();

  return EnvironmentValues.subscript.getter();
}

uint64_t sub_100E007AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CoordinateSpace();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v9 = __chkstk_darwin(v7, v8);
  uint64_t v11 = (char *)&v14 - v10;
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v12((char *)&v14 - v10, a1, v2, v9);
  ((void (*)(char *, char *, uint64_t))v12)(v6, v11, v2);
  sub_100E05360();
  EnvironmentValues.subscript.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v11, v2);
}

uint64_t EnvironmentValues.crl_scrollViewContentCoordinateSpace.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CoordinateSpace();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v5 = __chkstk_darwin(v2, v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v5);
  sub_100E05360();
  EnvironmentValues.subscript.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t EnvironmentValues.crl_isPresentedInsidePopover.getter()
{
  sub_100E053B4();
  EnvironmentValues.subscript.getter();
  return v1;
}

uint64_t EnvironmentValues.crl_isPresentedInsidePopover.setter()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t EnvironmentValues.crl_withPresentationResize.getter()
{
  sub_100E05408();

  return EnvironmentValues.subscript.getter();
}

uint64_t EnvironmentValues.crl_withPresentationResize.setter(uint64_t a1)
{
  return sub_100E00CA8(a1, (uint64_t (*)(uint64_t, unsigned char *))sub_100E0545C, (void (*)(uint64_t))sub_100E05408, (uint64_t)&type metadata for CRLiOSAutoSizingHostingController.PresentationResizeActionKey, sub_100523398);
}

uint64_t EnvironmentValues.crl_performAfterAnimations.getter()
{
  sub_100E0546C();

  return EnvironmentValues.subscript.getter();
}

uint64_t EnvironmentValues.crl_performAfterAnimations.setter(uint64_t a1)
{
  return sub_100E00CA8(a1, (uint64_t (*)(uint64_t, unsigned char *))sub_100E0545C, (void (*)(uint64_t))sub_100E0546C, (uint64_t)&type metadata for CRLiOSAutoSizingHostingController.PerformAfterAnimationsActionKey, sub_100523398);
}

uint64_t EnvironmentValues.crl_scrollToTarget.getter()
{
  sub_100E054C0();

  return EnvironmentValues.subscript.getter();
}

uint64_t sub_100E00BD0(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(unsigned char *, uint64_t *), void (*a6)(uint64_t), uint64_t a7, uint64_t (*a8)(unsigned char *))
{
  a5(a1, (uint64_t *)v14);
  uint64_t v11 = a5(v14, &v13);
  a6(v11);
  EnvironmentValues.subscript.setter();
  return a8(v14);
}

uint64_t EnvironmentValues.crl_scrollToTarget.setter(uint64_t a1)
{
  return sub_100E00CA8(a1, (uint64_t (*)(uint64_t, unsigned char *))sub_100E0545C, (void (*)(uint64_t))sub_100E054C0, (uint64_t)&type metadata for CRLiOSAutoSizingHostingController.ScrollToTargetActionKey, sub_100523398);
}

uint64_t sub_100E00CA8(uint64_t a1, uint64_t (*a2)(uint64_t, unsigned char *), void (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v8 = a2(a1, v10);
  a3(v8);
  EnvironmentValues.subscript.setter();
  return a5(a1);
}

uint64_t sub_100E00D2C()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

double sub_100E00D48@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100DFF7D0(a1, *(void *)v2, *(void *)(v2 + 8), *(unsigned char *)(v2 + 16), a2);
}

id sub_100E00D54(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_100E00D98();

  return v2;
}

void *sub_100E00D98()
{
  return sub_100E01180((uint64_t)&unk_10152E718, (uint64_t (*)(id))sub_100E07D98);
}

void sub_100E00DCC(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  sub_100E00E28(a3);
}

void sub_100E00E28(void *a1)
{
  if (a1)
  {
    id v9 = a1;
    id v1 = [v9 customView];
    if (v1)
    {

      uint64_t v2 = sub_100E01180((uint64_t)&unk_10152E6F0, (uint64_t (*)(id))CRLWPShapeLayout.descendersCannotClip.getter);
      if (v2)
      {
        uint64_t v3 = v2;
        sub_1005057FC((uint64_t *)&unk_101676C10);
        uint64_t v4 = swift_allocObject();
        *(_OWORD *)(v4 + 16) = xmmword_10117DF50;
        *(void *)(v4 + 32) = v3;
        *(void *)(v4 + 40) = v9;
        uint64_t v10 = v4;
        specialized Array._endMutation()();
        id v5 = v9;
        id v6 = v3;
        sub_100E0101C(v10);
      }
      else
      {
        sub_1005057FC((uint64_t *)&unk_101676C10);
        uint64_t v7 = swift_allocObject();
        *(_OWORD *)(v7 + 16) = xmmword_101177E70;
        *(void *)(v7 + 32) = v9;
        uint64_t v11 = v7;
        specialized Array._endMutation()();
        id v8 = v9;
        sub_100E0101C(v11);
      }
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"rightBarButtonItem", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Inspectors/CRLiOSAutoSizingHostingController.swift", 108, 2, 511, (uint64_t)"Unexpected bar button item.", 27, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"rightBarButtonItem", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Inspectors/CRLiOSAutoSizingHostingController.swift", 108, 2, 511);
    }
  }
}

uint64_t sub_100E0101C(uint64_t a1)
{
  uint64_t v3 = self;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_100E07D48;
  *(void *)(v5 + 24) = v4;
  v10[4] = sub_1006591F0;
  v10[5] = v5;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = *(void *)"";
  v10[2] = sub_1006D9628;
  v10[3] = &unk_10152E6B8;
  id v6 = _Block_copy(v10);
  id v7 = v1;
  swift_retain();
  swift_release();
  [v3 performWithoutAnimation:v6];
  _Block_release(v6);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

void *sub_100E01180(uint64_t a1, uint64_t (*a2)(id))
{
  uint64_t v4 = sub_100E01290();
  if (!v4) {
    return 0;
  }
  unint64_t v5 = v4;
  *(void *)(swift_allocObject() + 16) = v2;
  id v6 = v2;
  id v7 = sub_100E049A0(v5, a2);
  swift_release();
  swift_bridgeObjectRelease();
  return v7;
}

Class sub_100E01210(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_100E01290();

  if (v2)
  {
    sub_10050BF48(0, (unint64_t *)&qword_101674470);
    v3.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v3.super.Class isa = 0;
  }

  return v3.super.isa;
}

uint64_t sub_100E01290()
{
  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  id v1 = [super rightBarButtonItems];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_10050BF48(0, (unint64_t *)&qword_101674470);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void sub_100E01318(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  if (a3)
  {
    sub_10050BF48(0, (unint64_t *)&qword_101674470);
    uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  id v5 = a1;
  sub_100E0101C(v3);
}

void sub_100E0139C(void *a1, objc_class *a2)
{
  Class isa = a2;
  if (a2)
  {
    sub_10050BF48(0, (unint64_t *)&qword_101674470);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
  }
  v4.receiver = a1;
  v4.super_class = (Class)type metadata accessor for CRLiOSAutoSizingHostingController.HostingController.NavigationItem();
  [super setRightBarButtonItems:isa];
}

BOOL sub_100E0145C(void *a1)
{
  id v1 = [a1 customView];
  id v2 = v1;
  if (v1) {

  }
  return v2 != 0;
}

id sub_100E014A0()
{
  id v1 = objc_allocWithZone(v0);
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v3 = [v1 initWithTitle:v2];

  return v3;
}

id sub_100E01510()
{
  ObjectType = (objc_class *)swift_getObjectType();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  id v3 = [super initWithTitle:v2];

  return v3;
}

id sub_100E0158C()
{
  return sub_100E01510();
}

id sub_100E015B8(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  [super initWithCoder:a1];

  return v3;
}

id sub_100E0160C(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100E015B8(a3);
}

id sub_100E01634()
{
  uint64_t v1 = *(void *)(qword_10169D3E0 + (swift_isaMask & *v0) + 16);
  NSString v2 = *(void **)((char *)v0 + v1);
  if (v2)
  {
    id v3 = *(id *)((char *)v0 + v1);
  }
  else
  {
    id v4 = sub_100E016D4(v0);
    objc_super v5 = *(void **)((char *)v0 + v1);
    *(void *)((char *)v0 + v1) = v4;
    id v3 = v4;

    NSString v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100E016D4(void *a1)
{
  id v1 = [a1 title];
  if (v1)
  {
    NSString v2 = v1;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  type metadata accessor for CRLiOSAutoSizingHostingController.HostingController.NavigationItem();
  return sub_100E014A0();
}

id sub_100E01794(void *a1)
{
  id v1 = a1;
  id v2 = sub_100E017D8();

  return v2;
}

void sub_100E017DC()
{
  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType();
  [super viewDidLayoutSubviews];
  id v1 = [v0 parentViewController];
  if (v1)
  {
    id v2 = v1;
    type metadata accessor for CRLiOSAutoSizingHostingController();
    if (swift_dynamicCastClass()) {
      CRLiOSAutoSizingHostingController.hostingControllerDidLayoutSubviews()();
    }
  }
}

void sub_100E0185C(void *a1)
{
  id v1 = a1;
  sub_100E017DC();
}

void *sub_100E018A4(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return sub_100E018E8(a1, a2);
}

void *sub_100E018E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)((swift_isaMask & *v2) + qword_10169D3E0);
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(a1, a2);
  *(void *)((char *)v2 + *(void *)(v7 + 16)) = 0;
  (*(void (**)(char *, __n128))(v5 + 16))((char *)&v13 - v8, v6);
  id v9 = (void *)UIHostingController.init(coder:rootView:)();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  id v11 = v9;
  v10(a2, v4);
  if (v9) {

  }
  return v9;
}

id sub_100E01A2C(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)((char *)v1 + *(void *)(qword_10169D3E0 + (swift_isaMask & *v1) + 16)) = 0;
  v6.receiver = v1;
  v6.super_class = ObjectType;
  id v4 = [super initWithCoder:a1];

  return v4;
}

id sub_100E01AC8(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100E01A2C(a3);
}

void sub_100E01AF0()
{
}

void sub_100E01B3C(void *a1)
{
}

uint64_t sub_100E01B88(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v28 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v4);
  objc_super v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v27 = v7;
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v25 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v23 - v18;
  sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
  uint64_t v20 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  char v24 = *(void (**)(char *, uint64_t))(v12 + 8);
  v24(v15, v11);
  aBlock[4] = v23;
  aBlock[5] = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = &unk_10152E730;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100E05AF0((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v27);
  return ((uint64_t (*)(char *, uint64_t))v24)(v19, v25);
}

void sub_100E01F34(uint64_t a1, void *a2)
{
  uint64_t v2 = OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator;
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator);
  if (v3)
  {
    sub_10050BF48(0, &qword_10169D6A0);
    id v6 = a2;
    id v7 = v3;
    LOBYTE(a2) = static NSObject.== infix(_:_:)();

    if (a2)
    {
      uint64_t v8 = *(void **)(a1 + v2);
      *(void *)(a1 + v2) = 0;
    }
  }
}

void CRLiOSAutoSizingHostingController.PresentationResizeAction.callAsFunction<A>(_:)(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v7 = Strong;
    (*(void (**)(void (*)(void), uint64_t, uint64_t))((swift_isaMask & *Strong) + 0x100))(a1, a2, a3);
  }
  else
  {
    a1();
  }
}

void CRLiOSAutoSizingHostingController.PerformAfterAnimationsAction.callAsFunction(_:)(void (*a1)(void), uint64_t a2)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = Strong;
    (*(void (**)(void (*)(void), uint64_t))((swift_isaMask & *Strong) + 0x128))(a1, a2);
  }
  else
  {
    a1();
  }
}

void sub_100E02170(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_100E02178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, &protocol witness table for Bool);
}

uint64_t sub_100E02184()
{
  return swift_unknownObjectWeakInit();
}

uint64_t sub_100E02194@<X0>(uint64_t a1@<X8>)
{
  return sub_100E02260(&qword_101670108, (uint64_t)&unk_10171C7C8, (uint64_t (*)(void, void))sub_100E0545C, a1);
}

uint64_t sub_100E021D0()
{
  return swift_unknownObjectWeakInit();
}

uint64_t sub_100E021E0@<X0>(uint64_t a1@<X8>)
{
  return sub_100E02260(&qword_101670110, (uint64_t)&unk_10171C7D0, (uint64_t (*)(void, void))sub_100E0545C, a1);
}

uint64_t sub_100E02218()
{
  return swift_unknownObjectWeakInit();
}

uint64_t sub_100E02228@<X0>(uint64_t a1@<X8>)
{
  return sub_100E02260(&qword_101670118, (uint64_t)&unk_10171C7D8, (uint64_t (*)(void, void))sub_100E0545C, a1);
}

uint64_t sub_100E02260@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t (*a3)(void, void)@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1)
  {
    id v7 = a3;
    swift_once();
    a3 = v7;
  }

  return a3(a2, a4);
}

uint64_t sub_100E022CC()
{
  uint64_t v0 = type metadata accessor for CoordinateSpace();
  sub_100568B28(v0, qword_10171C7E0);
  uint64_t v1 = sub_100556B74(v0, (uint64_t)qword_10171C7E0);
  uint64_t v2 = enum case for CoordinateSpace.global(_:);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_100E02354@<X0>(uint64_t a1@<X8>)
{
  if (qword_101670120 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for CoordinateSpace();
  uint64_t v3 = sub_100556B74(v2, (uint64_t)qword_10171C7E0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100E023FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100E05AF0(&qword_10169D648, (void (*)(uint64_t))&type metadata accessor for CoordinateSpace);

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

BOOL sub_100E02490(uint64_t a1, uint64_t a2)
{
  return (static AnyHashable.== infix(_:_:)() & 1) != 0 && CGRectEqualToRect(*(CGRect *)(a1 + 40), *(CGRect *)(a2 + 40));
}

void sub_100E024D8()
{
  qword_10171C7F8 = (uint64_t)&_swiftEmptyArrayStorage;
}

uint64_t sub_100E024EC@<X0>(void *a1@<X8>)
{
  if (qword_101670128 != -1) {
    swift_once();
  }
  *a1 = qword_10171C7F8;

  return swift_bridgeObjectRetain();
}

uint64_t sub_100E02558(uint64_t a1, void (*a2)(uint64_t *__return_ptr))
{
  a2(&v3);
  return sub_1006E377C(v3);
}

uint64_t sub_100E0259C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for GeometryProxy();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6, v9);
  uint64_t v10 = type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10 - 8, v13);
  uint64_t v19 = static Color.clear.getter();
  sub_100E07C00(a2, (uint64_t)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v15 = (v12 + *(unsigned __int8 *)(v7 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = swift_allocObject();
  sub_100E07898((uint64_t)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v14, type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier);
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v15, (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  *a3 = v19;
  a3[1] = (uint64_t)sub_100E07B2C;
  a3[2] = v16;
  return result;
}

__n128 sub_100E027AC(double **a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CoordinateSpace();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050BF84(a2, (uint64_t)v24);
  type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier(0);
  sub_100E03A50(&qword_10169D2D0, (uint64_t (*)(void))&type metadata accessor for CoordinateSpace, 0x616E6964726F6F43, 0xEF65636170536574, (uint64_t)v8);
  GeometryProxy.frame(in:)();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  __n128 v26 = (__n128)v24[0];
  long long v27 = v24[1];
  uint64_t v28 = v25;
  uint64_t v17 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v17 = sub_100F64EDC(0, *((void *)v17 + 2) + 1, 1, v17);
  }
  unint64_t v19 = *((void *)v17 + 2);
  unint64_t v18 = *((void *)v17 + 3);
  if (v19 >= v18 >> 1) {
    uint64_t v17 = sub_100F64EDC((double *)(v18 > 1), v19 + 1, 1, v17);
  }
  *((void *)v17 + 2) = v19 + 1;
  uint64_t v20 = &v17[9 * v19];
  __n128 result = v26;
  long long v22 = v27;
  *((void *)v20 + 8) = v28;
  *((__n128 *)v20 + 2) = result;
  *((_OWORD *)v20 + 3) = v22;
  *((void *)v20 + 9) = v10;
  *((void *)v20 + 10) = v12;
  *((void *)v20 + 11) = v14;
  *((void *)v20 + 12) = v16;
  *a1 = v17;
  return result;
}

uint64_t sub_100E029A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(a1, a2 - 8);
  uint64_t v8 = sub_1005057FC(&qword_10169D650);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100E07C00(v3, (uint64_t)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier);
  unint64_t v13 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = swift_allocObject();
  sub_100E07898((uint64_t)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier);
  uint64_t v15 = static Alignment.center.getter();
  uint64_t v17 = v16;
  uint64_t v18 = sub_1005057FC(&qword_10169D658);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v12, a1, v18);
  unint64_t v19 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))&v12[*(int *)(v9 + 44)];
  *unint64_t v19 = sub_100E07900;
  v19[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v14;
  v19[2] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v15;
  v19[3] = v17;
  sub_100522E9C((uint64_t)v12, a3, &qword_10169D650);
  uint64_t v20 = sub_1005057FC(&qword_10169D660);
  sub_10050BF84(v3, a3 + *(int *)(v20 + 52));
  return sub_100522F00((uint64_t)v12, &qword_10169D650);
}

uint64_t sub_100E02BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v41 = a1;
  uint64_t v3 = sub_1005057FC(&qword_10169D668);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10169D670);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_10169D678);
  __chkstk_darwin(v12, v13);
  uint64_t v39 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLiOSAutoSizingHostingController.AdditionalSafeAreasModifier(0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(self, "crl_phoneUI")
    || (unint64_t v19 = self, !objc_msgSend(v19, "crl_screenClassPhoneUIRegularOrLarge")))
  {
    sub_100E07C00(v2, (uint64_t)v18, type metadata accessor for CRLiOSAutoSizingHostingController.AdditionalSafeAreasModifier);
    goto LABEL_7;
  }
  unsigned int v20 = [v19 crl_deviceIsLandscape];
  sub_100E07C00(v2, (uint64_t)v18, type metadata accessor for CRLiOSAutoSizingHostingController.AdditionalSafeAreasModifier);
  if (!v20)
  {
LABEL_7:
    sub_100E056D4((uint64_t)v18, type metadata accessor for CRLiOSAutoSizingHostingController.AdditionalSafeAreasModifier);
    goto LABEL_8;
  }
  uint64_t v21 = &v18[*(int *)(v15 + 24)];
  uint64_t v22 = *(void *)v21;
  char v23 = v21[8];
  sub_100E05E50(*(void *)v21, v23);
  char v24 = sub_100E03D08(v22, v23);
  sub_100E06018(v22, v23);
  sub_100E056D4((uint64_t)v18, type metadata accessor for CRLiOSAutoSizingHostingController.AdditionalSafeAreasModifier);
  if ((v24 & 1) == 0)
  {
    char v25 = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    uint64_t v27 = v26;
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    uint64_t v34 = (uint64_t)v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v39, v41, v3);
    uint64_t v35 = v34 + *(int *)(v12 + 36);
    *(unsigned char *)uint64_t v35 = v25;
    *(void *)(v35 + 8) = v27;
    *(void *)(v35 + 16) = v29;
    *(void *)(v35 + 24) = v31;
    *(void *)(v35 + 32) = v33;
    *(unsigned char *)(v35 + 40) = 0;
    sub_100522E9C(v34, (uint64_t)v11, &qword_10169D678);
    swift_storeEnumTagMultiPayload();
    sub_100E07C68();
    sub_100523288(&qword_10169D688, &qword_10169D668);
    _ConditionalContent<>.init(storage:)();
    return sub_100522F00(v34, &qword_10169D678);
  }
LABEL_8:
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v37(v7, v41, v3);
  v37(v11, (uint64_t)v7, v3);
  swift_storeEnumTagMultiPayload();
  sub_100E07C68();
  sub_100523288(&qword_10169D688, &qword_10169D668);
  _ConditionalContent<>.init(storage:)();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

void CRLiOSAutoSizingHostingController.init(nibName:bundle:)()
{
}

id CRLiOSAutoSizingHostingController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSAutoSizingHostingController();
  return [super dealloc];
}

void (*EnvironmentValues.crl_withPresentationResize.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v3[4] = sub_100E05408();
  EnvironmentValues.subscript.getter();
  return sub_100E031B4;
}

void sub_100E031B4(uint64_t *a1, char a2)
{
}

void (*EnvironmentValues.crl_performAfterAnimations.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v3[4] = sub_100E0546C();
  EnvironmentValues.subscript.getter();
  return sub_100E03260;
}

void sub_100E03260(uint64_t *a1, char a2)
{
}

void (*EnvironmentValues.crl_scrollToTarget.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v3[4] = sub_100E054C0();
  EnvironmentValues.subscript.getter();
  return sub_100E0330C;
}

void sub_100E0330C(uint64_t *a1, char a2)
{
}

void sub_100E03340(uint64_t *a1, char a2, void (*a3)(uint64_t, uint64_t), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v7 = (char *)*a1;
  uint64_t v8 = *a1 + 8;
  if (a2)
  {
    a3(*a1, v8);
    a3(v8, (uint64_t)(v7 + 16));
    EnvironmentValues.subscript.setter();
    a5(v8);
  }
  else
  {
    a3(*a1, v8);
    EnvironmentValues.subscript.setter();
  }
  a5((uint64_t)v7);

  free(v7);
}

void (*EnvironmentValues.crl_scrollViewContentCoordinateSpace.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = type metadata accessor for CoordinateSpace();
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  v3[5] = malloc(v6);
  v3[6] = sub_100E05360();
  EnvironmentValues.subscript.getter();
  return sub_100E0350C;
}

void sub_100E0350C(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 16) + 16);
  v4(*(void *)(*(void *)a1 + 32), v3[5], v3[1]);
  uint64_t v5 = (void *)v3[5];
  uint64_t v7 = (void *)v3[3];
  size_t v6 = (void *)v3[4];
  uint64_t v8 = v3[1];
  uint64_t v9 = v3[2];
  if (a2)
  {
    v4(v3[3], v3[4], v3[1]);
    EnvironmentValues.subscript.setter();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v6, v8);
    v10(v5, v8);
  }
  else
  {
    EnvironmentValues.subscript.setter();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v6);
  free(v7);

  free(v3);
}

uint64_t (*EnvironmentValues.crl_isPresentedInsidePopover.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_100E053B4();
  EnvironmentValues.subscript.getter();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_100E036AC;
}

uint64_t sub_100E036AC(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return EnvironmentValues.subscript.setter();
}

uint64_t View.crlScrollTarget<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier(0);
  __n128 v10 = __chkstk_darwin(v8, v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, a1, a3, v10);
  AnyHashable.init<A>(_:)();
  uint64_t v13 = (uint64_t *)&v12[*(int *)(v8 + 20)];
  *uint64_t v13 = swift_getKeyPath();
  sub_1005057FC(&qword_10169D2D0);
  swift_storeEnumTagMultiPayload();
  View.modifier<A>(_:)();
  return sub_100E056D4((uint64_t)v12, type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier);
}

uint64_t View.crlAdditionalPaddingOnLandscapePhone()()
{
  uint64_t v0 = type metadata accessor for CRLiOSAutoSizingHostingController.AdditionalSafeAreasModifier(0);
  __chkstk_darwin(v0, v1);
  uint64_t v3 = (uint64_t *)((char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v11 - v6;
  *uint64_t v3 = swift_getKeyPath();
  sub_1005057FC(&qword_10169C9E0);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = (uint64_t *)((char *)v3 + *(int *)(v0 + 20));
  *uint64_t v8 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = (char *)v3 + *(int *)(v0 + 24);
  *(void *)uint64_t v9 = swift_getKeyPath();
  v9[8] = 0;
  sub_100E07898((uint64_t)v3, (uint64_t)v7, type metadata accessor for CRLiOSAutoSizingHostingController.AdditionalSafeAreasModifier);
  View.modifier<A>(_:)();
  return sub_100E056D4((uint64_t)v7, type metadata accessor for CRLiOSAutoSizingHostingController.AdditionalSafeAreasModifier);
}

uint64_t sub_100E03A18@<X0>(uint64_t a1@<X8>)
{
  return sub_100E03A50(&qword_10168F000, (uint64_t (*)(void))&type metadata accessor for ColorSchemeContrast, 0xD000000000000013, 0x800000010128CCA0, a1);
}

uint64_t sub_100E03A50@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = type metadata accessor for EnvironmentValues();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC(a1);
  __chkstk_darwin(v16, v17);
  unint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100522E9C(v9, (uint64_t)v19, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(a5, v19, v20);
  }
  else
  {
    os_log_type_t v22 = static os_log_type_t.fault.getter();
    char v23 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v23, v22))
    {
      unint64_t v27 = a4;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v28 = a5;
      char v25 = (uint8_t *)v24;
      uint64_t v31 = swift_slowAlloc();
      *(_DWORD *)char v25 = 136315138;
      uint64_t v30 = sub_100E04348(v29, v27, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v23, v22, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v25, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
}

uint64_t sub_100E03D08(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v9 = static os_log_type_t.fault.getter();
  __n128 v10 = static Log.runtimeIssuesLog.getter();
  os_log_type_t v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v14 = sub_100E04348(1819242306, 0xE400000000000000, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath();
  sub_100E06018(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v15;
}

uint64_t sub_100E03F0C@<X0>(uint64_t a1@<X8>)
{
  return sub_100E03FE0(&qword_10169D6C8, &qword_10169D6D0, 0xD00000000000001BLL, 0x800000010128CC50, a1);
}

uint64_t sub_100E03F38@<X0>(uint64_t a1@<X8>)
{
  return sub_100E03A50(&qword_101684750, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_100E03F74@<X0>(uint64_t a1@<X8>)
{
  return sub_100E03A50(&qword_10169D6D8, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

uint64_t sub_100E03FB4@<X0>(uint64_t a1@<X8>)
{
  return sub_100E03FE0(&qword_10169C9E0, &qword_10169D500, 0xD000000000000020, 0x800000010128CC70, a1);
}

uint64_t sub_100E03FE0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = type metadata accessor for EnvironmentValues();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC(a1);
  __chkstk_darwin(v16, v17);
  unint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100522E9C(v9, (uint64_t)v19, a1);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_10051B3EC((uint64_t)v19, a5, a2);
  }
  os_log_type_t v21 = static os_log_type_t.fault.getter();
  os_log_type_t v22 = static Log.runtimeIssuesLog.getter();
  if (os_log_type_enabled(v22, v21))
  {
    unint64_t v26 = a4;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v27 = a5;
    uint64_t v24 = (uint8_t *)v23;
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136315138;
    uint64_t v29 = sub_100E04348(v28, v26, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v22, v21, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v24, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

uint64_t sub_100E04268()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

uint64_t sub_100E0428C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100E042A4(a1, a2, a3, a4, (uint64_t (*)(char *))&EnvironmentValues.horizontalSizeClass.setter);
}

uint64_t sub_100E042A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t v7 = sub_1005057FC(&qword_10169D500);
  __chkstk_darwin(v7 - 8, v8);
  __n128 v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100522E9C(a1, (uint64_t)v10, &qword_10169D500);
  return a5(v10);
}

uint64_t sub_100E04348(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_100E0441C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_100522D7C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_100522D7C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v12);
  return v7;
}

uint64_t sub_100E0441C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_100E045D8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_100E045D8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_100E04670(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100E04850(0, *(void *)(v2 + 16) + 1, 1, v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100E04850(v3 > 1, v4 + 1, 1, v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

double *sub_100E04670(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_100E047E8(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = _StringGuts.copyUTF8(into:)();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    uint64_t result = (double *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

double *sub_100E047E8(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_1005057FC(&qword_10167E468);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size_2(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return (double *)v4;
}

uint64_t sub_100E04850(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1005057FC(&qword_10167E468);
    uint64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size_2(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = (char *)(v10 + 4);
  uint64_t v13 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_100E049A0(unint64_t a1, uint64_t (*a2)(id))
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v6);
      int64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      char v10 = a2(v7);
      if (v2)
      {
        swift_bridgeObjectRelease();

        return v8;
      }
      if (v10)
      {
        swift_bridgeObjectRelease();
        return v8;
      }

      ++v6;
      if (v9 == v5) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100E04AC4(uint64_t a1)
{
  __n128 v2 = __chkstk_darwin(a1, a1);
  *(void *)(v1 + *(void *)(v4 + 16)) = 0;
  (*(void (**)(char *, __n128))(v5 + 16))((char *)&v7 - v3, v2);
  return UIHostingController.init(rootView:)();
}

uint64_t sub_100E04BB8(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return sub_100E04AC4(a1);
}

char *sub_100E04BEC(BOOL a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v44 = a4;
  uint64_t v42 = a2;
  BOOL v45 = a1;
  uint64_t v38 = *(void *)(a3 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v41 = v10;
  uint64_t v43 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ModifiedContent();
  uint64_t v46 = *(void *)(v11 - 8);
  uint64_t v47 = v11;
  __chkstk_darwin(v11, v12);
  long long v48 = (char *)v37 - v13;
  uint64_t v14 = (double *)&v6[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize];
  double *v14 = 0.0;
  v14[1] = 0.0;
  v6[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_didChangeSize] = 0;
  *(void *)&v6[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator] = 0;
  uint64_t v15 = OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_scrollTargets;
  uint64_t v16 = v6;
  *(void *)&v6[v15] = sub_100A3BE78((uint64_t)_swiftEmptyArrayStorage);
  if (a5 != 0.0 && a6 != 0.0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(defaultSize:showScrollIndicators:content:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Inspectors/CRLiOSAutoSizingHostingController.swift", 108, 2, 110, (uint64_t)"One dimension of defaultSize should be 0 to indicate autosizing.", 64, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(defaultSize:showScrollIndicators:content:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Inspectors/CRLiOSAutoSizingHostingController.swift", 108, 2, 110);
  }
  BOOL v39 = a6 == 0.0;
  BOOL v40 = a5 == 0.0;
  type metadata accessor for CRLiOSAutoSizingHostingController.HostProxy(0);
  swift_allocObject();
  uint64_t v17 = sub_100DFF428();
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(v52) = 1;
  swift_retain();
  static Published.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v52 = *(void *)&a5;
  double v53 = a6;
  swift_retain();
  static Published.subscript.setter();
  *(void *)&v16[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_hostProxy] = v17;
  v37[1] = sub_100E05AF0(&qword_1016951E0, (void (*)(uint64_t))type metadata accessor for CRLiOSAutoSizingHostingController.HostProxy);
  swift_retain_n();
  uint64_t v52 = ObservedObject.init(wrappedValue:)();
  double v53 = v18;
  char v54 = 0;
  uint64_t v19 = (uint64_t)v48;
  uint64_t v20 = v44;
  uint64_t v21 = v42;
  View.modifier<A>(_:)();
  swift_release();
  unint64_t v22 = sub_100E07E3C();
  uint64_t v50 = v20;
  unint64_t v51 = v22;
  swift_getWitnessTable();
  id v23 = objc_allocWithZone((Class)type metadata accessor for CRLiOSAutoSizingHostingController.HostingController());
  *(void *)&v16[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_hostingController] = sub_100E04AC4(v19);
  uint64_t v24 = (double *)&v16[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_defaultSize];
  *uint64_t v24 = a5;
  v24[1] = a6;
  double *v14 = a5;
  v14[1] = a6;
  uint64_t v25 = v38;
  unint64_t v26 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v43, v21, a3);
  unint64_t v27 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = a3;
  *(void *)(v28 + 24) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v28 + v27, v26, a3);
  uint64_t v29 = (double (**)())&v16[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_calculatePreliminaryFittingSize];
  *uint64_t v29 = sub_100E07F18;
  v29[1] = (double (*)())v28;
  id v30 = [objc_allocWithZone((Class)UIScrollView) init];
  [v30 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v30 setAlwaysBounceHorizontal:0];
  [v30 setAlwaysBounceVertical:0];
  BOOL v31 = v39;
  if (v45 == 2)
  {
    BOOL v32 = v40;
  }
  else
  {
    BOOL v31 = v45;
    BOOL v32 = v45;
  }
  [v30 setShowsVerticalScrollIndicator:v31];
  [v30 setShowsHorizontalScrollIndicator:v32];
  *(void *)&v16[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_scrollView] = v30;
  id v33 = v30;

  uint64_t v34 = (objc_class *)type metadata accessor for CRLiOSAutoSizingHostingController();
  v49.receiver = v16;
  v49.super_class = v34;
  uint64_t v35 = (char *)[v49 initWithNibName:0 bundle:0];
  ObservableObject<>.objectWillChange.getter();
  ObservableObjectPublisher.send()();
  swift_release();
  swift_unknownObjectWeakAssign();
  [v35 setPreferredContentSize:*(double *)&v35[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize], *(double *)&v35[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize + 8]];
  swift_release();

  (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v47);
  return v35;
}

uint64_t sub_100E051E0()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100E05220()
{
  sub_100E01F34(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100E0523C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100E05274(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100E05284()
{
  return swift_release();
}

uint64_t type metadata accessor for CRLiOSAutoSizingHostingController()
{
  return self;
}

uint64_t sub_100E052B0@<X0>(unsigned char *a1@<X8>)
{
  return sub_1006FF6A0(a1);
}

uint64_t sub_100E052D8()
{
  return sub_100DFF24C();
}

uint64_t sub_100E05300@<X0>(unsigned char *a1@<X8>)
{
  return sub_1006FF6A0(a1);
}

uint64_t sub_100E05328()
{
  return sub_100DFF24C();
}

unint64_t sub_100E05360()
{
  unint64_t result = qword_10169D2A8;
  if (!qword_10169D2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169D2A8);
  }
  return result;
}

unint64_t sub_100E053B4()
{
  unint64_t result = qword_10169D2B0;
  if (!qword_10169D2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169D2B0);
  }
  return result;
}

unint64_t sub_100E05408()
{
  unint64_t result = qword_10169D2B8;
  if (!qword_10169D2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169D2B8);
  }
  return result;
}

uint64_t sub_100E0545C()
{
  return swift_unknownObjectWeakCopyInit();
}

unint64_t sub_100E0546C()
{
  unint64_t result = qword_10169D2C0;
  if (!qword_10169D2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169D2C0);
  }
  return result;
}

unint64_t sub_100E054C0()
{
  unint64_t result = qword_10169D2C8;
  if (!qword_10169D2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169D2C8);
  }
  return result;
}

uint64_t type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10169D608);
}

uint64_t sub_100E05534()
{
  return EnvironmentValues.subscript.getter();
}

uint64_t type metadata accessor for CRLiOSAutoSizingHostingController.AdditionalSafeAreasModifier(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10169D560);
}

uint64_t sub_100E05598()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

uint64_t sub_100E055BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100E042A4(a1, a2, a3, a4, (uint64_t (*)(char *))&EnvironmentValues.horizontalSizeClass.setter);
}

uint64_t sub_100E055E8()
{
  return EnvironmentValues.verticalSizeClass.getter();
}

uint64_t sub_100E0560C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100E042A4(a1, a2, a3, a4, (uint64_t (*)(char *))&EnvironmentValues.verticalSizeClass.setter);
}

uint64_t sub_100E05638@<X0>(unsigned char *a1@<X8>)
{
  sub_100E053B4();
  uint64_t result = EnvironmentValues.subscript.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_100E05688()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_100E056D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100E05734()
{
  return type metadata accessor for CRLiOSAutoSizingHostingController.HostProxy(0);
}

uint64_t type metadata accessor for CRLiOSAutoSizingHostingController.HostProxy(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10169D328);
}

void sub_100E0575C()
{
  sub_100608DB0(319, (unint64_t *)&qword_10167C230);
  if (v0 <= 0x3F)
  {
    sub_100E07694(319, &qword_10169D338, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
    if (v1 <= 0x3F)
    {
      sub_100608DB0(319, (unint64_t *)&unk_10169D340);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_100E058BC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CRLiOSAutoSizingHostingController.HostingController()
{
  return sub_100568E70();
}

uint64_t sub_100E05924()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CRLiOSAutoSizingHostingController.HostingController.NavigationItem()
{
  return sub_100568E70();
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.PresentationResizeAction()
{
  return &type metadata for CRLiOSAutoSizingHostingController.PresentationResizeAction;
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.PerformAfterAnimationsAction()
{
  return &type metadata for CRLiOSAutoSizingHostingController.PerformAfterAnimationsAction;
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.ScrollToTargetAction()
{
  return &type metadata for CRLiOSAutoSizingHostingController.ScrollToTargetAction;
}

uint64_t sub_100E059B4()
{
  return swift_getWitnessTable();
}

uint64_t sub_100E05A54()
{
  return swift_getWitnessTable();
}

uint64_t sub_100E05AF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_100E05B38(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1005057FC(&qword_10169C9E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_1005057FC(&qword_10169D500);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (uint64_t *)((char *)a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = sub_1005057FC(&qword_10169D500);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = *(int *)(a3 + 24);
    double v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = *(void *)v19;
    char v21 = v19[8];
    sub_100E05E50(*(void *)v19, v21);
    *(void *)double v18 = v20;
    v18[8] = v21;
  }
  return a1;
}

uint64_t sub_100E05E50(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100E05E5C(uint64_t a1, uint64_t a2)
{
  sub_1005057FC(&qword_10169C9E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + *(int *)(a2 + 24);
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);

  return sub_100E06018(v10, v11);
}

uint64_t sub_100E06018(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

void *sub_100E06024(void *a1, void *a2, uint64_t a3)
{
  sub_1005057FC(&qword_10169C9E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = sub_1005057FC(&qword_10169D500);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (void *)((char *)a1 + v9);
  char v11 = (void *)((char *)a2 + v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_1005057FC(&qword_10169D500);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  else
  {
    *uint64_t v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)v17;
  char v19 = v17[8];
  sub_100E05E50(*(void *)v17, v19);
  *(void *)uint64_t v16 = v18;
  v16[8] = v19;
  return a1;
}

void *sub_100E062EC(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100522F00((uint64_t)a1, &qword_10169C9E0);
    sub_1005057FC(&qword_10169C9E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = sub_1005057FC(&qword_10169D500);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (void *)((char *)a1 + v9);
    char v11 = (void *)((char *)a2 + v9);
    sub_100522F00((uint64_t)a1 + v9, &qword_10169C9E0);
    sub_1005057FC(&qword_10169C9E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = sub_1005057FC(&qword_10169D500);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)v17;
  char v19 = v17[8];
  sub_100E05E50(*(void *)v17, v19);
  uint64_t v20 = *(void *)v16;
  char v21 = v16[8];
  *(void *)uint64_t v16 = v18;
  v16[8] = v19;
  sub_100E06018(v20, v21);
  return a1;
}

char *sub_100E065F8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_10169C9E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_1005057FC(&qword_10169D500);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v10 = *(int *)(a3 + 20);
  char v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = sub_1005057FC(&qword_10169D500);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v11, v12, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  return a1;
}

char *sub_100E068C8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100522F00((uint64_t)a1, &qword_10169C9E0);
    uint64_t v6 = sub_1005057FC(&qword_10169C9E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_1005057FC(&qword_10169D500);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v10 = *(int *)(a3 + 20);
    char v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    sub_100522F00((uint64_t)&a1[v10], &qword_10169C9E0);
    uint64_t v13 = sub_1005057FC(&qword_10169C9E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      {
        uint64_t v16 = sub_1005057FC(&qword_10169D500);
        memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v11, v12, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = &a1[v17];
  char v19 = &a2[v17];
  uint64_t v20 = *(void *)v19;
  LOBYTE(v19) = v19[8];
  uint64_t v21 = *(void *)v18;
  char v22 = v18[8];
  *(void *)uint64_t v18 = v20;
  v18[8] = (char)v19;
  sub_100E06018(v21, v22);
  return a1;
}

uint64_t sub_100E06BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100E06BEC);
}

uint64_t sub_100E06BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_10169C9D8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 > 1) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100E06CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100E06CC4);
}

uint64_t sub_100E06CC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1005057FC(&qword_10169C9D8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24) + 8) = -(char)a2;
  }
  return result;
}

void sub_100E06D88()
{
  sub_100E06E20();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100E06E20()
{
  if (!qword_10169D570)
  {
    sub_100522D34(&qword_10169D500);
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10169D570);
    }
  }
}

void *sub_100E06E7C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (void *)((char *)v4 + v8);
    unsigned int v10 = (uint64_t *)((char *)a2 + v8);
    sub_1005057FC(&qword_10169D2D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for CoordinateSpace();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_100E06FD4(uint64_t a1, uint64_t a2)
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_1005057FC(&qword_10169D2D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for CoordinateSpace();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100E07088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  sub_1005057FC(&qword_10169D2D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for CoordinateSpace();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_100E07180(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_10054BB2C(a1, a2);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    sub_100522F00((uint64_t)a1 + v6, &qword_10169D2D0);
    sub_1005057FC(&qword_10169D2D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for CoordinateSpace();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100E07268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_1005057FC(&qword_10169D2D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for CoordinateSpace();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100E07344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_100522F00(a1 + v7, &qword_10169D2D0);
    uint64_t v10 = sub_1005057FC(&qword_10169D2D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for CoordinateSpace();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100E07444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100E07458);
}

uint64_t sub_100E07458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1005057FC(&qword_10169D5A8);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100E0750C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100E07520);
}

uint64_t sub_100E07520(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1005057FC(&qword_10169D5A8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100E075CC()
{
  sub_100E07694(319, (unint64_t *)&unk_10169D618, (uint64_t (*)(uint64_t))&type metadata accessor for CoordinateSpace, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100E07694(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.ScrollToTargetActionKey()
{
  return &type metadata for CRLiOSAutoSizingHostingController.ScrollToTargetActionKey;
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.PerformAfterAnimationsActionKey()
{
  return &type metadata for CRLiOSAutoSizingHostingController.PerformAfterAnimationsActionKey;
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.PresentationResizeActionKey()
{
  return &type metadata for CRLiOSAutoSizingHostingController.PresentationResizeActionKey;
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.PresentedInsidePopoverKey()
{
  return &type metadata for CRLiOSAutoSizingHostingController.PresentedInsidePopoverKey;
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.ScrollCoordinateSpaceKey()
{
  return &type metadata for CRLiOSAutoSizingHostingController.ScrollCoordinateSpaceKey;
}

uint64_t sub_100E07748()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100E07764()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100E07780()
{
  uint64_t v1 = (int *)(type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + v3);
  uint64_t v5 = v0 + v3 + v1[7];
  sub_1005057FC(&qword_10169D2D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for CoordinateSpace();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100E07898(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100E07900@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100E0259C(a1, v6, a2);
}

uint64_t sub_100E07980()
{
  uint64_t v1 = (int *)(type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = type metadata accessor for GeometryProxy();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + v3);
  uint64_t v9 = v0 + v3 + v1[7];
  sub_1005057FC(&qword_10169D2D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for CoordinateSpace();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = (v3 + v4 + v7) & ~v7;
  uint64_t v12 = v11 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v11, v5);

  return _swift_deallocObject(v0, v12, v2 | v7 | 7);
}

double sub_100E07B2C(double **a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetModifier(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  type metadata accessor for GeometryProxy();

  *(void *)&double result = sub_100E027AC(a1, v1 + v4).n128_u64[0];
  return result;
}

uint64_t sub_100E07C00(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_100E07C68()
{
  unint64_t result = qword_10169D680;
  if (!qword_10169D680)
  {
    sub_100522D34(&qword_10169D678);
    sub_100523288(&qword_10169D688, &qword_10169D668);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169D680);
  }
  return result;
}

uint64_t sub_100E07D08()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100E07D48()
{
  sub_100E0139C(*(void **)(v0 + 16), *(objc_class **)(v0 + 24));
}

uint64_t sub_100E07D50()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100E07D60()
{
  return _swift_deallocObject(v0, 24, 7);
}

BOOL sub_100E07D98(void *a1)
{
  return sub_100E0145C(a1);
}

uint64_t sub_100E07DA0(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  long long v5 = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 56) = v5;
  return a2;
}

uint64_t sub_100E07E14(uint64_t a1)
{
  return a1;
}

unint64_t sub_100E07E3C()
{
  unint64_t result = qword_10169D6A8;
  if (!qword_10169D6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169D6A8);
  }
  return result;
}

uint64_t sub_100E07E90()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  return _swift_deallocObject(v0, v4, v5);
}

double sub_100E07F18()
{
  return sub_100DFDD30(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)), *(void *)(v0 + 16));
}

uint64_t destroy for CRLiOSAutoSizingHostingController.AutoSizingModifier()
{
  return swift_release();
}

uint64_t _s8Freeform33CRLiOSAutoSizingHostingControllerC18AutoSizingModifierVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CRLiOSAutoSizingHostingController.AutoSizingModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for CRLiOSAutoSizingHostingController.AutoSizingModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.AutoSizingModifier()
{
  return &type metadata for CRLiOSAutoSizingHostingController.AutoSizingModifier;
}

uint64_t destroy for CRLiOSAutoSizingHostingController.ScrollTargetKey.Target(uint64_t a1)
{
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
}

uint64_t initializeWithCopy for CRLiOSAutoSizingHostingController.ScrollTargetKey.Target(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  return a1;
}

uint64_t *assignWithCopy for CRLiOSAutoSizingHostingController.ScrollTargetKey.Target(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  return a1;
}

uint64_t assignWithTake for CRLiOSAutoSizingHostingController.ScrollTargetKey.Target(uint64_t a1, uint64_t a2)
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLiOSAutoSizingHostingController.ScrollTargetKey.Target(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLiOSAutoSizingHostingController.ScrollTargetKey.Target(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetKey.Target()
{
  return &type metadata for CRLiOSAutoSizingHostingController.ScrollTargetKey.Target;
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.ScrollTargetKey()
{
  return &type metadata for CRLiOSAutoSizingHostingController.ScrollTargetKey;
}

uint64_t sub_100E08218()
{
  return sub_100523288(&qword_10169D6B0, &qword_10169D660);
}

unint64_t sub_100E08258()
{
  unint64_t result = qword_10169D6B8;
  if (!qword_10169D6B8)
  {
    sub_100522D34(&qword_10169D6C0);
    sub_100E07C68();
    sub_100523288(&qword_10169D688, &qword_10169D668);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169D6B8);
  }
  return result;
}

uint64_t sub_100E082F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100E08314()
{
  uint64_t v1 = sub_1005057FC(&qword_10169D6E0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 17;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100E083C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_1005057FC(&qword_10169D6E0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 + v7);
  uint64_t v9 = *(void *)(v2 + v7 + 8);
  int v10 = *(unsigned __int8 *)(v2 + v7 + 16);

  return sub_100DFFA18(a1, v2 + v6, v8, v9, v10, a2);
}

uint64_t sub_100E08478()
{
  swift_release();

  return _swift_deallocObject(v0, 33, 7);
}

void sub_100E084B0(uint64_t *a1)
{
}

void sub_100E084BC(uint64_t *a1)
{
}

uint64_t sub_100E084C8()
{
  return EnvironmentValues.subscript.getter();
}

uint64_t sub_100E08508(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100E00BD0(a1, a2, a3, a4, (uint64_t (*)(unsigned char *, uint64_t *))sub_100E0545C, (void (*)(uint64_t))sub_100E05408, (uint64_t)&type metadata for CRLiOSAutoSizingHostingController.PresentationResizeActionKey, (uint64_t (*)(unsigned char *))sub_100523398);
}

uint64_t sub_100E08564()
{
  return EnvironmentValues.subscript.getter();
}

uint64_t sub_100E085A4(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100E00BD0(a1, a2, a3, a4, (uint64_t (*)(unsigned char *, uint64_t *))sub_100E0545C, (void (*)(uint64_t))sub_100E0546C, (uint64_t)&type metadata for CRLiOSAutoSizingHostingController.PerformAfterAnimationsActionKey, (uint64_t (*)(unsigned char *))sub_100523398);
}

uint64_t sub_100E08600()
{
  return EnvironmentValues.subscript.getter();
}

uint64_t sub_100E08640(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100E00BD0(a1, a2, a3, a4, (uint64_t (*)(unsigned char *, uint64_t *))sub_100E0545C, (void (*)(uint64_t))sub_100E054C0, (uint64_t)&type metadata for CRLiOSAutoSizingHostingController.ScrollToTargetActionKey, (uint64_t (*)(unsigned char *))sub_100523398);
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.LayoutSizeKey()
{
  return &type metadata for CRLiOSAutoSizingHostingController.LayoutSizeKey;
}

ValueMetadata *type metadata accessor for CRLiOSAutoSizingHostingController.AutoSizingModifier.SizeReader()
{
  return &type metadata for CRLiOSAutoSizingHostingController.AutoSizingModifier.SizeReader;
}

unint64_t sub_100E086C0()
{
  unint64_t result = qword_10169D760;
  if (!qword_10169D760)
  {
    sub_100522D34(&qword_10169D768);
    sub_100523288(&qword_10169D6F0, &qword_10169D6E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169D760);
  }
  return result;
}

uint64_t sub_100E08760()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100E0877C()
{
  return sub_100523288(&qword_10169D770, qword_10169D778);
}

uint64_t CRLWeakWrapper.init(_:)()
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

uint64_t CRLWeakWrapper.value.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t CRLWeakWrapper.value.setter()
{
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

uint64_t (*CRLWeakWrapper.value.modify(uint64_t *a1))()
{
  a1[1] = v1;
  *a1 = swift_unknownObjectWeakLoadStrong();
  return sub_100E088B8;
}

uint64_t sub_100E088B8()
{
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

BOOL static CRLWeakWrapper.== infix(_:_:)()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v1 = swift_unknownObjectWeakLoadStrong();
  uint64_t v2 = v1;
  if (Strong)
  {
    swift_unknownObjectRelease();
    if (v2)
    {
      swift_unknownObjectRelease();
      return Strong == v2;
    }
    return 0;
  }
  if (v1)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return 1;
}

uint64_t type metadata accessor for CRLWeakWrapper()
{
  return sub_100568E70();
}

void sub_100E08984(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLBoardItem(0);
    sub_10060A334();
    Set.Iterator.init(_cocoa:)();
    uint64_t v3 = v19;
    uint64_t v18 = v20;
    uint64_t v4 = v21;
    uint64_t v5 = v22;
    unint64_t v6 = v23;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v18 = a1 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
  }
  int64_t v10 = (unint64_t)(v4 + 64) >> 6;
  if (v3 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v6)
    {
      uint64_t v11 = (v6 - 1) & v6;
      unint64_t v12 = __clz(__rbit64(v6)) | (v5 << 6);
      uint64_t v13 = v5;
      goto LABEL_29;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v15 >= v10) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v18 + 8 * v15);
    uint64_t v13 = v5 + 1;
    if (!v16)
    {
      uint64_t v13 = v5 + 2;
      if (v5 + 2 >= v10) {
        goto LABEL_32;
      }
      unint64_t v16 = *(void *)(v18 + 8 * v13);
      if (!v16)
      {
        uint64_t v13 = v5 + 3;
        if (v5 + 3 >= v10) {
          goto LABEL_32;
        }
        unint64_t v16 = *(void *)(v18 + 8 * v13);
        if (!v16)
        {
          uint64_t v13 = v5 + 4;
          if (v5 + 4 >= v10) {
            goto LABEL_32;
          }
          unint64_t v16 = *(void *)(v18 + 8 * v13);
          if (!v16)
          {
            uint64_t v13 = v5 + 5;
            if (v5 + 5 >= v10) {
              goto LABEL_32;
            }
            unint64_t v16 = *(void *)(v18 + 8 * v13);
            if (!v16)
            {
              uint64_t v17 = v5 + 6;
              while (v10 != v17)
              {
                unint64_t v16 = *(void *)(v18 + 8 * v17++);
                if (v16)
                {
                  uint64_t v13 = v17 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_10052E1EC();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v11 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
LABEL_29:
    uint64_t v14 = *(id *)(*(void *)(v3 + 48) + 8 * v12);
    if (!v14) {
      goto LABEL_32;
    }
    while (1)
    {
      sub_100DD25BC(a2, v14);

      uint64_t v5 = v13;
      unint64_t v6 = v11;
      if ((v3 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for CRLBoardItem(0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        uint64_t v14 = v24;
        swift_unknownObjectRelease();
        uint64_t v13 = v5;
        uint64_t v11 = v6;
        if (v24) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t type metadata accessor for CRLAnalyticsMiniFormatterOpened()
{
  return self;
}

void sub_100E08C3C(uint64_t a1)
{
  if (a1)
  {
    unint64_t v2 = sub_100A39814((uint64_t)_swiftEmptyArrayStorage);
    if ((a1 & 0xC000000000000001) != 0) {
      uint64_t v3 = __CocoaSet.count.getter();
    }
    else {
      uint64_t v3 = *(void *)(a1 + 16);
    }
    id v4 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v3];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_100973904((uint64_t)v4, 0x756F43736D657469, 0xEA0000000000746ELL, isUniquelyReferenced_nonNull_native);
    unint64_t v9 = v2;
    swift_bridgeObjectRelease();
    sub_100E08984(a1, (uint64_t *)&v9);
    unint64_t v6 = self;
    NSString v7 = String._bridgeToObjectiveC()();
    sub_10057BCD8();
    swift_bridgeObjectRetain();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v6 sendEventInDomain:v7 lazily:1 eventPayload:isa];
    swift_bridgeObjectRelease();
  }
}

id sub_100E08DB4(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  unint64_t v6 = (char *)objc_allocWithZone(v3);
  uint64_t v7 = OBJC_IVAR____TtC8Freeform25CRLCommandSetInfoGeometry_infoGeometry;
  *(void *)&v6[OBJC_IVAR____TtC8Freeform25CRLCommandSetInfoGeometry_infoGeometry] = 0;
  uint64_t v8 = &v6[OBJC_IVAR____TtC8Freeform25CRLCommandSetInfoGeometry_id];
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  uint64_t v11 = v6;
  [a2 copy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100A5E8D8();
  swift_dynamicCast();
  unint64_t v12 = *(void **)&v6[v7];
  *(void *)&v6[v7] = v16;

  v15.receiver = v11;
  v15.super_class = v3;
  id v13 = [super init];

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
  return v13;
}

void sub_100E09128(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5 = v3;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v9 = [a1 getBoardItemForUUID:isa];

  if (!v9)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetInfoGeometry.swift", 97, 2, 29, (uint64_t)"Unable to retrieve board item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve board item");
    uint64_t v18 = 29;
LABEL_8:
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetInfoGeometry.swift", 97, 2, v18);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v19, v20);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  uint64_t v10 = OBJC_IVAR____TtC8Freeform25CRLCommandSetInfoGeometry_infoGeometry;
  uint64_t v11 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform25CRLCommandSetInfoGeometry_infoGeometry);
  if (!v11)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetInfoGeometry.swift", 97, 2, 32, (uint64_t)"Should have info geometry in commit.", 36, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Should have info geometry in commit.");
    uint64_t v18 = 32;
    goto LABEL_8;
  }
  id v12 = v11;
  id v13 = v9;
  sub_10103405C((uint64_t)v13, (uint64_t)&off_101518040);
  if (v4)
  {
  }
  else
  {

    unsigned __int8 v21 = a3;
    uint64_t v14 = *(void (**)(void))((swift_isaMask & *v13) + 0xE8);
    id v15 = v12;
    v14();
    uint64_t v16 = *(void **)(v5 + v10);
    *(void *)(v5 + v10) = 0;

    uint64_t v17 = v13;
    sub_101023724((uint64_t)v17, (uint64_t)&off_101518040, v21);
  }
}

uint64_t sub_100E093FC()
{
  uint64_t v1 = type metadata accessor for CRLCommandBoardItemChangeContext(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1005057FC(&qword_10169D8E8);
  uint64_t inited = (_OWORD *)swift_initStackObject();
  inited[1] = xmmword_10117E810;
  uint64_t v23 = v1;
  uint64_t v24 = sub_100E098F8(&qword_10169D8F0);
  unint64_t v6 = sub_1005767BC(v22);
  uint64_t v7 = *(int *)(sub_1005057FC(&qword_10169D8F8) + 48);
  uint64_t v8 = v0 + OBJC_IVAR____TtC8Freeform25CRLCommandSetInfoGeometry_id;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 16))(v6, v8, v9);
  *((unsigned char *)v6 + v7) = 0;
  uint64_t v11 = sub_10050F848(v22, v23);
  __n128 v12 = __chkstk_darwin(v11, v11);
  (*(void (**)(unsigned char *, __n128))(v14 + 16))(&v19[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], v12);
  sub_100E098F8(&qword_10169D900);
  AnyHashable.init<A>(_:)();
  id v15 = sub_10050F848(v22, v23);
  sub_100E0993C((uint64_t)v15, (uint64_t)v4);
  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v4, v9);
  *((void *)&v21 + 1) = 4;
  long long v16 = v20;
  inited[2] = *(_OWORD *)&v19[8];
  inited[3] = v16;
  inited[4] = v21;
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v22);
  uint64_t v17 = sub_100CDD1B8((uint64_t)inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  return v17;
}

void sub_100E096D8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform25CRLCommandSetInfoGeometry_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLCommandSetInfoGeometry_infoGeometry);
}

id sub_100E09754()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetInfoGeometry();
  return [super dealloc];
}

uint64_t sub_100E0980C()
{
  return type metadata accessor for CRLCommandSetInfoGeometry();
}

uint64_t type metadata accessor for CRLCommandSetInfoGeometry()
{
  uint64_t result = qword_10169D8D8;
  if (!qword_10169D8D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100E09860()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100E098F8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CRLCommandBoardItemChangeContext(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100E0993C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLCommandBoardItemChangeContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_100E099A0(uint64_t a1, void *a2)
{
  uint64_t v5 = OBJC_IVAR____TtC8Freeform25CRLCommandSetInfoGeometry_infoGeometry;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform25CRLCommandSetInfoGeometry_infoGeometry] = 0;
  unint64_t v6 = &v2[OBJC_IVAR____TtC8Freeform25CRLCommandSetInfoGeometry_id];
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  uint64_t v9 = v2;
  [a2 copy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100A5E8D8();
  swift_dynamicCast();
  uint64_t v10 = *(void **)&v2[v5];
  *(void *)&v2[v5] = v14;

  v13.receiver = v9;
  v13.super_class = (Class)type metadata accessor for CRLCommandSetInfoGeometry();
  id v11 = [super init];
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v11;
}

uint64_t sub_100E09AF8()
{
  unint64_t v1 = *v0;
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 dataForPasteboardType:v2];

  if (!v3) {
    return 0;
  }
  uint64_t v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

void sub_100E09B78()
{
  unint64_t v1 = *v0;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v3 = String._bridgeToObjectiveC()();
  [v1 addData:isa forPasteboardType:v3];
}

uint64_t type metadata accessor for CRLPasteboardUtils()
{
  return self;
}

void sub_100E09C1C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v16 - v8;
  id v10 = [self defaultManager];
  sub_100B9E9B8();
  if (v0)
  {
  }
  else
  {
    if (qword_10166EE78 != -1) {
      swift_once();
    }
    if (byte_10171A498 == 1)
    {
      if (qword_10166FB70 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v11 = (id)static OS_os_log.boardStore;
      uint64_t v12 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Using sandbox path Development/Boards", 37, 2, (uint64_t)_swiftEmptyArrayStorage);

      URL.appendingPathComponent(_:isDirectory:)();
      URL.appendingPathComponent(_:isDirectory:)();

      objc_super v13 = *(void (**)(char *, uint64_t))(v2 + 8);
      v13(v5, v1);
      v13(v9, v1);
    }
    else
    {
      if (qword_10166FB70 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v14 = (id)static OS_os_log.boardStore;
      uint64_t v15 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v15, (uint64_t)"Using production path Boards", 28, 2, (uint64_t)_swiftEmptyArrayStorage);

      URL.appendingPathComponent(_:isDirectory:)();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v9, v1);
    }
  }
}

char *sub_100E09F4C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v29 - v8;
  sub_100E09C1C();
  if (!v0)
  {
    id v10 = [self defaultManager];
    URL._bridgeToObjectiveC()(v11);
    objc_super v13 = v12;
    id v31 = 0;
    unsigned int v14 = [v10 createDirectoryAtURL:v12 withIntermediateDirectories:1 attributes:0 error:&v31];

    if (v14)
    {
      id v15 = v31;
      uint64_t v16 = sub_100946F50();
      (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v9, v1);
      swift_retain();
      uint64_t v5 = (char *)sub_100CE3C98((uint64_t)v5, (uint64_t)v16);
      swift_release();
      sub_100C3836C((uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
      uint64_t v17 = *(void *)&v5[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 16));
      uint64_t v18 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
      CKRecordID v19 = *(void **)&v5[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
      if (v19)
      {
        id v20 = *(id *)&v5[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
      }
      else
      {
        id v22 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
        uint64_t v23 = v5;
        uint64_t v30 = v17;
        uint64_t v24 = v23;
        id v25 = sub_100EAFDE4((uint64_t)v23);

        unint64_t v26 = *(void **)&v5[v18];
        *(void *)&v5[v18] = v25;
        id v20 = v25;

        uint64_t v17 = v30;
        CKRecordID v19 = 0;
      }
      unint64_t v27 = *(os_unfair_lock_s **)(v17 + 16);
      id v28 = v19;
      os_unfair_lock_unlock(v27);
      sub_100EAE120();
      swift_release();

      (*(void (**)(char *, uint64_t))(v2 + 8))(v9, v1);
    }
    else
    {
      uint64_t v5 = (char *)v31;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v9, v1);
    }
  }
  return v5;
}

uint64_t type metadata accessor for CRLBoardDataStoreProvider()
{
  return self;
}

id sub_100E0A25C()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v5, v6);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v7 - 8, v8);
  sub_100656064();
  static DispatchQoS.unspecified.getter();
  v13[3] = _swiftEmptyArrayStorage;
  sub_100A5AAD0();
  sub_1005057FC(&qword_101693440);
  sub_100A5AB28();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  uint64_t v9 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v10 = v13[1];
  id v11 = sub_100CE3FE0((uint64_t)v9);

  if (!v10) {
    sub_100C3836C((uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
  }
  return v11;
}

id sub_100E0A534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  uint64_t v8 = &v7[OBJC_IVAR____TtC8Freeform37CRLCommandSetAccessibilityDescription_id];
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  id v11 = &v7[OBJC_IVAR____TtC8Freeform37CRLCommandSetAccessibilityDescription_accessibilityDescription];
  *(void *)id v11 = a2;
  *((void *)v11 + 1) = a3;
  v14.receiver = v7;
  v14.super_class = v3;
  [super init];
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
  return v12;
}

void sub_100E0A8F8(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5 = v3;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v9 = [a1 getBoardItemForUUID:isa];

  if (v9)
  {
    uint64_t v10 = v9;
    sub_10103405C((uint64_t)v10, (uint64_t)&off_101518040);

    if (v4)
    {
    }
    else
    {
      uint64_t v12 = *(void *)(v5 + OBJC_IVAR____TtC8Freeform37CRLCommandSetAccessibilityDescription_accessibilityDescription);
      uint64_t v11 = *(void *)(v5
                      + OBJC_IVAR____TtC8Freeform37CRLCommandSetAccessibilityDescription_accessibilityDescription
                      + 8);
      objc_super v13 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v10) + 0x138);
      swift_bridgeObjectRetain();
      v13(v12, v11);
      objc_super v14 = v10;
      sub_101023724((uint64_t)v14, (uint64_t)&off_101518040, a3);
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetAccessibilityDescription.swift", 109, 2, 27, (uint64_t)"Unable to retrieve board item.", 30, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve board item.");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetAccessibilityDescription.swift", 109, 2, 27);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v15, v16);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
}

uint64_t sub_100E0AB48()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform37CRLCommandSetAccessibilityDescription_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_bridgeObjectRelease();
}

id sub_100E0ABC8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetAccessibilityDescription();
  [super dealloc];
}

uint64_t sub_100E0AC84()
{
  return type metadata accessor for CRLCommandSetAccessibilityDescription();
}

uint64_t type metadata accessor for CRLCommandSetAccessibilityDescription()
{
  uint64_t result = qword_10169DA70;
  if (!qword_10169DA70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100E0ACD8()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_100E0AD70(uint64_t a1)
{
  double v2 = CACurrentMediaTime();

  return sub_100548EA0(a1, v2);
}

uint64_t sub_100E0ADA8(uint64_t a1)
{
  double v2 = CACurrentMediaTime();

  return sub_1005CCEE4(a1, v2);
}

id sub_100E0ADE0(uint64_t a1)
{
  double v2 = CACurrentMediaTime();

  return sub_1005FF7B4(a1, v2);
}

id sub_100E0AE18(uint64_t a1)
{
  double v2 = CACurrentMediaTime();

  return sub_1006001D8(a1, v2);
}

id sub_100E0AE50(uint64_t a1)
{
  double v2 = CACurrentMediaTime();

  return sub_100F7E504(a1, v2);
}

id sub_100E0AE88(uint64_t a1)
{
  double v2 = CACurrentMediaTime();

  return sub_100F7F094(a1, v2);
}

unsigned char *storeEnumTagSinglePayload for CRLIntentSelectionBoardItemType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100E0AF8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLIntentSelectionBoardItemType()
{
  return &type metadata for CRLIntentSelectionBoardItemType;
}

unint64_t sub_100E0AFC8()
{
  unint64_t result = qword_10169DA80;
  if (!qword_10169DA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169DA80);
  }
  return result;
}

id sub_100E0B01C(uint64_t a1)
{
  int v3 = &v1[OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_filename];
  *(void *)int v3 = 0;
  *((void *)v3 + 1) = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_linkPresentationMetadataTask] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase__linkPresentationMetadata] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase____lazy_storage___linkPresentationMetadataProvider] = 0;
  unsigned int v4 = &v1[OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase__title];
  *(void *)unsigned int v4 = 0;
  *((void *)v4 + 1) = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_iconProviderTask] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase__icon] = 0;
  uint64_t v5 = &v1[OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_url];
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for CRLURLMetadataProviderBase(0);
  id v8 = [super init];
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v8;
}

uint64_t sub_100E0B158()
{
  v1[4] = v0;
  sub_1005057FC(&qword_101672BB0);
  v1[5] = swift_task_alloc();
  v1[6] = type metadata accessor for MainActor();
  v1[7] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[8] = v3;
  v1[9] = v2;
  return _swift_task_switch(sub_100E0B224, v3, v2);
}

uint64_t sub_100E0B224()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase__linkPresentationMetadata;
  v0[10] = OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase__linkPresentationMetadata;
  if (*(void *)(v1 + v2))
  {
    uint64_t v3 = swift_release();
    id v8 = *(void **)(v1 + v2);
    if (v8)
    {
LABEL_3:
      id v9 = v8;
      swift_task_dealloc();
      objc_super v10 = (uint64_t (*)(id))v0[1];
      return v10(v9);
    }
    __break(1u);
    return Task.value.getter(v3, v4, v5, v6, v7);
  }
  uint64_t v12 = OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_linkPresentationMetadataTask;
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_linkPresentationMetadataTask);
  v0[11] = v13;
  if (v13)
  {
    objc_super v14 = v0 + 2;
    swift_retain();
    CKRecordID v15 = (void *)swift_task_alloc();
    v0[15] = v15;
    uint64_t v16 = sub_1005057FC(&qword_10167BA68);
    uint64_t v6 = sub_1005057FC(&qword_101672BD0);
    *CKRecordID v15 = v0;
    uint64_t v17 = sub_100E0BA44;
    goto LABEL_8;
  }
  uint64_t v18 = URL.scheme.getter();
  if (v19)
  {
    if (v18 == 0x6567617373656DLL && v19 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0) {
        goto LABEL_17;
      }
    }
    swift_release();
    id v28 = sub_100E0C21C();
    uint64_t v29 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v28;
    goto LABEL_21;
  }
LABEL_17:
  uint64_t v22 = v0[5];
  uint64_t v23 = (void *)v0[4];
  uint64_t v24 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v22, 1, 1, v24);
  id v25 = v23;
  uint64_t v26 = static MainActor.shared.getter();
  unint64_t v27 = (void *)swift_allocObject();
  void v27[2] = v26;
  v27[3] = &protocol witness table for MainActor;
  v27[4] = v25;
  *(void *)(v1 + v12) = sub_1006D92CC(v22, (uint64_t)&unk_10169DC18, (uint64_t)v27);
  swift_release();
  uint64_t v13 = *(void *)(v1 + v12);
  v0[12] = v13;
  if (v13)
  {
    objc_super v14 = v0 + 3;
    swift_retain();
    CKRecordID v15 = (void *)swift_task_alloc();
    v0[13] = v15;
    uint64_t v16 = sub_1005057FC(&qword_10167BA68);
    uint64_t v6 = sub_1005057FC(&qword_101672BD0);
    *CKRecordID v15 = v0;
    uint64_t v17 = sub_100E0B6EC;
LABEL_8:
    v15[1] = v17;
    uint64_t v7 = &protocol self-conformance witness table for Error;
    uint64_t v3 = (uint64_t)v14;
    uint64_t v4 = v13;
    uint64_t v5 = v16;
    return Task.value.getter(v3, v4, v5, v6, v7);
  }
  swift_release();
  uint64_t v30 = v0[10];
  uint64_t v31 = v0[4];
  BOOL v32 = *(void **)(v31 + v30);
  *(void *)(v31 + v30) = 0;

  id v33 = *(void **)(v31 + v30);
  if (v33)
  {
    id v34 = [v33 specialization];
    if (!v34)
    {
LABEL_22:
      id v8 = *(void **)(v0[4] + v0[10]);
      if (v8) {
        goto LABEL_3;
      }
      goto LABEL_33;
    }
    uint64_t v29 = v34;
    self;
    uint64_t v35 = swift_dynamicCastObjCClass();
    if (v35)
    {
      uint64_t v36 = v0[4];
      unint64_t v37 = *(void *)(v36 + OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_filename + 8);
      if (v37)
      {
        uint64_t v38 = HIBYTE(v37) & 0xF;
        if ((v37 & 0x2000000000000000) == 0) {
          uint64_t v38 = *(void *)(v36 + OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_filename) & 0xFFFFFFFFFFFFLL;
        }
        if (v38)
        {
          BOOL v39 = (void *)v35;
          uint64_t v40 = v0[10];
          swift_bridgeObjectRetain();
          NSString v41 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v39 setName:v41];

          uint64_t v42 = *(void **)(v36 + v40);
          if (v42)
          {
            id v43 = v42;
            [v43 setSpecialization:v39];
          }
        }
      }
    }
LABEL_21:

    goto LABEL_22;
  }
LABEL_33:
  sub_100817950();
  swift_allocError();
  *uint64_t v44 = 0;
  swift_willThrow();
  swift_task_dealloc();
  BOOL v45 = (uint64_t (*)(void))v0[1];
  return v45();
}

uint64_t sub_100E0B6EC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 64);
  if (v0) {
    uint64_t v5 = sub_100E0BCEC;
  }
  else {
    uint64_t v5 = sub_100E0B840;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100E0B840()
{
  swift_release();
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[4];
  uint64_t v3 = *(void **)(v2 + v1);
  *(void *)(v2 + v1) = v0[3];

  uint64_t v4 = *(void **)(v2 + v1);
  if (!v4) {
    goto LABEL_15;
  }
  id v5 = [v4 specialization];
  if (v5)
  {
    uint64_t v6 = v5;
    self;
    uint64_t v7 = swift_dynamicCastObjCClass();
    if (v7)
    {
      uint64_t v8 = v0[4];
      unint64_t v9 = *(void *)(v8 + OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_filename + 8);
      if (v9)
      {
        uint64_t v10 = HIBYTE(v9) & 0xF;
        if ((v9 & 0x2000000000000000) == 0) {
          uint64_t v10 = *(void *)(v8 + OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_filename) & 0xFFFFFFFFFFFFLL;
        }
        if (v10)
        {
          uint64_t v11 = (void *)v7;
          uint64_t v12 = v0[10];
          swift_bridgeObjectRetain();
          NSString v13 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v11 setName:v13];

          objc_super v14 = *(void **)(v8 + v12);
          if (v14)
          {
            id v15 = v14;
            [v15 setSpecialization:v11];

            uint64_t v6 = v15;
          }
        }
      }
    }
  }
  uint64_t v16 = *(void **)(v0[4] + v0[10]);
  if (v16)
  {
    id v17 = v16;
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(id))v0[1];
    return v18(v17);
  }
  else
  {
LABEL_15:
    sub_100817950();
    swift_allocError();
    *id v20 = 0;
    swift_willThrow();
    swift_task_dealloc();
    char v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
}

uint64_t sub_100E0BA44()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 64);
  if (v0) {
    id v5 = sub_100E0BC80;
  }
  else {
    id v5 = sub_100E0BB98;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100E0BB98()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v2(v1);
  }
  else
  {
    sub_100817950();
    swift_allocError();
    *uint64_t v4 = 0;
    swift_willThrow();
    swift_task_dealloc();
    id v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_100E0BC80()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100E0BCEC()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100E0BD58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[16] = a1;
  v4[17] = a4;
  type metadata accessor for MainActor();
  v4[18] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[19] = v6;
  v4[20] = v5;
  return _swift_task_switch(sub_100E0BDF0, v6, v5);
}

uint64_t sub_100E0BDF0()
{
  id v1 = sub_100E0C1A8();
  v0[21] = v1;
  URL._bridgeToObjectiveC()((NSURL *)OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_url);
  uint64_t v3 = v2;
  v0[22] = v2;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_100E0BF20;
  uint64_t v4 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10074AC54;
  v0[13] = &unk_10152EA80;
  v0[14] = v4;
  [v1 startFetchingMetadataForURL:v3 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100E0BF20()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 184) = v2;
  uint64_t v3 = *(void *)(v1 + 160);
  uint64_t v4 = *(void *)(v1 + 152);
  if (v2) {
    uint64_t v5 = sub_100E0C0D4;
  }
  else {
    uint64_t v5 = sub_100E0C050;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100E0C050()
{
  uint64_t v1 = (void *)v0[21];
  uint64_t v2 = (void *)v0[22];
  uint64_t v3 = (void *)v0[16];
  swift_release();
  uint64_t v4 = v0[15];

  *uint64_t v3 = v4;
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100E0C0D4()
{
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = (void *)v0[21];
  swift_release();
  swift_willThrow();

  swift_errorRetain();
  LOBYTE(v1) = sub_100E0D7B8();
  sub_100817950();
  swift_allocError();
  *uint64_t v3 = (_BYTE)v1;
  swift_willThrow();
  swift_errorRelease();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

id sub_100E0C1A8()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase____lazy_storage___linkPresentationMetadataProvider;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase____lazy_storage___linkPresentationMetadataProvider);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase____lazy_storage___linkPresentationMetadataProvider);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)LPMetadataProvider) init];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100E0C21C()
{
  uint64_t v1 = type metadata accessor for UTType();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [objc_allocWithZone((Class)LPLinkMetadata) init];
  URL._bridgeToObjectiveC()((NSURL *)OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_url);
  uint64_t v8 = v7;
  [v6 setURL:v7];

  id v9 = [objc_allocWithZone((Class)LPFileMetadata) init];
  if (!*(void *)(v0 + OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_filename + 8)) {
    URL.relativeString.getter();
  }
  swift_bridgeObjectRetain();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 setName:v10];

  static UTType.emailMessage.getter();
  UTType.identifier.getter();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 setType:v11];

  [v6 setSpecialization:v9];
  return v6;
}

uint64_t sub_100E0C410(double a1, double a2, double a3)
{
  *(double *)(v3 + 24) = a2;
  *(double *)(v3 + 32) = a3;
  *(double *)(v3 + 16) = a1;
  *(void *)(v3 + 40) = type metadata accessor for MainActor();
  *(void *)(v3 + 48) = static MainActor.shared.getter();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 56) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_100E0C4C4;
  return sub_100E0B158();
}

uint64_t sub_100E0C4C4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
    uint64_t v8 = sub_100E0C740;
  }
  else
  {
    *(void *)(v4 + 72) = a1;
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v9;
    uint64_t v8 = sub_100E0C658;
  }
  return _swift_task_switch(v8, v5, v7);
}

uint64_t sub_100E0C658()
{
  uint64_t v1 = *(void **)(v0 + 72);
  double v3 = *(double *)(v0 + 24);
  double v2 = *(double *)(v0 + 32);
  double v4 = *(double *)(v0 + 16);
  swift_release();
  id v5 = [objc_allocWithZone((Class)LPLinkView) initWithMetadata:v1];
  [v5 sizeThatFits:v4, v4 * 3.0];
  double v8 = sub_100E0D714(v6, v7, v3, v2, v4);
  uint64_t v10 = v9;

  BOOL v11 = *(void *)(v0 + 64) != 0;
  uint64_t v12 = *(uint64_t (**)(void, uint64_t, BOOL))(v0 + 8);
  return v12(*(void *)&v8, v10, v11);
}

uint64_t sub_100E0C740()
{
  swift_release();
  BOOL v1 = *(void *)(v0 + 64) != 0;
  double v2 = *(uint64_t (**)(void, void, BOOL))(v0 + 8);
  return v2(0, 0, v1);
}

id sub_100E0C7E4()
{
  return sub_100E0CCF8(type metadata accessor for CRLURLMetadataProviderBase);
}

uint64_t sub_100E0C8E4()
{
  return type metadata accessor for CRLURLMetadataProviderBase(0);
}

uint64_t type metadata accessor for CRLURLMetadataProviderBase(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10169DAF0);
}

uint64_t sub_100E0C90C()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

char *sub_100E0C9B8(char *a1)
{
  double v2 = v1;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  double v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v24 - v11;
  uint64_t v13 = (uint64_t)&v2[OBJC_IVAR____TtC8Freeform28CRLRemoteURLMetadataProvider_navigationDidFinishContinuation];
  uint64_t v14 = sub_1005057FC(&qword_10169DB68);
  id v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v26 = v13;
  v15(v13, 1, 1, v14);
  uint64_t v24 = OBJC_IVAR____TtC8Freeform28CRLRemoteURLMetadataProvider_imageProviderTask;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform28CRLRemoteURLMetadataProvider_imageProviderTask] = 0;
  uint64_t v25 = OBJC_IVAR____TtC8Freeform28CRLRemoteURLMetadataProvider__image;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform28CRLRemoteURLMetadataProvider__image] = 0;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  id v28 = a1;
  v16(v12, (uint64_t)a1, v4);
  char v17 = URL.isFileURL.getter();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v12, v4);
  if (v17)
  {
    sub_100817950();
    swift_allocError();
    *uint64_t v19 = 5;
    swift_willThrow();
    v18(v28, v4);
    sub_100522F00(v26, &qword_10169DC08);
    swift_release();

    type metadata accessor for CRLRemoteURLMetadataProvider(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    id v20 = v28;
    v16(v8, (uint64_t)v28, v4);
    uint64_t v21 = v27;
    uint64_t v22 = (char *)sub_100E0B01C((uint64_t)v8);
    if (!v21) {
      double v2 = v22;
    }
    v18(v20, v4);
  }
  return v2;
}

void sub_100E0CC88()
{
  sub_100522F00(v0 + OBJC_IVAR____TtC8Freeform28CRLRemoteURLMetadataProvider_navigationDidFinishContinuation, &qword_10169DC08);
  swift_release();
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLRemoteURLMetadataProvider__image);
}

id sub_100E0CCE0()
{
  return sub_100E0CCF8(type metadata accessor for CRLRemoteURLMetadataProvider);
}

id sub_100E0CCF8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  [super dealloc];
}

uint64_t sub_100E0CD9C()
{
  return type metadata accessor for CRLRemoteURLMetadataProvider(0);
}

uint64_t type metadata accessor for CRLRemoteURLMetadataProvider(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10169DB50);
}

void sub_100E0CDC4()
{
  sub_100E0CE60();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100E0CE60()
{
  if (!qword_10169DB60)
  {
    sub_100522D34(&qword_10169DB68);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10169DB60);
    }
  }
}

uint64_t sub_100E0CF34(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = type metadata accessor for MainActor();
  v2[5] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[6] = v4;
  v2[7] = v3;
  return _swift_task_switch(sub_100E0CFD0, v4, v3);
}

uint64_t sub_100E0CFD0()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = static MainActor.shared.getter();
  v0[8] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[9] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[10] = v4;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_10169DC30);
  *uint64_t v4 = v0;
  v4[1] = sub_100E0D0E0;
  uint64_t v6 = v0[2];
  return withCheckedContinuation<A>(isolation:function:_:)(v6, v2, &protocol witness table for MainActor, 0xD000000000000012, 0x800000010128D220, sub_100E0E0DC, v3, v5);
}

uint64_t sub_100E0D0E0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_100761D4C, v3, v2);
}

void sub_100E0D240(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101681FF0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4, v7);
  id v8 = [self sharedGenerator];
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1007FDD44;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_1007FC40C;
  aBlock[3] = &unk_10152EAC0;
  uint64_t v11 = _Block_copy(aBlock);
  swift_release();
  [v8 generateRepresentationsForRequest:a2 updateHandler:v11];
  _Block_release(v11);
}

id sub_100E0D414()
{
  return sub_100E0CCF8(type metadata accessor for CRLFileURLMetadataProvider);
}

uint64_t sub_100E0D42C()
{
  return type metadata accessor for CRLFileURLMetadataProvider(0);
}

uint64_t type metadata accessor for CRLFileURLMetadataProvider(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10169DBF8);
}

uint64_t sub_100E0D454()
{
  return swift_updateClassMetadata2();
}

char *sub_100E0D48C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a2;
  uint64_t v27 = a3;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  id v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v11 = __chkstk_darwin(v9, v10);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  uint64_t v26 = a1;
  v14((char *)&v23 - v12, (uint64_t)a1, v4, v11);
  objc_allocWithZone((Class)type metadata accessor for CRLFileURLMetadataProvider(0));
  if (URL.isFileURL.getter())
  {
    ((void (*)(char *, char *, uint64_t))v14)(v8, v13, v4);
    uint64_t v15 = v25;
    uint64_t v16 = (char *)sub_100E0B01C((uint64_t)v8);
    if (!v15)
    {
      char v17 = v16;
      uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v13, v4);
      id v20 = &v17[OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_filename];
      uint64_t v21 = v27;
      *(void *)id v20 = v24;
      *((void *)v20 + 1) = v21;
      swift_bridgeObjectRelease();
      v19(v26, v4);
      return v17;
    }
    char v17 = *(char **)(v5 + 8);
    ((void (*)(char *, uint64_t))v17)(v13, v4);
  }
  else
  {
    sub_100817950();
    swift_allocError();
    unsigned char *v18 = 5;
    swift_willThrow();
    char v17 = *(char **)(v5 + 8);
    ((void (*)(char *, uint64_t))v17)(v13, v4);
    swift_deallocPartialClassInstance();
  }
  ((void (*)(char *, uint64_t))v17)(v26, v4);
  swift_bridgeObjectRelease();
  return v17;
}

double sub_100E0D714(double a1, double a2, double a3, double a4, double a5)
{
  double v7 = a2;
  if (a1 < a3 && a2 < a4)
  {
    a2 = a4;
    if (v7 + v7 < a1) {
      goto LABEL_14;
    }
    a1 = sub_10006729C(1, a1, v7, a3, a4);
  }
  else if (a1 < a2 && a5 < a2)
  {
    a1 = sub_1000646A4(a1, a2, a5 / a2);
  }
  a5 = a1;
LABEL_14:
  if (a5 < a3) {
    return sub_1000646A4(a5, a2, a3 / a5);
  }
  return a5;
}

uint64_t sub_100E0D7B8()
{
  unint64_t v0 = (void *)_convertErrorToNSError(_:)();
  id v1 = [v0 userInfo];

  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v2 + 16) || (unint64_t v5 = sub_100955F50(v3, v4), (v6 & 1) == 0))
  {
    long long v33 = 0u;
    long long v34 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_100522D7C(*(void *)(v2 + 56) + 32 * v5, (uint64_t)&v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v34 + 1))
  {
LABEL_7:
    sub_100522F00((uint64_t)&v33, &qword_101672BF0);
    goto LABEL_8;
  }
  sub_10099A500();
  if (swift_dynamicCast())
  {
    double v7 = v32;
LABEL_13:
    id v15 = [v7 code];

    if ((uint64_t)v15 <= 0)
    {
      if (v15 == (id)-1009)
      {
        unint64_t v17 = 0xE700000000000000;
        unint64_t v18 = 0x656E696C66666FLL;
        uint64_t v16 = 1;
      }
      else if (v15 == (id)-1003)
      {
        unint64_t v17 = 0x800000010128D1B0;
        uint64_t v16 = 3;
        unint64_t v18 = 0xD000000000000012;
      }
      else
      {
LABEL_24:
        uint64_t v16 = 0;
        unint64_t v17 = 0xE700000000000000;
        unint64_t v18 = 0x6E776F6E6B6E75;
      }
    }
    else
    {
      switch((unint64_t)v15)
      {
        case 1uLL:
          goto LABEL_24;
        case 2uLL:
          uint64_t v16 = 0;
          unint64_t v17 = 0xEC00000064656C69;
          unint64_t v18 = 0x6166206863746566;
          break;
        case 3uLL:
          unint64_t v18 = 0x656C6C65636E6163;
          uint64_t v16 = 4;
          unint64_t v17 = 0xE900000000000064;
          break;
        case 4uLL:
          uint64_t v16 = 0;
          unint64_t v17 = 0xE900000000000074;
          unint64_t v18 = 0x756F2064656D6974;
          break;
        default:
          if (v15 != (id)102) {
            goto LABEL_24;
          }
          unint64_t v18 = 0xD000000000000016;
          unint64_t v17 = 0x800000010128D1D0;
          uint64_t v16 = 2;
          break;
      }
    }
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v27 = (void *)static OS_os_log.crlDefault;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v29 = sub_100528BE4();
    *(void *)(inited + 32) = v18;
    *(void *)(inited + 64) = v29;
    *(void *)(inited + 40) = v17;
    id v21 = v27;
    uint64_t v30 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v21, (uint64_t)&_mh_execute_header, v30, (uint64_t)"Link presentation error: %@", 27, 2, inited);
    goto LABEL_31;
  }
LABEL_8:
  id v8 = (void *)_convertErrorToNSError(_:)();
  id v9 = [v8 domain];

  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
LABEL_12:
    double v7 = (void *)_convertErrorToNSError(_:)();
    goto LABEL_13;
  }
  char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14) {
    goto LABEL_12;
  }
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v19 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v20 = swift_initStackObject();
  *(_OWORD *)(v20 + 16) = xmmword_10117E810;
  id v21 = v19;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  uint64_t v22 = String.init<A>(describing:)();
  uint64_t v24 = v23;
  *(void *)(v20 + 56) = &type metadata for String;
  unint64_t v25 = sub_100528BE4();
  *(void *)(v20 + 32) = v22;
  *(void *)(v20 + 64) = v25;
  *(void *)(v20 + 40) = v24;
  uint64_t v26 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v21, (uint64_t)&_mh_execute_header, v26, (uint64_t)"Got unexpected error type: %@", 29, 2, v20);
  uint64_t v16 = 0;
LABEL_31:
  swift_errorRelease();
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  return v16;
}

uint64_t sub_100E0DCDC(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_10169DB68);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  double v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10169DC08);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  id v15 = (char *)v19 - v14;
  uint64_t v16 = v1 + OBJC_IVAR____TtC8Freeform28CRLRemoteURLMetadataProvider_navigationDidFinishContinuation;
  swift_beginAccess();
  sub_100E0DF18(v16, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v15, 1, v3))
  {
    sub_100522F00((uint64_t)v15, &qword_10169DC08);
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v11, 1, 1, v3);
    swift_beginAccess();
    sub_100E0DF80((uint64_t)v11, v16);
    return swift_endAccess();
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v15, v3);
  uint64_t result = sub_100522F00((uint64_t)v15, &qword_10169DC08);
  if (a1)
  {
    v19[0] = a1;
    id v18 = a1;
    CheckedContinuation.resume(returning:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_100E0DF18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10169DC08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100E0DF80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10169DC08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100E0DFE8()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100E0E028(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  double v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *double v7 = v2;
  v7[1] = sub_100528488;
  return sub_100E0BD58(a1, v4, v5, v6);
}

void sub_100E0E0DC(uint64_t a1)
{
  sub_100E0D240(a1, *(void *)(v1 + 16));
}

uint64_t sub_100E0E0E4()
{
  uint64_t v1 = sub_1005057FC(&qword_101681FF0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100E0E178(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100E0E188()
{
  return swift_release();
}

unsigned char *storeEnumTagSinglePayload for CRLMetadataProviderError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100E0E25CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLMetadataProviderError()
{
  return &type metadata for CRLMetadataProviderError;
}

unint64_t sub_100E0E298()
{
  unint64_t result = qword_10169DC40;
  if (!qword_10169DC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169DC40);
  }
  return result;
}

uint64_t InputDeviceData.isPencilUsed.getter(char a1)
{
  return a1 & 1;
}

uint64_t sub_100E0E2F4()
{
  return 0x6C69636E65507369;
}

uint64_t sub_100E0E314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6C69636E65507369 && a2 == 0xEC00000064657355)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_100E0E3C4(uint64_t a1)
{
  unint64_t v2 = sub_100E0E568();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100E0E400(uint64_t a1)
{
  unint64_t v2 = sub_100E0E568();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t InputDeviceData.encode(to:)(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10169DC50);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  unsigned int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100E0E568();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

unint64_t sub_100E0E568()
{
  unint64_t result = qword_10169DC58;
  if (!qword_10169DC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169DC58);
  }
  return result;
}

uint64_t InputDeviceData.init(from:)(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_10169DC60);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  char v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v8 = sub_10050F848(a1, a1[3]);
  sub_100E0E568();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    unsigned __int8 v8 = KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return v8 & 1;
}

uint64_t sub_100E0E714@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_10169DC60);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100E0E568();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  char v10 = KeyedDecodingContainer.decode(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  *a2 = v10 & 1;
  return result;
}

uint64_t sub_100E0E874(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10169DC50);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100E0E568();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t getEnumTagSinglePayload for InputDeviceData(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for InputDeviceData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100E0EB14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InputDeviceData()
{
  return &type metadata for InputDeviceData;
}

unsigned char *storeEnumTagSinglePayload for InputDeviceData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100E0EBE8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for InputDeviceData.CodingKeys()
{
  return &type metadata for InputDeviceData.CodingKeys;
}

unint64_t sub_100E0EC24()
{
  unint64_t result = qword_10169DC68;
  if (!qword_10169DC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169DC68);
  }
  return result;
}

unint64_t sub_100E0EC7C()
{
  unint64_t result = qword_10169DC70;
  if (!qword_10169DC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169DC70);
  }
  return result;
}

unint64_t sub_100E0ECD4()
{
  unint64_t result = qword_10169DC78;
  if (!qword_10169DC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169DC78);
  }
  return result;
}

uint64_t sub_100E0ED28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  sub_10050F930(a1, v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_boardIdentifier);
  uint64_t v24 = v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemUUID;
  uint64_t v25 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v24, a2, v25);
  *(void *)(v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_minRequiredVersion) = a3;
  uint64_t v26 = v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity;
  *(void *)uint64_t v26 = a4;
  *(unsigned char *)(v26 + 8) = 0;
  uint64_t v27 = v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity;
  *(void *)uint64_t v27 = a5;
  *(unsigned char *)(v27 + 8) = 0;
  *(void *)(v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_objectOptions) = a6;
  *(void *)(v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemTypeValue) = a7;
  sub_100A2A208(a8, v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_parentContainerUUID);
  *(unsigned char *)(v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemCreated) = a9;
  id v28 = (void *)(v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData);
  *id v28 = a10;
  v28[1] = a11;
  unint64_t v29 = (void *)(v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData);
  *unint64_t v29 = a12;
  v29[1] = a13;
  uint64_t v30 = (void *)(v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData);
  *uint64_t v30 = a14;
  v30[1] = a15;
  uint64_t v31 = (void *)(v17 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData);
  *uint64_t v31 = a16;
  v31[1] = a17;
  return v17;
}

unint64_t sub_100E0EEEC(char a1)
{
  unint64_t result = 0x6564496472616F62;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x444955556D657469;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000025;
      break;
    case 5:
      unint64_t result = 0x704F7463656A626FLL;
      break;
    case 6:
      unint64_t result = 0x657079546D657469;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0x616572436D657469;
      break;
    case 9:
      unint64_t result = 0x52436E6F6D6D6F63;
      break;
    case 10:
      unint64_t result = 0xD000000000000010;
      break;
    case 11:
      unint64_t result = 0xD000000000000015;
      break;
    case 12:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100E0F0C4()
{
  return sub_100E0EEEC(*v0);
}

uint64_t sub_100E0F0CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100E10D10(a1, a2);
  *a3 = result;
  return result;
}

void sub_100E0F0F4(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_100E0F100(uint64_t a1)
{
  unint64_t v2 = sub_100E109C0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100E0F13C(uint64_t a1)
{
  unint64_t v2 = sub_100E109C0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100E0F178()
{
  sub_10050F994(v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_boardIdentifier);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemUUID;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100522F00(v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_parentContainerUUID, (uint64_t *)&unk_101674520);
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData + 8));
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData + 8));
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData + 8));
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData + 8));

  return swift_deallocClassInstance();
}

uint64_t sub_100E0F290()
{
  return type metadata accessor for CRLBoardItemRealTimeChangeRecord();
}

uint64_t type metadata accessor for CRLBoardItemRealTimeChangeRecord()
{
  uint64_t result = qword_10169DCB8;
  if (!qword_10169DCB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100E0F2E4()
{
  type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for UUID();
    if (v1 <= 0x3F)
    {
      sub_100510764();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_100E0F41C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_10169DDC0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100E109C0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v11) = 0;
  type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  sub_100E10A68(&qword_101671E68, (void (*)(uint64_t))type metadata accessor for CRLGloballyScopedBoardIdentifier);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    type metadata accessor for UUID();
    sub_100E10A68(&qword_101671E70, (void (*)(uint64_t))&type metadata accessor for UUID);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v11) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v11) = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v11) = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    *(void *)&long long v11 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_objectOptions);
    char v12 = 5;
    sub_100E10AB0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v11) = 6;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v11) = 7;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v11) = 8;
    KeyedEncodingContainer.encode(_:forKey:)();
    long long v11 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData);
    char v12 = 9;
    sub_10060D344();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    long long v11 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData);
    char v12 = 10;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    long long v11 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData);
    char v12 = 11;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    long long v11 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData);
    char v12 = 12;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

void *sub_100E0F8C0(void *a1)
{
  uint64_t v4 = *v1;
  id v43 = v2;
  uint64_t v44 = v4;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v37 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v38 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v9);
  long long v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v12, v13);
  BOOL v39 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC(&qword_10169DDA8);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v40 = v15;
  uint64_t v41 = v16;
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100E109C0();
  uint64_t v42 = v19;
  uint64_t v20 = v43;
  id v21 = v1;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v20)
  {
    swift_deallocPartialClassInstance();
    uint64_t v34 = (uint64_t)a1;
  }
  else
  {
    uint64_t v36 = v8;
    id v43 = a1;
    LOBYTE(v45) = 0;
    sub_100E10A68(&qword_101671E50, (void (*)(uint64_t))type metadata accessor for CRLGloballyScopedBoardIdentifier);
    uint64_t v22 = (uint64_t)v39;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_10050F930(v22, (uint64_t)v1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_boardIdentifier);
    LOBYTE(v45) = 1;
    uint64_t v23 = sub_100E10A68(&qword_101671E58, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v24 = v36;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    BOOL v39 = (char *)v23;
    (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))((uint64_t)v1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemUUID, v11, v24);
    LOBYTE(v45) = 2;
    uint64_t v25 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v35 = v1;
    *(void *)((char *)v1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_minRequiredVersion) = v25;
    LOBYTE(v45) = 3;
    uint64_t v26 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v27 = (char *)v1
        + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity;
    *(void *)uint64_t v27 = v26;
    v27[8] = v28 & 1;
    LOBYTE(v45) = 4;
    uint64_t v29 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v30 = (char *)v1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity;
    *(void *)uint64_t v30 = v29;
    v30[8] = v31 & 1;
    char v46 = 5;
    sub_100E10A14();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *(void *)((char *)v1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_objectOptions) = v45;
    LOBYTE(v45) = 6;
    *(void *)((char *)v1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemTypeValue) = KeyedDecodingContainer.decode(_:forKey:)();
    LOBYTE(v45) = 7;
    uint64_t v33 = (uint64_t)v37;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_100A2A208(v33, (uint64_t)v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_parentContainerUUID);
    LOBYTE(v45) = 8;
    *((unsigned char *)v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemCreated) = KeyedDecodingContainer.decode(_:forKey:)() & 1;
    char v46 = 9;
    sub_10060D184();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    *(_OWORD *)((char *)v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData) = v45;
    char v46 = 10;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    *(_OWORD *)((char *)v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData) = v45;
    char v46 = 11;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    *(_OWORD *)((char *)v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData) = v45;
    char v46 = 12;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v40);
    id v21 = v35;
    *(_OWORD *)((char *)v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData) = v45;
    uint64_t v34 = (uint64_t)v43;
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v34);
  return v21;
}

uint64_t sub_100E10178()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_minRequiredVersion);
}

uint64_t sub_100E1018C(uint64_t *a1, uint64_t *a2)
{
  return sub_100E10298(*a1, *a2);
}

void *sub_100E10198@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_100E0F8C0(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_100E101F0(void *a1)
{
  return sub_100E0F41C(a1);
}

uint64_t sub_100E10214(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_100E10A68(&qword_1016816C0, (void (*)(uint64_t))type metadata accessor for CRLBoardItemRealTimeChangeRecord);
  uint64_t result = sub_100E10A68(&qword_10167AC58, (void (*)(uint64_t))type metadata accessor for CRLBoardItemRealTimeChangeRecord);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100E10298(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v61 = *(void *)(v4 - 8);
  uint64_t v62 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v60 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_10168A0C0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v59 - v21;
  uint64_t v23 = a1;
  uint64_t v24 = a1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_boardIdentifier;
  uint64_t v25 = a2;
  uint64_t v26 = a2 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_boardIdentifier;
  char v27 = static UUID.== infix(_:_:)();
  sub_1009A4420(v24, (uint64_t)v22);
  sub_1009A4420(v26, (uint64_t)v18);
  if ((v27 & 1) == 0)
  {
    sub_10050F994((uint64_t)v18);
    sub_10050F994((uint64_t)v22);
    goto LABEL_38;
  }
  uint64_t v28 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v29 = *(void *)&v22[v28];
  uint64_t v30 = *(void *)&v22[v28 + 8];
  char v31 = &v18[v28];
  if (v29 == *(void *)v31 && v30 == *((void *)v31 + 1))
  {
    sub_10050F994((uint64_t)v18);
    sub_10050F994((uint64_t)v22);
  }
  else
  {
    char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_10050F994((uint64_t)v18);
    sub_10050F994((uint64_t)v22);
    char v34 = 0;
    if ((v33 & 1) == 0) {
      return v34 & 1;
    }
  }
  uint64_t v35 = v23;
  uint64_t v36 = v25;
  if ((static UUID.== infix(_:_:)() & 1) == 0
    || *(void *)(v23 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_minRequiredVersion) != *(void *)(v25 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_minRequiredVersion)
    || *(void *)(v23 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_objectOptions) != *(void *)(v25 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_objectOptions)
    || *(void *)(v23 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemTypeValue) != *(void *)(v25 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemTypeValue))
  {
    goto LABEL_38;
  }
  uint64_t v37 = v25 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_parentContainerUUID;
  uint64_t v38 = (uint64_t)&v14[*(int *)(v11 + 48)];
  sub_1005107BC(v23 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_parentContainerUUID, (uint64_t)v14);
  sub_1005107BC(v37, v38);
  uint64_t v40 = v61;
  uint64_t v39 = v62;
  uint64_t v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
  if (v41((uint64_t)v14, 1, v62) == 1)
  {
    if (v41(v38, 1, v39) == 1)
    {
      sub_100522F00((uint64_t)v14, (uint64_t *)&unk_101674520);
      goto LABEL_21;
    }
LABEL_19:
    sub_100522F00((uint64_t)v14, (uint64_t *)&unk_10168A0C0);
    goto LABEL_38;
  }
  sub_1005107BC((uint64_t)v14, (uint64_t)v10);
  if (v41(v38, 1, v39) == 1)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v39);
    goto LABEL_19;
  }
  uint64_t v42 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v60, v38, v39);
  sub_100E10A68((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  char v43 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v40 + 8);
  v44(v42, v39);
  v44(v10, v39);
  sub_100522F00((uint64_t)v14, (uint64_t *)&unk_101674520);
  if ((v43 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_21:
  if (*(unsigned __int8 *)(v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemCreated) != *(unsigned __int8 *)(v36 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemCreated)) {
    goto LABEL_38;
  }
  uint64_t v45 = *(void *)(v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData);
  unint64_t v46 = *(void *)(v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData + 8);
  uint64_t v47 = *(void *)(v36 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData);
  unint64_t v48 = *(void *)(v36 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData + 8);
  if (v46 >> 60 == 15)
  {
    if (v48 >> 60 != 15) {
      goto LABEL_36;
    }
  }
  else
  {
    if (v48 >> 60 == 15) {
      goto LABEL_36;
    }
    sub_1005FA2A0(*(void *)(v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData), *(void *)(v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData + 8));
    sub_1005FA2A0(v47, v48);
    char v49 = sub_1008D44A8(v45, v46, v47, v48);
    sub_100514260(v47, v48);
    sub_100514260(v45, v46);
    if ((v49 & 1) == 0) {
      goto LABEL_38;
    }
  }
  uint64_t v45 = *(void *)(v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData);
  unint64_t v46 = *(void *)(v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData + 8);
  uint64_t v47 = *(void *)(v36 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData);
  unint64_t v48 = *(void *)(v36 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData + 8);
  if (v46 >> 60 == 15)
  {
    if (v48 >> 60 != 15) {
      goto LABEL_36;
    }
LABEL_32:
    uint64_t v45 = *(void *)(v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData);
    unint64_t v46 = *(void *)(v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData + 8);
    uint64_t v47 = *(void *)(v36 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData);
    unint64_t v48 = *(void *)(v36 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData + 8);
    if (v46 >> 60 == 15)
    {
      if (v48 >> 60 == 15)
      {
LABEL_41:
        uint64_t v55 = *(void *)(v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData);
        unint64_t v56 = *(void *)(v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData + 8);
        uint64_t v57 = *(void *)(v36 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData);
        unint64_t v58 = *(void *)(v36 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData + 8);
        if (v56 >> 60 == 15)
        {
          if (v58 >> 60 == 15)
          {
            char v34 = 1;
            return v34 & 1;
          }
        }
        else if (v58 >> 60 != 15)
        {
          sub_1005FA2A0(*(void *)(v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData), *(void *)(v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData + 8));
          sub_1005FA2A0(v57, v58);
          char v34 = sub_1008D44A8(v55, v56, v57, v58);
          sub_100514260(v57, v58);
          sub_100514260(v55, v56);
          return v34 & 1;
        }
        sub_1005FA2A0(*(void *)(v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData), *(void *)(v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData + 8));
        sub_1005FA2A0(v57, v58);
        sub_100514260(v55, v56);
        uint64_t v51 = v57;
        unint64_t v52 = v58;
        goto LABEL_37;
      }
    }
    else if (v48 >> 60 != 15)
    {
      sub_1005FA2A0(*(void *)(v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData), *(void *)(v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData + 8));
      sub_1005FA2A0(v47, v48);
      char v54 = sub_1008D44A8(v45, v46, v47, v48);
      sub_100514260(v47, v48);
      sub_100514260(v45, v46);
      if ((v54 & 1) == 0) {
        goto LABEL_38;
      }
      goto LABEL_41;
    }
LABEL_36:
    sub_1005FA2A0(v45, v46);
    sub_1005FA2A0(v47, v48);
    sub_100514260(v45, v46);
    uint64_t v51 = v47;
    unint64_t v52 = v48;
LABEL_37:
    sub_100514260(v51, v52);
    goto LABEL_38;
  }
  if (v48 >> 60 == 15) {
    goto LABEL_36;
  }
  sub_1005FA2A0(*(void *)(v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData), *(void *)(v35 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData + 8));
  sub_1005FA2A0(v47, v48);
  char v50 = sub_1008D44A8(v45, v46, v47, v48);
  sub_100514260(v47, v48);
  sub_100514260(v45, v46);
  if (v50) {
    goto LABEL_32;
  }
LABEL_38:
  char v34 = 0;
  return v34 & 1;
}

unint64_t sub_100E109C0()
{
  unint64_t result = qword_10169DDB0;
  if (!qword_10169DDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169DDB0);
  }
  return result;
}

unint64_t sub_100E10A14()
{
  unint64_t result = qword_10169DDB8;
  if (!qword_10169DDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169DDB8);
  }
  return result;
}

uint64_t sub_100E10A68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100E10AB0()
{
  unint64_t result = qword_10169DDC8;
  if (!qword_10169DDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169DDC8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLBoardItemRealTimeChangeRecord.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100E10BD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardItemRealTimeChangeRecord.CodingKeys()
{
  return &type metadata for CRLBoardItemRealTimeChangeRecord.CodingKeys;
}

unint64_t sub_100E10C0C()
{
  unint64_t result = qword_10169DDD0;
  if (!qword_10169DDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169DDD0);
  }
  return result;
}

unint64_t sub_100E10C64()
{
  unint64_t result = qword_10169DDD8;
  if (!qword_10169DDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169DDD8);
  }
  return result;
}

unint64_t sub_100E10CBC()
{
  unint64_t result = qword_10169DDE0;
  if (!qword_10169DDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169DDE0);
  }
  return result;
}

uint64_t sub_100E10D10(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6564496472616F62 && a2 == 0xEF7265696669746ELL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x444955556D657469 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000010123C470 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000002BLL && a2 == 0x8000000101264C40 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x8000000101264C70 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x704F7463656A626FLL && a2 == 0xED0000736E6F6974 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x657079546D657469 && a2 == 0xED000065756C6156 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000101244300 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x616572436D657469 && a2 == 0xEB00000000646574 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x52436E6F6D6D6F63 && a2 == 0xEE00617461445444 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001012356C0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000010128D2A0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000010128D2C0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

uint64_t CRLLinkViewHostingRep.crlaxLabel.getter()
{
  CRLLinkViewHostingRep.getAccessibilityLabelTokens(forUserInput:)(0);
  sub_1005057FC((uint64_t *)&unk_1016773F0);
  sub_100523288((unint64_t *)&qword_101672620, (uint64_t *)&unk_1016773F0);
  uint64_t v0 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v0;
}

void CRLLinkViewHostingRep.crlaxUserInputLabels.getter()
{
}

void CRLLinkViewHostingRep.getAccessibilityLabelTokens(forUserInput:)(char a1)
{
  BOOL v2 = v1;
  double v53 = _swiftEmptyArrayStorage;
  id v4 = [v1 layout];
  id v5 = [v4 info];

  if (!v5) {
    goto LABEL_38;
  }
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    id v6 = v5;
  }
  else {
    id v6 = 0;
  }
  if (!v6)
  {
    swift_unknownObjectRelease();
LABEL_38:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494);
    __break(1u);
    return;
  }
  type metadata accessor for CRLBoardItem(0);
  uint64_t v7 = (void *)swift_dynamicCastClass();
  if (!v7) {
    goto LABEL_29;
  }
  uint64_t v8 = v7;
  uint64_t v52 = (*(uint64_t (**)(void))((swift_isaMask & *v7) + 0xD0))();
  uint64_t v10 = v9;
  uint64_t v11 = CRLLinkViewHostingRep.embeddedLabelStringsFromLinkView()();
  int64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v50 = v10;
    uint64_t v51 = v8;
    sub_1006BB504(0, v12, 0);
    sub_10052E310();
    uint64_t v13 = v11 + 40;
    do
    {
      uint64_t v14 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      uint64_t v16 = v15;
      double v18 = _swiftEmptyArrayStorage[2];
      double v17 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v18 >= *(void *)&v17 >> 1) {
        sub_1006BB504(*(void *)&v17 > 1uLL, *(void *)&v18 + 1, 1);
      }
      v13 += 16;
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v18 + 1;
      uint64_t v19 = &_swiftEmptyArrayStorage[2 * *(void *)&v18];
      *((void *)v19 + 4) = v14;
      *((void *)v19 + 5) = v16;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    uint64_t v10 = v50;
    uint64_t v8 = v51;
    if (a1) {
      goto LABEL_13;
    }
LABEL_19:
    uint64_t v28 = sub_100F61B70(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v30 = *((void *)v28 + 2);
    unint64_t v29 = *((void *)v28 + 3);
    if (v30 >= v29 >> 1) {
      uint64_t v28 = sub_100F61B70((double *)(v29 > 1), v30 + 1, 1, v28);
    }
    *((void *)v28 + 2) = v30 + 1;
    char v31 = &v28[2 * v30];
    *((void *)v31 + 4) = v52;
    *((void *)v31 + 5) = v10;
    double v53 = v28;
    uint64_t isUniquelyReferenced_nonNull_native = sub_1006E0CB8((uint64_t)_swiftEmptyArrayStorage);
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    goto LABEL_19;
  }
LABEL_13:
  sub_1006E0CB8((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v20 = _swiftEmptyArrayStorage;
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_100F61B70(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
    uint64_t v20 = (double *)isUniquelyReferenced_nonNull_native;
  }
  unint64_t v26 = *((void *)v20 + 2);
  unint64_t v25 = *((void *)v20 + 3);
  if (v26 >= v25 >> 1)
  {
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_100F61B70((double *)(v25 > 1), v26 + 1, 1, v20);
    uint64_t v20 = (double *)isUniquelyReferenced_nonNull_native;
  }
  *((void *)v20 + 2) = v26 + 1;
  char v27 = &v20[2 * v26];
  *((void *)v27 + 4) = v52;
  *((void *)v27 + 5) = v10;
  double v53 = v20;
LABEL_22:
  uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))((swift_isaMask & *v8) + 0x130))(isUniquelyReferenced_nonNull_native, v22, v23, v24);
  uint64_t v34 = v33;
  if (String.count.getter() >= 1)
  {
    uint64_t v35 = v53;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v35 = sub_100F61B70(0, *((void *)v53 + 2) + 1, 1, v53);
    }
    unint64_t v37 = *((void *)v35 + 2);
    unint64_t v36 = *((void *)v35 + 3);
    if (v37 >= v36 >> 1) {
      uint64_t v35 = sub_100F61B70((double *)(v36 > 1), v37 + 1, 1, v35);
    }
    *((void *)v35 + 2) = v37 + 1;
    uint64_t v38 = &v35[2 * v37];
    *((void *)v38 + 4) = v32;
    *((void *)v38 + 5) = v34;
    swift_unknownObjectRelease();
    double v53 = v35;
    goto LABEL_30;
  }
  swift_bridgeObjectRelease();
LABEL_29:
  swift_unknownObjectRelease();
LABEL_30:
  if (v2[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUIIsActive])
  {
    id v39 = [self mainBundle];
    NSString v40 = String._bridgeToObjectiveC()();
    NSString v41 = String._bridgeToObjectiveC()();
    id v42 = [v39 localizedStringForKey:v40 value:v41 table:0];

    uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v45 = v44;

    unint64_t v46 = v53;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v46 = sub_100F61B70(0, *((void *)v53 + 2) + 1, 1, v53);
    }
    unint64_t v48 = *((void *)v46 + 2);
    unint64_t v47 = *((void *)v46 + 3);
    if (v48 >= v47 >> 1) {
      unint64_t v46 = sub_100F61B70((double *)(v47 > 1), v48 + 1, 1, v46);
    }
    *((void *)v46 + 2) = v48 + 1;
    char v49 = &v46[2 * v48];
    *((void *)v49 + 4) = v43;
    *((void *)v49 + 5) = v45;
  }
}

void CRLLinkViewHostingRep.embeddedLabels(in:)(void *a1)
{
  if (!a1) {
    return;
  }
  id v1 = a1;
  id v2 = [v1 subviews];
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_4;
    }
LABEL_17:

    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_17;
  }
LABEL_4:
  if (v4 < 1)
  {
    __break(1u);
  }
  else
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v3 + 8 * i + 32);
      }
      uint64_t v8 = v7;
      self;
      if (swift_dynamicCastObjCClass())
      {
        id v9 = v8;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        unint64_t v6 = CRLLinkViewHostingRep.embeddedLabels(in:)(v8);
        sub_1006E21F8(v6);
      }
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t CRLLinkViewHostingRep.embeddedLabelStringsFromLinkView()()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView);
  id v2 = v1;
  CRLLinkViewHostingRep.embeddedLabels(in:)(v1);
  unint64_t v4 = v3;

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_17:
    uint64_t v8 = _swiftEmptyArrayStorage;
LABEL_18:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v8;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v5 = result;
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = _swiftEmptyArrayStorage;
    do
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v9 = *(id *)(v4 + 8 * v7 + 32);
      }
      uint64_t v10 = v9;
      id v11 = [v9 text];
      if (v11)
      {
        int64_t v12 = v11;
        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v15 = v14;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = sub_100F61B70(0, *((void *)v8 + 2) + 1, 1, v8);
        }
        unint64_t v17 = *((void *)v8 + 2);
        unint64_t v16 = *((void *)v8 + 3);
        if (v17 >= v16 >> 1) {
          uint64_t v8 = sub_100F61B70((double *)(v16 > 1), v17 + 1, 1, v8);
        }
        *((void *)v8 + 2) = v17 + 1;
        double v18 = &v8[2 * v17];
        *((void *)v18 + 4) = v13;
        *((void *)v18 + 5) = v15;
      }
      else
      {
      }
      ++v7;
    }
    while (v5 != v7);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

void CRLLinkViewHostingRep.generateSnapshotOnMainThread()()
{
  if (![self isMainThread])
  {
    uint64_t v33 = 162;
LABEL_15:
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"generateSnapshotOnMainThread()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, v33);
    return;
  }
  id v1 = [v0 layout];
  id v2 = [v1 info];

  if (!v2)
  {
LABEL_29:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494);
    __break(1u);
    return;
  }
  swift_getObjectType();
  uint64_t v3 = swift_conformsToProtocol2();
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v3) {
    id v5 = v2;
  }
  else {
    id v5 = 0;
  }
  if (!v5)
  {
    swift_unknownObjectRelease();
    goto LABEL_29;
  }
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(ObjectType, v4);
  swift_unknownObjectRelease();
  if (!v7)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"generateSnapshotOnMainThread()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 166, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v33 = 166;
    goto LABEL_15;
  }
  id v8 = sub_1009EE058((uint64_t)v7);
  [v8 _setUseLowMemoryImageFilters:1];
  id v9 = [objc_allocWithZone((Class)UIWindow) init];
  id v10 = CRLLinkViewHostingRep.snapshotConfiguration.getter();
  id v11 = [v10 traitCollection];

  id v12 = [v11 userInterfaceStyle];
  [v9 setOverrideUserInterfaceStyle:v12];

  [v9 addSubview:v8];
  id v13 = [v8 layer];
  id v14 = CRLLinkViewHostingRep.snapshotConfiguration.getter();
  id v15 = [v14 preferredSizeClass];

  [v8 _setPreferredSizeClass:v15];
  id v16 = CRLLinkViewHostingRep.snapshotConfiguration.getter();
  [v16 size];
  CGFloat v18 = v17;
  CGFloat v20 = v19;

  v60.width = 0.0;
  v60.height = 0.0;
  v58.width = v18;
  v58.height = v20;
  LOBYTE(v15) = CGSizeEqualToSize(v58, v60);
  id v21 = v8;
  id v22 = CRLLinkViewHostingRep.snapshotConfiguration.getter();
  uint64_t v23 = v22;
  if (v15)
  {
    [v22 maximumSize];
    double v25 = v24;

    id v26 = CRLLinkViewHostingRep.snapshotConfiguration.getter();
    [v26 maximumSize];
    double v28 = v27;
    double v30 = v29;

    [v21 sizeThatFits:v28, v30];
    double v32 = v31;
  }
  else
  {
    [v22 size];
    double v25 = v34;
    double v32 = v35;
  }
  [v21 setFrame:0.0, 0.0, v25, v32];

  if (([v21 _applyCornerRadius] & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"generateSnapshotOnMainThread()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 195, (uint64_t)"Expected _applyCornerRadius to be true.", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v57) = 2;
    uint64_t v55 = "Expected _applyCornerRadius to be true.";
    uint64_t v56 = 39;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"generateSnapshotOnMainThread()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 195);
  }
  [v21 _effectiveCornerRadius:v55, v56, v57];
  [v13 setCornerRadius:];
  [v21 layoutIfNeeded];
  [v21 bounds];
  CGFloat v37 = v36;
  CGFloat v39 = v38;
  id v40 = CRLLinkViewHostingRep.snapshotConfiguration.getter();
  [v40 scale];
  CGFloat v42 = v41;

  v59.width = v37;
  v59.height = v39;
  UIGraphicsBeginImageContextWithOptions(v59, 0, v42);
  uint64_t v43 = UIGraphicsGetCurrentContext();
  if (v43)
  {
    uint64_t v44 = v43;
    [v13 renderInContext:v43];

    uint64_t v45 = UIGraphicsGetImageFromCurrentImageContext();
    if (v45)
    {
      unint64_t v46 = v45;
      unint64_t v47 = UIImagePNGRepresentation(v45);
      if (v47)
      {
        unint64_t v48 = v47;
        uint64_t v49 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v51 = v50;

        id v52 = objc_allocWithZone((Class)CRLImage);
        sub_100510D4C(v49, v51);
        Class isa = Data._bridgeToObjectiveC()().super.isa;
        id v54 = [v52 initWithData:isa];
        sub_100510084(v49, v51);

        if (v54)
        {
          [v54 CGImage];
          UIGraphicsEndImageContext();

          sub_100510084(v49, v51);
        }
        else
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"generateSnapshotOnMainThread()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 211, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"generateSnapshotOnMainThread()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 211);

          sub_100510084(v49, v51);
        }
      }
      else
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"generateSnapshotOnMainThread()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 210, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"generateSnapshotOnMainThread()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 210);
      }
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"generateSnapshotOnMainThread()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 209, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"generateSnapshotOnMainThread()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 209);
    }
  }
  else
  {
  }
}

void CRLLinkViewHostingRep.generateSnapshotSynchronously()()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchTimeInterval();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  unint64_t v6 = (void *)((char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for DispatchTime();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  id v11 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  id v15 = (char *)v42 - v14;
  id v16 = self;
  if ([v16 isMainThread])
  {
    uint64_t v17 = 237;
LABEL_16:
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"generateSnapshotSynchronously()", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, v17);
    return;
  }
  uint64_t v46 = v3;
  uint64_t v47 = v8;
  uint64_t v48 = v7;
  id v18 = [v1 layout];
  id v19 = [v18 info];

  if (!v19) {
    goto LABEL_22;
  }
  swift_getObjectType();
  uint64_t v20 = swift_conformsToProtocol2();
  if (v20) {
    uint64_t v21 = v20;
  }
  else {
    uint64_t v21 = 0;
  }
  if (v20) {
    id v22 = v19;
  }
  else {
    id v22 = 0;
  }
  if (!v22)
  {
    swift_unknownObjectRelease();
LABEL_22:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494);
    __break(1u);
    return;
  }
  uint64_t ObjectType = swift_getObjectType();
  double v24 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(ObjectType, v21);
  swift_unknownObjectRelease();
  if (!v24)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"generateSnapshotSynchronously()", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 241, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v17 = 241;
    goto LABEL_16;
  }
  id v25 = [v1 canvas];
  if (v25)
  {
    id v26 = v25;
    if ([v25 isCanvasInteractive])
    {
    }
    else
    {
      id v45 = v26;
      id v27 = [v16 currentThread];
      unsigned int v28 = [v27 isMainThread];

      if (v28)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"generateSnapshotSynchronously()", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 242, (uint64_t)"Not expected to run on the main thread.", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"generateSnapshotSynchronously()", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 242);
      }
      id v43 = [objc_allocWithZone((Class)LPLinkSnapshotGenerator) init];
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = 0;
      uint64_t v44 = (id *)(v29 + 16);
      dispatch_semaphore_t v30 = dispatch_semaphore_create(0);
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_101177E70;
      *(void *)(v31 + 32) = CRLLinkViewHostingRep.snapshotConfiguration.getter();
      aBlock[0] = v31;
      specialized Array._endMutation()();
      sub_10050BF48(0, qword_10169DE48);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      uint64_t v33 = swift_allocObject();
      v42[1] = v29;
      *(void *)(v33 + 16) = v29;
      *(void *)(v33 + 24) = v30;
      aBlock[4] = sub_100E16870;
      aBlock[5] = v33;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100E1509C;
      aBlock[3] = &unk_10152EE78;
      double v34 = _Block_copy(aBlock);
      swift_retain();
      double v35 = v30;
      swift_release();
      id v36 = v43;
      [v43 snapshotForMetadata:v24 configurations:isa completionHandler:v34];
      _Block_release(v34);

      static DispatchTime.now()();
      *unint64_t v6 = 1;
      uint64_t v37 = v46;
      (*(void (**)(void *, void, uint64_t))(v46 + 104))(v6, enum case for DispatchTimeInterval.seconds(_:), v2);
      DispatchTime.advanced(by:)();
      (*(void (**)(void *, uint64_t))(v37 + 8))(v6, v2);
      uint64_t v38 = v48;
      CGFloat v39 = *(void (**)(char *, uint64_t))(v47 + 8);
      v39(v11, v48);
      OS_dispatch_semaphore.wait(timeout:)();

      v39(v15, v38);
      id v40 = v44;
      swift_beginAccess();
      id v41 = *v40;
      swift_release();
    }
  }
  else
  {
  }
}

id CRLLinkViewHostingRep.snapshotConfiguration.getter()
{
  id v1 = [self traitCollectionWithUserInterfaceStyle:1];
  id v2 = [v0 layout];
  id v3 = [v2 geometry];

  [v3 size];
  double v5 = v4;
  double v7 = v6;

  id v8 = [objc_allocWithZone((Class)LPLinkSnapshotConfiguration) initWithTraitCollection:v1 preferredSizeClass:5 size:v5 scale:2.0];
  id v9 = [objc_allocWithZone((Class)LPLinkRendererSizeClassParameters) init];
  [v9 setNeverShowIcon:1];
  [v8 setSizeClassParameters:v9];

  return v8;
}

void CRLLinkViewHostingRep.draw(image:ctx:)(CGImage *a1, CGContextRef c)
{
  id v3 = v2;
  CGContextSaveGState(c);
  [v3 naturalBounds];
  CGFloat Height = CGRectGetHeight(v16);
  CGContextTranslateCTM(c, 0.0, Height);
  CGContextScaleCTM(c, 1.0, -1.0);
  double Width = (double)(uint64_t)CGImageGetWidth(a1);
  double v8 = (double)(uint64_t)CGImageGetHeight(a1);
  id v9 = [v3 layout];
  id v10 = [v9 geometry];

  [v10 size];
  double v12 = v11;
  double v14 = v13;

  sub_10006729C(0, Width, v8, v12, v14);
  sub_100064070();
  CGContextRef.draw(_:in:byTiling:)();

  CGContextRestoreGState(c);
}

void CRLLinkViewHostingRep.makeLinkView()()
{
  id v1 = v0;
  id v2 = [v0 layout];
  id v3 = [v2 info];

  if (!v3) {
    goto LABEL_16;
  }
  swift_getObjectType();
  uint64_t v4 = swift_conformsToProtocol2();
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (v4) {
    id v6 = v3;
  }
  else {
    id v6 = 0;
  }
  if (!v6)
  {
    swift_unknownObjectRelease();
LABEL_16:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494);
    __break(1u);
    return;
  }
  uint64_t ObjectType = swift_getObjectType();
  double v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(ObjectType, v5);
  swift_unknownObjectRelease();
  if (v8)
  {
    id v9 = (objc_class *)type metadata accessor for CRLLinkView();
    id v10 = (char *)objc_allocWithZone(v9);
    swift_unknownObjectWeakInit();
    *(void *)&v10[OBJC_IVAR____TtC8Freeform11CRLLinkView_viewScale] = 0x3FF0000000000000;
    id v11 = v1;
    double v12 = v10;
    id v13 = v8;
    id v14 = sub_1009EE058((uint64_t)v13);
    *(void *)&v12[OBJC_IVAR____TtC8Freeform11CRLLinkView_wrappedLinkView] = v14;
    swift_unknownObjectWeakAssign();
    id v15 = v14;

    v23.receiver = v12;
    v23.super_class = v9;
    CGRect v16 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v16 addSubview:v15];

    id v17 = *(id *)&v16[OBJC_IVAR____TtC8Freeform11CRLLinkView_wrappedLinkView];
    [v11 naturalBounds];
    [v17 setFrame:sub_100064070()];

    id v18 = CRLLinkViewHostingRep.reloadView.getter();
    [v16 addSubview:v18];

    id v19 = [v11 canvas];
    if (v19)
    {
      uint64_t v20 = v19;
      [v19 viewScale];
      uint64_t v22 = v21;

      *(void *)&v16[OBJC_IVAR____TtC8Freeform11CRLLinkView_viewScale] = v22;
      sub_1009EDA0C();
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"makeLinkView()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 325, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeLinkView()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 325);
    }
  }
}

void CRLLinkViewHostingRep.updateReloadView()()
{
  id v1 = [v0 canvas];
  if (v1)
  {
    id v2 = v1;
    [v1 viewScale];
    double v4 = v3;

    [v0 boundsForStandardKnobs];
    CGFloat Width = CGRectGetWidth(v10);
    id v6 = (double *)&v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadViewSize];
    if (*(double *)&v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadViewSize] + 10.0 >= v4 * Width
      || ([v0 boundsForStandardKnobs], v6[1] + 10.0 >= v4 * CGRectGetHeight(v11)))
    {
      double v8 = CRLLinkViewHostingRep.reloadView.getter();
      [v8 setHidden:1];

      v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadViewHiddenBecauseTooSmall] = 1;
    }
    else
    {
      if (v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadViewHiddenBecauseTooSmall] == 1)
      {
        v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadViewHiddenBecauseTooSmall] = 0;
        if (v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUIIsActive] == 1
          && (v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_isZooming] & 1) == 0)
        {
          double v7 = CRLLinkViewHostingRep.reloadView.getter();
          [v7 setHidden:0];
        }
      }
      CRLLinkViewHostingRep.updateReloadViewTransform()();
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateReloadView()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 334, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateReloadView()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 334);
  }
}

void CRLLinkViewHostingRep.updateReloadViewTransform()()
{
  id v1 = [v0 canvas];
  if (!v1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateReloadViewTransform()", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 361, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v17 = 361;
LABEL_7:
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateReloadViewTransform()", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, v17);
    return;
  }
  id v2 = v1;
  [v1 viewScale];
  double v4 = v3;

  uint64_t v5 = CRLLinkViewHostingRep.reloadView.getter();
  id v6 = [v5 layer];

  if (!v6)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateReloadViewTransform()", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 362, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v17 = 362;
    goto LABEL_7;
  }
  id v7 = v6;
  double v8 = CRLLinkViewHostingRep.reloadView.getter();
  [v8 setBounds:sub_100064070()];

  id v9 = self;
  [v9 begin];
  [v9 setDisableActions:1];
  CATransform3DMakeScale(&v28, 1.0 / v4, 1.0 / v4, 1.0);
  long long v26 = *(_OWORD *)&v28.m13;
  long long v27 = *(_OWORD *)&v28.m11;
  long long v24 = *(_OWORD *)&v28.m23;
  long long v25 = *(_OWORD *)&v28.m21;
  long long v22 = *(_OWORD *)&v28.m33;
  long long v23 = *(_OWORD *)&v28.m31;
  long long v21 = *(_OWORD *)&v28.m41;
  CGFloat m43 = v28.m43;
  CGFloat m44 = v28.m44;
  [v7 setAnchorPoint:0.5, 0.5];
  double v12 = 0.0;
  [v7 setPosition:0.0, 0.0];
  *(_OWORD *)&v28.m11 = v27;
  *(_OWORD *)&v28.m13 = v26;
  *(_OWORD *)&v28.m21 = v25;
  *(_OWORD *)&v28.m23 = v24;
  *(_OWORD *)&v28.m31 = v23;
  *(_OWORD *)&v28.m33 = v22;
  *(_OWORD *)&v28.m41 = v21;
  v28.CGFloat m43 = m43;
  v28.CGFloat m44 = m44;
  [v7 setTransform:&v28];
  [v0 boundsForStandardKnobs];
  double Width = CGRectGetWidth(v29);
  [v0 boundsForStandardKnobs];
  double Height = CGRectGetHeight(v30);
  uint64_t v15 = *(void *)&v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView];
  if (v15)
  {
    [*(id *)(v15 + OBJC_IVAR____TtC8Freeform11CRLLinkView_wrappedLinkView) _primaryCaptionBarFrame];
    double v12 = v16 * 0.5;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"captionHeight", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 469, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v20) = 2;
    id v18 = "invalid nil found when unwrapping value";
    uint64_t v19 = 39;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"captionHeight", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 469);
  }
  [v7 setPosition:Width * 0.5, Height * 0.5 - v12, v18, v19, v20];
  [v9 commit];
}

Swift::Void __swiftcall CRLLinkViewHostingRep.reloadWillStart()()
{
  CRLLinkViewHostingRep.tearDownReload()();
  id v1 = self;
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v6[4] = sub_100E15184;
  v6[5] = v2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = *(void *)"";
  _OWORD v6[2] = sub_10051CE64;
  v6[3] = &unk_10152ED88;
  double v3 = _Block_copy(v6);
  swift_release();
  id v4 = [v1 scheduledTimerWithTimeInterval:0 repeats:v3 block:1.0];
  _Block_release(v3);
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUITimer);
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUITimer) = v4;
}

void CRLLinkViewHostingRep.showReloadUI()()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUIIsActive;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUIIsActive) = 1;
  double v3 = CRLLinkViewHostingRep.reloadView.getter();
  sub_1009A11D0();

  if (*(unsigned char *)(v1 + v2) == 1
    && (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadViewHiddenBecauseTooSmall) & 1) == 0
    && (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_isZooming) & 1) == 0)
  {
    id v4 = CRLLinkViewHostingRep.reloadView.getter();
    [v4 setHidden:0];
  }
  uint64_t v5 = CRLLinkViewHostingRep.reloadView.getter();
  id v6 = [v5 layer];

  if (v6)
  {
    id v7 = v6;
    NSString v8 = String._bridgeToObjectiveC()();
    [v7 removeAnimationForKey:v8];

    id v9 = String._bridgeToObjectiveC()();
    [v7 removeAnimationForKey:v9];
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"showReloadUI()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 417, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showReloadUI()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 417);
  }
}

void CRLLinkViewHostingRep.tearDownReload()()
{
  v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUIIsActive] = 0;
  uint64_t v1 = OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUITimer;
  [*(id *)&v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUITimer] invalidate];
  uint64_t v2 = *(void **)&v0[v1];
  *(void *)&v0[v1] = 0;

  double v3 = CRLLinkViewHostingRep.reloadView.getter();
  uint64_t v4 = OBJC_IVAR____TtC8Freeform32CRLIndeterminateRoundSpinnerView_spinnerLayer;
  uint64_t v5 = *(void **)&v3[OBJC_IVAR____TtC8Freeform32CRLIndeterminateRoundSpinnerView_spinnerLayer];
  if (v5 && ([v5 removeAllAnimations], (id v6 = *(void **)&v3[v4]) != 0))
  {
    [v6 removeFromSuperlayer];
    id v7 = *(void **)&v3[v4];
  }
  else
  {
    id v7 = 0;
  }
  *(void *)&v3[v4] = 0;

  NSString v8 = CRLLinkViewHostingRep.reloadView.getter();
  [v8 setHidden:1];

  id v9 = [v0 interactiveCanvasController];
  [v9 invalidateContentLayersForRep:v0];
}

uint64_t sub_100E13D28()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

char *CRLLinkViewHostingRep.reloadView.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep____lazy_storage___reloadView;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep____lazy_storage___reloadView];
  if (v2)
  {
    double v3 = *(char **)&v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep____lazy_storage___reloadView];
  }
  else
  {
    uint64_t v4 = v0;
    double v5 = sub_100064070();
    double v7 = v6;
    double v9 = v8;
    double v11 = v10;
    id v12 = objc_allocWithZone((Class)type metadata accessor for CRLIndeterminateRoundSpinnerView());
    id v13 = sub_1009A0950((uint64_t)v0, (uint64_t)"cancelReload:", v5, v7, v9, v11);
    v13[OBJC_IVAR____TtC8Freeform32CRLIndeterminateRoundSpinnerView_wantsLinkViewSublayerTransformAdjustedHitTestFrame] = 1;
    [v13 setHidden:1];
    id v14 = *(void **)&v4[v1];
    *(void *)&v4[v1] = v13;
    double v3 = v13;

    uint64_t v2 = 0;
  }
  id v15 = v2;
  return v3;
}

Swift::Void __swiftcall CRLLinkViewHostingRep.resetLinkView()()
{
  uint64_t v1 = CRLLinkViewHostingRep.reloadView.getter();
  [v1 removeFromSuperview];

  uint64_t v2 = OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView;
  double v3 = *(void **)&v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView];
  if (v3)
  {
    CRLLinkViewHostingRep.updateReloadView()();
    double v3 = *(void **)&v0[v2];
  }
  *(void *)&v0[v2] = 0;

  [v0 setNeedsDisplay];
  id v4 = [v0 interactiveCanvasController];
  [v4 invalidateContentLayersForRep:v0];
}

void CRLLinkViewHostingRep.url.getter()
{
  id v1 = [v0 layout];
  id v2 = [v1 info];

  if (!v2) {
    goto LABEL_13;
  }
  swift_getObjectType();
  uint64_t v3 = swift_conformsToProtocol2();
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v3) {
    id v5 = v2;
  }
  else {
    id v5 = 0;
  }
  if (!v5)
  {
    swift_unknownObjectRelease();
LABEL_13:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494);
    __break(1u);
    return;
  }
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);

  swift_unknownObjectRelease();
}

void CRLLinkViewHostingRep.title.getter()
{
  id v1 = [v0 layout];
  id v2 = [v1 info];

  if (v2)
  {
    swift_getObjectType();
    uint64_t v3 = swift_conformsToProtocol2();
    if (v3) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    if (v3) {
      id v5 = v2;
    }
    else {
      id v5 = 0;
    }
    if (v5)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4);
      swift_unknownObjectRelease();
      return;
    }
    swift_unknownObjectRelease();
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494);
  __break(1u);
}

void CRLLinkViewHostingRep.item.getter()
{
  id v1 = [v0 layout];
  id v2 = [v1 info];

  if (!v2) {
    goto LABEL_7;
  }
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }
  if (!v3)
  {
    swift_unknownObjectRelease();
LABEL_7:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494);
    __break(1u);
  }
}

uint64_t CRLLinkViewHostingRep.crlaxCancelReloadAction()()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  id v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v7);
  double v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
  double v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v0;
  aBlock[4] = sub_100E167E0;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = &unk_10152EE00;
  id v12 = _Block_copy(aBlock);
  id v13 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100E167E8((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v16);
}

id CRLLinkViewHostingRep.directlyManagesContentPlatformView.getter()
{
  if (![self isMainThread]) {
    return 0;
  }
  id v1 = [v0 canvas];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = [v1 isCanvasInteractive];

  return v3;
}

void CRLLinkViewHostingRep.contentPlatformView.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView;
  if (!*(void *)(v0 + OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView))
  {
    CRLLinkViewHostingRep.makeLinkView()();
    uint64_t v2 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;

    if (!*(void *)(v0 + v1))
    {
      [objc_allocWithZone((Class)UIView) init];
      return;
    }
  }
  CRLLinkViewHostingRep.updateReloadView()();
  uint64_t v4 = *(void **)(v0 + v1);
  id v5 = v4;
  CRLLinkViewHostingRep.embeddedLabels(in:)(v4);
  unint64_t v7 = v6;

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v8) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v8) {
      goto LABEL_13;
    }
  }
  if (v8 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0) {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v10 = *(id *)(v7 + 8 * i + 32);
    }
    uint64_t v11 = v10;
    [v10 setIsAccessibilityElement:0];
  }
LABEL_13:
  swift_bridgeObjectRelease();
  id v12 = *(void **)(v0 + v1);
  if (v12) {
    id v13 = v12;
  }
}

Swift::Void __swiftcall CRLLinkViewHostingRep.draw(in:)(CGContextRef in)
{
  uint64_t v2 = v1;
  v22.receiver = v1;
  v22.super_class = (Class)type metadata accessor for CRLLinkViewHostingRep();
  [(CGContext *)&v22 drawInContext:in];
  id v4 = [v1 layout];
  id v5 = [v4 info];

  if (v5)
  {
    swift_getObjectType();
    uint64_t v6 = swift_conformsToProtocol2();
    if (v6) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 0;
    }
    if (v6) {
      id v8 = v5;
    }
    else {
      id v8 = 0;
    }
    if (v8)
    {
      uint64_t ObjectType = swift_getObjectType();
      id v10 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(ObjectType, v7);
      swift_unknownObjectRelease();
      uint64_t v11 = *(void *)&v10[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
      uint64_t v12 = *(void *)&v10[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
      sub_10050F848(&v10[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v11);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 64))(v11, v12))
      {
        id v13 = objc_allocWithZone((Class)type metadata accessor for CRLUndownloadedAssetDrawingHelper());
        id v14 = v10;
        id v10 = (char *)sub_100F9BC38(v2, v14);
        sub_100F9BFA8(in);
LABEL_11:

LABEL_19:
        return;
      }
      id v15 = [v2 canvas];
      if (v15)
      {
        uint64_t v16 = v15;
        unsigned __int8 v17 = [v15 isCanvasInteractive];

        if (v17) {
          goto LABEL_19;
        }
        if ([self isMainThread])
        {
          CRLLinkViewHostingRep.generateSnapshotOnMainThread()();
          if (!v18)
          {
            sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"draw(in:)", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 143, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
            uint64_t v19 = "draw(in:)";
            uint64_t v20 = 9;
            uint64_t v21 = 143;
LABEL_18:
            sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)v19, v20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, v21);
            goto LABEL_19;
          }
        }
        else
        {
          CRLLinkViewHostingRep.generateSnapshotSynchronously()();
          if (!v18)
          {
            sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"draw(in:)", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 146, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
            uint64_t v19 = "draw(in:)";
            uint64_t v20 = 9;
            uint64_t v21 = 146;
            goto LABEL_18;
          }
        }
        id v14 = v18;
        CRLLinkViewHostingRep.draw(image:ctx:)(v18, in);
        goto LABEL_11;
      }
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isForPrintingOrThumbnailing", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 152, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      uint64_t v19 = "isForPrintingOrThumbnailing";
      uint64_t v20 = 27;
      uint64_t v21 = 152;
      goto LABEL_18;
    }
    swift_unknownObjectRelease();
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494);
  __break(1u);
}

Swift::Int sub_100E14E64(uint64_t a1, void *a2, uint64_t a3)
{
  if (a2 && a2[2])
  {
    uint64_t v5 = a2[4];
    unint64_t v6 = a2[5];
    id v7 = objc_allocWithZone((Class)CRLImage);
    sub_100510D4C(v5, v6);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    id v9 = [v7 initWithData:isa];

    if (v9)
    {
      id v10 = (void **)(a3 + 16);
      id v11 = [v9 CGImage];
      sub_100510084(v5, v6);

      swift_beginAccess();
      uint64_t v12 = *v10;
      *id v10 = v11;

      return OS_dispatch_semaphore.signal()();
    }
    sub_100510084(v5, v6);
  }
  if (a1)
  {
    swift_errorRetain();
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v13 = (void *)static OS_os_log.crlDefault;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    swift_errorRetain();
    id v15 = v13;
    sub_1005057FC(&qword_101672BD0);
    uint64_t v16 = String.init<A>(describing:)();
    uint64_t v18 = v17;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v16;
    *(void *)(inited + 40) = v18;
    uint64_t v19 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v19, (uint64_t)"Error generating URL snapshot: %@", 33, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    swift_errorRelease();
  }
  return OS_dispatch_semaphore.signal()();
}

uint64_t sub_100E1509C(uint64_t a1, void *a2, uint64_t a3)
{
  id v4 = *(void (**)(void *, uint64_t))(a1 + 32);
  if (a3) {
    uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a2;
  v4(a2, v5);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_100E15130()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    CRLLinkViewHostingRep.showReloadUI()();
  }
}

void sub_100E15184()
{
}

uint64_t sub_100E1518C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100E1519C()
{
  return swift_release();
}

Swift::Void __swiftcall CRLLinkViewHostingRep.handleFadeOutForZoom()()
{
  v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_isZooming] = 1;
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for CRLLinkViewHostingRep();
  [super handleFadeOutForZoom];
  if (v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUIIsActive] == 1)
  {
    uint64_t v1 = CRLLinkViewHostingRep.reloadView.getter();
    unsigned int v2 = [v1 isHidden];

    if (v2)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"handleFadeOutForZoom()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 504, (uint64_t)"Trying to fade out while reload view is hidden.", 47, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"handleFadeOutForZoom()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 504);
    }
    uint64_t v3 = CRLLinkViewHostingRep.reloadView.getter();
    id v4 = [v3 layer];

    if (v4)
    {
      id v5 = v4;
      sub_100B43BE4(0.15);
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"handleFadeOutForZoom()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 506, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"handleFadeOutForZoom()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 506);
    }
  }
}

Swift::Void __swiftcall CRLLinkViewHostingRep.handleFadeInForZoom()()
{
  v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_isZooming] = 0;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for CRLLinkViewHostingRep();
  [super handleFadeInForZoom];
  if (v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUIIsActive] == 1)
  {
    uint64_t v1 = CRLLinkViewHostingRep.reloadView.getter();
    id v2 = [v1 layer];

    if (v2)
    {
      id v3 = v2;
      sub_100B43D18(0.15);
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"handleFadeInForZoom()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 517, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"handleFadeInForZoom()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 517);
    }
  }
}

Swift::Void __swiftcall CRLLinkViewHostingRep.viewScaleDidChange()()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for CRLLinkViewHostingRep();
  [super viewScaleDidChange];
  id v1 = [v0 canvas];
  if (v1)
  {
    id v2 = v1;
    id v3 = *(void **)&v0[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView];
    if (v3)
    {
      objc_super v4 = v3;
      [v2 viewScale];
      *(void *)&v4[OBJC_IVAR____TtC8Freeform11CRLLinkView_viewScale] = v5;
      sub_1009EDA0C();
      CRLLinkViewHostingRep.updateReloadView()();
    }
  }
}

Swift::Void __swiftcall CRLLinkViewHostingRep.dynamicallyRotating(with:)(CRLCanvasRepRotateTracker *with)
{
  id v3 = *(void **)&v1[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView];
  if (v3)
  {
    id v4 = v3;
    sub_1009EDA0C();
    CRLLinkViewHostingRep.updateReloadView()();
  }
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for CRLLinkViewHostingRep();
  [(CRLCanvasRepRotateTracker *)&v5 dynamicallyRotatingWithTracker:with];
}

Swift::Void __swiftcall CRLLinkViewHostingRep.willUpdate(_:)(CRLCanvasRenderable_optional a1)
{
  Class isa = a1.value.super.isa;
  id v3 = *(void **)&v1[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView];
  if (v3)
  {
    id v4 = v3;
    sub_1009EDA0C();
    CRLLinkViewHostingRep.updateReloadView()();
  }
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for CRLLinkViewHostingRep();
  [super willUpdateRenderable:isa];
}

void sub_100E157FC(char *a1, uint64_t a2, void *a3, SEL *a4)
{
  id v7 = *(void **)&a1[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView];
  id v8 = a3;
  if (v7)
  {
    a1;
    id v9 = v7;
    sub_1009EDA0C();
    CRLLinkViewHostingRep.updateReloadView()();
  }
  else
  {
    id v10 = a1;
  }
  v11.receiver = a1;
  v11.super_class = (Class)type metadata accessor for CRLLinkViewHostingRep();
  [super a3];
}

Swift::Void __swiftcall CRLLinkViewHostingRep.drawInContextWithoutEffectsForAlphaOnly(_:)(CGContextRef a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for CGPathFillRule();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  id v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = *(char **)&v2[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView];
  if (v9)
  {
    id v10 = *(void **)&v9[OBJC_IVAR____TtC8Freeform11CRLLinkView_wrappedLinkView];
    objc_super v11 = v9;
    if (([v10 _applyCornerRadius] & 1) == 0)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"drawInContextWithoutEffectsForAlphaOnly(_:)", 43, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 601, (uint64_t)"Expected _applyCornerRadius to be true.", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"drawInContextWithoutEffectsForAlphaOnly(_:)", 43, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 601);
    }
    [v10 _effectiveCornerRadius];
    double v13 = v12;
  }
  else
  {
    double v13 = 10.0;
  }
  id v14 = [self blackColor];
  id v15 = (CGColor *)[v14 CGColor];

  CGContextSetFillColorWithColor(a1, v15);
  [v2 naturalBounds];
  id v20 = [self bezierPathWithContinuousCornerRoundedRect:v16 cornerRadius:v17 v18 v19 v13];
  uint64_t v21 = (const CGPath *)[v20 CGPath];
  if (v21)
  {
    objc_super v22 = v21;
    CGContextAddPath(a1, v21);

    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for CGPathFillRule.winding(_:), v4);
    CGContextRef.fillPath(using:)();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  else
  {
    __break(1u);
  }
}

uint64_t CRLLinkViewHostingRep.accessibilityCustomActions.getter()
{
  v17.receiver = v0;
  v17.super_class = (Class)type metadata accessor for CRLLinkViewHostingRep();
  [super accessibilityCustomActions];
  if (v1)
  {
    id v2 = v1;
    sub_10050BF48(0, &qword_10167AE48);
    uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v3 = 0;
  }
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUIIsActive) == 1)
  {
    id v4 = [self mainBundle];
    NSString v5 = String._bridgeToObjectiveC()();
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v4 localizedStringForKey:v5 value:v6 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v9 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
    swift_retain();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v16[4] = sub_100E166EC;
    v16[5] = v8;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = *(void *)"";
    v16[2] = sub_100E16228;
    v16[3] = &unk_10152EDB0;
    objc_super v11 = _Block_copy(v16);
    id v12 = [v9 initWithName:v10 actionHandler:v11];

    _Block_release(v11);
    swift_release();
    swift_release();
    if (v3)
    {
      v16[0] = v3;
      id v13 = v12;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v16[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_101177E70;
      *(void *)(v14 + 32) = v12;
      v16[0] = v14;
      specialized Array._endMutation()();
    }
    return v16[0];
  }
  return v3;
}

uint64_t sub_100E15FBC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    CRLLinkViewHostingRep.crlaxCancelReloadAction()();
  }
  return 1;
}

uint64_t sub_100E16014(void *a1)
{
  v5[3] = type metadata accessor for CRLLinkViewHostingRep();
  v5[0] = a1;
  id v2 = *(void (**)(void *))((swift_isaMask & *a1) + 0x178);
  uint64_t v3 = a1;
  v2(v5);
  return sub_100522F00((uint64_t)v5, &qword_101672BF0);
}

id CRLLinkViewHostingRep.__allocating_init(layout:canvas:)(void *a1, void *a2)
{
  id v5 = [objc_allocWithZone(v2) initWithLayout:a1 canvas:a2];

  return v5;
}

id CRLLinkViewHostingRep.init(layout:canvas:)(void *a1, void *a2)
{
  id v4 = sub_100E166F4((uint64_t)a1, (uint64_t)a2);

  return v4;
}

id CRLLinkViewHostingRep.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLLinkViewHostingRep();
  return [super dealloc];
}

uint64_t sub_100E16228(uint64_t a1, void *a2)
{
  uint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

uint64_t type metadata accessor for CRLLinkViewHostingRep()
{
  return self;
}

void _s8Freeform21CRLLinkViewHostingRepC15handleDoubleTap2at9inputTypeSbSo7CGPointV_So08CRLInputK0VtF_0()
{
  uint64_t v1 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v1 - 8, v2);
  id v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)&double v8 = __chkstk_darwin(v5, v7).n128_u64[0];
  NSString v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [v0 layout:v8];
  id v12 = [v11 info];

  if (!v12) {
    goto LABEL_16;
  }
  swift_getObjectType();
  uint64_t v13 = swift_conformsToProtocol2();
  if (v13) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v13) {
    id v15 = v12;
  }
  else {
    id v15 = 0;
  }
  if (!v15)
  {
    swift_unknownObjectRelease();
LABEL_16:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 494);
    __break(1u);
    return;
  }
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(ObjectType, v14);
  swift_unknownObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100522F00((uint64_t)v4, &qword_101672E90);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v4, v5);
    if (URL.isFileURL.getter())
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"handleDoubleTap(at:inputType:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 582, (uint64_t)"Unexpected file URL in our URL object!", 38, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"handleDoubleTap(at:inputType:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkViewHostingRep.swift", 92, 2, 582);
    }
    else
    {
      id v17 = [self sharedApplication];
      URL._bridgeToObjectiveC()(v18);
      id v20 = v19;
      sub_100A3B668((uint64_t)_swiftEmptyArrayStorage);
      type metadata accessor for OpenExternalURLOptionsKey(0);
      sub_100E167E8((unint64_t *)&qword_101671788, type metadata accessor for OpenExternalURLOptionsKey);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v17 openURL:v20 options:isa completionHandler:0];
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  }
}

uint64_t sub_100E166EC()
{
  return sub_100E15FBC();
}

id sub_100E166F4(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView] = 0;
  v2[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadViewHiddenBecauseTooSmall] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUITimer] = 0;
  v2[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadUIIsActive] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep____lazy_storage___reloadView] = 0;
  *(int64x2_t *)&v2[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_reloadViewSize] = vdupq_n_s64(0x404A800000000000uLL);
  v2[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_isZooming] = 0;
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for CRLLinkViewHostingRep();
  return [super initWithLayout:a1 canvas:a2];
}

uint64_t sub_100E167A8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100E167E0()
{
  return sub_100E16014(*(void **)(v0 + 16));
}

uint64_t sub_100E167E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100E16830()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

Swift::Int sub_100E16870(uint64_t a1, void *a2)
{
  return sub_100E14E64(a1, a2, *(void *)(v2 + 16));
}

uint64_t CRLAsyncStreamProperty.__allocating_init(wrappedValue:)(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_allocObject();
  uint64_t v5 = sub_100E17014(a1, v4);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v2 + 80) - 8) + 8))(a1);
  return v5;
}

uint64_t CRLAsyncStreamProperty.ProjectedValue.values.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(void *)(*(void *)a1 + 96);
  uint64_t v4 = type metadata accessor for AsyncStream();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, v3, v4);
}

uint64_t CRLAsyncStreamProperty.init(wrappedValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = sub_100E17014(a1, a2);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v4 + 80) - 8) + 8))(a1);
  return v5;
}

uint64_t sub_100E16A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AsyncStream.Continuation();
  uint64_t v5 = type metadata accessor for Optional();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  uint64_t v8 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a2, a1, v4);
  objc_super v6 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56);

  return v6(a2, 0, 1, v4);
}

uint64_t *CRLAsyncStreamProperty.deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = (uint64_t)v0 + *(void *)(*v0 + 104);
  uint64_t v4 = *(void *)(v2 + 80);
  uint64_t v5 = type metadata accessor for AsyncStream.Continuation();
  AsyncStream.Continuation.finish()();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))((uint64_t)v1 + *(void *)(*v1 + 88), v4);
  uint64_t v6 = (uint64_t)v1 + *(void *)(*v1 + 96);
  uint64_t v7 = type metadata accessor for AsyncStream();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v3, v5);
  swift_release();
  return v1;
}

uint64_t CRLAsyncStreamProperty.__deallocating_deinit()
{
  CRLAsyncStreamProperty.deinit();

  return swift_deallocClassInstance();
}

uint64_t CRLAsyncStreamProperty.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 88);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t CRLAsyncStreamProperty.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  sub_100E174BC(a1, a2);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v4 + 80) - 8) + 8);

  return v5(a1);
}

void (*CRLAsyncStreamProperty.wrappedValue.modify(void *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  uint64_t v7 = malloc(v6);
  v3[4] = v7;
  CRLAsyncStreamProperty.wrappedValue.getter((uint64_t)v7);
  return sub_100E16EB0;
}

void sub_100E16EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  uint64_t v5 = *(void *)(*(void *)a1 + 8);
  uint64_t v6 = *(void *)(*(void *)a1 + 16);
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    sub_100E174BC((uint64_t)v3, v7);
    uint64_t v8 = *(void (**)(void *, uint64_t))(v6 + 8);
    v8(v3, v5);
    v8(v4, v5);
  }
  else
  {
    sub_100E174BC(*(void *)(*(void *)a1 + 32), a2);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);

  free(v2);
}

uint64_t CRLAsyncStreamProperty.ProjectedValue.publisher()()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t sub_100E17014(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = a1;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v37 = (char *)&v35 - v7;
  uint64_t v41 = type metadata accessor for AsyncStream.Continuation.BufferingPolicy();
  uint64_t v8 = *(void *)(v41 - 8);
  __chkstk_darwin(v41, v9);
  id v11 = (uint64_t *)((char *)&v35 - v10);
  uint64_t v12 = type metadata accessor for AsyncStream();
  uint64_t v39 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v13);
  CGFloat v42 = (char *)&v35 - v14;
  uint64_t v15 = type metadata accessor for AsyncStream.Continuation();
  uint64_t v43 = type metadata accessor for Optional();
  uint64_t v40 = *(void *)(v43 - 8);
  __chkstk_darwin(v43, v16);
  double v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v21 = __chkstk_darwin(v19, v20);
  uint64_t v23 = (char *)&v35 - v22;
  uint64_t v24 = (uint64_t)v3 + *(void *)(v4 + 88);
  long long v25 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v38 = v6 + 16;
  id v36 = v25;
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v25)(v24, v44, v5, v21);
  uint64_t v26 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v23, 1, 1, v15);
  *id v11 = 1;
  uint64_t v27 = v39;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v11, enum case for AsyncStream.Continuation.BufferingPolicy.bufferingNewest<A>(_:), v41);
  CATransform3D v28 = v42;
  uint64_t v45 = v5;
  uint64_t v46 = v23;
  AsyncStream.init(_:bufferingPolicy:_:)();
  uint64_t v29 = (uint64_t)v3 + *(void *)(*v3 + 96);
  CGRect v30 = *(void (**)(uint64_t, char *, uint64_t))(v27 + 16);
  uint64_t v41 = v12;
  uint64_t v31 = v12;
  uint64_t v32 = v40;
  v30(v29, v28, v31);
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v18, v23, v43);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v18, 1, v15);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))((uint64_t)v3 + *(void *)(*v3 + 104), v18, v15);
    type metadata accessor for CurrentValueSubject();
    v36(v37, v44, v5);
    uint64_t v34 = CurrentValueSubject.__allocating_init(_:)();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v42, v41);
    *(uint64_t *)((char *)v3 + *(void *)(*v3 + 112)) = v34;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v23, v43);
    return (uint64_t)v3;
  }
  return result;
}

uint64_t sub_100E174BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void *)(v5 + 80);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = type metadata accessor for AsyncStream.Continuation.YieldResult();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v17 - v13;
  uint64_t v15 = (char *)v3 + *(void *)(v5 + 88);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 24))(v15, a1, v6);
  swift_endAccess();
  CurrentValueSubject.send(_:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  type metadata accessor for AsyncStream.Continuation();
  AsyncStream.Continuation.yield(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t sub_100E176DC()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = type metadata accessor for AsyncStream();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      uint64_t v0 = type metadata accessor for AsyncStream.Continuation();
      if (v4 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return v0;
}

uint64_t type metadata accessor for CRLAsyncStreamProperty()
{
  return sub_100568E70();
}

uint64_t type metadata accessor for CRLAsyncStreamProperty.ProjectedValue()
{
  return sub_100568E70();
}

uint64_t sub_100E17848(uint64_t a1)
{
  return sub_100E16A0C(a1, *(void *)(v1 + 24));
}

uint64_t sub_100E17850(unint64_t a1)
{
  return sub_100E17ABC(a1, (uint64_t (*)(unint64_t))sub_1006B99A4, sub_100F68540);
}

void sub_100E1787C(unint64_t a1)
{
  uint64_t v2 = _s13ItemViewModelVMa();
  uint64_t v16 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v17 = (uint64_t)&v16 - v8;
  unint64_t v9 = *(void *)(a1 + 16);
  if (v9 < 2) {
    return;
  }
  unint64_t v10 = 0;
  unint64_t v11 = v9 >> 1;
  for (unint64_t i = v9 - 1; ; --i)
  {
    if (v10 == i) {
      goto LABEL_4;
    }
    unint64_t v13 = *(void *)(a1 + 16);
    if (v10 >= v13) {
      break;
    }
    unint64_t v14 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v15 = *(void *)(v16 + 72);
    sub_100E19584(a1 + v14 + v15 * v10, v17, (uint64_t (*)(void))_s13ItemViewModelVMa);
    if (i >= v13) {
      goto LABEL_14;
    }
    sub_100E19584(a1 + v14 + v15 * i, (uint64_t)v5, (uint64_t (*)(void))_s13ItemViewModelVMa);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a1 = sub_100F6871C(a1);
    }
    if (v10 >= *(void *)(a1 + 16)) {
      goto LABEL_15;
    }
    sub_100E195EC((uint64_t)v5, a1 + v14 + v15 * v10);
    if (i >= *(void *)(a1 + 16)) {
      goto LABEL_16;
    }
    sub_100E195EC(v17, a1 + v14 + v15 * i);
LABEL_4:
    if (v11 == ++v10) {
      return;
    }
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
}

uint64_t sub_100E17A64(unint64_t a1)
{
  return sub_100E17ABC(a1, (uint64_t (*)(unint64_t))sub_1006BA708, sub_100F68540);
}

uint64_t sub_100E17A90(unint64_t a1)
{
  return sub_100E17ABC(a1, (uint64_t (*)(unint64_t))sub_1006BA86C, sub_100F68540);
}

uint64_t sub_100E17ABC(unint64_t a1, uint64_t (*a2)(unint64_t), uint64_t (*a3)(uint64_t))
{
  unint64_t v4 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0) {
    goto LABEL_39;
  }
  uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  uint64_t v21 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v5 & 0x4000000000000000) == 0)
  {
    uint64_t v6 = *(void *)(v5 + 16);
    swift_bridgeObjectRelease();
    unint64_t v7 = (unint64_t)v6 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    swift_retain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v20 = v6 >= 0 ? v6 : v6 + 1;
    if (v6 < -1) {
      __break(1u);
    }
    unint64_t v7 = v20 >> 1;
LABEL_6:
    if ((unint64_t)(v6 + 1) < 3) {
      return v5;
    }
    unint64_t v8 = 0;
    while (1)
    {
      unint64_t v10 = v8 + 1;
      unint64_t v4 = v6 - (v8 + 1);
      if (__OFSUB__(v6, v8 + 1)) {
        break;
      }
      if (v8 != v4)
      {
        uint64_t v11 = v21;
        if ((v21 & 0xC000000000000001) != 0)
        {
          uint64_t v14 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v8 & 0x8000000000000000) != 0) {
            goto LABEL_33;
          }
          unint64_t v12 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v8 >= v12) {
            goto LABEL_34;
          }
          id v13 = *(id *)(v21 + 8 * v8 + 32);
          if ((v4 & 0x8000000000000000) != 0) {
            goto LABEL_35;
          }
          if (v4 >= v12) {
            goto LABEL_37;
          }
          uint64_t v14 = (uint64_t)v13;
          id v15 = *(id *)(v21 + 32 + 8 * v4);
        }
        id v16 = v15;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v21 < 0
          || (v21 & 0x4000000000000000) != 0)
        {
          uint64_t v11 = a3(v21);
          uint64_t v21 = v11;
        }
        uint64_t v17 = (v11 & 0xFFFFFFFFFFFFFF8) + 8 * v8;

        *(void *)(v17 + 32) = v16;
        specialized Array._endMutation()();
        uint64_t v18 = v21;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v21 < 0
          || (v21 & 0x4000000000000000) != 0)
        {
          uint64_t v18 = a3(v21);
          uint64_t v21 = v18;
        }
        if ((v4 & 0x8000000000000000) != 0) {
          goto LABEL_36;
        }
        if (v4 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_38;
        }
        uint64_t v9 = (v18 & 0xFFFFFFFFFFFFFF8) + 8 * v4;

        *(void *)(v9 + 32) = v14;
        specialized Array._endMutation()();
      }
      unint64_t v8 = v10;
      if (v7 == v10) {
        return v21;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    uint64_t v5 = a2(v4);
    uint64_t v21 = v5;
    if ((v5 & 0x8000000000000000) == 0) {
      goto LABEL_4;
    }
  }
}

uint64_t sub_100E17CF0(uint64_t a1)
{
  v2[14] = a1;
  v2[15] = v1;
  uint64_t v3 = type metadata accessor for Date();
  v2[16] = v3;
  v2[17] = *(void *)(v3 - 8);
  v2[18] = swift_task_alloc();
  type metadata accessor for CRLBoardCRDTData(0);
  v2[19] = swift_task_alloc();
  type metadata accessor for UUID();
  v2[20] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v2[21] = swift_task_alloc();
  return _swift_task_switch(sub_100E17E34, 0, 0);
}

uint64_t sub_100E17E34()
{
  unint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  sub_100E18360(v2);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_editingCoordinator);
  uint64_t v4 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  v0[22] = v3;
  v0[23] = v4;
  uint64_t v5 = *(void **)(*(void *)(v3 + v4) + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  inserted = (objc_class *)type metadata accessor for CRLCommandInsertBoardItems();
  id v7 = objc_allocWithZone(inserted);
  sub_1005057FC((uint64_t *)&unk_101683E00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v9 = v5;
  swift_bridgeObjectRetain();
  *(void *)(inited + 32) = NSNotFound.getter();
  *(void *)(inited + 40) = v2;
  unint64_t v10 = sub_100A45CB0((void *)inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_10169DFA0);
  swift_arrayDestroy();
  id v11 = objc_allocWithZone(inserted);
  v0[24] = sub_100A4BD64(v9, v10);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  unint64_t v12 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController);
  v0[25] = v12;
  type metadata accessor for MainActor();
  id v13 = v12;
  v0[26] = static MainActor.shared.getter();
  uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100E17FFC, v15, v14);
}

uint64_t sub_100E17FFC()
{
  uint64_t v1 = *(void *)(v0 + 200);
  unint64_t v2 = *(void **)(v0 + 192);
  swift_release();
  uint64_t v3 = (double **)(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_nonUserCommandQueue);
  swift_beginAccess();
  uint64_t v4 = *v3;
  id v5 = v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v4 = sub_100F62618(0, *((void *)v4 + 2) + 1, 1, v4);
    *uint64_t v3 = v4;
  }
  unint64_t v8 = *((void *)v4 + 2);
  unint64_t v7 = *((void *)v4 + 3);
  if (v8 >= v7 >> 1)
  {
    uint64_t v4 = sub_100F62618((double *)(v7 > 1), v8 + 1, 1, v4);
    *uint64_t v3 = v4;
  }
  uint64_t v9 = *(void *)(v0 + 192);
  unint64_t v10 = *(void **)(v0 + 200);
  *((void *)v4 + 2) = v8 + 1;
  id v11 = &v4[2 * v8];
  *((void *)v11 + 4) = v9;
  *((unsigned char *)v11 + 40) = 1;
  swift_endAccess();
  sub_10078F194();

  return _swift_task_switch(sub_100E18134, 0, 0);
}

uint64_t sub_100E18134()
{
  uint64_t v1 = v0[21];
  uint64_t v15 = v0[20];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[19];
  uint64_t v16 = v0[17];
  uint64_t v17 = v0[16];
  uint64_t v18 = (void *)v0[24];
  uint64_t v4 = *(char **)(v0[22] + v0[23]);
  [v4 savePendingChanges];
  id v5 = *(void **)&v4[OBJC_IVAR____TtC8Freeform8CRLBoard_store];
  uint64_t v6 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v7 = *(void *)&v4[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100E19584(v7, v3, type metadata accessor for CRLBoardCRDTData);
  id v8 = v5;
  uint64_t v14 = v4;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_1005387C0(v3, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v9 = (uint64_t *)(*(void *)&v4[v6] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  swift_bridgeObjectRetain();
  sub_100753370(v15, v10, v11, v1);

  static Date.now.getter();
  sub_100C74E7C(v1, v2, 0, 0);

  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v2, v17);
  sub_1005387C0(v1, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_100E18360(unint64_t a1)
{
  uint64_t v142 = sub_1005057FC(&qword_10169A100);
  __chkstk_darwin(v142, v7);
  unint64_t v141 = (void (**)(uint64_t, void *))((char *)&v134 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9, v10);
  *(void *)&long long v140 = (char *)&v134 - v11;
  __chkstk_darwin(v12, v13);
  unint64_t v139 = (char *)&v134 - v14;
  __chkstk_darwin(v15, v16);
  uint64_t v138 = (char *)&v134 - v17;
  uint64_t v18 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_canvas);
  unint64_t v19 = *(void *)(*(void *)(*(void *)(*(void *)(v1
                                                      + OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_editingCoordinator)
                                          + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                              + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer)
                  + OBJC_IVAR____TtC8Freeform16CRLContainerItem_items);
  uint64_t v20 = *(char **)(v19 + 16);
  if (!v20)
  {
LABEL_24:
    uint64_t v142 = sub_1005057FC(&qword_101673060);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v18 setInfosToDisplay:isa];

    [v18 nonInteractiveLayoutIfNeeded];
    [v18 unscaledRectOfLayouts];
    CGFloat v2 = v51;
    CGFloat v3 = v52;
    CGFloat v4 = v53;
    CGFloat v5 = v54;
    BOOL v55 = sub_1003E8750();
    swift_bridgeObjectRetain();
    if (!v55) {
      a1 = sub_100E17ABC(a1, (uint64_t (*)(unint64_t))sub_1006B9DEC, sub_100F68540);
    }
    if (a1 >> 62) {
      goto LABEL_66;
    }
    uint64_t v56 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v56) {
      goto LABEL_28;
    }
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v134 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_canvas);
  unint64_t v143 = a1;
  aBlock = (void **)_swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  specialized ContiguousArray.reserveCapacity(_:)();
  uint64_t v21 = sub_10058EAB4(v19);
  if (v21 < 0 || (unint64_t v23 = v21, v21 >= 1 << *(unsigned char *)(v19 + 32)))
  {
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRelease();
    a1 = v143;
    uint64_t v18 = v134;
    goto LABEL_24;
  }
  uint64_t v24 = 0;
  Class v25 = (Class)(v19 + 64);
  uint64_t v144 = v19 + 80;
  unint64_t v148 = v19;
  Swift::Int v135 = v20;
  uint64_t v136 = v22;
  Class v137 = (Class)(v19 + 64);
  uint64_t v26 = v140;
  while (1)
  {
    unint64_t v27 = v23 >> 6;
    if ((*((void *)v25 + (v23 >> 6)) & (1 << v23)) == 0) {
      break;
    }
    if (*(_DWORD *)(v19 + 36) != v22) {
      goto LABEL_61;
    }
    uint64_t v146 = 1 << v23;
    uint64_t v145 = v24;
    uint64_t v28 = v142;
    uint64_t v29 = *(int *)(v142 + 48);
    uint64_t v30 = *(void *)(v148 + 48);
    uint64_t v31 = type metadata accessor for UUID();
    uint64_t v147 = *(void **)(v31 - 8);
    uint64_t v32 = v30 + v147[9] * v23;
    uint64_t v33 = (void (*)(char *, uint64_t, uint64_t))v147[2];
    uint64_t v34 = v138;
    v33(v138, v32, v31);
    uint64_t v35 = *(void **)(*(void *)(v148 + 56) + 8 * v23);
    *(void *)&v34[v29] = v35;
    uint64_t v36 = (uint64_t)v139;
    v33(v139, (uint64_t)v34, v31);
    *(void *)(v36 + *(int *)(v28 + 48)) = v35;
    sub_100A0306C(v36, v26);
    id v37 = v35;
    sub_100E194AC((uint64_t)v34);
    uint64_t v38 = *(int *)(v28 + 48);
    uint64_t v39 = v141;
    v33((char *)v141, v26, v31);
    uint64_t v40 = *(void (**)(uint64_t, void *))(v26 + v38);
    *(void (**)(uint64_t, void *))((char *)v39 + v38) = v40;
    uint64_t v41 = (void (*)(void, uint64_t))v147[1];
    a1 = v40;
    v41(v39, v31);
    unint64_t v19 = v148;
    sub_100E194AC(v26);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    uint64_t v42 = 1 << *(unsigned char *)(v19 + 32);
    if ((uint64_t)v23 >= v42) {
      goto LABEL_62;
    }
    Class v25 = v137;
    uint64_t v43 = *((void *)v137 + v27);
    if ((v43 & v146) == 0) {
      goto LABEL_63;
    }
    LODWORD(v22) = v136;
    if (*(_DWORD *)(v19 + 36) != v136) {
      goto LABEL_64;
    }
    unint64_t v44 = v43 & (-2 << (v23 & 0x3F));
    if (v44)
    {
      unint64_t v23 = __clz(__rbit64(v44)) | v23 & 0xFFFFFFFFFFFFFFC0;
      uint64_t v45 = v135;
      uint64_t v46 = v145;
    }
    else
    {
      unint64_t v47 = v27 + 1;
      unint64_t v48 = (unint64_t)(v42 + 63) >> 6;
      uint64_t v45 = v135;
      uint64_t v46 = v145;
      if (v27 + 1 >= v48) {
        goto LABEL_18;
      }
      unint64_t v49 = *((void *)v137 + v47);
      if (!v49)
      {
        while (v48 - 2 != v27)
        {
          unint64_t v49 = *(void *)(v144 + 8 * v27++);
          if (v49)
          {
            unint64_t v47 = v27 + 1;
            goto LABEL_17;
          }
        }
LABEL_18:
        unint64_t v23 = 1 << *(unsigned char *)(v19 + 32);
        goto LABEL_19;
      }
LABEL_17:
      unint64_t v23 = __clz(__rbit64(v49)) + (v47 << 6);
    }
LABEL_19:
    uint64_t v24 = v46 + 1;
    if (v24 == v45) {
      goto LABEL_23;
    }
    if ((v23 & 0x8000000000000000) != 0 || (uint64_t)v23 >= v42) {
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v56 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_28:
  if (v56 >= 1)
  {
    uint64_t v58 = 0;
    unint64_t v148 = a1 & 0xC000000000000001;
    uint64_t v147 = (void *)(a1 + 32);
    uint64_t v144 = a1 & 0xFFFFFFFFFFFFFF8;
    unint64_t v141 = &v151;
    CGSize v59 = &selRef_p_updateTitlesPageControlAndBottomViewColorsInDarkUI_;
    long long v140 = xmmword_101177E70;
    unint64_t v139 = *(char **)"";
    uint64_t v145 = (char *)&type metadata for Any + 8;
    unint64_t v143 = a1;
    uint64_t v146 = v56;
    while (1)
    {
      while (!v148)
      {
        uint64_t v67 = (id)v147[v58];
        if (v58)
        {
          if ((unint64_t)(v58 - 1) >= *(void *)(v144 + 16)) {
            goto LABEL_65;
          }
          uint64_t v68 = (id)v147[v58 - 1];
          goto LABEL_40;
        }
LABEL_46:
        uint64_t v96 = swift_allocObject();
        *(void *)(v96 + 16) = 0;
        *(void *)(v96 + 24) = 0;
        uint64_t v97 = *(uint64_t (**)(void))((swift_isaMask & *v67) + 0xE0);
        uint64_t v98 = (void *)v97();
        [v98 v59[331]];
        double v100 = v99;
        double v102 = v101;

        if (v100 == 0.0 && v102 == 0.0)
        {
          uint64_t v103 = (void *)v97();
          [v103 size];
          double v105 = v104;
          double v107 = v106;

          if (v105 == 0.0 && v107 == 0.0)
          {
            long long v108 = self;
            sub_1005057FC((uint64_t *)&unk_101676C10);
            uint64_t v109 = swift_allocObject();
            *(_OWORD *)(v109 + 16) = v140;
            *(void *)(v109 + 32) = v67;
            aBlock = (void **)v109;
            swift_retain();
            specialized Array._endMutation()();
            long long v110 = v67;
            Class v111 = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            uint64_t v112 = (void *)swift_allocObject();
            v112[2] = sub_100E1951C;
            v112[3] = v96;
            v112[4] = v110;
            double v153 = sub_100E19650;
            double v154 = v112;
            aBlock = _NSConcreteStackBlock;
            uint64_t v150 = v139;
            uint64_t v151 = sub_10051CE64;
            unint64_t v152 = &unk_10152F020;
            uint64_t v113 = _Block_copy(&aBlock);
            uint64_t v114 = v110;
            swift_retain();
            uint64_t v56 = v146;
            swift_release();
            [v108 temporaryLayoutControllerForInfos:v111 useInBlock:v113];
            uint64_t v115 = v113;
            CGSize v59 = &selRef_p_updateTitlesPageControlAndBottomViewColorsInDarkUI_;
            _Block_release(v115);
            swift_release();

            swift_beginAccess();
          }
        }
        double v116 = *(double *)(v96 + 16);
        uint64_t v117 = swift_release();
        uint64_t v118 = (void *)((uint64_t (*)(uint64_t))v97)(v117);
        [v118 mutableCopy];

        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
        sub_1009DD894();
        if (swift_dynamicCast())
        {
          uint64_t v119 = v155;
          BOOL v120 = sub_1003E8750();
          CGFloat v121 = v2;
          CGFloat v122 = v3;
          CGFloat v123 = v4;
          CGFloat v124 = v5;
          if (v120)
          {
            double v125 = v116 + CGRectGetMaxX(*(CGRect *)&v121);
            [v119 size];
            double v127 = v125 + v126 * 0.5;
            double v128 = 50.0;
          }
          else
          {
            CGFloat v129 = CGRectGetMinX(*(CGRect *)&v121) - v116;
            [v119 size];
            double v127 = v129 + v130 * -0.5;
            double v128 = -50.0;
          }
          double v131 = v127 + v128;
          sub_100065738(v2, v3, v4, v5);
          [v119 setCenter:v131];
          BOOL v132 = *(void (**)(void))((swift_isaMask & *v67) + 0xE8);
          id v133 = v119;
          v132();
        }
        else
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"position(_:relativeTo:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibraryHeadlessController.swift", 105, 2, 75, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"position(_:relativeTo:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibraryHeadlessController.swift", 105, 2, 75);
        }
        uint64_t v58 = 1;
        a1 = v143;
        if (v56 == 1) {
          return swift_bridgeObjectRelease_n();
        }
      }
      uint64_t v67 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      if (!v58) {
        goto LABEL_46;
      }
      uint64_t v68 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_40:
      int v69 = v68;
      ++v58;
      uint64_t v70 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v68) + 0xE0))();
      id v71 = [v70 v59[331]];
      double v73 = v72;
      double v75 = v74;
      uint64_t v76 = *(uint64_t (**)(void))((swift_isaMask & *v67) + 0xE0);
      uint64_t v77 = (void *)((uint64_t (*)(id))v76)(v71);
      [v77 mutableCopy];

      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_1009DD894();
      if (swift_dynamicCast())
      {
        uint64_t v78 = v155;
        uint64_t v79 = swift_allocObject();
        *(void *)(v79 + 16) = 0;
        *(void *)(v79 + 24) = 0;
        uint64_t v80 = (void *)v76();
        [v80 position];
        double v82 = v81;
        double v84 = v83;

        if (v82 == 0.0 && v84 == 0.0)
        {
          uint64_t v85 = (void *)v76();
          [v85 size];
          double v87 = v86;
          double v89 = v88;

          if (v87 == 0.0 && v89 == 0.0)
          {
            uint64_t v138 = (char *)self;
            sub_1005057FC((uint64_t *)&unk_101676C10);
            uint64_t v90 = swift_allocObject();
            *(_OWORD *)(v90 + 16) = v140;
            *(void *)(v90 + 32) = v67;
            aBlock = (void **)v90;
            swift_retain();
            specialized Array._endMutation()();
            uint64_t v91 = v67;
            Class v137 = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            int v92 = (void *)swift_allocObject();
            v92[2] = sub_100E1951C;
            v92[3] = v79;
            v92[4] = v91;
            double v153 = sub_100545E6C;
            double v154 = v92;
            aBlock = _NSConcreteStackBlock;
            uint64_t v150 = v139;
            uint64_t v151 = sub_10051CE64;
            unint64_t v152 = &unk_10152EFD0;
            uint64_t v93 = _Block_copy(&aBlock);
            uint64_t v94 = v91;
            swift_retain();
            swift_release();
            Class v95 = v137;
            [v138 temporaryLayoutControllerForInfos:v137 useInBlock:v93];
            _Block_release(v93);
            swift_release();

            swift_beginAccess();
          }
        }
        double v60 = *(double *)(v79 + 16);
        double v61 = *(double *)(v79 + 24);
        swift_release();
        BOOL v62 = sub_1003E8750();
        double v63 = v73 + v60 + 50.0;
        double v64 = v75 + v61 + 50.0;
        if (!v62)
        {
          double v64 = v75 - v61 + -50.0;
          double v63 = v73 - v60 + -50.0;
        }
        uint64_t v56 = v146;
        [v78 setPosition:v63, v64, v73 - v60 + -50.0];
        uint64_t v65 = *(void (**)(void))((swift_isaMask & *v67) + 0xE8);
        id v66 = v78;
        v65();
      }
      else
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"offsetPosition(_:from:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibraryHeadlessController.swift", 105, 2, 97, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"offsetPosition(_:from:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibraryHeadlessController.swift", 105, 2, 97);
      }
      a1 = v143;
      CGSize v59 = &selRef_p_updateTitlesPageControlAndBottomViewColorsInDarkUI_;
      if (v58 == v56) {
        return swift_bridgeObjectRelease_n();
      }
    }
  }
  __break(1u);
  return result;
}

id sub_100E19320(id result, uint64_t a2)
{
  if (result)
  {
    uint64_t result = [result pureGeometry];
    if (result)
    {
      CGFloat v3 = result;
      id v4 = [result infoGeometry];

      [v4 position];
      double v6 = v5;
      double v8 = v7;

      uint64_t result = (id)swift_beginAccess();
      *(double *)(a2 + 16) = -v6;
      *(double *)(a2 + 24) = -v8;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_100E19408()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLBoardLibraryHeadlessController();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLBoardLibraryHeadlessController()
{
  return self;
}

uint64_t sub_100E194AC(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10169A100);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100E1950C()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_100E1951C(void *a1)
{
  return sub_100E19320(a1, v1);
}

uint64_t sub_100E19528(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100E19538()
{
  return swift_release();
}

uint64_t sub_100E19544()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100E19584(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100E195EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s13ItemViewModelVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100E1965C()
{
  sub_100510028(v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier);
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData + 8));

  return swift_deallocClassInstance();
}

uint64_t sub_100E196D4()
{
  return type metadata accessor for CRLUserBoardMetadataSyncRecord(0);
}

uint64_t type metadata accessor for CRLUserBoardMetadataSyncRecord(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10169DFD0);
}

uint64_t sub_100E196FC()
{
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100E197A4()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_persistenceContext);

  return swift_release();
}

uint64_t sub_100E197E4()
{
  sub_100510028(v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier);
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData + 8));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_persistenceContext);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_100E1987C()
{
  return type metadata accessor for CRLUserBoardMetadataSyncLocalChangeRecord(0);
}

uint64_t type metadata accessor for CRLUserBoardMetadataSyncLocalChangeRecord(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10169E090);
}

uint64_t sub_100E198A4()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100E19900()
{
  return sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform36CRLUserBoardMetadataSyncRemoteRecord_boardCRDTData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform36CRLUserBoardMetadataSyncRemoteRecord_boardCRDTData + 8));
}

uint64_t sub_100E19914()
{
  sub_100510028(v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier);
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData + 8));
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform36CRLUserBoardMetadataSyncRemoteRecord_boardCRDTData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform36CRLUserBoardMetadataSyncRemoteRecord_boardCRDTData + 8));

  return swift_deallocClassInstance();
}

uint64_t sub_100E199A0()
{
  return type metadata accessor for CRLUserBoardMetadataSyncRemoteRecord(0);
}

uint64_t type metadata accessor for CRLUserBoardMetadataSyncRemoteRecord(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10169E1A0);
}

uint64_t sub_100E199C8()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100E19A18()
{
  sub_100510028(v0 + OBJC_IVAR____TtC8Freeform46CRLUserBoardMetadataSyncRemoteRecordIdentifier_boardIdentifier);

  return swift_deallocClassInstance();
}

uint64_t sub_100E19A7C()
{
  return type metadata accessor for CRLUserBoardMetadataSyncRemoteRecordIdentifier(0);
}

uint64_t type metadata accessor for CRLUserBoardMetadataSyncRemoteRecordIdentifier(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10169E290);
}

uint64_t sub_100E19AA4()
{
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100E19B34(uint64_t a1)
{
  uint64_t result = 0xD000000000000020;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      return 0x742074726F707845;
    case 2:
      return 0x66666F646E6148;
    case 3:
      return 0x6F4220746E697250;
    case 4:
      return 0xD000000000000023;
    case 5:
      return 0xD000000000000024;
    case 6:
      return 0xD000000000000012;
    case 7:
      uint64_t v3 = 0x7265676E6946;
      goto LABEL_10;
    case 8:
      return 0xD000000000000016;
    case 9:
      uint64_t v3 = 0x6C69636E6550;
LABEL_10:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x4420000000000000;
      break;
    case 10:
      uint64_t result = 0xD00000000000001BLL;
      break;
    case 11:
      uint64_t result = 0xD000000000000013;
      break;
    case 12:
      uint64_t result = 0x7320776F6C6C6F46;
      break;
    case 13:
      uint64_t result = 0xD000000000000025;
      break;
    default:
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      JUMPOUT(0x100E19CE8);
  }
  return result;
}

unint64_t CRLAnalyticsFeatureName.init(rawValue:)(unint64_t a1)
{
  return sub_100E19D70(a1);
}

unint64_t sub_100E19D3C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_100E19D70(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t sub_100E19D70(unint64_t result)
{
  if (result > 0xD) {
    return 0;
  }
  return result;
}

unint64_t sub_100E19D84()
{
  unint64_t result = qword_10169E318[0];
  if (!qword_10169E318[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10169E318);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLAnalyticsFeatureName()
{
  return &type metadata for CRLAnalyticsFeatureName;
}

uint64_t sub_100E19DE8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100E19E34()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100E19E6C()
{
  sub_100E19E34();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLBoardRealTimeTransferChangeCollection()
{
  return sub_100568E70();
}

uint64_t sub_100E19EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v23 = v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_parentContainerUUID;
  uint64_t v24 = type metadata accessor for UUID();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v23, 1, 1, v24);
  *(_OWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData) = xmmword_101190880;
  *(_OWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData) = xmmword_101190880;
  *(_OWORD *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData) = xmmword_101190880;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_itemUUID, a1, v24);
  uint64_t v26 = (void *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_minRequiredVersions);
  *uint64_t v26 = a2;
  v26[1] = a3;
  v26[2] = a4;
  *(void *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_objectOptions) = a5;
  swift_beginAccess();
  sub_10068EA54(a6, v23);
  swift_endAccess();
  sub_1005394E4(a7, v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_boardIdentifier);
  *(void *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_itemTypeValue) = a8;
  unint64_t v27 = (void *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData);
  uint64_t v28 = *(void *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData);
  unint64_t v29 = *(void *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData + 8);
  void *v27 = a9;
  v27[1] = a10;
  sub_100514260(v28, v29);
  uint64_t v30 = (void *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData);
  uint64_t v31 = *(void *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData);
  unint64_t v32 = *(void *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData + 8);
  *uint64_t v30 = a11;
  v30[1] = a12;
  sub_100514260(v31, v32);
  *(unsigned char *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_isLocalTombstone) = a13;
  *(void *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_unsyncedChanges) = a14;
  uint64_t v33 = (void *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData);
  uint64_t v34 = *(void *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData);
  unint64_t v35 = *(void *)(v16 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData + 8);
  *uint64_t v33 = a15;
  v33[1] = a16;
  sub_100514260(v34, v35);
  return v16;
}

uint64_t sub_100E1A114()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_itemUUID;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100510824(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_parentContainerUUID);
  sub_100510028(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_boardIdentifier);
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData + 8));
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData + 8));
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData + 8));

  return swift_deallocClassInstance();
}

uint64_t sub_100E1A210()
{
  return type metadata accessor for CRLBoardItemDatabaseRow();
}

uint64_t type metadata accessor for CRLBoardItemDatabaseRow()
{
  uint64_t result = qword_10169E3C8;
  if (!qword_10169E3C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100E1A264()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_100510764();
    if (v1 <= 0x3F)
    {
      type metadata accessor for CRLBoardIdentifierStorage(319);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

ValueMetadata *type metadata accessor for CRLBoardItemUnsyncedChanges()
{
  return &type metadata for CRLBoardItemUnsyncedChanges;
}

unint64_t sub_100E1A3B4()
{
  unint64_t result = qword_10169E590;
  if (!qword_10169E590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169E590);
  }
  return result;
}

unint64_t sub_100E1A40C()
{
  unint64_t result = qword_10169E598;
  if (!qword_10169E598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169E598);
  }
  return result;
}

unint64_t sub_100E1A464()
{
  unint64_t result = qword_10169E5A0;
  if (!qword_10169E5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169E5A0);
  }
  return result;
}

unint64_t sub_100E1A4BC()
{
  unint64_t result = qword_10169E5A8;
  if (!qword_10169E5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169E5A8);
  }
  return result;
}

uint64_t sub_100E1A510()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_minRequiredVersions);
}

void sub_100E1A52C()
{
  id v0 = [self sharedDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 dictionaryForKey:v1];

  if (v2)
  {
    uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v3 = sub_100A393A8((uint64_t)_swiftEmptyArrayStorage);
  }
  qword_10171C910 = v3;
}

void sub_100E1A608()
{
  id v0 = [self sharedDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 stringForKey:v1];

  if (v2)
  {
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
  }
  qword_10169E5B0 = v3;
  qword_10169E5B8 = v5;
}

id sub_100E1A6C8()
{
  id result = [self standardUserDefaults];
  qword_10169E5C0 = (uint64_t)result;
  return result;
}

BOOL sub_100E1A704(void *a1)
{
  uint64_t v2 = type metadata accessor for Calendar();
  uint64_t v43 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DateComponents();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v39 - v21;
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = [a1 objectForKey:v23];

  if (v24)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v48 = 0u;
    long long v49 = 0u;
  }
  sub_10052E248((uint64_t)&v48, (uint64_t)v46);
  if (!v47)
  {
    sub_100522F00((uint64_t)v46, &qword_101672BF0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    goto LABEL_12;
  }
  int v25 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, v25 ^ 1u, 1, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
LABEL_12:
    sub_100522F00((uint64_t)v13, &qword_101672EB0);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v22, v13, v14);
  if (qword_101670130 != -1) {
    swift_once();
  }
  uint64_t v26 = qword_10171C910;
  unint64_t v44 = 0xD000000000000020;
  unint64_t v45 = 0x800000010128DD20;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v26 + 16) && (unint64_t v27 = sub_10095647C((uint64_t)v46), (v28 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v26 + 56) + 32 * v27, (uint64_t)&v48);
  }
  else
  {
    long long v48 = 0u;
    long long v49 = 0u;
  }
  sub_10050BFE0((uint64_t)v46);
  if (!*((void *)&v49 + 1))
  {
    sub_100522F00((uint64_t)&v48, &qword_101672BF0);
    goto LABEL_23;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_23:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v22, v14);
    return 0;
  }
  int64_t v40 = v44;
  static Calendar.current.getter();
  sub_1005057FC(&qword_101672F48);
  uint64_t v29 = type metadata accessor for Calendar.Component();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v39 = v2;
  uint64_t v31 = v30;
  unint64_t v32 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_10117E810;
  (*(void (**)(unint64_t, void, uint64_t))(v31 + 104))(v33 + v32, enum case for Calendar.Component.day(_:), v29);
  sub_100508274(v33);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  static Date.now.getter();
  Calendar.dateComponents(_:from:to:)();
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v15 + 8);
  v34(v18, v14);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v5, v39);
  uint64_t v35 = DateComponents.day.getter();
  LOBYTE(v33) = v36;
  (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v42);
  v34(v22, v14);
  return (v33 & 1) == 0 && v35 >= v40;
}

BOOL sub_100E1AD0C(void *a1)
{
  uint64_t v2 = type metadata accessor for Calendar();
  uint64_t v54 = *(void *)(v2 - 8);
  uint64_t v55 = v2;
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DateComponents();
  uint64_t v53 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v56 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v48 - v20;
  if (qword_101670130 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_10171C910;
  unint64_t v57 = 0xD00000000000001FLL;
  unint64_t v58 = 0x800000010128DD00;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v22 + 16) && (unint64_t v23 = sub_10095647C((uint64_t)v59), (v24 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v22 + 56) + 32 * v23, (uint64_t)&v61);
  }
  else
  {
    long long v61 = 0u;
    long long v62 = 0u;
  }
  sub_10050BFE0((uint64_t)v59);
  if (!*((void *)&v62 + 1))
  {
    sub_100522F00((uint64_t)&v61, &qword_101672BF0);
    return 0;
  }
  if (swift_dynamicCast())
  {
    uint64_t v52 = v6;
    int64_t v50 = v57;
    NSString v25 = String._bridgeToObjectiveC()();
    id v26 = [a1 objectForKey:v25];

    if (v26)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v61 = 0u;
      long long v62 = 0u;
    }
    sub_10052E248((uint64_t)&v61, (uint64_t)v59);
    if (v60)
    {
      int v27 = swift_dynamicCast();
      uint64_t v28 = v56;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v13, v27 ^ 1u, 1, v14);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v13, 1, v14) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v21, v13, v14);
        goto LABEL_18;
      }
    }
    else
    {
      sub_100522F00((uint64_t)v59, &qword_101672BF0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56))(v13, 1, 1, v14);
    }
    static Date.distantPast.getter();
    sub_100522F00((uint64_t)v13, &qword_101672EB0);
LABEL_18:
    NSString v29 = String._bridgeToObjectiveC()();
    id v30 = [a1 objectForKey:v29];

    if (v30)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v61 = 0u;
      long long v62 = 0u;
    }
    sub_10052E248((uint64_t)&v61, (uint64_t)v59);
    if (v60)
    {
      if (swift_dynamicCast())
      {
        unint64_t v49 = v57;
        unint64_t v31 = v58;
        goto LABEL_26;
      }
    }
    else
    {
      sub_100522F00((uint64_t)v59, &qword_101672BF0);
    }
    unint64_t v49 = 0;
    unint64_t v31 = 0xE000000000000000;
LABEL_26:
    unint64_t v51 = v31;
    id v32 = [self mainBundle];
    NSString v33 = String._bridgeToObjectiveC()();
    id v34 = [v32 objectForInfoDictionaryKey:v33];

    if (v34)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v61 = 0u;
      long long v62 = 0u;
    }
    sub_10052E248((uint64_t)&v61, (uint64_t)v59);
    if (v60)
    {
      if (swift_dynamicCast())
      {
        uint64_t v35 = v57;
        unint64_t v36 = v58;
        goto LABEL_34;
      }
    }
    else
    {
      sub_100522F00((uint64_t)v59, &qword_101672BF0);
    }
    unint64_t v36 = 0xE100000000000000;
    uint64_t v35 = 63;
LABEL_34:
    uint64_t v48 = v35;
    static Calendar.current.getter();
    sub_1005057FC(&qword_101672F48);
    uint64_t v37 = type metadata accessor for Calendar.Component();
    uint64_t v38 = *(void *)(v37 - 8);
    unint64_t v39 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_10117E810;
    (*(void (**)(unint64_t, void, uint64_t))(v38 + 104))(v40 + v39, enum case for Calendar.Component.day(_:), v37);
    sub_100508274(v40);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    static Date.now.getter();
    Calendar.dateComponents(_:from:to:)();
    swift_bridgeObjectRelease();
    uint64_t v41 = *(void (**)(char *, uint64_t))(v56 + 8);
    v41(v17, v14);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v5, v55);
    uint64_t v42 = DateComponents.day.getter();
    if (v43)
    {
      uint64_t v44 = v52;
    }
    else
    {
      uint64_t v44 = v52;
      if (v42 >= v50 && (v49 != v48 || v51 != v36))
      {
        uint64_t v45 = v52;
        char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v53 + 8))(v9, v45);
        v41(v21, v14);
        return (v46 & 1) == 0;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v9, v44);
    v41(v21, v14);
  }
  return 0;
}

BOOL sub_100E1B568()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 objectForInfoDictionaryKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_10052E248((uint64_t)v8, (uint64_t)v9);
  if (v10)
  {
    if (swift_dynamicCast())
    {
      if (qword_101670138 != -1) {
        swift_once();
      }
      if (qword_10169E5B8)
      {
        NSString v3 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        uint64_t v4 = sub_10007737C(v3);

        NSString v5 = String._bridgeToObjectiveC()();
        uint64_t v6 = sub_10007737C(v5);

        return v4 == v6;
      }
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_100522F00((uint64_t)v9, &qword_101672BF0);
  }
  return 0;
}

BOOL sub_100E1B718(void *a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [a1 objectForKey:v2];

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  sub_10052E248((uint64_t)&v12, (uint64_t)v10);
  if (!v11)
  {
    uint64_t v7 = (long long *)v10;
LABEL_17:
    sub_100522F00((uint64_t)v7, &qword_101672BF0);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (qword_101670130 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_10171C910;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_10095647C((uint64_t)v10), (v6 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v12);
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  sub_10050BFE0((uint64_t)v10);
  if (!*((void *)&v13 + 1))
  {
    uint64_t v7 = &v12;
    goto LABEL_17;
  }
  if (swift_dynamicCast()) {
    return v9 >= (uint64_t)0xD00000000000001DLL;
  }
  return 0;
}

id CRLiOSAppStoreReviewHelper.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSAppStoreReviewHelper();
  return [super init];
}

uint64_t type metadata accessor for CRLiOSAppStoreReviewHelper()
{
  return self;
}

id CRLiOSAppStoreReviewHelper.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSAppStoreReviewHelper();
  return [super dealloc];
}

void sub_100E1B9C8()
{
  if (qword_101670140 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_10169E5C0;
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_10052E248((uint64_t)v8, (uint64_t)v9);
  if (v10)
  {
    if (swift_dynamicCast())
    {
      uint64_t v3 = v7;
      goto LABEL_11;
    }
  }
  else
  {
    sub_100522F00((uint64_t)v9, &qword_101672BF0);
  }
  uint64_t v3 = 0;
LABEL_11:
  uint64_t v4 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = (void *)qword_10169E5C0;
    NSString v6 = String._bridgeToObjectiveC()();
    [v5 setInteger:v4 forKey:v6];
  }
}

void sub_100E1BB2C()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [self mainBundle];
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 objectForInfoDictionaryKey:v6];

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  sub_10052E248((uint64_t)&v24, (uint64_t)&v26);
  if (*((void *)&v27 + 1))
  {
    if (swift_dynamicCast())
    {
      uint64_t v9 = v22;
      unint64_t v8 = v23;
      goto LABEL_9;
    }
  }
  else
  {
    sub_100522F00((uint64_t)&v26, &qword_101672BF0);
  }
  unint64_t v8 = 0xE100000000000000;
  uint64_t v9 = 63;
LABEL_9:
  if (qword_101670140 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_10169E5C0;
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v10 objectForKey:v11];

  if (v12)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  sub_10052E248((uint64_t)&v24, (uint64_t)&v26);
  if (*((void *)&v27 + 1))
  {
    if (swift_dynamicCast())
    {
      if (v22 == v9 && v23 == v8)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {
          uint64_t v20 = (void *)qword_10169E5C0;
          Date.init()();
          Class isa = Date._bridgeToObjectiveC()().super.isa;
          (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
          NSString v18 = String._bridgeToObjectiveC()();
          [v20 setObject:isa forKey:v18];

          goto LABEL_24;
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_100522F00((uint64_t)&v26, &qword_101672BF0);
  }
  long long v13 = (void *)qword_10169E5C0;
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v13 objectForKey:v14];

  if (v15)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_100522F00((uint64_t)&v26, &qword_101672BF0);
    return;
  }
  long long v26 = 0u;
  long long v27 = 0u;
  sub_100522F00((uint64_t)&v26, &qword_101672BF0);
  uint64_t v16 = (void *)qword_10169E5C0;
  Date.init()();
  Class v17 = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  NSString v18 = String._bridgeToObjectiveC()();
  [v16 setObject:v17 forKey:v18];

LABEL_24:
}

BOOL sub_100E1BF78()
{
  uint64_t v0 = qword_101670140;
  swift_retain();
  if (v0 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_10169E5C0;
  sub_10050576C((void **)&v5, &v4);
  swift_release();
  if (v4 != 1) {
    goto LABEL_13;
  }
  uint64_t v1 = qword_101670140;
  swift_retain();
  if (v1 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_10169E5C0;
  sub_10050579C((void **)&v5, &v4);
  swift_release();
  if (v4 != 1) {
    goto LABEL_13;
  }
  uint64_t v2 = qword_101670140;
  swift_retain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_10169E5C0;
  sub_1005057CC((void **)&v5, &v4);
  swift_release();
  if (v4 == 1)
  {
    sub_1005057FC(&qword_101672BA0);
    swift_arrayDestroy();
    return sub_100E1B568();
  }
  else
  {
LABEL_13:
    sub_1005057FC(&qword_101672BA0);
    swift_arrayDestroy();
    return 0;
  }
}

void sub_100E1C164(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  NSString v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [self mainBundle];
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 objectForInfoDictionaryKey:v8];

  if (v9)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v17, 0, sizeof(v17));
  }
  sub_10052E248((uint64_t)v17, (uint64_t)v18);
  if (v19) {
    swift_dynamicCast();
  }
  else {
    sub_100522F00((uint64_t)v18, &qword_101672BF0);
  }
  [self requestReviewInScene:a1];
  if (qword_101670140 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_10169E5C0;
  Date.init()();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  NSString v12 = String._bridgeToObjectiveC()();
  [v10 setObject:isa forKey:v12];

  long long v13 = (void *)qword_10169E5C0;
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v15 = String._bridgeToObjectiveC()();
  [v13 setObject:v14 forKey:v15];
}

uint64_t sub_100E1C424(uint64_t a1, uint64_t a2)
{
  if (static Selector.== infix(_:_:)()) {
    return 1;
  }
  sub_100557A70(a2, (uint64_t)v16);
  uint64_t v6 = v17;
  if (v17)
  {
    id v7 = sub_10050F848(v16, v17);
    uint64_t v8 = *(void *)(v6 - 8);
    __n128 v9 = __chkstk_darwin(v7, v7);
    NSString v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v8 + 16))(v11, v9);
    uint64_t v12 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v16);
  }
  else
  {
    uint64_t v12 = 0;
  }
  long long v13 = (objc_class *)type metadata accessor for CRLWPStickyNoteEditor();
  v15.receiver = v2;
  v15.super_class = v13;
  [super canPerformEditorAction:a1 withSender:v12];
  swift_unknownObjectRelease();
  return (uint64_t)v5;
}

void sub_100E1C624(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v7 = __chkstk_darwin(v4, v6).n128_u64[0];
  __n128 v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [v2 interactiveCanvasController:v7];
  if (!v10)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updatePreset(_:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2, 26, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updatePreset(_:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2, 26);
    return;
  }
  id v55 = v10;
  id v56 = [v10 commandController];
  if (v56)
  {
    id v11 = [v55 canvasEditor];
    if (v11)
    {
      id v12 = v11;
      sub_100557A70(a1, (uint64_t)v60);
      if (v61)
      {
        if (swift_dynamicCast())
        {
          int v54 = v58;
          swift_unknownObjectRetain();
          id v13 = [v2 editorController];
          id v14 = [v13 selectionPath];

          id v15 = [objc_allocWithZone((Class)CRLCanvasCommandSelectionBehavior) initWithCanvasEditor:v12 type:2 selectionPath:v14];
          id v46 = v12;
          swift_unknownObjectRelease();

          id v16 = v15;
          sub_10078F988(v15);
          id v45 = v16;

          id v17 = [v2 boardItems];
          uint64_t v18 = type metadata accessor for CRLBoardItem(0);
          sub_10060A334();
          uint64_t v19 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v48 = v18;
          if ((v19 & 0xC000000000000001) != 0)
          {
            __CocoaSet.makeIterator()();
            Set.Iterator.init(_cocoa:)();
            uint64_t v19 = v60[0];
            uint64_t v51 = v60[1];
            uint64_t v20 = v60[2];
            uint64_t v21 = v61;
            unint64_t v22 = v62;
          }
          else
          {
            uint64_t v21 = 0;
            uint64_t v24 = -1 << *(unsigned char *)(v19 + 32);
            uint64_t v25 = *(void *)(v19 + 56);
            uint64_t v51 = v19 + 56;
            uint64_t v26 = ~v24;
            uint64_t v27 = -v24;
            if (v27 < 64) {
              uint64_t v28 = ~(-1 << v27);
            }
            else {
              uint64_t v28 = -1;
            }
            unint64_t v22 = v28 & v25;
            uint64_t v20 = v26;
          }
          uint64_t v49 = v19 & 0x7FFFFFFFFFFFFFFFLL;
          v44[1] = v20;
          int64_t v50 = (unint64_t)(v20 + 64) >> 6;
          uint64_t v52 = (void (**)(char *, uint64_t))(v5 + 8);
          uint64_t v53 = (void (**)(uint64_t, char *, uint64_t))(v5 + 16);
          uint64_t v47 = (char *)&type metadata for Swift.AnyObject + 8;
          while (1)
          {
            if (v19 < 0)
            {
              uint64_t v32 = __CocoaSet.Iterator.next()();
              if (!v32) {
                goto LABEL_45;
              }
              uint64_t v57 = v32;
              swift_unknownObjectRetain();
              swift_dynamicCast();
              id v33 = v58;
              swift_unknownObjectRelease();
              uint64_t v31 = v21;
              uint64_t v29 = v22;
            }
            else
            {
              if (v22)
              {
                uint64_t v29 = (v22 - 1) & v22;
                unint64_t v30 = __clz(__rbit64(v22)) | (v21 << 6);
                uint64_t v31 = v21;
              }
              else
              {
                int64_t v34 = v21 + 1;
                if (__OFADD__(v21, 1))
                {
                  __break(1u);
                  return;
                }
                if (v34 >= v50) {
                  goto LABEL_45;
                }
                unint64_t v35 = *(void *)(v51 + 8 * v34);
                uint64_t v31 = v21 + 1;
                if (!v35)
                {
                  uint64_t v31 = v21 + 2;
                  if (v21 + 2 >= v50) {
                    goto LABEL_45;
                  }
                  unint64_t v35 = *(void *)(v51 + 8 * v31);
                  if (!v35)
                  {
                    uint64_t v31 = v21 + 3;
                    if (v21 + 3 >= v50) {
                      goto LABEL_45;
                    }
                    unint64_t v35 = *(void *)(v51 + 8 * v31);
                    if (!v35)
                    {
                      uint64_t v31 = v21 + 4;
                      if (v21 + 4 >= v50) {
                        goto LABEL_45;
                      }
                      unint64_t v35 = *(void *)(v51 + 8 * v31);
                      if (!v35)
                      {
                        uint64_t v36 = v21 + 5;
                        while (v50 != v36)
                        {
                          unint64_t v35 = *(void *)(v51 + 8 * v36++);
                          if (v35)
                          {
                            uint64_t v31 = v36 - 1;
                            goto LABEL_40;
                          }
                        }
LABEL_45:
                        sub_10052E1EC();
                        sub_10078FB90(0);

                        swift_unknownObjectRelease();
                        return;
                      }
                    }
                  }
                }
LABEL_40:
                uint64_t v29 = (v35 - 1) & v35;
                unint64_t v30 = __clz(__rbit64(v35)) + (v31 << 6);
              }
              id v33 = *(id *)(*(void *)(v19 + 48) + 8 * v30);
            }
            if (!v33) {
              goto LABEL_45;
            }
            type metadata accessor for CRLWPStickyNoteItem();
            uint64_t v37 = swift_dynamicCastClass();
            if (v37)
            {
              uint64_t v38 = *(void (**)(uint64_t))(**(void **)(v37
                                                                 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                                   + 256);
              id v39 = v33;
              uint64_t v40 = swift_retain();
              v38(v40);
              swift_release();
              uint64_t v41 = (objc_class *)type metadata accessor for CRLCommandSetStickyPreset();
              uint64_t v42 = objc_allocWithZone(v41);
              (*v53)((uint64_t)&v42[OBJC_IVAR____TtC8Freeform25CRLCommandSetStickyPreset_id], v9, v4);
              v42[OBJC_IVAR____TtC8Freeform25CRLCommandSetStickyPreset_preset] = v54;
              v59.receiver = v42;
              v59.super_class = v41;
              char v43 = [super init];
              (*v52)(v9, v4);
              sub_10078BED8(v43, 0, 0, 4, 0);
            }
            uint64_t v21 = v31;
            unint64_t v22 = v29;
          }
        }
      }
      else
      {
        sub_10052E2B0((uint64_t)v60);
      }
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updatePreset(_:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2, 29, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updatePreset(_:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2, 29);

      swift_unknownObjectRelease();
      return;
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updatePreset(_:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2, 28, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updatePreset(_:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2, 28);

    id v23 = v56;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updatePreset(_:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2, 27, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updatePreset(_:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2, 27);
    id v23 = v55;
  }
}

void sub_100E1CEFC()
{
  id v1 = [v0 boardItems];
  type metadata accessor for CRLBoardItem(0);
  sub_10060A334();
  uint64_t v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v2 & 0xC000000000000001) != 0) {
    uint64_t v3 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v3 = *(void *)(v2 + 16);
  }
  swift_bridgeObjectRelease();
  if (v3 != 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"saveDefaultInsertionPreset(_:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2, 43, (uint64_t)"Only should save default style with a single object selected!", 61, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v22) = 2;
    uint64_t v20 = "Only should save default style with a single object selected!";
    uint64_t v21 = 61;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"saveDefaultInsertionPreset(_:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2, 43);
  }
  id v4 = [v0 boardItems:v20, v21, v22];
  uint64_t v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  id v23 = (id)sub_100999830(v5);
  swift_bridgeObjectRelease();
  if (!v23) {
    goto LABEL_13;
  }
  type metadata accessor for CRLWPStickyNoteItem();
  uint64_t v6 = swift_dynamicCastClass();
  if (!v6)
  {

LABEL_13:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"saveDefaultInsertionPreset(_:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2, 44, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"saveDefaultInsertionPreset(_:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2, 44);
    return;
  }
  double v7 = (void *)v6;
  id v8 = [v0 interactiveCanvasController];
  id v9 = [v8 commandController];

  if (v9)
  {
    id v10 = (objc_class *)type metadata accessor for CRLCommandSetDefaultStickyNoteInsertionPreset();
    id v11 = objc_allocWithZone(v10);
    id v12 = v23;
    sub_100EC3284(v7, 0, (uint64_t)v25);
    uint64_t v26 = _swiftEmptyDictionarySingleton;
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)v25, v13);
    id v14 = (char *)objc_allocWithZone(v10);
    id v15 = &v14[OBJC_IVAR____TtC8Freeform45CRLCommandSetDefaultStickyNoteInsertionPreset_actionString];
    uint64_t v16 = qword_10166EB30;
    id v17 = v14;
    if (v16 != -1) {
      swift_once();
    }
    uint64_t v18 = *(void *)algn_101672328;
    *(void *)id v15 = qword_101672320;
    *((void *)v15 + 1) = v18;
    sub_100E1DA18((uint64_t)v25, (uint64_t)&v17[OBJC_IVAR____TtC8Freeform45CRLCommandSetDefaultStickyNoteInsertionPreset_stickyStyle]);
    swift_bridgeObjectRetain();

    v24.receiver = v17;
    v24.super_class = v10;
    uint64_t v19 = [super init];

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    sub_10078BED8(v19, 0, 0, 4, 0);
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"saveDefaultInsertionPreset(_:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2, 45, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"saveDefaultInsertionPreset(_:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPStickyNoteEditor.swift", 92, 2, 45);
  }
}

void sub_100E1D3C0(void *a1, double a2, double a3)
{
  v39.receiver = v3;
  v39.super_class = (Class)type metadata accessor for CRLWPStickyNoteEditor();
  [super addMiniFormatterElementsToArray:a1 atPoint:a2];
  double v7 = self;
  id v8 = [v7 mainBundle];
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v8 localizedStringForKey:v9 value:v10 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v12 = String._bridgeToObjectiveC()();
  Swift::String v13 = self;
  id v14 = [v13 crl_quickInspectorImageNamed:v12];

  id v15 = objc_allocWithZone((Class)CRLQuickInspectorElement);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v17 = [v15 initWithName:v16 image:v14 type:2 options:4096];

  [v17 setTag:15];
  id v18 = [v7 mainBundle];
  NSString v19 = String._bridgeToObjectiveC()();
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v18 localizedStringForKey:v19 value:v20 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v17 setToolTip:v22];

  id v23 = v17;
  [a1 insertObject:v23 atIndex:[a1 count]];

  id v24 = [v7 mainBundle];
  NSString v25 = String._bridgeToObjectiveC()();
  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [v24 localizedStringForKey:v25 value:v26 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v28 = String._bridgeToObjectiveC()();
  id v29 = [v13 crl_quickInspectorImageNamed:v28];

  id v30 = objc_allocWithZone((Class)CRLQuickInspectorElement);
  NSString v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v32 = [v30 initWithName:v31 image:v29 type:2 options:0x2000];

  [v32 setTag:16];
  id v33 = [v7 mainBundle];
  NSString v34 = String._bridgeToObjectiveC()();
  NSString v35 = String._bridgeToObjectiveC()();
  id v36 = [v33 localizedStringForKey:v34 value:v35 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v32 setToolTip:v37];

  id v38 = v32;
  [a1 insertObject:v38 atIndex:[a1 count]];
}

id sub_100E1D9C0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPStickyNoteEditor();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLWPStickyNoteEditor()
{
  return self;
}

uint64_t sub_100E1DA18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672448);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100E1DA84(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_100510D4C(v3, v4);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for CRLBoardAuxiliaryRealTimeChangeLegacy(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_100510D4C(v3, v4);
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  sub_100510084(v5, v6);
  return a1;
}

uint64_t assignWithTake for CRLBoardAuxiliaryRealTimeChangeLegacy(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_100510084(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLBoardAuxiliaryRealTimeChangeLegacy(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && a1[24]) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 5;
  int v5 = v3 - 5;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLBoardAuxiliaryRealTimeChangeLegacy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)id result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)id result = a2 + 4;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardAuxiliaryRealTimeChangeLegacy()
{
  return &type metadata for CRLBoardAuxiliaryRealTimeChangeLegacy;
}

uint64_t sub_100E1DBF8()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100E1DC58()
{
  return RawRepresentable<>.encode(to:)();
}

void sub_100E1DCA8(void *a1@<X8>)
{
  *a1 = &off_1015036B8;
}

uint64_t sub_100E1DCB8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_10169E6D8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  NSString v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_100E1EC64();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v13) = 0;
  type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  sub_100E1ED80(&qword_101671E68, (void (*)(uint64_t))type metadata accessor for CRLGloballyScopedBoardIdentifier);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy();
    LOBYTE(v13) = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    long long v13 = *(_OWORD *)(v3 + *(int *)(v10 + 24));
    v12[15] = 2;
    sub_10060D344();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100E1DEB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v4 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v4, v5);
  uint64_t v22 = (uint64_t)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_10169E6C8);
  uint64_t v20 = *(void *)(v7 - 8);
  uint64_t v21 = v7;
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy();
  __chkstk_darwin(v11, v12);
  id v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100E1EC64();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  uint64_t v15 = v20;
  uint64_t v16 = (uint64_t)v14;
  LOBYTE(v23) = 0;
  sub_100E1ED80(&qword_101671E50, (void (*)(uint64_t))type metadata accessor for CRLGloballyScopedBoardIdentifier);
  uint64_t v17 = v21;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  sub_10050F930(v22, v16);
  LOBYTE(v23) = 1;
  *(void *)(v16 + *(int *)(v11 + 20)) = KeyedDecodingContainer.decode(_:forKey:)();
  char v24 = 2;
  sub_10060D184();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v17);
  *(_OWORD *)(v16 + *(int *)(v11 + 24)) = v23;
  sub_100E1ECB8(v16, v19, (uint64_t (*)(void))type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return sub_100E1ED20(v16, (uint64_t (*)(void))type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy);
}

uint64_t sub_100E1E204(uint64_t a1)
{
  unint64_t v2 = sub_100E1EC64();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100E1E240(uint64_t a1)
{
  unint64_t v2 = sub_100E1EC64();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100E1E27C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100E1DEB4(a1, a2);
}

uint64_t sub_100E1E294(void *a1)
{
  return sub_100E1DCB8(a1);
}

uint64_t sub_100E1E2AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v7 = *((void *)v2 + 1);
  unint64_t v6 = *((void *)v2 + 2);
  uint64_t v8 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy();
  a2[3] = v8;
  a2[4] = sub_100E1ED80(&qword_1016816A0, (void (*)(uint64_t))type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy);
  uint64_t v9 = sub_1005767BC(a2);
  sub_100E1ECB8(a1, (uint64_t)v9, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  *(uint64_t *)((char *)v9 + *(int *)(v8 + 20)) = v5;
  uint64_t v10 = (uint64_t *)((char *)v9 + *(int *)(v8 + 24));
  *uint64_t v10 = v7;
  v10[1] = v6;

  return sub_100510D4C(v7, v6);
}

uint64_t type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy()
{
  uint64_t result = qword_10169E670;
  if (!qword_10169E670) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_100E1E3D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v13 = (uint64_t *)((char *)a1 + v12);
    id v14 = (char *)a2 + v12;
    uint64_t v15 = *(uint64_t *)((char *)a2 + v12);
    unint64_t v16 = *((void *)v14 + 1);
    swift_bridgeObjectRetain();
    sub_100510D4C(v15, v16);
    *uint64_t v13 = v15;
    v13[1] = v16;
  }
  return a1;
}

uint64_t sub_100E1E4DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v12 = (uint64_t *)(a1 + v11);
  uint64_t v13 = *(void *)(a2 + v11);
  unint64_t v14 = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  sub_100510D4C(v13, v14);
  *uint64_t v12 = v13;
  v12[1] = v14;
  return a1;
}

uint64_t sub_100E1E594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (uint64_t *)(a1 + v10);
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v13 = *v12;
  unint64_t v14 = v12[1];
  sub_100510D4C(*v12, v14);
  uint64_t v15 = *v11;
  unint64_t v16 = v11[1];
  *uint64_t v11 = v13;
  v11[1] = v14;
  sub_100510084(v15, v16);
  return a1;
}

uint64_t sub_100E1E66C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for CRLBoardIdentifierStorage(0);
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  uint64_t v8 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_100E1E704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v13 = *(void *)(a1 + v12);
  unint64_t v14 = *(void *)(a1 + v12 + 8);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  sub_100510084(v13, v14);
  return a1;
}

uint64_t sub_100E1E7B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100E1E7CC);
}

uint64_t sub_100E1E7CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8) >> 60;
    if (((4 * v10) & 0xC) != 0) {
      return 16 - ((4 * v10) & 0xC | (v10 >> 2));
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100E1E8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100E1E8B4);
}

uint64_t sub_100E1E8B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    uint64_t v11 = (void *)(a1 + *(int *)(a4 + 24));
    *uint64_t v11 = 0;
    v11[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  return result;
}

uint64_t sub_100E1E980()
{
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLBoardAuxiliaryRealTimeChangeTypeLegacy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100E1EAF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardAuxiliaryRealTimeChangeTypeLegacy()
{
  return &type metadata for CRLBoardAuxiliaryRealTimeChangeTypeLegacy;
}

unint64_t sub_100E1EB2C()
{
  unint64_t result = qword_10169E6B0;
  if (!qword_10169E6B0)
  {
    sub_100522D34(&qword_10169E6B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169E6B0);
  }
  return result;
}

unint64_t sub_100E1EB8C()
{
  unint64_t result = qword_10169E6C0;
  if (!qword_10169E6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169E6C0);
  }
  return result;
}

uint64_t sub_100E1EBE0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_100E1ED80(&qword_1016816A8, (void (*)(uint64_t))type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy);
  uint64_t result = sub_100E1ED80((unint64_t *)&unk_10167AC60, (void (*)(uint64_t))type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100E1EC64()
{
  unint64_t result = qword_10169E6D0;
  if (!qword_10169E6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169E6D0);
  }
  return result;
}

uint64_t sub_100E1ECB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100E1ED20(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100E1ED80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100E1EDC8()
{
  unint64_t result = qword_10169E6E0;
  if (!qword_10169E6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169E6E0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLBoardAuxiliaryRealTimeChangeRecordLegacy.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100E1EEE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy.CodingKeys()
{
  return &type metadata for CRLBoardAuxiliaryRealTimeChangeRecordLegacy.CodingKeys;
}

unint64_t sub_100E1EF24()
{
  unint64_t result = qword_10169E6E8;
  if (!qword_10169E6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169E6E8);
  }
  return result;
}

unint64_t sub_100E1EF7C()
{
  unint64_t result = qword_10169E6F0;
  if (!qword_10169E6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169E6F0);
  }
  return result;
}

unint64_t sub_100E1EFD4()
{
  unint64_t result = qword_10169E6F8;
  if (!qword_10169E6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169E6F8);
  }
  return result;
}

uint64_t sub_100E1F028@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  sub_100E1F7F4(v2, a1, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
  v10[3] = &type metadata for CRLBasicLayerAnimation.Def;
  unint64_t v5 = sub_10054CB94();
  v10[4] = v5;
  v10[0] = swift_allocObject();
  sub_100549A68(a1, v10[0] + 16);
  sub_1005231B4((uint64_t)v10, (uint64_t)&type metadata for CRLBasicLayerAnimation.Def);
  unsigned int v6 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, ValueMetadata *))(*(void *)(v5 + 32)
                                                                                                 + 24))(v9, &type metadata for CRLBasicLayerAnimation.Def);
  *uint64_t v7 = *v7 + a2;
  v6(v9, 0);
  return sub_1005FF368((uint64_t)v10);
}

double sub_100E1F128@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  sub_100549A68(v2, a1);
  double result = *(double *)(a1 + 8) + a2;
  *(double *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100E1F16C@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  sub_100E1F7F4(v2, a1, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  v10[3] = &type metadata for CRLSpringLayerAnimation.Def;
  unint64_t v5 = sub_100860DAC();
  v10[4] = v5;
  v10[0] = swift_allocObject();
  sub_100823384(a1, v10[0] + 16);
  sub_1005231B4((uint64_t)v10, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def);
  unsigned int v6 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, ValueMetadata *))(*(void *)(v5 + 32)
                                                                                                 + 24))(v9, &type metadata for CRLSpringLayerAnimation.Def);
  *uint64_t v7 = *v7 + a2;
  v6(v9, 0);
  return sub_100F7DF84((uint64_t)v10);
}

double sub_100E1F26C@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  sub_100823384(v2, a1);
  double result = *(double *)(a1 + 32) + a2;
  *(double *)(a1 + 32) = result;
  return result;
}

uint64_t sub_100E1F2B0@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  double v3 = *(double *)(v2 + 8) + a2;
  *(void *)a1 = *(void *)v2;
  *(double *)(a1 + 8) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100E1F2C8@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v3 = *(void *)(v2 + 8);
  double v4 = *(double *)(v2 + 16) + a2;
  *(void *)a1 = *(void *)v2;
  *(void *)(a1 + 8) = v3;
  *(double *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

double sub_100E1F2E8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v5 = v3;
  sub_100E1F7F4(v5, a2, (uint64_t (*)(void))type metadata accessor for CRLTweenLayerAnimation);
  uint64_t v8 = a2 + *(int *)(a1 + 32);
  double result = *(double *)(v8 + 8) + a3;
  *(double *)(v8 + 8) = result;
  return result;
}

uint64_t sub_100E1F34C()
{
  unint64_t v1 = (id *)(v0 + 40);
  switch(*(unsigned char *)(v0 + 296))
  {
    case 0:
    case 0x22:
      if (*(void *)(v0 + 64)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      if (*(void *)(v0 + 96)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 72);
      }
      break;
    case 1:
    case 0x23:
      if (*(void *)(v0 + 64)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      break;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:

      break;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 0x21:
    case 0x25:
      goto LABEL_17;
    case 0x3A:

      break;
    case 0x3F:

      if (*(void *)(v0 + 160)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 136);
      }
      goto LABEL_17;
    case 0x40:

      if (*(void *)(v0 + 128)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 104);
      }
LABEL_17:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, 316, 7);
}

uint64_t sub_100E1F5A4()
{
  unint64_t v1 = (id *)(v0 + 56);
  switch(*(unsigned char *)(v0 + 312))
  {
    case 0:
    case 0x22:
      if (*(void *)(v0 + 80)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      if (*(void *)(v0 + 112)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 88);
      }
      break;
    case 1:
    case 0x23:
      if (*(void *)(v0 + 80)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      break;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:

      break;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 0x21:
    case 0x25:
      goto LABEL_17;
    case 0x3A:

      break;
    case 0x3F:

      if (*(void *)(v0 + 176)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 152);
      }
      goto LABEL_17;
    case 0x40:

      if (*(void *)(v0 + 144)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 120);
      }
LABEL_17:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, 332, 7);
}

uint64_t sub_100E1F7F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *sub_100E1F860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v6 + 736) - 8) + 32))(v6 + *(void *)(*(void *)v6 + 752));
  *(void *)(v6 + qword_10169E700) = 0;
  sub_10051B3EC(a1, v6 + *(void *)(*(void *)v6 + 632), &qword_1016892B0);

  return sub_10068B398(a3, a4, a5, a6);
}

uint64_t *sub_100E1F94C()
{
  uint64_t v1 = *v0;
  sub_100522F00((uint64_t)v0 + *(void *)(*v0 + 632), &qword_1016892B0);

  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 736) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 752));
  return v0;
}

uint64_t sub_100E1F9F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)v2 + 736);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v6 = &v10[-v5];
  type metadata accessor for CRLAbstractShapeItemData();
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    (*(void (**)(void))(*(void *)result + 760))();
    uint64_t v8 = *(uint64_t (**)(unsigned char *))(*(void *)v2 + 776);
    swift_retain();
    uint64_t v9 = (void (*)(unsigned char *, void))v8(v10);
    dispatch thunk of CRMergeable.merge(_:)();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    v9(v10, 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_100E1FBC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 736);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1, a2);
  id v30 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = sub_1005057FC(&qword_1016892B0);
  __chkstk_darwin(v11 - 8, v12);
  unint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  id v18 = (char *)&v29 - v17;
  type metadata accessor for CRLAbstractShapeItemData();
  uint64_t v19 = swift_dynamicCastClass();
  if (!v19) {
    goto LABEL_5;
  }
  uint64_t v20 = v19;
  uint64_t v29 = v5;
  uint64_t v21 = (uint64_t)v2 + *(void *)(v3 + 632);
  swift_beginAccess();
  sub_100522E9C(v21, (uint64_t)v18, &qword_1016892B0);
  uint64_t v22 = v20 + *(void *)(*(void *)v20 + 632);
  swift_beginAccess();
  sub_100522E9C(v22, (uint64_t)v14, &qword_1016892B0);
  swift_retain();
  LOBYTE(v22) = sub_100FC1D04((uint64_t)v18, (uint64_t)v14);
  sub_100522F00((uint64_t)v14, &qword_1016892B0);
  uint64_t v23 = sub_100522F00((uint64_t)v18, &qword_1016892B0);
  if ((v22 & 1) == 0)
  {
    swift_release();
LABEL_5:
    char v26 = 0;
    return v26 & 1;
  }
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(*v2 + 760))(v23);
  NSString v25 = v30;
  (*(void (**)(uint64_t))(*(void *)v20 + 760))(v24);
  char v26 = dispatch thunk of static Equatable.== infix(_:_:)();
  swift_release();
  id v27 = *(void (**)(char *, uint64_t))(v29 + 8);
  v27(v25, v4);
  v27(v10, v4);
  return v26 & 1;
}

uint64_t sub_100E1FF04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 736);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v10 = __chkstk_darwin(v8, v9);
  uint64_t v12 = (char *)&v18 - v11;
  uint64_t v13 = *(void (**)(__n128))(v3 + 760);
  if (v14)
  {
    v13(v10);
    dispatch thunk of CRType.copy(renamingReferences:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v13(v10);
  }
  if (qword_10166EE10 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for CRCodableVersion();
  sub_100556B74(v15, (uint64_t)qword_10171A2D8);
  uint64_t v16 = dispatch thunk of CRMergeable.serializedData(_:version:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
  return v16;
}

uint64_t sub_100E20114(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 736);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v18 - v10;
  type metadata accessor for CRLAbstractShapeItemData();
  uint64_t v12 = swift_dynamicCastClass();
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = (*(uint64_t (**)(void))(v3 + 760))();
    (*(void (**)(uint64_t))(*(void *)v13 + 760))(v14);
    char v15 = dispatch thunk of CRDT.hasDelta(from:)();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v7, v4);
    v16(v11, v4);
    return v15 & 1;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100E20348(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = a2;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 736);
  uint64_t v43 = *(void *)(v5 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)v39 - v10;
  uint64_t v13 = *(void *)(*(void *)(v12 + 744) + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = type metadata accessor for Optional();
  uint64_t v40 = *(void *)(v14 - 8);
  uint64_t v41 = v14;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)v39 - v20;
  uint64_t v46 = a1;
  uint64_t v22 = v4;
  uint64_t v23 = swift_dynamicCastClass();
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = (*(uint64_t (**)(void))(v22 + 760))();
    (*(void (**)(uint64_t))(*(void *)v24 + 760))(v25);
    swift_retain();
    v39[1] = v13;
    dispatch thunk of CRDT.delta(_:from:)();
    char v26 = *(void (**)(char *, uint64_t))(v43 + 8);
    v26(v7, v5);
    uint64_t v43 = v5;
    v26(v11, v5);
    uint64_t v27 = v40;
    uint64_t v28 = v41;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v17, v21, v41);
    uint64_t v29 = AssociatedTypeWitness;
    uint64_t v30 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v31 = v27;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v17, 1, AssociatedTypeWitness) == 1)
    {
      id v32 = *(void (**)(char *, uint64_t))(v27 + 8);
      v32(v21, v28);
      swift_release();
      v32(v17, v28);
      return 0;
    }
    else
    {
      uint64_t v34 = v29;
      v39[0] = v21;
      uint64_t v35 = v45;
      if (qword_10166EE10 != -1) {
        swift_once();
      }
      uint64_t v36 = type metadata accessor for CRCodableVersion();
      uint64_t v33 = sub_100556B74(v36, (uint64_t)qword_10171A2D8);
      swift_getAssociatedConformanceWitness();
      uint64_t v37 = PartialCRDT.deltaSerializedData(_:version:)();
      if (!v35) {
        uint64_t v33 = v37;
      }
      swift_release();
      (*(void (**)(void, uint64_t))(v31 + 8))(v39[0], v28);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v34);
    }
    return v33;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100E2084C(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v7 = sub_1005057FC(&qword_1016892B0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v37 = (uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for UUID();
  uint64_t v38 = *(void *)(v39 - 8);
  __chkstk_darwin(v39, v10);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v6 + 744);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v40 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness, v15);
  uint64_t v17 = (char *)&v34 - v16;
  sub_100510D4C(a1, a2);
  swift_getAssociatedConformanceWitness();
  uint64_t v18 = v41;
  PartialCRDT.init(serializedData:)();
  if (!v18)
  {
    uint64_t v35 = v12;
    uint64_t v36 = v13;
    uint64_t v41 = 0;
    uint64_t v19 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*v3 + 776))(v42);
    LOBYTE(v13) = dispatch thunk of CRDT.merge(delta:)();
    v19(v42, 0);
    if ((v13 & 1) == 0)
    {
      uint64_t v34 = AssociatedTypeWitness;
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v20 = (void *)static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      uint64_t v22 = (uint64_t)v3 + *(void *)(*v3 + 632);
      swift_beginAccess();
      uint64_t v23 = v22;
      uint64_t v24 = v37;
      sub_100522E9C(v23, v37, &qword_1016892B0);
      id v25 = v20;
      sub_1005057FC(&qword_101674550);
      char v26 = v35;
      CRRegister.wrappedValue.getter();
      sub_100522F00(v24, &qword_1016892B0);
      uint64_t v37 = UUID.uuidString.getter();
      uint64_t v28 = v27;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v26, v39);
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v29 = sub_100528BE4();
      *(void *)(inited + 64) = v29;
      *(void *)(inited + 32) = v37;
      *(void *)(inited + 40) = v28;
      uint64_t v43 = v3;
      type metadata accessor for CRLAbstractShapeItemData();
      swift_retain();
      uint64_t v30 = String.init<A>(describing:)();
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v29;
      *(void *)(inited + 72) = v30;
      *(void *)(inited + 80) = v31;
      uint64_t v32 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v25, (uint64_t)&_mh_execute_header, v32, (uint64_t)"Delta failed to apply for %{public}@%{public}@", 46, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      uint64_t AssociatedTypeWitness = v34;
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v17, AssociatedTypeWitness);
  }
  return v13 & 1;
}

unsigned char *sub_100E20D38()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLPathSourceData(0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (unsigned __int8 *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_1016892B0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = qword_10169E700;
  uint64_t v15 = *(void **)(v1 + qword_10169E700);
  if (v15)
  {
    uint64_t v16 = *(unsigned char **)(v1 + qword_10169E700);
  }
  else
  {
    uint64_t v17 = v1 + *(void *)(*(void *)v1 + 632);
    swift_beginAccess();
    sub_100522E9C(v17, (uint64_t)v13, &qword_1016892B0);
    sub_1005057FC(&qword_101686808);
    CRRegister.wrappedValue.getter();
    sub_100E2B678((uint64_t)&v5[*(int *)(v2 + 20)], (uint64_t)v9, type metadata accessor for CRLPathSourceData);
    sub_100E29638((uint64_t)v5, type metadata accessor for CRLShapeItemParentAffinity);
    sub_100522F00((uint64_t)v13, &qword_1016892B0);
    uint64_t v18 = sub_100AB0C00(v9);
    sub_100E29638((uint64_t)v9, type metadata accessor for CRLPathSourceData);
    uint64_t v19 = *(void **)(v1 + v14);
    *(void *)(v1 + v14) = v18;
    uint64_t v16 = v18;

    uint64_t v15 = 0;
  }
  id v20 = v15;
  return v16;
}

void sub_100E20F6C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLPathSourceData(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  id v8 = a1;
  sub_100AA59E0(v8, (uint64_t)v7);
  swift_beginAccess();
  sub_1005057FC(&qword_1016892B0);
  sub_1005057FC(&qword_101686808);
  uint64_t v9 = (void (*)(unsigned char *, void))CRRegister.wrappedValue.modify();
  uint64_t v11 = v10;
  uint64_t v12 = type metadata accessor for CRLShapeItemParentAffinity(0);
  sub_100E2D280((uint64_t)v7, v11 + *(int *)(v12 + 20));
  v9(v15, 0);
  sub_100E29638((uint64_t)v7, type metadata accessor for CRLPathSourceData);
  swift_endAccess();
  uint64_t v13 = *(void **)(v2 + qword_10169E700);
  *(void *)(v2 + qword_10169E700) = v8;
}

void sub_100E210C4()
{
  uint64_t v1 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = &v42[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for CRLPathSourceData(0);
  __chkstk_darwin(v5 - 8, v6);
  id v8 = &v42[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9, v10);
  uint64_t v12 = &v42[-v11];
  uint64_t v13 = sub_1005057FC(&qword_1016892B0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = &v42[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17, v18);
  uint64_t v21 = &v42[-v20];
  uint64_t v22 = *(void **)(v0 + qword_10169E700);
  if (v22)
  {
    uint64_t v48 = qword_10169E700;
    uint64_t v49 = v8;
    uint64_t v23 = *(void *)(*(void *)v0 + 632);
    uint64_t v45 = v0;
    uint64_t v24 = v0 + v23;
    uint64_t v25 = v19;
    swift_beginAccess();
    uint64_t v46 = v24;
    sub_100522E9C(v24, (uint64_t)v21, &qword_1016892B0);
    uint64_t v47 = v25;
    id v26 = v22;
    sub_1005057FC(&qword_101686808);
    CRRegister.wrappedValue.getter();
    sub_100E2B678((uint64_t)&v4[*(int *)(v1 + 20)], (uint64_t)v12, type metadata accessor for CRLPathSourceData);
    sub_100E29638((uint64_t)v4, type metadata accessor for CRLShapeItemParentAffinity);
    sub_100522F00((uint64_t)v21, &qword_1016892B0);
    self;
    int64_t v50 = v26;
    uint64_t v27 = swift_dynamicCastObjCClass();
    if (!v27) {
      goto LABEL_8;
    }
    uint64_t v28 = (void *)v27;
    sub_10051B3EC((uint64_t)(v12 + 184), (uint64_t)v54, &qword_10168A060);
    sub_10051B3EC((uint64_t)v54, (uint64_t)&v55, &qword_10168A060);
    if (sub_1008E0338((uint64_t)&v55) == 1) {
      goto LABEL_8;
    }
    unint64_t v29 = v50;
    [v28 naturalSize];
    double v31 = v30;
    double v33 = v32;
    double v34 = v57;
    double v35 = v58;
    id v44 = [v28 type];
    uint64_t v51 = v55;
    char v52 = v56;
    sub_1005057FC(&qword_10168E8B8);
    CRExtensible.rawValue.getter();
    id v36 = v53;
    BOOL v37 = sub_1000640C4(v31, v33, v34, v35, 0.5);
    int v43 = sub_100AA6E78(v29);
    uint64_t v38 = v29;

    if (v44 != v36) {
      goto LABEL_8;
    }
    if (v37)
    {
      sub_100E29638((uint64_t)v12, type metadata accessor for CRLPathSourceData);
      if (v43)
      {
LABEL_11:

        return;
      }
    }
    else
    {
LABEL_8:
      sub_100E29638((uint64_t)v12, type metadata accessor for CRLPathSourceData);
    }
    sub_100522E9C(v46, (uint64_t)v16, &qword_1016892B0);
    CRRegister.wrappedValue.getter();
    uint64_t v39 = (uint64_t)v49;
    sub_100E2B678((uint64_t)&v4[*(int *)(v1 + 20)], (uint64_t)v49, type metadata accessor for CRLPathSourceData);
    sub_100E29638((uint64_t)v4, type metadata accessor for CRLShapeItemParentAffinity);
    sub_100522F00((uint64_t)v16, &qword_1016892B0);
    uint64_t v40 = v50;
    BOOL v41 = sub_100AA6AA8(v50);

    sub_100E29638(v39, type metadata accessor for CRLPathSourceData);
    if (v41) {
      return;
    }
    uint64_t v38 = *(void **)(v45 + v48);
    *(void *)(v45 + v48) = 0;
    goto LABEL_11;
  }
}

uint64_t sub_100E21534@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 752);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 736) - 8) + 16))(a1, v4);
}

uint64_t (*sub_100E215D8())()
{
  return j__swift_endAccess;
}

uint64_t sub_100E21640(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 736);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(a1, a2);
  id v8 = (char *)&v11 - v7;
  (*(void (**)(uint64_t))(v9 + 760))(v6);
  (*(void (**)(uint64_t))(*(void *)(v3 + 744) + 24))(v4);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_100E21780(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100E2B678(a1, (uint64_t)v7, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  id v8 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*v1 + 776))(v10);
  (*(void (**)(unsigned char *, void))(*(void *)(v3 + 744) + 32))(v7, *(void *)(v3 + 736));
  v8(v10, 0);
  return sub_100E29638(a1, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
}

uint64_t sub_100E218DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v5, v6);
  id v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v3 + 736);
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v13 = __chkstk_darwin(v11, v12);
  uint64_t v15 = (char *)&v17 - v14;
  (*(void (**)(__n128))(v4 + 760))(v13);
  (*(void (**)(uint64_t))(*(void *)(v3 + 744) + 24))(v9);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  sub_1005057FC(&qword_101673478);
  CRRegister.wrappedValue.getter();
  sub_10051B3EC((uint64_t)&v18, (uint64_t)v19, (uint64_t *)&unk_101685110);
  sub_100E29638((uint64_t)v8, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  return sub_10051B3EC((uint64_t)v19, a1, (uint64_t *)&unk_101685110);
}

uint64_t sub_100E21ADC(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*v1 + 776))(v9);
  uint64_t v5 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, void))(*(void *)(v3 + 744) + 40))(v8, *(void *)(v3 + 736));
  sub_10051B3EC(a1, (uint64_t)v7, (uint64_t *)&unk_101685110);
  type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  sub_1005057FC(&qword_101673478);
  CRRegister.wrappedValue.setter();
  v5(v8, 0);
  return v4(v9, 0);
}

uint64_t sub_100E21C10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, float a6@<S0>)
{
  uint64_t v46 = a4;
  uint64_t v44 = a3;
  uint64_t v42 = a2;
  uint64_t v39 = a1;
  uint64_t v8 = sub_1005057FC(&qword_101689320);
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v45 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43, v11);
  uint64_t v40 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_101673478);
  uint64_t v37 = *(void *)(v13 - 8);
  uint64_t v38 = v13;
  __chkstk_darwin(v13, v14);
  id v36 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  uint64_t v34 = *(void *)(v16 - 8);
  uint64_t v35 = v16;
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v53, 0, 112);
  uint64_t v33 = sub_1005057FC(&qword_101686E98);
  uint64_t v32 = sub_100E27560(&qword_10169EBB8, &qword_101686E98, (void (*)(void))sub_10091312C);
  CRRegister.init(wrappedValue:)();
  uint64_t v20 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v31 = a5 + v20[5];
  sub_10051A3F4((uint64_t)v53);
  sub_10051B3EC((uint64_t)v53, (uint64_t)&v49, (uint64_t *)&unk_101685110);
  sub_1005057FC((uint64_t *)&unk_101685110);
  sub_100E27560((unint64_t *)&qword_101673508, (uint64_t *)&unk_101685110, (void (*)(void))sub_100552D2C);
  CRRegister.init(wrappedValue:)();
  uint64_t v30 = a5 + v20[6];
  uint64_t v52 = 0;
  long long v50 = 0u;
  long long v51 = 0u;
  long long v49 = 0u;
  sub_1005057FC(&qword_10169EBC8);
  sub_100E27560((unint64_t *)&unk_10169EBD0, &qword_10169EBC8, (void (*)(void))sub_10089CAA8);
  CRRegister.init(wrappedValue:)();
  uint64_t v21 = a5 + v20[7];
  uint64_t v52 = 0;
  long long v50 = 0u;
  long long v51 = 0u;
  long long v49 = 0u;
  CRRegister.init(wrappedValue:)();
  uint64_t v22 = a5 + v20[8];
  LODWORD(v49) = 0;
  CRRegister.init(wrappedValue:)();
  *(void *)(a5 + v20[9]) = &_swiftEmptyDictionarySingleton;
  sub_10051B3EC(v39, (uint64_t)&v49, &qword_101686E98);
  CRRegister.init(_:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 40))(a5, v19, v35);
  sub_10051B3EC(v42, (uint64_t)&v49, (uint64_t *)&unk_101685110);
  uint64_t v23 = v36;
  CRRegister.init(_:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 40))(v31, v23, v38);
  sub_10051B3EC(v44, (uint64_t)&v49, &qword_10169EBC8);
  uint64_t v24 = v40;
  CRRegister.init(_:)();
  uint64_t v25 = *(void (**)(uint64_t, char *, uint64_t))(v41 + 40);
  uint64_t v26 = v43;
  v25(v30, v24, v43);
  sub_10051B3EC(v46, (uint64_t)&v49, &qword_10169EBC8);
  CRRegister.init(_:)();
  v25(v21, v24, v26);
  *(float *)&long long v49 = a6;
  uint64_t v27 = v45;
  CRRegister.init(_:)();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v47 + 40))(v22, v27, v48);
}

unint64_t sub_100E22178(unint64_t result, uint64_t (*a2)(unint64_t))
{
  if (result)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      unint64_t v4 = *(void *)(*(void *)v2 + 16);
      BOOL v5 = v4 >= result;
      uint64_t result = v4 - result;
      if (v5) {
        return a2(result);
      }
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_100E221A8(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x72756F5368746170;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_100E22260(char *a1, char *a2)
{
  return qword_1011B9750[*a1] == qword_1011B9750[*a2];
}

Swift::Int sub_100E22284()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011B9750[v1]);
  return Hasher._finalize()();
}

void sub_100E222D4()
{
  Hasher._combine(_:)(qword_1011B9750[*v0]);
}

Swift::Int sub_100E2230C()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011B9750[v1]);
  return Hasher._finalize()();
}

uint64_t sub_100E22358@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100E2CF7C(*a1);
  *a2 = result;
  return result;
}

void sub_100E22384(void *a1@<X8>)
{
  *a1 = qword_1011B9750[*v1];
}

unint64_t sub_100E2239C()
{
  return sub_100E221A8(*v0);
}

uint64_t sub_100E223A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100E2CFA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100E223CC()
{
  return qword_1011B9750[*v0];
}

uint64_t sub_100E223E4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100E2CF7C(a1);
  *a2 = result;
  return result;
}

void sub_100E2240C(void *a1@<X8>)
{
  *a1 = &off_101503438;
}

uint64_t sub_100E2241C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100E2AD68();
  unint64_t v5 = sub_100E2ADC0();

  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100E22474(uint64_t a1)
{
  unint64_t v2 = sub_100E2ADC0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100E224B0(uint64_t a1)
{
  unint64_t v2 = sub_100E2ADC0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100E224EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v65 = a2;
  uint64_t v3 = type metadata accessor for CRLPKStrokePathData();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v63 = (uint64_t)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_10168E498);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v64 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  int v69 = (char *)&v61 - v12;
  uint64_t v67 = type metadata accessor for CRLPathSourceData(0);
  __chkstk_darwin(v67, v13);
  uint64_t v68 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for CRLBoardItemParentAffinity();
  __chkstk_darwin(v70, v15);
  id v71 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC(&qword_10169EDF0);
  uint64_t v72 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __n128 v23 = __chkstk_darwin(v21, v22);
  uint64_t v25 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = (uint64_t)&v25[*(int *)(v26 + 24)];
  uint64_t v66 = v4;
  uint64_t v28 = *(void (**)(__n128))(v4 + 56);
  uint64_t v76 = v27;
  v28(v23);
  uint64_t v29 = &v25[*(int *)(v21 + 28)];
  *(void *)uint64_t v29 = 0;
  v29[8] = -1;
  double v73 = (void *)*(int *)(v21 + 32);
  double v74 = a1;
  *(void *)((char *)v73 + (void)v25) = _swiftEmptyDictionarySingleton;
  sub_10050F848(a1, a1[3]);
  sub_100E2ADC0();
  uint64_t v30 = v75;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v30)
  {
    uint64_t v34 = v76;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v74);
    sub_100522F00(v34, &qword_10168E498);
    return swift_bridgeObjectRelease();
  }
  uint64_t v75 = v21;
  uint64_t v61 = v29;
  uint64_t v62 = v3;
  uint64_t v32 = v68;
  uint64_t v31 = v69;
  char v82 = 0;
  sub_100E2AB94(&qword_101679AF0, (void (*)(uint64_t))type metadata accessor for CRLBoardItemParentAffinity);
  uint64_t v33 = (uint64_t)v71;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  sub_100E2D1B0(v33, 0, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  char v81 = 1;
  sub_100E2AB94(&qword_10168B810, (void (*)(uint64_t))type metadata accessor for CRLPathSourceData);
  uint64_t v36 = (uint64_t)v32;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v37 = *(int *)(v75 + 20);
  sub_100E2D1B0(v36, v37, type metadata accessor for CRLPathSourceData);
  char v80 = 2;
  sub_100E2AB94(&qword_10169EDF8, (void (*)(uint64_t))type metadata accessor for CRLPKStrokePathData);
  uint64_t v38 = (uint64_t)v31;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v39 = v76;
  sub_1006063BC(v38, v76, &qword_10168E498);
  sub_1005057FC(&qword_10169EE00);
  char v79 = 3;
  sub_100E2D218(&qword_10169EE08);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  char v40 = v78;
  uint64_t v41 = v61;
  *(void *)uint64_t v61 = v77;
  v41[8] = v40;
  uint64_t v42 = v39;
  uint64_t v43 = v64;
  sub_100522E9C(v42, v64, &qword_10168E498);
  uint64_t v44 = v66 + 48;
  uint64_t v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
  int v46 = v45(v43, 1, v62);
  uint64_t v47 = v72;
  if (v46 == 1)
  {
    (*(void (**)(char *, uint64_t))(v72 + 8))(v20, v17);
    sub_100522F00(v43, &qword_10168E498);
    uint64_t v48 = v65;
LABEL_20:
    sub_100E2B678((uint64_t)v25, v48, type metadata accessor for CRLShapeItemParentAffinity);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v74);
    return sub_100E29638((uint64_t)v25, type metadata accessor for CRLShapeItemParentAffinity);
  }
  uint64_t v66 = v44;
  uint64_t v75 = v17;
  uint64_t v49 = v43;
  uint64_t v50 = v63;
  sub_100E2D1B0(v49, v63, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
  uint64_t v51 = *(void *)(v37 + 120);
  uint64_t v48 = v65;
  if (!v51)
  {
    sub_100E29638(v50, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v20, v75);
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  sub_1007BEE30();
  id v52 = sub_100ABF740(v51);
  uint64_t v53 = v72;
  int v54 = v52;
  uint64_t result = (uint64_t)[self countOfBSplineControlPointsForBezierPath:v52];
  uint64_t v55 = *(void *)(v50 + 72);
  if ((v55 & 0x8000000000000000) == 0 && result == v55)
  {
LABEL_18:

    sub_100E29638(v50, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v20, v75);
    goto LABEL_20;
  }
  if (result < 0)
  {
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  double v73 = v54;
  if (v55 >= result) {
    uint64_t v55 = result;
  }
  unint64_t v56 = v55 - 1;
  if (__OFSUB__(v55, 1)) {
    goto LABEL_22;
  }
  uint64_t v57 = v76;
  uint64_t result = v45(v76, 1, v62);
  if (result != 1)
  {
    unint64_t v58 = *(void *)(v57 + 72);
    if ((v58 & 0x8000000000000000) == 0)
    {
      int v54 = v73;
      if ((v56 & 0x8000000000000000) == 0 && v56 < v58)
      {
        unint64_t v59 = v58 + ~v56;
        uint64_t v60 = v76;
        id v71 = (char *)v56;
        sub_100E22178(v59, (uint64_t (*)(unint64_t))sub_100F4DEF4);
        sub_100E22178(v59, (uint64_t (*)(unint64_t))sub_100F4DEF4);
        sub_100E22178(v59, (uint64_t (*)(unint64_t))sub_100F4DEF4);
        sub_100E22178(v59, (uint64_t (*)(unint64_t))sub_100F4DEF4);
        sub_100E22178(v59, (uint64_t (*)(unint64_t))sub_100F4E050);
        sub_100E22178(v59, (uint64_t (*)(unint64_t))sub_100F4E050);
        sub_100E22178(v59, (uint64_t (*)(unint64_t))sub_100F4E050);
        uint64_t v50 = v63;
        sub_100E22178(v59, (uint64_t (*)(unint64_t))sub_100F4E050);
        sub_100E22178(v59, (uint64_t (*)(unint64_t))sub_100F4DEF4);
        *(void *)(v60 + 72) = v71 + 1;
        sub_100B35FB4();
        uint64_t v53 = v72;
        int v54 = v73;
      }
      goto LABEL_18;
    }
    goto LABEL_23;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_100E22E2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v52 = a1;
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = &v47[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5, v6);
  uint64_t v8 = &v47[-v7];
  uint64_t v9 = type metadata accessor for CRLBoardItemParentAffinity();
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9, v11);
  uint64_t v13 = &v47[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14, v15);
  uint64_t v51 = &v47[-v16];
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v49 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  uint64_t v50 = v18 + 56;
  v49(v8, 1, 1, v17);
  id v19 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) init];
  [v19 position];
  float v21 = v20;
  float v23 = v22;
  [v19 size];
  float v25 = v24;
  float v27 = v26;
  [v19 angle];
  float v29 = v28;
  unsigned int v48 = [v19 widthValid];
  unsigned __int8 v30 = [v19 heightValid];
  unsigned __int8 v31 = [v19 horizontalFlip];
  unsigned __int8 v32 = [v19 verticalFlip];
  sub_100522E9C((uint64_t)v8, (uint64_t)v4, (uint64_t *)&unk_101674520);
  v49(v13, 1, 1, v17);
  *(void *)&v13[*(int *)(v10 + 32)] = _swiftEmptyDictionarySingleton;
  sub_1006063BC((uint64_t)v4, (uint64_t)v13, (uint64_t *)&unk_101674520);
  uint64_t v33 = (float *)&v13[*(int *)(v10 + 28)];
  *uint64_t v33 = v21;
  v33[1] = v23;
  v33[2] = v25;
  v33[3] = v27;
  v33[4] = v29;
  *((unsigned char *)v33 + 20) = v48;
  *((unsigned char *)v33 + 21) = v30;
  *((unsigned char *)v33 + 22) = v31;
  *((unsigned char *)v33 + 23) = v32;
  *((void *)v33 + 3) = _swiftEmptyDictionarySingleton;
  uint64_t v34 = v51;
  sub_100E2D1B0((uint64_t)v13, (uint64_t)v51, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);

  sub_100522F00((uint64_t)v8, (uint64_t *)&unk_101674520);
  uint64_t v35 = (float *)&v34[*(int *)(v10 + 28)];
  uint64_t v36 = (uint64_t)v34;
  id v37 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) initWithPosition:*((unsigned __int8 *)v35 + 20) size:*((unsigned __int8 *)v35 + 21) widthValid:*((unsigned __int8 *)v35 + 22) heightValid:*((unsigned __int8 *)v35 + 23) horizontalFlip:*v35 verticalFlip:v35[1] angle:v35[2]];
  [v37 size];
  id v40 = [self pathSourceForShapeType:3 naturalSize:v38 v39];
  uint64_t v41 = v52;
  sub_100E2B678(v36, v52, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  uint64_t v42 = (int *)type metadata accessor for CRLShapeItemParentAffinity(0);
  sub_100AA59E0(v40, v41 + v42[5]);
  uint64_t v43 = v41 + v42[6];
  uint64_t v44 = type metadata accessor for CRLPKStrokePathData();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v43, 1, 1, v44);

  uint64_t v45 = v41 + v42[7];
  *(void *)uint64_t v45 = 0;
  *(unsigned char *)(v45 + 8) = -1;
  *(void *)(v41 + v42[8]) = _swiftEmptyDictionarySingleton;
  return sub_100E29638(v36, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
}

uint64_t sub_100E2327C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_10169EE10);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100E2ADC0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v16) = 0;
  type metadata accessor for CRLBoardItemParentAffinity();
  sub_100E2AB94(&qword_101679AF8, (void (*)(uint64_t))type metadata accessor for CRLBoardItemParentAffinity);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for CRLShapeItemParentAffinity(0);
    LOBYTE(v16) = 1;
    type metadata accessor for CRLPathSourceData(0);
    sub_100E2AB94(&qword_10168B820, (void (*)(uint64_t))type metadata accessor for CRLPathSourceData);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v16) = 2;
    type metadata accessor for CRLPKStrokePathData();
    sub_100E2AB94(&qword_10169EE18, (void (*)(uint64_t))type metadata accessor for CRLPKStrokePathData);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    uint64_t v11 = (uint64_t *)(v3 + *(int *)(v10 + 28));
    uint64_t v12 = *v11;
    LOBYTE(v11) = *((unsigned char *)v11 + 8);
    uint64_t v16 = v12;
    char v17 = (char)v11;
    char v15 = 3;
    sub_1005057FC(&qword_10169EE00);
    sub_100E2D218(&qword_10169EE20);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    uint64_t v16 = *(void *)(v3 + *(int *)(v10 + 32));
    char v15 = 4;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100E235C4(uint64_t a1)
{
  return sub_1006063BC(a1, v1, (uint64_t *)&unk_101674520);
}

uint64_t sub_100E235E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CRLBoardItemParentAffinity() + 20);

  return sub_10068EF90(v3, a1);
}

uint64_t sub_100E2362C(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CRLBoardItemParentAffinity() + 20);

  return sub_10068EF34(a1, v3);
}

uint64_t sub_100E23674@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100E224EC(a1, a2);
}

uint64_t sub_100E2368C(void *a1)
{
  return sub_100E2327C(a1);
}

uint64_t sub_100E236A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100E2AB94(&qword_10169EDB0, (void (*)(uint64_t))type metadata accessor for CRLShapeItemParentAffinity);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100E23728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100E2AB94(&qword_10169EDB0, (void (*)(uint64_t))type metadata accessor for CRLShapeItemParentAffinity);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100E237AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100E2AB94(&qword_10169ECC8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemParentAffinity);
  uint64_t v7 = sub_100E2AB94(&qword_10169EDB8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemParentAffinity);

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100E23878(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100E2AB94(&qword_10169EDB0, (void (*)(uint64_t))type metadata accessor for CRLShapeItemParentAffinity);

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100E238F4()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100E23974()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100E239EC(uint64_t a1)
{
  uint64_t v2 = sub_100E2AB94(&qword_10169ED20, (void (*)(uint64_t))type metadata accessor for CRLShapeItemParentAffinity);

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100E23A68()
{
  qword_10171C918 = 97;
  unk_10171C920 = 0xE100000000000000;
  uint64_t result = swift_getKeyPath();
  qword_10171C928 = result;
  return result;
}

uint64_t sub_100E23AAC@<X0>(uint64_t a1@<X8>)
{
  return sub_100E2B678(v1, a1, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
}

uint64_t sub_100E23AE0(uint64_t a1)
{
  uint64_t v2 = sub_100E2AB94(&qword_10169ED88, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);

  return CRType.context.getter(a1, v2);
}

uint64_t sub_100E23B4C()
{
  sub_100E2AB94(&qword_10169EDE0, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);

  return CRStruct_1.actionUndoingDifference(from:)();
}

uint64_t sub_100E23BD0()
{
  sub_100E2AB94(&qword_10169EDE0, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);

  return CRStruct_1.apply(_:)();
}

uint64_t sub_100E23C4C()
{
  sub_100E2AB94(&qword_10169EDE0, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);

  return CRStruct_1.hasDelta(from:)();
}

uint64_t sub_100E23CC8()
{
  sub_100E2AB94(&qword_10169EDE0, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);

  return CRStruct_1.delta(_:from:)();
}

uint64_t sub_100E23D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100E2AB94(&qword_10169EDE0, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);

  return CRStruct_1.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_100E23DD8()
{
  sub_100E2AB94(&qword_10169EDE0, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);

  return CRStruct_1.merge(delta:)();
}

uint64_t sub_100E23E54()
{
  if (qword_101670148 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_10171C918;
  swift_bridgeObjectRetain();
  swift_retain();
  return v0;
}

uint64_t sub_100E23ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100E2AB94(&qword_10169EDE0, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);

  return CRStruct_1.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100E23F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100E2AB94(&qword_10169EDE0, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);

  return CRStruct_1.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100E23FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100E2AB94(&qword_10169EDE0, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);

  return CRStruct_1.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_100E24070(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100E2AB94(&qword_10169EDE0, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);

  return CRStruct_1.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_100E240EC()
{
  sub_100E2AB94(&qword_10169EDE0, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);

  return CRStruct_1.needToFinalizeTimestamps()();
}

uint64_t sub_100E24158(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100E2AB94(&qword_10169EDE0, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);

  return CRStruct_1.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_100E241D4()
{
  sub_100E2AB94(&qword_10169EDE0, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);

  return CRStruct_1.merge(_:)();
}

uint64_t sub_100E24250()
{
  return CRDT.serializedData(_:version:)();
}

uint64_t sub_100E242D0()
{
  return CRDT.init(serializedData:)();
}

uint64_t sub_100E24360(uint64_t a1)
{
  uint64_t v2 = sub_100E2AB94(&qword_10169EDE0, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);

  return static CRStruct_1.fieldKeys.getter(a1, v2);
}

uint64_t sub_100E243CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  memset(v5, 0, sizeof(v5));
  sub_10051A3F4((uint64_t)v9);
  sub_10051B3EC((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_101685110);
  memset(v7, 0, sizeof(v7));
  uint64_t v8 = 0;
  uint64_t result = sub_100E21C10((uint64_t)v5, (uint64_t)v6, (uint64_t)v7, (uint64_t)v7, a2, 0.0);
  *(void *)(a2 + *(int *)(a1 + 20)) = _swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_100E2446C()
{
  return CRStruct_1.init(from:)();
}

uint64_t sub_100E244EC()
{
  return CRStruct_1.encode(to:)();
}

uint64_t sub_100E24564(uint64_t a1)
{
  uint64_t v2 = sub_100E2AB94(&qword_10169EDE0, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);

  return CRStruct_1.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100E245E0()
{
  qword_10171C930 = 97;
  *(void *)algn_10171C938 = 0xE100000000000000;
  qword_10171C940 = swift_getKeyPath();
  unk_10171C948 = 98;
  qword_10171C950 = 0xE100000000000000;
  qword_10171C958 = swift_getKeyPath();
  qword_10171C960 = 99;
  qword_10171C968 = 0xE100000000000000;
  qword_10171C970 = swift_getKeyPath();
  unk_10171C978 = 100;
  qword_10171C980 = 0xE100000000000000;
  qword_10171C988 = swift_getKeyPath();
  qword_10171C990 = 101;
  qword_10171C998 = 0xE100000000000000;
  uint64_t result = swift_getKeyPath();
  qword_10171C9A0 = result;
  return result;
}

uint64_t sub_100E24680@<X0>(void *a1@<X8>)
{
  if (qword_101670150 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_10171C938;
  uint64_t v4 = qword_10171C940;
  uint64_t v3 = unk_10171C948;
  uint64_t v5 = qword_10171C950;
  uint64_t v6 = qword_10171C958;
  uint64_t v7 = qword_10171C960;
  uint64_t v8 = qword_10171C968;
  uint64_t v10 = qword_10171C970;
  uint64_t v9 = unk_10171C978;
  uint64_t v11 = qword_10171C980;
  uint64_t v12 = qword_10171C988;
  uint64_t v13 = qword_10171C990;
  uint64_t v14 = qword_10171C998;
  uint64_t v15 = qword_10171C9A0;
  *a1 = qword_10171C930;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  a1[8] = v10;
  a1[9] = v9;
  a1[10] = v11;
  a1[11] = v12;
  a1[12] = v13;
  a1[13] = v14;
  a1[14] = v15;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();

  return swift_retain();
}

uint64_t sub_100E24790(uint64_t a1)
{
  uint64_t v2 = sub_100E2AB94(&qword_10169EDE8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);

  return static CRStruct_5.fieldKeys.getter(a1, v2);
}

uint64_t sub_100E247FC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100E24808(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 36);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_100E24840())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_100E24864@<X0>(uint64_t a1@<X8>)
{
  memset(v3, 0, sizeof(v3));
  sub_10051A3F4((uint64_t)v7);
  sub_10051B3EC((uint64_t)v7, (uint64_t)v4, (uint64_t *)&unk_101685110);
  memset(v5, 0, sizeof(v5));
  uint64_t v6 = 0;
  return sub_100E21C10((uint64_t)v3, (uint64_t)v4, (uint64_t)v5, (uint64_t)v5, a1, 0.0);
}

uint64_t sub_100E248E8(uint64_t a1)
{
  uint64_t v2 = sub_100E2AB94((unint64_t *)&qword_10168E4A8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);

  return CRType.context.getter(a1, v2);
}

uint64_t sub_100E24954(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100E2AB94(&qword_10169EDE8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);

  return CRStruct_5.actionUndoingDifference(from:)(a1, a2, v4);
}

uint64_t sub_100E249D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100E2AB94(&qword_10169EDE8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);

  return CRStruct_5.apply(_:)(a1, a2, v4);
}

uint64_t sub_100E24A54()
{
  sub_100E2AB94(&qword_10169EDE8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);

  return CRStruct_5.hasDelta(from:)();
}

uint64_t sub_100E24AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100E2AB94(&qword_10169EDE8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);

  return CRStruct_5.delta(_:from:)(a1, a2, a3, v6);
}

uint64_t sub_100E24B64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100E2AB94(&qword_10169EDE8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);

  return CRStruct_5.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_100E24BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100E2AB94(&qword_10169EDE8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);

  return CRStruct_5.merge(delta:)(a1, a2, v4);
}

uint64_t sub_100E24C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100E2AB94(&qword_10169EDE8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);

  return CRStruct_5.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100E24CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100E2AB94(&qword_10169EDE8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);

  return CRStruct_5.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100E24D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100E2AB94(&qword_10169EDE8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);

  return CRStruct_5.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_100E24DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100E2AB94(&qword_10169EDE8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);

  return CRStruct_5.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_100E24E74()
{
  sub_100E2AB94(&qword_10169EDE8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);

  return CRStruct_5.needToFinalizeTimestamps()();
}

uint64_t sub_100E24EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100E2AB94(&qword_10169EDE8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);

  return CRStruct_5.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_100E24F5C()
{
  sub_100E2AB94(&qword_10169EDE8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);

  return CRStruct_5.merge(_:)();
}

uint64_t sub_100E24FD8()
{
  return CRDT.serializedData(_:version:)();
}

uint64_t sub_100E25058()
{
  return CRDT.init(serializedData:)();
}

uint64_t sub_100E250E8()
{
  return CRStruct_5.init(from:)();
}

uint64_t sub_100E25168()
{
  return CRStruct_5.encode(to:)();
}

uint64_t sub_100E251E0(uint64_t a1)
{
  uint64_t v2 = sub_100E2AB94(&qword_10169EDE8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);

  return CRStruct_5.minEncodingVersion.getter(a1, v2);
}

void sub_100E2525C()
{
}

uint64_t sub_100E2526C()
{
  sub_100522F00(v0 + *(void *)(*(void *)v0 + 632), &qword_1016892B0);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLShapeItemCommonData(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10169E730);
}

uint64_t sub_100E25314()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100E25358()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *sub_100E253EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100E1F860(a1, a2, a3, a4, a5, a6);
}

void *sub_100E25468(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  char v4 = a1;
  uint64_t v5 = *v3;
  uint64_t v6 = *v3;
  uint64_t v7 = *(void *)(*v3 + 736);
  uint64_t v32 = *(void *)(v7 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)v31 - v12;
  uint64_t v14 = sub_1005057FC(&qword_1016892B0);
  __chkstk_darwin(v14, v15);
  char v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  float v21 = (char *)v31 - v20;
  uint64_t v22 = (uint64_t)v3 + *(void *)(v5 + 632);
  swift_beginAccess();
  if (v4)
  {
    v31[1] = v6;
    sub_100522E9C(v22, (uint64_t)v17, &qword_1016892B0);
    sub_100523288(&qword_101675540, &qword_1016892B0);
    CRType.copy(renamingReferences:)();
    uint64_t v23 = sub_100522F00((uint64_t)v17, &qword_1016892B0);
    (*(void (**)(uint64_t))(*v3 + 760))(v23);
    dispatch thunk of CRType.copy(renamingReferences:)();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v7);
  }
  else
  {
    uint64_t v24 = sub_100522E9C(v22, (uint64_t)v21, &qword_1016892B0);
    (*(void (**)(uint64_t))(*v3 + 760))(v24);
  }
  type metadata accessor for CRLAbstractShapeItemData();
  uint64_t v25 = v3[4];
  uint64_t v26 = v3[5];
  float v29 = v3 + 2;
  uint64_t v27 = v3[2];
  uint64_t v28 = v29[1];
  swift_allocObject();
  return sub_100E1F860((uint64_t)v21, (uint64_t)v13, v28, v25, v26, v27);
}

uint64_t sub_100E257AC()
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 736) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 752));
}

uint64_t sub_100E25804()
{
  sub_100E1F94C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLAbstractShapeItemData()
{
  return sub_100568E70();
}

ValueMetadata *type metadata accessor for CRLShapeItemCommonDataTypeSpecifying()
{
  return &type metadata for CRLShapeItemCommonDataTypeSpecifying;
}

char *sub_100E25884(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
    (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1005057FC(&qword_101673478);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = v8[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
    char v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    v17(v14, v15, v16);
    v17(&a1[v8[7]], (char *)a2 + v8[7], v16);
    uint64_t v18 = v8[8];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_1005057FC(&qword_101689320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    *(void *)&a1[v8[9]] = *(uint64_t *)((char *)a2 + v8[9]);
    *(void *)&a1[*(int *)(a3 + 20)] = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10169EBA0);
}

uint64_t sub_100E25AB4(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v4 = a1 + v3[5];
  uint64_t v5 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + v3[6];
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(a1 + v3[7], v7);
  uint64_t v9 = a1 + v3[8];
  uint64_t v10 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100E25C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  *(void *)(a1 + v7[9]) = *(void *)(a2 + v7[9]);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100E25E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  *(void *)(a1 + v7[9]) = *(void *)(a2 + v7[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100E25FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  *(void *)(a1 + v7[9]) = *(void *)(a2 + v7[9]);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100E2618C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  *(void *)(a1 + v7[9]) = *(void *)(a2 + v7[9]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100E26350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100E26364);
}

uint64_t sub_100E26364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100E26424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100E26438);
}

uint64_t sub_100E26438(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CRLShapeItemCRDTData(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10169EB10);
}

uint64_t sub_100E26514()
{
  uint64_t result = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_100E265AC(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
    (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1005057FC(&qword_101673478);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    v16(v13, v14, v15);
    v16(&a1[a3[7]], (char *)a2 + a3[7], v15);
    uint64_t v17 = a3[8];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = sub_1005057FC(&qword_101689320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    *(void *)&a1[a3[9]] = *(uint64_t *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100E26794(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(a1 + a2[7], v8);
  uint64_t v10 = a1 + a2[8];
  uint64_t v11 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100E26904(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  v15(v12, v13, v14);
  v15(a1 + a3[7], a2 + a3[7], v14);
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100E26A9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24);
  v15(v12, v13, v14);
  v15(a1 + a3[7], a2 + a3[7], v14);
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100E26C40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  v15(a1 + a3[7], a2 + a3[7], v14);
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_100E26DD4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(a1 + a3[7], a2 + a3[7], v14);
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100E26F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100E26F84);
}

uint64_t sub_100E26F84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1005057FC(&qword_101673478);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_1005057FC(&qword_101689320);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_9;
  }
  unint64_t v17 = *(void *)(a1 + a3[9]);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

uint64_t sub_100E27140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100E27154);
}

uint64_t sub_100E27154(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_1005057FC(&qword_101673478);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t v16 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[6];
      }
      else
      {
        uint64_t result = sub_1005057FC(&qword_101689320);
        if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
        {
          *(void *)(a1 + a4[9]) = (a2 - 1);
          return result;
        }
        uint64_t v10 = result;
        uint64_t v14 = *(void *)(result - 8);
        uint64_t v15 = a4[8];
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_100E2730C()
{
  sub_100E274DC(319, &qword_10169EBB0, &qword_101686E98, &qword_10169EBB8, (void (*)(void))sub_10091312C);
  if (v0 <= 0x3F)
  {
    sub_100E274DC(319, &qword_101673500, (uint64_t *)&unk_101685110, (unint64_t *)&qword_101673508, (void (*)(void))sub_100552D2C);
    if (v1 <= 0x3F)
    {
      sub_100E274DC(319, &qword_10169EBC0, &qword_10169EBC8, (unint64_t *)&unk_10169EBD0, (void (*)(void))sub_10089CAA8);
      if (v2 <= 0x3F)
      {
        sub_100E275D8();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_100E274DC(uint64_t a1, unint64_t *a2, uint64_t *a3, unint64_t *a4, void (*a5)(void))
{
  if (!*a2)
  {
    sub_100522D34(a3);
    sub_100E27560(a4, a3, a5);
    unint64_t v9 = type metadata accessor for CRRegister();
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_100E27560(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100E275D8()
{
  if (!qword_101675378)
  {
    unint64_t v0 = type metadata accessor for CRRegister();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101675378);
    }
  }
}

uint64_t *sub_100E27638(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = *(void *)(v7 - 8);
    double v74 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    uint64_t v75 = v8;
    uint64_t v76 = v7;
    if (v74(a2, 1, v7))
    {
      uint64_t v9 = sub_1005057FC((uint64_t *)&unk_101674520);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = type metadata accessor for CRLBoardItemParentAffinity();
    uint64_t v12 = *(int *)(v11 + 20);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *((_DWORD *)v13 + 4) = *((_DWORD *)v14 + 4);
    *((_DWORD *)v13 + 5) = *((_DWORD *)v14 + 5);
    *((void *)v13 + 3) = *((void *)v14 + 3);
    *(uint64_t *)((char *)a1 + *(int *)(v11 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v11 + 24));
    uint64_t v77 = a3;
    char v78 = a2;
    uint64_t v15 = *(int *)(a3 + 20);
    uint64_t v16 = (char *)a1 + v15;
    unint64_t v17 = (char *)a2 + v15;
    *(_WORD *)uint64_t v16 = *(_WORD *)((char *)a2 + v15);
    uint64_t v18 = *(uint64_t *)((char *)a2 + v15 + 16);
    *((void *)v16 + 1) = *(uint64_t *)((char *)a2 + v15 + 8);
    *((void *)v16 + 2) = v18;
    uint64_t v19 = *(uint64_t *)((char *)a2 + v15 + 32);
    *((void *)v16 + 3) = *(uint64_t *)((char *)a2 + v15 + 24);
    *((void *)v16 + 4) = v19;
    *((void *)v16 + 5) = *(uint64_t *)((char *)a2 + v15 + 40);
    v16[48] = *((unsigned char *)a2 + v15 + 48);
    *(_OWORD *)(v16 + 52) = *(_OWORD *)((char *)a2 + v15 + 52);
    uint64_t v21 = *(uint64_t *)((char *)a2 + v15 + 72);
    uint64_t v20 = *(uint64_t *)((char *)a2 + v15 + 80);
    v16[88] = v17[88];
    *((void *)v16 + 9) = v21;
    *((void *)v16 + 10) = v20;
    *((_DWORD *)v16 + 23) = *((_DWORD *)v17 + 23);
    *((void *)v16 + 12) = *((void *)v17 + 12);
    v16[104] = v17[104];
    v16[105] = v17[105];
    *((void *)v16 + 14) = *((void *)v17 + 14);
    uint64_t v22 = *((void *)v17 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22)
    {
      uint64_t v23 = *((void *)v17 + 16);
      uint64_t v24 = *((void *)v17 + 17);
      *((void *)v16 + 15) = v22;
      *((void *)v16 + 16) = v23;
      *((void *)v16 + 17) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v16 + 120) = *(_OWORD *)(v17 + 120);
      *((void *)v16 + 17) = *((void *)v17 + 17);
    }
    *((void *)v16 + 18) = *((void *)v17 + 18);
    *((void *)v16 + 19) = *((void *)v17 + 19);
    v16[160] = v17[160];
    *(void *)(v16 + 164) = *(void *)(v17 + 164);
    *((void *)v16 + 22) = *((void *)v17 + 22);
    uint64_t v25 = v16 + 184;
    uint64_t v26 = v17 + 184;
    uint64_t v27 = *((void *)v17 + 25);
    swift_bridgeObjectRetain();
    if (v27)
    {
      *uint64_t v25 = *v26;
      v16[192] = v17[192];
      uint64_t v28 = *((void *)v17 + 26);
      uint64_t v29 = *((void *)v17 + 27);
      *((void *)v16 + 25) = v27;
      *((void *)v16 + 26) = v28;
      *((void *)v16 + 27) = v29;
      *((void *)v16 + 28) = *((void *)v17 + 28);
      *((void *)v16 + 29) = *((void *)v17 + 29);
      v16[240] = v17[240];
      *(void *)(v16 + 244) = *(void *)(v17 + 244);
      uint64_t v30 = *((void *)v17 + 33);
      *((void *)v16 + 32) = *((void *)v17 + 32);
      *((void *)v16 + 33) = v30;
      v16[272] = v17[272];
      *(void *)(v16 + 276) = *(void *)(v17 + 276);
      *((void *)v16 + 36) = *((void *)v17 + 36);
      v16[296] = v17[296];
      *((void *)v16 + 38) = *((void *)v17 + 38);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v31 = *(_OWORD *)(v17 + 264);
      *(_OWORD *)(v16 + 248) = *(_OWORD *)(v17 + 248);
      *(_OWORD *)(v16 + 264) = v31;
      long long v32 = *(_OWORD *)(v17 + 296);
      *(_OWORD *)(v16 + 280) = *(_OWORD *)(v17 + 280);
      *(_OWORD *)(v16 + 296) = v32;
      long long v33 = *(_OWORD *)(v17 + 200);
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      *(_OWORD *)(v16 + 200) = v33;
      long long v34 = *(_OWORD *)(v17 + 232);
      *(_OWORD *)(v16 + 216) = *(_OWORD *)(v17 + 216);
      *(_OWORD *)(v16 + 232) = v34;
    }
    uint64_t v35 = type metadata accessor for CRLPathSourceData(0);
    uint64_t v36 = *(int *)(v35 + 52);
    id v37 = &v16[v36];
    double v38 = &v17[v36];
    double v39 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
    uint64_t v40 = *((void *)v39 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v40 + 48))(v38, 1, v39))
    {
      uint64_t v41 = sub_1005057FC(&qword_10168B6F8);
      memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v37, v38, v76);
      *(void *)&v37[v39[5]] = *(void *)&v38[v39[5]];
      *(void *)&v37[v39[6]] = *(void *)&v38[v39[6]];
      *(void *)&v37[v39[7]] = *(void *)&v38[v39[7]];
      uint64_t v42 = *(void (**)(char *, void, uint64_t, int *))(v40 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v42(v37, 0, 1, v39);
    }
    *(void *)&v16[*(int *)(v35 + 56)] = *(void *)&v17[*(int *)(v35 + 56)];
    uint64_t v44 = v77;
    uint64_t v43 = v78;
    uint64_t v45 = *(int *)(v77 + 24);
    int v46 = (uint64_t *)((char *)a1 + v45);
    uint64_t v47 = (uint64_t *)((char *)v78 + v45);
    unsigned int v48 = (int *)type metadata accessor for CRLPKStrokePathData();
    uint64_t v49 = *((void *)v48 - 1);
    uint64_t v50 = *(unsigned int (**)(void *, uint64_t, int *))(v49 + 48);
    swift_bridgeObjectRetain();
    if (v50(v47, 1, v48))
    {
      uint64_t v51 = sub_1005057FC(&qword_10168E498);
      memcpy(v46, v47, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      uint64_t v52 = v47[1];
      *int v46 = *v47;
      v46[1] = v52;
      uint64_t v53 = v47[3];
      v46[2] = v47[2];
      v46[3] = v53;
      uint64_t v54 = v47[5];
      v46[4] = v47[4];
      v46[5] = v54;
      uint64_t v55 = v47[7];
      v46[6] = v47[6];
      v46[7] = v55;
      uint64_t v56 = v47[9];
      v46[8] = v47[8];
      v46[9] = v56;
      v46[10] = v47[10];
      *((_DWORD *)v46 + 22) = *((_DWORD *)v47 + 22);
      uint64_t v57 = v48[16];
      uint64_t v72 = (char *)v47 + v57;
      double v73 = (char *)v46 + v57;
      uint64_t v71 = type metadata accessor for Date();
      uint64_t v70 = *(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v70(v73, v72, v71);
      *(_DWORD *)((char *)v46 + v48[17]) = *(_DWORD *)((char *)v47 + v48[17]);
      *(_DWORD *)((char *)v46 + v48[18]) = *(_DWORD *)((char *)v47 + v48[18]);
      uint64_t v58 = v48[19];
      unint64_t v59 = (char *)v46 + v58;
      uint64_t v60 = (char *)v47 + v58;
      if (v74((void *)((char *)v47 + v58), 1, v76))
      {
        uint64_t v61 = sub_1005057FC((uint64_t *)&unk_101674520);
        memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v59, v60, v76);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v59, 0, 1, v76);
      }
      uint64_t v62 = v48[20];
      uint64_t v63 = (char *)v46 + v62;
      uint64_t v64 = (char *)v47 + v62;
      *(void *)uint64_t v63 = *(void *)v64;
      v63[8] = v64[8];
      *((unsigned char *)v46 + v48[21]) = *((unsigned char *)v47 + v48[21]);
      (*(void (**)(void *, void, uint64_t, int *))(v49 + 56))(v46, 0, 1, v48);
      uint64_t v44 = v77;
      uint64_t v43 = v78;
    }
    uint64_t v65 = *(int *)(v44 + 28);
    uint64_t v66 = *(int *)(v44 + 32);
    uint64_t v67 = (char *)a1 + v65;
    uint64_t v68 = (uint64_t)v43 + v65;
    *(void *)uint64_t v67 = *(void *)v68;
    v67[8] = *(unsigned char *)(v68 + 8);
    *(uint64_t *)((char *)a1 + v66) = *(uint64_t *)((char *)v43 + v66);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100E27DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  type metadata accessor for CRLBoardItemParentAffinity();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v7 + 120))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v7 + 200))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = v7 + *(int *)(type metadata accessor for CRLPathSourceData(0) + 52);
  uint64_t v9 = type metadata accessor for CRLEditableBezierPathSourceData(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + *(int *)(a2 + 24);
  uint64_t v11 = type metadata accessor for CRLPKStrokePathData();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = v10 + *(int *)(v11 + 64);
    uint64_t v13 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    uint64_t v14 = v10 + *(int *)(v11 + 76);
    if (!v6(v14, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v14, v4);
    }
  }

  return swift_bridgeObjectRelease();
}

char *sub_100E28100(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  double v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v74 = v7;
  uint64_t v75 = v6;
  if (v73(a2, 1, v6))
  {
    uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101674520);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = type metadata accessor for CRLBoardItemParentAffinity();
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_DWORD *)v11 + 4) = *((_DWORD *)v12 + 4);
  *((_DWORD *)v11 + 5) = *((_DWORD *)v12 + 5);
  *((void *)v11 + 3) = *((void *)v12 + 3);
  *(void *)&a1[*(int *)(v9 + 24)] = *(void *)&a2[*(int *)(v9 + 24)];
  uint64_t v76 = a3;
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v77 = a2;
  char v78 = a1;
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *(_WORD *)uint64_t v14 = *(_WORD *)v15;
  uint64_t v16 = *((void *)v15 + 2);
  *((void *)v14 + 1) = *((void *)v15 + 1);
  *((void *)v14 + 2) = v16;
  uint64_t v17 = *((void *)v15 + 4);
  *((void *)v14 + 3) = *((void *)v15 + 3);
  *((void *)v14 + 4) = v17;
  *((void *)v14 + 5) = *((void *)v15 + 5);
  v14[48] = v15[48];
  *(_OWORD *)(v14 + 52) = *(_OWORD *)(v15 + 52);
  uint64_t v19 = *((void *)v15 + 9);
  uint64_t v18 = *((void *)v15 + 10);
  v14[88] = v15[88];
  *((void *)v14 + 9) = v19;
  *((void *)v14 + 10) = v18;
  *((_DWORD *)v14 + 23) = *((_DWORD *)v15 + 23);
  *((void *)v14 + 12) = *((void *)v15 + 12);
  v14[104] = v15[104];
  v14[105] = v15[105];
  *((void *)v14 + 14) = *((void *)v15 + 14);
  uint64_t v20 = *((void *)v15 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20)
  {
    uint64_t v21 = *((void *)v15 + 16);
    uint64_t v22 = *((void *)v15 + 17);
    *((void *)v14 + 15) = v20;
    *((void *)v14 + 16) = v21;
    *((void *)v14 + 17) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v14 + 120) = *(_OWORD *)(v15 + 120);
    *((void *)v14 + 17) = *((void *)v15 + 17);
  }
  *((void *)v14 + 18) = *((void *)v15 + 18);
  *((void *)v14 + 19) = *((void *)v15 + 19);
  v14[160] = v15[160];
  *(void *)(v14 + 164) = *(void *)(v15 + 164);
  *((void *)v14 + 22) = *((void *)v15 + 22);
  uint64_t v23 = v14 + 184;
  uint64_t v24 = v15 + 184;
  uint64_t v25 = *((void *)v15 + 25);
  swift_bridgeObjectRetain();
  uint64_t v26 = v76;
  if (v25)
  {
    *uint64_t v23 = *v24;
    v14[192] = v15[192];
    uint64_t v27 = *((void *)v15 + 26);
    uint64_t v28 = *((void *)v15 + 27);
    *((void *)v14 + 25) = v25;
    *((void *)v14 + 26) = v27;
    *((void *)v14 + 27) = v28;
    *((void *)v14 + 28) = *((void *)v15 + 28);
    *((void *)v14 + 29) = *((void *)v15 + 29);
    v14[240] = v15[240];
    *(void *)(v14 + 244) = *(void *)(v15 + 244);
    uint64_t v29 = *((void *)v15 + 33);
    *((void *)v14 + 32) = *((void *)v15 + 32);
    *((void *)v14 + 33) = v29;
    v14[272] = v15[272];
    *(void *)(v14 + 276) = *(void *)(v15 + 276);
    *((void *)v14 + 36) = *((void *)v15 + 36);
    v14[296] = v15[296];
    *((void *)v14 + 38) = *((void *)v15 + 38);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v30 = *(_OWORD *)(v15 + 264);
    *(_OWORD *)(v14 + 248) = *(_OWORD *)(v15 + 248);
    *(_OWORD *)(v14 + 264) = v30;
    long long v31 = *(_OWORD *)(v15 + 296);
    *(_OWORD *)(v14 + 280) = *(_OWORD *)(v15 + 280);
    *(_OWORD *)(v14 + 296) = v31;
    long long v32 = *(_OWORD *)(v15 + 200);
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    *(_OWORD *)(v14 + 200) = v32;
    long long v33 = *(_OWORD *)(v15 + 232);
    *(_OWORD *)(v14 + 216) = *(_OWORD *)(v15 + 216);
    *(_OWORD *)(v14 + 232) = v33;
  }
  long long v34 = v77;
  uint64_t v35 = type metadata accessor for CRLPathSourceData(0);
  uint64_t v36 = *(int *)(v35 + 52);
  id v37 = &v14[v36];
  double v38 = &v15[v36];
  double v39 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  uint64_t v40 = *((void *)v39 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v40 + 48))(v38, 1, v39))
  {
    uint64_t v41 = sub_1005057FC(&qword_10168B6F8);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v37, v38, v75);
    *(void *)&v37[v39[5]] = *(void *)&v38[v39[5]];
    *(void *)&v37[v39[6]] = *(void *)&v38[v39[6]];
    *(void *)&v37[v39[7]] = *(void *)&v38[v39[7]];
    uint64_t v42 = *(void (**)(char *, void, uint64_t, int *))(v40 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42(v37, 0, 1, v39);
  }
  *(void *)&v14[*(int *)(v35 + 56)] = *(void *)&v15[*(int *)(v35 + 56)];
  uint64_t v43 = *(int *)(v76 + 24);
  uint64_t v44 = v78;
  uint64_t v45 = &v78[v43];
  int v46 = &v77[v43];
  uint64_t v47 = (int *)type metadata accessor for CRLPKStrokePathData();
  uint64_t v48 = *((void *)v47 - 1);
  uint64_t v49 = *(unsigned int (**)(char *, uint64_t, int *))(v48 + 48);
  swift_bridgeObjectRetain();
  if (v49(v46, 1, v47))
  {
    uint64_t v50 = sub_1005057FC(&qword_10168E498);
    memcpy(v45, v46, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    uint64_t v51 = *((void *)v46 + 1);
    *(void *)uint64_t v45 = *(void *)v46;
    *((void *)v45 + 1) = v51;
    uint64_t v52 = *((void *)v46 + 3);
    *((void *)v45 + 2) = *((void *)v46 + 2);
    *((void *)v45 + 3) = v52;
    uint64_t v53 = *((void *)v46 + 5);
    *((void *)v45 + 4) = *((void *)v46 + 4);
    *((void *)v45 + 5) = v53;
    uint64_t v70 = *((void *)v46 + 7);
    *((void *)v45 + 6) = *((void *)v46 + 6);
    *((void *)v45 + 7) = v70;
    uint64_t v54 = *((void *)v46 + 9);
    *((void *)v45 + 8) = *((void *)v46 + 8);
    *((void *)v45 + 9) = v54;
    *((void *)v45 + 10) = *((void *)v46 + 10);
    *((_DWORD *)v45 + 22) = *((_DWORD *)v46 + 22);
    uint64_t v55 = v47[16];
    uint64_t v71 = &v46[v55];
    uint64_t v72 = &v45[v55];
    uint64_t v56 = type metadata accessor for Date();
    int v69 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v69(v72, v71, v56);
    *(_DWORD *)&v45[v47[17]] = *(_DWORD *)&v46[v47[17]];
    *(_DWORD *)&v45[v47[18]] = *(_DWORD *)&v46[v47[18]];
    uint64_t v57 = v47[19];
    uint64_t v58 = &v45[v57];
    unint64_t v59 = &v46[v57];
    if (v73(&v46[v57], 1, v75))
    {
      uint64_t v60 = sub_1005057FC((uint64_t *)&unk_101674520);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v58, v59, v75);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v58, 0, 1, v75);
    }
    uint64_t v61 = v47[20];
    uint64_t v62 = &v45[v61];
    uint64_t v63 = &v46[v61];
    *(void *)uint64_t v62 = *(void *)v63;
    v62[8] = v63[8];
    v45[v47[21]] = v46[v47[21]];
    (*(void (**)(char *, void, uint64_t, int *))(v48 + 56))(v45, 0, 1, v47);
    long long v34 = v77;
    uint64_t v44 = v78;
    uint64_t v26 = v76;
  }
  uint64_t v64 = *(int *)(v26 + 28);
  uint64_t v65 = *(int *)(v26 + 32);
  uint64_t v66 = &v44[v64];
  uint64_t v67 = &v34[v64];
  *(void *)uint64_t v66 = *(void *)v67;
  v66[8] = v67[8];
  *(void *)&v44[v65] = *(void *)&v34[v65];
  swift_bridgeObjectRetain();
  return v44;
}

char *sub_100E2884C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  uint64_t v106 = v7;
  uint64_t v107 = v6;
  double v105 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v8;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101674520);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = type metadata accessor for CRLBoardItemParentAffinity();
  uint64_t v13 = *(int *)(v12 + 20);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *((_DWORD *)v14 + 1) = *((_DWORD *)v15 + 1);
  *((_DWORD *)v14 + 2) = *((_DWORD *)v15 + 2);
  *((_DWORD *)v14 + 3) = *((_DWORD *)v15 + 3);
  *((_DWORD *)v14 + 4) = *((_DWORD *)v15 + 4);
  v14[20] = v15[20];
  v14[21] = v15[21];
  v14[22] = v15[22];
  v14[23] = v15[23];
  *((void *)v14 + 3) = *((void *)v15 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(v12 + 24)] = *(void *)&a2[*(int *)(v12 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(int *)(a3 + 20);
  long long v108 = a1;
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *uint64_t v17 = a2[v16];
  v17[1] = a2[v16 + 1];
  *((void *)v17 + 1) = *(void *)&a2[v16 + 8];
  *((void *)v17 + 2) = *(void *)&a2[v16 + 16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v17 + 3) = *((void *)v18 + 3);
  *((void *)v17 + 4) = *((void *)v18 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = *((void *)v18 + 5);
  v17[48] = v18[48];
  *((void *)v17 + 5) = v19;
  *((_DWORD *)v17 + 13) = *((_DWORD *)v18 + 13);
  *((_DWORD *)v17 + 14) = *((_DWORD *)v18 + 14);
  *((_DWORD *)v17 + 15) = *((_DWORD *)v18 + 15);
  *((_DWORD *)v17 + 16) = *((_DWORD *)v18 + 16);
  *((void *)v17 + 9) = *((void *)v18 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = *((void *)v18 + 10);
  v17[88] = v18[88];
  *((void *)v17 + 10) = v20;
  *((_DWORD *)v17 + 23) = *((_DWORD *)v18 + 23);
  *((_DWORD *)v17 + 24) = *((_DWORD *)v18 + 24);
  *((_DWORD *)v17 + 25) = *((_DWORD *)v18 + 25);
  v17[104] = v18[104];
  v17[105] = v18[105];
  *((void *)v17 + 14) = *((void *)v18 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = v17 + 120;
  uint64_t v23 = v18 + 120;
  uint64_t v22 = *((void *)v18 + 15);
  if (*((void *)v17 + 15))
  {
    if (v22)
    {
      *((void *)v17 + 15) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_DWORD *)v17 + 32) = *((_DWORD *)v18 + 32);
      *((_DWORD *)v17 + 33) = *((_DWORD *)v18 + 33);
      *((void *)v17 + 17) = *((void *)v18 + 17);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100A040A4((uint64_t)(v17 + 120));
      uint64_t v24 = *((void *)v18 + 17);
      *uint64_t v21 = *v23;
      *((void *)v17 + 17) = v24;
    }
  }
  else if (v22)
  {
    *((void *)v17 + 15) = v22;
    *((void *)v17 + 16) = *((void *)v18 + 16);
    *((void *)v17 + 17) = *((void *)v18 + 17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v25 = *v23;
    *((void *)v17 + 17) = *((void *)v18 + 17);
    *uint64_t v21 = v25;
  }
  *((_DWORD *)v17 + 36) = *((_DWORD *)v18 + 36);
  *((_DWORD *)v17 + 37) = *((_DWORD *)v18 + 37);
  *((_DWORD *)v17 + 38) = *((_DWORD *)v18 + 38);
  *((_DWORD *)v17 + 39) = *((_DWORD *)v18 + 39);
  v17[160] = v18[160];
  *((_DWORD *)v17 + 41) = *((_DWORD *)v18 + 41);
  *((_DWORD *)v17 + 42) = *((_DWORD *)v18 + 42);
  *((void *)v17 + 22) = *((void *)v18 + 22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = v17 + 184;
  uint64_t v27 = (uint64_t *)(v18 + 184);
  uint64_t v28 = *((void *)v18 + 25);
  uint64_t v109 = a2;
  uint64_t v110 = a3;
  if (*((void *)v17 + 25))
  {
    if (v28)
    {
      uint64_t v29 = *v27;
      v17[192] = v18[192];
      *uint64_t v26 = v29;
      *((void *)v17 + 25) = *((void *)v18 + 25);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_DWORD *)v17 + 52) = *((_DWORD *)v18 + 52);
      *((_DWORD *)v17 + 53) = *((_DWORD *)v18 + 53);
      *((void *)v17 + 27) = *((void *)v18 + 27);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_DWORD *)v17 + 56) = *((_DWORD *)v18 + 56);
      *((_DWORD *)v17 + 57) = *((_DWORD *)v18 + 57);
      uint64_t v30 = *((void *)v18 + 29);
      v17[240] = v18[240];
      *((void *)v17 + 29) = v30;
      *((_DWORD *)v17 + 61) = *((_DWORD *)v18 + 61);
      *((_DWORD *)v17 + 62) = *((_DWORD *)v18 + 62);
      *((void *)v17 + 32) = *((void *)v18 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v31 = *((void *)v18 + 33);
      v17[272] = v18[272];
      *((void *)v17 + 33) = v31;
      *((_DWORD *)v17 + 69) = *((_DWORD *)v18 + 69);
      *((_DWORD *)v17 + 70) = *((_DWORD *)v18 + 70);
      *((void *)v17 + 36) = *((void *)v18 + 36);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v17[296] = v18[296];
      *((void *)v17 + 38) = *((void *)v18 + 38);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100A040F8((uint64_t)(v17 + 184));
      long long v35 = *(_OWORD *)(v18 + 232);
      long long v37 = *(_OWORD *)v27;
      long long v36 = *(_OWORD *)(v18 + 200);
      *(_OWORD *)(v17 + 216) = *(_OWORD *)(v18 + 216);
      *(_OWORD *)(v17 + 232) = v35;
      *(_OWORD *)uint64_t v26 = v37;
      *(_OWORD *)(v17 + 200) = v36;
      long long v38 = *(_OWORD *)(v18 + 296);
      long long v40 = *(_OWORD *)(v18 + 248);
      long long v39 = *(_OWORD *)(v18 + 264);
      *(_OWORD *)(v17 + 280) = *(_OWORD *)(v18 + 280);
      *(_OWORD *)(v17 + 296) = v38;
      *(_OWORD *)(v17 + 248) = v40;
      *(_OWORD *)(v17 + 264) = v39;
    }
  }
  else if (v28)
  {
    uint64_t v32 = *v27;
    v17[192] = v18[192];
    *uint64_t v26 = v32;
    *((void *)v17 + 25) = *((void *)v18 + 25);
    *((void *)v17 + 26) = *((void *)v18 + 26);
    *((void *)v17 + 27) = *((void *)v18 + 27);
    *((_DWORD *)v17 + 56) = *((_DWORD *)v18 + 56);
    *((_DWORD *)v17 + 57) = *((_DWORD *)v18 + 57);
    uint64_t v33 = *((void *)v18 + 29);
    v17[240] = v18[240];
    *((void *)v17 + 29) = v33;
    *(void *)(v17 + 244) = *(void *)(v18 + 244);
    *((void *)v17 + 32) = *((void *)v18 + 32);
    uint64_t v34 = *((void *)v18 + 33);
    v17[272] = v18[272];
    *((void *)v17 + 33) = v34;
    *(void *)(v17 + 276) = *(void *)(v18 + 276);
    *((void *)v17 + 36) = *((void *)v18 + 36);
    v17[296] = v18[296];
    *((void *)v17 + 38) = *((void *)v18 + 38);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v41 = *(_OWORD *)v27;
    long long v42 = *(_OWORD *)(v18 + 200);
    long long v43 = *(_OWORD *)(v18 + 232);
    *(_OWORD *)(v17 + 216) = *(_OWORD *)(v18 + 216);
    *(_OWORD *)(v17 + 232) = v43;
    *(_OWORD *)uint64_t v26 = v41;
    *(_OWORD *)(v17 + 200) = v42;
    long long v44 = *(_OWORD *)(v18 + 248);
    long long v45 = *(_OWORD *)(v18 + 264);
    long long v46 = *(_OWORD *)(v18 + 296);
    *(_OWORD *)(v17 + 280) = *(_OWORD *)(v18 + 280);
    *(_OWORD *)(v17 + 296) = v46;
    *(_OWORD *)(v17 + 248) = v44;
    *(_OWORD *)(v17 + 264) = v45;
  }
  uint64_t v47 = type metadata accessor for CRLPathSourceData(0);
  uint64_t v48 = *(int *)(v47 + 52);
  uint64_t v49 = &v17[v48];
  uint64_t v50 = &v18[v48];
  uint64_t v51 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  uint64_t v52 = *((void *)v51 - 1);
  uint64_t v53 = *(uint64_t (**)(char *, uint64_t, int *))(v52 + 48);
  int v54 = v53(v49, 1, v51);
  int v55 = v53(v50, 1, v51);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v49, v50, v107);
      *(void *)&v49[v51[5]] = *(void *)&v50[v51[5]];
      *(void *)&v49[v51[6]] = *(void *)&v50[v51[6]];
      *(void *)&v49[v51[7]] = *(void *)&v50[v51[7]];
      uint64_t v56 = *(void (**)(char *, void, uint64_t, int *))(v52 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v56(v49, 0, 1, v51);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v55)
  {
    sub_100E29638((uint64_t)v49, type metadata accessor for CRLEditableBezierPathSourceData);
LABEL_27:
    uint64_t v57 = sub_1005057FC(&qword_10168B6F8);
    memcpy(v49, v50, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(v106 + 24))(v49, v50, v107);
  *(void *)&v49[v51[5]] = *(void *)&v50[v51[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v75 = v51[6];
  uint64_t v76 = &v49[v75];
  uint64_t v77 = &v50[v75];
  *(_DWORD *)uint64_t v76 = *(_DWORD *)v77;
  *((_DWORD *)v76 + 1) = *((_DWORD *)v77 + 1);
  *(void *)&v49[v51[7]] = *(void *)&v50[v51[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_28:
  uint64_t v58 = v108;
  unint64_t v59 = v109;
  uint64_t v60 = v110;
  *(void *)&v17[*(int *)(v47 + 56)] = *(void *)&v18[*(int *)(v47 + 56)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v61 = *(int *)(v110 + 24);
  uint64_t v62 = (uint64_t)&v108[v61];
  uint64_t v63 = &v109[v61];
  uint64_t v64 = (int *)type metadata accessor for CRLPKStrokePathData();
  uint64_t v65 = *((void *)v64 - 1);
  uint64_t v66 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v65 + 48);
  int v67 = v66(v62, 1, v64);
  int v68 = v66((uint64_t)v63, 1, v64);
  if (!v67)
  {
    if (v68)
    {
      sub_100E29638(v62, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
      goto LABEL_34;
    }
    *(void *)uint64_t v62 = *(void *)v63;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v62 + 8) = *((void *)v63 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v62 + 16) = *((void *)v63 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v62 + 24) = *((void *)v63 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v62 + 32) = *((void *)v63 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v62 + 40) = *((void *)v63 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v62 + 48) = *((void *)v63 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v62 + 56) = *((void *)v63 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v62 + 64) = *((void *)v63 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v62 + 72) = *((void *)v63 + 9);
    *(void *)(v62 + 80) = *((void *)v63 + 10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_DWORD *)(v62 + 88) = *((_DWORD *)v63 + 22);
    uint64_t v78 = v64[16];
    uint64_t v79 = v62 + v78;
    char v80 = &v63[v78];
    uint64_t v81 = type metadata accessor for Date();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v81 - 8) + 24))(v79, v80, v81);
    *(_DWORD *)(v62 + v64[17]) = *(_DWORD *)&v63[v64[17]];
    *(_DWORD *)(v62 + v64[18]) = *(_DWORD *)&v63[v64[18]];
    uint64_t v82 = v64[19];
    double v83 = (void *)(v62 + v82);
    double v84 = &v63[v82];
    int v85 = v105(v62 + v82, 1, v107);
    int v86 = v105((uint64_t)v84, 1, v107);
    if (v85)
    {
      if (!v86)
      {
        (*(void (**)(void *, char *, uint64_t))(v106 + 16))(v83, v84, v107);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v106 + 56))(v83, 0, 1, v107);
LABEL_44:
        unint64_t v59 = v109;
        uint64_t v60 = v110;
        uint64_t v92 = v64[20];
        uint64_t v93 = v62 + v92;
        uint64_t v94 = &v63[v92];
        uint64_t v95 = *(void *)v94;
        *(unsigned char *)(v93 + 8) = v94[8];
        *(void *)uint64_t v93 = v95;
        *(unsigned char *)(v62 + v64[21]) = v63[v64[21]];
        goto LABEL_45;
      }
    }
    else
    {
      if (!v86)
      {
        (*(void (**)(void *, char *, uint64_t))(v106 + 24))(v83, v84, v107);
        goto LABEL_44;
      }
      (*(void (**)(void *, uint64_t))(v106 + 8))(v83, v107);
    }
    uint64_t v91 = sub_1005057FC((uint64_t *)&unk_101674520);
    memcpy(v83, v84, *(void *)(*(void *)(v91 - 8) + 64));
    goto LABEL_44;
  }
  if (v68)
  {
LABEL_34:
    uint64_t v74 = sub_1005057FC(&qword_10168E498);
    memcpy((void *)v62, v63, *(void *)(*(void *)(v74 - 8) + 64));
    goto LABEL_45;
  }
  *(void *)uint64_t v62 = *(void *)v63;
  *(void *)(v62 + 8) = *((void *)v63 + 1);
  *(void *)(v62 + 16) = *((void *)v63 + 2);
  *(void *)(v62 + 24) = *((void *)v63 + 3);
  *(void *)(v62 + 32) = *((void *)v63 + 4);
  *(void *)(v62 + 40) = *((void *)v63 + 5);
  *(void *)(v62 + 48) = *((void *)v63 + 6);
  *(void *)(v62 + 56) = *((void *)v63 + 7);
  *(void *)(v62 + 64) = *((void *)v63 + 8);
  *(void *)(v62 + 72) = *((void *)v63 + 9);
  *(void *)(v62 + 80) = *((void *)v63 + 10);
  *(_DWORD *)(v62 + 88) = *((_DWORD *)v63 + 22);
  uint64_t v69 = v64[16];
  uint64_t v103 = &v63[v69];
  uint64_t v104 = v62 + v69;
  uint64_t v102 = type metadata accessor for Date();
  double v101 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v102 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v101(v104, v103, v102);
  *(_DWORD *)(v62 + v64[17]) = *(_DWORD *)&v63[v64[17]];
  *(_DWORD *)(v62 + v64[18]) = *(_DWORD *)&v63[v64[18]];
  uint64_t v70 = v64[19];
  uint64_t v71 = (void *)(v62 + v70);
  uint64_t v72 = &v63[v70];
  if (v105((uint64_t)&v63[v70], 1, v107))
  {
    uint64_t v73 = sub_1005057FC((uint64_t *)&unk_101674520);
    memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v106 + 16))(v71, v72, v107);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v106 + 56))(v71, 0, 1, v107);
  }
  uint64_t v58 = v108;
  uint64_t v60 = v110;
  uint64_t v87 = v64[20];
  uint64_t v88 = v62 + v87;
  double v89 = &v63[v87];
  uint64_t v90 = *(void *)v89;
  *(unsigned char *)(v88 + 8) = v89[8];
  *(void *)uint64_t v88 = v90;
  *(unsigned char *)(v62 + v64[21]) = v63[v64[21]];
  (*(void (**)(uint64_t, void, uint64_t, int *))(v65 + 56))(v62, 0, 1, v64);
  unint64_t v59 = v109;
LABEL_45:
  uint64_t v96 = *(int *)(v60 + 28);
  uint64_t v97 = &v58[v96];
  uint64_t v98 = &v59[v96];
  uint64_t v99 = *(void *)v98;
  v97[8] = v98[8];
  *(void *)uint64_t v97 = v99;
  *(void *)&v58[*(int *)(v60 + 32)] = *(void *)&v59[*(int *)(v60 + 32)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v58;
}

uint64_t sub_100E29638(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_100E29698(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v58 = v7;
  if (v57(a2, 1, v6))
  {
    uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101674520);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = type metadata accessor for CRLBoardItemParentAffinity();
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  long long v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *(void *)&a1[*(int *)(v9 + 24)] = *(void *)&a2[*(int *)(v9 + 24)];
  unint64_t v59 = a3;
  uint64_t v14 = a3[5];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(_WORD *)uint64_t v15 = *(_WORD *)&a2[v14];
  *(_OWORD *)(v15 + 8) = *(_OWORD *)&a2[v14 + 8];
  *(_OWORD *)(v15 + 24) = *(_OWORD *)&a2[v14 + 24];
  *((void *)v15 + 9) = *(void *)&a2[v14 + 72];
  *(_OWORD *)(v15 + 56) = *(_OWORD *)&a2[v14 + 56];
  *(_OWORD *)(v15 + 40) = *(_OWORD *)&a2[v14 + 40];
  *((void *)v15 + 14) = *(void *)&a2[v14 + 112];
  long long v17 = *(_OWORD *)&a2[v14 + 96];
  *((_OWORD *)v15 + 5) = *(_OWORD *)&a2[v14 + 80];
  *((_OWORD *)v15 + 6) = v17;
  *((void *)v15 + 17) = *(void *)&a2[v14 + 136];
  *(_OWORD *)(v15 + 120) = *(_OWORD *)&a2[v14 + 120];
  *((void *)v15 + 22) = *(void *)&a2[v14 + 176];
  long long v18 = *(_OWORD *)&a2[v14 + 160];
  *((_OWORD *)v15 + 9) = *(_OWORD *)&a2[v14 + 144];
  *((_OWORD *)v15 + 10) = v18;
  uint64_t v19 = &a1[v14 + 184];
  long long v20 = *(_OWORD *)(v16 + 184);
  long long v21 = *(_OWORD *)(v16 + 200);
  long long v22 = *(_OWORD *)(v16 + 216);
  *(_OWORD *)(v15 + 232) = *(_OWORD *)(v16 + 232);
  *(_OWORD *)(v15 + 216) = v22;
  *(_OWORD *)(v15 + 200) = v21;
  *(_OWORD *)(v15 + 184) = v20;
  long long v23 = *(_OWORD *)(v16 + 248);
  long long v24 = *(_OWORD *)(v16 + 264);
  long long v25 = *(_OWORD *)(v16 + 296);
  *((_OWORD *)v19 + 6) = *(_OWORD *)(v16 + 280);
  *((_OWORD *)v19 + 7) = v25;
  *((_OWORD *)v19 + 5) = v24;
  *(_OWORD *)(v15 + 248) = v23;
  uint64_t v26 = type metadata accessor for CRLPathSourceData(0);
  uint64_t v27 = *(int *)(v26 + 52);
  uint64_t v28 = &v15[v27];
  uint64_t v29 = &v16[v27];
  uint64_t v30 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  uint64_t v31 = *((void *)v30 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v31 + 48))(v29, 1, v30))
  {
    uint64_t v32 = sub_1005057FC(&qword_10168B6F8);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v28, v29, v6);
    *(void *)&v28[v30[5]] = *(void *)&v29[v30[5]];
    *(void *)&v28[v30[6]] = *(void *)&v29[v30[6]];
    *(void *)&v28[v30[7]] = *(void *)&v29[v30[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v31 + 56))(v28, 0, 1, v30);
  }
  *(void *)&v15[*(int *)(v26 + 56)] = *(void *)&v16[*(int *)(v26 + 56)];
  uint64_t v33 = v59[6];
  uint64_t v34 = &a1[v33];
  long long v35 = &a2[v33];
  long long v36 = (int *)type metadata accessor for CRLPKStrokePathData();
  uint64_t v37 = *((void *)v36 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v37 + 48))(v35, 1, v36))
  {
    uint64_t v38 = sub_1005057FC(&qword_10168E498);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    long long v39 = *((_OWORD *)v35 + 1);
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    *((_OWORD *)v34 + 1) = v39;
    long long v40 = *((_OWORD *)v35 + 3);
    *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
    *((_OWORD *)v34 + 3) = v40;
    *((_OWORD *)v34 + 4) = *((_OWORD *)v35 + 4);
    *((void *)v34 + 10) = *((void *)v35 + 10);
    *((_DWORD *)v34 + 22) = *((_DWORD *)v35 + 22);
    uint64_t v41 = v36[16];
    long long v42 = &v34[v41];
    long long v43 = &v35[v41];
    uint64_t v44 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
    *(_DWORD *)&v34[v36[17]] = *(_DWORD *)&v35[v36[17]];
    *(_DWORD *)&v34[v36[18]] = *(_DWORD *)&v35[v36[18]];
    uint64_t v45 = v36[19];
    long long v46 = &v34[v45];
    uint64_t v47 = &v35[v45];
    if (v57(&v35[v45], 1, v6))
    {
      uint64_t v48 = sub_1005057FC((uint64_t *)&unk_101674520);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v46, v47, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v46, 0, 1, v6);
    }
    uint64_t v49 = v36[20];
    uint64_t v50 = &v34[v49];
    uint64_t v51 = &v35[v49];
    *(void *)uint64_t v50 = *(void *)v51;
    v50[8] = v51[8];
    v34[v36[21]] = v35[v36[21]];
    (*(void (**)(char *, void, uint64_t, int *))(v37 + 56))(v34, 0, 1, v36);
  }
  uint64_t v52 = v59[7];
  uint64_t v53 = v59[8];
  int v54 = &a1[v52];
  int v55 = &a2[v52];
  *(void *)int v54 = *(void *)v55;
  v54[8] = v55[8];
  *(void *)&a1[v53] = *(void *)&a2[v53];
  return a1;
}

char *sub_100E29BF8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  uint64_t v83 = v7;
  uint64_t v84 = v6;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101674520);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = type metadata accessor for CRLBoardItemParentAffinity();
  uint64_t v13 = *(int *)(v12 + 20);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((_DWORD *)v14 + 4) = *((_DWORD *)v15 + 4);
  v14[20] = v15[20];
  v14[21] = v15[21];
  v14[22] = v15[22];
  v14[23] = v15[23];
  *((void *)v14 + 3) = *((void *)v15 + 3);
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(v12 + 24)] = *(void *)&a2[*(int *)(v12 + 24)];
  swift_bridgeObjectRelease();
  int v85 = a1;
  uint64_t v86 = a3;
  uint64_t v16 = *(int *)(a3 + 20);
  long long v17 = &a1[v16];
  long long v18 = &a2[v16];
  *long long v17 = a2[v16];
  v17[1] = a2[v16 + 1];
  uint64_t v19 = *(void *)&a2[v16 + 16];
  *((void *)v17 + 1) = *(void *)&a2[v16 + 8];
  *((void *)v17 + 2) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *((void *)v18 + 4);
  *((void *)v17 + 3) = *((void *)v18 + 3);
  *((void *)v17 + 4) = v20;
  swift_bridgeObjectRelease();
  *((void *)v17 + 5) = *((void *)v18 + 5);
  v17[48] = v18[48];
  *(_OWORD *)(v17 + 52) = *(_OWORD *)(v18 + 52);
  *((void *)v17 + 9) = *((void *)v18 + 9);
  swift_bridgeObjectRelease();
  *((void *)v17 + 10) = *((void *)v18 + 10);
  v17[88] = v18[88];
  *(void *)(v17 + 92) = *(void *)(v18 + 92);
  *((_DWORD *)v17 + 25) = *((_DWORD *)v18 + 25);
  v17[104] = v18[104];
  v17[105] = v18[105];
  *((void *)v17 + 14) = *((void *)v18 + 14);
  swift_bridgeObjectRelease();
  uint64_t v21 = *((void *)v18 + 15);
  if (*((void *)v17 + 15))
  {
    if (v21)
    {
      *((void *)v17 + 15) = v21;
      swift_bridgeObjectRelease();
      *((void *)v17 + 16) = *((void *)v18 + 16);
      *((void *)v17 + 17) = *((void *)v18 + 17);
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_100A040A4((uint64_t)(v17 + 120));
  }
  *(_OWORD *)(v17 + 120) = *(_OWORD *)(v18 + 120);
  *((void *)v17 + 17) = *((void *)v18 + 17);
LABEL_12:
  *((_OWORD *)v17 + 9) = *((_OWORD *)v18 + 9);
  v17[160] = v18[160];
  *(void *)(v17 + 164) = *(void *)(v18 + 164);
  *((void *)v17 + 22) = *((void *)v18 + 22);
  swift_bridgeObjectRelease();
  long long v22 = v17 + 184;
  long long v23 = v18 + 184;
  uint64_t v87 = a2;
  uint64_t v82 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v8;
  if (*((void *)v17 + 25))
  {
    uint64_t v24 = *((void *)v18 + 25);
    if (v24)
    {
      void *v22 = *v23;
      v17[192] = v18[192];
      *((void *)v17 + 25) = v24;
      swift_bridgeObjectRelease();
      *((void *)v17 + 26) = *((void *)v18 + 26);
      *((void *)v17 + 27) = *((void *)v18 + 27);
      swift_bridgeObjectRelease();
      *((void *)v17 + 28) = *((void *)v18 + 28);
      *((void *)v17 + 29) = *((void *)v18 + 29);
      v17[240] = v18[240];
      *(void *)(v17 + 244) = *(void *)(v18 + 244);
      *((void *)v17 + 32) = *((void *)v18 + 32);
      swift_bridgeObjectRelease();
      *((void *)v17 + 33) = *((void *)v18 + 33);
      v17[272] = v18[272];
      *((_DWORD *)v17 + 69) = *((_DWORD *)v18 + 69);
      *((_DWORD *)v17 + 70) = *((_DWORD *)v18 + 70);
      *((void *)v17 + 36) = *((void *)v18 + 36);
      swift_bridgeObjectRelease();
      v17[296] = v18[296];
      *((void *)v17 + 38) = *((void *)v18 + 38);
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    sub_100A040F8((uint64_t)(v17 + 184));
  }
  long long v25 = *(_OWORD *)(v18 + 264);
  *(_OWORD *)(v17 + 248) = *(_OWORD *)(v18 + 248);
  *(_OWORD *)(v17 + 264) = v25;
  long long v26 = *(_OWORD *)(v18 + 296);
  *(_OWORD *)(v17 + 280) = *(_OWORD *)(v18 + 280);
  *(_OWORD *)(v17 + 296) = v26;
  long long v27 = *(_OWORD *)(v18 + 200);
  *(_OWORD *)long long v22 = *(_OWORD *)v23;
  *(_OWORD *)(v17 + 200) = v27;
  long long v28 = *(_OWORD *)(v18 + 232);
  *(_OWORD *)(v17 + 216) = *(_OWORD *)(v18 + 216);
  *(_OWORD *)(v17 + 232) = v28;
LABEL_17:
  uint64_t v29 = type metadata accessor for CRLPathSourceData(0);
  uint64_t v30 = *(int *)(v29 + 52);
  uint64_t v31 = &v17[v30];
  uint64_t v32 = &v18[v30];
  uint64_t v33 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  uint64_t v34 = *((void *)v33 - 1);
  long long v35 = *(uint64_t (**)(char *, uint64_t, int *))(v34 + 48);
  int v36 = v35(v31, 1, v33);
  int v37 = v35(v32, 1, v33);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v31, v32, v84);
      *(void *)&v31[v33[5]] = *(void *)&v32[v33[5]];
      *(void *)&v31[v33[6]] = *(void *)&v32[v33[6]];
      *(void *)&v31[v33[7]] = *(void *)&v32[v33[7]];
      (*(void (**)(char *, void, uint64_t, int *))(v34 + 56))(v31, 0, 1, v33);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v37)
  {
    sub_100E29638((uint64_t)v31, type metadata accessor for CRLEditableBezierPathSourceData);
LABEL_22:
    uint64_t v38 = sub_1005057FC(&qword_10168B6F8);
    memcpy(v31, v32, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(v83 + 40))(v31, v32, v84);
  *(void *)&v31[v33[5]] = *(void *)&v32[v33[5]];
  swift_bridgeObjectRelease();
  *(void *)&v31[v33[6]] = *(void *)&v32[v33[6]];
  *(void *)&v31[v33[7]] = *(void *)&v32[v33[7]];
  swift_bridgeObjectRelease();
LABEL_23:
  long long v39 = v87;
  *(void *)&v17[*(int *)(v29 + 56)] = *(void *)&v18[*(int *)(v29 + 56)];
  swift_bridgeObjectRelease();
  uint64_t v40 = v86;
  uint64_t v41 = *(int *)(v86 + 24);
  uint64_t v42 = (uint64_t)&v85[v41];
  long long v43 = &v87[v41];
  uint64_t v44 = (int *)type metadata accessor for CRLPKStrokePathData();
  uint64_t v45 = *((void *)v44 - 1);
  long long v46 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v45 + 48);
  int v47 = v46(v42, 1, v44);
  int v48 = v46((uint64_t)v43, 1, v44);
  if (!v47)
  {
    if (v48)
    {
      sub_100E29638(v42, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
      goto LABEL_29;
    }
    *(void *)uint64_t v42 = *(void *)v43;
    swift_bridgeObjectRelease();
    *(void *)(v42 + 8) = *((void *)v43 + 1);
    swift_bridgeObjectRelease();
    *(void *)(v42 + 16) = *((void *)v43 + 2);
    swift_bridgeObjectRelease();
    *(void *)(v42 + 24) = *((void *)v43 + 3);
    swift_bridgeObjectRelease();
    *(void *)(v42 + 32) = *((void *)v43 + 4);
    swift_bridgeObjectRelease();
    *(void *)(v42 + 40) = *((void *)v43 + 5);
    swift_bridgeObjectRelease();
    *(void *)(v42 + 48) = *((void *)v43 + 6);
    swift_bridgeObjectRelease();
    *(void *)(v42 + 56) = *((void *)v43 + 7);
    swift_bridgeObjectRelease();
    *(void *)(v42 + 64) = *((void *)v43 + 8);
    swift_bridgeObjectRelease();
    uint64_t v60 = *((void *)v43 + 10);
    *(void *)(v42 + 72) = *((void *)v43 + 9);
    *(void *)(v42 + 80) = v60;
    swift_bridgeObjectRelease();
    *(_DWORD *)(v42 + 88) = *((_DWORD *)v43 + 22);
    uint64_t v61 = v44[16];
    uint64_t v62 = v42 + v61;
    uint64_t v63 = &v43[v61];
    uint64_t v64 = type metadata accessor for Date();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v64 - 8) + 40))(v62, v63, v64);
    *(_DWORD *)(v42 + v44[17]) = *(_DWORD *)&v43[v44[17]];
    *(_DWORD *)(v42 + v44[18]) = *(_DWORD *)&v43[v44[18]];
    uint64_t v65 = v44[19];
    uint64_t v66 = (void *)(v42 + v65);
    int v67 = &v43[v65];
    int v68 = v82(v42 + v65, 1, v84);
    int v69 = v82((uint64_t)v67, 1, v84);
    if (v68)
    {
      if (!v69)
      {
        (*(void (**)(void *, char *, uint64_t))(v83 + 32))(v66, v67, v84);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v83 + 56))(v66, 0, 1, v84);
LABEL_40:
        uint64_t v40 = v86;
        long long v39 = v87;
        uint64_t v74 = v44[20];
        uint64_t v75 = v42 + v74;
        uint64_t v76 = &v43[v74];
        *(void *)uint64_t v75 = *(void *)v76;
        *(unsigned char *)(v75 + 8) = v76[8];
        *(unsigned char *)(v42 + v44[21]) = v43[v44[21]];
        goto LABEL_41;
      }
    }
    else
    {
      if (!v69)
      {
        (*(void (**)(void *, char *, uint64_t))(v83 + 40))(v66, v67, v84);
        goto LABEL_40;
      }
      (*(void (**)(void *, uint64_t))(v83 + 8))(v66, v84);
    }
    uint64_t v73 = sub_1005057FC((uint64_t *)&unk_101674520);
    memcpy(v66, v67, *(void *)(*(void *)(v73 - 8) + 64));
    goto LABEL_40;
  }
  if (v48)
  {
LABEL_29:
    uint64_t v59 = sub_1005057FC(&qword_10168E498);
    memcpy((void *)v42, v43, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_41;
  }
  long long v49 = *((_OWORD *)v43 + 1);
  *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
  *(_OWORD *)(v42 + 16) = v49;
  long long v50 = *((_OWORD *)v43 + 3);
  *(_OWORD *)(v42 + 32) = *((_OWORD *)v43 + 2);
  *(_OWORD *)(v42 + 48) = v50;
  *(_OWORD *)(v42 + 64) = *((_OWORD *)v43 + 4);
  *(void *)(v42 + 80) = *((void *)v43 + 10);
  *(_DWORD *)(v42 + 88) = *((_DWORD *)v43 + 22);
  uint64_t v51 = v44[16];
  uint64_t v52 = v42 + v51;
  uint64_t v53 = &v43[v51];
  uint64_t v54 = type metadata accessor for Date();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
  *(_DWORD *)(v42 + v44[17]) = *(_DWORD *)&v43[v44[17]];
  *(_DWORD *)(v42 + v44[18]) = *(_DWORD *)&v43[v44[18]];
  uint64_t v55 = v44[19];
  uint64_t v56 = (void *)(v42 + v55);
  uint64_t v57 = &v43[v55];
  if (v82((uint64_t)&v43[v55], 1, v84))
  {
    uint64_t v58 = sub_1005057FC((uint64_t *)&unk_101674520);
    memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v83 + 32))(v56, v57, v84);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v83 + 56))(v56, 0, 1, v84);
  }
  uint64_t v70 = v44[20];
  uint64_t v71 = v42 + v70;
  uint64_t v72 = &v43[v70];
  *(void *)uint64_t v71 = *(void *)v72;
  *(unsigned char *)(v71 + 8) = v72[8];
  *(unsigned char *)(v42 + v44[21]) = v43[v44[21]];
  (*(void (**)(uint64_t, void, uint64_t, int *))(v45 + 56))(v42, 0, 1, v44);
  long long v39 = v87;
LABEL_41:
  uint64_t v77 = *(int *)(v40 + 28);
  uint64_t v78 = *(int *)(v40 + 32);
  uint64_t v79 = &v85[v77];
  char v80 = &v39[v77];
  *(void *)uint64_t v79 = *(void *)v80;
  v79[8] = v80[8];
  *(void *)&v85[v78] = *(void *)&v39[v78];
  swift_bridgeObjectRelease();
  return v85;
}

uint64_t sub_100E2A684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100E2A698);
}

uint64_t sub_100E2A698(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CRLBoardItemParentAffinity();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for CRLPathSourceData(0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_1005057FC(&qword_10168E498);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[8]);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_100E2A7FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100E2A810);
}

uint64_t sub_100E2A810(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for CRLBoardItemParentAffinity();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = type metadata accessor for CRLPathSourceData(0);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t result = sub_1005057FC(&qword_10168E498);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[8]) = (a2 - 1);
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[6];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for CRLShapeItemParentAffinity(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10169EC68);
}

void sub_100E2A990()
{
  type metadata accessor for CRLBoardItemParentAffinity();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CRLPathSourceData(319);
    if (v1 <= 0x3F)
    {
      sub_100E2AAAC();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100E2AAAC()
{
  if (!qword_10169EC78)
  {
    type metadata accessor for CRLPKStrokePathData();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10169EC78);
    }
  }
}

uint64_t sub_100E2AB04()
{
  return sub_100E2AB94(&qword_10169ECB8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemParentAffinity);
}

uint64_t sub_100E2AB4C()
{
  return sub_100E2AB94(&qword_10169ECC0, (void (*)(uint64_t))type metadata accessor for CRLShapeItemParentAffinity);
}

uint64_t sub_100E2AB94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100E2ABDC()
{
  return sub_100E2AB94(&qword_10169ECC8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemParentAffinity);
}

uint64_t sub_100E2AC24()
{
  return sub_100E2AB94(&qword_10169ECD0, (void (*)(uint64_t))type metadata accessor for CRLShapeItemParentAffinity);
}

uint64_t sub_100E2AC6C()
{
  return sub_100E2AB94(&qword_10169ECD8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemParentAffinity);
}

unint64_t sub_100E2ACB8()
{
  unint64_t result = qword_10169ECE0;
  if (!qword_10169ECE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169ECE0);
  }
  return result;
}

unint64_t sub_100E2AD10()
{
  unint64_t result = qword_10169ECE8;
  if (!qword_10169ECE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169ECE8);
  }
  return result;
}

unint64_t sub_100E2AD68()
{
  unint64_t result = qword_10169ECF0;
  if (!qword_10169ECF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169ECF0);
  }
  return result;
}

unint64_t sub_100E2ADC0()
{
  unint64_t result = qword_10169ECF8;
  if (!qword_10169ECF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169ECF8);
  }
  return result;
}

unint64_t sub_100E2AE18()
{
  unint64_t result = qword_10169ED00;
  if (!qword_10169ED00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169ED00);
  }
  return result;
}

unint64_t sub_100E2AE70()
{
  unint64_t result = qword_10169ED08;
  if (!qword_10169ED08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169ED08);
  }
  return result;
}

uint64_t sub_100E2AEC4()
{
  return sub_100523288(&qword_10169ED10, &qword_10169ED18);
}

uint64_t sub_100E2AF00()
{
  return sub_100E2AB94(&qword_10169ED20, (void (*)(uint64_t))type metadata accessor for CRLShapeItemParentAffinity);
}

uint64_t sub_100E2AF48()
{
  return sub_100E2AB94(&qword_10169ED28, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
}

uint64_t sub_100E2AF90()
{
  return sub_100E2AB94(&qword_10169ED30, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
}

uint64_t sub_100E2AFD8()
{
  return sub_100E2AB94((unint64_t *)&qword_10168E4A8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
}

uint64_t sub_100E2B020()
{
  return sub_100523288(&qword_10169ED38, &qword_10169ED40);
}

uint64_t sub_100E2B05C()
{
  return sub_100E2AB94(&qword_10169ED48, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
}

uint64_t sub_100E2B0A4()
{
  return sub_100E2AB94(&qword_10169ED50, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
}

uint64_t sub_100E2B0EC()
{
  return sub_100523288(&qword_10169ED58, (uint64_t *)&unk_1016A8B50);
}

uint64_t sub_100E2B128()
{
  return sub_100523288(&qword_10169ED60, (uint64_t *)&unk_10168A0D0);
}

uint64_t sub_100E2B164()
{
  return sub_100523288(&qword_101675510, &qword_101689320);
}

uint64_t sub_100E2B1A0()
{
  return sub_100E2AB94(&qword_10169ED68, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
}

uint64_t sub_100E2B1E8()
{
  return sub_100E2AB94(&qword_101675498, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);
}

uint64_t sub_100E2B230()
{
  return sub_100E2AB94(&qword_10169ED70, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);
}

uint64_t sub_100E2B278()
{
  return sub_100E2AB94(&qword_10169ED78, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);
}

uint64_t sub_100E2B2C0()
{
  return sub_100E2AB94(&qword_10169ED80, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);
}

uint64_t sub_100E2B308()
{
  return sub_100E2AB94(&qword_10169ED88, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);
}

uint64_t sub_100E2B350()
{
  return sub_100523288(&qword_10169ED90, &qword_10169ED98);
}

uint64_t sub_100E2B38C()
{
  return sub_100E2AB94(&qword_10169EDA0, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);
}

uint64_t sub_100E2B3D4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_100E2AB94(&qword_101675498, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);
  uint64_t result = sub_100E2AB94(&qword_10169EDA8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100E2B458(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_100E2AB94(&qword_10169EDB0, (void (*)(uint64_t))type metadata accessor for CRLShapeItemParentAffinity);
  uint64_t result = sub_100E2AB94(&qword_10169EDB8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemParentAffinity);
  *(void *)(a1 + 16) = result;
  return result;
}

void (*sub_100E2B4E0(void *a1))(uint64_t a1, char a2)
{
  *a1 = v1;
  size_t v3 = *(void *)(*(void *)(type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0) - 8) + 64);
  a1[1] = malloc(v3);
  uint64_t v4 = malloc(v3);
  a1[2] = v4;
  sub_100E21640((uint64_t)v4, v5);
  return sub_100E2B568;
}

void sub_100E2B568(uint64_t a1, char a2)
{
  unint64_t v2 = *(void **)(a1 + 8);
  size_t v3 = *(void **)(a1 + 16);
  if (a2)
  {
    sub_100E2B678(*(void *)(a1 + 16), (uint64_t)v2, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
    sub_100E21780((uint64_t)v2);
    sub_100E29638((uint64_t)v3, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  }
  else
  {
    sub_100E21780(*(void *)(a1 + 16));
  }
  free(v3);

  free(v2);
}

uint64_t sub_100E2B604@<X0>(uint64_t a1@<X8>)
{
  sub_100E218DC((uint64_t)v3);
  return sub_10051B3EC((uint64_t)v3, a1, (uint64_t *)&unk_101685110);
}

uint64_t sub_100E2B654(uint64_t a1)
{
  return sub_100E21ADC(a1);
}

uint64_t sub_100E2B678(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

BOOL sub_100E2B6E0(uint64_t a1, uint64_t a2)
{
  uint64_t v148 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v148, v4);
  uint64_t v6 = &v129[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7, v8);
  unint64_t v149 = &v129[-v9];
  __chkstk_darwin(v10, v11);
  double v154 = &v129[-v12];
  __chkstk_darwin(v13, v14);
  uint64_t v150 = &v129[-v15];
  __chkstk_darwin(v16, v17);
  char v155 = &v129[-v18];
  __chkstk_darwin(v19, v20);
  id v159 = &v129[-v21];
  __chkstk_darwin(v22, v23);
  uint64_t v158 = &v129[-v24];
  __chkstk_darwin(v25, v26);
  uint64_t v161 = (uint64_t)&v129[-v27];
  sub_1005057FC((uint64_t *)&unk_1016A8B50);
  uint64_t v156 = a1;
  CRRegister.wrappedValue.getter();
  uint64_t v28 = v174[2];
  uint64_t v160 = v174[3];
  uint64_t v151 = v174[4];
  uint64_t v152 = v174[5];
  uint64_t v29 = v174[6];
  uint64_t v153 = v174[7];
  uint64_t v163 = v174[8];
  uint64_t v164 = v174[0];
  uint64_t v30 = v174[9];
  uint64_t v162 = v174[10];
  uint64_t v31 = v174[11];
  uint64_t v32 = v174[12];
  uint64_t v165 = v174[13];
  uint64_t v166 = v174[1];
  uint64_t v157 = a2;
  CRRegister.wrappedValue.getter();
  uint64_t v33 = v174[0];
  uint64_t v34 = v174[1];
  uint64_t v35 = v174[2];
  uint64_t v36 = v174[3];
  uint64_t v37 = v174[4];
  uint64_t v38 = v174[5];
  uint64_t v39 = v174[6];
  uint64_t v40 = v174[7];
  uint64_t v41 = v174[8];
  uint64_t v42 = v174[9];
  uint64_t v43 = v174[10];
  uint64_t v44 = v174[11];
  uint64_t v45 = v174[12];
  uint64_t v46 = v174[13];
  if (!v32)
  {
    if (!v174[12])
    {
      uint64_t v64 = v156;
      sub_100E2B678(v156, v161, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
      uint64_t v67 = v157;
      uint64_t v66 = v158;
      sub_100E2B678(v157, (uint64_t)v158, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
      int v69 = v154;
      goto LABEL_11;
    }
    goto LABEL_8;
  }
  if (!v174[12])
  {
LABEL_8:
    v174[0] = v164;
    v174[1] = v166;
    v174[2] = v28;
    v174[3] = v160;
    v174[4] = v151;
    v174[5] = v152;
    v174[6] = v29;
    v174[7] = v153;
    v174[8] = v163;
    v174[9] = v30;
    v174[10] = v162;
    v174[11] = v31;
    v174[12] = v32;
    v174[13] = v165;
    v174[14] = v33;
    v174[15] = v34;
    v174[16] = v35;
    v174[17] = v36;
    v174[18] = v37;
    v174[19] = v38;
    v174[20] = v39;
    v174[21] = v40;
    v174[22] = v41;
    v174[23] = v42;
    v174[24] = v43;
    v174[25] = v44;
    v174[26] = v45;
    v174[27] = v46;
    sub_1008EE60C((uint64_t)v174);
    goto LABEL_16;
  }
  uint64_t v132 = v174[13];
  uint64_t v133 = v174[11];
  uint64_t v134 = v174[10];
  uint64_t v135 = v174[9];
  uint64_t v136 = v174[8];
  uint64_t v137 = v174[2];
  uint64_t v141 = v174[3];
  uint64_t v142 = v174[4];
  uint64_t v143 = v174[5];
  uint64_t v144 = v174[6];
  uint64_t v145 = v174[7];
  uint64_t v138 = v6;
  v174[0] = v164;
  LOBYTE(v174[1]) = v166 & 1;
  *(void *)&v173[0] = v33;
  BYTE8(v173[0]) = v34 & 1;
  sub_1008EE6D8();
  uint64_t v146 = v29;
  swift_bridgeObjectRetain();
  uint64_t v47 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v147 = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v48 = static CRExtensible.== infix(_:_:)();
  uint64_t v139 = v31;
  uint64_t v140 = v30;
  if (v48)
  {
    int v200 = v28;
    uint64_t v131 = v28;
    char v201 = BYTE4(v28) & 1;
    uint64_t v202 = v160;
    uint64_t v203 = v151;
    uint64_t v204 = v152;
    uint64_t v49 = v147;
    uint64_t v205 = v146;
    uint64_t v206 = v153;
    uint64_t v207 = v163;
    uint64_t v208 = v30;
    uint64_t v209 = v162;
    uint64_t v210 = v31;
    uint64_t v211 = v147;
    uint64_t v50 = v136;
    uint64_t v51 = v137;
    int v212 = v137;
    char v213 = BYTE4(v137) & 1;
    uint64_t v214 = v141;
    uint64_t v215 = v142;
    uint64_t v216 = v143;
    uint64_t v217 = v144;
    uint64_t v218 = v145;
    uint64_t v219 = v136;
    uint64_t v53 = v134;
    uint64_t v52 = v135;
    uint64_t v220 = v135;
    uint64_t v221 = v134;
    uint64_t v54 = v133;
    uint64_t v222 = v133;
    uint64_t v223 = v45;
    if (sub_1007B049C(&v200, &v212))
    {
      int v130 = sub_100ED60AC(v165, v132);
      sub_10051ABBC(v33, v34, v51, v141, v142, v143, v144, v145, v50, v52, v53, v54, v45);
      uint64_t v55 = v147;
      uint64_t v56 = v164;
      uint64_t v57 = v166;
      uint64_t v58 = v131;
      uint64_t v59 = v160;
      uint64_t v61 = v151;
      uint64_t v60 = v152;
      uint64_t v62 = v146;
      uint64_t v63 = v153;
      sub_10051ABBC(v164, v166, v131, v160, v151, v152, v146, v153, v163, v140, v162, v139, v147);
      sub_10051ABBC(v56, v57, v58, v59, v61, v60, v62, v63, v163, v140, v162, v139, v55);
      uint64_t v64 = v156;
      uint64_t v65 = v161;
      sub_100E2B678(v156, v161, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
      uint64_t v67 = v157;
      uint64_t v66 = v158;
      sub_100E2B678(v157, (uint64_t)v158, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
      uint64_t v6 = v138;
      int v69 = v154;
      int v68 = v155;
      uint64_t v70 = v159;
      if ((v130 & 1) == 0) {
        goto LABEL_17;
      }
LABEL_11:
      sub_1005057FC(&qword_101673478);
      CRRegister.wrappedValue.getter();
      sub_10051B3EC((uint64_t)v174, (uint64_t)v175, (uint64_t *)&unk_101685110);
      CRRegister.wrappedValue.getter();
      sub_10051B3EC((uint64_t)v174, (uint64_t)&v183, (uint64_t *)&unk_101685110);
      sub_10051B3EC((uint64_t)v175, (uint64_t)v174, (uint64_t *)&unk_101685110);
      sub_10051B3EC((uint64_t)&v183, (uint64_t)&v174[29], (uint64_t *)&unk_101685110);
      sub_10051B3EC((uint64_t)v175, (uint64_t)v190, (uint64_t *)&unk_101685110);
      if (sub_100556850((uint64_t)v190) == 1)
      {
        sub_100E29638((uint64_t)v66, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        sub_100E29638(v161, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        sub_10051B3EC((uint64_t)&v174[29], (uint64_t)v198, (uint64_t *)&unk_101685110);
        sub_10051B3EC((uint64_t)v198, (uint64_t)v173, (uint64_t *)&unk_101685110);
        if (sub_100556850((uint64_t)v173) == 1)
        {
          sub_10051B3EC((uint64_t)v174, (uint64_t)v172, (uint64_t *)&unk_101685110);
          sub_1005569D0(v172);
          sub_100E2B678(v64, (uint64_t)v159, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
          int v68 = v155;
          sub_100E2B678(v67, (uint64_t)v155, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
          goto LABEL_29;
        }
      }
      else
      {
        sub_10051B3EC((uint64_t)&v183, (uint64_t)v172, (uint64_t *)&unk_101685110);
        if (sub_100556850((uint64_t)v172) != 1)
        {
          sub_10051B3EC((uint64_t)v175, (uint64_t)v167, (uint64_t *)&unk_101685110);
          v198[12] = v167[12];
          v198[13] = v167[13];
          uint64_t v199 = v168;
          v198[8] = v167[8];
          v198[9] = v167[9];
          v198[11] = v167[11];
          v198[10] = v167[10];
          v198[4] = v167[4];
          v198[5] = v167[5];
          v198[7] = v167[7];
          v198[6] = v167[6];
          v198[0] = v167[0];
          v198[1] = v167[1];
          v198[3] = v167[3];
          v198[2] = v167[2];
          sub_10051B3EC((uint64_t)&v183, (uint64_t)v169, (uint64_t *)&unk_101685110);
          v173[12] = v169[12];
          v173[13] = v169[13];
          *(void *)&v173[14] = v170;
          v173[8] = v169[8];
          v173[9] = v169[9];
          v173[11] = v169[11];
          v173[10] = v169[10];
          v173[4] = v169[4];
          v173[5] = v169[5];
          v173[7] = v169[7];
          v173[6] = v169[6];
          v173[0] = v169[0];
          v173[1] = v169[1];
          v173[3] = v169[3];
          v173[2] = v169[2];
          sub_100556A44(v167);
          char v92 = sub_100A1CC04(v198, v173);
          sub_1005569D0((uint64_t *)&v183);
          sub_1005569D0(v175);
          sub_100E29638((uint64_t)v158, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
          sub_100E29638(v161, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
          sub_10051B3EC((uint64_t)v174, (uint64_t)v171, (uint64_t *)&unk_101685110);
          sub_1005569D0(v171);
          uint64_t v70 = v159;
          sub_100E2B678(v64, (uint64_t)v159, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
          int v68 = v155;
          sub_100E2B678(v67, (uint64_t)v155, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
          if ((v92 & 1) == 0) {
            goto LABEL_19;
          }
LABEL_29:
          uint64_t v138 = v6;
          sub_1005057FC((uint64_t *)&unk_10168A0D0);
          CRRegister.wrappedValue.getter();
          uint64_t v93 = v174[0];
          uint64_t v94 = v174[1];
          uint64_t v165 = v174[3];
          uint64_t v166 = v174[2];
          uint64_t v95 = v174[4];
          uint64_t v96 = v174[5];
          uint64_t v97 = v174[6];
          CRRegister.wrappedValue.getter();
          uint64_t v98 = v174[5];
          uint64_t v163 = v174[3];
          uint64_t v164 = v174[2];
          uint64_t v162 = v174[4];
          if (v96)
          {
            if (v174[5])
            {
              uint64_t v99 = v165;
              uint64_t v100 = v93;
              v190[0] = v93;
              uint64_t v153 = v94;
              v190[1] = v94;
              char v191 = v166 & 1;
              int v192 = HIDWORD(v166);
              int v193 = v165;
              char v194 = BYTE4(v165) & 1;
              uint64_t v195 = v95;
              uint64_t v196 = v96;
              uint64_t v197 = v97;
              LOBYTE(v174[2]) &= 1u;
              BYTE4(v174[3]) &= 1u;
              uint64_t v101 = v174[0];
              uint64_t v102 = v174[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              LODWORD(v161) = sub_10089C394(v190, v174);
              sub_10051AC38(v101, v102, v164, v163, v162, v98);
              uint64_t v103 = v153;
              uint64_t v104 = v166;
              sub_10051AC38(v100, v153, v166, v99, v95, v96);
              sub_100E29638((uint64_t)v155, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
              sub_100E29638((uint64_t)v159, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
              sub_10051AC38(v100, v103, v104, v99, v95, v96);
              uint64_t v64 = v156;
              double v89 = v150;
              sub_100E2B678(v156, (uint64_t)v150, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
              uint64_t v67 = v157;
              int v69 = v154;
              sub_100E2B678(v157, (uint64_t)v154, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
              uint64_t v6 = v138;
              uint64_t v88 = v149;
              if ((v161 & 1) == 0) {
                goto LABEL_21;
              }
LABEL_35:
              sub_1005057FC((uint64_t *)&unk_10168A0D0);
              CRRegister.wrappedValue.getter();
              uint64_t v108 = (uint64_t)v183;
              uint64_t v109 = v184;
              uint64_t v164 = v186;
              uint64_t v165 = v185;
              uint64_t v166 = v187;
              uint64_t v110 = v188;
              uint64_t v111 = v189;
              CRRegister.wrappedValue.getter();
              uint64_t v112 = v185;
              uint64_t v113 = (uint64_t)v69;
              uint64_t v114 = v188;
              uint64_t v162 = v187;
              uint64_t v163 = v186;
              if (v110)
              {
                uint64_t v115 = (uint64_t)v109;
                if (v188)
                {
                  uint64_t v116 = v164;
                  v175[0] = v108;
                  char v155 = v109;
                  v175[1] = (uint64_t)v109;
                  char v176 = v165 & 1;
                  int v177 = HIDWORD(v165);
                  int v178 = v164;
                  char v179 = BYTE4(v164) & 1;
                  uint64_t v180 = v166;
                  uint64_t v181 = v110;
                  uint64_t v182 = v111;
                  LOBYTE(v185) = v185 & 1;
                  HIDWORD(v185) = HIDWORD(v112);
                  BYTE4(v186) &= 1u;
                  uint64_t v117 = v112;
                  uint64_t v118 = (uint64_t)v184;
                  uint64_t v119 = (uint64_t)v183;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  LODWORD(v161) = sub_10089C394(v175, &v183);
                  sub_10051AC38(v119, v118, v117, v163, v162, v114);
                  BOOL v120 = v155;
                  uint64_t v121 = v165;
                  uint64_t v122 = v166;
                  sub_10051AC38(v108, (uint64_t)v155, v165, v116, v166, v110);
                  sub_100E29638((uint64_t)v154, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                  sub_100E29638((uint64_t)v150, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                  sub_10051AC38(v108, (uint64_t)v120, v121, v116, v122, v110);
                  uint64_t v88 = v149;
                  sub_100E2B678(v156, (uint64_t)v149, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                  uint64_t v6 = v138;
                  sub_100E2B678(v157, (uint64_t)v138, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                  if ((v161 & 1) == 0) {
                    goto LABEL_23;
                  }
LABEL_43:
                  sub_1005057FC(&qword_101689320);
                  CRRegister.wrappedValue.getter();
                  float v126 = *(float *)v172;
                  CRRegister.wrappedValue.getter();
                  BOOL v90 = v126 == *(float *)v172;
                  goto LABEL_24;
                }
                uint64_t v158 = v183;
                id v159 = v184;
                uint64_t v160 = v185;
                uint64_t v161 = v189;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_100E29638((uint64_t)v154, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                sub_100E29638((uint64_t)v150, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                uint64_t v125 = v164;
                uint64_t v124 = v165;
                uint64_t v123 = v166;
                sub_10051AC38(v108, v115, v165, v164, v166, v110);
              }
              else
              {
                uint64_t v158 = v183;
                id v159 = v184;
                uint64_t v160 = v185;
                uint64_t v161 = v189;
                uint64_t v115 = (uint64_t)v109;
                sub_100E29638(v113, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                sub_100E29638((uint64_t)v89, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                uint64_t v124 = v165;
                uint64_t v123 = v166;
                uint64_t v125 = v164;
                if (!v114)
                {
                  sub_10051AC38(v108, v115, v165, v164, v166, 0);
                  uint64_t v88 = v149;
                  sub_100E2B678(v156, (uint64_t)v149, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                  uint64_t v6 = v138;
                  sub_100E2B678(v157, (uint64_t)v138, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                  goto LABEL_43;
                }
              }
              sub_10051AC38(v108, v115, v124, v125, v123, v110);
              sub_10051AC38((uint64_t)v158, (uint64_t)v159, v160, v163, v162, v114);
              uint64_t v6 = v138;
              uint64_t v88 = v149;
              uint64_t v64 = v156;
              uint64_t v67 = v157;
              goto LABEL_22;
            }
            uint64_t v158 = (unsigned char *)v174[0];
            uint64_t v160 = v174[1];
            uint64_t v161 = v174[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v105 = v95;
            sub_100E29638((uint64_t)v155, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
            sub_100E29638((uint64_t)v159, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
            uint64_t v106 = v165;
            uint64_t v107 = v166;
            sub_10051AC38(v93, v94, v166, v165, v105, v96);
          }
          else
          {
            uint64_t v158 = (unsigned char *)v174[0];
            uint64_t v160 = v174[1];
            uint64_t v161 = v174[6];
            sub_100E29638((uint64_t)v68, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
            uint64_t v105 = v95;
            sub_100E29638((uint64_t)v159, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
            uint64_t v106 = v165;
            uint64_t v107 = v166;
            if (!v98)
            {
              sub_10051AC38(v93, v94, v166, v165, v105, 0);
              double v89 = v150;
              sub_100E2B678(v156, (uint64_t)v150, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
              int v69 = v154;
              sub_100E2B678(v157, (uint64_t)v154, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
              goto LABEL_35;
            }
          }
          sub_10051AC38(v93, v94, v107, v106, v105, v96);
          sub_10051AC38((uint64_t)v158, v160, v164, v163, v162, v98);
          uint64_t v6 = v138;
          uint64_t v88 = v149;
          uint64_t v64 = v156;
          uint64_t v67 = v157;
          int v69 = v154;
          goto LABEL_20;
        }
        sub_10051B3EC((uint64_t)v175, (uint64_t)v173, (uint64_t *)&unk_101685110);
        sub_100556A44(v173);
        sub_100E29638((uint64_t)v158, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        sub_100E29638(v161, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        sub_1005569D0(v175);
      }
      uint64_t v70 = v159;
      int v68 = v155;
      memcpy(v173, v174, sizeof(v173));
      sub_100556868((uint64_t)v173);
      goto LABEL_18;
    }
    sub_10051ABBC(v33, v34, v51, v141, v142, v143, v144, v145, v50, v52, v53, v54, v45);
    uint64_t v81 = v164;
    uint64_t v82 = v166;
    uint64_t v83 = v131;
    uint64_t v85 = v151;
    uint64_t v84 = v152;
    uint64_t v86 = v146;
    uint64_t v87 = v153;
    sub_10051ABBC(v164, v166, v131, v160, v151, v152, v146, v153, v163, v140, v162, v139, v49);
    sub_10051ABBC(v81, v82, v83, v160, v85, v84, v86, v87, v163, v140, v162, v139, v49);
  }
  else
  {
    sub_10051ABBC(v33, v34, v137, v141, v142, v143, v144, v145, v136, v135, v134, v133, v45);
    uint64_t v128 = v31;
    uint64_t v71 = v162;
    uint64_t v127 = v47;
    uint64_t v72 = v163;
    uint64_t v73 = v164;
    uint64_t v74 = v28;
    uint64_t v75 = v28;
    uint64_t v76 = v160;
    uint64_t v78 = v151;
    uint64_t v77 = v152;
    uint64_t v79 = v146;
    uint64_t v80 = v153;
    sub_10051ABBC(v164, v166, v75, v160, v151, v152, v146, v153, v163, v127, v162, v128, v147);
    sub_10051ABBC(v73, v166, v74, v76, v78, v77, v79, v80, v72, v140, v71, v139, v147);
  }
  uint64_t v6 = v138;
LABEL_16:
  uint64_t v64 = v156;
  uint64_t v67 = v157;
  int v69 = v154;
  int v68 = v155;
  uint64_t v70 = v159;
  uint64_t v65 = v161;
  sub_100E2B678(v156, v161, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  uint64_t v66 = v158;
  sub_100E2B678(v67, (uint64_t)v158, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
LABEL_17:
  sub_100E29638((uint64_t)v66, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  sub_100E29638(v65, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
LABEL_18:
  sub_100E2B678(v64, (uint64_t)v70, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  sub_100E2B678(v67, (uint64_t)v68, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
LABEL_19:
  sub_100E29638((uint64_t)v68, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  sub_100E29638((uint64_t)v70, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  uint64_t v88 = v149;
LABEL_20:
  double v89 = v150;
  sub_100E2B678(v64, (uint64_t)v150, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  sub_100E2B678(v67, (uint64_t)v69, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
LABEL_21:
  sub_100E29638((uint64_t)v69, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  sub_100E29638((uint64_t)v89, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
LABEL_22:
  sub_100E2B678(v64, (uint64_t)v88, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  sub_100E2B678(v67, (uint64_t)v6, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
LABEL_23:
  BOOL v90 = 0;
LABEL_24:
  sub_100E29638((uint64_t)v6, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  sub_100E29638((uint64_t)v88, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  return v90;
}

uint64_t sub_100E2CB20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLPKStrokePathData();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_10169EDD8);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_10168E498);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v42 - v19;
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)&v42 - v23;
  if ((sub_100688694(a1, a2) & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v45 = v5;
  uint64_t v25 = type metadata accessor for CRLShapeItemParentAffinity(0);
  if ((sub_100AA7144(a1 + *(int *)(v25 + 20), a2 + *(int *)(v25 + 20)) & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v26 = *(int *)(v25 + 24);
  uint64_t v43 = a1;
  sub_100522E9C(a1 + v26, (uint64_t)v24, &qword_10168E498);
  uint64_t v42 = v25;
  uint64_t v27 = *(int *)(v25 + 24);
  uint64_t v44 = a2;
  sub_100522E9C(a2 + v27, (uint64_t)v20, &qword_10168E498);
  uint64_t v28 = (uint64_t)&v12[*(int *)(v9 + 48)];
  sub_100522E9C((uint64_t)v24, (uint64_t)v12, &qword_10168E498);
  sub_100522E9C((uint64_t)v20, v28, &qword_10168E498);
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
  if (v29((uint64_t)v12, 1, v4) != 1)
  {
    sub_100522E9C((uint64_t)v12, (uint64_t)v16, &qword_10168E498);
    if (v29(v28, 1, v4) != 1)
    {
      sub_100E2D1B0(v28, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
      char v30 = sub_100B3A3E8(v16, v8);
      sub_100E29638((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
      sub_100522F00((uint64_t)v20, &qword_10168E498);
      sub_100522F00((uint64_t)v24, &qword_10168E498);
      sub_100E29638((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
      sub_100522F00((uint64_t)v12, &qword_10168E498);
      if ((v30 & 1) == 0) {
        goto LABEL_13;
      }
      goto LABEL_10;
    }
    sub_100522F00((uint64_t)v20, &qword_10168E498);
    sub_100522F00((uint64_t)v24, &qword_10168E498);
    sub_100E29638((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
LABEL_8:
    sub_100522F00((uint64_t)v12, &qword_10169EDD8);
    goto LABEL_13;
  }
  sub_100522F00((uint64_t)v20, &qword_10168E498);
  sub_100522F00((uint64_t)v24, &qword_10168E498);
  if (v29(v28, 1, v4) != 1) {
    goto LABEL_8;
  }
  sub_100522F00((uint64_t)v12, &qword_10168E498);
LABEL_10:
  uint64_t v32 = v42;
  uint64_t v31 = v43;
  uint64_t v33 = *(int *)(v42 + 28);
  uint64_t v34 = (uint64_t *)(v43 + v33);
  int v35 = *(unsigned __int8 *)(v43 + v33 + 8);
  uint64_t v36 = v44;
  uint64_t v37 = (uint64_t *)(v44 + v33);
  int v38 = *(unsigned __int8 *)(v44 + v33 + 8);
  if (v35 != 255)
  {
    uint64_t v39 = *v37;
    uint64_t v48 = *v34;
    char v49 = v35;
    if (v38 == 255) {
      goto LABEL_13;
    }
    uint64_t v46 = v39;
    char v47 = v38 & 1;
    sub_100BC7044();
    if ((static CRExtensible.== infix(_:_:)() & 1) == 0) {
      goto LABEL_13;
    }
LABEL_16:
    char v40 = sub_100ED60AC(*(void *)(v31 + *(int *)(v32 + 32)), *(void *)(v36 + *(int *)(v32 + 32)));
    return v40 & 1;
  }
  if (v38 == 255) {
    goto LABEL_16;
  }
LABEL_13:
  char v40 = 0;
  return v40 & 1;
}

uint64_t sub_100E2CF7C(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) >= 6) {
    return 5;
  }
  else {
    return (0x30502010004uLL >> (8 * (a1 + 1)));
  }
}

uint64_t sub_100E2CFA4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x800000010128DED0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72756F5368746170 && a2 == 0xEA00000000006563 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000010128DEF0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000010128DF10 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_100E2D1B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100E2D218(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(&qword_10169EE00);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100E2D280(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLPathSourceData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for CRLShapeItemParentAffinity.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100E2D3B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLShapeItemParentAffinity.CodingKeys()
{
  return &type metadata for CRLShapeItemParentAffinity.CodingKeys;
}

unint64_t sub_100E2D3EC()
{
  unint64_t result = qword_10169EE28;
  if (!qword_10169EE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169EE28);
  }
  return result;
}

uint64_t sub_100E2D440()
{
  uint64_t v1 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v1 - 8, v2);
  unsigned int v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLAssetData();
  uint64_t v6 = v5 - 8;
  *(void *)&double v8 = __chkstk_darwin(v5, v7).n128_u64[0];
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [v0 movieItem:v8];
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_1016A4070);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_10077F98C((uint64_t)v4, (uint64_t)v10);
  sub_10077F9F0((uint64_t)v4, type metadata accessor for CRLMovieItemAssetData);

  uint64_t v12 = *(void *)&v10[*(int *)(v6 + 28)];
  swift_bridgeObjectRetain();
  sub_10077F9F0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  return v12;
}

id sub_100E2D9B4(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform22CRLMovieRepPlaceholder_previewItemURL];
  uint64_t v8 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(void *)&v1[OBJC_IVAR____TtC8Freeform22CRLMovieRepPlaceholder_movieRep] = a1;
  uint64_t v9 = v1;
  id v10 = a1;
  uint64_t v11 = sub_100E2D440();
  uint64_t v13 = v12;
  uint64_t v14 = (uint64_t *)&v9[OBJC_IVAR____TtC8Freeform22CRLMovieRepPlaceholder_previewItemTitle];
  uint64_t *v14 = v11;
  v14[1] = v12;
  id v15 = [v10 movieItem];
  if (v13)
  {
    uint64_t v16 = v13;
  }
  else
  {
    uint64_t v11 = 0x6569766F6DLL;
    uint64_t v16 = 0xE500000000000000;
  }
  swift_bridgeObjectRetain();
  id v17 = sub_100FA3DA0((uint64_t)v6, v11, v16);

  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1005C6D24((uint64_t)v6, v7);
  swift_endAccess();

  uint64_t v18 = (objc_class *)type metadata accessor for CRLMovieRepPlaceholder();
  v22.receiver = v9;
  v22.super_class = v18;
  id v19 = [super init];
  if (v17)
  {
    [v17 setAssociatedLifetimeObject:v10];
  }
  sub_1005CCBB8((uint64_t)v6);
  return v19;
}

id sub_100E2DBD0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMovieRepPlaceholder();
  return [super dealloc];
}

uint64_t sub_100E2DC68()
{
  return type metadata accessor for CRLMovieRepPlaceholder();
}

uint64_t type metadata accessor for CRLMovieRepPlaceholder()
{
  uint64_t result = qword_10169EE58;
  if (!qword_10169EE58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100E2DCBC()
{
  sub_100757DF8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100E2DD64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[23] = a6;
  unsigned char v7[24] = v6;
  v7[21] = a4;
  v7[22] = a5;
  v7[19] = a2;
  v7[20] = a3;
  v7[18] = a1;
  swift_defaultActor_initialize();
  *(void *)(v6 + 120) = 0;
  swift_unknownObjectWeakInit();
  *(_DWORD *)(v6 + 207) = 0;
  *(_OWORD *)(v6 + 176) = 0u;
  *(_OWORD *)(v6 + 192) = 0u;
  *(_OWORD *)(v6 + 144) = 0u;
  *(_OWORD *)(v6 + 160) = 0u;
  *(_OWORD *)(v6 + 128) = 0u;
  return _swift_task_switch(sub_100E2DE00, v6, 0);
}

uint64_t sub_100E2DE00()
{
  uint64_t v1 = (int *)v0[20];
  *(void *)(v0[24] + 120) = v0[19];
  swift_unknownObjectWeakAssign();
  uint64_t v5 = (int *)((char *)v1 + *v1);
  swift_retain();
  objc_super v2 = (void *)swift_task_alloc();
  v0[25] = v2;
  *objc_super v2 = v0;
  v2[1] = sub_100E2DF14;
  uint64_t v3 = v0[24];
  return ((uint64_t (*)(void *, uint64_t, _UNKNOWN **))v5)(v0 + 2, v3, &off_10152F6F0);
}

uint64_t sub_100E2DF14()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 192);
  uint64_t v3 = *(int **)(*v0 + 176);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_beginAccess();
  sub_100E327E0(v1 + 16, v2 + 128);
  swift_endAccess();
  uint64_t v8 = (int *)((char *)v3 + *v3);
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 208) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_100E2E130;
  uint64_t v6 = *(void *)(v1 + 192);
  return ((uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))v8)(v1 + 56, v6, &off_10152F6F0);
}

uint64_t sub_100E2E130()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0 + 56;
  uint64_t v3 = *(void *)(*v0 + 192);
  uint64_t v7 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  swift_release();
  swift_beginAccess();
  sub_100E327E0(v2, v3 + 168);
  swift_endAccess();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v7 + 8);
  uint64_t v5 = *(void *)(v1 + 192);
  return v4(v5);
}

uint64_t sub_100E2E2A4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100528488;
  return sub_100E2E334();
}

uint64_t sub_100E2E334()
{
  *(void *)(v1 + 528) = v0;
  sub_1005057FC(&qword_101672BB0);
  *(void *)(v1 + 536) = swift_task_alloc();
  return _swift_task_switch(sub_100E2E3C8, v0, 0);
}

uint64_t sub_100E2E3C8()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[68] = Strong;
  if (!Strong)
  {
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v8 = (id)static OS_os_log.realTimeSync;
    uint64_t v9 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Cannot transfer changes because there is no data source set", 59, 2, (uint64_t)_swiftEmptyArrayStorage);

    goto LABEL_14;
  }
  uint64_t v2 = (unsigned char *)v0[66];
  if (v2[210] != 1)
  {
    if (qword_10166FBA0 != -1)
    {
      swift_once();
      uint64_t v2 = (unsigned char *)v0[66];
    }
    swift_beginAccess();
    id v3 = (id)static OS_os_log.realTimeSync;
    uint64_t v4 = static os_log_type_t.default.getter();
    uint64_t v5 = "A transfer has been requested but the group session cannot transfer changes yet. An attempt will be made once c"
         "hanges can be transferred.";
    uint64_t v6 = (uint64_t)v3;
    uint64_t v7 = 137;
    goto LABEL_13;
  }
  if (v2[209] == 1)
  {
    if (qword_10166FBA0 != -1)
    {
      swift_once();
      uint64_t v2 = (unsigned char *)v0[66];
    }
    swift_beginAccess();
    id v3 = (id)static OS_os_log.realTimeSync;
    uint64_t v4 = static os_log_type_t.default.getter();
    uint64_t v5 = "Requested a transfer while there is an ongoing transfer. A transfer will be attempted after the current one is completed";
    uint64_t v6 = (uint64_t)v3;
    uint64_t v7 = 120;
LABEL_13:
    sub_100BAC898(v6, (uint64_t)&_mh_execute_header, v4, (uint64_t)v5, v7, 2, (uint64_t)_swiftEmptyArrayStorage);

    swift_unknownObjectRelease();
    v2[208] = 1;
LABEL_14:
    swift_task_dealloc();
    id v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  if (qword_10166F2D0 != -1) {
    swift_once();
  }
  CRLAnalyticsOSSignpostManager.beginSignpostInterval(for:with:)(21, 1, (uint64_t)_swiftEmptyArrayStorage);
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v12 = (id)static OS_os_log.realTimeSync;
  uint64_t v13 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v13, (uint64_t)"Begun transferring realtime changes", 35, 2, (uint64_t)_swiftEmptyArrayStorage);

  v2[209] = 1;
  uint64_t v14 = (void *)swift_task_alloc();
  v0[69] = v14;
  void *v14 = v0;
  v14[1] = sub_100E2E774;
  return sub_100E781F4();
}

uint64_t sub_100E2E774(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 528);
  *(void *)(*(void *)v1 + 560) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100E2E88C, v2, 0);
}

uint64_t sub_100E2E88C()
{
  BOOL v1 = sub_100E781A4();
  id v2 = (id)static OS_os_log.realTimeSync;
  uint64_t v3 = static os_log_type_t.default.getter();
  if (v1)
  {
    uint64_t v4 = v0[66];
    sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"No changes to transfer", 22, 2, (uint64_t)_swiftEmptyArrayStorage);

    *(unsigned char *)(v4 + 209) = 0;
    if (*(unsigned char *)(v4 + 208) != 1)
    {
LABEL_5:
      swift_release();
      CRLAnalyticsOSSignpostManager.endSignpostInterval(for:)(0x15uLL, 1);
      id v11 = (id)static OS_os_log.realTimeSync;
      uint64_t v12 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Finished transferring realtime changes", 38, 2, (uint64_t)_swiftEmptyArrayStorage);
      swift_unknownObjectRelease();

      swift_task_dealloc();
      uint64_t v13 = (uint64_t (*)(void))v0[1];
      return v13();
    }
    uint64_t v5 = v0[67];
    uint64_t v6 = v0[66];
    *(unsigned char *)(v4 + 208) = 0;
    uint64_t v7 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
    unint64_t v8 = sub_100C2F35C();
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = v6;
    v9[3] = v8;
    _OWORD v9[4] = v6;
    swift_retain_n();
    id v10 = &unk_10169F048;
LABEL_4:
    sub_1005912D0(v5, (uint64_t)v10, (uint64_t)v9);
    swift_release();
    goto LABEL_5;
  }
  uint64_t v15 = v0[70];
  sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"Fetched realtime changes to transfer", 36, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v16 = *(void *)(v15 + 16);
  if (*(void *)(v16 + 16))
  {
    type metadata accessor for CRLRealTimeMessage();
    uint64_t v17 = swift_allocObject();
    v0[71] = v17;
    *(void *)(v17 + 16) = 0;
    *(void *)(v17 + 24) = v16;
    swift_bridgeObjectRetain();
    uint64_t v18 = swift_task_alloc();
    v0[72] = v18;
    *(void *)uint64_t v18 = v0;
    *(void *)(v18 + 8) = sub_100E2F13C;
    uint64_t v19 = v0[66];
    *(unsigned char *)(v18 + 400) = 1;
  }
  else
  {
    uint64_t v20 = (void *)v0[70];
    uint64_t v21 = v20[3];
    if (!*(void *)(v21 + 16))
    {
      uint64_t v22 = v20[4];
      v0[75] = v22;
      uint64_t v23 = *(void *)(v22 + 16);
      v0[76] = v23;
      if (v23)
      {
        swift_bridgeObjectRetain();
        swift_beginAccess();
        for (uint64_t i = 0; ; uint64_t i = v0[77] + 1)
        {
          v0[77] = i;
          uint64_t v25 = (void *)(v0[75] + 24 * i);
          uint64_t v26 = v0[66] + 168;
          uint64_t v27 = v25[4];
          uint64_t v28 = v25[5];
          v0[78] = v28;
          unint64_t v29 = v25[6];
          v0[79] = v29;
          sub_1005057FC(&qword_10169F038);
          uint64_t v30 = swift_allocObject();
          *(_OWORD *)(v30 + 16) = xmmword_10117E810;
          *(void *)(v30 + 32) = v27;
          *(void *)(v30 + 40) = v28;
          *(void *)(v30 + 48) = v29;
          type metadata accessor for CRLRealTimeMessage();
          uint64_t v31 = swift_allocObject();
          v0[80] = v31;
          *(void *)(v31 + 16) = 0;
          *(void *)(v31 + 24) = v30;
          sub_100510D4C(v28, v29);
          sub_100510D4C(v28, v29);
          sub_100E3263C(v26, (uint64_t)(v0 + 30));
          if (v0[33]) {
            break;
          }
          sub_100E326A4((uint64_t)(v0 + 30));
          unint64_t v32 = v0[79];
          uint64_t v33 = v0[78];
          uint64_t v34 = v0[77];
          uint64_t v35 = v0[76];
          swift_release();
          sub_100510084(v33, v32);
          if (v34 + 1 == v35)
          {
            swift_bridgeObjectRelease();
            uint64_t v20 = (void *)v0[70];
            goto LABEL_24;
          }
        }
        sub_1005498A4((uint64_t)(v0 + 30), (uint64_t)(v0 + 20));
        sub_100E326A4((uint64_t)(v0 + 30));
        uint64_t v36 = v0[23];
        uint64_t v37 = v0[24];
        sub_10050F848(v0 + 20, v36);
        uint64_t v64 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 + 16) + **(int **)(v37 + 16));
        int v38 = (void *)swift_task_alloc();
        v0[81] = v38;
        *int v38 = v0;
        v38[1] = sub_100E30090;
        uint64_t v39 = v31;
        uint64_t v40 = v36;
        uint64_t v41 = v37;
        uint64_t v42 = v64;
      }
      else
      {
LABEL_24:
        uint64_t v43 = v20[5];
        v0[83] = v43;
        uint64_t v44 = *(void *)(v43 + 16);
        v0[84] = v44;
        if (!v44)
        {
LABEL_33:
          uint64_t v60 = v0[66];
          *(unsigned char *)(v60 + 209) = 0;
          if (*(unsigned char *)(v60 + 208) != 1) {
            goto LABEL_5;
          }
          uint64_t v5 = v0[67];
          uint64_t v61 = v0[66];
          *(unsigned char *)(v60 + 208) = 0;
          uint64_t v62 = type metadata accessor for TaskPriority();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v5, 1, 1, v62);
          unint64_t v63 = sub_100C2F35C();
          uint64_t v9 = (void *)swift_allocObject();
          v9[2] = v61;
          v9[3] = v63;
          _OWORD v9[4] = v61;
          swift_retain_n();
          id v10 = &unk_101692C88;
          goto LABEL_4;
        }
        swift_bridgeObjectRetain();
        swift_beginAccess();
        for (uint64_t j = 0; ; uint64_t j = v0[85] + 1)
        {
          v0[85] = j;
          uint64_t v46 = (void *)(v0[83] + 24 * j);
          uint64_t v47 = v0[66] + 168;
          uint64_t v48 = v46[4];
          uint64_t v49 = v46[5];
          v0[86] = v49;
          unint64_t v50 = v46[6];
          v0[87] = v50;
          sub_1005057FC(&qword_10169F038);
          uint64_t v51 = swift_allocObject();
          *(_OWORD *)(v51 + 16) = xmmword_10117E810;
          *(void *)(v51 + 32) = v48;
          *(void *)(v51 + 40) = v49;
          *(void *)(v51 + 48) = v50;
          type metadata accessor for CRLRealTimeMessage();
          uint64_t v52 = swift_allocObject();
          v0[88] = v52;
          *(void *)(v52 + 16) = 0;
          *(void *)(v52 + 24) = v51;
          sub_100510D4C(v49, v50);
          sub_100510D4C(v49, v50);
          sub_100E3263C(v47, (uint64_t)(v0 + 35));
          if (v0[38]) {
            break;
          }
          sub_100E326A4((uint64_t)(v0 + 35));
          unint64_t v53 = v0[87];
          uint64_t v54 = v0[86];
          uint64_t v55 = v0[85];
          uint64_t v56 = v0[84];
          swift_release();
          sub_100510084(v54, v53);
          if (v55 + 1 == v56)
          {
            swift_bridgeObjectRelease();
            goto LABEL_33;
          }
        }
        sub_1005498A4((uint64_t)(v0 + 35), (uint64_t)(v0 + 25));
        sub_100E326A4((uint64_t)(v0 + 35));
        uint64_t v57 = v0[28];
        uint64_t v58 = v0[29];
        sub_10050F848(v0 + 25, v57);
        uint64_t v65 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 + 8) + **(int **)(v58 + 8));
        uint64_t v59 = (void *)swift_task_alloc();
        v0[89] = v59;
        *uint64_t v59 = v0;
        v59[1] = sub_100E313AC;
        uint64_t v39 = v52;
        uint64_t v40 = v57;
        uint64_t v41 = v58;
        uint64_t v42 = v65;
      }
      return v42(v39, v40, v41);
    }
    type metadata accessor for CRLRealTimeMessage();
    uint64_t v17 = swift_allocObject();
    v0[73] = v17;
    *(void *)(v17 + 16) = 0;
    *(void *)(v17 + 24) = v21;
    swift_bridgeObjectRetain();
    uint64_t v18 = swift_task_alloc();
    v0[74] = v18;
    *(void *)uint64_t v18 = v0;
    *(void *)(v18 + 8) = sub_100E2F94C;
    uint64_t v19 = v0[66];
    *(unsigned char *)(v18 + 400) = 0;
  }
  *(void *)(v18 + 352) = v17;
  *(void *)(v18 + 360) = v19;
  return _swift_task_switch(sub_100E318E0, v19, 0);
}

uint64_t sub_100E2F13C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 528);
  swift_task_dealloc();
  return _swift_task_switch(sub_100E2F24C, v1, 0);
}

uint64_t sub_100E2F24C()
{
  swift_release();
  uint64_t v1 = (void *)v0[70];
  uint64_t v2 = v1[3];
  if (*(void *)(v2 + 16))
  {
    type metadata accessor for CRLRealTimeMessage();
    uint64_t v3 = swift_allocObject();
    v0[73] = v3;
    *(void *)(v3 + 16) = 0;
    *(void *)(v3 + 24) = v2;
    swift_bridgeObjectRetain();
    uint64_t v4 = swift_task_alloc();
    v0[74] = v4;
    *(void *)uint64_t v4 = v0;
    *(void *)(v4 + 8) = sub_100E2F94C;
    uint64_t v5 = v0[66];
    *(unsigned char *)(v4 + 400) = 0;
    *(void *)(v4 + 352) = v3;
    *(void *)(v4 + 360) = v5;
    return _swift_task_switch(sub_100E318E0, v5, 0);
  }
  uint64_t v6 = v1[4];
  v0[75] = v6;
  uint64_t v7 = *(void *)(v6 + 16);
  v0[76] = v7;
  if (v7)
  {
    swift_bridgeObjectRetain();
    swift_beginAccess();
    for (uint64_t i = 0; ; uint64_t i = v0[77] + 1)
    {
      v0[77] = i;
      uint64_t v9 = (void *)(v0[75] + 24 * i);
      uint64_t v10 = v0[66] + 168;
      uint64_t v11 = v9[4];
      uint64_t v12 = v9[5];
      v0[78] = v12;
      unint64_t v13 = v9[6];
      v0[79] = v13;
      sub_1005057FC(&qword_10169F038);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_10117E810;
      *(void *)(v14 + 32) = v11;
      *(void *)(v14 + 40) = v12;
      *(void *)(v14 + 48) = v13;
      type metadata accessor for CRLRealTimeMessage();
      uint64_t v15 = swift_allocObject();
      v0[80] = v15;
      *(void *)(v15 + 16) = 0;
      *(void *)(v15 + 24) = v14;
      sub_100510D4C(v12, v13);
      sub_100510D4C(v12, v13);
      sub_100E3263C(v10, (uint64_t)(v0 + 30));
      if (v0[33]) {
        break;
      }
      sub_100E326A4((uint64_t)(v0 + 30));
      unint64_t v16 = v0[79];
      uint64_t v17 = v0[78];
      uint64_t v18 = v0[77];
      uint64_t v19 = v0[76];
      swift_release();
      sub_100510084(v17, v16);
      if (v18 + 1 == v19)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = (void *)v0[70];
        goto LABEL_14;
      }
    }
    sub_1005498A4((uint64_t)(v0 + 30), (uint64_t)(v0 + 20));
    sub_100E326A4((uint64_t)(v0 + 30));
    uint64_t v20 = v0[23];
    uint64_t v21 = v0[24];
    sub_10050F848(v0 + 20, v20);
    uint64_t v54 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 + 16) + **(int **)(v21 + 16));
    uint64_t v22 = (void *)swift_task_alloc();
    v0[81] = v22;
    void *v22 = v0;
    v22[1] = sub_100E30090;
    uint64_t v23 = v15;
    uint64_t v24 = v20;
    uint64_t v25 = v21;
    uint64_t v26 = v54;
    return v26(v23, v24, v25);
  }
LABEL_14:
  uint64_t v27 = v1[5];
  v0[83] = v27;
  uint64_t v28 = *(void *)(v27 + 16);
  v0[84] = v28;
  if (v28)
  {
    swift_bridgeObjectRetain();
    swift_beginAccess();
    for (uint64_t j = 0; ; uint64_t j = v0[85] + 1)
    {
      v0[85] = j;
      uint64_t v30 = (void *)(v0[83] + 24 * j);
      uint64_t v31 = v0[66] + 168;
      uint64_t v32 = v30[4];
      uint64_t v33 = v30[5];
      v0[86] = v33;
      unint64_t v34 = v30[6];
      v0[87] = v34;
      sub_1005057FC(&qword_10169F038);
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_10117E810;
      *(void *)(v35 + 32) = v32;
      *(void *)(v35 + 40) = v33;
      *(void *)(v35 + 48) = v34;
      type metadata accessor for CRLRealTimeMessage();
      uint64_t v36 = swift_allocObject();
      v0[88] = v36;
      *(void *)(v36 + 16) = 0;
      *(void *)(v36 + 24) = v35;
      sub_100510D4C(v33, v34);
      sub_100510D4C(v33, v34);
      sub_100E3263C(v31, (uint64_t)(v0 + 35));
      if (v0[38]) {
        break;
      }
      sub_100E326A4((uint64_t)(v0 + 35));
      unint64_t v37 = v0[87];
      uint64_t v38 = v0[86];
      uint64_t v39 = v0[85];
      uint64_t v40 = v0[84];
      swift_release();
      sub_100510084(v38, v37);
      if (v39 + 1 == v40)
      {
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    sub_1005498A4((uint64_t)(v0 + 35), (uint64_t)(v0 + 25));
    sub_100E326A4((uint64_t)(v0 + 35));
    uint64_t v41 = v0[28];
    uint64_t v42 = v0[29];
    sub_10050F848(v0 + 25, v41);
    uint64_t v55 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 + 8) + **(int **)(v42 + 8));
    uint64_t v43 = (void *)swift_task_alloc();
    v0[89] = v43;
    *uint64_t v43 = v0;
    v43[1] = sub_100E313AC;
    uint64_t v23 = v36;
    uint64_t v24 = v41;
    uint64_t v25 = v42;
    uint64_t v26 = v55;
    return v26(v23, v24, v25);
  }
LABEL_23:
  uint64_t v44 = v0[66];
  *(unsigned char *)(v44 + 209) = 0;
  if (*(unsigned char *)(v44 + 208) == 1)
  {
    uint64_t v45 = v0[67];
    uint64_t v46 = v0[66];
    *(unsigned char *)(v44 + 208) = 0;
    uint64_t v47 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v45, 1, 1, v47);
    unint64_t v48 = sub_100C2F35C();
    uint64_t v49 = (void *)swift_allocObject();
    v49[2] = v46;
    v49[3] = v48;
    v49[4] = v46;
    swift_retain_n();
    sub_1005912D0(v45, (uint64_t)&unk_101692C88, (uint64_t)v49);
    swift_release();
  }
  swift_release();
  CRLAnalyticsOSSignpostManager.endSignpostInterval(for:)(0x15uLL, 1);
  id v50 = (id)static OS_os_log.realTimeSync;
  uint64_t v51 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v50, (uint64_t)&_mh_execute_header, v51, (uint64_t)"Finished transferring realtime changes", 38, 2, (uint64_t)_swiftEmptyArrayStorage);
  swift_unknownObjectRelease();

  swift_task_dealloc();
  uint64_t v52 = (uint64_t (*)(void))v0[1];
  return v52();
}

uint64_t sub_100E2F94C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 528);
  swift_task_dealloc();
  return _swift_task_switch(sub_100E2FA5C, v1, 0);
}

uint64_t sub_100E2FA5C()
{
  swift_release();
  uint64_t v1 = v0[70];
  uint64_t v2 = *(void *)(v1 + 32);
  v0[75] = v2;
  uint64_t v3 = *(void *)(v2 + 16);
  v0[76] = v3;
  if (v3)
  {
    swift_bridgeObjectRetain();
    swift_beginAccess();
    for (uint64_t i = 0; ; uint64_t i = v0[77] + 1)
    {
      v0[77] = i;
      uint64_t v5 = (void *)(v0[75] + 24 * i);
      uint64_t v6 = v0[66] + 168;
      uint64_t v7 = v5[4];
      uint64_t v8 = v5[5];
      v0[78] = v8;
      unint64_t v9 = v5[6];
      v0[79] = v9;
      sub_1005057FC(&qword_10169F038);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_10117E810;
      *(void *)(v10 + 32) = v7;
      *(void *)(v10 + 40) = v8;
      *(void *)(v10 + 48) = v9;
      type metadata accessor for CRLRealTimeMessage();
      uint64_t v11 = swift_allocObject();
      v0[80] = v11;
      *(void *)(v11 + 16) = 0;
      *(void *)(v11 + 24) = v10;
      sub_100510D4C(v8, v9);
      sub_100510D4C(v8, v9);
      sub_100E3263C(v6, (uint64_t)(v0 + 30));
      if (v0[33]) {
        break;
      }
      sub_100E326A4((uint64_t)(v0 + 30));
      unint64_t v12 = v0[79];
      uint64_t v13 = v0[78];
      uint64_t v14 = v0[77];
      uint64_t v15 = v0[76];
      swift_release();
      sub_100510084(v13, v12);
      if (v14 + 1 == v15)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = v0[70];
        goto LABEL_10;
      }
    }
    sub_1005498A4((uint64_t)(v0 + 30), (uint64_t)(v0 + 20));
    sub_100E326A4((uint64_t)(v0 + 30));
    uint64_t v16 = v0[23];
    uint64_t v17 = v0[24];
    sub_10050F848(v0 + 20, v16);
    id v50 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 16) + **(int **)(v17 + 16));
    uint64_t v18 = (void *)swift_task_alloc();
    v0[81] = v18;
    void *v18 = v0;
    v18[1] = sub_100E30090;
    uint64_t v19 = v11;
    uint64_t v20 = v16;
    uint64_t v21 = v17;
    uint64_t v22 = v50;
    return v22(v19, v20, v21);
  }
LABEL_10:
  uint64_t v24 = *(void *)(v1 + 40);
  v0[83] = v24;
  uint64_t v25 = *(void *)(v24 + 16);
  v0[84] = v25;
  if (v25)
  {
    swift_bridgeObjectRetain();
    swift_beginAccess();
    for (uint64_t j = 0; ; uint64_t j = v0[85] + 1)
    {
      v0[85] = j;
      uint64_t v27 = (void *)(v0[83] + 24 * j);
      uint64_t v28 = v0[66] + 168;
      uint64_t v29 = v27[4];
      uint64_t v30 = v27[5];
      v0[86] = v30;
      unint64_t v31 = v27[6];
      v0[87] = v31;
      sub_1005057FC(&qword_10169F038);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_10117E810;
      *(void *)(v32 + 32) = v29;
      *(void *)(v32 + 40) = v30;
      *(void *)(v32 + 48) = v31;
      type metadata accessor for CRLRealTimeMessage();
      uint64_t v33 = swift_allocObject();
      v0[88] = v33;
      *(void *)(v33 + 16) = 0;
      *(void *)(v33 + 24) = v32;
      sub_100510D4C(v30, v31);
      sub_100510D4C(v30, v31);
      sub_100E3263C(v28, (uint64_t)(v0 + 35));
      if (v0[38]) {
        break;
      }
      sub_100E326A4((uint64_t)(v0 + 35));
      unint64_t v34 = v0[87];
      uint64_t v35 = v0[86];
      uint64_t v36 = v0[85];
      uint64_t v37 = v0[84];
      swift_release();
      sub_100510084(v35, v34);
      if (v36 + 1 == v37)
      {
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
    sub_1005498A4((uint64_t)(v0 + 35), (uint64_t)(v0 + 25));
    sub_100E326A4((uint64_t)(v0 + 35));
    uint64_t v38 = v0[28];
    uint64_t v39 = v0[29];
    sub_10050F848(v0 + 25, v38);
    uint64_t v51 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 + 8) + **(int **)(v39 + 8));
    uint64_t v40 = (void *)swift_task_alloc();
    v0[89] = v40;
    *uint64_t v40 = v0;
    v40[1] = sub_100E313AC;
    uint64_t v19 = v33;
    uint64_t v20 = v38;
    uint64_t v21 = v39;
    uint64_t v22 = v51;
    return v22(v19, v20, v21);
  }
LABEL_19:
  uint64_t v41 = v0[66];
  *(unsigned char *)(v41 + 209) = 0;
  if (*(unsigned char *)(v41 + 208) == 1)
  {
    uint64_t v42 = v0[67];
    uint64_t v43 = v0[66];
    *(unsigned char *)(v41 + 208) = 0;
    uint64_t v44 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v42, 1, 1, v44);
    unint64_t v45 = sub_100C2F35C();
    uint64_t v46 = (void *)swift_allocObject();
    v46[2] = v43;
    v46[3] = v45;
    v46[4] = v43;
    swift_retain_n();
    sub_1005912D0(v42, (uint64_t)&unk_101692C88, (uint64_t)v46);
    swift_release();
  }
  swift_release();
  CRLAnalyticsOSSignpostManager.endSignpostInterval(for:)(0x15uLL, 1);
  id v47 = (id)static OS_os_log.realTimeSync;
  uint64_t v48 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v47, (uint64_t)&_mh_execute_header, v48, (uint64_t)"Finished transferring realtime changes", 38, 2, (uint64_t)_swiftEmptyArrayStorage);
  swift_unknownObjectRelease();

  swift_task_dealloc();
  uint64_t v49 = (uint64_t (*)(void))v0[1];
  return v49();
}

uint64_t sub_100E30090()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 656) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 528);
  if (v0) {
    uint64_t v4 = sub_100E307E0;
  }
  else {
    uint64_t v4 = sub_100E301BC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100E301BC()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 20));
  unint64_t v1 = v0[79];
  uint64_t v2 = v0[78];
  uint64_t v3 = v0[77];
  uint64_t v4 = v0[76];
  swift_release();
  sub_100510084(v2, v1);
  if (v3 + 1 != v4)
  {
    while (1)
    {
      uint64_t v5 = v0[77] + 1;
      v0[77] = v5;
      uint64_t v6 = (void *)(v0[75] + 24 * v5);
      uint64_t v7 = v0[66] + 168;
      uint64_t v8 = v6[4];
      uint64_t v9 = v6[5];
      v0[78] = v9;
      unint64_t v10 = v6[6];
      v0[79] = v10;
      sub_1005057FC(&qword_10169F038);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_10117E810;
      *(void *)(v11 + 32) = v8;
      *(void *)(v11 + 40) = v9;
      *(void *)(v11 + 48) = v10;
      type metadata accessor for CRLRealTimeMessage();
      uint64_t v12 = swift_allocObject();
      v0[80] = v12;
      *(void *)(v12 + 16) = 0;
      *(void *)(v12 + 24) = v11;
      sub_100510D4C(v9, v10);
      sub_100510D4C(v9, v10);
      sub_100E3263C(v7, (uint64_t)(v0 + 30));
      if (v0[33]) {
        break;
      }
      sub_100E326A4((uint64_t)(v0 + 30));
      unint64_t v13 = v0[79];
      uint64_t v14 = v0[78];
      uint64_t v15 = v0[77];
      uint64_t v16 = v0[76];
      swift_release();
      sub_100510084(v14, v13);
      if (v15 + 1 == v16) {
        goto LABEL_4;
      }
    }
    sub_1005498A4((uint64_t)(v0 + 30), (uint64_t)(v0 + 20));
    sub_100E326A4((uint64_t)(v0 + 30));
    uint64_t v31 = v0[23];
    uint64_t v32 = v0[24];
    sub_10050F848(v0 + 20, v31);
    uint64_t v51 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 + 16) + **(int **)(v32 + 16));
    uint64_t v33 = (void *)swift_task_alloc();
    v0[81] = v33;
    *uint64_t v33 = v0;
    v33[1] = sub_100E30090;
    uint64_t v34 = v12;
    uint64_t v35 = v31;
    uint64_t v36 = v32;
    uint64_t v37 = v51;
    return v37(v34, v35, v36);
  }
LABEL_4:
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v0[70] + 40);
  v0[83] = v17;
  uint64_t v18 = *(void *)(v17 + 16);
  v0[84] = v18;
  if (v18)
  {
    swift_bridgeObjectRetain();
    swift_beginAccess();
    for (uint64_t i = 0; ; uint64_t i = v0[85] + 1)
    {
      v0[85] = i;
      uint64_t v20 = (void *)(v0[83] + 24 * i);
      uint64_t v21 = v0[66] + 168;
      uint64_t v22 = v20[4];
      uint64_t v23 = v20[5];
      v0[86] = v23;
      unint64_t v24 = v20[6];
      v0[87] = v24;
      sub_1005057FC(&qword_10169F038);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_10117E810;
      *(void *)(v25 + 32) = v22;
      *(void *)(v25 + 40) = v23;
      *(void *)(v25 + 48) = v24;
      type metadata accessor for CRLRealTimeMessage();
      uint64_t v26 = swift_allocObject();
      v0[88] = v26;
      *(void *)(v26 + 16) = 0;
      *(void *)(v26 + 24) = v25;
      sub_100510D4C(v23, v24);
      sub_100510D4C(v23, v24);
      sub_100E3263C(v21, (uint64_t)(v0 + 35));
      if (v0[38]) {
        break;
      }
      sub_100E326A4((uint64_t)(v0 + 35));
      unint64_t v27 = v0[87];
      uint64_t v28 = v0[86];
      uint64_t v29 = v0[85];
      uint64_t v30 = v0[84];
      swift_release();
      sub_100510084(v28, v27);
      if (v29 + 1 == v30)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    sub_1005498A4((uint64_t)(v0 + 35), (uint64_t)(v0 + 25));
    sub_100E326A4((uint64_t)(v0 + 35));
    uint64_t v39 = v0[28];
    uint64_t v40 = v0[29];
    sub_10050F848(v0 + 25, v39);
    uint64_t v52 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 + 8) + **(int **)(v40 + 8));
    uint64_t v41 = (void *)swift_task_alloc();
    v0[89] = v41;
    *uint64_t v41 = v0;
    v41[1] = sub_100E313AC;
    uint64_t v34 = v26;
    uint64_t v35 = v39;
    uint64_t v36 = v40;
    uint64_t v37 = v52;
    return v37(v34, v35, v36);
  }
LABEL_16:
  uint64_t v42 = v0[66];
  *(unsigned char *)(v42 + 209) = 0;
  if (*(unsigned char *)(v42 + 208) == 1)
  {
    uint64_t v43 = v0[67];
    uint64_t v44 = v0[66];
    *(unsigned char *)(v42 + 208) = 0;
    uint64_t v45 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v43, 1, 1, v45);
    unint64_t v46 = sub_100C2F35C();
    id v47 = (void *)swift_allocObject();
    v47[2] = v44;
    v47[3] = v46;
    v47[4] = v44;
    swift_retain_n();
    sub_1005912D0(v43, (uint64_t)&unk_101692C88, (uint64_t)v47);
    swift_release();
  }
  swift_release();
  CRLAnalyticsOSSignpostManager.endSignpostInterval(for:)(0x15uLL, 1);
  id v48 = (id)static OS_os_log.realTimeSync;
  uint64_t v49 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v48, (uint64_t)&_mh_execute_header, v49, (uint64_t)"Finished transferring realtime changes", 38, 2, (uint64_t)_swiftEmptyArrayStorage);
  swift_unknownObjectRelease();

  swift_task_dealloc();
  id v50 = (uint64_t (*)(void))v0[1];
  return v50();
}

uint64_t sub_100E307E0()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 20));
  unint64_t v1 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v3 = v1;
  uint64_t v4 = Error.localizedDescription.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  uint64_t v7 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Cannot transfer changes over UDP with error %@", 46, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  unint64_t v8 = v0[79];
  uint64_t v9 = v0[78];
  uint64_t v10 = v0[77];
  uint64_t v11 = v0[76];
  swift_release();
  sub_100510084(v9, v8);
  if (v10 + 1 != v11)
  {
    while (1)
    {
      uint64_t v12 = v0[77] + 1;
      v0[77] = v12;
      unint64_t v13 = (void *)(v0[75] + 24 * v12);
      uint64_t v14 = v0[66] + 168;
      uint64_t v15 = v13[4];
      uint64_t v16 = v13[5];
      v0[78] = v16;
      unint64_t v17 = v13[6];
      v0[79] = v17;
      sub_1005057FC(&qword_10169F038);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_10117E810;
      *(void *)(v18 + 32) = v15;
      *(void *)(v18 + 40) = v16;
      *(void *)(v18 + 48) = v17;
      type metadata accessor for CRLRealTimeMessage();
      uint64_t v19 = swift_allocObject();
      v0[80] = v19;
      *(void *)(v19 + 16) = 0;
      *(void *)(v19 + 24) = v18;
      sub_100510D4C(v16, v17);
      sub_100510D4C(v16, v17);
      sub_100E3263C(v14, (uint64_t)(v0 + 30));
      if (v0[33]) {
        break;
      }
      sub_100E326A4((uint64_t)(v0 + 30));
      unint64_t v20 = v0[79];
      uint64_t v21 = v0[78];
      uint64_t v22 = v0[77];
      uint64_t v23 = v0[76];
      swift_release();
      sub_100510084(v21, v20);
      if (v22 + 1 == v23) {
        goto LABEL_4;
      }
    }
    sub_1005498A4((uint64_t)(v0 + 30), (uint64_t)(v0 + 20));
    sub_100E326A4((uint64_t)(v0 + 30));
    uint64_t v38 = v0[23];
    uint64_t v39 = v0[24];
    sub_10050F848(v0 + 20, v38);
    uint64_t v58 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 + 16) + **(int **)(v39 + 16));
    uint64_t v40 = (void *)swift_task_alloc();
    v0[81] = v40;
    *uint64_t v40 = v0;
    v40[1] = sub_100E30090;
    uint64_t v41 = v19;
    uint64_t v42 = v38;
    uint64_t v43 = v39;
    uint64_t v44 = v58;
    return v44(v41, v42, v43);
  }
LABEL_4:
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(v0[70] + 40);
  v0[83] = v24;
  uint64_t v25 = *(void *)(v24 + 16);
  v0[84] = v25;
  if (v25)
  {
    swift_bridgeObjectRetain();
    swift_beginAccess();
    for (uint64_t i = 0; ; uint64_t i = v0[85] + 1)
    {
      v0[85] = i;
      unint64_t v27 = (void *)(v0[83] + 24 * i);
      uint64_t v28 = v0[66] + 168;
      uint64_t v29 = v27[4];
      uint64_t v30 = v27[5];
      v0[86] = v30;
      unint64_t v31 = v27[6];
      v0[87] = v31;
      sub_1005057FC(&qword_10169F038);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_10117E810;
      *(void *)(v32 + 32) = v29;
      *(void *)(v32 + 40) = v30;
      *(void *)(v32 + 48) = v31;
      type metadata accessor for CRLRealTimeMessage();
      uint64_t v33 = swift_allocObject();
      v0[88] = v33;
      *(void *)(v33 + 16) = 0;
      *(void *)(v33 + 24) = v32;
      sub_100510D4C(v30, v31);
      sub_100510D4C(v30, v31);
      sub_100E3263C(v28, (uint64_t)(v0 + 35));
      if (v0[38]) {
        break;
      }
      sub_100E326A4((uint64_t)(v0 + 35));
      unint64_t v34 = v0[87];
      uint64_t v35 = v0[86];
      uint64_t v36 = v0[85];
      uint64_t v37 = v0[84];
      swift_release();
      sub_100510084(v35, v34);
      if (v36 + 1 == v37)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    sub_1005498A4((uint64_t)(v0 + 35), (uint64_t)(v0 + 25));
    sub_100E326A4((uint64_t)(v0 + 35));
    uint64_t v46 = v0[28];
    uint64_t v47 = v0[29];
    sub_10050F848(v0 + 25, v46);
    uint64_t v59 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 + 8) + **(int **)(v47 + 8));
    id v48 = (void *)swift_task_alloc();
    v0[89] = v48;
    void *v48 = v0;
    v48[1] = sub_100E313AC;
    uint64_t v41 = v33;
    uint64_t v42 = v46;
    uint64_t v43 = v47;
    uint64_t v44 = v59;
    return v44(v41, v42, v43);
  }
LABEL_16:
  uint64_t v49 = v0[66];
  *(unsigned char *)(v49 + 209) = 0;
  if (*(unsigned char *)(v49 + 208) == 1)
  {
    uint64_t v50 = v0[67];
    uint64_t v51 = v0[66];
    *(unsigned char *)(v49 + 208) = 0;
    uint64_t v52 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v50, 1, 1, v52);
    unint64_t v53 = sub_100C2F35C();
    uint64_t v54 = (void *)swift_allocObject();
    v54[2] = v51;
    v54[3] = v53;
    v54[4] = v51;
    swift_retain_n();
    sub_1005912D0(v50, (uint64_t)&unk_101692C88, (uint64_t)v54);
    swift_release();
  }
  swift_release();
  CRLAnalyticsOSSignpostManager.endSignpostInterval(for:)(0x15uLL, 1);
  id v55 = (id)static OS_os_log.realTimeSync;
  uint64_t v56 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v55, (uint64_t)&_mh_execute_header, v56, (uint64_t)"Finished transferring realtime changes", 38, 2, (uint64_t)_swiftEmptyArrayStorage);
  swift_unknownObjectRelease();

  swift_task_dealloc();
  uint64_t v57 = (uint64_t (*)(void))v0[1];
  return v57();
}

uint64_t sub_100E30EE0()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 25));
  unint64_t v1 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v3 = v1;
  uint64_t v4 = Error.localizedDescription.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  uint64_t v7 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Cannot transfer changes over UDP with error %@", 46, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  unint64_t v8 = v0[87];
  uint64_t v9 = v0[86];
  uint64_t v10 = v0[85];
  uint64_t v11 = v0[84];
  swift_release();
  sub_100510084(v9, v8);
  if (v10 + 1 == v11)
  {
LABEL_4:
    swift_bridgeObjectRelease();
    uint64_t v24 = v0[66];
    *(unsigned char *)(v24 + 209) = 0;
    if (*(unsigned char *)(v24 + 208))
    {
      uint64_t v25 = v0[67];
      uint64_t v26 = v0[66];
      *(unsigned char *)(v24 + 208) = 0;
      uint64_t v27 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v25, 1, 1, v27);
      unint64_t v28 = sub_100C2F35C();
      uint64_t v29 = (void *)swift_allocObject();
      v29[2] = v26;
      v29[3] = v28;
      v29[4] = v26;
      swift_retain_n();
      sub_1005912D0(v25, (uint64_t)&unk_101692C88, (uint64_t)v29);
      swift_release();
    }
    swift_release();
    CRLAnalyticsOSSignpostManager.endSignpostInterval(for:)(0x15uLL, 1);
    id v30 = (id)static OS_os_log.realTimeSync;
    uint64_t v31 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v30, (uint64_t)&_mh_execute_header, v31, (uint64_t)"Finished transferring realtime changes", 38, 2, (uint64_t)_swiftEmptyArrayStorage);
    swift_unknownObjectRelease();

    swift_task_dealloc();
    uint64_t v32 = (uint64_t (*)(void))v0[1];
    return v32();
  }
  else
  {
    while (1)
    {
      uint64_t v12 = v0[85] + 1;
      v0[85] = v12;
      unint64_t v13 = (void *)(v0[83] + 24 * v12);
      uint64_t v14 = v0[66] + 168;
      uint64_t v15 = v13[4];
      uint64_t v16 = v13[5];
      v0[86] = v16;
      unint64_t v17 = v13[6];
      v0[87] = v17;
      sub_1005057FC(&qword_10169F038);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_10117E810;
      *(void *)(v18 + 32) = v15;
      *(void *)(v18 + 40) = v16;
      *(void *)(v18 + 48) = v17;
      type metadata accessor for CRLRealTimeMessage();
      uint64_t v19 = swift_allocObject();
      v0[88] = v19;
      *(void *)(v19 + 16) = 0;
      *(void *)(v19 + 24) = v18;
      sub_100510D4C(v16, v17);
      sub_100510D4C(v16, v17);
      sub_100E3263C(v14, (uint64_t)(v0 + 35));
      if (v0[38]) {
        break;
      }
      sub_100E326A4((uint64_t)(v0 + 35));
      unint64_t v20 = v0[87];
      uint64_t v21 = v0[86];
      uint64_t v22 = v0[85];
      uint64_t v23 = v0[84];
      swift_release();
      sub_100510084(v21, v20);
      if (v22 + 1 == v23) {
        goto LABEL_4;
      }
    }
    sub_1005498A4((uint64_t)(v0 + 35), (uint64_t)(v0 + 25));
    sub_100E326A4((uint64_t)(v0 + 35));
    uint64_t v34 = v0[28];
    uint64_t v35 = v0[29];
    sub_10050F848(v0 + 25, v34);
    uint64_t v37 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 + 8) + **(int **)(v35 + 8));
    uint64_t v36 = (void *)swift_task_alloc();
    v0[89] = v36;
    *uint64_t v36 = v0;
    v36[1] = sub_100E313AC;
    return v37(v19, v34, v35);
  }
}

uint64_t sub_100E313AC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 720) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 528);
  if (v0) {
    uint64_t v4 = sub_100E30EE0;
  }
  else {
    uint64_t v4 = sub_100E314D8;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100E314D8()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 25));
  unint64_t v1 = v0[87];
  uint64_t v2 = v0[86];
  uint64_t v3 = v0[85];
  uint64_t v4 = v0[84];
  swift_release();
  sub_100510084(v2, v1);
  if (v3 + 1 == v4)
  {
LABEL_4:
    swift_bridgeObjectRelease();
    uint64_t v17 = v0[66];
    *(unsigned char *)(v17 + 209) = 0;
    if (*(unsigned char *)(v17 + 208))
    {
      uint64_t v18 = v0[67];
      uint64_t v19 = v0[66];
      *(unsigned char *)(v17 + 208) = 0;
      uint64_t v20 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v18, 1, 1, v20);
      unint64_t v21 = sub_100C2F35C();
      uint64_t v22 = (void *)swift_allocObject();
      v22[2] = v19;
      uint64_t v22[3] = v21;
      v22[4] = v19;
      swift_retain_n();
      sub_1005912D0(v18, (uint64_t)&unk_101692C88, (uint64_t)v22);
      swift_release();
    }
    swift_release();
    CRLAnalyticsOSSignpostManager.endSignpostInterval(for:)(0x15uLL, 1);
    id v23 = (id)static OS_os_log.realTimeSync;
    uint64_t v24 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v23, (uint64_t)&_mh_execute_header, v24, (uint64_t)"Finished transferring realtime changes", 38, 2, (uint64_t)_swiftEmptyArrayStorage);
    swift_unknownObjectRelease();

    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    return v25();
  }
  else
  {
    while (1)
    {
      uint64_t v5 = v0[85] + 1;
      v0[85] = v5;
      uint64_t v6 = (void *)(v0[83] + 24 * v5);
      uint64_t v7 = v0[66] + 168;
      uint64_t v8 = v6[4];
      uint64_t v9 = v6[5];
      v0[86] = v9;
      unint64_t v10 = v6[6];
      v0[87] = v10;
      sub_1005057FC(&qword_10169F038);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_10117E810;
      *(void *)(v11 + 32) = v8;
      *(void *)(v11 + 40) = v9;
      *(void *)(v11 + 48) = v10;
      type metadata accessor for CRLRealTimeMessage();
      uint64_t v12 = swift_allocObject();
      v0[88] = v12;
      *(void *)(v12 + 16) = 0;
      *(void *)(v12 + 24) = v11;
      sub_100510D4C(v9, v10);
      sub_100510D4C(v9, v10);
      sub_100E3263C(v7, (uint64_t)(v0 + 35));
      if (v0[38]) {
        break;
      }
      sub_100E326A4((uint64_t)(v0 + 35));
      unint64_t v13 = v0[87];
      uint64_t v14 = v0[86];
      uint64_t v15 = v0[85];
      uint64_t v16 = v0[84];
      swift_release();
      sub_100510084(v14, v13);
      if (v15 + 1 == v16) {
        goto LABEL_4;
      }
    }
    sub_1005498A4((uint64_t)(v0 + 35), (uint64_t)(v0 + 25));
    sub_100E326A4((uint64_t)(v0 + 35));
    uint64_t v27 = v0[28];
    uint64_t v28 = v0[29];
    sub_10050F848(v0 + 25, v27);
    id v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 + 8) + **(int **)(v28 + 8));
    uint64_t v29 = (void *)swift_task_alloc();
    v0[89] = v29;
    *uint64_t v29 = v0;
    v29[1] = sub_100E313AC;
    return v30(v12, v27, v28);
  }
}

uint64_t sub_100E318BC(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 400) = a2;
  *(void *)(v3 + 352) = a1;
  *(void *)(v3 + 360) = v2;
  return _swift_task_switch(sub_100E318E0, v2, 0);
}

uint64_t sub_100E318E0()
{
  uint64_t v1 = *(void *)(v0 + 360) + 128;
  if (*(unsigned char *)(v0 + 400) == 1)
  {
    uint64_t v2 = v0 + 168;
    swift_beginAccess();
    sub_100E3263C(v1, v0 + 168);
    if (*(void *)(v0 + 192))
    {
      sub_1005498A4(v0 + 168, v0 + 88);
      sub_100E326A4(v0 + 168);
      uint64_t v3 = *(void *)(v0 + 112);
      uint64_t v4 = *(void *)(v0 + 120);
      sub_10050F848((void *)(v0 + 88), v3);
      uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 16) + **(int **)(v4 + 16));
      uint64_t v5 = (void *)swift_task_alloc();
      *(void *)(v0 + 368) = v5;
      *uint64_t v5 = v0;
      v5[1] = sub_100E31BAC;
      uint64_t v6 = *(void *)(v0 + 352);
      uint64_t v7 = v3;
      uint64_t v8 = v4;
      uint64_t v9 = v15;
      return v9(v6, v7, v8);
    }
  }
  else
  {
    uint64_t v2 = v0 + 208;
    swift_beginAccess();
    sub_100E3263C(v1, v0 + 208);
    if (*(void *)(v0 + 232))
    {
      sub_1005498A4(v0 + 208, v0 + 128);
      sub_100E326A4(v0 + 208);
      uint64_t v11 = *(void *)(v0 + 152);
      uint64_t v12 = *(void *)(v0 + 160);
      sub_10050F848((void *)(v0 + 128), v11);
      uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 + 8) + **(int **)(v12 + 8));
      unint64_t v13 = (void *)swift_task_alloc();
      *(void *)(v0 + 384) = v13;
      *unint64_t v13 = v0;
      v13[1] = sub_100E31D38;
      uint64_t v6 = *(void *)(v0 + 352);
      uint64_t v7 = v11;
      uint64_t v8 = v12;
      uint64_t v9 = v16;
      return v9(v6, v7, v8);
    }
  }
  sub_100E326A4(v2);
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_100E31BAC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 376) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 360);
  if (v0) {
    uint64_t v4 = sub_100E31EC4;
  }
  else {
    uint64_t v4 = sub_100E31CD8;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100E31CD8()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 88);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100E31D38()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 392) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 360);
  if (v0) {
    uint64_t v4 = sub_100E32070;
  }
  else {
    uint64_t v4 = sub_100E31E64;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100E31E64()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 128);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100E31EC4()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 88);
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v3 = v1;
  uint64_t v4 = Error.localizedDescription.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  uint64_t v7 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Cannot transfer changes with error %@", 37, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100E32070()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 128);
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v3 = v1;
  uint64_t v4 = Error.localizedDescription.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  uint64_t v7 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Cannot transfer changes with error %@", 37, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100E3221C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100528D08;
  return sub_100E2E334();
}

uint64_t sub_100E322AC(uint64_t a1, uint64_t a2)
{
  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  return _swift_task_switch(sub_100E322D0, v2, 0);
}

uint64_t sub_100E322D0()
{
  uint64_t v1 = *(void *)(v0[19] + 16);
  if (v1)
  {
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v2 = (void *)static OS_os_log.realTimeSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    *(void *)(inited + 56) = &type metadata for UInt64;
    *(void *)(inited + 64) = &protocol witness table for UInt64;
    *(void *)(inited + 32) = v1;
    *(void *)(inited + 96) = &type metadata for UInt64;
    *(void *)(inited + 104) = &protocol witness table for UInt64;
    *(void *)(inited + 72) = 0;
    id v4 = v2;
    uint64_t v5 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v5, (uint64_t)"Received a message with version (%d) that is greater than the last supported version (%d) by this device. Dropping the message", 126, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    goto LABEL_5;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[22] = Strong;
  if (!Strong)
  {
LABEL_5:
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  uint64_t v9 = (void *)swift_task_alloc();
  v0[23] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_100E324C0;
  uint64_t v11 = v0[19];
  uint64_t v10 = v0[20];
  return sub_100E79978(v11, v10);
}

uint64_t sub_100E324C0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100E325D0()
{
  sub_100523398(v0 + 112);
  sub_100E326A4(v0 + 128);
  sub_100E326A4(v0 + 168);
  swift_defaultActor_destroy();

  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for CRLGroupSessionSyncController()
{
  return self;
}

uint64_t sub_100E3263C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10169F030);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100E326A4(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10169F030);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100E3270C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100528D08;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100528D08;
  return sub_100E2E334();
}

uint64_t sub_100E327E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10169F030);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100E32848()
{
  type metadata accessor for AppDependencyManager();
  uint64_t v0 = static AppDependencyManager.shared.getter();
  type metadata accessor for CRLAppIntentsManager();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v0;
  qword_10171C9C0 = result;
  return result;
}

uint64_t type metadata accessor for CRLAppIntentsManager()
{
  return self;
}

uint64_t sub_100E328B8(uint64_t a1, uint64_t a2)
{
  v2[18] = a1;
  v2[19] = a2;
  v2[20] = type metadata accessor for MainActor();
  v2[21] = static MainActor.shared.getter();
  v2[22] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[23] = v4;
  v2[24] = v3;
  return _swift_task_switch(sub_100E32960, v4, v3);
}

uint64_t sub_100E32960(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(v3 + 152) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_entityStore);
  *(void *)(v3 + 200) = v4;
  if (v4)
  {
    swift_retain();
    a1 = sub_100E329E8;
    a2 = v4;
    a3 = 0;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(a1, a2, a3);
}

uint64_t sub_100E329E8()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[18];
  swift_retain();
  v0[26] = sub_100EB2328(v2, v1);
  v0[27] = 0;
  swift_release();
  swift_release();
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[24];
  return _swift_task_switch(sub_100E32A98, v3, v4);
}

uint64_t sub_100E32A98()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100E32B1C, v1, v0);
}

uint64_t sub_100E32B1C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 208);
  return v1(v2);
}

uint64_t sub_100E32B84()
{
  swift_release();
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100E32C1C, v1, v0);
}

uint64_t sub_100E32C1C()
{
  swift_release();
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.appIntents;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[16];
  id v5 = v1;
  uint64_t v6 = Error.publicDescription.getter(v3, v4);
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  uint64_t v9 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Error fetching entities for requested identifiers: %@", 53, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_willThrow();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100E32DC8(uint64_t a1, uint64_t a2)
{
  v2[8] = a1;
  v2[9] = a2;
  type metadata accessor for MainActor();
  v2[10] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100E32E60, v4, v3);
}

uint64_t sub_100E32E60()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_release();
  sub_1005498A4(v1, v0 + 16);
  sub_1005057FC(&qword_10169F100);
  if (swift_dynamicCast())
  {
    uint64_t v2 = (char *)*(id *)(v0 + 56);
    sub_100EDCA20(v2);
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"headlessControllerWillClose(_:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/AppIntents/CRLAppIntentsManager.swift", 91, 2, 234, (uint64_t)"This dependency should interact only with a CRLBoardLibraryHeadlessControllerDependency implementation", 102, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"headlessControllerWillClose(_:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/AppIntents/CRLAppIntentsManager.swift", 91, 2, 234);
  }
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

ValueMetadata *type metadata accessor for CRLBoardLibraryHeadlessControllerDependency()
{
  return &type metadata for CRLBoardLibraryHeadlessControllerDependency;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryProvidingDependency()
{
  return &type metadata for CRLBoardLibraryProvidingDependency;
}

uint64_t sub_100E32FFC(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = type metadata accessor for MainActor();
  v2[8] = static MainActor.shared.getter();
  v2[9] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[10] = v4;
  v2[11] = v3;
  return _swift_task_switch(sub_100E330A4, v4, v3);
}

uint64_t sub_100E330A4(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(v3 + 48) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_entityStore);
  *(void *)(v3 + 96) = v4;
  if (v4)
  {
    swift_retain();
    a1 = sub_100E3312C;
    a2 = v4;
    a3 = 0;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(a1, a2, a3);
}

uint64_t sub_100E3312C()
{
  uint64_t v1 = v0[12];
  swift_beginAccess();
  v0[13] = *(void *)(v1 + 120);
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[11];
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_100E331C0, v2, v3);
}

uint64_t sub_100E331C0()
{
  swift_release();
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100E33258, v1, v0);
}

uint64_t sub_100E33258()
{
  uint64_t v17 = v0;
  swift_release();
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_1006BA338(v1);
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t)v2;
  sub_100E35AE0((unint64_t *)&v16);
  uint64_t v3 = *(void *)(v0 + 40);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_100E391A4(v3, v16);
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  unint64_t v10 = v9;
  if ((v9 & 1) == 0) {
    goto LABEL_2;
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain_n();
  uint64_t v12 = (double *)swift_dynamicCastClass();
  if (!v12)
  {
    swift_unknownObjectRelease();
    uint64_t v12 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = *((void *)v12 + 2);
  swift_release();
  if (__OFSUB__(v10 >> 1, v8))
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v13 != (v10 >> 1) - v8)
  {
LABEL_13:
    swift_unknownObjectRelease();
LABEL_2:
    uint64_t v11 = sub_1006BA318(v4, v6, v8, v10);
    goto LABEL_9;
  }
  uint64_t v11 = (double *)swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    uint64_t v11 = _swiftEmptyArrayStorage;
  }
LABEL_9:
  swift_unknownObjectRelease();
  uint64_t v14 = *(uint64_t (**)(double *))(v0 + 8);
  return v14(v11);
}

uint64_t sub_100E33408(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  uint64_t v4 = type metadata accessor for Logger();
  v3[11] = v4;
  v3[12] = *(void *)(v4 - 8);
  v3[13] = swift_task_alloc();
  return _swift_task_switch(sub_100E334CC, 0, 0);
}

uint64_t sub_100E334CC()
{
  *(void *)(v0 + 112) = *sub_10050F848(*(void **)(v0 + 72), *(void *)(*(void *)(v0 + 72) + 24));
  *(void *)(v0 + 120) = type metadata accessor for MainActor();
  *(void *)(v0 + 128) = static MainActor.shared.getter();
  *(void *)(v0 + 136) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v0 + 144) = v2;
  *(void *)(v0 + 152) = v1;
  return _swift_task_switch(sub_100E33584, v2, v1);
}

uint64_t sub_100E33584()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = static MainActor.shared.getter();
  v0[20] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[21] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[22] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100E33688;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, v2, &protocol witness table for MainActor, 0xD00000000000001BLL, 0x8000000101240A20, sub_100E3784C, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100E33688()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 152);
  uint64_t v3 = *(void *)(v1 + 144);
  return _swift_task_switch(sub_100E337E8, v3, v2);
}

uint64_t sub_100E337E8()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100E3386C, v1, v0);
}

uint64_t sub_100E3386C()
{
  swift_release();
  return _swift_task_switch(sub_100E338D4, 0, 0);
}

uint64_t sub_100E338D4()
{
  uint64_t v1 = *sub_10050F848(*(void **)(v0 + 72), *(void *)(*(void *)(v0 + 72) + 24));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100E3397C;
  uint64_t v3 = *(void *)(v0 + 64);
  return sub_100E328B8(v3, v1);
}

uint64_t sub_100E3397C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 192) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_100E33AD4, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_100E33AD4()
{
  uint64_t v18 = v0;
  (*(void (**)(void, void, void))(v0[12] + 16))(v0[13], v0[10], v0[11]);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v14 = v0[12];
    uint64_t v15 = v0[11];
    uint64_t v16 = v0[13];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    type metadata accessor for CRLBoardIdentifier(0);
    swift_bridgeObjectRetain();
    uint64_t v4 = Array.description.getter();
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    v0[5] = sub_100E04348(v4, v6, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v3 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v7 = Error.publicDescription.getter(v0[3], v0[4]);
    v0[7] = sub_100E04348(v7, v8, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to fetch entities for identifiers: %s %s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v15);
  }
  else
  {
    uint64_t v10 = v0[12];
    uint64_t v9 = v0[13];
    uint64_t v11 = v0[11];
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  swift_errorRelease();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(double *))v0[1];
  return v12(_swiftEmptyArrayStorage);
}

uint64_t sub_100E33DC8(uint64_t a1)
{
  v2[23] = a1;
  v2[24] = v1;
  uint64_t v3 = type metadata accessor for Logger();
  v2[25] = v3;
  v2[26] = *(void *)(v3 - 8);
  v2[27] = swift_task_alloc();
  return _swift_task_switch(sub_100E33E88, 0, 0);
}

uint64_t sub_100E33E88()
{
  *(void *)(v0 + 224) = *sub_10050F848(*(void **)(v0 + 184), *(void *)(*(void *)(v0 + 184) + 24));
  *(void *)(v0 + 232) = type metadata accessor for MainActor();
  *(void *)(v0 + 240) = static MainActor.shared.getter();
  *(void *)(v0 + 248) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v0 + 256) = v2;
  *(void *)(v0 + 264) = v1;
  return _swift_task_switch(sub_100E33F40, v2, v1);
}

uint64_t sub_100E33F40()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = static MainActor.shared.getter();
  v0[34] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[35] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[36] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100E34044;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, v2, &protocol witness table for MainActor, 0xD00000000000001BLL, 0x8000000101240A20, sub_100E3784C, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100E34044()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 264);
  uint64_t v3 = *(void *)(v1 + 256);
  return _swift_task_switch(sub_100E341A4, v3, v2);
}

uint64_t sub_100E341A4()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100E34228, v1, v0);
}

uint64_t sub_100E34228()
{
  swift_release();
  return _swift_task_switch(sub_100E34290, 0, 0);
}

uint64_t sub_100E34290()
{
  sub_10050F848(*(void **)(v0 + 184), *(void *)(*(void *)(v0 + 184) + 24));
  *(void *)(v0 + 296) = static MainActor.shared.getter();
  uint64_t v3 = (uint64_t (*)(uint64_t))((char *)&dword_10169F120 + dword_10169F120);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100E34358;
  return v3(10);
}

uint64_t sub_100E34358(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 312) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
    unint64_t v8 = sub_100E3454C;
  }
  else
  {
    *(void *)(v4 + 320) = a1;
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v9;
    unint64_t v8 = sub_100E344D8;
  }
  return _swift_task_switch(v8, v5, v7);
}

uint64_t sub_100E344D8()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 320);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100E3454C()
{
  swift_release();
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.appIntents;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 128);
  id v5 = v1;
  uint64_t v6 = Error.publicDescription.getter(v3, v4);
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  uint64_t v9 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Error fetching suggested entities: %@", 37, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_willThrow();
  return _swift_task_switch(sub_100E346FC, 0, 0);
}

uint64_t sub_100E346FC()
{
  uint64_t v15 = v0;
  (*(void (**)(void, void, void))(v0[26] + 16))(v0[27], v0[24], v0[25]);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v11 = v0[26];
    uint64_t v12 = v0[25];
    uint64_t v13 = v0[27];
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_getErrorValue();
    uint64_t v4 = Error.publicDescription.getter(v0[18], v0[19]);
    v0[22] = sub_100E04348(v4, v5, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to fetch suggested entities %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v12);
  }
  else
  {
    uint64_t v7 = v0[26];
    uint64_t v6 = v0[27];
    uint64_t v8 = v0[25];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  }
  swift_errorRelease();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(double *))v0[1];
  return v9(_swiftEmptyArrayStorage);
}

uint64_t sub_100E34950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  uint64_t v5 = type metadata accessor for Logger();
  v4[11] = v5;
  v4[12] = *(void *)(v5 - 8);
  v4[13] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_101676310);
  v4[14] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v4[15] = v6;
  v4[16] = *(void *)(v6 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v4[19] = swift_task_alloc();
  return _swift_task_switch(sub_100E34ADC, 0, 0);
}

uint64_t sub_100E34ADC()
{
  *(void *)(v0 + 160) = *sub_10050F848(*(void **)(v0 + 72), *(void *)(*(void *)(v0 + 72) + 24));
  *(void *)(v0 + 168) = type metadata accessor for MainActor();
  *(void *)(v0 + 176) = static MainActor.shared.getter();
  *(void *)(v0 + 184) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v0 + 192) = v2;
  *(void *)(v0 + 200) = v1;
  return _swift_task_switch(sub_100E34B94, v2, v1);
}

uint64_t sub_100E34B94()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = static MainActor.shared.getter();
  v0[26] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[27] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[28] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100E34C98;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, v2, &protocol witness table for MainActor, 0xD00000000000001BLL, 0x8000000101240A20, sub_10062DB70, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100E34C98()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 200);
  uint64_t v3 = *(void *)(v1 + 192);
  return _swift_task_switch(sub_100E34DF8, v3, v2);
}

uint64_t sub_100E34DF8()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100E34E7C, v1, v0);
}

uint64_t sub_100E34E7C()
{
  swift_release();
  return _swift_task_switch(sub_100E34EE4, 0, 0);
}

uint64_t sub_100E34EE4()
{
  *(void *)(v0 + 232) = sub_10050F848(*(void **)(v0 + 72), *(void *)(*(void *)(v0 + 72) + 24));
  *(void *)(v0 + 240) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100E34F80, v2, v1);
}

uint64_t sub_100E34F80()
{
  uint64_t v1 = (void *)v0[29];
  uint64_t v2 = v0[19];
  swift_release();
  unint64_t v3 = *(void *)(*v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
  uint64_t v4 = sub_1005057FC(&qword_101670F30);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 5, v4);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v2;
  swift_bridgeObjectRetain();
  v0[31] = sub_1008E81F4(1, (uint64_t (*)(id))sub_10062DB78, v5, v3);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_100E37348(v2, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  return _swift_task_switch(sub_100E350B4, 0, 0);
}

uint64_t sub_100E350B4()
{
  uint64_t v1 = *(void **)(v0 + 248);
  if (v1)
  {
    id v2 = [v1 children];
    type metadata accessor for CRLBoardLibraryViewModelItemNode();
    unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v4 = result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v4)
      {
LABEL_4:
        if (v4 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v6 = 0;
        uint64_t v21 = *(void *)(v0 + 128);
        unint64_t v22 = v3 & 0xC000000000000001;
        uint64_t v7 = _swiftEmptyArrayStorage;
        unint64_t v8 = v3;
        do
        {
          if (v22) {
            id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v9 = *(id *)(v3 + 8 * v6 + 32);
          }
          uint64_t v10 = v9;
          uint64_t v12 = *(void *)(v0 + 112);
          uint64_t v11 = *(void *)(v0 + 120);
          sub_100E372E0((uint64_t)v9 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, v12, type metadata accessor for CRLBoardLibraryViewModel.Item);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v12, 0, 1, v11);

          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v12, 1, v11) == 1)
          {
            sub_1007E6ED8(*(void *)(v0 + 112));
            unint64_t v3 = v8;
          }
          else
          {
            uint64_t v14 = *(void *)(v0 + 136);
            uint64_t v13 = *(void *)(v0 + 144);
            sub_100E373A8(*(void *)(v0 + 112), v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
            sub_100E373A8(v13, v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v7 = (double *)sub_100F6273C(0, *((void *)v7 + 2) + 1, 1, (unint64_t)v7);
            }
            unint64_t v3 = v8;
            unint64_t v16 = *((void *)v7 + 2);
            unint64_t v15 = *((void *)v7 + 3);
            if (v16 >= v15 >> 1) {
              uint64_t v7 = (double *)sub_100F6273C(v15 > 1, v16 + 1, 1, (unint64_t)v7);
            }
            uint64_t v17 = *(void *)(v0 + 136);
            *((void *)v7 + 2) = v16 + 1;
            sub_100E373A8(v17, (uint64_t)v7+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * v16, type metadata accessor for CRLBoardLibraryViewModel.Item);
          }
          ++v6;
        }
        while (v4 != v6);
        goto LABEL_20;
      }
    }
    uint64_t v7 = _swiftEmptyArrayStorage;
LABEL_20:
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  uint64_t v7 = _swiftEmptyArrayStorage;
LABEL_21:
  *(void *)(v0 + 256) = v7;
  sub_10050F848(*(void **)(v0 + 72), *(void *)(*(void *)(v0 + 72) + 24));
  *(void *)(v0 + 264) = static MainActor.shared.getter();
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v18;
  void *v18 = v0;
  v18[1] = sub_100E353EC;
  uint64_t v19 = *(void *)(v0 + 56);
  uint64_t v20 = *(void *)(v0 + 64);
  return sub_100EE23B4((uint64_t)v7, v19, v20);
}

uint64_t sub_100E353EC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 280) = a1;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100E35530, v3, v2);
}

uint64_t sub_100E35530()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100E355A0, 0, 0);
}

uint64_t sub_100E355A0()
{
  uint64_t v1 = *(void *)(v0 + 280);
  uint64_t v2 = sub_10050F848(*(void **)(v0 + 72), *(void *)(*(void *)(v0 + 72) + 24));
  uint64_t v3 = sub_100DD85D8(v1);
  *(void *)(v0 + 288) = v3;
  swift_bridgeObjectRelease();
  uint64_t v4 = *v2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100E3566C;
  return sub_100E328B8((uint64_t)v3, v4);
}

uint64_t sub_100E3566C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 304) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100E35848;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 312) = a1;
    uint64_t v5 = sub_100E3579C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100E3579C()
{
  uint64_t v1 = *(void *)(v0 + 312);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100E35848()
{
  uint64_t v19 = v0;
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v15 = *(void *)(v0 + 96);
    uint64_t v16 = *(void *)(v0 + 88);
    uint64_t v17 = *(void *)(v0 + 104);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_getErrorValue();
    uint64_t v8 = Error.publicDescription.getter(*(void *)(v0 + 24), *(void *)(v0 + 32));
    *(void *)(v0 + 48) = sub_100E04348(v8, v9, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Failed to fetch entities for the given query %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 96);
    uint64_t v10 = *(void *)(v0 + 104);
    uint64_t v12 = *(void *)(v0 + 88);
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(double *))(v0 + 8);
  return v13(_swiftEmptyArrayStorage);
}

void sub_100E35AE0(unint64_t *a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for CRLBoardEntity() - 8);
  unint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_100F6A118(v3);
  }
  uint64_t v4 = *(void *)(v3 + 16);
  v5[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_100E35B88(v5);
  *a1 = v3;
}

void sub_100E35B88(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v155 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v155 - 8);
  __chkstk_darwin(v155, v5);
  double v154 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v153 = (char *)&v138 - v9;
  uint64_t v159 = type metadata accessor for CRLBoardEntity();
  uint64_t v10 = *(void *)(v159 - 8);
  __chkstk_darwin(v159, v11);
  uint64_t v13 = (char *)&v138 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v160 = (uint64_t)&v138 - v16;
  __chkstk_darwin(v17, v18);
  uint64_t v152 = (uint64_t)&v138 - v19;
  __chkstk_darwin(v20, v21);
  uint64_t v156 = (uint64_t)&v138 - v22;
  Swift::Int v23 = a1[1];
  Swift::Int v24 = _minimumMergeRunLength(_:)(v23);
  if (v24 >= v23)
  {
    if (v23 < 0) {
      goto LABEL_141;
    }
    if (v23) {
      sub_100E36850(0, v23, 1, a1);
    }
    return;
  }
  if (v23 >= 0) {
    uint64_t v25 = v23;
  }
  else {
    uint64_t v25 = v23 + 1;
  }
  if (v23 < -1) {
    goto LABEL_149;
  }
  Swift::Int v139 = v24;
  uint64_t v147 = v10;
  if (v23 < 2)
  {
    unint64_t v146 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    if (v23 != 1)
    {
      unint64_t v30 = *(void *)&_swiftEmptyArrayStorage[2];
      uint64_t v29 = _swiftEmptyArrayStorage;
      uint64_t v31 = _swiftEmptyArrayStorage;
LABEL_104:
      uint64_t v141 = v31;
      if (v30 >= 2)
      {
        uint64_t v131 = *a1;
        do
        {
          unint64_t v132 = v30 - 2;
          if (v30 < 2) {
            goto LABEL_136;
          }
          if (!v131) {
            goto LABEL_148;
          }
          double v133 = v29[2 * v132 + 4];
          double v134 = v29[2 * v30 + 3];
          sub_100E36C1C(v131 + *(void *)(v147 + 72) * *(void *)&v133, v131 + *(void *)(v147 + 72) * *(void *)&v29[2 * v30 + 2], v131 + *(void *)(v147 + 72) * *(void *)&v134, v146);
          if (v2) {
            goto LABEL_116;
          }
          if (*(uint64_t *)&v134 < *(uint64_t *)&v133) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v29 = sub_100F69F28((uint64_t)v29);
          }
          if (v132 >= *((void *)v29 + 2)) {
            goto LABEL_138;
          }
          uint64_t v135 = &v29[2 * v132 + 4];
          *uint64_t v135 = v133;
          v135[1] = v134;
          unint64_t v136 = *((void *)v29 + 2);
          if (v30 > v136) {
            goto LABEL_139;
          }
          memmove(&v29[2 * v30 + 2], &v29[2 * v30 + 4], 16 * (v136 - v30));
          *((void *)v29 + 2) = v136 - 1;
          unint64_t v30 = v136 - 1;
        }
        while (v136 > 2);
      }
      swift_bridgeObjectRelease();
      v141[2] = 0.0;
LABEL_118:
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v144 = v13;
    uint64_t v27 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v144 = v13;
    uint64_t v26 = v25 >> 1;
    uint64_t v27 = (double *)static Array._allocateBufferUninitialized(minimumCapacity:)();
    *((void *)v27 + 2) = v26;
    unint64_t v146 = (unint64_t)v27
         + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  }
  uint64_t v141 = v27;
  Swift::Int v28 = 0;
  uint64_t v151 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v29 = _swiftEmptyArrayStorage;
  uint64_t v157 = a1;
  while (1)
  {
    uint64_t v142 = v29;
    Swift::Int v32 = v28 + 1;
    if (v28 + 1 >= v23)
    {
      uint64_t v29 = v142;
    }
    else
    {
      uint64_t v33 = *a1;
      uint64_t v34 = *(void *)(v147 + 72);
      Swift::Int v158 = v28 + 1;
      uint64_t v35 = v33;
      uint64_t v149 = v33;
      uint64_t v36 = v34;
      uint64_t v163 = v34;
      sub_100E372E0(v33 + v34 * v32, v156, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
      uint64_t v37 = v152;
      sub_100E372E0(v35 + v36 * v28, v152, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
      uint64_t v38 = v153;
      EntityProperty.wrappedValue.getter();
      uint64_t v39 = v154;
      EntityProperty.wrappedValue.getter();
      LODWORD(v161) = static Date.> infix(_:_:)();
      Swift::Int v162 = v23;
      uint64_t v40 = *v151;
      uint64_t v41 = v155;
      (*v151)(v39, v155);
      uint64_t v42 = v38;
      uint64_t v43 = v149;
      v40(v42, v41);
      Swift::Int v23 = v162;
      sub_100E37348(v37, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
      sub_100E37348(v156, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
      Swift::Int v145 = v28;
      Swift::Int v32 = v28 + 2;
      if (v28 + 2 < v23)
      {
        uint64_t v140 = v2;
        v158 *= v163;
        uint64_t v150 = v163 * v32;
        while (1)
        {
          Swift::Int v44 = v32;
          uint64_t v45 = v156;
          sub_100E372E0(v43 + v150, v156, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
          uint64_t v46 = v152;
          sub_100E372E0(v43 + v158, v152, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
          uint64_t v47 = v153;
          EntityProperty.wrappedValue.getter();
          id v48 = v154;
          EntityProperty.wrappedValue.getter();
          int v49 = static Date.> infix(_:_:)();
          uint64_t v50 = v48;
          uint64_t v51 = v155;
          v40(v50, v155);
          v40(v47, v51);
          sub_100E37348(v46, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
          sub_100E37348(v45, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
          if ((v161 ^ v49)) {
            break;
          }
          Swift::Int v32 = v44 + 1;
          v43 += v163;
          Swift::Int v23 = v162;
          if (v162 == v44 + 1)
          {
            Swift::Int v32 = v162;
            a1 = v157;
            uint64_t v2 = v140;
            goto LABEL_24;
          }
        }
        a1 = v157;
        Swift::Int v32 = v44;
        uint64_t v2 = v140;
        Swift::Int v23 = v162;
      }
LABEL_24:
      uint64_t v29 = v142;
      Swift::Int v28 = v145;
      if (v161)
      {
        if (v32 < v145) {
          goto LABEL_142;
        }
        if (v145 < v32)
        {
          uint64_t v140 = v2;
          uint64_t v52 = 0;
          uint64_t v53 = v163;
          uint64_t v54 = v163 * (v32 - 1);
          Swift::Int v55 = v32 * v163;
          Swift::Int v56 = v145;
          uint64_t v57 = v145 * v163;
          do
          {
            if (v56 != v32 + v52 - 1)
            {
              uint64_t v58 = v149;
              if (!v149) {
                goto LABEL_147;
              }
              unint64_t v59 = v149 + v57;
              uint64_t v60 = v149 + v54;
              sub_100E373A8(v149 + v57, (uint64_t)v144, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
              if (v57 < v54 || v59 >= v58 + v55)
              {
                swift_arrayInitWithTakeFrontToBack();
                uint64_t v53 = v163;
              }
              else
              {
                uint64_t v53 = v163;
                if (v57 != v54) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_100E373A8((uint64_t)v144, v60, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
            }
            ++v56;
            --v52;
            v54 -= v53;
            v55 -= v53;
            v57 += v53;
          }
          while (v56 < v32 + v52);
          uint64_t v2 = v140;
          a1 = v157;
          uint64_t v29 = v142;
          Swift::Int v28 = v145;
          Swift::Int v23 = v162;
        }
      }
    }
    if (v32 < v23)
    {
      if (__OFSUB__(v32, v28)) {
        goto LABEL_140;
      }
      if (v32 - v28 < v139) {
        break;
      }
    }
LABEL_56:
    if (v32 < v28) {
      goto LABEL_135;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v158 = v32;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v29 = sub_100F697E0(0, *((void *)v29 + 2) + 1, 1, (uint64_t)v29);
    }
    unint64_t v81 = *((void *)v29 + 2);
    unint64_t v80 = *((void *)v29 + 3);
    unint64_t v30 = v81 + 1;
    if (v81 >= v80 >> 1) {
      uint64_t v29 = sub_100F697E0((double *)(v80 > 1), v81 + 1, 1, (uint64_t)v29);
    }
    *((void *)v29 + 2) = v30;
    uint64_t v82 = v29 + 4;
    uint64_t v83 = &v29[2 * v81 + 4];
    Swift::Int v84 = v158;
    *(void *)uint64_t v83 = v28;
    *((void *)v83 + 1) = v84;
    if (v81)
    {
      while (1)
      {
        unint64_t v85 = v30 - 1;
        if (v30 >= 4)
        {
          BOOL v90 = &v82[2 * v30];
          uint64_t v91 = *((void *)v90 - 8);
          uint64_t v92 = *((void *)v90 - 7);
          BOOL v96 = __OFSUB__(v92, v91);
          uint64_t v93 = v92 - v91;
          if (v96) {
            goto LABEL_124;
          }
          uint64_t v95 = *((void *)v90 - 6);
          uint64_t v94 = *((void *)v90 - 5);
          BOOL v96 = __OFSUB__(v94, v95);
          uint64_t v88 = v94 - v95;
          char v89 = v96;
          if (v96) {
            goto LABEL_125;
          }
          unint64_t v97 = v30 - 2;
          uint64_t v98 = &v82[2 * v30 - 4];
          uint64_t v100 = *(void *)v98;
          uint64_t v99 = *((void *)v98 + 1);
          BOOL v96 = __OFSUB__(v99, v100);
          uint64_t v101 = v99 - v100;
          if (v96) {
            goto LABEL_127;
          }
          BOOL v96 = __OFADD__(v88, v101);
          uint64_t v102 = v88 + v101;
          if (v96) {
            goto LABEL_130;
          }
          if (v102 >= v93)
          {
            BOOL v120 = &v82[2 * v85];
            uint64_t v122 = *(void *)v120;
            uint64_t v121 = *((void *)v120 + 1);
            BOOL v96 = __OFSUB__(v121, v122);
            uint64_t v123 = v121 - v122;
            if (v96) {
              goto LABEL_134;
            }
            BOOL v113 = v88 < v123;
            goto LABEL_93;
          }
        }
        else
        {
          if (v30 != 3)
          {
            uint64_t v114 = *((void *)v29 + 4);
            uint64_t v115 = *((void *)v29 + 5);
            BOOL v96 = __OFSUB__(v115, v114);
            uint64_t v107 = v115 - v114;
            char v108 = v96;
            goto LABEL_87;
          }
          uint64_t v87 = *((void *)v29 + 4);
          uint64_t v86 = *((void *)v29 + 5);
          BOOL v96 = __OFSUB__(v86, v87);
          uint64_t v88 = v86 - v87;
          char v89 = v96;
        }
        if (v89) {
          goto LABEL_126;
        }
        unint64_t v97 = v30 - 2;
        uint64_t v103 = &v82[2 * v30 - 4];
        uint64_t v105 = *(void *)v103;
        uint64_t v104 = *((void *)v103 + 1);
        BOOL v106 = __OFSUB__(v104, v105);
        uint64_t v107 = v104 - v105;
        char v108 = v106;
        if (v106) {
          goto LABEL_129;
        }
        uint64_t v109 = &v82[2 * v85];
        uint64_t v111 = *(void *)v109;
        uint64_t v110 = *((void *)v109 + 1);
        BOOL v96 = __OFSUB__(v110, v111);
        uint64_t v112 = v110 - v111;
        if (v96) {
          goto LABEL_132;
        }
        if (__OFADD__(v107, v112)) {
          goto LABEL_133;
        }
        if (v107 + v112 >= v88)
        {
          BOOL v113 = v88 < v112;
LABEL_93:
          if (v113) {
            unint64_t v85 = v97;
          }
          goto LABEL_95;
        }
LABEL_87:
        if (v108) {
          goto LABEL_128;
        }
        uint64_t v116 = &v82[2 * v85];
        uint64_t v118 = *(void *)v116;
        uint64_t v117 = *((void *)v116 + 1);
        BOOL v96 = __OFSUB__(v117, v118);
        uint64_t v119 = v117 - v118;
        if (v96) {
          goto LABEL_131;
        }
        if (v119 < v107) {
          goto LABEL_15;
        }
LABEL_95:
        unint64_t v124 = v85 - 1;
        if (v85 - 1 >= v30)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        uint64_t v125 = *a1;
        if (!*a1) {
          goto LABEL_146;
        }
        float v126 = &v82[2 * v124];
        uint64_t v127 = *(void *)v126;
        uint64_t v128 = &v82[2 * v85];
        double v129 = v128[1];
        sub_100E36C1C(v125 + *(void *)(v147 + 72) * *(void *)v126, v125 + *(void *)(v147 + 72) * *(void *)v128, v125 + *(void *)(v147 + 72) * *(void *)&v129, v146);
        if (v2)
        {
LABEL_116:
          uint64_t v137 = v141;
          swift_bridgeObjectRelease();
          v137[2] = 0.0;
          goto LABEL_118;
        }
        if (*(uint64_t *)&v129 < v127) {
          goto LABEL_121;
        }
        if (v85 > *((void *)v29 + 2)) {
          goto LABEL_122;
        }
        *(void *)float v126 = v127;
        v82[2 * v124 + 1] = v129;
        unint64_t v130 = *((void *)v29 + 2);
        if (v85 >= v130) {
          goto LABEL_123;
        }
        unint64_t v30 = v130 - 1;
        memmove(&v82[2 * v85], v128 + 2, 16 * (v130 - 1 - v85));
        *((void *)v29 + 2) = v130 - 1;
        a1 = v157;
        if (v130 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v30 = 1;
LABEL_15:
    Swift::Int v23 = a1[1];
    Swift::Int v28 = v158;
    uint64_t v31 = v141;
    if (v158 >= v23) {
      goto LABEL_104;
    }
  }
  if (__OFADD__(v28, v139)) {
    goto LABEL_143;
  }
  if (v28 + v139 >= v23) {
    Swift::Int v61 = v23;
  }
  else {
    Swift::Int v61 = v28 + v139;
  }
  if (v61 >= v28)
  {
    if (v32 != v61)
    {
      Swift::Int v145 = v28;
      uint64_t v140 = v2;
      uint64_t v62 = *(void *)(v147 + 72);
      uint64_t v63 = v62 * (v32 - 1);
      uint64_t v148 = v62;
      Swift::Int v64 = v32 * v62;
      Swift::Int v143 = v61;
      do
      {
        uint64_t v66 = 0;
        Swift::Int v67 = v145;
        Swift::Int v158 = v32;
        uint64_t v149 = v64;
        uint64_t v150 = v63;
        while (1)
        {
          Swift::Int v162 = v67;
          uint64_t v68 = *a1;
          Swift::Int v161 = v64 + v66;
          uint64_t v69 = v156;
          sub_100E372E0(v64 + v66 + v68, v156, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
          uint64_t v70 = v63 + v66 + v68;
          uint64_t v71 = v152;
          sub_100E372E0(v70, v152, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
          uint64_t v72 = v153;
          EntityProperty.wrappedValue.getter();
          uint64_t v73 = v154;
          EntityProperty.wrappedValue.getter();
          LODWORD(v163) = static Date.> infix(_:_:)();
          uint64_t v74 = *v151;
          uint64_t v75 = v73;
          uint64_t v76 = v155;
          (*v151)(v75, v155);
          v74(v72, v76);
          sub_100E37348(v71, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
          sub_100E37348(v69, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
          if ((v163 & 1) == 0) {
            break;
          }
          uint64_t v77 = *a1;
          if (!*a1) {
            goto LABEL_145;
          }
          Swift::Int v64 = v149;
          uint64_t v63 = v150;
          uint64_t v78 = v77 + v150 + v66;
          sub_100E373A8(v77 + v149 + v66, v160, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
          swift_arrayInitWithTakeFrontToBack();
          sub_100E373A8(v160, v78, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
          v66 -= v148;
          Swift::Int v67 = v162 + 1;
          a1 = v157;
          Swift::Int v65 = v158;
          if (v158 == v162 + 1) {
            goto LABEL_49;
          }
        }
        Swift::Int v65 = v158;
        Swift::Int v64 = v149;
        uint64_t v63 = v150;
LABEL_49:
        Swift::Int v32 = v65 + 1;
        v63 += v148;
        v64 += v148;
      }
      while (v32 != v143);
      Swift::Int v32 = v143;
      uint64_t v2 = v140;
      uint64_t v29 = v142;
      Swift::Int v28 = v145;
    }
    goto LABEL_56;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100E36850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v42 = a1;
  uint64_t v48 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v48 - 8);
  __chkstk_darwin(v48, v8);
  uint64_t v47 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v46 = (char *)&v40 - v12;
  uint64_t v53 = type metadata accessor for CRLBoardEntity();
  __chkstk_darwin(v53, v13);
  uint64_t v54 = (uint64_t)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v45 = (uint64_t)&v40 - v17;
  __chkstk_darwin(v18, v19);
  Swift::Int v44 = (char *)&v40 - v21;
  uint64_t v52 = a3;
  uint64_t v41 = a2;
  if (a3 != a2)
  {
    uint64_t v22 = *(void *)(v20 + 72);
    uint64_t v43 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v23 = v22 * (v52 - 1);
    uint64_t v49 = v22;
    uint64_t v24 = v22 * v52;
    uint64_t v57 = a4;
    uint64_t v25 = (uint64_t)v44;
    uint64_t v26 = v46;
LABEL_5:
    uint64_t v27 = 0;
    uint64_t v28 = v42;
    uint64_t v50 = v24;
    uint64_t v51 = v23;
    while (1)
    {
      uint64_t v29 = *v57;
      uint64_t v55 = v24 + v27;
      sub_100E372E0(v24 + v27 + v29, v25, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
      uint64_t v30 = v45;
      sub_100E372E0(v23 + v27 + v29, v45, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
      EntityProperty.wrappedValue.getter();
      uint64_t v31 = v47;
      EntityProperty.wrappedValue.getter();
      int v56 = static Date.> infix(_:_:)();
      Swift::Int v32 = *v43;
      uint64_t v33 = v31;
      uint64_t v34 = v48;
      (*v43)(v33, v48);
      uint64_t v35 = v34;
      uint64_t v23 = v51;
      v32(v26, v35);
      uint64_t v36 = v30;
      uint64_t v24 = v50;
      sub_100E37348(v36, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
      uint64_t v37 = v57;
      sub_100E37348(v25, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
      if ((v56 & 1) == 0)
      {
LABEL_4:
        v23 += v49;
        v24 += v49;
        if (++v52 == v41) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v38 = *v37;
      if (!*v37) {
        break;
      }
      uint64_t v39 = v38 + v23 + v27;
      sub_100E373A8(v38 + v24 + v27, v54, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
      swift_arrayInitWithTakeFrontToBack();
      sub_100E373A8(v54, v39, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
      v27 -= v49;
      if (v52 == ++v28) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_100E36C1C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v68 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v68 - 8);
  __chkstk_darwin(v68, v9);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  Swift::Int v67 = (char *)&v57 - v14;
  uint64_t v69 = type metadata accessor for CRLBoardEntity();
  __chkstk_darwin(v69, v15);
  uint64_t v66 = (uint64_t)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v65 = (uint64_t)&v57 - v19;
  uint64_t v21 = *(void *)(v20 + 72);
  if (!v21)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v21 == -1) {
    goto LABEL_61;
  }
  int64_t v22 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v21 == -1) {
    goto LABEL_62;
  }
  uint64_t v23 = (uint64_t)(a2 - a1) / v21;
  unint64_t v72 = a1;
  unint64_t v71 = a4;
  uint64_t v24 = v22 / v21;
  if (v23 >= v22 / v21)
  {
    if ((v24 & 0x8000000000000000) == 0)
    {
      uint64_t v26 = v24 * v21;
      if (a4 < a2 || a2 + v26 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v39 = a4 + v26;
      unint64_t v70 = a4 + v26;
      unint64_t v72 = a2;
      if (v26 >= 1 && a1 < a2)
      {
        uint64_t v41 = -v21;
        uint64_t v59 = v8 + 8;
        uint64_t v60 = (void (**)(void, void))a1;
        Swift::Int v64 = v11;
        unint64_t v61 = a4;
        uint64_t v58 = -v21;
        uint64_t v42 = (void (**)(char *, uint64_t))(v8 + 8);
        do
        {
          unint64_t v62 = a2;
          unint64_t v63 = a3 + v41;
          uint64_t v43 = v65;
          sub_100E372E0(v39 + v41, v65, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
          unint64_t v44 = a2 + v41;
          uint64_t v45 = a2 + v41;
          uint64_t v46 = v66;
          sub_100E372E0(v45, v66, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
          unint64_t v47 = a3;
          uint64_t v48 = v67;
          EntityProperty.wrappedValue.getter();
          EntityProperty.wrappedValue.getter();
          char v49 = static Date.> infix(_:_:)();
          uint64_t v50 = *v42;
          uint64_t v51 = v11;
          uint64_t v52 = v68;
          (*v42)(v51, v68);
          v50(v48, v52);
          sub_100E37348(v46, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
          sub_100E37348(v43, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
          if (v49)
          {
            uint64_t v41 = v58;
            a3 = v63;
            if (v47 < v62 || v63 >= v62)
            {
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v11 = v64;
              uint64_t v54 = v60;
              unint64_t v53 = v61;
            }
            else
            {
              uint64_t v11 = v64;
              uint64_t v54 = v60;
              unint64_t v53 = v61;
              if (v47 != v62) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v72 += v41;
          }
          else
          {
            unint64_t v44 = v62;
            a3 = v63;
            unint64_t v55 = v70;
            v70 += v58;
            uint64_t v41 = v58;
            if (v47 < v55 || v63 >= v55)
            {
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v11 = v64;
              uint64_t v54 = v60;
              unint64_t v53 = v61;
            }
            else
            {
              uint64_t v11 = v64;
              uint64_t v54 = v60;
              unint64_t v53 = v61;
              if (v47 != v55) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
          }
          unint64_t v39 = v70;
          if (v70 <= v53) {
            break;
          }
          a2 = v44;
        }
        while (v44 > (unint64_t)v54);
      }
      goto LABEL_59;
    }
  }
  else if ((v23 & 0x8000000000000000) == 0)
  {
    uint64_t v25 = v23 * v21;
    if (a4 < a1 || a1 + v25 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v63 = a4 + v25;
    unint64_t v70 = a4 + v25;
    if (v25 >= 1 && a2 < a3)
    {
      uint64_t v60 = (void (**)(void, void))(v8 + 8);
      unint64_t v62 = a3;
      Swift::Int v64 = v11;
      uint64_t v28 = v65;
      uint64_t v29 = v67;
      do
      {
        sub_100E372E0(a2, v28, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
        uint64_t v30 = a4;
        uint64_t v31 = v66;
        sub_100E372E0(v30, v66, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
        EntityProperty.wrappedValue.getter();
        EntityProperty.wrappedValue.getter();
        char v32 = static Date.> infix(_:_:)();
        uint64_t v33 = (void (*)(char *, uint64_t))*v60;
        uint64_t v34 = v68;
        (*v60)(v11, v68);
        v33(v29, v34);
        sub_100E37348(v31, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
        sub_100E37348(v28, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
        unint64_t v35 = v72;
        if (v32)
        {
          unint64_t v36 = a2 + v21;
          if (v72 < a2 || v72 >= v36)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v37 = v62;
            uint64_t v11 = v64;
          }
          else
          {
            unint64_t v37 = v62;
            uint64_t v11 = v64;
            if (v72 == a2) {
              unint64_t v35 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v38 = v71 + v21;
          if (v72 < v71 || v72 >= v38)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v37 = v62;
            uint64_t v11 = v64;
          }
          else
          {
            unint64_t v37 = v62;
            uint64_t v11 = v64;
            if (v72 != v71) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v71 = v38;
          unint64_t v36 = a2;
        }
        unint64_t v72 = v35 + v21;
        a4 = v71;
        if (v71 >= v63) {
          break;
        }
        a2 = v36;
      }
      while (v36 < v37);
    }
LABEL_59:
    sub_100F69C58(&v72, &v71, (uint64_t *)&v70);
    return 1;
  }
LABEL_63:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100E372E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100E37348(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100E373A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100E37410(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_100E3747C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_100E374E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_100E37544(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_100E375A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_100E3760C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_100E37670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100E37684);
}

uint64_t sub_100E37684(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100E376F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100E37704);
}

uint64_t sub_100E37704(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CRLBoardEntityQueryPerformer()
{
  uint64_t result = qword_10169F188;
  if (!qword_10169F188) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100E377C0()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_100E37858()
{
  unint64_t result = qword_10169F1C0[0];
  if (!qword_10169F1C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10169F1C0);
  }
  return result;
}

uint64_t sub_100E378AC()
{
  return sub_1009D0EF4((unint64_t *)&qword_101673B60);
}

uint64_t sub_100E378E0(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return _swift_task_switch(sub_100E37900, 0, 0);
}

uint64_t sub_100E37900()
{
  sub_10050F848((void *)(v0[8] + 8), *(void *)(v0[8] + 32));
  AppDependency.wrappedValue.getter();
  v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[6] = &off_10152F800;
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100E379DC;
  uint64_t v2 = v0[7];
  return sub_100E33408(v2, (uint64_t)(v0 + 2));
}

uint64_t sub_100E379DC(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_100E37B34, 0, 0);
  }
  else
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4 + 16);
    uint64_t v6 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v6(a1);
  }
}

uint64_t sub_100E37B34()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100E37B98(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return _swift_task_switch(sub_100E37BB8, 0, 0);
}

uint64_t sub_100E37BB8()
{
  sub_10050F848((void *)(v0[8] + 8), *(void *)(v0[8] + 32));
  AppDependency.wrappedValue.getter();
  v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[6] = &off_10152F800;
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100E37C8C;
  return sub_100E33DC8((uint64_t)(v0 + 2));
}

uint64_t sub_100E37C8C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100E37B34;
  }
  else
  {
    *(void *)(v4 + 88) = a1;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4 + 16);
    uint64_t v5 = sub_100E37DBC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100E37DBC()
{
  **(void **)(v0 + 56) = *(void *)(v0 + 88);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_100E37DE4()
{
  unint64_t result = qword_10169F1D8[0];
  if (!qword_10169F1D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10169F1D8);
  }
  return result;
}

uint64_t sub_100E37E38()
{
  return sub_1009D0EF4((unint64_t *)&qword_101675F88);
}

uint64_t sub_100E37E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1007DC8BC();
  *uint64_t v5 = v2;
  v5[1] = sub_100528488;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_100E37F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  return _swift_task_switch(sub_100E37F44, 0, 0);
}

uint64_t sub_100E37F44()
{
  sub_10050F848((void *)(v0[10] + 8), *(void *)(v0[10] + 32));
  AppDependency.wrappedValue.getter();
  v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[6] = &off_10152F800;
  uint64_t v1 = (void *)swift_task_alloc();
  v0[11] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100E38020;
  uint64_t v3 = v0[8];
  uint64_t v2 = v0[9];
  return sub_100E34950(v3, v2, (uint64_t)(v0 + 2));
}

uint64_t sub_100E38020(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 96) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100E38174;
  }
  else
  {
    *(void *)(v4 + 104) = a1;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4 + 16);
    uint64_t v5 = sub_100E38150;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100E38150()
{
  **(void **)(v0 + 56) = *(void *)(v0 + 104);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100E38174()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

ValueMetadata *type metadata accessor for CRLBoardQuery()
{
  return &type metadata for CRLBoardQuery;
}

id sub_100E381E8(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_normalImage] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_pressedImage] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_errorImage] = 0;
  uint64_t v3 = OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_imageRenderable;
  uint64_t v4 = self;
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 renderable];
  v5[OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isBeingTracked] = 0;
  v5[OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isError] = 0;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for CRLUSDZRotationKnob();
  id v6 = [super initWithType:0 position:5 radius:a1 tag:0.0 onRep:0.0];
  [v6 setWorksWithStylus:1];
  sub_100E38750();
  sub_100E38548();

  return v6;
}

id sub_100E3832C()
{
  id v1 = [self renderable];
  [v1 addSubrenderable:*(void *)&v0[OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_imageRenderable]];
  [v0 radius];
  double v2 = sub_100064070();
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  [v0 radius];
  id v10 = [self bezierPathWithContinuousCornerRoundedRect:v2 cornerRadius:v4 v6, v8, v9];
  [v1 setBounds:v2, v4, v6, v8];
  id v11 = [v10 CGPath];
  [v1 setPath:v11];

  uint64_t v12 = (void *)sub_100E38A90();
  if (v12)
  {
    uint64_t v13 = v12;
    id v14 = [v12 CGColor];
  }
  else
  {
    id v14 = 0;
  }
  [v1 setFillColor:v14];

  return v1;
}

void sub_100E38548()
{
  id v1 = [v0 knobImage];
  if (v1)
  {
    double v2 = v1;
    id v3 = [v0 renderable];
    if (v3)
    {
      id v20 = v3;
      double v4 = self;
      [v4 begin];
      [v4 disableActions];
      id v5 = [v0 rep];
      double v6 = 1.0;
      if (v5)
      {
        double v7 = v5;
        id v8 = [v5 canvas];

        if (v8)
        {
          [v8 contentsScale];
          double v6 = v9;
        }
      }
      uint64_t v10 = OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_imageRenderable;
      id v11 = *(id *)&v0[OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_imageRenderable];
      [v2 size];
      [v11 setBounds:sub_100064070()];

      id v12 = *(id *)&v0[v10];
      [v20 bounds];
      [v12 setPosition:sub_100065738(v13, v14, v15, v16)];

      id v17 = *(id *)&v0[v10];
      id v18 = [v2 CGImageForContentsScale:v6];
      [v17 setContents:v18];

      [v4 commit];
      uint64_t v19 = v20;
    }
    else
    {
      uint64_t v19 = v2;
    }
  }
}

void sub_100E38750()
{
  id v1 = [self configurationWithPointSize:3 weight:40.0];
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [self imageNamed:v2 inBundle:0 withConfiguration:v1];

  if (v3)
  {
    id v12 = [objc_allocWithZone((Class)CRLImage) initWithUIImage:v3];
  }
  else
  {
    id v12 = 0;
  }
  double v4 = self;
  id v5 = [v4 whiteColor];
  if (v12) {
    id v6 = [v12 compositedImageWithColor:v5 alpha:20 blendMode:1.0];
  }
  else {
    id v6 = 0;
  }
  double v7 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_normalImage);
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_normalImage) = v6;
  id v8 = v6;

  id v9 = [v4 blackColor];
  if (v6) {
    id v10 = [v8 compositedImageWithColor:v9 alpha:20 blendMode:0.333333333];
  }
  else {
    id v10 = 0;
  }
  id v11 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_pressedImage);
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_pressedImage) = v10;
}

id sub_100E38980()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUSDZRotationKnob();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLUSDZRotationKnob()
{
  return self;
}

uint64_t sub_100E38A44()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isError))
  {
    id v1 = &OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_errorImage;
  }
  else if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isBeingTracked))
  {
    id v1 = &OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_pressedImage;
  }
  else
  {
    id v1 = &OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_normalImage;
  }
  return *(void *)(v0 + *v1);
}

uint64_t sub_100E38A90()
{
  uint64_t v9 = 0;
  uint64_t v0 = self;
  id v1 = [(id)v0 traitCollectionWithUserInterfaceStyle:1];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &v9;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_10066F14C;
  *(void *)(v3 + 24) = v2;
  aBlock[4] = sub_1006591F0;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_1006D9628;
  aBlock[3] = &unk_10152F968;
  double v4 = _Block_copy(aBlock);
  id v5 = v1;
  swift_retain();
  swift_release();
  [v0 crl_withTraitCollectionAsCurrent:v5 performBlock:v4];

  _Block_release(v4);
  LOBYTE(v0) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = v9;
    swift_release();
    return v7;
  }
  return result;
}

uint64_t sub_100E38C2C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100E38C3C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100E38C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100E38C5C()
{
  return swift_release();
}

void sub_100E38C68()
{
  if (qword_10166F9F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = (id)static OS_os_log.crlStatusHUD;
  uint64_t v2 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v1, (uint64_t)&_mh_execute_header, v2, (uint64_t)"CRLBaseHUDControllerProtocol_mi setupView", 41, 2, (uint64_t)_swiftEmptyArrayStorage);

  id v3 = [v0 hudView];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v4 = [v0 containerView];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];

  sub_100E39094();
  id v5 = [v0 containerView];
  id v6 = self;
  id v7 = [v6 clearColor];
  [v5 setBackgroundColor:v7];

  id v8 = [v0 hudView];
  id v9 = [v8 layer];

  id v10 = [v6 blackColor];
  id v11 = [v10 CGColor];

  [v9 setShadowColor:v11];
  [v9 setShadowRadius:5.0];
  id v12 = [v0 hudView];
  id v13 = [v12 traitCollection];

  LODWORD(v12) = [v13 crl_isUserInterfaceStyleLight];
  LODWORD(v14) = 1047569367;
  if (v12) {
    *(float *)&double v14 = 0.15;
  }
  [v9 setShadowOpacity:v14];
  [v9 setShadowOffset:0.0, 0.01];
  id v15 = [v6 secondaryLabelColor];
  id v16 = [v15 colorWithAlphaComponent:0.07];

  id v17 = [v16 CGColor];
  [v9 setBorderColor:v17];

  [v9 setBorderWidth:1.0];
  [v9 setCornerRadius:20.0];
  if (![v0 swipable]) {
    goto LABEL_10;
  }
  id v18 = [v0 swipeGestureRecognizer];

  if (!v18)
  {
    id v19 = [objc_allocWithZone((Class)UISwipeGestureRecognizer) initWithTarget:v0 action:"swipedWithSender:"];
    [v0 setSwipeGestureRecognizer:v19];
  }
  id v20 = [v0 containerView];
  id v21 = [v0 swipeGestureRecognizer];
  if (v21)
  {
    id v22 = v21;
    [v20 addGestureRecognizer:v21];

    id v9 = v22;
LABEL_10:

    return;
  }
  __break(1u);
}

void sub_100E39094()
{
  id v1 = [self crl_popoverVibrantBackgroundEffect];
  id v2 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v1];

  id v3 = [v0 hudView];
  [v3 addSubview:v2];

  id v4 = [v0 hudView];
  id v5 = [self systemBackgroundColor];
  [v4 setBackgroundColor:v5];
}

uint64_t sub_100E391A4(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v3 = *(void *)(a2 + 16);
    if ((uint64_t)v3 >= result) {
      unint64_t v4 = result;
    }
    else {
      unint64_t v4 = *(void *)(a2 + 16);
    }
    if (result) {
      unint64_t v5 = v4;
    }
    else {
      unint64_t v5 = 0;
    }
    if (v3 >= v5)
    {
      type metadata accessor for CRLBoardEntity();
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100E39238(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for AnyCancellable();
    sub_100E769FC(&qword_101677490, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v3 = v20;
    uint64_t v4 = v21;
    unint64_t v5 = v22;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
      uint64_t v12 = v4;
      goto LABEL_29;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v13 >= v9) {
      return sub_10052E1EC();
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    uint64_t v12 = v4 + 1;
    if (!v14)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        return sub_10052E1EC();
      }
      unint64_t v14 = *(void *)(v17 + 8 * v12);
      if (!v14)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v9) {
          return sub_10052E1EC();
        }
        unint64_t v14 = *(void *)(v17 + 8 * v12);
        if (!v14)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v9) {
            return sub_10052E1EC();
          }
          unint64_t v14 = *(void *)(v17 + 8 * v12);
          if (!v14)
          {
            uint64_t v12 = v4 + 5;
            if (v4 + 5 >= v9) {
              return sub_10052E1EC();
            }
            unint64_t v14 = *(void *)(v17 + 8 * v12);
            if (!v14)
            {
              uint64_t v15 = v4 + 6;
              while (v9 != v15)
              {
                unint64_t v14 = *(void *)(v17 + 8 * v15++);
                if (v14)
                {
                  uint64_t v12 = v15 - 1;
                  goto LABEL_28;
                }
              }
              return sub_10052E1EC();
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_29:
    uint64_t v16 = *(void *)(*(void *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v16) {
      return sub_10052E1EC();
    }
    while (1)
    {
      AnyCancellable.cancel()();
      uint64_t result = swift_release();
      uint64_t v4 = v12;
      unint64_t v5 = v10;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for AnyCancellable();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v12 = v4;
        uint64_t v10 = v5;
        if (v23) {
          continue;
        }
      }
      return sub_10052E1EC();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100E394F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v40 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v39 = (uint64_t)&v33 - v8;
  __chkstk_darwin(v9, v10);
  unint64_t v38 = (char *)&v33 - v11;
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v34 = a1 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  uint64_t v43 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  uint64_t v44 = v3 + 16;
  uint64_t v41 = v3 + 48;
  uint64_t v42 = v3;
  unint64_t v37 = (void (**)(char *, char *, uint64_t))(v3 + 32);
  int64_t v35 = (unint64_t)(v17 + 63) >> 6;
  unint64_t v36 = (void (**)(uint64_t, uint64_t))(v3 + 8);
  uint64_t v45 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v21 = 0;
  if (!v19) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (unint64_t i = v22 | (v21 << 6); ; unint64_t i = __clz(__rbit64(v25)) + (v21 << 6))
  {
    uint64_t v27 = v42;
    uint64_t v28 = *(void (**)(char *, unint64_t, uint64_t))(v42 + 16);
    v28(v15, *(void *)(v45 + 48) + *(void *)(v42 + 72) * i, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v15, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v15, 1, v2) == 1) {
      return swift_release();
    }
    uint64_t v29 = v38;
    (*v37)(v38, v15, v2);
    uint64_t v30 = v40;
    v28(v40, (unint64_t)v29, v2);
    uint64_t v31 = v39;
    sub_100CB4BC8(v39, v30);
    char v32 = *v36;
    (*v36)(v31, v2);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v32)(v29, v2);
    if (v19) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v24 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v35) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v34 + 8 * v24);
    ++v21;
    if (!v25)
    {
      int64_t v21 = v24 + 1;
      if (v24 + 1 >= v35) {
        goto LABEL_24;
      }
      unint64_t v25 = *(void *)(v34 + 8 * v21);
      if (!v25)
      {
        int64_t v21 = v24 + 2;
        if (v24 + 2 >= v35) {
          goto LABEL_24;
        }
        unint64_t v25 = *(void *)(v34 + 8 * v21);
        if (!v25)
        {
          int64_t v21 = v24 + 3;
          if (v24 + 3 >= v35) {
            goto LABEL_24;
          }
          unint64_t v25 = *(void *)(v34 + 8 * v21);
          if (!v25) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v19 = (v25 - 1) & v25;
  }
  int64_t v26 = v24 + 4;
  if (v26 >= v35)
  {
LABEL_24:
    (*v43)(v15, 1, 1, v2);
    return swift_release();
  }
  unint64_t v25 = *(void *)(v34 + 8 * v26);
  if (v25)
  {
    int64_t v21 = v26;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v21 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v21 >= v35) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v34 + 8 * v21);
    ++v26;
    if (v25) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_100E398E4(uint64_t a1, unint64_t a2)
{
}

uint64_t sub_100E398FC()
{
  uint64_t v0 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005057FC((uint64_t *)&unk_101683E40);
  sub_100523288((unint64_t *)&unk_101683E50, (uint64_t *)&unk_101683E40);
  dispatch thunk of Collection._customIndexOfEquatableElement(_:)();
  if ((v9 & 1) == 0) {
    return v8;
  }
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  if (v10 == v8) {
    return 0;
  }
  while (1)
  {
    uint64_t v5 = dispatch thunk of Collection.subscript.read();
    (*(void (**)(char *))(v1 + 16))(v4);
    ((void (*)(uint64_t *, void))v5)(&v8, 0);
    sub_100E769FC((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
    LOBYTE(v5) = dispatch thunk of static Equatable.== infix(_:_:)();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    if (v5) {
      break;
    }
    dispatch thunk of Collection.formIndex(after:)();
    dispatch thunk of Collection.endIndex.getter();
    if (v10 == v8) {
      return 0;
    }
  }
  return v10;
}

uint64_t sub_100E39B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v5 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = *(void *)(v4 + 72);
  sub_100E769FC((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v7 = 0;
  while ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    ++v7;
    v5 += v6;
    if (v2 == v7) {
      return 0;
    }
  }
  return v7;
}

uint64_t sub_100E39C90(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  BOOL v4 = (a1 & 1) == 0;
  uint64_t result = 0;
  if (((v4 ^ *(unsigned __int8 *)(a2 + 32)) & 1) == 0)
  {
    uint64_t v6 = v2 - 1;
    while (v6 != result)
    {
      char v7 = ((a1 & 1) == 0) ^ *(unsigned char *)(a2 + 33 + result++);
      if (v7) {
        return result;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_100E39D04(uint64_t a1, float a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0;
  }
  float v4 = *(float *)(a1 + 32);
  uint64_t result = 0;
  if (v4 != a2)
  {
    uint64_t v6 = v2 - 1;
    uint64_t v7 = a1 + 36;
    while (v6 != result)
    {
      float v8 = *(float *)(v7 + 4 * result++);
      if (v8 == a2) {
        return result;
      }
    }
    return 0;
  }
  return result;
}

void sub_100E39D64(uint64_t a1, unint64_t a2, uint64_t (*a3)(void))
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v6 = *(id *)(a2 + 32);
      }
      uint64_t v7 = v6;
      a3 = (uint64_t (*)(void))a3(0);
      char v8 = static NSObject.== infix(_:_:)();

      if ((v8 & 1) == 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          unint64_t v13 = i + 1;
          if (__OFADD__(i, 1)) {
            break;
          }
          if (v13 == v5) {
            return;
          }
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if ((v13 & 0x8000000000000000) != 0) {
              goto LABEL_18;
            }
            if (v13 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_19;
            }
            id v10 = *(id *)(a2 + 32 + 8 * v13);
          }
          uint64_t v11 = v10;
          char v12 = static NSObject.== infix(_:_:)();

          if (v12) {
            return;
          }
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v5) {
          continue;
        }
      }
      return;
    }
  }
}

void sub_100E39EF8(uint64_t a1, unint64_t a2)
{
}

void sub_100E39F0C(uint64_t a1, unint64_t a2, unint64_t *a3)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v6 = *(id *)(a2 + 32);
      }
      uint64_t v7 = v6;
      sub_10050BF48(0, a3);
      char v8 = static NSObject.== infix(_:_:)();

      if ((v8 & 1) == 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          a3 = (unint64_t *)(i + 1);
          if (__OFADD__(i, 1)) {
            break;
          }
          if (a3 == (unint64_t *)v5) {
            return;
          }
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (((unint64_t)a3 & 0x8000000000000000) != 0) {
              goto LABEL_18;
            }
            if ((unint64_t)a3 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_19;
            }
            id v10 = *(id *)(a2 + 32 + 8 * (void)a3);
          }
          uint64_t v11 = v10;
          char v12 = static NSObject.== infix(_:_:)();

          if (v12) {
            return;
          }
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v5) {
          continue;
        }
      }
      return;
    }
  }
}

void sub_100E3A0A8(uint64_t a1, unint64_t a2)
{
}

uint64_t sub_100E3A0C0(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2;
  if (a2 >> 62) {
    goto LABEL_30;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v3) {
    return 0;
  }
  while ((v2 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; ; ++i)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      if (static OSSignpostID.== infix(_:_:)())
      {
        uint64_t v5 = StaticString.description.getter();
        uint64_t v7 = v6;
        if (v5 == StaticString.description.getter() && v7 == v8)
        {
          swift_unknownObjectRelease();
          goto LABEL_26;
        }
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v9) {
          return i;
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
      uint64_t v10 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      if (v10 == v3) {
        return 0;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v3) {
      return 0;
    }
  }
  uint64_t i = 0;
  unint64_t v11 = v2 + 32;
  while (1)
  {
    unint64_t v2 = *(void *)(v11 + 8 * i);
    swift_retain();
    if (static OSSignpostID.== infix(_:_:)()) {
      break;
    }
    swift_release();
LABEL_21:
    uint64_t v17 = i + 1;
    if (__OFADD__(i, 1)) {
      goto LABEL_29;
    }
    ++i;
    if (v17 == v3) {
      return 0;
    }
  }
  uint64_t v12 = StaticString.description.getter();
  uint64_t v14 = v13;
  if (v12 != StaticString.description.getter() || v14 != v15)
  {
    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v16) {
      return i;
    }
    goto LABEL_21;
  }
  swift_release();
LABEL_26:
  swift_bridgeObjectRelease_n();
  return i;
}

void sub_100E3ACEC(uint64_t a1, unint64_t a2)
{
}

void sub_100E3AD00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unsigned int v6 = [self isReduceMotionEnabled];
  uint64_t v7 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController];
  [v7 leaveQuickSelectModeIfNeeded];
  [v3 endDrawingModeIfNeeded];
  id v8 = [v7 miniFormatterPresenter];
  if (v8)
  {
    char v9 = v8;
    if ([v8 isPresentingMiniFormatter]) {
      [v9 dismissMiniFormatterWithAnimated:0];
    }
    swift_unknownObjectRelease();
  }
  uint64_t v10 = *(void **)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController];
  if (v10)
  {
    id v18 = v10;
    id v11 = [v3 presentedViewController];
    if (!v11) {
      goto LABEL_9;
    }
    uint64_t v12 = v11;
    sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
    id v17 = v18;
    id v13 = v12;
    LOBYTE(v12) = static NSObject.== infix(_:_:)();

    if (v12)
    {
      uint64_t v14 = v17;
    }
    else
    {
LABEL_9:
      if ((objc_msgSend(v18, "isBeingPresented", v17) & 1) == 0)
      {
        uint64_t v15 = swift_allocObject();
        *(void *)(v15 + 16) = a1;
        *(void *)(v15 + 24) = a2;
        aBlock[4] = sub_1006DAE04;
        aBlock[5] = v15;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(void *)"";
        aBlock[2] = sub_100679958;
        aBlock[3] = &unk_10152FB08;
        char v16 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        [v3 presentViewController:v18 animated:v6 ^ 1 completion:v16];
        _Block_release(v16);

        return;
      }
      uint64_t v14 = v18;
    }
  }
}

void sub_100E3AF74(double a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  id v4 = [v3 layerHost];
  if (v4
    && (id v23 = [v4 canvasLayer], swift_unknownObjectRelease(), v23))
  {
    [v23 minimumPinchViewScale];
    double v6 = v5;
    [v23 maximumPinchViewScale];
    double v8 = sub_100407E48(a1, v6, v7);
    [v3 visibleUnscaledRect];
    CGFloat v10 = v9;
    CGFloat v12 = v11;
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    [v3 viewScale];
    double v18 = v17 / v8;
    double v19 = sub_100065738(v10, v12, v14, v16);
    double v21 = v20;
    double v22 = sub_1000646A4(v14, v16, v18);
    [v3 zoomWithAnimationToUnscaledRect:sub_10006402C(v19, v21, v22)];
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"viewScale", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3849, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"viewScale", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3849);
    [v3 setViewScale:a1];
  }
}

void sub_100E3B1C0()
{
  id v1 = [*(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController] pencilMediator];
  if (v1)
  {
    id v2 = [v1 pencilModeToBeginFromToolbarItem];
    swift_unknownObjectRelease();
    if (v2)
    {
      id v3 = [v0 pencilDocumentModeFor:v2];
      id v4 = sub_100E3C594();
      [v4 setMode:v3 animated:1];
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"beginPencilModeFromToolbarItem()", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3439, (uint64_t)"Should not be asked to begin pencil mode from toolbar item if we cannot begin a pencil mode.", 92, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"beginPencilModeFromToolbarItem()", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3439);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100E3B330(char a1, char a2)
{
  id v3 = v2;
  CGFloat v14 = &type metadata for CRLFeatureFlags;
  unint64_t v15 = sub_1005396A8();
  v13[0] = 0;
  char v6 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v13);
  if (v6)
  {
    id v7 = [v3 presentedViewController];
    if (v7)
    {
      double v8 = v7;
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        CGFloat v10 = (void *)Strong;
        sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
        id v11 = v8;
        char v12 = static NSObject.== infix(_:_:)();

        if (v12)
        {
          [v11 dismissViewControllerAnimated:a1 & 1 completion:0];
          sub_100E5DCEC(a2 & 1);
        }
      }
    }
  }
}

void sub_100E3B44C()
{
  unint64_t v15 = &type metadata for CRLFeatureFlags;
  unint64_t v16 = sub_1005396A8();
  LOBYTE(v14[0]) = 0;
  char v1 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v14);
  if (v1)
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

    if (!Strong)
    {
      sub_100E5D74C((uint64_t)v13);
      sub_10051B3EC((uint64_t)v13, (uint64_t)v14, &qword_101674700);
      if (v17)
      {
        if (qword_10166F9D8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v3 = (id)static OS_os_log.crlError;
        uint64_t v4 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v4, (uint64_t)"Unable to present connection line on selection because there is no connection line knob position to present off of", 114, 2, (uint64_t)_swiftEmptyArrayStorage);
      }
      else
      {
        uint64_t v5 = v16;
        id v6 = [objc_allocWithZone((Class)UIView) initWithFrame:v14[0], v14[1], v14[2], *(double *)&v15];
        uint64_t v7 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPresentationView;
        double v8 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPresentationView);
        *(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPresentationView) = v6;

        double v9 = *(void **)(v0 + v7);
        if (!v9) {
          return;
        }
        CGFloat v10 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController);
        id v3 = v9;
        id v11 = [v10 view];
        if (!v11)
        {
          __break(1u);
          return;
        }
        char v12 = v11;
        [v11 addSubview:v3];

        sub_100E5C438((uint64_t)v3, v5, 0, 0);
      }
    }
  }
}

void sub_100E3B638()
{
  char v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  id v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v34 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  CGFloat v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  unint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v36 = &type metadata for CRLFeatureFlags;
  unint64_t v37 = sub_1005396A8();
  LOBYTE(aBlock[0]) = 17;
  char v16 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
  if (v16)
  {
    uint64_t v33 = v3;
    id v17 = [v1 traitCollection];
    unsigned int v18 = [v17 crl_isCompactWidth];

    if (v18)
    {
      id v19 = [v1 navigationItem];
      id v20 = [v19 overflowPresentationSource];

      if (v20)
      {
        sub_100E5CB60((uint64_t)v20, 0, 0);
        if (qword_10166F030 != -1) {
          swift_once();
        }
        uint64_t v21 = sub_1005057FC(&qword_10167A2C0);
        sub_100556B74(v21, (uint64_t)qword_10171A788);
        Tips.Event.sendDonation<>(_:)();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      double v22 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController];
      if (v22)
      {
        id v23 = v22;
        if (sub_100E5BA58())
        {
          id v24 = *(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState];
          sub_10080F0BC();

          sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
          uint64_t v32 = static OS_dispatch_queue.main.getter();
          static DispatchTime.now()();
          uint64_t v25 = swift_allocObject();
          *(void *)(v25 + 16) = v1;
          *(void *)(v25 + 24) = v23;
          unint64_t v37 = (unint64_t)sub_100E77D44;
          uint64_t v38 = v25;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = *(void *)"";
          aBlock[2] = sub_100679958;
          unint64_t v36 = (ValueMetadata *)&unk_101530ED0;
          uint64_t v30 = _Block_copy(aBlock);
          id v31 = v23;
          int64_t v26 = v1;
          swift_release();
          static DispatchQoS.unspecified.getter();
          aBlock[0] = _swiftEmptyArrayStorage;
          sub_100E769FC((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_1005057FC((uint64_t *)&unk_1016725D0);
          sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
          dispatch thunk of SetAlgebra.init<A>(_:)();
          uint64_t v27 = v30;
          uint64_t v28 = (void *)v32;
          OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
          _Block_release(v27);

          (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v2);
          (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v7);
          (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
        }
        else
        {
        }
      }
    }
  }
}

uint64_t sub_100E3BB38()
{
  uint64_t v12 = &type metadata for CRLFeatureFlags;
  unint64_t v13 = sub_1005396A8();
  LOBYTE(v11[0]) = 20;
  char v1 = isFeatureEnabled(_:)();
  uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v11);
  if (v1)
  {
    id v3 = [v0 traitCollection];
    if ([v3 horizontalSizeClass] == (id)1)
    {
    }
    else
    {
      unsigned int v4 = [self crl_phoneUI];

      if (!v4)
      {
        id v5 = sub_100E3C8EC();
        id v6 = &type metadata for CRLTipStencilLibraryFull;
        uint64_t v12 = &type metadata for CRLTipStencilLibraryFull;
        uint64_t v7 = sub_100E5DC6C;
        unint64_t v8 = sub_1005C7700();
        goto LABEL_7;
      }
    }
    id v5 = sub_100E3C86C();
    id v6 = &type metadata for CRLTipStencilLibraryCompact;
    uint64_t v12 = &type metadata for CRLTipStencilLibraryCompact;
    uint64_t v7 = sub_100E5DC48;
    unint64_t v8 = sub_1005C76AC();
LABEL_7:
    unint64_t v9 = v8;
    unint64_t v13 = v8;
    CGFloat v10 = sub_10050F848(v11, (uint64_t)v6);
    sub_100E5BC48((uint64_t)v10, (uint64_t)v5, (uint64_t)v7, 0, v6, v9);

    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v11);
  }
  return result;
}

uint64_t sub_100E3BC90(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_14;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v7 = 0;
  if (v6)
  {
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a3 + 8 * v7 + 32);
      unint64_t v9 = v8;
      id v13 = v8;
      char v10 = a1(&v13);

      if (v3 || (v10 & 1) != 0) {
        break;
      }
      uint64_t v11 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
LABEL_14:
        swift_bridgeObjectRetain();
        uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v7 = 0;
        if (!v6) {
          return v7;
        }
      }
      else
      {
        ++v7;
        if (v11 == v6) {
          return 0;
        }
      }
    }
  }
  return v7;
}

unint64_t sub_100E3BDAC(uint64_t (*a1)(unint64_t *), uint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x2000000000000000) != 0) {
    unint64_t v5 = HIBYTE(a4) & 0xF;
  }
  else {
    unint64_t v5 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5) {
    return 0;
  }
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  uint64_t v24 = a4 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v23 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
  unint64_t v10 = 15;
  uint64_t v28 = 4 << v8;
  while (1)
  {
    unint64_t v12 = v10 & 0xC;
    BOOL v13 = (v10 & 1) == 0 || v12 == v9;
    BOOL v14 = v13;
    if (v13) {
      break;
    }
    unint64_t result = v10;
    if (v10 >> 16 >= v5) {
      goto LABEL_55;
    }
LABEL_24:
    if ((a4 & 0x1000000000000000) != 0)
    {
      int v16 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)();
    }
    else
    {
      if ((a4 & 0x2000000000000000) != 0)
      {
        unint64_t v26 = a3;
        uint64_t v27 = v24;
      }
      else if ((a3 & 0x1000000000000000) == 0)
      {
        _StringObject.sharedUTF8.getter();
      }
      int v16 = _decodeScalar(_:startingAt:)();
    }
    LODWORD(v26) = v16;
    unint64_t result = a1(&v26);
    if (v4 || (result & 1) != 0) {
      return v10;
    }
    if (v14)
    {
      uint64_t v9 = v28;
      if (v12 == v28)
      {
        unint64_t result = sub_1009B7FE8(v10, a3, a4);
        uint64_t v9 = v28;
        unint64_t v10 = result;
        if (v5 <= result >> 16) {
          goto LABEL_57;
        }
      }
      else if (v5 <= v10 >> 16)
      {
        goto LABEL_57;
      }
      if ((v10 & 1) == 0)
      {
        unint64_t v17 = sub_10099A708(v10, a3, a4);
        uint64_t v9 = v28;
        unint64_t v10 = v10 & 0xC | v17 & 0xFFFFFFFFFFFFFFF3 | 1;
      }
    }
    else
    {
      uint64_t v9 = v28;
      if (v5 <= v10 >> 16) {
        goto LABEL_56;
      }
    }
    if ((a4 & 0x1000000000000000) != 0)
    {
      uint64_t v11 = String.UnicodeScalarView._foreignIndex(after:)();
      uint64_t v9 = v28;
      unint64_t v10 = v11;
    }
    else
    {
      unint64_t v18 = v10 >> 16;
      if ((a4 & 0x2000000000000000) != 0)
      {
        unint64_t v26 = a3;
        uint64_t v27 = v24;
        int v20 = *((unsigned __int8 *)&v26 + v18);
      }
      else
      {
        uint64_t v19 = v23;
        if ((a3 & 0x1000000000000000) == 0)
        {
          uint64_t v19 = _StringObject.sharedUTF8.getter();
          uint64_t v9 = v28;
        }
        int v20 = *(unsigned __int8 *)(v19 + v18);
      }
      int v21 = (char)v20;
      unsigned int v22 = __clz(v20 ^ 0xFF) - 24;
      if (v21 >= 0) {
        LOBYTE(v22) = 1;
      }
      unint64_t v10 = ((v18 + v22) << 16) | 5;
    }
    if (4 * v5 == v10 >> 14) {
      return 0;
    }
  }
  unint64_t result = v10;
  if (v12 == v9) {
    unint64_t result = sub_1009B7FE8(v10, a3, a4);
  }
  if (result >> 16 < v5)
  {
    if ((result & 1) == 0) {
      sub_10099A708(result, a3, a4);
    }
    goto LABEL_24;
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
  return result;
}

uint64_t sub_100E3C074(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_14;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v7 = 0;
  if (v6)
  {
    while (1)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v8 = *(void *)(a3 + 8 * v7 + 32);
        swift_unknownObjectRetain();
      }
      uint64_t v12 = v8;
      char v9 = a1(&v12);
      swift_unknownObjectRelease();
      if (v3 || (v9 & 1) != 0) {
        break;
      }
      uint64_t v10 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
LABEL_14:
        swift_bridgeObjectRetain();
        uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v7 = 0;
        if (!v6) {
          return v7;
        }
      }
      else
      {
        ++v7;
        if (v10 == v6) {
          return 0;
        }
      }
    }
  }
  return v7;
}

uint64_t sub_100E3C198@<X0>(void *a1@<X8>)
{
  return sub_10070AC74(a1);
}

uint64_t sub_100E3C1AC(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  v2;
  static Published.subscript.setter();
  return sub_1006FF3DC();
}

void sub_100E3C230(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  [v4 setDocumentIsSharedReadOnly:a1 & 1];
  if (a1) {
    sub_100E4EE64(0);
  }
  unint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController];
  if (v5)
  {
    id v6 = v5;
    sub_1009A5FA0();
  }
  id v7 = sub_100E3C92C();
  sub_10050BF48(0, &qword_101673A80);
  UIMenuElementSize preferredElementSize = sub_10059D888();
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v24.value.super.Class isa = 0;
  v24.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v8, (Swift::String_optional)0, v24, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v22).super.super.isa;
  [v7 setMenu:isa];

  id v10 = [v2 traitCollection];
  sub_1005919EC(v10, (int)[v4 documentIsSharedReadOnly], (uint64_t)v23);
  sub_100591DC0(v23, 0);
  sub_1005393A8((uint64_t)v23);

  id v11 = [v2 traitCollection];
  [v4 documentIsSharedReadOnly];
  sub_1005C3F8C(v11);

  uint64_t v12 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
  swift_getKeyPath();
  swift_getKeyPath();
  id v13 = v12;
  static Published.subscript.setter();
  BOOL v14 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController];
  if (v14)
  {
    unint64_t v15 = v14;
    Class v16 = sub_1005E9AA8();
    uint64_t v17 = OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu;
    unint64_t v18 = *(void **)&v15[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu];
    *(void *)&v15[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu] = v16;

    id v19 = sub_1005E9728();
    id v20 = *(id *)&v15[v17];
    [v19 setMenu:v20];
  }
}

id sub_100E3C474()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___editorController;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___editorController);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___editorController);
  }
  else
  {
    id v4 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);
    id v5 = sub_100E3C654();
    id v6 = objc_allocWithZone((Class)CRLEditorController);
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v6 initWithEditingCoordinator:v4 rootEditor:v5 debugName:v7];

    char v9 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v8;
    id v3 = v8;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

id sub_100E3C594()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___documentModeController;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___documentModeController);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___documentModeController);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)CRLiOSDocumentModeController) initWithDelegate:v0];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100E3C654()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___boardEditor;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___boardEditor);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___boardEditor);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)CRLBoardEditor) initWithInteractiveCanvasController:*(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController)];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_100E3C6E8()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertingHelper;
  if (*(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertingHelper))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertingHelper);
  }
  else
  {
    type metadata accessor for CRLBoardItemInsertingHelper();
    uint64_t v2 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id sub_100E3C82C()
{
  return sub_100E3C96C(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___undoToolbarItem, (uint64_t (*)(void))sub_100596770);
}

id sub_100E3C84C()
{
  return sub_100E3C96C(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertTextBoxToolbarItem, (uint64_t (*)(void))sub_1005A0B2C);
}

id sub_100E3C86C()
{
  return sub_100E3C96C(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertAVMediaToolbarItem, (uint64_t (*)(void))sub_1005A1E48);
}

id sub_100E3C88C()
{
  return sub_100E3C96C(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertStickyNoteToolbarItem, (uint64_t (*)(void))sub_1005A18F8);
}

id sub_100E3C8AC()
{
  return sub_100E3C96C(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertShapeToolbarItem, (uint64_t (*)(void))sub_1005A1214);
}

id sub_100E3C8CC()
{
  return sub_100E3C96C(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___togglePencilModeToolbarItem, (uint64_t (*)(void))sub_1005A4C7C);
}

id sub_100E3C8EC()
{
  return sub_100E3C96C(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertStencilToolbarItem, (uint64_t (*)(void))sub_1005A38DC);
}

id sub_100E3C90C()
{
  return sub_100E3C96C(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___shareToolbarItem, (uint64_t (*)(void))sub_1005A3D34);
}

id sub_100E3C92C()
{
  return sub_100E3C96C(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___boardViewControlsItem, (uint64_t (*)(void))sub_1005A4414);
}

id sub_100E3C94C()
{
  return sub_100E3C96C(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___newBoardToolbarItem, (uint64_t (*)(void))sub_1005A4848);
}

id sub_100E3C96C(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2();
    NSString v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

objc_class *sub_100E3C9CC()
{
  return sub_100E3CA0C(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___doneToolbarItem);
}

objc_class *sub_100E3C9EC()
{
  return sub_100E3CA0C(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___doneWithModeToolbarItem);
}

objc_class *sub_100E3CA0C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(objc_class **)(v1 + *a1);
  }
  else
  {
    uint64_t v5 = v1;
    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    id v6 = (objc_class *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    v12.value.super.super.Class isa = (Class)sub_10050BF48(0, (unint64_t *)&qword_101674470);
    v11.value.super.super.Class isa = v6;
    v11.is_nil = 0;
    v7.super.super.Class isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemDone, v11, v12).super.super.isa;
    id v8 = *(void **)(v5 + v2);
    *(UIBarButtonItem *)(v5 + v2) = v7;
    id v4 = v7.super.super.isa;

    uint64_t v3 = 0;
  }
  id v9 = v3;
  return v4;
}

objc_class *sub_100E3CB20()
{
  return sub_100E3CA0C(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___doneWithScenesNavigatorToolbarItem);
}

id sub_100E3CB40()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___viewOnlyToolbarItem;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___viewOnlyToolbarItem);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___viewOnlyToolbarItem);
  }
  else
  {
    id v4 = sub_1005C29B4();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100E3CBA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___collaborationButtonItem;
  id v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___collaborationButtonItem);
  id v4 = v3;
  if (v3 == (void *)1)
  {
    uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController);
    if (v5)
    {
      id v6 = v5;
      id v4 = sub_100DE95E8();

      uint64_t v7 = *(void *)(v1 + v2);
    }
    else
    {
      id v4 = 0;
      uint64_t v7 = 1;
    }
    *(void *)(v1 + v2) = v4;
    id v8 = v4;
    sub_100522AD8((id)v7);
  }
  sub_10052315C(v3);
  return v4;
}

id sub_100E3CC3C()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___snapshotHostingView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___snapshotHostingView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___snapshotHostingView);
  }
  else
  {
    type metadata accessor for CRLCanvasLayerSnapshotHostingView();
    id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_100E3CCB4()
{
  id v1 = v0;
  id v2 = [v1 presentedViewController];
  if (v2)
  {
    id v3 = v2;
    type metadata accessor for CRLScenesViewController_i();
    while (1)
    {
      id v4 = v3;
      if (swift_dynamicCastClass()) {
        break;
      }
      type metadata accessor for CRLCompactScenesViewController_i();
      uint64_t v5 = swift_dynamicCastClass();

      if (v5) {
        goto LABEL_9;
      }
      id v3 = [v4 presentedViewController];
      id v1 = v4;
      if (!v3)
      {
        uint64_t v6 = 0;
        goto LABEL_10;
      }
    }

LABEL_9:
    uint64_t v6 = 1;
LABEL_10:
    id v1 = v4;
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

id sub_100E3CE10()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___findReplaceController;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___findReplaceController);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___findReplaceController);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)CRLFindReplaceController) initWithEditingCoordinator:*(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator) delegate:v0];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void *sub_100E3CEE0(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = *(id *)(v3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView);
  LOBYTE(a2) = sub_10060EB48(a2, (uint64_t)v6, (uint64_t)&_mh_execute_header, (uint64_t)"findInteraction(_:sessionFor:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 192);

  if ((a2 & 1) == 0) {
    return 0;
  }
  uint64_t v7 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_findSession;
  id v8 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_findSession);
  if (!v8)
  {
    id v9 = sub_100E3CE10();
    objc_allocWithZone((Class)type metadata accessor for CRLiOSFindSession());
    id v10 = sub_100DFBB34(v9, a1);
    UIAction_optional v11 = *(void **)(v3 + v7);
    *(void *)(v3 + v7) = v10;

    id v8 = *(void **)(v3 + v7);
  }
  id v12 = v8;
  return v8;
}

uint64_t (*sub_100E3D1DC())()
{
  return j__swift_endAccess;
}

id sub_100E3D238()
{
  return sub_100E3D250(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___unobscuredRectLayout);
}

id sub_100E3D244()
{
  return sub_100E3D250(&OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___keyboardFrameLayoutGuide);
}

id sub_100E3D250(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    id v5 = [objc_allocWithZone((Class)UILayoutGuide) init];
    id v6 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    id v4 = v5;

    uint64_t v3 = 0;
  }
  id v7 = v3;
  return v4;
}

char *sub_100E3D328(char *a1, void *a2, void *a3, void *a4)
{
  *(void *)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___editorController] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___documentModeController] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___boardEditor] = 0;
  uint64_t v8 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_selectionModelTranslator;
  id v9 = objc_allocWithZone((Class)CRLSelectionModelTranslator);
  id v10 = v4;
  *(void *)&v4[v8] = [v9 init];
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertingHelper] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertingCancellableToken] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_traitChangeRegistration] = 0;
  v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isSuppressingBottomToolTrayForPresentationController] = 0;
  v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF] = 0;
  v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isTornDown] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressTimer] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressViewController] = 0;
  v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardHasSyncedAtLeastOnce] = 0;
  uint64_t v11 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_cloudQuotaMessagingObserver;
  type metadata accessor for CRLCloudQuotaMessagingObserver();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 24) = 0;
  swift_unknownObjectWeakInit();
  id v13 = (void *)ICQCurrentInAppMessageChangedNotification;
  *(void *)(v12 + 32) = 0;
  *(void *)(v12 + 40) = v13;
  *(_OWORD *)(v12 + 48) = 0u;
  *(_OWORD *)(v12 + 64) = 0u;
  *(void *)(v12 + 80) = 0x4122750000000000;
  *(void *)&v10[v11] = v12;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController] = 0;
  BOOL v14 = &v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shareSyncAwaitTask];
  *((void *)v14 + 1) = 0;
  *((void *)v14 + 2) = 0;
  *(void *)BOOL v14 = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasBackgroundLayer] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasBackgroundView] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasViewController] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasView] = 0;
  unint64_t v15 = &v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_CRLUpdateInfoKey];
  strcpy(&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_CRLUpdateInfoKey], "iOSUpdateInfo");
  *((_WORD *)v15 + 7) = -4864;
  Class v16 = &v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_CRLUnsupportedDevicesKey];
  *(void *)Class v16 = 0xD000000000000012;
  *((void *)v16 + 1) = 0x800000010126E3B0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_subscriptions] = &_swiftEmptySetSingleton;
  uint64_t v17 = &v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastContentOffset];
  *(void *)uint64_t v17 = 0;
  *((void *)v17 + 1) = 0;
  unint64_t v18 = &v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastCanvasCenter];
  *(void *)unint64_t v18 = 0;
  *((void *)v18 + 1) = 0;
  id v19 = &v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState];
  *(_OWORD *)id v19 = 0u;
  *((_OWORD *)v19 + 1) = 0u;
  *(_DWORD *)(v19 + 31) = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___undoToolbarItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertTextBoxToolbarItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertAVMediaToolbarItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertStickyNoteToolbarItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertShapeToolbarItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___togglePencilModeToolbarItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertStencilToolbarItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___shareToolbarItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___boardViewControlsItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___newBoardToolbarItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___doneToolbarItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___doneWithModeToolbarItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___doneWithScenesNavigatorToolbarItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___viewOnlyToolbarItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___collaborationButtonItem] = 1;
  swift_unknownObjectWeakInit();
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_photoPickerLoadingProgress] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_gpHelper] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertURLAlert] = 0;
  uint64_t v20 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView;
  id v21 = objc_allocWithZone((Class)CRLScrollView);
  id v22 = v13;
  *(void *)&v10[v20] = [v21 init];
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasScrollViewController] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomToolTray] = 0;
  uint64_t v23 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_snapshotViewWrapper;
  *(void *)&v10[v23] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___snapshotHostingView] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomAndScenesContainerView] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewController] = 0;
  uint64_t v24 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewState;
  *(void *)&v10[v24] = [objc_allocWithZone((Class)type metadata accessor for CRLConnectorModeMessageViewState()) init];
  v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_skipNextToolbarUpdate] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController] = 0;
  uint64_t v25 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState;
  *(void *)&v10[v25] = [objc_allocWithZone((Class)type metadata accessor for CRLScenesNavigatorState()) init];
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigationCrossfadeSnapshotLayers] = _swiftEmptyArrayStorage;
  uint64_t v26 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
  *(void *)&v10[v26] = [objc_allocWithZone((Class)type metadata accessor for CRLScenesPopoverState()) init];
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPresenter] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesPresenter] = 0;
  uint64_t v27 = &v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex];
  *(void *)uint64_t v27 = 0;
  v27[8] = 1;
  uint64_t v28 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_sceneToContentDict;
  *(void *)&v10[v28] = sub_100A3C944((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_presentedSceneAlert] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_findSession] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___findReplaceController] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_freehandDrawingHighlightManager] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_keyboardTopEdgeLayoutGuideConstraint] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_topUnobscuredRectLayoutGuideConstraint] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomUnobscuredRectLayoutGuideConstraint] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_leadingUnobscuredRectLayoutGuideConstraint] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_trailingUnobscuredRectLayoutGuideConstraint] = 0;
  v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isChangingDocumentModeToHandwriting] = 0;
  uint64_t v29 = &v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shapeLibrarySearchTerm];
  *(void *)uint64_t v29 = 0;
  *((void *)v29 + 1) = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipObservation] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v30 = &v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip];
  *(_OWORD *)uint64_t v30 = 0u;
  *((_OWORD *)v30 + 1) = 0u;
  *((void *)v30 + 4) = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPresentationView] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_mediaReplacer] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___unobscuredRectLayout] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___keyboardFrameLayoutGuide] = 0;
  v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isClosing] = 0;
  v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isClosed] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followHUD] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followBorderHighlightView] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_appAnalyticsBoardTracker] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_stateRestorationHelper] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_viewScaleObservation] = 0;
  id v31 = &v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollObserver];
  *(_OWORD *)id v31 = 0u;
  *((_OWORD *)v31 + 1) = 0u;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray] = 0;
  v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_didRestoreCanvasViewState] = 0;
  v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled] = 2;
  v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled] = 2;
  v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isAnimatingToScene] = 0;
  uint64_t v32 = &v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastPrintContentDate];
  uint64_t v33 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 1, 1, v33);
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator] = a1;
  *(void *)(*(void *)&a1[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator]
            + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_delegate
            + 8) = &off_101516700;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] = a3;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController] = a4;
  uint64_t v34 = *(void **)&a1[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard];
  int64_t v35 = (objc_class *)type metadata accessor for CRLGelatoShareSheetProvider();
  unint64_t v36 = (char *)objc_allocWithZone(v35);
  unint64_t v37 = &v36[OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_thumbnailProvider];
  *(void *)unint64_t v37 = 0;
  *((void *)v37 + 1) = 0;
  *(void *)&v36[OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_presentingViewController] = 0;
  *(void *)&v36[OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_icc] = a3;
  *(void *)&v36[OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_board] = v34;
  *(void *)&v36[OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_boardLibrary] = a2;
  *(void *)unint64_t v37 = 0;
  *((void *)v37 + 1) = 0;
  id v38 = a3;
  id v39 = v34;
  id v40 = a2;
  id v41 = v38;
  id v42 = v39;
  id v43 = v40;
  uint64_t v73 = a1;
  id v44 = a4;
  swift_unknownObjectRelease();
  v80.receiver = v36;
  v80.super_class = v35;
  id v45 = [super init];

  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shareSheetProvider] = v45;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_statusHUDManager] = [objc_allocWithZone((Class)type metadata accessor for CRLStatusHUDManager()) init];

  v79.receiver = v10;
  v79.super_class = (Class)type metadata accessor for CRLiOSBoardViewController();
  uint64_t v46 = (char *)[v79 initWithNibName:0 bundle:0];
  uint64_t v47 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator;
  uint64_t v48 = *(void **)(*(void *)&v46[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  type metadata accessor for CRLViewStateRestorationHelper();
  swift_allocObject();
  id v49 = v41;
  id v50 = v43;
  uint64_t v51 = v46;
  id v52 = v48;
  uint64_t v53 = sub_10069BDFC(v52, v50, v49);

  *(void *)&v51[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_stateRestorationHelper] = v53;
  swift_release();
  id v54 = objc_allocWithZone((Class)type metadata accessor for CRLGelatoInterstitialUIController());
  unint64_t v55 = v51;
  id v56 = sub_100DE9208(v55);
  uint64_t v57 = *(void **)&v55[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController];
  *(void *)&v55[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController] = v56;

  sub_100E3DF04();
  [*(id *)(*(void *)&v46[v47] + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_undoManager) addDelegate:v55];
  uint64_t v77 = &type metadata for CRLFeatureFlags;
  unint64_t v58 = sub_1005396A8();
  unint64_t v78 = v58;
  v76[0] = 12;
  LOBYTE(v52) = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v76);
  if (v52)
  {
    id v75 = v44;
    uint64_t v59 = *(char **)(*(void *)&v46[v47] + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
    uint64_t v60 = *(void **)&v59[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_uiDelegates];
    unint64_t v61 = v55;
    unint64_t v62 = v59;
    if (([v60 containsObject:v61] & 1) == 0) {
      [v60 addObject:v61];
    }

    unint64_t v63 = *(char **)(*(void *)&v46[v47] + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
    Swift::Int v64 = *(void **)&v63[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_interactiveCanvasControllers];
    uint64_t v65 = v63;
    if (([v64 containsObject:v49] & 1) == 0) {
      [v64 addObject:v49];
    }

    id v44 = v75;
  }
  uint64_t v77 = &type metadata for CRLFeatureFlags;
  unint64_t v78 = v58;
  v76[0] = 14;
  char v66 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v76);
  if (v66)
  {
    id v67 = [objc_allocWithZone((Class)CRLiOSFreehandDrawingHighlightManager) initWithInteractiveCanvasController:v49];
    uint64_t v68 = *(void **)&v55[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_freehandDrawingHighlightManager];
    *(void *)&v55[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_freehandDrawingHighlightManager] = v67;
  }
  uint64_t v77 = &type metadata for CRLFeatureFlags;
  unint64_t v78 = v58;
  v76[0] = 1;
  char v69 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v76);
  if (v69)
  {
    unint64_t v70 = *(void **)(*(void *)&v46[v47] + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController);
    type metadata accessor for CRLAASBoardTracker();
    swift_allocObject();
    uint64_t v71 = sub_1006966FC((uint64_t)v55, v70);

    *(void *)&v55[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_appAnalyticsBoardTracker] = v71;
    swift_release();
  }
  else
  {
  }
  return v55;
}

void sub_100E3DF04()
{
  id v1 = sub_100E3C594();
  [v1 addModeObserver:v0];

  id v2 = [self defaultCenter];
  uint64_t v3 = qword_10166F078;
  id v4 = objc_retain(*(id *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                         + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController));
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_10171A808;
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10[4] = sub_100E77370;
  void v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = *(void *)"";
  v10[2] = sub_1005E5680;
  v10[3] = &unk_101530A48;
  id v7 = _Block_copy(v10);
  id v8 = v4;
  swift_release();
  id v9 = [v2 addObserverForName:v5 object:v8 queue:0 usingBlock:v7];
  _Block_release(v7);

  swift_unknownObjectRelease();
  if (qword_10166F878 != -1) {
    swift_once();
  }
  [v2 addObserver:v0 selector:"iCloudStatusDidChangeWithNotification:" name:qword_10171B790 object:0];
  if (qword_1016701B0 != -1) {
    swift_once();
  }
  [v2 addObserver:v0 selector:"networkReachabilityDidChangeWithNotification:" name:qword_10171CB98 object:0];
  if (qword_10166F428 != -1) {
    swift_once();
  }
  [v2 addObserver:v0 selector:"syncControllerSavedZoneWithNotification:" name:qword_10171ADB8 object:0];
}

void sub_100E3E1C4()
{
  uint64_t v0 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = &v29[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for UUID();
  __chkstk_darwin(v4 - 8, v5);
  id v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v13 = (char *)Strong;
    uint64_t v14 = swift_unknownObjectWeakLoadStrong();
    if (v14)
    {
      unint64_t v15 = (void *)v14;
      Class v16 = (char *)*(id *)(v14 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController);

      uint64_t v17 = *(char **)(*(void *)&v13[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                     + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
      uint64_t v18 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
      uint64_t v19 = *(void *)&v17[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      sub_100E77E88(v19, (uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
      uint64_t v20 = v17;
      swift_retain();
      sub_1005057FC(&qword_101674550);
      CRRegister.wrappedValue.getter();
      sub_100E77EF0((uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
      swift_release();
      id v21 = (uint64_t *)(*(void *)&v17[v18] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      uint64_t v22 = *v21;
      unint64_t v23 = v21[1];
      swift_bridgeObjectRetain();
      sub_100753370((uint64_t)v7, v22, v23, (uint64_t)v11);

      unint64_t v24 = *(void *)&v16[OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights];
      __chkstk_darwin(v25, v26);
      *(void *)&v29[-16] = v11;
      swift_bridgeObjectRetain();
      uint64_t v27 = (char *)sub_100ED4F9C((uint64_t (*)(id *))sub_1007E7080, (uint64_t)&v29[-32], v24);
      swift_bridgeObjectRelease();
      if (v27)
      {
        id v28 = [objc_allocWithZone((Class)SWHighlightChangeEvent) initWithHighlight:*(void *)&v27[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight] trigger:1];
        [*(id *)&v16[OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_highlightCenter] postNoticeForHighlightEvent:v28];
      }
      else
      {
      }
      sub_100E77EF0((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
    }
    else
    {
    }
  }
}

void sub_100E3E52C()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = &v61[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100E481F4((uint64_t)v64);
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0;
  *(void *)(v6 + 24) = 0;
  *(void *)(v6 + 32) = v0;
  long long v7 = v64[0];
  *(_OWORD *)(v6 + 56) = v64[1];
  long long v8 = v65[0];
  *(_OWORD *)(v6 + 72) = v64[2];
  *(_OWORD *)(v6 + 88) = v8;
  *(_OWORD *)(v6 + 97) = *(_OWORD *)((char *)v65 + 9);
  *(_OWORD *)(v6 + 40) = v7;
  uint64_t v9 = v0;
  sub_100A99318(v64, (void (*)(uint64_t, uint64_t))sub_1005FA2A0);
  sub_100B107F4((uint64_t)v4, (uint64_t)&unk_10169FC30, v6);
  swift_release();
  sub_100A99318(v64, (void (*)(uint64_t, uint64_t))sub_100514260);
  sub_100522F00((uint64_t)v4, &qword_101672BB0);
  uint64_t v10 = *(void *)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator];
  [*(id *)(v10 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_undoManager) removeDelegate:v9];
  uint64_t v11 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator;
  uint64_t v12 = *(char **)(v10 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
  id v13 = *(void **)&v12[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_uiDelegates];
  uint64_t v14 = v12;
  if ([v13 containsObject:v9]) {
    [v13 removeObject:v9];
  }

  unint64_t v15 = *(char **)(v10 + v11);
  Class v16 = *(void **)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  uint64_t v17 = *(void **)&v15[OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_interactiveCanvasControllers];
  uint64_t v18 = v15;
  if ([v17 containsObject:v16]) {
    [v17 removeObject:v16];
  }

  uint64_t v19 = *(void **)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray];
  if (v19)
  {
    id v20 = v19;
    sub_100D43D04();
  }
  uint64_t v21 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasViewController;
  uint64_t v22 = *(void **)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasViewController];
  if (v22)
  {
    id v23 = v22;
    sub_1007E7514();

    uint64_t v22 = *(void **)&v9[v21];
  }
  *(void *)&v9[v21] = 0;

  id v24 = sub_100E3C594();
  uint64_t v25 = *(void **)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController];
  [v24 removeModeObserver:v25];

  id v26 = sub_100E3C594();
  [v26 removeModeObserver:v9];

  unint64_t v62 = &type metadata for CRLFeatureFlags;
  unint64_t v63 = sub_1005396A8();
  v61[0] = 17;
  LOBYTE(v26) = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v61);
  uint64_t v27 = &selRef_crlaxPerformCleanupTasksPriorToRemovalFromCanvas;
  id v28 = &selRef_providesGuidesForChildLayouts;
  if (v26)
  {
    uint64_t v29 = *(void **)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController];
    if (v29)
    {
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        id v31 = (void *)Strong;
        uint64_t v32 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
        id v33 = v29;
        id v34 = v32;

        [v34 removeDecorator:v33];
      }
    }
    int64_t v35 = *(unsigned __int8 **)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPresenter];
    if (v35)
    {
      uint64_t v36 = OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_isTornDown;
      int v37 = v35[OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_isTornDown];
      id v38 = v35;
      if (v37 == 1)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"teardown()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLScenesViewController_i.swift", 95, 2, 56, (uint64_t)"Should not call tearDown twice.", 31, 2u, (uint64_t)_swiftEmptyArrayStorage);
        id v28 = &selRef_providesGuidesForChildLayouts;
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"teardown()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLScenesViewController_i.swift", 95, 2, 56);
      }
      v35[v36] = 1;

      uint64_t v27 = &selRef_crlaxPerformCleanupTasksPriorToRemovalFromCanvas;
    }
    id v39 = *(void **)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesPresenter];
    if (v39)
    {
      id v40 = self;
      id v41 = v39;
      id v42 = [v40 v27[351]];
      [v42 v28[264] v41];

      uint64_t v43 = OBJC_IVAR____TtC8Freeform32CRLCompactScenesViewController_i_isTornDown;
      if (v41[OBJC_IVAR____TtC8Freeform32CRLCompactScenesViewController_i_isTornDown] == 1)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"teardown()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLScenesViewController_i.swift", 95, 2, 174, (uint64_t)"Should not call tearDown twice.", 31, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"teardown()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLScenesViewController_i.swift", 95, 2, 174);
      }
      v41[v43] = 1;
    }
  }
  [v25 teardown];
  id v44 = [v16 textInputResponder];
  [v44 resignFirstResponder];

  [v16 teardown];
  [v16 setDelegate:0];
  [v25 setUserDialogPresenter:0];
  [v25 setDelegate:0];
  [v16 setLayerHost:0];
  id v45 = sub_100E3C474();
  [v45 teardown];

  id v46 = [v9 view];
  if (v46)
  {
    uint64_t v47 = v46;
    type metadata accessor for CRLiOSBoardView();
    *(void *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8Freeform15CRLiOSBoardView_delegate + 8) = 0;
    swift_unknownObjectWeakAssign();

    uint64_t v48 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController;
    id v49 = *(void **)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController];
    if (v49)
    {
      id v50 = v49;
      sub_100DE9B38();

      id v49 = *(void **)&v9[v48];
    }
    *(void *)&v9[v48] = 0;

    uint64_t v51 = *(void **)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController];
    *(void *)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController] = 0;

    id v52 = *(void **)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewController];
    *(void *)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewController] = 0;

    uint64_t v53 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_freehandDrawingHighlightManager;
    [*(id *)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_freehandDrawingHighlightManager] teardown];
    id v54 = *(void **)&v9[v53];
    *(void *)&v9[v53] = 0;

    id v55 = [self sharedPrintController];
    [v55 dismissAnimated:0];

    id v56 = [self v27[351]];
    [v56 v28[264] v9];

    [self removeKeyboardObserver:v9];
    sub_100AEA51C();
    uint64_t v57 = &v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_subscriptions];
    swift_beginAccess();
    uint64_t v58 = swift_bridgeObjectRetain();
    sub_100E39238(v58);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v57 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease();
    uint64_t v59 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isTornDown;
    if (v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isTornDown] == 1)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"tearDown()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 414, (uint64_t)"Should not call tearDown() twice.", 33, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"tearDown()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 414);
    }
    v9[v59] = 1;
  }
  else
  {
    __break(1u);
  }
}

id sub_100E3EE14()
{
  if ((v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isTornDown] & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 419, (uint64_t)"Must call tearDown() before deallocation occurs.", 48, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 419);
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSBoardViewController();
  return [super dealloc];
}

uint64_t sub_100E3F62C()
{
  return type metadata accessor for CRLiOSBoardViewController();
}

uint64_t type metadata accessor for CRLiOSBoardViewController()
{
  uint64_t result = qword_10169F758;
  if (!qword_10169F758) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100E3F680()
{
  v1[8] = v0;
  type metadata accessor for MainActor();
  v1[9] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[10] = v3;
  v1[11] = v2;
  return _swift_task_switch(sub_100E3F718, v3, v2);
}

uint64_t sub_100E3F718()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_didRestoreCanvasViewState;
  v0[12] = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_didRestoreCanvasViewState;
  if ((*(unsigned char *)(v1 + v2) & 1) != 0
    || (uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_stateRestorationHelper),
        (v0[13] = v3) == 0))
  {
    swift_release();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    swift_retain();
    return _swift_task_switch(sub_100E3F7E8, v3, 0);
  }
}

uint64_t sub_100E3F7E8()
{
  uint64_t v1 = *(void *)(v0 + 104);
  if (*(unsigned char *)(v1 + 144))
  {
    char v2 = *(unsigned char *)(v1 + 224);
    *(unsigned char *)(v0 + 193) = v2;
    unint64_t v3 = *(void *)(v1 + 216);
    *(void *)(v0 + 120) = v3;
    uint64_t v4 = *(void *)(v1 + 208);
    *(void *)(v0 + 128) = v4;
    unint64_t v5 = *(void *)(v1 + 200);
    *(void *)(v0 + 136) = v5;
    uint64_t v6 = *(void *)(v1 + 192);
    *(void *)(v0 + 144) = v6;
    uint64_t v7 = *(void *)(v1 + 184);
    *(void *)(v0 + 152) = v7;
    uint64_t v8 = *(void *)(v1 + 176);
    *(void *)(v0 + 160) = v8;
    uint64_t v9 = *(void *)(v1 + 168);
    *(void *)(v0 + 168) = v9;
    uint64_t v10 = *(void *)(v1 + 160);
    *(void *)(v0 + 176) = v10;
    uint64_t v11 = *(void *)(v1 + 152);
    *(void *)(v0 + 184) = v11;
    sub_100E7728C(v11, v10, v9, v8, v7, v6, v5, v4, v3, v2);
    swift_release();
    uint64_t v12 = *(void *)(v0 + 80);
    uint64_t v13 = *(void *)(v0 + 88);
    return _swift_task_switch(sub_100E3FAEC, v12, v13);
  }
  else
  {
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v14;
    void *v14 = v0;
    v14[1] = sub_100E3F918;
    return sub_10069B368();
  }
}

uint64_t sub_100E3F918()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 104);
  return _swift_task_switch(sub_100E3FA28, v2, 0);
}

uint64_t sub_100E3FA28()
{
  uint64_t v1 = *(void *)(v0 + 104);
  char v2 = *(unsigned char *)(v1 + 224);
  *(unsigned char *)(v0 + 193) = v2;
  unint64_t v3 = *(void *)(v1 + 216);
  *(void *)(v0 + 120) = v3;
  uint64_t v4 = *(void *)(v1 + 208);
  *(void *)(v0 + 128) = v4;
  unint64_t v5 = *(void *)(v1 + 200);
  *(void *)(v0 + 136) = v5;
  uint64_t v6 = *(void *)(v1 + 192);
  *(void *)(v0 + 144) = v6;
  uint64_t v7 = *(void *)(v1 + 184);
  *(void *)(v0 + 152) = v7;
  uint64_t v8 = *(void *)(v1 + 176);
  *(void *)(v0 + 160) = v8;
  uint64_t v9 = *(void *)(v1 + 168);
  *(void *)(v0 + 168) = v9;
  uint64_t v10 = *(void *)(v1 + 160);
  *(void *)(v0 + 176) = v10;
  uint64_t v11 = *(void *)(v1 + 152);
  *(void *)(v0 + 184) = v11;
  sub_100E7728C(v11, v10, v9, v8, v7, v6, v5, v4, v3, v2);
  swift_release();
  uint64_t v12 = *(void *)(v0 + 80);
  uint64_t v13 = *(void *)(v0 + 88);
  return _swift_task_switch(sub_100E3FAEC, v12, v13);
}

uint64_t sub_100E3FAEC()
{
  int v1 = *(unsigned __int8 *)(v0 + 193);
  swift_release();
  if (v1 != 2)
  {
    uint64_t v2 = *(void *)(v0 + 184);
    uint64_t v3 = *(void *)(v0 + 168);
    uint64_t v15 = *(void *)(v0 + 160);
    uint64_t v16 = *(void *)(v0 + 176);
    uint64_t v4 = *(void *)(v0 + 144);
    uint64_t v20 = *(void *)(v0 + 152);
    uint64_t v6 = *(void *)(v0 + 128);
    unint64_t v5 = *(void *)(v0 + 136);
    unint64_t v7 = *(void *)(v0 + 120);
    char v19 = *(unsigned char *)(v0 + 193);
    uint64_t v8 = *(void *)(v0 + 96);
    uint64_t v9 = *(void *)(v0 + 64);
    *(unsigned char *)(v0 + 192) = v20 & 1;
    id v17 = *(id *)(v9 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
    uint64_t v18 = v8;
    uint64_t v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = v2;
    *(void *)(v11 + 32) = v16;
    *(void *)(v11 + 40) = v3;
    *(void *)(v11 + 48) = v15;
    *(unsigned char *)(v11 + 56) = *(unsigned char *)(v0 + 192);
    *(void *)(v11 + 64) = v4;
    *(void *)(v11 + 72) = v5;
    *(void *)(v11 + 80) = v6;
    *(void *)(v11 + 88) = v7;
    *(unsigned char *)(v11 + 96) = v19 & 1;
    *(void *)(v0 + 48) = sub_100E772F0;
    *(void *)(v0 + 56) = v11;
    *(void *)(v0 + 16) = _NSConcreteStackBlock;
    *(void *)(v0 + 24) = *(void *)"";
    *(void *)(v0 + 32) = sub_100679958;
    *(void *)(v0 + 40) = &unk_1015309F8;
    uint64_t v12 = _Block_copy((const void *)(v0 + 16));
    sub_1005FA2A0(v4, v5);
    sub_1005FA2A0(v6, v7);
    swift_release();
    [v17 performBlockOnMainThreadAfterLayoutIfNecessary:v12];
    _Block_release(v12);
    *(unsigned char *)(v9 + v18) = 1;
    sub_10069C030(v2, v16, v3, v15, v20, v4, v5, v6, v7, v19);
  }
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

void sub_100E3FD08()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CRLiOSBoardView();
  unint64_t v5 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v5[OBJC_IVAR____TtC8Freeform15CRLiOSBoardView_delegate + 8] = &off_10152FAA0;
  swift_unknownObjectWeakAssign();
  [v0 setView:v5];
  id v6 = [objc_allocWithZone((Class)CRLCanvasView) init];
  id v7 = [v6 canvasLayer];
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  type metadata accessor for MainActor();
  uint64_t v9 = v0;
  uint64_t v10 = static MainActor.shared.getter();
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = v10;
  void v11[3] = &protocol witness table for MainActor;
  v11[4] = v9;
  sub_1005912D0((uint64_t)v4, (uint64_t)&unk_10169FD78, (uint64_t)v11);
  swift_release();
  uint64_t v12 = *(void **)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController];
  [v12 setView:v6];
  uint64_t v13 = *(void **)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView];
  id v76 = v6;
  [v13 addSubview:v6];
  NSString v14 = [self iOSBoardViewControllerScrollViewIdentifier];
  if (!v14)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v13 setAccessibilityIdentifier:v14];

  uint64_t v15 = *(void **)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  [v12 setInteractiveCanvasController:v15];
  [v15 setLayerHost:v12];
  [v15 setDelegate:v9];
  [v12 setDelegate:v9];
  [v12 setUserDialogPresenter:v9];
  id v16 = sub_100E3C594();
  [v16 addModeObserver:v12];

  [v15 setShouldCanvasScrollingSizeGrowToFitBoardContent:1];
  id v77 = v7;
  [v7 setUnscaledSize:0 fixFrame:1000.0, 500.0];
  [v15 setCreateRepsForOffscreenLayouts:0];
  id v17 = [objc_allocWithZone((Class)CRLFreehandDrawingToolkitUIState) init];
  id v18 = objc_allocWithZone((Class)CRLFreehandDrawingToolkit);
  id v75 = v17;
  id v19 = [v18 initWithDelegate:v9 uiState:v17];
  [v15 setFreehandDrawingToolkit:v19];

  uint64_t v20 = (objc_class *)type metadata accessor for CRLiOSPencilKitCanvasViewController();
  uint64_t v21 = objc_allocWithZone(v20);
  swift_unknownObjectWeakInit();
  v21[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_isTornDown] = 0;
  *(void *)&v21[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_smartSelectionManager] = 0;
  *(void *)&v21[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_smartSelectionView] = 0;
  swift_unknownObjectUnownedInit();
  v78.receiver = v21;
  v78.super_class = v20;
  [super initWithNibName:0 bundle:0];
  [v9 addChildViewController:v22];
  [v22 didMoveToParentViewController:v9];
  id v23 = *(void **)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasViewController];
  *(void *)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasViewController] = v22;
  id v24 = v22;

  id v74 = v24;
  if (![v24 view])
  {
    __break(1u);
    return;
  }
  self;
  uint64_t v25 = swift_dynamicCastObjCClassUnconditional();
  id v26 = *(void **)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasView];
  *(void *)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasView] = v25;

  id v27 = [objc_allocWithZone((Class)UIViewController) initWithNibName:0 bundle:0];
  [v9 addChildViewController:v27];
  [v27 didMoveToParentViewController:v9];
  [v27 setView:v13];
  id v28 = *(void **)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasScrollViewController];
  *(void *)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasScrollViewController] = v27;
  id v29 = v27;

  [v29 addChildViewController:v12];
  [v12 didMoveToParentViewController:v29];
  [v13 setContentInsetAdjustmentBehavior:3];
  uint64_t v30 = [v15 canvasBackground];
  (*(void (**)(void))((swift_isaMask & *v30) + 0x80))();

  type metadata accessor for CRLCanvasBackgroundView();
  uint64_t v31 = swift_dynamicCastMetatype();
  uint64_t v32 = &off_10169F000;
  uint64_t v73 = v5;
  if (!v31)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"loadView()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 508, (uint64_t)"Unable to determine canvas background view class!", 49, 2u, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v32 = &off_10169F000;
    uint64_t v46 = 508;
LABEL_9:
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"loadView()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, v46);
    goto LABEL_10;
  }
  id v33 = (objc_class *)v31;
  [v13 frame];
  id v38 = [objc_allocWithZone(v33) initWithFrame:v34, v35, v36, v37];
  uint64_t v39 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasBackgroundView;
  id v40 = *(void **)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasBackgroundView];
  *(void *)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasBackgroundView] = v38;

  id v41 = *(void **)&v9[v39];
  if (!v41)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"loadView()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 505, (uint64_t)"Unable to load canvas background view!", 38, 2u, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v32 = &off_10169F000;
    uint64_t v46 = 505;
    goto LABEL_9;
  }
  id v42 = self;
  id v43 = v41;
  id v44 = [v42 whiteColor];
  [v43 setBackgroundColor:v44];

  [v43 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v45 = *(void **)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_snapshotViewWrapper];
  [v45 addSubview:v43];
  [v45 addSubview:v13];

LABEL_10:
  uint64_t v47 = *(void **)((char *)v32[98] + (void)v9);
  if (v47)
  {
    id v48 = [v47 layer];
    if (v48)
    {
      id v49 = v48;
      type metadata accessor for CRLCanvasDotGridLayer();
      id v50 = (char *)swift_dynamicCastClass();
      if (v50)
      {
        uint64_t v51 = v50;
        v50[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas] = 0;
        [v50 setNeedsLayout];
        *(void *)&v51[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale] = 0x3FF0000000000000;
        uint64_t v52 = OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_enabled;
        if (v51[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_enabled] == 1) {
          [v51 setNeedsLayout];
        }
        swift_unknownObjectWeakAssign();
        v51[v52] = 1;
        [v51 setNeedsLayout];
        uint64_t v53 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasBackgroundLayer;
        id v54 = *(void **)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasBackgroundLayer];
        *(void *)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasBackgroundLayer] = v51;
        id v55 = v49;

        [v77 setAssociatedBackgroundLayer:*(void *)&v9[v53]];
        goto LABEL_18;
      }
    }
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"loadView()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 519, (uint64_t)"Unable to load canvas background layer!", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"loadView()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 519);
LABEL_18:
  id v56 = objc_retain(*(id *)(*(void *)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                          + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard));
  sub_100CFCD4C();

  sub_1005057FC(&qword_101673060);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v15 setInfosToDisplay:isa];

  id v58 = sub_100E3C474();
  id v59 = [*(id *)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_selectionModelTranslator] selectionPathForInfos:0];
  [v58 setSelectionPath:v59];

  uint64_t v60 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray;
  unint64_t v61 = *(void **)&v9[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray];
  unint64_t v62 = v73;
  if (v61)
  {
    id v63 = v61;
    Swift::Int v64 = (char *)sub_100D43BC0();
    if (v64)
    {
      uint64_t v65 = v64;
      id v66 = *(id *)&v64[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
    }
    else
    {
      sub_100D43B08();
      id v66 = v67;
    }
    [v66 _disableTapInteractionWhenNotVisible];

    sub_100D43D04();
  }
  id v68 = sub_100E48CC8();
  char v69 = *(void **)&v9[v60];
  *(void *)&v9[v60] = v68;

  sub_100E4AA90();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  if (!Strong)
  {
    id v71 = [objc_allocWithZone((Class)UIFindInteraction) initWithSessionDelegate:v9];
    [v13 addInteraction:v71];
    swift_unknownObjectWeakAssign();
  }
}

uint64_t sub_100E408A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  v4[3] = type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  unint64_t v5 = (void *)swift_task_alloc();
  v4[5] = v5;
  *unint64_t v5 = v4;
  v5[1] = sub_100E40954;
  return sub_100E3F680();
}

uint64_t sub_100E40954()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100E40A90, v1, v0);
}

uint64_t sub_100E40A90()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  uint64_t v2 = *(void **)(*(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  id v4 = v2;
  id v5 = [v3 versionFidelityAlertWasShown];
  unint64_t v6 = sub_1002094A4();
  unint64_t v7 = sub_100D08BEC();

  if (v6 < v7 && v6 != (void)v5) {
    sub_100E45F5C();
  }
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

void sub_100E40BB4()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  v33.receiver = v0;
  v33.super_class = (Class)type metadata accessor for CRLiOSBoardViewController();
  [super viewDidLoad];
  id v2 = [v0 view];
  if (!v2) {
    goto LABEL_24;
  }
  uint64_t v3 = v2;
  id v4 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController];
  id v5 = [*(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController] canvasView];
  if (!v5)
  {
LABEL_23:

LABEL_24:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"viewDidLoad()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 547, (uint64_t)"Unable to load view hierarchy!", 30, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"viewDidLoad()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 547);
    return;
  }
  unint64_t v6 = v5;
  unint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasView];
  if (!v7)
  {
    id v8 = v5;
LABEL_22:

    uint64_t v3 = v8;
    goto LABEL_23;
  }
  id v8 = v7;
  id v9 = [v4 canvasLayer];
  if (!v9)
  {

    uint64_t v3 = v6;
    goto LABEL_22;
  }
  uint64_t v10 = v9;
  [v4 viewDidLoad];
  id v11 = [v1 navigationItem];
  sub_100E769FC(&qword_10169FC68, (void (*)(uint64_t))type metadata accessor for CRLiOSBoardViewController);
  swift_unknownObjectRetain();
  UINavigationItem.renameDelegate.setter();

  uint64_t v12 = self;
  id v13 = [v12 whiteColor];
  [v3 setBackgroundColor:v13];

  [v10 setAllowsPinchZoom:1];
  id v14 = v10;
  id v15 = [v12 clearColor];
  id v16 = [v15 CGColor];

  [v14 setBackgroundColor:v16];
  uint64_t v32 = v14;

  id v17 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView];
  id v18 = [v12 clearColor];
  [v17 setBackgroundColor:v18];

  [v17 setIndicatorStyle:1];
  [v17 setDecelerationRate:UIScrollViewDecelerationRateFast];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v17 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v19 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_snapshotViewWrapper];
  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v3 addSubview:v19];
  id v20 = sub_100E3CC3C();
  [v3 addSubview:v20];

  [v3 addSubview:v8];
  Class isa = [v19 crl_constraintsToAllSidesOfItem:v17];
  if (!isa)
  {
    sub_10050BF48(0, (unint64_t *)&qword_101674200);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  id v22 = self;
  [v22 activateConstraints:isa];

  Class v23 = [v3 crl_constraintsToAllSidesOfItem:v19];
  if (!v23)
  {
    sub_10050BF48(0, (unint64_t *)&qword_101674200);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class v23 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  [v22 activateConstraints:v23];

  id v24 = sub_100E3CC3C();
  Class v25 = [v3 crl_constraintsToAllSidesOfItem:v24];

  if (!v25)
  {
    sub_10050BF48(0, (unint64_t *)&qword_101674200);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class v25 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  [v22 activateConstraints:v25];

  Class v26 = [v3 crl_constraintsToAllSidesOfItem:v8];
  if (!v26)
  {
    sub_10050BF48(0, (unint64_t *)&qword_101674200);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class v26 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  [v22 activateConstraints:v26];

  id v27 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasBackgroundView];
  if (v27)
  {
    id v28 = v27;
    Class v29 = [v3 crl_constraintsToAllSidesOfItem:v28];
    if (!v29)
    {
      sub_10050BF48(0, (unint64_t *)&qword_101674200);
      static Array._unconditionallyBridgeFromObjectiveC(_:)();
      Class v29 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    [v22 activateConstraints:v29];
  }
  [v17 setScrollsToTop:0];
  id v30 = [self defaultCenter];
  if (qword_1016700C0 != -1) {
    swift_once();
  }
  [v30 addObserver:v1 selector:"handleBoardLibrarySnapshotUpdateWithNotification:" name:qword_10171C6C8 object:0];

  sub_10050BF48(0, &qword_101673EA0);
  static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
  UIViewController.registerForTraitChanges<A>(_:handler:)();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_1005057FC((uint64_t *)&unk_10168D9A0);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_10117D8C0;
  *(void *)(v31 + 32) = type metadata accessor for UITraitVerticalSizeClass();
  *(void *)(v31 + 40) = &protocol witness table for UITraitVerticalSizeClass;
  *(void *)(v31 + 48) = type metadata accessor for UITraitHorizontalSizeClass();
  *(void *)(v31 + 56) = &protocol witness table for UITraitHorizontalSizeClass;
  UIViewController.registerForTraitChanges<A>(_:handler:)();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
}

void sub_100E41378()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  unint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v7 = *(char **)(*(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v8 = *(void *)&v7[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  uint64_t v9 = type metadata accessor for CRLBoardCRDTData(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v8 + *(int *)(v9 + 36), v2);
  uint64_t v10 = v7;
  uint64_t v11 = CROrderedSet.count.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);

  if ((v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isAnimatingToScene] & 1) == 0 && v11 == 1)
  {
    id v19 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState];
    id v20 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
    swift_getKeyPath();
    swift_getKeyPath();
    id v12 = v19;
    id v21 = v20;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    if (v22) {
  }
    }
  else
  {
    id v12 = *(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState];
  }
  sub_10080F260();

  uint64_t v13 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState;
  id v14 = *(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState];
  id v15 = [v1 traitCollection];
  [v15 crl_isCompactWidth];

  sub_10080F0E4();
  id v16 = *(void **)&v1[v13];
  id v17 = self;
  id v18 = v16;
  [v17 crl_landscapePhoneUI];
  sub_10080F10C();
}

void sub_100E41678(char a1)
{
  uint64_t v2 = v1;
  v42.receiver = v2;
  v42.super_class = (Class)type metadata accessor for CRLiOSBoardViewController();
  [super viewWillAppear:a1 & 1];
  uint64_t v4 = self;
  id v5 = [v4 sharedApplication];
  unsigned int v6 = [v5 isRunningTest];

  if (v6)
  {
    id v7 = [v4 sharedApplication];
    id v8 = [v7 delegate];

    if (!v8)
    {
LABEL_22:
      __break(1u);
      return;
    }
    type metadata accessor for CRLiOSAppDelegate();
    swift_dynamicCastClassUnconditional();
    uint64_t v9 = qword_10171B3E0;
    if (qword_10171B3E0)
    {
      uint64_t v10 = qword_10171B3F0;
      uint64_t ObjectType = swift_getObjectType();
      v41[0] = v9;
      id v12 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 24);
      swift_unknownObjectRetain();
      v12(v2, ObjectType, v10);
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
  id v13 = [v2 navigationController];
  if (v13)
  {
    id v14 = v13;
    id v15 = [v13 navigationBar];
    id v16 = [v15 standardAppearance];
    id v17 = self;
    id v18 = v16;
    id v19 = [v17 systemBackgroundColor];
    [v18 setBackgroundColor:v19];

    id v20 = v18;
    id v21 = [v17 clearColor];
    [v20 setShadowColor:v21];

    [v15 setStandardAppearance:v20];
    [v15 setScrollEdgeAppearance:v20];
    id v22 = [v14 toolbar];
    if (v22)
    {
      Class v23 = v22;
      id v24 = [v22 standardAppearance];

      id v25 = v24;
      id v26 = [v17 systemBackgroundColor];
      [v25 setBackgroundColor:v26];

      id v27 = v25;
      id v28 = [v17 clearColor];
      [v27 setShadowColor:v28];

      id v29 = [v14 toolbar];
      if (v29)
      {
        id v30 = v29;
        [v29 setStandardAppearance:v27];

        id v31 = [v14 toolbar];
        if (v31)
        {
          uint64_t v32 = v31;
          [v31 setScrollEdgeAppearance:v27];

          id v33 = [v14 toolbar];
          if (v33)
          {
            double v34 = v33;
            [v33 setTranslucent:0];

            goto LABEL_12;
          }
          goto LABEL_21;
        }
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
LABEL_12:
  sub_100E448BC();
  sub_1005B09AC();
  id v35 = [self defaultCenter];
  if (qword_10166F050 != -1) {
    swift_once();
  }
  [v35 addObserver:v2 selector:"undoHistoryChangedWithSender:" name:qword_10171A7E0 object:*(void *)(*(void *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]+ OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController)];

  double v36 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  [v36 updateCanvasDotGridVisibilityIfNeeded];
  v41[3] = &type metadata for CRLFeatureFlags;
  v41[4] = sub_1005396A8();
  LOBYTE(v41[0]) = 8;
  char v37 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v41);
  if (v37)
  {
    id v38 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController];
    if (v38)
    {
      id v39 = v38;
      sub_1009A6814();
    }
  }
  id v40 = [v2 traitCollection];
  [v36 documentIsSharedReadOnly];
  sub_1005C3F8C(v40);
}

void sub_100E41BF0(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v4 - 8, v5);
  id v7 = (char *)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101677360);
  __chkstk_darwin(v8 - 8, v9);
  unint64_t v146 = (char *)&v130 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_101691FA0);
  __chkstk_darwin(v11 - 8, v12);
  Swift::Int v139 = (char *)&v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_1005057FC(&qword_101677370);
  uint64_t v137 = *(void *)(v138 - 8);
  __chkstk_darwin(v138, v14);
  unint64_t v136 = (uint64_t *)((char *)&v130 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v142 = sub_1005057FC(&qword_10169FCA8);
  uint64_t v141 = *(void *)(v142 - 8);
  __chkstk_darwin(v142, v16);
  uint64_t v140 = (char *)&v130 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_1005057FC((uint64_t *)&unk_10169FCB0);
  uint64_t v144 = *(void *)(v145 - 8);
  __chkstk_darwin(v145, v18);
  Swift::Int v143 = (char *)&v130 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_1005057FC(&qword_101681298);
  uint64_t v134 = *(void *)(v135 - 8);
  __chkstk_darwin(v135, v20);
  double v133 = (char *)&v130 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v22 - 8, v23);
  unint64_t v149 = (unint64_t)&v130 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for UUID();
  __chkstk_darwin(v25 - 8, v26);
  uint64_t v150 = (char *)&v130 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v28 - 8, v29);
  uint64_t v152 = (uint64_t)&v130 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v31 = (objc_class *)type metadata accessor for CRLiOSBoardViewController();
  v157.receiver = v2;
  v157.super_class = v31;
  [super viewDidAppear:a1 & 1];
  uint64_t v32 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  [v32 setupTextInputResponder];
  id v33 = self;
  id v34 = [v33 sharedApplication];
  id v35 = [v34 delegate];

  if (!v35)
  {
    __break(1u);
    goto LABEL_35;
  }
  type metadata accessor for CRLiOSAppDelegate();
  uint64_t v36 = swift_dynamicCastClassUnconditional();
  id v37 = [v33 sharedApplication];
  unsigned int v38 = [v37 shouldRecordExtendedLaunchTime];
  uint64_t v148 = v7;
  uint64_t v147 = v31;
  if (v38
    && (uint64_t v39 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_didLogExtendedLaunchTime,
        (*(unsigned char *)(v36 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_didLogExtendedLaunchTime) & 1) == 0))
  {
    id v40 = [v37 _launchTestName];
    [v37 finishedTest:v40];

    *(unsigned char *)(v36 + v39) = 1;
  }
  else
  {
  }
  swift_unknownObjectRelease();
  id v41 = [v33 sharedApplication];
  unsigned int v42 = [v41 isRunningTest];

  if (v42)
  {
    id v43 = [v33 sharedApplication];
    id v44 = [v43 delegate];

    if (v44)
    {
      swift_dynamicCastClassUnconditional();
      id v45 = (void *)qword_10171B3E0;
      if (qword_10171B3E0)
      {
        uint64_t v46 = qword_10171B3F0;
        uint64_t ObjectType = swift_getObjectType();
        aBlock[0] = v45;
        id v48 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 32);
        swift_unknownObjectRetain();
        v48(v2, ObjectType, v46);
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
      goto LABEL_11;
    }
LABEL_35:
    __break(1u);
    return;
  }
LABEL_11:
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v50 = (char *)Strong;
    aBlock[0] = v32;
    swift_getKeyPath();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    id v51 = v32;
    uint64_t v52 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
    swift_release();
    swift_release();

    uint64_t v53 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_viewScaleObservation];
    *(void *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_viewScaleObservation] = v52;

    id v54 = [self defaultCenter];
    uint64_t v55 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v155 = sub_100E778D8;
    uint64_t v156 = v55;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(id *)"";
    aBlock[2] = sub_1005E5680;
    double v154 = (ValueMetadata *)&unk_101530D18;
    id v56 = _Block_copy(aBlock);
    swift_release();
    id v151 = v51;
    id v57 = [v54 addObserverForName:@"CRLCanvasUpdateScrollNotification" object:v51 queue:0 usingBlock:v56];
    _Block_release(v56);

    double v154 = (ValueMetadata *)swift_getObjectType();
    aBlock[0] = v57;
    uint64_t v58 = (uint64_t)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollObserver];
    swift_beginAccess();
    sub_1006063BC((uint64_t)aBlock, v58, &qword_101672BF0);
    swift_endAccess();
    id v59 = *(void **)&v50[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_shareErrorObservers];
    if (([v59 containsObject:v2] & 1) == 0) {
      [v59 addObject:v2];
    }
    uint64_t v60 = *(void *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator];
    uint64_t v61 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
    unint64_t v62 = *(char **)(v60 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    uint64_t v63 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v64 = *(void *)&v62[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    uint64_t v65 = v64;
    uint64_t v66 = v149;
    sub_100E77E88(v65, v149, type metadata accessor for CRLBoardCRDTData);
    id v67 = v62;
    swift_retain();
    sub_1005057FC(&qword_101674550);
    uint64_t v68 = (uint64_t)v150;
    CRRegister.wrappedValue.getter();
    sub_100E77EF0(v66, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    char v69 = (uint64_t *)(*(void *)&v62[v63] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v70 = *v69;
    unint64_t v71 = v69[1];
    swift_bridgeObjectRetain();
    uint64_t v72 = v152;
    sub_100753370(v68, v70, v71, v152);

    sub_100EE8550(v72);
    [v151 updateCanvasDotGridVisibilityIfNeeded];
    double v154 = &type metadata for CRLFeatureFlags;
    unint64_t v73 = sub_1005396A8();
    uint64_t v155 = (void (*)())v73;
    LOBYTE(aBlock[0]) = 8;
    LOBYTE(v70) = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
    if (v70)
    {
      id v74 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController];
      if (v74)
      {
        id v75 = v74;
        sub_1009A6814();
      }
    }
    id v76 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController];
    if (v76)
    {
      id v77 = v76;
      sub_100DEA324();
    }
    id v78 = [v2 traitCollection];
    sub_1005919EC(v78, (int)[v151 documentIsSharedReadOnly], (uint64_t)v158);
    sub_100591DC0(v158, 1);
    sub_1005393A8((uint64_t)v158);

    double v154 = &type metadata for CRLFeatureFlags;
    uint64_t v155 = (void (*)())v73;
    LOBYTE(aBlock[0]) = 17;
    char v79 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
    id v80 = [v2 traitCollection];
    unint64_t v81 = v80;
    uint64_t v132 = v60;
    uint64_t v131 = v61;
    if (v79)
    {
      unint64_t v149 = v73;
      sub_100E54A5C(v80);

      sub_100E55D74();
      uint64_t v82 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState];
      swift_beginAccess();
      id v83 = v82;
      sub_1005057FC(&qword_10169FCE0);
      Swift::Int v84 = v133;
      Published.projectedValue.getter();
      swift_endAccess();

      uint64_t v85 = swift_allocObject();
      *(void *)(v85 + 16) = v2;
      *(void *)(v85 + 24) = v50;
      sub_100523288(&qword_10169FCE8, &qword_101681298);
      uint64_t v86 = v2;
      unint64_t v130 = v86;
      uint64_t v150 = v50;
      uint64_t v87 = v50;
      uint64_t v88 = v135;
      Publisher<>.sink(receiveValue:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v134 + 8))(v84, v88);
      uint64_t v135 = (uint64_t)&v86[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_subscriptions];
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();
      swift_release();
      aBlock[0] = *(id *)(*(void *)(v60 + v61) + OBJC_IVAR____TtC8Freeform8CRLBoard_changeSummaryPublisher);
      sub_1005057FC((uint64_t *)&unk_10169FCF0);
      char v89 = v136;
      sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
      swift_retain();
      *char v89 = static OS_dispatch_queue.main.getter();
      static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
      uint64_t v90 = v137;
      uint64_t v91 = v138;
      (*(void (**)(uint64_t *, void, uint64_t))(v137 + 104))(v89, enum case for Publishers.TimeGroupingStrategy.byTime<A>(_:), v138);
      uint64_t v92 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
      uint64_t v93 = v139;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v139, 1, 1, v92);
      sub_1005057FC(&qword_10169A008);
      sub_100523288(&qword_10169FD00, &qword_10169A008);
      sub_10062E0F4((unint64_t *)&qword_101691FF0, (unint64_t *)&qword_1016725C0);
      uint64_t v94 = v140;
      Publisher.collect<A>(_:options:)();
      uint64_t v95 = (uint64_t)v93;
      BOOL v96 = v130;
      sub_100522F00(v95, &qword_101691FA0);
      (*(void (**)(uint64_t *, uint64_t))(v90 + 8))(v89, v91);
      swift_release();
      aBlock[0] = [self mainRunLoop];
      uint64_t v97 = type metadata accessor for NSRunLoop.SchedulerOptions();
      uint64_t v98 = (uint64_t)v146;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v146, 1, 1, v97);
      sub_10050BF48(0, &qword_1016773B0);
      sub_100523288((unint64_t *)&unk_10169FD08, &qword_10169FCA8);
      sub_10062E0F4(&qword_1016773C0, &qword_1016773B0);
      uint64_t v99 = v143;
      uint64_t v100 = v142;
      Publisher.receive<A>(on:options:)();
      sub_100522F00(v98, (uint64_t *)&unk_101677360);

      (*(void (**)(char *, uint64_t))(v141 + 8))(v94, v100);
      swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_100523288(&qword_10169FD18, (uint64_t *)&unk_10169FCB0);
      uint64_t v101 = v145;
      Publisher<>.sink(receiveValue:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v144 + 8))(v99, v101);
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();
      swift_release();
      uint64_t v102 = sub_100E82AC8();
      uint64_t v103 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
      uint64_t v104 = *(void **)&v96[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
      swift_getKeyPath();
      swift_getKeyPath();
      aBlock[0] = v102;
      id v105 = v102;
      id v106 = v104;
      static Published.subscript.setter();
      sub_100E41378();

      uint64_t v107 = *(void **)&v96[v103];
      swift_getKeyPath();
      swift_getKeyPath();
      id v108 = v107;
      static Published.subscript.getter();
      swift_release();
      swift_release();

      id v109 = aBlock[0];
      if (!aBlock[0]) {
        goto LABEL_25;
      }
      uint64_t v110 = *(void **)&v96[v103];
      swift_getKeyPath();
      swift_getKeyPath();
      id v111 = v110;
      static Published.subscript.getter();
      swift_release();
      swift_release();

      sub_100E39D64((uint64_t)v109, (unint64_t)aBlock[0], (uint64_t (*)(void))type metadata accessor for CRLSceneInfo);
      uint64_t v113 = v112;
      LOBYTE(v111) = v114;
      swift_bridgeObjectRelease();

      if (v111)
      {
LABEL_25:
        sub_100E41378();
      }
      else
      {
        uint64_t v115 = &v96[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex];
        *(void *)uint64_t v115 = v113;
        v115[8] = 0;
      }
      unint64_t v73 = v149;
      id v50 = v150;
    }
    else
    {
      sub_100E5589C(v80);
    }
    double v154 = &type metadata for CRLFeatureFlags;
    uint64_t v155 = (void (*)())v73;
    LOBYTE(aBlock[0]) = 8;
    char v116 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
    if (v116)
    {
      id v117 = [v2 traitCollection];
      sub_100E561EC(v117);

      sub_100E566F4();
    }
    uint64_t v118 = type metadata accessor for TaskPriority();
    uint64_t v119 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 56);
    uint64_t v120 = (uint64_t)v148;
    v119(v148, 1, 1, v118);
    type metadata accessor for MainActor();
    uint64_t v121 = v2;
    uint64_t v122 = static MainActor.shared.getter();
    uint64_t v123 = (void *)swift_allocObject();
    v123[2] = v122;
    v123[3] = &protocol witness table for MainActor;
    v123[4] = v121;
    sub_1005912D0(v120, (uint64_t)&unk_10169FCC8, (uint64_t)v123);
    swift_release();
    [self addKeyboardObserver:v121];
    sub_100E446A8(1);
    sub_1005A7080();
    sub_1005057FC((uint64_t *)&unk_10168D9A0);
    uint64_t v124 = swift_allocObject();
    *(_OWORD *)(v124 + 16) = xmmword_10117D8C0;
    *(void *)(v124 + 32) = type metadata accessor for UITraitHorizontalSizeClass();
    *(void *)(v124 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
    *(void *)(v124 + 48) = type metadata accessor for UITraitVerticalSizeClass();
    *(void *)(v124 + 56) = &protocol witness table for UITraitVerticalSizeClass;
    double v154 = (ValueMetadata *)v147;
    aBlock[0] = v121;
    uint64_t v125 = v121;
    uint64_t v126 = UIViewController.registerForTraitChanges(_:target:action:)();
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
    *(void *)&v125[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_traitChangeRegistration] = v126;
    swift_unknownObjectRelease();
    *(void *)(*(void *)&v125[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_cloudQuotaMessagingObserver] + 24) = &off_10152FAB0;
    swift_unknownObjectWeakAssign();
    sub_100AE9AC8();
    [*(id *)(v132 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_changeNotifier) addObserver:v125 forChangeSource:*(void *)(v132 + v131)];
    double v154 = &type metadata for CRLFeatureFlags;
    uint64_t v155 = (void (*)())v73;
    LOBYTE(aBlock[0]) = 1;
    LOBYTE(v124) = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
    if (v124)
    {
      v119((char *)v120, 1, 1, v118);
      uint64_t v127 = v125;
      uint64_t v128 = static MainActor.shared.getter();
      double v129 = (void *)swift_allocObject();
      v129[2] = v128;
      v129[3] = &protocol witness table for MainActor;
      v129[4] = v127;
      sub_1005912D0(v120, (uint64_t)&unk_10169FCD8, (uint64_t)v129);
      swift_release();
      if (*(void *)&v127[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_appAnalyticsBoardTracker])
      {
        swift_retain();
        sub_100696B74();
        swift_release();
      }
    }

    sub_100E77EF0(v152, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"viewDidAppear(_:)", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 640, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"viewDidAppear(_:)", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 640);
  }
}

uint64_t sub_100E43168(char *a1, void *a2, void *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = *a1;
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = 0;
  *(void *)(v12 + 32) = a3;
  *(void *)(v12 + 40) = a2;
  *(unsigned char *)(v12 + 48) = v10;
  id v13 = a3;
  id v14 = a2;
  sub_100B109D8((uint64_t)v9, (uint64_t)&unk_10169FD40, v12);
  swift_release();
  return sub_100522F00((uint64_t)v9, &qword_101672BB0);
}

uint64_t sub_100E43290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 148) = a6;
  *(void *)(v6 + 48) = a4;
  *(void *)(v6 + 56) = a5;
  *(void *)(v6 + 40) = a1;
  type metadata accessor for CRLBoardCRDTData(0);
  *(void *)(v6 + 64) = swift_task_alloc();
  type metadata accessor for UUID();
  *(void *)(v6 + 72) = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  *(void *)(v6 + 80) = swift_task_alloc();
  return _swift_task_switch(sub_100E43380, 0, 0);
}

uint64_t sub_100E43380()
{
  sub_1005057FC(&qword_101683000);
  uint64_t v1 = type metadata accessor for CRLBoardIdentifierAndValue(0);
  *(void *)(v0 + 88) = v1;
  *(_DWORD *)(v0 + 144) = *(_DWORD *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = swift_allocObject();
  *(void *)(v0 + 96) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_10117E810;
  type metadata accessor for MainActor();
  *(void *)(v0 + 104) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100E434A4, v4, v3);
}

uint64_t sub_100E434A4()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release();
  uint64_t v2 = *(void **)(*(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  *(void *)(v0 + 112) = v2;
  id v3 = v2;
  return _swift_task_switch(sub_100E43538, 0, 0);
}

uint64_t sub_100E43538()
{
  uint64_t v1 = *(char **)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v16 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 64);
  char v15 = *(unsigned char *)(v0 + 148);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v0 + 144) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 144));
  uint64_t v7 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v8 = *(void *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100E77E88(v8, v5, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100E77EF0(v5, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v9 = (uint64_t *)(*(void *)&v1[v7] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  swift_bridgeObjectRetain();
  sub_100753370(v4, v10, v11, v3);

  sub_100E771A8(v3, v6, type metadata accessor for CRLBoardIdentifier);
  *(unsigned char *)(v6 + *(int *)(v16 + 20)) = v15;
  if (*(void *)(v2 + 16)) {
    uint64_t v12 = sub_10050B520(*(void *)(v0 + 96));
  }
  else {
    uint64_t v12 = &_swiftEmptySetSingleton;
  }
  *(void *)(v0 + 120) = v12;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  id v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v13;
  *id v13 = v0;
  v13[1] = sub_100E43774;
  return sub_100EE88B0((uint64_t)v12);
}

uint64_t sub_100E43774()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v2 = sub_100E77F8C;
  }
  else
  {
    uint64_t v2 = sub_100E438AC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100E438AC()
{
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 136) != 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100E43934(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  type metadata accessor for MainActor();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v10 = static MainActor.shared.getter();
  unint64_t v11 = (void *)swift_allocObject();
  void v11[2] = v10;
  void v11[3] = &protocol witness table for MainActor;
  v11[4] = v8;
  v11[5] = a2;
  sub_1005912D0((uint64_t)v7, (uint64_t)&unk_10169FD28, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_100E43A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = a4;
  v5[9] = a5;
  type metadata accessor for MainActor();
  v5[10] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[11] = v7;
  v5[12] = v6;
  return _swift_task_switch(sub_100E43AF4, v7, v6);
}

uint64_t sub_100E43AF4()
{
  uint64_t v1 = sub_10102309C(v0[8]);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  v0[13] = v1;
  v0[14] = v2;
  v0[15] = v4;
  v0[16] = v6;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[17] = Strong;
  if (Strong)
  {
    uint64_t v9 = (void *)swift_task_alloc();
    v0[18] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_100E43CF0;
    return sub_100E440E4((uint64_t)v1, v3, v5, v7);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v11 = swift_unknownObjectWeakLoadStrong();
    v0[19] = v11;
    if (v11)
    {
      uint64_t v12 = (void *)swift_task_alloc();
      v0[20] = v12;
      *uint64_t v12 = v0;
      v12[1] = sub_100E43FA4;
      return sub_100E452E8();
    }
    else
    {
      swift_release();
      uint64_t v13 = (uint64_t (*)(void))v0[1];
      return v13();
    }
  }
}

uint64_t sub_100E43CF0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 136);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v3 = *(void *)(v1 + 96);
  uint64_t v4 = *(void *)(v1 + 88);
  return _swift_task_switch(sub_100E43EB0, v4, v3);
}

uint64_t sub_100E43EB0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[19] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[20] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100E43FA4;
    return sub_100E452E8();
  }
  else
  {
    swift_release();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_100E43FA4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 152);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 96);
  uint64_t v4 = *(void *)(v1 + 88);
  return _swift_task_switch(sub_100B49590, v4, v3);
}

uint64_t sub_100E440E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[8] = a4;
  v5[9] = v4;
  v5[6] = a2;
  _OWORD v5[7] = a3;
  v5[5] = a1;
  type metadata accessor for MainActor();
  v5[10] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[11] = v7;
  v5[12] = v6;
  return _swift_task_switch(sub_100E44184, v7, v6);
}

uint64_t sub_100E44184()
{
  uint64_t v22 = v0;
  uint64_t v1 = &_swiftEmptySetSingleton;
  uint64_t v2 = &_swiftEmptySetSingleton;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    if (!_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_19;
    }
    sub_10050BF28((unint64_t)_swiftEmptyArrayStorage);
    uint64_t v2 = v16;
  }
  while (1)
  {
    uint64_t v3 = v0[9];
    v0[2] = (uint64_t)v2;
    v0[3] = (uint64_t)v1;
    uint64_t v4 = swift_bridgeObjectRetain();
    uint64_t v1 = 0;
    sub_100E394F4(v4);
    swift_bridgeObjectRelease();
    uint64_t v5 = swift_bridgeObjectRetain();
    sub_100E394F4(v5);
    swift_bridgeObjectRelease();
    uint64_t v6 = swift_bridgeObjectRetain();
    sub_100E394F4(v6);
    swift_bridgeObjectRelease();
    uint64_t v7 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState);
    swift_getKeyPath();
    swift_getKeyPath();
    id v8 = v7;
    static Published.subscript.getter();
    swift_release();
    swift_release();

    unint64_t v9 = v0[4];
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      if (!v10)
      {
LABEL_14:
        swift_bridgeObjectRelease_n();
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v10) {
        goto LABEL_14;
      }
    }
    if (v10 >= 1) {
      break;
    }
    __break(1u);
LABEL_19:
    uint64_t v2 = &_swiftEmptySetSingleton;
  }
  uint64_t v11 = 0;
  do
  {
    if ((v9 & 0xC000000000000001) != 0) {
      id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v12 = *(id *)(v9 + 8 * v11 + 32);
    }
    uint64_t v13 = v12;
    uint64_t v14 = v0[9];
    uint64_t v15 = v0[5];
    ++v11;
    uint64_t v21 = v12;
    sub_100E72FE8(&v21, v15, v14, v0 + 2, (uint64_t)(v0 + 3));
  }
  while (v10 != v11);
  swift_bridgeObjectRelease_n();
  uint64_t v2 = (void *)v0[2];
LABEL_15:
  v0[13] = (uint64_t)v2;
  id v17 = (id)v0[9];
  uint64_t v18 = swift_bridgeObjectRetain();
  sub_100E70578(v18, (uint64_t)v17);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v19 = (void *)swift_task_alloc();
  v0[14] = (uint64_t)v19;
  *uint64_t v19 = v0;
  v19[1] = sub_100E44444;
  return sub_100E49EEC((uint64_t)v2);
}

uint64_t sub_100E44444()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 88);
  return _swift_task_switch(sub_100E44588, v3, v2);
}

uint64_t sub_100E44588()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100E445FC()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10053DCA8;
  return sub_100E458EC();
}

void sub_100E446A8(char a1)
{
  id v3 = [self sharedKeyboardMonitor];
  [v3 keyboardFrame];
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;

  double v12 = sub_100E666D4(v5, v7, v9, v11);
  uint64_t v13 = (char **)OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_keyboardTopEdgeLayoutGuideConstraint;
  uint64_t v14 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_keyboardTopEdgeLayoutGuideConstraint];
  if (!v14)
  {
LABEL_9:
    id v22 = [v1 view];
    if (v22)
    {
      uint64_t v23 = v22;
      [v22 setNeedsUpdateConstraints];

      id v20 = [v1 view];
      if (v20) {
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  double v15 = v12;
  [v14 constant];
  double v17 = v16;
  double v12 = -v15;
  if (v17 != -v15)
  {
LABEL_7:
    uint64_t v21 = *(char **)((char *)v13 + (void)v1);
    if (v21) {
      [v21 setConstant:];
    }
    goto LABEL_9;
  }
  if ((a1 & 1) == 0) {
    return;
  }
  uint64_t v13 = &selRef_taggerStateOutsideCore;
  id v18 = [v1 view];
  if (!v18) {
    goto LABEL_17;
  }
  uint64_t v19 = v18;
  [v18 setNeedsUpdateConstraints];

  id v20 = [v1 view];
  if (!v20)
  {
    __break(1u);
    goto LABEL_7;
  }
LABEL_11:
  id v24 = v20;
  [v20 setNeedsLayout];
}

void sub_100E448BC()
{
  if (qword_10166F9F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.crlStatusHUD;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = type metadata accessor for CRLiOSBoardViewController();
  *(void *)(inited + 64) = sub_100E769FC((unint64_t *)&unk_10169FC20, (void (*)(uint64_t))type metadata accessor for CRLiOSBoardViewController);
  *(void *)(inited + 32) = v0;
  id v3 = v1;
  double v4 = v0;
  uint64_t v5 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v5, (uint64_t)"setupStatusHUDView: self: %p", 28, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  id v6 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_100E44B18(v6);
  uint64_t v7 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_statusHUDManager;
  double v8 = *(char **)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_statusHUDManager];
  double v9 = (void **)&v8[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView];
  swift_beginAccess();
  double v10 = *v9;
  *double v9 = v6;
  id v11 = v6;
  double v12 = v8;

  uint64_t v13 = &v12[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready];
  swift_beginAccess();
  if (*v13 == 1) {
    sub_100E89F18();
  }

  uint64_t v14 = *(char **)&v4[v7];
  double v15 = &v14[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready];
  swift_beginAccess();
  *double v15 = 1;
  double v16 = v14;
  sub_100E89F18();
}

void sub_100E44B18(void *a1)
{
  id v3 = [v1 viewIfLoaded];

  if (!v3)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"addStatusHUDView(statusHUDView:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 732, (uint64_t)"Adding collaboration notification view too early.", 49, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v19) = 2;
    double v17 = "Adding collaboration notification view too early.";
    uint64_t v18 = 49;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"addStatusHUDView(statusHUDView:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 732);
  }
  [a1 setTranslatesAutoresizingMaskIntoConstraints:0, v17, v18, v19];
  id v4 = [v1 view];
  if (!v4)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = v4;
  [v4 addSubview:a1];

  id v6 = [a1 topAnchor];
  id v7 = [v1 view];
  if (!v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  double v8 = v7;
  id v9 = [v7 safeAreaLayoutGuide];

  id v10 = [v9 topAnchor];
  id v11 = [v6 constraintEqualToAnchor:v10];

  [v11 setActive:1];
  id v12 = [a1 trailingAnchor];
  id v13 = [v1 view];
  if (!v13)
  {
LABEL_11:
    __break(1u);
    return;
  }
  uint64_t v14 = v13;
  id v15 = [v13 safeAreaLayoutGuide];

  id v16 = [v15 trailingAnchor];
  id v20 = [v12 constraintEqualToAnchor:v16];

  [v20 setActive:1];
}

uint64_t sub_100E44DBC(char a1)
{
  uint64_t v3 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v3 - 8, v4);
  id v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  __chkstk_darwin(v7 - 8, v8);
  id v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (unsigned __int8 *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v19 - 8, v20);
  id v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v40 = &type metadata for CRLFeatureFlags;
  unint64_t v41 = sub_1005396A8();
  v39[0] = 1;
  char v23 = isFeatureEnabled(_:)();
  uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v39);
  if (v23)
  {
    uint64_t v25 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v22, 1, 1, v25);
    type metadata accessor for MainActor();
    uint64_t v26 = v1;
    uint64_t v27 = static MainActor.shared.getter();
    uint64_t v28 = (void *)swift_allocObject();
    v28[2] = v27;
    v28[3] = &protocol witness table for MainActor;
    v28[4] = v26;
    sub_1005912D0((uint64_t)v22, (uint64_t)&unk_10168E298, (uint64_t)v28);
    uint64_t result = swift_release();
    if (a1)
    {
      if (!*(void *)&v26[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_appAnalyticsBoardTracker]) {
        return result;
      }
      swift_retain();
      sub_100696B74();
    }
    else
    {
      uint64_t result = swift_unknownObjectWeakLoadStrong();
      if (!result) {
        goto LABEL_9;
      }
      uint64_t v29 = (void *)result;
      uint64_t v30 = *(char **)(*(void *)&v26[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                     + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
      uint64_t v31 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
      uint64_t v32 = *(void *)&v30[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      sub_100E77E88(v32, (uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
      unsigned int v38 = v30;
      swift_retain();
      sub_1005057FC(&qword_101674550);
      CRRegister.wrappedValue.getter();
      sub_100E77EF0((uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
      swift_release();
      id v33 = (uint64_t *)(*(void *)&v30[v31] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      uint64_t v34 = *v33;
      unint64_t v35 = v33[1];
      swift_bridgeObjectRetain();
      sub_100753370((uint64_t)v10, v34, v35, (uint64_t)v14);

      sub_100ED7F04((uint64_t)v14, (uint64_t)v18);
      sub_100E77EF0((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);

      int v36 = *v18;
      uint64_t result = sub_100E77EF0((uint64_t)v18, type metadata accessor for CRLBoardViewModelMetadata);
      if (v36 == 1)
      {
        if (!*(void *)&v26[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_appAnalyticsBoardTracker]) {
          return result;
        }
        swift_retain();
        sub_100697414();
      }
      else
      {
LABEL_9:
        if (!*(void *)&v26[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_appAnalyticsBoardTracker]) {
          return result;
        }
        swift_retain();
        sub_100696CFC();
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_100E4523C()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100540B58;
  return sub_100E452E8();
}

uint64_t sub_100E452E8()
{
  v1[2] = v0;
  type metadata accessor for MainActor();
  v1[3] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[4] = v3;
  v1[5] = v2;
  return _swift_task_switch(sub_100E45380, v3, v2);
}

uint64_t sub_100E45380()
{
  uint64_t v1 = *(void *)(v0[2] + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_stateRestorationHelper);
  v0[6] = v1;
  if (v1)
  {
    swift_retain();
    return _swift_task_switch(sub_100E45544, v1, 0);
  }
  else
  {
    swift_release();
    uint64_t v2 = v0[2];
    uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
    [v3 viewScale];
    id v4 = [v3 canvas];
    [v4 unscaledRectOfLayouts];
    CGFloat v6 = v5;
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    CGFloat v12 = v11;

    if (*(void *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_appAnalyticsBoardTracker))
    {
      uint64_t v13 = *(void **)(*(void *)(v0[2] + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                     + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
      swift_retain();
      id v14 = v13;
      v20.origin.x = v6;
      v20.origin.y = v8;
      v20.size.width = v10;
      v20.size.height = v12;
      double Height = CGRectGetHeight(v20);
      v21.origin.x = v6;
      v21.origin.y = v8;
      v21.size.width = v10;
      v21.size.height = v12;
      double Width = CGRectGetWidth(v21);
      sub_100696EF4((uint64_t)v14, Height, Width);

      swift_release();
    }
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
}

uint64_t sub_100E45544()
{
  if (*(unsigned char *)(v0[6] + 144) == 1)
  {
    swift_release();
    uint64_t v1 = v0[4];
    uint64_t v2 = v0[5];
    return _swift_task_switch(sub_100E4561C, v1, v2);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v0[7] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100E45778;
    return sub_10069B368();
  }
}

uint64_t sub_100E4561C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  [v2 viewScale];
  id v3 = [v2 canvas];
  [v3 unscaledRectOfLayouts];
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;

  if (*(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_appAnalyticsBoardTracker))
  {
    CGFloat v12 = *(void **)(*(void *)(*(void *)(v0 + 16)
                               + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                   + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    swift_retain();
    id v13 = v12;
    v19.origin.x = v5;
    v19.origin.y = v7;
    v19.size.width = v9;
    v19.size.height = v11;
    double Height = CGRectGetHeight(v19);
    v20.origin.x = v5;
    v20.origin.y = v7;
    v20.size.width = v9;
    v20.size.height = v11;
    double Width = CGRectGetWidth(v20);
    sub_100696EF4((uint64_t)v13, Height, Width);

    swift_release();
  }
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_100E45778()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_100E45888, v2, 0);
}

uint64_t sub_100E45888()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  return _swift_task_switch(sub_100E7817C, v1, v2);
}

uint64_t sub_100E458EC()
{
  v1[2] = v0;
  type metadata accessor for MainActor();
  v1[3] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[4] = v3;
  v1[5] = v2;
  return _swift_task_switch(sub_100E45984, v3, v2);
}

uint64_t sub_100E45984()
{
  uint64_t v1 = *(void *)(v0[2] + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_stateRestorationHelper);
  v0[6] = v1;
  if (v1)
  {
    swift_retain();
    return _swift_task_switch(sub_100E45B80, v1, 0);
  }
  else
  {
    swift_release();
    uint64_t v2 = v0[2];
    uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
    [v3 viewScale];
    double v5 = v4;
    id v6 = [v3 canvas];
    [v6 unscaledRectOfLayouts];
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    CGFloat v12 = v11;
    CGFloat v14 = v13;

    id v15 = objc_retain(*(id *)(*(void *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                            + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard));
    v24.origin.x = v8;
    v24.origin.y = v10;
    v24.size.width = v12;
    v24.size.height = v14;
    double Height = CGRectGetHeight(v24);
    v25.origin.x = v8;
    v25.origin.y = v10;
    v25.size.width = v12;
    v25.size.height = v14;
    double Width = CGRectGetWidth(v25);
    uint64_t v18 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled;
    int v19 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled);
    if (v19 == 2)
    {
      char v20 = sub_100E4EA7C();
      *(unsigned char *)(v2 + v18) = v20 & 1;
    }
    else
    {
      char v20 = v19 & 1;
    }
    type metadata accessor for CRLAnalyticsBoardOpened();
    sub_100A018B4(v15, v20 & 1, v5, Height, Width);

    CGRect v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
}

uint64_t sub_100E45B80()
{
  if (*(unsigned char *)(v0[6] + 144) == 1)
  {
    swift_release();
    uint64_t v1 = v0[4];
    uint64_t v2 = v0[5];
    return _swift_task_switch(sub_100E45C58, v1, v2);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v0[7] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100E45DE8;
    return sub_10069B368();
  }
}

uint64_t sub_100E45C58()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  [v2 viewScale];
  double v4 = v3;
  id v5 = [v2 canvas];
  [v5 unscaledRectOfLayouts];
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  CGFloat v13 = v12;

  id v14 = objc_retain(*(id *)(*(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                          + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard));
  v23.origin.x = v7;
  v23.origin.y = v9;
  v23.size.width = v11;
  v23.size.height = v13;
  double Height = CGRectGetHeight(v23);
  v24.origin.x = v7;
  v24.origin.y = v9;
  v24.size.width = v11;
  v24.size.height = v13;
  double Width = CGRectGetWidth(v24);
  uint64_t v17 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled;
  int v18 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled);
  if (v18 == 2)
  {
    char v19 = sub_100E4EA7C();
    *(unsigned char *)(v1 + v17) = v19 & 1;
  }
  else
  {
    char v19 = v18 & 1;
  }
  type metadata accessor for CRLAnalyticsBoardOpened();
  sub_100A018B4(v14, v19 & 1, v4, Height, Width);

  char v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_100E45DE8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_100E45EF8, v2, 0);
}

uint64_t sub_100E45EF8()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  return _swift_task_switch(sub_100E77F94, v1, v2);
}

void sub_100E45F5C()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  *(void *)&double v3 = __chkstk_darwin(v1 - 8, v2).n128_u64[0];
  id v49 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v50 = *(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  id v51 = [v50 layerHost:v3];
  id v5 = self;
  id v6 = [v5 mainBundle];
  NSString v7 = String._bridgeToObjectiveC()();
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v6 localizedStringForKey:v7 value:v8 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  char v10 = sub_100CEB290();
  CGFloat v11 = self;
  if (objc_msgSend(v11, "crl_iPadDevice"))
  {
    if (v10)
    {
LABEL_3:
      id v12 = [v5 mainBundle];
      goto LABEL_6;
    }
  }
  else if (v10)
  {
    goto LABEL_3;
  }
  [v11 crl_iPadDevice];
  id v12 = [v5 mainBundle];
LABEL_6:
  NSString v13 = String._bridgeToObjectiveC()();
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v12 localizedStringForKey:v13 value:v14 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v18 = [self alertControllerWithTitle:v16 message:v17 preferredStyle:1];

  if (v10)
  {
    id v19 = [v5 mainBundle];
    NSString v20 = String._bridgeToObjectiveC()();
    NSString v21 = String._bridgeToObjectiveC()();
    id v22 = [v19 localizedStringForKey:v20 value:v21 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    *(void *)&long long v54 = sub_100A92694;
    *((void *)&v54 + 1) = 0;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = *(void *)"";
    *(void *)&long long v53 = sub_10051CE64;
    *((void *)&v53 + 1) = &unk_101530980;
    CGRect v24 = _Block_copy(&aBlock);
    swift_release();
    id v25 = [self actionWithTitle:v23 style:0 handler:v24];
    _Block_release(v24);

    [v18 addAction:v25];
    [v18 setPreferredAction:v25];
  }
  id v26 = [v5 mainBundle];
  NSString v27 = String._bridgeToObjectiveC()();
  NSString v28 = String._bridgeToObjectiveC()();
  id v29 = [v26 localizedStringForKey:v27 value:v28 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  NSString v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)&long long v54 = sub_100E77278;
  *((void *)&v54 + 1) = v30;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = *(void *)"";
  *(void *)&long long v53 = sub_10051CE64;
  *((void *)&v53 + 1) = &unk_101530930;
  uint64_t v32 = _Block_copy(&aBlock);
  swift_release();
  id v33 = self;
  id v34 = [v33 actionWithTitle:v31 style:0 handler:v32];
  _Block_release(v32);

  swift_release();
  [v18 addAction:v34];
  id v35 = [v5 mainBundle];
  NSString v36 = String._bridgeToObjectiveC()();
  NSString v37 = String._bridgeToObjectiveC()();
  id v38 = [v35 localizedStringForKey:v36 value:v37 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v40 = [v33 actionWithTitle:v39 style:1 handler:0];

  [v18 addAction:v40];
  [v0 presentViewController:v18 animated:1 completion:0];
  id v41 = v50;
  [v50 setVersionFidelityAlertWasShownIsValid:1];
  [v41 setVersionFidelityAlertWasShown:sub_1002094A4()];
  sub_100E481F4((uint64_t)&aBlock);
  uint64_t v42 = type metadata accessor for TaskPriority();
  uint64_t v43 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v49, 1, 1, v42);
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = 0;
  *(void *)(v44 + 24) = 0;
  *(void *)(v44 + 32) = v0;
  long long v45 = aBlock;
  *(_OWORD *)(v44 + 56) = v53;
  long long v46 = v55[0];
  *(_OWORD *)(v44 + 72) = v54;
  *(_OWORD *)(v44 + 88) = v46;
  *(_OWORD *)(v44 + 97) = *(_OWORD *)((char *)v55 + 9);
  *(_OWORD *)(v44 + 40) = v45;
  uint64_t v47 = v0;
  sub_100A99318(&aBlock, (void (*)(uint64_t, uint64_t))sub_1005FA2A0);
  sub_100B107F4(v43, (uint64_t)&unk_10168E290, v44);
  swift_release();
  sub_100A99318(&aBlock, (void (*)(uint64_t, uint64_t))sub_100514260);
  sub_100522F00(v43, &qword_101672BB0);
  sub_100F2BCC8(v18);
  swift_unknownObjectRelease();
}

void sub_100E46808()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100E4685C();
  }
}

void sub_100E4685C()
{
  id v1 = [objc_allocWithZone((Class)HLPHelpViewController) init];
  [v1 setShowTopicViewOnLoad:1];
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 setSelectedHelpTopicID:v2];

  id v3 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v1];
  [v1 setModalPresentationStyle:1];
  [v0 presentViewController:v3 animated:1 completion:0];
}

void sub_100E46958()
{
  id v1 = v0;
  v23.receiver = v0;
  v23.super_class = (Class)type metadata accessor for CRLiOSBoardViewController();
  [super viewDidLayoutSubviews];
  if ((v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isTornDown] & 1) == 0) {
    sub_100E4B054();
  }
  NSString v20 = &type metadata for CRLFeatureFlags;
  unint64_t v21 = sub_1005396A8();
  LOBYTE(v19[0]) = 17;
  char v2 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v19);
  if (v2 & 1) != 0 && (sub_100E3CCB4())
  {
    id v3 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v1;
    unint64_t v21 = (unint64_t)sub_100E77858;
    uint64_t v22 = v4;
    v19[0] = _NSConcreteStackBlock;
    v19[1] = *(void *)"";
    v19[2] = sub_100679958;
    NSString v20 = (ValueMetadata *)&unk_101530CF0;
    id v5 = _Block_copy(v19);
    id v6 = v1;
    swift_release();
    [v3 performBlockOnMainThreadAfterLayoutIfNecessary:v5];
    _Block_release(v5);
  }
  id v7 = [v1 presentedViewController];
  uint64_t v8 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController;
  id v9 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController];
  if (v7)
  {
    char v10 = v7;
    if (!v9)
    {

      goto LABEL_16;
    }
    sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
    id v11 = v9;
    id v12 = v10;
    char v13 = static NSObject.== infix(_:_:)();

    if ((v13 & 1) == 0)
    {
LABEL_16:
      id v9 = *(void **)&v1[v8];
      if (!v9) {
        return;
      }
      goto LABEL_17;
    }
  }
  else
  {
    if (v9)
    {
LABEL_17:
      id v18 = v9;
      sub_100D5DE74();

      return;
    }
    id v14 = 0;
  }
  id v15 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState];
  swift_getKeyPath();
  swift_getKeyPath();
  id v16 = v15;
  static Published.subscript.getter();
  swift_release();
  swift_release();

  if (v19[0]) {
    goto LABEL_16;
  }
  NSString v17 = *(void **)&v1[v8];
  if (v17) {
    [v17 dismissViewControllerAnimated:0 completion:0];
  }
}

void sub_100E46C24(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  id v9 = [v4 topMostViewController];
  type metadata accessor for CRLScenesNavigatorViewController();
  if (swift_dynamicCastClass())
  {
    BOOL v10 = 1;
  }
  else
  {
    self;
    BOOL v10 = swift_dynamicCastObjCClass() != 0;
  }
  id v11 = [v4 presentedViewController];
  if (!v11)
  {
LABEL_7:
    if (a3)
    {
      uint64_t v98 = (uint64_t (*)())a3;
      uint64_t v99 = a4;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v95 = *(void *)"";
      BOOL v96 = sub_100679958;
      uint64_t v97 = &unk_101530C00;
      char v13 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
    }
    else
    {
      char v13 = 0;
    }
    id v14 = (objc_class *)type metadata accessor for CRLiOSBoardViewController();
    v100.receiver = v4;
    v100.super_class = v14;
    [super presentViewController:a1 animated:a2 & 1 completion:v13];
    goto LABEL_14;
  }
  id v12 = v11;
  if ([v11 isBeingDismissed])
  {

    goto LABEL_7;
  }
  if (v10)
  {
    if (a3)
    {
      uint64_t v98 = (uint64_t (*)())a3;
      uint64_t v99 = a4;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v95 = *(void *)"";
      BOOL v96 = sub_100679958;
      uint64_t v97 = &unk_101530C78;
      char v13 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
    }
    else
    {
      char v13 = 0;
    }
    [v9 presentViewController:a1 animated:1 completion:v13];
  }
  else
  {
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = v4;
    *(void *)(v54 + 24) = a1;
    uint64_t v55 = a2 & 1;
    *(unsigned char *)(v54 + 32) = v55;
    *(void *)(v54 + 40) = a3;
    *(void *)(v54 + 48) = a4;
    uint64_t v98 = sub_100E777D8;
    uint64_t v99 = v54;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v95 = *(void *)"";
    BOOL v96 = sub_100679958;
    uint64_t v97 = &unk_101530C50;
    char v13 = _Block_copy(&aBlock);
    sub_1005173A0(a3);
    id v56 = v4;
    id v57 = a1;
    swift_release();
    [v56 dismissViewControllerAnimated:v55 completion:v13];
  }
LABEL_14:
  _Block_release(v13);
  id v15 = sub_100E3C594();
  id v16 = [v15 mode];

  LODWORD(v15) = [v16 wantsToEndForNonPopoverPresentations];
  NSString v17 = &off_10169F000;
  if (!v15) {
    goto LABEL_32;
  }
  id v18 = [a1 presentationController];
  if (!v18)
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    swift_getObjectType();
    ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    id v50 = NSStringFromClass(ObjCClassFromMetadata);
    uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v53 = v52;

    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v51;
    *(void *)(inited + 40) = v53;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"present(_:animated:completion:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 931, (uint64_t)"Presentation controller should not be nil when presenting view controller (%{public}@).", 87, 2u, inited);
    LOBYTE(v93) = 2;
    sub_1005598CC(inited, (uint64_t)"present(_:animated:completion:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 931);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    id v19 = sub_100E3C594();
    [v19 resetToDefaultModeAnimated:1 "Presentation controller should not be nil when presenting view controller (%{public}@)." 87 v93];
    goto LABEL_30;
  }
  id v19 = v18;
  id v20 = [v18 presentationStyle];
  id v21 = [v4 traitCollection];
  id v22 = [v19 adaptivePresentationStyleForTraitCollection:v21];

  if (!*(void *)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController])
  {
    id v23 = sub_100E3C594();
    id v24 = [v23 mode];

    LODWORD(v23) = [v24 wantsToEndForNonPopoverPresentations];
    if (v23)
    {
      if (v20 != (id)7 && v22 != (id)7 || v22 != (id)-1 && v22 != (id)7)
      {
        id v91 = sub_100E3C594();
        [v91 resetToDefaultModeAnimated:1];

        goto LABEL_31;
      }
    }
  }
  id v25 = [v19 delegate];
  swift_unknownObjectRelease();
  if (!v25)
  {
    [v19 setDelegate:v4];
    goto LABEL_30;
  }
  id v26 = (char *)[v19 delegate];
  if (!v26)
  {
LABEL_30:

    goto LABEL_31;
  }
  NSString v27 = v26;
  id v28 = [v4 traitCollection];
  id v29 = [v28 userInterfaceIdiom];

  if (v29)
  {
    if (v27 == v4)
    {

      swift_unknownObjectRelease();
      goto LABEL_31;
    }
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v30 = swift_initStackObject();
    *(_OWORD *)(v30 + 16) = xmmword_10117DF40;
    swift_getObjectType();
    NSString v31 = (objc_class *)swift_getObjCClassFromMetadata();
    uint64_t v32 = NSStringFromClass(v31);
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v35 = v34;

    *(void *)(v30 + 56) = &type metadata for String;
    unint64_t v36 = sub_100528BE4();
    *(void *)(v30 + 64) = v36;
    *(void *)(v30 + 32) = v33;
    *(void *)(v30 + 40) = v35;
    swift_getObjectType();
    NSString v37 = (objc_class *)swift_getObjCClassFromMetadata();
    id v38 = NSStringFromClass(v37);
    uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v41 = v40;

    *(void *)(v30 + 96) = &type metadata for String;
    *(void *)(v30 + 104) = v36;
    *(void *)(v30 + 72) = v39;
    *(void *)(v30 + 80) = v41;
    swift_getObjectType();
    uint64_t v42 = (objc_class *)swift_getObjCClassFromMetadata();
    uint64_t v43 = NSStringFromClass(v42);
    uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v46 = v45;

    *(void *)(v30 + 136) = &type metadata for String;
    *(void *)(v30 + 144) = v36;
    *(void *)(v30 + 112) = v44;
    *(void *)(v30 + 120) = v46;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"present(_:animated:completion:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 923, (uint64_t)"Board view controller can't become presentation delegate (of %{public}@ presenting %{public}@) if it's already set (%{public}@).", 128, 2u, v30);
    LOBYTE(v92) = 2;
    sub_1005598CC(v30, (uint64_t)"present(_:animated:completion:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 923);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    id v47 = sub_100E3C594();
    [v47 resetToDefaultModeAnimated:1 Board view controller can't become presentation delegate (of %{public}@ presenting %{public}@) if it's already set (%{public}@)., 128, v92];
  }
  else
  {
  }
  swift_unknownObjectRelease();
LABEL_31:
  NSString v17 = &off_10169F000;
LABEL_32:
  if (!*(void *)((char *)v17[89] + (void)v4))
  {

    return;
  }
  id v58 = [a1 presentationController];
  if (!v58)
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v85 = swift_initStackObject();
    *(_OWORD *)(v85 + 16) = xmmword_10117E810;
    swift_getObjectType();
    uint64_t v86 = (objc_class *)swift_getObjCClassFromMetadata();
    uint64_t v87 = NSStringFromClass(v86);
    uint64_t v88 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v90 = v89;

    *(void *)(v85 + 56) = &type metadata for String;
    *(void *)(v85 + 64) = sub_100528BE4();
    *(void *)(v85 + 32) = v88;
    *(void *)(v85 + 40) = v90;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"present(_:animated:completion:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 959, (uint64_t)"Presentation controller should not be nil when presenting view controller (%{public}@).", 87, 2u, v85);
    sub_1005598CC(v85, (uint64_t)"present(_:animated:completion:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 959);

    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    return;
  }
  id v59 = v58;
  id v60 = [v58 presentationStyle];
  id v61 = [v4 traitCollection];
  id v62 = [v59 adaptivePresentationStyleForTraitCollection:v61];

  sub_100E478BC((uint64_t)v60, (uint64_t)v62);
  id v63 = [v59 delegate];
  swift_unknownObjectRelease();
  if (!v63)
  {
    [v59 setDelegate:v4];
    goto LABEL_42;
  }
  uint64_t v64 = (char *)[v59 delegate];
  if (!v64)
  {
LABEL_42:

    return;
  }
  uint64_t v65 = v64;
  id v66 = [v4 traitCollection];
  id v67 = [v66 userInterfaceIdiom];

  if (!v67 || v65 == v4)
  {
  }
  else
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v68 = swift_initStackObject();
    *(_OWORD *)(v68 + 16) = xmmword_10117DF40;
    swift_getObjectType();
    char v69 = (objc_class *)swift_getObjCClassFromMetadata();
    uint64_t v70 = NSStringFromClass(v69);
    uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v73 = v72;

    *(void *)(v68 + 56) = &type metadata for String;
    unint64_t v74 = sub_100528BE4();
    *(void *)(v68 + 64) = v74;
    *(void *)(v68 + 32) = v71;
    *(void *)(v68 + 40) = v73;
    swift_getObjectType();
    id v75 = (objc_class *)swift_getObjCClassFromMetadata();
    id v76 = NSStringFromClass(v75);
    uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v79 = v78;

    *(void *)(v68 + 96) = &type metadata for String;
    *(void *)(v68 + 104) = v74;
    *(void *)(v68 + 72) = v77;
    *(void *)(v68 + 80) = v79;
    swift_getObjectType();
    id v80 = (objc_class *)swift_getObjCClassFromMetadata();
    unint64_t v81 = NSStringFromClass(v80);
    uint64_t v82 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v84 = v83;

    *(void *)(v68 + 136) = &type metadata for String;
    *(void *)(v68 + 144) = v74;
    *(void *)(v68 + 112) = v82;
    *(void *)(v68 + 120) = v84;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"present(_:animated:completion:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 953, (uint64_t)"Board view controller can't become presentation delegate (of %{public}@ presenting %{public}@) if it's already set (%{public}@).", 128, 2u, v68);
    sub_1005598CC(v68, (uint64_t)"present(_:animated:completion:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 953);

    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  swift_unknownObjectRelease();
}

void sub_100E477D4(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  if (a4)
  {
    v10[4] = a4;
    void v10[5] = a5;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = *(void *)"";
    v10[2] = sub_100679958;
    v10[3] = &unk_101530CA0;
    uint64_t v8 = _Block_copy(v10);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v8 = 0;
  }
  id v9 = (objc_class *)type metadata accessor for CRLiOSBoardViewController();
  v11.receiver = a1;
  v11.super_class = v9;
  [super presentViewController:a2 animated:a3 & 1 completion:v8];
  _Block_release(v8);
}

uint64_t sub_100E478BC(uint64_t result, uint64_t a2)
{
  id v3 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomToolTray);
  if (!v3)
  {
    *(unsigned char *)(v2
             + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isSuppressingBottomToolTrayForPresentationController) = 0;
    return result;
  }
  uint64_t v5 = result;
  uint64_t v6 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isSuppressingBottomToolTrayForPresentationController;
  char v7 = *(unsigned char *)(v2
                + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isSuppressingBottomToolTrayForPresentationController);
  swift_unknownObjectRetain();
  if ((v7 & 1) != 0 || ([v3 hidden] & 1) == 0)
  {
    if (!*(void *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController)
      || (v5 == 7 || a2 == 7) && (a2 == -1 || a2 == 7))
    {
      if (v7)
      {
        [v3 setToolTrayHidden:0 animated:1];
        uint64_t result = swift_unknownObjectRelease();
        *(unsigned char *)(v2 + v6) = 0;
        return result;
      }
    }
    else if ((v7 & 1) == 0)
    {
      [v3 setToolTrayHidden:1 animated:1];
      uint64_t result = swift_unknownObjectRelease();
      *(unsigned char *)(v2 + v6) = 1;
      return result;
    }
  }

  return swift_unknownObjectRelease();
}

void sub_100E47ABC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    sub_100E48DEC();
  }
}

void sub_100E47B10()
{
  uint64_t v6 = &type metadata for CRLFeatureFlags;
  unint64_t v7 = sub_1005396A8();
  v5[0] = 17;
  char v0 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v5);
  if (v0)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v2 = (void *)Strong;
      sub_100E41378();
    }
  }
  swift_beginAccess();
  uint64_t v3 = swift_unknownObjectWeakLoadStrong();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    sub_100E48DEC();
  }
}

uint64_t sub_100E47BC4()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_viewScaleObservation);
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_viewScaleObservation) = 0;

  uint64_t v2 = v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollObserver;
  swift_beginAccess();
  sub_100522E9C(v2, (uint64_t)&v5, &qword_101672BF0);
  if (!*((void *)&v6 + 1)) {
    return sub_100522F00((uint64_t)&v5, &qword_101672BF0);
  }
  sub_100575CE8(&v5, &v7);
  id v3 = [self defaultCenter];
  sub_10050F848(&v7, v8);
  [v3 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];

  swift_unknownObjectRelease();
  long long v5 = 0u;
  long long v6 = 0u;
  swift_beginAccess();
  sub_1006063BC((uint64_t)&v5, v2, &qword_101672BF0);
  swift_endAccess();
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v7);
}

uint64_t sub_100E47D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[18] = a4;
  v5[19] = a5;
  type metadata accessor for MainActor();
  v5[20] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[21] = v7;
  v5[22] = v6;
  return _swift_task_switch(sub_100E47D98, v7, v6);
}

uint64_t sub_100E47D98()
{
  id v1 = *(void **)(*(void *)(v0[18] + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v0[23] = v1;
  v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[24] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100E47E60;
  uint64_t v3 = v0[19];
  return sub_100D110F0(v3);
}

uint64_t sub_100E47E60()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 168);
    uint64_t v4 = *(void *)(v2 + 176);
    uint64_t v5 = sub_100E47FDC;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 168);
    uint64_t v4 = *(void *)(v2 + 176);
    uint64_t v5 = sub_100E47F7C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100E47F7C()
{
  swift_release();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100E47FDC()
{
  swift_release();
  return _swift_task_switch(sub_100E48050, 0, 0);
}

uint64_t sub_100E48050()
{
  if (qword_10166FB68 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = (void *)static OS_os_log.contentState;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v3 = v1;
  uint64_t v4 = Error.localizedDescription.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  uint64_t v7 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Failed to archive view state in database. %@", 44, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

void sub_100E481F4(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  unsigned int v5 = [v4 versionFidelityAlertWasShownIsValid];
  if (v5) {
    id v6 = [v4 versionFidelityAlertWasShown];
  }
  else {
    id v6 = 0;
  }
  [v4 viewScale];
  uint64_t v8 = v7;
  [v4 contentOffset];
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  id v13 = [v4 freehandDrawingToolkit];
  if (v13)
  {
    id v14 = v13;
    id v15 = [v13 toolkitUIState];
    uint64_t v16 = sub_100B05380();
    unint64_t v18 = v17;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"viewState", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 1018, (uint64_t)"Freehand toolkit should not be nil while saving view state.", 59, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v24) = 2;
    id v22 = "Freehand toolkit should not be nil while saving view state.";
    uint64_t v23 = 59;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"viewState", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 1018);
    uint64_t v16 = 0;
    unint64_t v18 = 0xF000000000000000;
  }
  if (![v2 pencilMediator:v22 v23:v24])goto LABEL_11; {
  type metadata accessor for CRLiOSPencilMediator();
  }
  if (!swift_dynamicCastClass())
  {
    swift_unknownObjectRelease();
LABEL_11:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"viewState", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 1021, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"viewState", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 1021);
    uint64_t v19 = 0;
    unint64_t v21 = 0xF000000000000000;
    goto LABEL_12;
  }
  uint64_t v19 = sub_100DE0890();
  unint64_t v21 = v20;
  swift_unknownObjectRelease();
LABEL_12:
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v12;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v5 ^ 1;
  *(void *)(a1 + 40) = v16;
  *(void *)(a1 + 48) = v18;
  *(void *)(a1 + 56) = v19;
  *(void *)(a1 + 64) = v21;
  *(unsigned char *)(a1 + 72) = 0;
}

void sub_100E484B8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (char *)Strong;
    if ((*(unsigned char *)(a2 + 72) & 1) == 0)
    {
      [*(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) setViewScale:*(double *)a2];
      unsigned int v5 = *(void **)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController];
      if (v5)
      {
        id v6 = v5;
        sub_1005EC558();
      }
    }
    uint64_t v7 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController;
    uint64_t v8 = *(void **)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
    [v8 growCanvasAsNeededToRestoreContentOffset:*(double *)(a2 + 8), *(double *)(a2 + 16)];
    sub_100E48724(a2);
    sub_100E48A94(a2);
    v21[0] = 0x3FF0000000000000;
    memset(&v21[1], 0, 24);
    char v22 = 1;
    long long v23 = xmmword_101190880;
    long long v24 = xmmword_101190880;
    char v25 = 0;
    id v9 = v8;
    if ((sub_10060CB20(a2, (uint64_t)v21) & 1) == 0) {
      goto LABEL_7;
    }
    id v10 = [v9 canvas];
    [v10 unscaledRectOfLayouts];
    double v12 = v11;
    double v14 = v13;
    double v16 = v15;
    double v18 = v17;

    v29.origin.x = 0.0;
    v29.origin.y = 0.0;
    v29.size.width = 0.0;
    v29.size.height = 0.0;
    v28.origin.x = v12;
    v28.origin.y = v14;
    v28.size.width = v16;
    v28.size.height = v18;
    if (!CGRectEqualToRect(v28, v29))
    {
      [v9 scrollRectToVisible:96 scrollOptions:v12, v14, v16, v18];

      sub_10051B3EC(a2 + 24, (uint64_t)v20, &qword_101676CF0);
      sub_10051B3EC((uint64_t)v20, (uint64_t)&v26, &qword_101676CF0);
      if (v27) {
        goto LABEL_8;
      }
    }
    else
    {
LABEL_7:

      sub_10051B3EC(a2 + 24, (uint64_t)v20, &qword_101676CF0);
      sub_10051B3EC((uint64_t)v20, (uint64_t)&v26, &qword_101676CF0);
      if (v27 == 1)
      {
LABEL_8:
        [*(id *)&v4[v7] setVersionFidelityAlertWasShownIsValid:0];
LABEL_11:

        return;
      }
    }
    uint64_t v19 = *(void **)&v4[v7];
    [v19 setVersionFidelityAlertWasShown:v26];
    [v19 setVersionFidelityAlertWasShownIsValid:1];
    goto LABEL_11;
  }
}

void sub_100E48724(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >> 60 == 15)
  {
    if (qword_10166FB68 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v3 = (id)static OS_os_log.contentState;
    uint64_t v4 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v4, (uint64_t)"View state to restore does not contain freehand drawing toolkit UI state. Skipping restoration of it.", 101, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    uint64_t v5 = v1;
    uint64_t v6 = *(void *)(a1 + 40);
    sub_10050BF48(0, &qword_10169FBF8);
    sub_100510D4C(v6, v2);
    sub_100510D4C(v6, v2);
    id v18 = sub_100B06734(v6, v2);
    if (v18)
    {
      id v7 = [*(id *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) freehandDrawingToolkit];
      if (v7)
      {
        uint64_t v8 = v7;
        [v7 setUpdatedToolkitUIStateFromArchive:v18];
        uint64_t v9 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray;
        id v10 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray);
        if (v10)
        {
          id v11 = v10;
          double v12 = (char *)sub_100D43BC0();
          if (v12)
          {
            double v13 = v12;
            id v14 = *(id *)&v12[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
          }
          else
          {
            sub_100D43B08();
            id v14 = v15;
          }
          [v14 _disableTapInteractionWhenNotVisible];

          sub_100D43D04();
        }
        id v16 = sub_100E48CC8();
        double v17 = *(void **)(v5 + v9);
        *(void *)(v5 + v9) = v16;

        sub_100514260(v6, v2);
      }
      else
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"restoreFreehandDrawingUIState(viewState:)", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 1063, (uint64_t)"Freehand toolkit should not be nil while restoring view state.", 62, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"restoreFreehandDrawingUIState(viewState:)", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 1063);
        sub_100514260(v6, v2);
      }
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"restoreFreehandDrawingUIState(viewState:)", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 1066, (uint64_t)"Unable to deserialize/unarchive freehand toolkit UI state from view state.", 74, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"restoreFreehandDrawingUIState(viewState:)", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 1066);
      sub_100514260(v6, v2);
    }
  }
}

uint64_t sub_100E48A94(uint64_t result)
{
  unint64_t v2 = *(void *)(result + 64);
  if (v2 >> 60 == 15) {
    return result;
  }
  uint64_t v3 = *(void *)(result + 56);
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController);
  sub_100510D4C(v3, v2);
  if ([v4 pencilMediator])
  {
    type metadata accessor for CRLiOSPencilMediator();
    if (swift_dynamicCastClass())
    {
      sub_100DE104C(v3, v2);
      sub_100514260(v3, v2);
      return swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"restorePencilMediatorUIState(viewState:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 1075, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"restorePencilMediatorUIState(viewState:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 1075);

  return sub_100514260(v3, v2);
}

id sub_100E48CC8()
{
  id v1 = *(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  id v2 = sub_100E3C594();
  uint64_t v3 = objc_allocWithZone((Class)type metadata accessor for CRLiOSPencilTray());
  uint64_t v4 = v0;
  uint64_t v5 = sub_100E6E03C(v4, v1, v2, v3);
  id result = [v4 view];
  if (result)
  {
    id v7 = result;
    id v8 = [result window];

    if (v8)
    {
      id v9 = v8;
      sub_100D441F8();
      id v10 = (char *)sub_100D43BC0();
      if (v10)
      {
        id v11 = v10;
        id v12 = *(id *)&v10[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
      }
      else
      {
        sub_100D43B08();
        id v12 = v13;
      }
      [v12 _enableTapInteractionForWindow:v9];
    }
    return (id)v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100E48DEC()
{
  id v1 = sub_100D7A804();
  if (v1)
  {
    id v2 = v1;
    id v3 = sub_100A783E0();
    id v4 = sub_100A783F0();
    id v5 = v3;
    [v0 loadViewIfNeeded];
    sub_100B88734(v5);
    [v5 setNeedsSave:1];

    id v6 = v4;
    [v0 loadViewIfNeeded];
    sub_100B88734(v6);
    [v6 setNeedsSave:1];
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateUserActivities()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 1115, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateUserActivities()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 1115);
  }
}

id sub_100E48F84(uint64_t a1)
{
  id v2 = v1;
  [v2 loadViewIfNeeded];
  sub_100B88228((uint64_t)v14);
  sub_10051B3EC((uint64_t)v14, (uint64_t)v15, (uint64_t *)&unk_10169A2A0);
  if (v16[24] != 2)
  {
    long long v19 = v15[2];
    v20[0] = *(_OWORD *)v16;
    *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)&v16[9];
    long long v17 = v15[0];
    long long v18 = v15[1];
    id v4 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v6 = swift_allocObject();
    long long v7 = v17;
    *(_OWORD *)(v6 + 40) = v18;
    long long v8 = v20[0];
    *(_OWORD *)(v6 + 56) = v19;
    *(_OWORD *)(v6 + 72) = v8;
    *(_OWORD *)(v6 + 81) = *(_OWORD *)((char *)v20 + 9);
    *(void *)(v6 + 16) = v5;
    *(_OWORD *)(v6 + 24) = v7;
    _DWORD v12[4] = sub_100E7819C;
    v12[5] = v6;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = *(void *)"";
    void v12[2] = sub_100679958;
    uint64_t v12[3] = &unk_101530BB0;
    id v9 = _Block_copy(v12);
    sub_100A99318(&v17, (void (*)(uint64_t, uint64_t))sub_1005FA2A0);
    swift_release();
    [v4 performBlockOnMainThreadAfterLayoutIfNecessary:v9];
    _Block_release(v9);
    v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_didRestoreCanvasViewState] = 1;
    sub_100E77738((uint64_t)v14);
  }
  id v10 = (objc_class *)type metadata accessor for CRLiOSBoardViewController();
  v13.receiver = v2;
  v13.super_class = v10;
  return [super restoreUserActivityState:a1];
}

void sub_100E491B4(char a1)
{
  id v2 = v1;
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v4 - 8, v5);
  long long v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = *(void **)(*(void *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
  uint64_t v41 = &type metadata for CRLFeatureFlags;
  unint64_t v9 = sub_1005396A8();
  unint64_t v42 = v9;
  LOBYTE(v40[0]) = 12;
  id v10 = v8;
  char v11 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v40);
  if (v11)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v40[0])
    {

      if (qword_10166FAE0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v12 = (id)static OS_os_log.crlFollow;
      uint64_t v13 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v13, (uint64_t)"Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

      sub_1007ECCE4(0);
    }
  }

  id v14 = self;
  id v15 = [v14 sharedApplication];
  unsigned int v16 = [v15 isRunningTest];

  if (v16)
  {
    id v17 = [v14 sharedApplication];
    id v18 = [v17 delegate];

    if (!v18)
    {
      __break(1u);
      return;
    }
    type metadata accessor for CRLiOSAppDelegate();
    swift_dynamicCastClassUnconditional();
    long long v19 = (void *)qword_10171B3E0;
    if (qword_10171B3E0)
    {
      id v38 = v7;
      unint64_t v20 = v9;
      uint64_t v21 = qword_10171B3F0;
      char v22 = a1;
      uint64_t ObjectType = swift_getObjectType();
      v40[0] = v19;
      long long v24 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 40);
      swift_unknownObjectRetain();
      uint64_t v25 = ObjectType;
      a1 = v22;
      uint64_t v26 = v21;
      unint64_t v9 = v20;
      long long v7 = v38;
      v24(v2, v25, v26);
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
  uint64_t v27 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v7, 1, 1, v27);
  uint64_t v28 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertingCancellableToken;
  uint64_t v29 = *(void *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertingCancellableToken];
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v30 = static MainActor.shared.getter();
  NSString v31 = (void *)swift_allocObject();
  void v31[2] = v30;
  v31[3] = &protocol witness table for MainActor;
  v31[4] = v29;
  sub_1005912FC((uint64_t)v7, (uint64_t)&unk_10169FCA0, (uint64_t)v31);
  swift_release();
  *(void *)&v2[v28] = 0;
  swift_release();
  sub_100E47BC4();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v33 = (void *)Strong;
    uint64_t v34 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_shareErrorObservers);
    if ([v34 containsObject:v2]) {
      [v34 removeObject:v2];
    }
  }
  uint64_t v41 = &type metadata for CRLFeatureFlags;
  unint64_t v42 = v9;
  LOBYTE(v40[0]) = 0;
  char v35 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v40);
  if (v35) {
    sub_100E3B330(0, 1);
  }
  unint64_t v36 = (objc_class *)type metadata accessor for CRLiOSBoardViewController();
  v39.receiver = v2;
  v39.super_class = v36;
  [super viewWillDisappear:a1 & 1];
}

void sub_100E49664(char a1)
{
  id v2 = v1;
  v19.receiver = v2;
  v19.super_class = (Class)type metadata accessor for CRLiOSBoardViewController();
  [super viewDidDisappear:a1 & 1];
  id v4 = [self defaultCenter];
  if (qword_10166F050 != -1) {
    swift_once();
  }
  [v4 removeObserver:v2 name:qword_10171A7E0 object:*(void *)(*(void *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]+ OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController)];

  uint64_t v5 = self;
  id v6 = [v5 sharedApplication];
  unsigned int v7 = [v6 isRunningTest];

  if (v7)
  {
    id v8 = [v5 sharedApplication];
    id v9 = [v8 delegate];

    if (!v9)
    {
      __break(1u);
      return;
    }
    type metadata accessor for CRLiOSAppDelegate();
    swift_dynamicCastClassUnconditional();
    uint64_t v10 = qword_10171B3E0;
    if (qword_10171B3E0)
    {
      uint64_t v11 = qword_10171B3F0;
      uint64_t ObjectType = swift_getObjectType();
      v18[0] = v10;
      uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 48);
      swift_unknownObjectRetain();
      v13(v2, ObjectType, v11);
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
  v18[3] = &type metadata for CRLFeatureFlags;
  v18[4] = sub_1005396A8();
  LOBYTE(v18[0]) = 0;
  char v14 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v18);
  if (v14)
  {
    id v15 = &v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipObservation];
    swift_beginAccess();
    if (*(void *)v15)
    {
      uint64_t v16 = *(void *)(*(void *)v15 + 16);
      if (v16)
      {
        swift_bridgeObjectRetain();
        uint64_t v17 = 0;
        do
        {
          ++v17;
          swift_retain();
          Task.cancel()();
          swift_release();
        }
        while (v16 != v17);
        swift_bridgeObjectRelease();
      }
    }
    *(void *)id v15 = 0;
    swift_bridgeObjectRelease();
  }
  if (*(void *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_traitChangeRegistration])
  {
    swift_unknownObjectRetain();
    UIViewController.unregisterForTraitChanges(_:)();
    swift_unknownObjectRelease();
  }
  sub_100E44DBC(0);
}

id sub_100E499B8(uint64_t a1, double a2, double a3)
{
  uint64_t v7 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(self, "crl_padUI"))
  {
    id v11 = [v3 presentedViewController];
    if (v11)
    {
      id v12 = v11;
      self;
      uint64_t v13 = swift_dynamicCastObjCClass();

      if (v13)
      {
        id v14 = [v3 presentedViewController];
        if (v14)
        {
          id v15 = v14;
          [v14 dismissViewControllerAnimated:0 completion:0];
        }
      }
    }
  }
  uint64_t v16 = *(void **)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v26 = 0;
  id v17 = v16;
  static Published.subscript.setter();
  sub_100E41378();
  uint64_t v18 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
  type metadata accessor for MainActor();
  objc_super v19 = v3;
  uint64_t v20 = static MainActor.shared.getter();
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = v20;
  v21[3] = &protocol witness table for MainActor;
  void v21[4] = v19;
  sub_1005912D0((uint64_t)v10, (uint64_t)&unk_10169FC90, (uint64_t)v21);
  swift_release();
  char v22 = (objc_class *)type metadata accessor for CRLiOSBoardViewController();
  v25.receiver = v19;
  v25.super_class = v22;
  return [super viewWillTransitionToSize:a1 withTransitionCoordinator:a2];
}

uint64_t sub_100E49BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a4;
  type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[5] = v6;
  v4[6] = v5;
  return _swift_task_switch(sub_100E49C90, v6, v5);
}

uint64_t sub_100E49C90()
{
  id v1 = *(void **)(v0[3] + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState);
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  static Published.subscript.getter();
  swift_release();
  swift_release();

  uint64_t v3 = sub_100CDE98C(v0[2]);
  v0[7] = v3;
  swift_bridgeObjectRelease();
  id v4 = (void *)swift_task_alloc();
  v0[8] = (unint64_t)v4;
  *id v4 = v0;
  v4[1] = sub_100E49DA8;
  return sub_100E49EEC(v3);
}

uint64_t sub_100E49DA8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_1005A5EF8, v3, v2);
}

uint64_t sub_100E49EEC(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  v2[5] = type metadata accessor for MainActor();
  v2[6] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[7] = v4;
  v2[8] = v3;
  return _swift_task_switch(sub_100E49F88, v4, v3);
}

uint64_t sub_100E49F88()
{
  uint64_t v1 = *(void *)(v0 + 24);
  id v2 = *(id *)(v0 + 32);
  uint64_t v3 = sub_100E7118C(v1, (uint64_t)v2);

  id v4 = [v2 view];
  if (!v4)
  {
    uint64_t v13 = swift_bridgeObjectRelease();
    __break(1u);
    return _swift_task_switch(v13, v14, v12);
  }
  uint64_t v5 = v4;
  id v6 = [v4 window];

  if (v6)
  {
    id v7 = [v6 windowScene];

    if (v7)
    {
      id v8 = [v7 delegate];
      *(void *)(v0 + 72) = v8;

      if (v8)
      {
        type metadata accessor for CRLiOSSceneDelegate();
        uint64_t v9 = swift_dynamicCastClass();
        *(void *)(v0 + 80) = v9;
        if (v9)
        {
          swift_unknownObjectRetain();
          *(void *)(v0 + 88) = sub_100CDD6A4((uint64_t)v3);
          swift_bridgeObjectRelease();
          *(void *)(v0 + 96) = static MainActor.shared.getter();
          uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
          uint64_t v12 = v11;
          *(void *)(v0 + 104) = v10;
          *(void *)(v0 + 112) = v11;
          uint64_t v13 = (uint64_t)sub_100E4A17C;
          uint64_t v14 = v10;
          return _swift_task_switch(v13, v14, v12);
        }
        swift_unknownObjectRelease();
      }
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  id v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

void sub_100E4A17C()
{
  sub_100A708BC();
  v0[15] = v1;
  if (v1)
  {
    id v2 = (void *)swift_task_alloc();
    v0[16] = v2;
    *id v2 = v0;
    v2[1] = sub_100E4A228;
    uint64_t v3 = v0[11];
    sub_10061C740(v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100E4A228()
{
  uint64_t v1 = *v0;
  id v2 = *(void **)(*v0 + 120);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v4 = *(void *)(v1 + 104);
  return _swift_task_switch(sub_100E4A368, v4, v3);
}

uint64_t sub_100E4A368()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  return _swift_task_switch(sub_100E4A3E0, v1, v2);
}

uint64_t sub_100E4A3E0()
{
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_100E4A4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v11 = &type metadata for CRLFeatureFlags;
  unint64_t v12 = sub_1005396A8();
  v10[0] = 17;
  char v5 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v10);
  if (v5)
  {
    if (objc_msgSend(self, "crl_padUI"))
    {
      if (sub_100E3CCB4())
      {
        id v6 = [v2 presentedViewController];
        if (v6)
        {
          id v7 = v6;
          [v6 dismissViewControllerAnimated:0 completion:0];
        }
      }
    }
  }
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for CRLiOSBoardViewController();
  return [super willTransitionToTraitCollection:a1 withTransitionCoordinator:a2];
}

uint64_t sub_100E4A610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  v4[3] = type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  v4[5] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[6] = v6;
  v4[7] = v5;
  return _swift_task_switch(sub_100E4A6B8, v6, v5);
}

uint64_t sub_100E4A6B8()
{
  if (*(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController))
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_100E4A860;
    return sub_100E5291C();
  }
  else
  {
    swift_release();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"dismissUndoMenu()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 1933, (uint64_t)"Not showing undo menu", 21, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"dismissUndoMenu()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 1933);
    uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1005A5EF8, v4, v3);
  }
}

uint64_t sub_100E4A860()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_100E4A980, v3, v2);
}

uint64_t sub_100E4A980()
{
  swift_release();
  sub_1005B1790();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1005A5EF8, v1, v0);
}

id sub_100E4AA90()
{
  id result = [v0 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v2 = result;
  id v3 = sub_100E3D244();
  [v2 addLayoutGuide:v3];

  id v4 = sub_100E3D244();
  id v5 = [v4 leadingAnchor];

  id result = [v0 view];
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v6 = result;
  id v7 = [result leadingAnchor];

  id v8 = [v5 constraintEqualToAnchor:v7];
  [v8 setActive:1];

  id v9 = sub_100E3D244();
  id v10 = [v9 trailingAnchor];

  id result = [v0 view];
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v11 = result;
  id v12 = [result trailingAnchor];

  id v13 = [v10 constraintEqualToAnchor:v12];
  [v13 setActive:1];

  id v14 = sub_100E3D244();
  id v15 = [v14 bottomAnchor];

  id result = [v0 view];
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v16 = result;
  id v17 = [result bottomAnchor];

  id v18 = [v15 constraintEqualToAnchor:v17];
  [v18 setActive:1];

  id v19 = sub_100E3D244();
  id v20 = [v19 topAnchor];

  id result = [v0 view];
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v21 = result;
  id v22 = [result bottomAnchor];

  id v23 = [v20 constraintEqualToAnchor:v22];
  uint64_t v24 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_keyboardTopEdgeLayoutGuideConstraint;
  objc_super v25 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_keyboardTopEdgeLayoutGuideConstraint];
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_keyboardTopEdgeLayoutGuideConstraint] = v23;

  [*(id *)&v0[v24] setActive:1];
  id result = [v0 view];
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v26 = result;
  id v27 = sub_100E3D238();
  [v26 addLayoutGuide:v27];

  id v28 = sub_100E3D238();
  id v29 = [v28 leadingAnchor];

  id result = [v0 view];
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v30 = result;
  id v31 = [result leadingAnchor];

  id v32 = [v29 constraintEqualToAnchor:v31];
  uint64_t v33 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_leadingUnobscuredRectLayoutGuideConstraint;
  uint64_t v34 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_leadingUnobscuredRectLayoutGuideConstraint];
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_leadingUnobscuredRectLayoutGuideConstraint] = v32;

  id v35 = sub_100E3D238();
  id v36 = [v35 trailingAnchor];

  id result = [v0 view];
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v37 = result;
  id v38 = [result trailingAnchor];

  id v39 = [v36 constraintEqualToAnchor:v38];
  uint64_t v40 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_trailingUnobscuredRectLayoutGuideConstraint;
  uint64_t v41 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_trailingUnobscuredRectLayoutGuideConstraint];
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_trailingUnobscuredRectLayoutGuideConstraint] = v39;

  id v42 = sub_100E3D238();
  id v43 = [v42 topAnchor];

  id result = [v0 view];
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v44 = result;
  id v45 = [result topAnchor];

  id v46 = [v43 constraintEqualToAnchor:v45];
  uint64_t v47 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_topUnobscuredRectLayoutGuideConstraint;
  uint64_t v48 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_topUnobscuredRectLayoutGuideConstraint];
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_topUnobscuredRectLayoutGuideConstraint] = v46;

  id v49 = sub_100E3D238();
  id v50 = [v49 bottomAnchor];

  id result = [v0 view];
  if (!result)
  {
LABEL_23:
    __break(1u);
    return result;
  }
  uint64_t v51 = result;
  id v52 = [result bottomAnchor];

  id v53 = [v50 constraintEqualToAnchor:v52];
  uint64_t v54 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomUnobscuredRectLayoutGuideConstraint;
  uint64_t v55 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomUnobscuredRectLayoutGuideConstraint];
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomUnobscuredRectLayoutGuideConstraint] = v53;

  [*(id *)&v0[v33] setActive:1];
  [*(id *)&v0[v40] setActive:1];
  [*(id *)&v0[v47] setActive:1];
  id v56 = *(void **)&v0[v54];

  return [v56 setActive:1];
}

void sub_100E4B054()
{
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_87;
  }
  uint64_t v2 = v1;
  [v1 safeAreaInsets];
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v148 = v9;

  double top = UIEdgeInsetsZero.top;
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  id v14 = [v0 presentedViewController];
  if (!v14
    || (id v15 = v14, v16 = [v14 isBeingDismissed], v15, v17 = bottom, v16))
  {
    id v18 = [self sharedKeyboardMonitor];
    [v18 onScreenHeight];
    double v20 = v19;

    if (bottom >= v20) {
      double v17 = bottom;
    }
    else {
      double v17 = v20;
    }
  }
  double v147 = v6;
  if (left <= 0.0) {
    double v6 = 0.0;
  }
  if (right <= 0.0) {
    double v21 = 0.0;
  }
  else {
    double v21 = v148;
  }
  if (UIEdgeInsetsZero.top <= 0.0) {
    double v4 = 0.0;
  }
  double v150 = bottom;
  if (v17 > 0.0)
  {
    double v150 = v17 - v8;
    id v22 = [v0 traitCollection];
    id v23 = [v22 horizontalSizeClass];

    if (v23 == (id)1 || objc_msgSend(self, "crl_phoneUI"))
    {
      id v24 = [self sharedKeyboardMonitor];
      [v24 keyboardFrame];
      double v26 = v25;
      double v142 = v28;
      double v144 = v27;
      double v141 = v29;

      id v30 = [v0 view];
      if (v30)
      {
        id v31 = v30;
        id v32 = [v30 window];
        if (v32
          && (uint64_t v33 = v32,
              id v34 = [v32 screen],
              v33,
              id v35 = [v34 coordinateSpace],
              v34,
              v35))
        {
          [v31 convertRect:v35 fromCoordinateSpace:v26];
          double MaxY = CGRectGetMaxY(v153);
          [v31 bounds];
          double v36 = CGRectGetMaxY(v154);
          swift_unknownObjectRelease();

          double v150 = v150 - (MaxY - v36);
        }
        else
        {
        }
      }
    }
  }
  double v37 = left - v6;
  double v38 = right - v21;
  double v39 = UIEdgeInsetsZero.top - v4;
  uint64_t v40 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasScrollViewController;
  uint64_t v41 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasScrollViewController];
  if (v41)
  {
    [v41 additionalSafeAreaInsets];
    double top = v42;
    double left = v43;
    double bottom = v44;
    double right = v45;
  }
  id v46 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView];
  if (top != v39 || left != v37 || bottom != v150 || right != v38)
  {
    [*(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView] safeAreaInsets];
    double v51 = v50;
    double v53 = v52;
    double v55 = v54;
    [v46 contentOffset];
    double v57 = v56;
    double v59 = v58;
    [v46 contentSize];
    double v143 = v61;
    double v146 = v60;
    id v62 = *(void **)&v0[v40];
    if (v62) {
      [v62 setAdditionalSafeAreaInsets:v39, v37, v150, v38];
    }
    [v46 safeAreaInsets:v141];
    double v66 = v64;
    if (v51 != v63)
    {
      BOOL v69 = v63 < fabs(v59) && v59 < 0.0;
      double v70 = -v63;
      if (v69) {
        double v59 = v70;
      }
      goto LABEL_52;
    }
    if (v53 == v64)
    {
      if (v55 == v65) {
        goto LABEL_59;
      }
    }
    else if (v55 == v65)
    {
LABEL_52:
      if (v57 >= 0.0)
      {
        double v73 = v143;
        double v72 = v146;
      }
      else
      {
        double v73 = v143;
        double v72 = v146;
        if (v66 < fabs(v57) && sub_1003E8750()) {
          double v57 = -v66;
        }
      }
      [v46 setContentOffset:v57 relativeToOriginalSize:v59, v72, v73];
      goto LABEL_59;
    }
    [v46 contentOffset];
    double v59 = v71;
    goto LABEL_52;
  }
  id v67 = [*(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView] delegate];
  if (v67)
  {
    uint64_t v68 = v67;
    if ([v67 respondsToSelector:"scrollViewDidChangeAdjustedContentInset:"]) {
      [v68 scrollViewDidChangeAdjustedContentInset:v46];
    }
    swift_unknownObjectRelease();
  }
LABEL_59:
  unint64_t v74 = *(void **)&v0[v40];
  id v151 = v74;
  [v46 contentInset];
  double v76 = v75;
  if (v74)
  {
    [v151 additionalSafeAreaInsets];
    double v77 = 0.0;
    double v78 = 0.0;
    if (v79 == 0.0)
    {
      id v80 = [v0 view];
      if (!v80)
      {
LABEL_90:
        __break(1u);
        return;
      }
      unint64_t v81 = v80;
      [v80 safeAreaInsets];
      double v83 = v82;

      double v78 = -v83;
    }
    [v151 additionalSafeAreaInsets:v141];
    if (v84 == 0.0) {
      double v85 = -v147;
    }
    else {
      double v85 = 0.0;
    }
    [v151 additionalSafeAreaInsets];
    if (v86 == 0.0) {
      double v77 = -v148;
    }
  }
  else
  {
    double v77 = 0.0;
    double v85 = 0.0;
    double v78 = 0.0;
  }
  [v46 setContentInset:v76, v85, v78, v77, *(void *)&v141];
  sub_100E73654();
  CGFloat v88 = v87;
  CGFloat v90 = v89;
  CGFloat v92 = v91;
  CGFloat v94 = v93;
  if (sub_1003E86EC())
  {
    id v95 = [v0 view];
    if (!v95)
    {
LABEL_88:
      __break(1u);
      goto LABEL_89;
    }
    BOOL v96 = v95;
    [v95 frame];
    CGFloat v98 = v97;
    CGFloat v100 = v99;
    CGFloat v102 = v101;
    CGFloat v104 = v103;

    v155.origin.x = v98;
    v155.origin.y = v100;
    v155.size.width = v102;
    v155.size.height = v104;
    double MaxX = CGRectGetMaxX(v155);
    CGFloat v106 = v88;
    v156.origin.x = v88;
    v156.origin.y = v90;
    v156.size.width = v92;
    v156.size.height = v94;
    double v107 = MaxX - CGRectGetMaxX(v156);
    v157.origin.x = v106;
    v157.origin.y = v90;
    v157.size.width = v92;
    v157.size.height = v94;
    double MinX = CGRectGetMinX(v157);
  }
  else
  {
    v158.origin.x = v88;
    v158.origin.y = v90;
    v158.size.width = v92;
    v158.size.height = v94;
    CGFloat v149 = CGRectGetMinX(v158);
    id v109 = [v0 view];
    if (!v109)
    {
LABEL_89:
      __break(1u);
      goto LABEL_90;
    }
    uint64_t v110 = v109;
    CGFloat v111 = v94;
    CGFloat v112 = v92;
    CGFloat v113 = v90;
    [v109 frame];
    CGFloat v115 = v114;
    CGFloat v117 = v116;
    CGFloat v119 = v118;
    CGFloat v121 = v120;

    v159.origin.x = v115;
    v159.origin.y = v117;
    v159.size.width = v119;
    v159.size.height = v121;
    double v122 = CGRectGetMaxX(v159);
    v160.origin.x = v88;
    v160.origin.y = v113;
    v160.size.width = v112;
    v160.size.height = v111;
    double MinX = v122 - CGRectGetMaxX(v160);
    CGFloat v106 = v88;
    CGFloat v90 = v113;
    CGFloat v92 = v112;
    CGFloat v94 = v111;
    double v107 = v149;
  }
  uint64_t v123 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_leadingUnobscuredRectLayoutGuideConstraint];
  if (v123) {
    [v123 setConstant:v107];
  }
  uint64_t v124 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_trailingUnobscuredRectLayoutGuideConstraint];
  if (v124) {
    [v124 setConstant:-MinX];
  }
  uint64_t v125 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_topUnobscuredRectLayoutGuideConstraint];
  if (v125)
  {
    id v126 = v125;
    v161.origin.x = v106;
    v161.origin.y = v90;
    v161.size.width = v92;
    v161.size.height = v94;
    [v126 setConstant:CGRectGetMinY(v161)];
  }
  uint64_t v127 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomUnobscuredRectLayoutGuideConstraint];
  if (!v127) {
    goto LABEL_83;
  }
  CGFloat v128 = v90;
  id v129 = v127;
  id v130 = [v0 view];
  if (!v130)
  {
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  uint64_t v131 = v130;
  [v130 frame];
  CGFloat v133 = v132;
  CGFloat v135 = v134;
  CGFloat v137 = v136;
  CGFloat v139 = v138;

  v162.origin.x = v133;
  v162.origin.y = v135;
  v162.size.width = v137;
  v162.size.height = v139;
  double v140 = CGRectGetMaxY(v162);
  v163.origin.x = v106;
  v163.origin.y = v128;
  v163.size.width = v92;
  v163.size.height = v94;
  [v129 setConstant:-(v140 - CGRectGetMaxY(v163))];

LABEL_83:
}

uint64_t sub_100E4B888(uint64_t a1)
{
  uint64_t v59 = a1;
  uint64_t v58 = type metadata accessor for Notification();
  uint64_t v2 = *(void *)(v58 - 8);
  __chkstk_darwin(v58, v3);
  double v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v6 - 8, v7);
  double v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  __chkstk_darwin(v10 - 8, v11);
  id v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v14 - 8, v15);
  double v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100E4CAB4();
  double v57 = v1;
  id v18 = *(char **)(*(void *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v19 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v20 = *(void *)&v18[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100E77E88(v20, (uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  double v21 = v18;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100E77EF0((uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  uint64_t v22 = (uint64_t)v17;
  swift_release();
  id v23 = (uint64_t *)(*(void *)&v18[v19] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v24 = *v23;
  unint64_t v25 = v23[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v13, v24, v25, (uint64_t)v17);

  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v59, v58);
  if (sub_100DC6278((uint64_t)v5))
  {
    uint64_t v27 = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v28 = sub_1006E5EA4((uint64_t)v17, v27);
    swift_bridgeObjectRelease();
    if (v28)
    {
      double v29 = v57;
      if (v57[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_skipNextToolbarUpdate])
      {
        v57[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_skipNextToolbarUpdate] = 0;
      }
      else
      {
        id v30 = [v57 traitCollection];
        sub_1005919EC(v30, (int)[*(id *)&v29[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] documentIsSharedReadOnly], (uint64_t)v63);
        sub_100591DC0(v63, 0);
        sub_1005393A8((uint64_t)v63);
      }
      char v31 = sub_100E4EA7C();
      uint64_t v32 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled;
      int v33 = v29[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled];
      if (v33 == 2)
      {
        char v34 = sub_100E4EA7C();
        v29[v32] = v34 & 1;
      }
      else
      {
        char v34 = v33 & 1;
      }
      if ((v31 & 1) != (v34 & 1))
      {
        v29[v32] = v31 & 1;
        [*(id *)&v29[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] updateCanvasDotGridVisibilityIfNeeded];
        double v61 = &type metadata for CRLFeatureFlags;
        unint64_t v62 = sub_1005396A8();
        v60[0] = 8;
        char v35 = isFeatureEnabled(_:)();
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v60);
        if (v35)
        {
          double v36 = *(void **)&v29[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController];
          if (v36)
          {
            id v37 = v36;
            sub_1009A6814();
          }
        }
      }
      double v61 = &type metadata for CRLFeatureFlags;
      unint64_t v38 = sub_1005396A8();
      unint64_t v62 = v38;
      v60[0] = 8;
      char v39 = isFeatureEnabled(_:)();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v60);
      if (v39)
      {
        char v40 = sub_100E4F834();
        uint64_t v41 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled;
        int v42 = v29[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled];
        if (v42 == 2)
        {
          char v43 = sub_100E4F834();
          v29[v41] = v43 & 1;
        }
        else
        {
          char v43 = v42 & 1;
        }
        if ((v40 & 1) != (v43 & 1))
        {
          v29[v41] = v40 & 1;
          sub_100E4FB4C();
        }
      }
      double v61 = &type metadata for CRLFeatureFlags;
      unint64_t v62 = v38;
      v60[0] = 17;
      char v44 = isFeatureEnabled(_:)();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v60);
      if (v44)
      {
        double v45 = v57;
        int v46 = sub_100E4FD60() & 1;
        uint64_t v47 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState;
        uint64_t v48 = *(void **)&v45[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState];
        swift_getKeyPath();
        swift_getKeyPath();
        id v49 = v48;
        static Published.subscript.getter();

        swift_release();
        swift_release();
        if (v46 != v60[0])
        {
          id v50 = *(id *)&v45[v47];
          sub_10080F0BC();
        }
        sub_100E41378();
        id v51 = sub_100E3C92C();
        sub_10050BF48(0, &qword_101673A80);
        UIMenuElementSize v55 = sub_10059D888();
        v52._countAndFlagsBits = 0;
        v52._object = (void *)0xE000000000000000;
        v64.value.super.Class isa = 0;
        v64.is_nil = 0;
        Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v52, (Swift::String_optional)0, v64, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v55, v56).super.super.isa;
        [v51 setMenu:isa];
      }
    }
  }
  return sub_100E77EF0(v22, type metadata accessor for CRLBoardIdentifier);
}

uint64_t sub_100E4BF58()
{
  v1[24] = v0;
  type metadata accessor for MainActor();
  v1[25] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[26] = v3;
  v1[27] = v2;
  return _swift_task_switch(sub_100E4BFF0, v3, v2);
}

uint64_t sub_100E4BFF0()
{
  char v1 = sub_100E4C8BC();
  id v2 = [self mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 localizedStringForKey:v3 value:v4 table:0];

  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = self;
  if (objc_msgSend(v6, "crl_iPadDevice"))
  {
    if (v1) {
      goto LABEL_5;
    }
  }
  else if (v1)
  {
LABEL_5:
    id v7 = [self mainBundle];
    goto LABEL_7;
  }
  [v6 crl_iPadDevice:v27];
  id v7 = [self mainBundle];
LABEL_7:
  NSString v8 = String._bridgeToObjectiveC()();
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];
  uint64_t v11 = (void *)v0[24];
  id v12 = v10;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v15 = [self alertControllerWithTitle:v13 message:v14 preferredStyle:1];
  v0[28] = v15;

  id v16 = [self mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v16 localizedStringForKey:v17 value:v18 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v11;
  id v21 = v11;
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v0[15] = sub_100E77210;
  v0[16] = v20;
  v0[11] = _NSConcreteStackBlock;
  v0[12] = *(void *)"";
  v0[13] = sub_10051CE64;
  v0[14] = &unk_101530908;
  id v23 = _Block_copy(v0 + 11);
  swift_release();
  id v24 = [self actionWithTitle:v22 style:1 handler:v23];
  v0[29] = v24;
  _Block_release(v23);

  [v15 addAction:v24];
  unint64_t v25 = (void *)swift_task_alloc();
  v0[30] = v25;
  *unint64_t v25 = v0;
  v25[1] = sub_100E4C54C;
  return sub_100B75534((uint64_t)v15, 1);
}

uint64_t sub_100E4C54C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 248) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 216);
  uint64_t v4 = *(void *)(v2 + 208);
  if (v0) {
    id v5 = sub_100E4C6FC;
  }
  else {
    id v5 = sub_100E4C688;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100E4C688()
{
  uint64_t v2 = (void *)v0[28];
  char v1 = (void *)v0[29];
  swift_release();
  sub_100F2BCC8(v2);

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100E4C6FC()
{
  swift_release();
  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  char v1 = (void *)v0[28];
  uint64_t v2 = (void *)v0[29];
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.crlError;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v5 = v3;
  uint64_t v6 = Error.localizedDescription.getter();
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  uint64_t v9 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Caught error trying to present alert for handling unsupported board: %@", 71, 2, inited);

  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  id v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100E4C8BC()
{
  id v1 = [self sharedDefaults];
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 dictionaryForKey:v2];

  if (v3)
  {
    unint64_t v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    unint64_t v4 = sub_100A393A8((uint64_t)_swiftEmptyArrayStorage);
  }
  NSString v13 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_CRLUnsupportedDevicesKey);
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_10095647C((uint64_t)v14), (v6 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v15);
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)v14);
  if (!*((void *)&v16 + 1))
  {
    sub_100522F00((uint64_t)&v15, &qword_101672BF0);
    goto LABEL_12;
  }
  sub_1005057FC((uint64_t *)&unk_1016773F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    char v11 = 1;
    return v11 & 1;
  }
  id v7 = [self crl_platformString];
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  LOBYTE(v7) = sub_100ED5CE8(v8, v10, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v11 = v7 ^ 1;
  return v11 & 1;
}

void sub_100E4CAB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v46 = (uint64_t)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  __chkstk_darwin(v13 - 8, v14);
  long long v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = *(char **)(*(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v22 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v23 = *(void *)&v21[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100E77E88(v23, (uint64_t)v12, type metadata accessor for CRLBoardCRDTData);
  id v24 = v21;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100E77EF0((uint64_t)v12, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  unint64_t v25 = (uint64_t *)(*(void *)&v21[v22] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v26 = *v25;
  unint64_t v27 = v25[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v16, v26, v27, (uint64_t)v20);

  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v29 = (void *)Strong;
    unint64_t v30 = *(void *)(Strong + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
    swift_bridgeObjectRetain();

    __chkstk_darwin(v31, v32);
    *(&v46 - 2) = (uint64_t)v20;
    int v33 = (void *)sub_1008E81F4(1, (uint64_t (*)(id))sub_10062E948, (uint64_t)(&v46 - 4), v30);
    swift_bridgeObjectRelease();
    if (v33)
    {
      uint64_t v34 = (uint64_t)v33 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item;
      sub_100E77E88((uint64_t)v33 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v36 = v46;
          sub_100E771A8((uint64_t)v8, v46, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          uint64_t v37 = sub_100DD4C48();
          uint64_t v39 = v38;
          char v40 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
          uint64_t v41 = v36;
        }
        else
        {
          char v43 = (uint64_t *)&v8[*(int *)(sub_1005057FC(&qword_101677100) + 48)];
          uint64_t v37 = *v43;
          uint64_t v39 = v43[1];
          char v40 = type metadata accessor for CRLBoardIdentifier;
          uint64_t v41 = (uint64_t)v8;
        }
        sub_100E77EF0(v41, v40);
      }
      else
      {
        uint64_t v37 = sub_100DD8CAC();
        uint64_t v39 = v42;
      }
      sub_1005916C8(v37, v39);
      swift_bridgeObjectRelease();
      id v44 = sub_100D7A804();
      if (!v44)
      {
        sub_100E77EF0((uint64_t)v20, type metadata accessor for CRLBoardIdentifier);

        return;
      }
      double v45 = v44;
      swift_retain();

      sub_10076F75C(v34);
      swift_release();
    }
  }
  sub_100E77EF0((uint64_t)v20, type metadata accessor for CRLBoardIdentifier);
}

uint64_t sub_100E4CF4C(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(char **)(*(void *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v14 = *(void *)&v13[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100E77E88(v14, (uint64_t)v12, type metadata accessor for CRLBoardCRDTData);
  uint64_t v15 = v13;
  sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  uint64_t v17 = v28[1];
  uint64_t v16 = v28[2];
  sub_100E77EF0((uint64_t)v12, type metadata accessor for CRLBoardCRDTData);

  uint64_t v18 = String.count.getter();
  swift_bridgeObjectRetain();
  uint64_t v19 = a1;
  unint64_t v20 = a2;
  if (v18 >= 256)
  {
    sub_100E704DC(255);
    swift_bridgeObjectRelease();
    uint64_t v19 = static String._fromSubstring(_:)();
    unint64_t v20 = v21;
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0) {
    uint64_t v22 = v19 & 0xFFFFFFFFFFFFLL;
  }
  if (!v22) {
    goto LABEL_10;
  }
  if (v19 == v17 && v20 == v16) {
    return swift_bridgeObjectRelease_n();
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v24 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v8, 1, 1, v24);
    uint64_t v25 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v26 = static MainActor.shared.getter();
    unint64_t v27 = (void *)swift_allocObject();
    void v27[2] = v26;
    v27[3] = &protocol witness table for MainActor;
    v27[4] = v25;
    v27[5] = v19;
    v27[6] = v20;
    v27[7] = v17;
    v27[8] = v16;
    v27[9] = a1;
    v27[10] = a2;
    swift_release();
    sub_1005912D0((uint64_t)v8, (uint64_t)&unk_10169FBF0, (uint64_t)v27);
    return swift_release();
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100E4D2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[37] = v13;
  v8[38] = v14;
  v8[35] = a7;
  v8[36] = a8;
  v8[33] = a5;
  v8[34] = a6;
  unsigned char v8[32] = a4;
  type metadata accessor for CRLBoardCRDTData(0);
  v8[39] = swift_task_alloc();
  type metadata accessor for UUID();
  v8[40] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v8[41] = swift_task_alloc();
  type metadata accessor for MainActor();
  v8[42] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v8[43] = v10;
  v8[44] = v9;
  return _swift_task_switch(sub_100E4D3D4, v10, v9);
}

uint64_t sub_100E4D3D4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[22].uint64_t super_class = (Class)Strong;
  if (Strong)
  {
    uint64_t receiver = (uint64_t)v0[20].receiver;
    uint64_t super_class = (uint64_t)v0[20].super_class;
    uint64_t v4 = (uint64_t)v0[19].super_class;
    Class v6 = v0[16].super_class;
    uint64_t v5 = (objc_class *)v0[17].receiver;
    uint64_t v7 = *(char **)(*(void *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                  + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    uint64_t v8 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v9 = *(void *)&v7[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100E77E88(v9, v4, type metadata accessor for CRLBoardCRDTData);
    uint64_t v10 = v7;
    swift_retain();
    sub_1005057FC(&qword_101674550);
    CRRegister.wrappedValue.getter();
    sub_100E77EF0(v4, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    uint64_t v11 = (uint64_t *)(*(void *)&v7[v8] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v12 = *v11;
    unint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_100753370(receiver, v12, v13, super_class);

    uint64_t v14 = (objc_class *)type metadata accessor for CRLSetBoardTitleCommand();
    uint64_t v15 = (char *)objc_allocWithZone(v14);
    uint64_t v16 = &v15[OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_previousBoardTitle];
    *(void *)uint64_t v16 = 0;
    *((void *)v16 + 1) = 0;
    sub_100E77E88(super_class, (uint64_t)&v15[OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_boardIdentifier], type metadata accessor for CRLBoardIdentifier);
    uint64_t v17 = (Class *)&v15[OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_boardTitle];
    *uint64_t v17 = v6;
    v17[1] = v5;
    v0[14].uint64_t receiver = v15;
    v0[14].uint64_t super_class = v14;
    swift_bridgeObjectRetain();
    id v18 = [super init];
    v0[23].uint64_t receiver = v18;
    sub_100E77EF0(super_class, type metadata accessor for CRLBoardIdentifier);
    id v19 = [self sharedApplication];
    id v20 = [v19 delegate];

    if (v20)
    {
      type metadata accessor for CRLiOSAppDelegate();
      unint64_t v21 = *(objc_class **)(swift_dynamicCastClassUnconditional()
                           + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
      v0[23].uint64_t super_class = v21;
      if (v21)
      {
        v21;
        swift_unknownObjectRelease();
        uint64_t v22 = (void *)swift_task_alloc();
        v0[24].uint64_t receiver = v22;
        void *v22 = v0;
        v22[1] = sub_100E4D7E8;
        return sub_100DF8B44((uint64_t)v18);
      }
    }
    else
    {
      __break(1u);
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 242, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 242);
    uint64_t result = swift_unknownObjectRelease();
    __break(1u);
    return result;
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0->super_class;
  return v24();
}

uint64_t sub_100E4D7E8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 392) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 344);
    uint64_t v4 = *(void *)(v2 + 352);
    uint64_t v5 = sub_100E4DBA4;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 344);
    uint64_t v4 = *(void *)(v2 + 352);
    uint64_t v5 = sub_100E4D904;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100E4D904()
{
  *(void *)(v0 + 400) = [*(id *)(v0 + 360) navigationItem];
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 408) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100E4D9B0;
  return sub_100593F6C();
}

uint64_t sub_100E4D9B0(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 416) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 352);
  uint64_t v4 = *(void *)(v2 + 344);
  return _swift_task_switch(sub_100E4DAD8, v4, v3);
}

uint64_t sub_100E4DAD8()
{
  uint64_t v1 = (void *)v0[52];
  uint64_t v2 = (void *)v0[50];
  uint64_t v3 = (void *)v0[45];
  uint64_t v4 = (void *)v0[46];
  uint64_t v6 = v0[33];
  uint64_t v5 = v0[34];
  swift_release();
  [v2 setDocumentProperties:v1];

  sub_1005916C8(v6, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100E4DBA4()
{
  uint64_t v1 = *(void *)(v0 + 392);
  uint64_t v3 = *(void **)(v0 + 368);
  uint64_t v2 = *(void **)(v0 + 376);
  uint64_t v5 = *(void *)(v0 + 280);
  uint64_t v4 = *(void *)(v0 + 288);
  swift_release();

  sub_1005916C8(v5, v4);
  *(void *)(v0 + 240) = v1;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  if (swift_dynamicCast())
  {
    uint64_t v6 = *(void *)(v0 + 200);
    uint64_t v7 = *(void *)(v0 + 208);
    char v8 = *(unsigned char *)(v0 + 216);
    sub_1006F6E90(v6, v7, v8);
    if (v9)
    {
      sub_1006F7004(v6, v7, v8);
      uint64_t v11 = v10;
      sub_100651F90(v6, v7, v8);
      if (v11)
      {
        uint64_t v12 = *(void **)(v0 + 360);
        NSString v13 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v14 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v15 = [self alertControllerWithTitle:v13 message:v14 preferredStyle:1];

        id v16 = [self mainBundle];
        NSString v17 = String._bridgeToObjectiveC()();
        NSString v18 = String._bridgeToObjectiveC()();
        id v19 = [v16 localizedStringForKey:v17 value:v18 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v20 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v21 = [self actionWithTitle:v20 style:0 handler:0];

        [v15 addAction:v21];
        [v12 presentViewController:v15 animated:1 completion:0];

        swift_errorRelease();
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100651F90(v6, v7, v8);
    }
  }
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  uint64_t v22 = *(void *)(v0 + 392);
  uint64_t v34 = *(void **)(v0 + 360);
  uint64_t v24 = *(void *)(v0 + 296);
  uint64_t v23 = *(void *)(v0 + 304);
  swift_beginAccess();
  uint64_t v25 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v27 = sub_100528BE4();
  *(void *)(inited + 64) = v27;
  *(void *)(inited + 32) = v24;
  *(void *)(inited + 40) = v23;
  *(void *)(v0 + 248) = v22;
  swift_errorRetain();
  id v28 = v25;
  swift_bridgeObjectRetain();
  uint64_t v29 = String.init<A>(describing:)();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v27;
  *(void *)(inited + 72) = v29;
  *(void *)(inited + 80) = v30;
  uint64_t v31 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v28, (uint64_t)&_mh_execute_header, v31, (uint64_t)"Error renaming item (%@): %@", 28, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
LABEL_10:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32();
}

void sub_100E4E064(char a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v8 = (void *)Strong;
    char v9 = a1 & 1;
    v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled] = a1 & 1;
    v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_skipNextToolbarUpdate] = 1;
    uint64_t v10 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = 0;
    *(void *)(v11 + 24) = 0;
    *(void *)(v11 + 32) = v8;
    *(void *)(v11 + 40) = v1;
    *(unsigned char *)(v11 + 48) = v9;
    id v12 = v8;
    NSString v13 = v1;
    sub_100B107F4((uint64_t)v6, (uint64_t)&unk_10169FBE0, v11);
    swift_release();
    sub_100522F00((uint64_t)v6, &qword_101672BB0);
    [*(id *)&v13[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] updateCanvasDotGridVisibilityIfNeeded];
    id v19 = &type metadata for CRLFeatureFlags;
    unint64_t v20 = sub_1005396A8();
    v18[0] = 8;
    char v14 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v18);
    if (v14)
    {
      id v15 = *(void **)&v13[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController];
      if (v15)
      {
        id v16 = v15;
        sub_1009A6814();

        id v12 = v16;
      }
    }
  }
}

uint64_t sub_100E4E238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 196) = a6;
  *(void *)(v6 + 80) = a4;
  *(void *)(v6 + 88) = a5;
  type metadata accessor for CRLBoardCRDTData(0);
  *(void *)(v6 + 96) = swift_task_alloc();
  type metadata accessor for UUID();
  *(void *)(v6 + 104) = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  *(void *)(v6 + 112) = swift_task_alloc();
  return _swift_task_switch(sub_100E4E324, 0, 0);
}

uint64_t sub_100E4E324()
{
  sub_1005057FC(&qword_101683000);
  uint64_t v1 = type metadata accessor for CRLBoardIdentifierAndValue(0);
  *(void *)(v0 + 120) = v1;
  *(_DWORD *)(v0 + 192) = *(_DWORD *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = swift_allocObject();
  *(void *)(v0 + 128) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_10117E810;
  *(void *)(v0 + 136) = type metadata accessor for MainActor();
  *(void *)(v0 + 144) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100E4E44C, v4, v3);
}

uint64_t sub_100E4E44C()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_release();
  uint64_t v2 = *(void **)(*(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  *(void *)(v0 + 152) = v2;
  id v3 = v2;
  return _swift_task_switch(sub_100E4E4E0, 0, 0);
}

uint64_t sub_100E4E4E0()
{
  uint64_t v1 = *(char **)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v16 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 96);
  char v15 = *(unsigned char *)(v0 + 196);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v0 + 192) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 192));
  uint64_t v7 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v8 = *(void *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100E77E88(v8, v5, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100E77EF0(v5, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  char v9 = (uint64_t *)(*(void *)&v1[v7] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  swift_bridgeObjectRetain();
  sub_100753370(v4, v10, v11, v3);

  sub_100E771A8(v3, v6, type metadata accessor for CRLBoardIdentifier);
  *(unsigned char *)(v6 + *(int *)(v16 + 20)) = v15;
  if (*(void *)(v2 + 16)) {
    id v12 = sub_10050B520(*(void *)(v0 + 128));
  }
  else {
    id v12 = &_swiftEmptySetSingleton;
  }
  *(void *)(v0 + 160) = v12;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  NSString v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v13;
  *NSString v13 = v0;
  v13[1] = sub_100E4E71C;
  return sub_100EE1704((uint64_t)v12);
}

uint64_t sub_100E4E71C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100E4E874, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_100E4E874()
{
  swift_bridgeObjectRelease();
  *(void *)(v0 + 184) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100E4E908, v2, v1);
}

uint64_t sub_100E4E908()
{
  char v1 = *(unsigned char *)(v0 + 196);
  uint64_t v2 = *(void *)(v0 + 88);
  swift_release();
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled) = (v1 & 1) == 0;
  [*(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) updateCanvasDotGridVisibilityIfNeeded];
  *(void *)(v0 + 40) = &type metadata for CRLFeatureFlags;
  unint64_t v3 = sub_1005396A8();
  *(unsigned char *)(v0 + 16) = 8;
  *(void *)(v0 + 48) = v3;
  LOBYTE(v2) = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  if (v2)
  {
    uint64_t v4 = *(void **)(*(void *)(v0 + 88)
                  + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController);
    if (v4)
    {
      id v5 = v4;
      sub_1009A6814();
    }
  }
  return _swift_task_switch(sub_100E4EA00, 0, 0);
}

uint64_t sub_100E4EA00()
{
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100E4EA7C()
{
  uint64_t v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v9 - 8, v10);
  id v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  NSString v18 = (void *)Strong;
  uint64_t v29 = v13;
  id v19 = *(char **)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v20 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v21 = *(void *)&v19[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100E77E88(v21, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  uint64_t v22 = v19;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100E77EF0((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v23 = (uint64_t *)(*(void *)&v19[v20] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v24 = *v23;
  unint64_t v25 = v23[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v8, v24, v25, (uint64_t)v12);

  sub_100ED7F04((uint64_t)v12, (uint64_t)v16);
  sub_100E77EF0((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);

  uint64_t v26 = v16[*(int *)(v29 + 52)];
  sub_100E77EF0((uint64_t)v16, type metadata accessor for CRLBoardViewModelMetadata);
  return v26;
}

uint64_t sub_100E4ED9C(unsigned __int8 *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v4 = *a3;
  int v5 = a1[*a3];
  if (v5 == 2)
  {
    uint64_t v8 = a1;
    char v9 = a4();
    a1[v4] = v9 & 1;
  }
  else
  {
    char v9 = v5 & 1;
  }
  return v9 & 1;
}

void sub_100E4EE64(char a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    char v9 = a1 & 1;
    v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled] = a1 & 1;
    v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_skipNextToolbarUpdate] = 1;
    uint64_t v10 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = 0;
    *(void *)(v11 + 24) = 0;
    *(void *)(v11 + 32) = v8;
    *(void *)(v11 + 40) = v1;
    *(unsigned char *)(v11 + 48) = v9;
    id v12 = v8;
    uint64_t v13 = v1;
    sub_100B107F4((uint64_t)v6, (uint64_t)&unk_10169FBC8, v11);
    swift_release();
    sub_100522F00((uint64_t)v6, &qword_101672BB0);
    id v14 = [v13 traitCollection];
    if ([v14 horizontalSizeClass] == (id)1)
    {
    }
    else
    {
      unsigned __int8 v15 = [self crl_phoneUI];

      if ((v15 & 1) == 0)
      {
        id v16 = [*(id *)&v13[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController] miniFormatterPresenter];
        if (v16)
        {
          [v16 dismissMiniFormatter];
          swift_unknownObjectRelease();
        }
      }
    }
    sub_100E4FB4C();
  }
}

uint64_t sub_100E4F060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 156) = a6;
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 48) = a5;
  type metadata accessor for CRLBoardCRDTData(0);
  *(void *)(v6 + 56) = swift_task_alloc();
  type metadata accessor for UUID();
  *(void *)(v6 + 64) = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  *(void *)(v6 + 72) = swift_task_alloc();
  return _swift_task_switch(sub_100E4F14C, 0, 0);
}

uint64_t sub_100E4F14C()
{
  sub_1005057FC(&qword_101683000);
  uint64_t v1 = type metadata accessor for CRLBoardIdentifierAndValue(0);
  *(void *)(v0 + 80) = v1;
  *(_DWORD *)(v0 + 152) = *(_DWORD *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = swift_allocObject();
  *(void *)(v0 + 88) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_10117E810;
  *(void *)(v0 + 96) = type metadata accessor for MainActor();
  *(void *)(v0 + 104) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100E4F274, v4, v3);
}

uint64_t sub_100E4F274()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_release();
  uint64_t v2 = *(void **)(*(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  *(void *)(v0 + 112) = v2;
  id v3 = v2;
  return _swift_task_switch(sub_100E4F308, 0, 0);
}

uint64_t sub_100E4F308()
{
  uint64_t v1 = *(char **)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v16 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 56);
  char v15 = *(unsigned char *)(v0 + 156);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v0 + 152) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 152));
  uint64_t v7 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v8 = *(void *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100E77E88(v8, v5, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100E77EF0(v5, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  char v9 = (uint64_t *)(*(void *)&v1[v7] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  swift_bridgeObjectRetain();
  sub_100753370(v4, v10, v11, v3);

  sub_100E771A8(v3, v6, type metadata accessor for CRLBoardIdentifier);
  *(unsigned char *)(v6 + *(int *)(v16 + 20)) = v15;
  if (*(void *)(v2 + 16)) {
    id v12 = sub_10050B520(*(void *)(v0 + 88));
  }
  else {
    id v12 = &_swiftEmptySetSingleton;
  }
  *(void *)(v0 + 120) = v12;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_100E4F544;
  return sub_100EE1A5C((uint64_t)v12);
}

uint64_t sub_100E4F544()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100E4F69C, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_100E4F69C()
{
  swift_bridgeObjectRelease();
  *(void *)(v0 + 144) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100E4F730, v2, v1);
}

uint64_t sub_100E4F730()
{
  char v1 = *(unsigned char *)(v0 + 156);
  uint64_t v2 = *(void *)(v0 + 48);
  swift_release();
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled) = (v1 & 1) == 0;
  sub_100E4FB4C();
  return _swift_task_switch(sub_100E4F7B8, 0, 0);
}

uint64_t sub_100E4F7B8()
{
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100E4F834()
{
  uint64_t v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v9 - 8, v10);
  id v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  NSString v18 = (void *)Strong;
  uint64_t v29 = v13;
  id v19 = *(char **)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v20 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v21 = *(void *)&v19[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100E77E88(v21, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  uint64_t v22 = v19;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100E77EF0((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v23 = (uint64_t *)(*(void *)&v19[v20] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v24 = *v23;
  unint64_t v25 = v23[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v8, v24, v25, (uint64_t)v12);

  sub_100ED7F04((uint64_t)v12, (uint64_t)v16);
  sub_100E77EF0((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);

  uint64_t v26 = v16[*(int *)(v29 + 56)];
  sub_100E77EF0((uint64_t)v16, type metadata accessor for CRLBoardViewModelMetadata);
  return v26;
}

void sub_100E4FB4C()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled;
  int v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled);
  if (v3 == 2)
  {
    char v4 = sub_100E4F834();
    *(unsigned char *)(v0 + v2) = v4 & 1;
  }
  else
  {
    char v4 = v3 & 1;
  }
  uint64_t v5 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewState;
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewState);
  swift_getKeyPath();
  swift_getKeyPath();
  id v7 = v6;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  uint64_t v8 = *(void **)(v0 + v5);
  swift_getKeyPath();
  swift_getKeyPath();
  id v9 = v8;
  static Published.subscript.setter();
  if ((v4 & 1) != v16)
  {
    if ((v4 & 1) == 0)
    {
      uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
      id v11 = *(id *)(v1 + v5);
      [v10 anyConnectorKnobVisible];
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.setter();
    }
    id v12 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
    [v12 updateConnectorKnobVisibilityIfNeeded];
    uint64_t v13 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController);
    if (v13)
    {
      id v14 = v13;
      sub_1009A6BA8();
    }
    if (v4)
    {
      id v15 = *(id *)(v1 + v5);
      [v12 anyConnectorKnobVisible];
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.setter();
    }
  }
}

uint64_t sub_100E4FD60()
{
  uint64_t v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1 - 8, v2);
  char v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v9 - 8, v10);
  id v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v13, v14);
  char v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  NSString v18 = (void *)Strong;
  uint64_t v29 = v13;
  id v19 = *(char **)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v20 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v21 = *(void *)&v19[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100E77E88(v21, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  uint64_t v22 = v19;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100E77EF0((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v23 = (uint64_t *)(*(void *)&v19[v20] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v24 = *v23;
  unint64_t v25 = v23[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v8, v24, v25, (uint64_t)v12);

  sub_100ED7F04((uint64_t)v12, (uint64_t)v16);
  sub_100E77EF0((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);

  uint64_t v26 = v16[*(int *)(v29 + 60)];
  sub_100E77EF0((uint64_t)v16, type metadata accessor for CRLBoardViewModelMetadata);
  return v26;
}

void sub_100E500C4(uint64_t a1)
{
  uint64_t v59 = a1;
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  double v57 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  __chkstk_darwin(v9 - 8, v10);
  id v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v13 - 8, v14);
  char v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v56 - v19;
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)&v56 - v23;
  id v58 = v1;
  unint64_t v25 = *(char **)(*(void *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v26 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v27 = *(void *)&v25[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100E77E88(v27, (uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
  uint64_t v28 = v25;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100E77EF0((uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v29 = (uint64_t *)(*(void *)&v25[v26] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v30 = *v29;
  unint64_t v31 = v29[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v12, v30, v31, (uint64_t)v24);

  uint64_t v32 = v59;
  LOBYTE(v30) = static UUID.== infix(_:_:)();
  sub_100E77E88((uint64_t)v24, (uint64_t)v20, type metadata accessor for CRLBoardIdentifier);
  sub_100E77E88(v32, (uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
  if ((v30 & 1) == 0)
  {
    sub_100E77EF0((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
    sub_100E77EF0((uint64_t)v20, type metadata accessor for CRLBoardIdentifier);
    sub_100E77EF0((uint64_t)v24, type metadata accessor for CRLBoardIdentifier);
    return;
  }
  uint64_t v33 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v34 = *(void *)&v20[v33];
  uint64_t v35 = *(void *)&v20[v33 + 8];
  uint64_t v36 = &v16[v33];
  if (v34 == *(void *)v36 && v35 == *((void *)v36 + 1))
  {
    sub_100E77EF0((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
    sub_100E77EF0((uint64_t)v20, type metadata accessor for CRLBoardIdentifier);
    sub_100E77EF0((uint64_t)v24, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_100E77EF0((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
    sub_100E77EF0((uint64_t)v20, type metadata accessor for CRLBoardIdentifier);
    sub_100E77EF0((uint64_t)v24, type metadata accessor for CRLBoardIdentifier);
    if ((v37 & 1) == 0) {
      return;
    }
  }
  uint64_t v38 = (char *)sub_100D7A804();
  if (v38)
  {
    uint64_t v39 = v38;
    uint64_t v40 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
    uint64_t v41 = *(void **)&v38[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window];
    if (v41 && ([v41 isUserInteractionEnabled] & 1) != 0)
    {
      uint64_t v42 = *(void **)&v39[v40];
      if (!v42
        || (id v43 = [v42 rootViewController]) == 0
        || (id v44 = v43,
            id v45 = objc_msgSend(v43, "crl_windowWrapper"),
            v44,
            !v45)
        || (id v46 = [v45 newWrapperBeginningIgnoringUserInteractionSafely], v45, !v46))
      {
        if (qword_10166F9D8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v47 = (id)static OS_os_log.crlError;
        uint64_t v48 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v47, (uint64_t)&_mh_execute_header, v48, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
          90,
          2,
          (uint64_t)_swiftEmptyArrayStorage);

        id v46 = 0;
      }
      uint64_t v49 = type metadata accessor for TaskPriority();
      uint64_t v50 = (uint64_t)v57;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v57, 1, 1, v49);
      type metadata accessor for MainActor();
      id v51 = v46;
      Swift::String v52 = v39;
      id v53 = v58;
      uint64_t v54 = static MainActor.shared.getter();
      UIMenuElementSize v55 = (void *)swift_allocObject();
      _OWORD v55[2] = v54;
      v55[3] = &protocol witness table for MainActor;
      v55[4] = v52;
      v55[5] = v53;
      v55[6] = v46;
      sub_1005912D0(v50, (uint64_t)&unk_10169FBB8, (uint64_t)v55);

      swift_release();
    }
    else
    {
    }
  }
}

void sub_100E50694(uint64_t a1, uint64_t a2)
{
  uint64_t v39 = a1;
  uint64_t v4 = self;
  id v5 = [v4 mainBundle];
  NSString v6 = String._bridgeToObjectiveC()();
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v5 localizedStringForKey:v6 value:v7 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = *(void *)(*(void *)(*(void *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                             + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState);
  uint64_t v10 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  swift_retain();
  [v10 documentIsSharedReadOnly];
  sub_100DC1A68(v9);
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [self alertControllerWithTitle:v11 message:v12 preferredStyle:1];

  id v14 = [v4 mainBundle];
  NSString v15 = String._bridgeToObjectiveC()();
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v14 localizedStringForKey:v15 value:v16 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v39;
  *(void *)(v18 + 24) = a2;
  swift_retain();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v44 = sub_1006DAE04;
  uint64_t v45 = v18;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v41 = *(void *)"";
  uint64_t v42 = sub_10051CE64;
  id v43 = &unk_1015307C8;
  uint64_t v20 = _Block_copy(&aBlock);
  swift_release();
  id v21 = [self actionWithTitle:v19 style:0 handler:v20];
  _Block_release(v20);

  [v13 addAction:v21];
  id v22 = [v2 presentedViewController];
  if (v22)
  {
    uint64_t v23 = v22;
    id v24 = [v2 presentedViewController];
    if (v24)
    {
      unint64_t v25 = v24;
      self;
      uint64_t v26 = swift_dynamicCastObjCClass();

      BOOL v27 = v26 == 0;
    }
    else
    {
      BOOL v27 = 1;
    }
    [v23 dismissViewControllerAnimated:v27 completion:0 v39];
  }
  id v28 = [v10 layerHost:v39];
  if (v28)
  {
    id v29 = [v28 miniFormatterPresenter];
    swift_unknownObjectRelease();
    if (v29)
    {
      [v29 dismissPresentedMenus];
      swift_unknownObjectRelease();
    }
  }
  id v30 = [v10 tmCoordinator];
  id v31 = [v30 controllingTM];

  if (v31)
  {
    self;
    uint64_t v32 = (void *)swift_dynamicCastObjCClass();
    if (v32) {
      [v32 setState:4];
    }
  }
  uint64_t v33 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController];
  [v33 resetGesturesForContextSwitch];
  unsigned int v34 = [v10 isInDynamicOperation];
  if (v31 || v34)
  {
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v2;
    *(void *)(v35 + 24) = v13;
    id v44 = sub_100E76E8C;
    uint64_t v45 = v35;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v41 = *(void *)"";
    uint64_t v42 = sub_100679958;
    id v43 = &unk_101530818;
    uint64_t v36 = _Block_copy(&aBlock);
    char v37 = v2;
    id v38 = v13;
    swift_release();
    sub_1000AF4C8(v36);
    swift_unknownObjectRelease();

    swift_release();
    _Block_release(v36);
  }
  else
  {
    [v33 presentViewController:v13 animated:1 completion:0];

    swift_release();
  }
}

void sub_100E50C64()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v2 - 8, v3);
  id v5 = (char *)v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v10 - 8, v11);
  id v13 = (char *)v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = *(char **)(*(void *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v15 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v16 = *(void *)&v14[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100E77E88(v16, (uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
  id v17 = v14;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100E77EF0((uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v18 = (uint64_t *)(*(void *)&v14[v15] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v19 = *v18;
  unint64_t v20 = v18[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v9, v19, v20, (uint64_t)v13);

  id v21 = &v13[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
  uint64_t v23 = *(void *)v21;
  uint64_t v22 = *((void *)v21 + 1);
  swift_bridgeObjectRetain();
  sub_100E77EF0((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
  if (!v23 && v22 == 0xE000000000000000)
  {
    swift_bridgeObjectRelease();
    unint64_t v74 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_5:
    double v72 = v1;
    unint64_t v25 = self;
    id v26 = [v25 mainBundle];
    NSString v27 = String._bridgeToObjectiveC()();
    NSString v28 = String._bridgeToObjectiveC()();
    id v29 = [v26 localizedStringForKey:v27 value:v28 table:0];

    v71[2] = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v30 = [v25 mainBundle];
    NSString v31 = String._bridgeToObjectiveC()();
    NSString v32 = String._bridgeToObjectiveC()();
    id v33 = [v30 localizedStringForKey:v31 value:v32 table:0];

    v71[1] = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v34 = [v25 mainBundle];
    NSString v35 = String._bridgeToObjectiveC()();
    NSString v36 = String._bridgeToObjectiveC()();
    id v37 = [v34 localizedStringForKey:v35 value:v36 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v38 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v39 = self;
    id v40 = [v39 actionWithTitle:v38 style:1 handler:0];

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    id v41 = [v25 mainBundle];
    NSString v42 = String._bridgeToObjectiveC()();
    NSString v43 = String._bridgeToObjectiveC()();
    id v44 = [v41 localizedStringForKey:v42 value:v43 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v45 = swift_allocObject();
    uint64_t v1 = v72;
    swift_unknownObjectWeakInit();
    swift_retain();
    NSString v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_100E76E84;
    aBlock[5] = v45;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_10051CE64;
    id aBlock[3] = &unk_101530778;
    id v47 = _Block_copy(aBlock);
    swift_release();
    [v39 actionWithTitle:v46 style:0 handler:v47];
    _Block_release(v47);

    swift_release();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    goto LABEL_11;
  }
  char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  unint64_t v74 = (unint64_t)_swiftEmptyArrayStorage;
  if (v24) {
    goto LABEL_5;
  }
  uint64_t v48 = self;
  id v49 = [v48 mainBundle];
  NSString v50 = String._bridgeToObjectiveC()();
  NSString v51 = String._bridgeToObjectiveC()();
  id v52 = [v49 localizedStringForKey:v50 value:v51 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v53 = [v48 mainBundle];
  NSString v54 = String._bridgeToObjectiveC()();
  NSString v55 = String._bridgeToObjectiveC()();
  id v56 = [v53 localizedStringForKey:v54 value:v55 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v57 = [v48 mainBundle];
  NSString v58 = String._bridgeToObjectiveC()();
  NSString v59 = String._bridgeToObjectiveC()();
  id v60 = [v57 localizedStringForKey:v58 value:v59 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v61 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v62 = [self actionWithTitle:v61 style:1 handler:0];

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_22;
  }
  while (1)
  {
LABEL_11:
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    NSString v63 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v64 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v65 = [self alertControllerWithTitle:v63 message:v64 preferredStyle:1];

    unint64_t v66 = v74;
    if (v74 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
      if (!v67) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v67 = *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v67) {
        goto LABEL_20;
      }
    }
    if (v67 >= 1) {
      break;
    }
    __break(1u);
LABEL_22:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  for (uint64_t i = 0; i != v67; ++i)
  {
    if ((v66 & 0xC000000000000001) != 0) {
      id v69 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v69 = *(id *)(v66 + 8 * i + 32);
    }
    double v70 = v69;
    [v65 addAction:v69];
  }
LABEL_20:
  swift_bridgeObjectRelease_n();
  [v1 presentViewController:v65 animated:1 completion:0];
}

void sub_100E516D0()
{
  uint64_t v0 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v10 = Strong;
    URL.init(string:)();
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    if (v11(v3, 1, v4) == 1)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"cloudQuotaExceededChangePlanURL", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibraryViewController.swift", 101, 2, 31, (uint64_t)"Cloud Quota Exceeded Change Plan URL is nil", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"cloudQuotaExceededChangePlanURL", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibraryViewController.swift", 101, 2, 31);
    }

    if (v11(v3, 1, v4) == 1)
    {
      sub_100522F00((uint64_t)v3, &qword_101672E90);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
      sub_10077FF34((uint64_t)v8);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
}

uint64_t sub_100E5196C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(char **)(*(void *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v17 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v18 = *(void *)&v16[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100E77E88(v18, (uint64_t)v7, type metadata accessor for CRLBoardCRDTData);
  uint64_t v19 = v16;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100E77EF0((uint64_t)v7, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  unint64_t v20 = (uint64_t *)(*(void *)&v16[v17] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v21 = *v20;
  unint64_t v22 = v20[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v11, v21, v22, (uint64_t)v15);

  if (sub_100AEACB4(a1, (uint64_t)v15))
  {
    sub_100AEB8F4(a1, (uint64_t)v15);
    id v23 = [a1 reason];
    if (!v23) {
      goto LABEL_7;
    }
    char v24 = v23;
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v27 = v26;
    if (v25 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v27 == v28)
    {
      swift_bridgeObjectRelease_n();

      goto LABEL_8;
    }
    char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if ((v29 & 1) == 0)
    {
LABEL_7:
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"promptCloudQuotaMessage(_:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 1822, (uint64_t)"expected cloud quota message for alert to be quota almost full", 62, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"promptCloudQuotaMessage(_:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 1822);
    }
LABEL_8:
    id v30 = [a1 actions];
    sub_10050BF48(0, &qword_10169FBB0);
    unint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v31 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v32 != 1)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"promptCloudQuotaMessage(_:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 1823, (uint64_t)"expected only one action for quota almost full message", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"promptCloudQuotaMessage(_:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 1823);
    }
    id v33 = [a1 title];
    if (v33)
    {
      id v34 = v33;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v36 = v35;
    }
    else
    {
      uint64_t v36 = 0;
    }
    id v37 = [a1 subTitle];
    if (v37)
    {
      NSString v38 = v37;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v40 = v39;

      if (v36) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v40 = 0;
      if (v36)
      {
LABEL_17:
        NSString v41 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        if (v40)
        {
LABEL_18:
          NSString v42 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
LABEL_22:
          id v43 = [self alertControllerWithTitle:v41 message:v42 preferredStyle:1];

          id v44 = self;
          id v45 = [v44 mainBundle];
          NSString v46 = String._bridgeToObjectiveC()();
          NSString v47 = String._bridgeToObjectiveC()();
          id v48 = [v45 localizedStringForKey:v46 value:v47 table:0];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          NSString v49 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          double v71 = sub_100E5225C;
          double v72 = 0;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v68 = *(void *)"";
          id v69 = sub_10051CE64;
          double v70 = &unk_101530700;
          NSString v50 = _Block_copy(&aBlock);
          swift_release();
          NSString v51 = self;
          id v52 = [v51 actionWithTitle:v49 style:0 handler:v50];
          _Block_release(v50);

          [v43 addAction:v52];
          id v53 = [v44 mainBundle];
          NSString v54 = String._bridgeToObjectiveC()();
          NSString v55 = String._bridgeToObjectiveC()();
          id v56 = [v53 localizedStringForKey:v54 value:v55 table:0];

          uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v59 = v58;

          uint64_t v60 = swift_allocObject();
          swift_unknownObjectWeakInit();
          NSString v61 = (void *)swift_allocObject();
          v61[2] = v60;
          v61[3] = v57;
          v61[4] = v59;
          swift_bridgeObjectRetain();
          swift_retain();
          NSString v62 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          double v71 = sub_100E76E78;
          double v72 = v61;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v68 = *(void *)"";
          id v69 = sub_10051CE64;
          double v70 = &unk_101530750;
          NSString v63 = _Block_copy(&aBlock);
          swift_release();
          id v64 = [v51 actionWithTitle:v62 style:0 handler:v63];
          _Block_release(v63);

          swift_release();
          [v43 addAction:v64];
          [v2 presentViewController:v43 animated:1 completion:0];
          sub_100F2BCC8(v43);

          return sub_100E77EF0((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
        }
LABEL_21:
        NSString v42 = 0;
        goto LABEL_22;
      }
    }
    NSString v41 = 0;
    if (v40) {
      goto LABEL_18;
    }
    goto LABEL_21;
  }
  return sub_100E77EF0((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
}

void sub_100E5225C()
{
  if (qword_10166FB10 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.crlCloudQuotaMessaging;
  uint64_t v1 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v0, (uint64_t)&_mh_execute_header, v1, (uint64_t)"performing cloud quota message alert action \"Dismiss\"", 53, 2, (uint64_t)_swiftEmptyArrayStorage);
}

void sub_100E5230C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v16 = Strong;
    URL.init(string:)();
    uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    if (v17(v9, 1, v10) == 1)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"cloudQuotaExceededChangePlanURL", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibraryViewController.swift", 101, 2, 31, (uint64_t)"Cloud Quota Exceeded Change Plan URL is nil", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"cloudQuotaExceededChangePlanURL", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibraryViewController.swift", 101, 2, 31);
    }

    if (v17(v9, 1, v10) == 1)
    {
      sub_100522F00((uint64_t)v9, &qword_101672E90);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v9, v10);
      sub_10077FF34((uint64_t)v14);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    }
  }
  if (qword_10166FB10 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v18 = (void *)static OS_os_log.crlCloudQuotaMessaging;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = a3;
  *(void *)(inited + 40) = a4;
  id v20 = v18;
  swift_bridgeObjectRetain();
  uint64_t v21 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v20, (uint64_t)&_mh_execute_header, v21, (uint64_t)"performing cloud quota message alert action \"%@\"", 48, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

uint64_t sub_100E5291C()
{
  v1[2] = v0;
  v1[3] = type metadata accessor for MainActor();
  v1[4] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[5] = v3;
  v1[6] = v2;
  return _swift_task_switch(sub_100E529B8, v3, v2);
}

uint64_t sub_100E529B8()
{
  id v1 = [*(id *)(v0 + 16) presentedViewController];
  *(void *)(v0 + 56) = v1;
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = static MainActor.shared.getter();
    *(void *)(v0 + 64) = v4;
    uint64_t v5 = swift_task_alloc();
    *(void *)(v0 + 72) = v5;
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v2;
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_100E52B1C;
    return withCheckedContinuation<A>(isolation:function:_:)(v6, v4, &protocol witness table for MainActor, 0xD000000000000020, 0x8000000101290280, sub_100E76E40, v5, (char *)&type metadata for () + 8);
  }
  else
  {
    swift_release();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_100E52B1C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_100E52C7C, v3, v2);
}

uint64_t sub_100E52C7C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100E52CE8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101682E08);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  id v10 = [a2 presentedViewController];
  if (v10)
  {
    uint64_t v11 = v10;
    self;
    BOOL v12 = swift_dynamicCastObjCClass() == 0;
  }
  else
  {
    BOOL v12 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14 + v13, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_100867E3C;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  id aBlock[3] = &unk_1015306D8;
  uint64_t v15 = _Block_copy(aBlock);
  swift_release();
  [a3 dismissViewControllerAnimated:v12 completion:v15];
  _Block_release(v15);
}

void sub_100E52EE4(uint64_t a1, void *a2, int a3)
{
  int v21 = a3;
  uint64_t v5 = sub_1005057FC(&qword_101682E08);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  id v9 = [a2 traitCollection:__chkstk_darwin(v5, v8).n128_f64[0]];
  unsigned int v10 = [v9 crl_isCompactWidth];

  if (v10 && (sub_100E3CCB4() & 1) != 0) {
    goto LABEL_8;
  }
  id v11 = [a2 traitCollection];
  unsigned __int8 v12 = [v11 crl_isCompactWidth];

  if (v12 & 1) == 0 && (sub_100E3CCB4())
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(&v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v5);
    unint64_t v13 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v14 = swift_allocObject();
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v6 + 32))(v14 + v13, &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], v5);
    sub_100E531D4(v21 & 1, sub_100867E3C, v14);
    swift_release();
    return;
  }
  id v15 = [a2 presentedViewController];
  if (!v15)
  {
LABEL_8:
    CheckedContinuation.resume(returning:)();
  }
  else
  {
    id v16 = v15;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(&v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v5);
    unint64_t v17 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v18 = swift_allocObject();
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v6 + 32))(v18 + v17, &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], v5);
    aBlock[4] = sub_100867E3C;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_100679958;
    id aBlock[3] = &unk_10152FDA0;
    uint64_t v19 = _Block_copy(aBlock);
    swift_release();
    [v16 dismissViewControllerAnimated:v21 & 1 completion:v19];
    _Block_release(v19);
  }
}

void sub_100E531D4(char a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v8 = [v4 traitCollection];
  if ([v8 horizontalSizeClass] == (id)1)
  {

    goto LABEL_4;
  }
  unsigned __int8 v9 = [self crl_phoneUI];

  if (v9)
  {
LABEL_4:
    unsigned int v10 = *(void **)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesPresenter];
    if (!v10) {
      return;
    }
    id v13 = v10;
    if (([v13 isBeingDismissed] & 1) == 0)
    {
      if (a2)
      {
        uint64_t v18 = a2;
        uint64_t v19 = a3;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v15 = *(void *)"";
        id v11 = &unk_10152FD38;
LABEL_15:
        id v16 = sub_100679958;
        unint64_t v17 = v11;
        a2 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        goto LABEL_16;
      }
      goto LABEL_16;
    }
    goto LABEL_10;
  }
  unsigned __int8 v12 = *(void **)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPresenter];
  if (!v12) {
    return;
  }
  id v13 = v12;
  if (([v13 isBeingDismissed] & 1) == 0)
  {
    if (a2)
    {
      uint64_t v18 = a2;
      uint64_t v19 = a3;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v15 = *(void *)"";
      id v11 = &unk_10152FD10;
      goto LABEL_15;
    }
LABEL_16:
    [v13 dismissViewControllerAnimated:a1 & 1 completion:a2];
    _Block_release(a2);

    return;
  }
LABEL_10:
}

void sub_100E533D0(void (*a1)(void), uint64_t a2)
{
  uint64_t v5 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController];
  id v6 = [v5 presentedViewController];
  if (v6)
  {
    id v7 = v6;
    type metadata accessor for CRLiOSMiniShapePickerHostingController();
    id v8 = (void *)swift_dynamicCastClass();
    if (v8)
    {
      unsigned __int8 v9 = v8;
      if (([v8 isBeingDismissed] & 1) == 0)
      {
        uint64_t v20 = swift_allocObject();
        *(void *)(v20 + 16) = a1;
        *(void *)(v20 + 24) = a2;
        uint64_t v27 = sub_100E76E30;
        uint64_t v28 = v20;
        id v23 = _NSConcreteStackBlock;
        uint64_t v24 = *(void *)"";
        int v21 = &unk_101530688;
LABEL_23:
        uint64_t v25 = sub_100679958;
        uint64_t v26 = v21;
        uint64_t v19 = _Block_copy(&v23);
        sub_1005173A0((uint64_t)a1);
        swift_release();
        [v9 dismissViewControllerAnimated:1 completion:v19, v23, v24];
        goto LABEL_24;
      }
    }
  }
  id v10 = [v5 presentedViewController];
  if (!v10) {
    goto LABEL_10;
  }
  id v7 = v10;
  self;
  id v11 = (void *)swift_dynamicCastObjCClass();
  if (v11)
  {
    unsigned __int8 v9 = v11;
    if (([v11 showLinesInLibrary] & 1) == 0
      && ([v9 isBeingDismissed] & 1) == 0)
    {
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = a1;
      *(void *)(v22 + 24) = a2;
      uint64_t v27 = sub_100E76E30;
      uint64_t v28 = v22;
      id v23 = _NSConcreteStackBlock;
      uint64_t v24 = *(void *)"";
      int v21 = &unk_101530638;
      goto LABEL_23;
    }
  }

LABEL_10:
  if (sub_100E3CCB4())
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a1;
    *(void *)(v12 + 24) = a2;
    sub_1005173A0((uint64_t)a1);
    sub_100E531D4(1, sub_100E76E30, v12);
    swift_release();
    return;
  }
  id v13 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController];
  if (v13)
  {
    id v14 = v13;
    id v15 = [v2 presentedViewController];
    if (v15)
    {
      id v16 = v15;
      sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
      id v7 = v14;
      id v17 = v16;
      LOBYTE(v16) = static NSObject.== infix(_:_:)();

      if (v16)
      {
        uint64_t v18 = swift_allocObject();
        *(void *)(v18 + 16) = a1;
        *(void *)(v18 + 24) = a2;
        uint64_t v27 = sub_100E76E30;
        uint64_t v28 = v18;
        id v23 = _NSConcreteStackBlock;
        uint64_t v24 = *(void *)"";
        uint64_t v25 = sub_100679958;
        uint64_t v26 = &unk_1015305C0;
        uint64_t v19 = _Block_copy(&v23);
        sub_1005173A0((uint64_t)a1);
        swift_release();
        [v7 dismissViewControllerAnimated:0 completion:v19, v23, v24];
LABEL_24:
        _Block_release(v19);

        return;
      }
    }
  }
  if (a1) {
    a1();
  }
}

void sub_100E537BC()
{
  id v1 = sub_100E3C594();
  id v2 = [v1 mode];

  id v3 = [v2 pencilModeType];
  if (v3 != (id)2)
  {
    id v4 = v0;
    id v5 = [v4 interactiveCanvasControllerForFreehandDrawingTools];
    id v6 = (objc_class *)type metadata accessor for CRLiOSDocumentModeHandwriting();
    id v7 = objc_allocWithZone(v6);
    v7[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_currentlyChangingModes] = 0;
    v7[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_stayInHandwritingModeForSelectionChange] = 0;
    v7[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_endModeCheckQueuedAfterTextGestures] = 0;
    *(void *)&v7[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_subscriptions] = &_swiftEmptySetSingleton;
    swift_unknownObjectUnownedInit();
    v10.uint64_t receiver = v7;
    v10.uint64_t super_class = v6;
    [super initWithBoardViewController:v4];

    id v9 = sub_100E3C594();
    [v9 setMode:v8 animated:1];
  }
}

id sub_100E53AA4(char *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v12 = *(void **)&a1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  id v13 = a3;
  id v14 = a1;
  id v15 = v12;
  sub_10060ED60((uint64_t)v13, (uint64_t)v15, (uint64_t)&_mh_execute_header, a4, a5, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, a6);

  id v16 = *(id *)&v14[*a7];
  return v16;
}

char *sub_100E53DD8()
{
  id v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_mediaReplacer;
  id v3 = *(char **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_mediaReplacer];
  if (v3)
  {
    sub_10050BF48(0, (unint64_t *)&qword_101672E50);
    id v4 = *(void **)&v3[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_interactiveCanvasController];
    id v5 = v3;
    id v6 = v4;
    char v7 = static NSObject.== infix(_:_:)();

    if (v7) {
      return v5;
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"mediaReplacer(for:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 2124, (uint64_t)"Existing media replacer is for a different ICC. Replacing it with a new instance.", 81, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"mediaReplacer(for:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 2124);
  }
  id v9 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  id v10 = objc_allocWithZone((Class)type metadata accessor for CRLiOSMediaReplacer());
  id v11 = sub_1009C41C0((uint64_t)v9, (uint64_t)v1);
  uint64_t v12 = *(void **)&v1[v2];
  *(void *)&v1[v2] = v11;
  id v13 = v11;

  return (char *)v13;
}

uint64_t sub_100E54048(uint64_t a1)
{
  id v3 = *(id *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  sub_10060ED60(a1, (uint64_t)v3, (uint64_t)&_mh_execute_header, (uint64_t)"wantsToShowCanvasDotGrid(on:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 2138);

  uint64_t v4 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled;
  int v5 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled);
  if (v5 == 2)
  {
    char v6 = sub_100E4EA7C();
    *(unsigned char *)(v1 + v4) = v6 & 1;
  }
  else
  {
    char v6 = v5 & 1;
  }
  return v6 & 1;
}

uint64_t sub_100E5414C(uint64_t a1)
{
  id v3 = *(id *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  sub_10060ED60(a1, (uint64_t)v3, (uint64_t)&_mh_execute_header, (uint64_t)"wantsToShowConnectorKnobs(on:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 2143);

  uint64_t v4 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled;
  int v5 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled);
  if (v5 == 2)
  {
    char v6 = sub_100E4F834();
    *(unsigned char *)(v1 + v4) = v6 & 1;
  }
  else
  {
    char v6 = v5 & 1;
  }
  return v6 & 1;
}

void sub_100E542D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
  id v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState);
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v3;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  int v5 = sub_100E82AC8();
  char v6 = v5;
  if (v11)
  {
    if (v5)
    {
      type metadata accessor for CRLSceneInfo();
      id v7 = v11;
      char v8 = static NSObject.== infix(_:_:)();

      if (v8) {
        return;
      }
LABEL_9:
      id v9 = *(void **)(v1 + v2);
      swift_getKeyPath();
      swift_getKeyPath();
      id v10 = v9;
      static Published.subscript.setter();
      return;
    }
    char v6 = v11;
LABEL_8:

    goto LABEL_9;
  }
  if (v5) {
    goto LABEL_8;
  }
}

id sub_100E54520()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_selectionModelTranslator);
  uint64_t v2 = (objc_class *)type metadata accessor for CRLSelectionPathValidator();
  id v3 = (char *)objc_allocWithZone(v2);
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  *(void *)&v3[OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator] = v1;
  v6.uint64_t receiver = v3;
  v6.uint64_t super_class = v2;
  id v4 = v1;
  return [super init];
}

id sub_100E54608()
{
  id v1 = [self sharedApplication];
  id v2 = [v1 keyWindow];

  id result = [v0 view];
  if (result)
  {
    id v4 = result;
    id v5 = [result window];

    if (v2)
    {
      if (!v5)
      {
        char v7 = 0;
        goto LABEL_9;
      }
      sub_10050BF48(0, &qword_101677CC8);
      id v6 = v2;
      char v7 = static NSObject.== infix(_:_:)();
    }
    else
    {
      if (!v5)
      {
        char v7 = 1;
        return (id)(v7 & 1);
      }
      char v7 = 0;
    }
    id v2 = v5;
LABEL_9:

    return (id)(v7 & 1);
  }
  __break(1u);
  return result;
}