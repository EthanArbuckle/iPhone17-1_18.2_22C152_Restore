uint64_t sub_100F951A8()
{
  sub_100F98244(&qword_1016A3CE8, (void (*)(uint64_t))type metadata accessor for CRLUSDZAssetDataStruct);
  return CRValueStruct.init(from:)();
}

uint64_t sub_100F95228()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100F952A0(uint64_t a1)
{
  uint64_t v2 = sub_100F98244(&qword_1016A3CE8, (void (*)(uint64_t))type metadata accessor for CRLUSDZAssetDataStruct);

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100F9531C()
{
  return 7;
}

uint64_t sub_100F95328()
{
  return 0x2000000000000;
}

void sub_100F95338(_UNKNOWN ****a1)
{
  uint64_t v2 = type metadata accessor for CRLUSDZItemCRDTData(0);
  __chkstk_darwin(v2, v3);
  v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*a1 == &off_1016A38A8)
  {
    uint64_t v6 = (uint64_t)a1 + qword_10171CD20;
    swift_beginAccess();
    sub_100F99114(v6, (uint64_t)v5, type metadata accessor for CRLUSDZItemCRDTData);
    swift_beginAccess();
    sub_100F98244(&qword_10167D2F0, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);
    swift_retain();
    CRStruct_1.merge(_:)();
    swift_endAccess();
    swift_release();
    sub_100F98868((uint64_t)v5, type metadata accessor for CRLUSDZItemCRDTData);
  }
}

uint64_t sub_100F954C4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = &v33[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7, v8);
  v10 = &v33[-v9];
  uint64_t v11 = type metadata accessor for CRLUSDZItemCRDTData(0);
  __chkstk_darwin(v11 - 8, v12);
  v14 = &v33[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15, v16);
  v18 = &v33[-v17];
  uint64_t v19 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v19 - 8, v20);
  v22 = &v33[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v23, v24);
  v26 = &v33[-v25];
  if (*(_UNKNOWN ****)a1 != &off_1016A38A8) {
    goto LABEL_5;
  }
  uint64_t v27 = v1 + *(void *)(*(void *)v1 + 632);
  swift_beginAccess();
  sub_100522E9C(v27, (uint64_t)v26, (uint64_t *)&unk_101683E10);
  uint64_t v28 = a1 + *(void *)(*(void *)a1 + 632);
  swift_beginAccess();
  sub_100522E9C(v28, (uint64_t)v22, (uint64_t *)&unk_101683E10);
  swift_retain();
  LOBYTE(v28) = sub_100FC1F68((uint64_t)v26, (uint64_t)v22);
  sub_100522F00((uint64_t)v22, (uint64_t *)&unk_101683E10);
  sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101683E10);
  if ((v28 & 1) == 0)
  {
    swift_release();
LABEL_5:
    char v31 = 0;
    return v31 & 1;
  }
  uint64_t v29 = v1 + qword_10171CD20;
  swift_beginAccess();
  sub_100F99114(v29, (uint64_t)v18, type metadata accessor for CRLUSDZItemCRDTData);
  uint64_t v30 = a1 + qword_10171CD20;
  swift_beginAccess();
  sub_100F99114(v30, (uint64_t)v14, type metadata accessor for CRLUSDZItemCRDTData);
  sub_1005057FC((uint64_t *)&unk_10167D2A0);
  CRRegister.wrappedValue.getter();
  CRRegister.wrappedValue.getter();
  char v31 = sub_100F988C8((uint64_t)v10, (uint64_t)v6);
  sub_100F98868((uint64_t)v6, type metadata accessor for CRLUSDZAssetDataStruct);
  sub_100F98868((uint64_t)v10, type metadata accessor for CRLUSDZAssetDataStruct);
  swift_release();
  sub_100F98868((uint64_t)v14, type metadata accessor for CRLUSDZItemCRDTData);
  sub_100F98868((uint64_t)v18, type metadata accessor for CRLUSDZItemCRDTData);
  return v31 & 1;
}

uint64_t sub_100F95830(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for CRLUSDZItemCRDTData(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v16 - v10;
  uint64_t v12 = v2 + qword_10171CD20;
  swift_beginAccess();
  if (a2)
  {
    sub_100F99114(v12, (uint64_t)v7, type metadata accessor for CRLUSDZItemCRDTData);
    sub_100F98244(&qword_10167D308, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);
    CRType.copy(renamingReferences:)();
    sub_100F98868((uint64_t)v7, type metadata accessor for CRLUSDZItemCRDTData);
  }
  else
  {
    sub_100F99114(v12, (uint64_t)v11, type metadata accessor for CRLUSDZItemCRDTData);
  }
  if (qword_10166EE10 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for CRCodableVersion();
  sub_100556B74(v13, (uint64_t)qword_10171A2D8);
  sub_100F98244(&qword_10168B250, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);
  uint64_t v14 = CRDT.serializedData(_:version:)();
  sub_100F98868((uint64_t)v11, type metadata accessor for CRLUSDZItemCRDTData);
  return v14;
}

uint64_t sub_100F95A78(_UNKNOWN ****a1)
{
  uint64_t v3 = type metadata accessor for CRLUSDZItemCRDTData(0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7, v8);
  uint64_t v10 = &v15[-v9];
  if (*a1 == &off_1016A38A8)
  {
    uint64_t v11 = v1 + qword_10171CD20;
    swift_beginAccess();
    sub_100F99114(v11, (uint64_t)v10, type metadata accessor for CRLUSDZItemCRDTData);
    uint64_t v12 = (uint64_t)a1 + qword_10171CD20;
    swift_beginAccess();
    sub_100F99114(v12, (uint64_t)v6, type metadata accessor for CRLUSDZItemCRDTData);
    sub_100F98244(&qword_10167D2F0, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);
    char v13 = CRStruct_1.hasDelta(from:)();
    sub_100F98868((uint64_t)v6, type metadata accessor for CRLUSDZItemCRDTData);
    sub_100F98868((uint64_t)v10, type metadata accessor for CRLUSDZItemCRDTData);
    return v13 & 1;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100F95C84(uint64_t a1, uint64_t a2)
{
  v27[1] = a2;
  v27[0] = type metadata accessor for CRLUSDZItemCRDTData(0);
  __chkstk_darwin(v27[0], v3);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v27 - v8;
  uint64_t v10 = sub_1005057FC(&qword_1016A3D60);
  __chkstk_darwin(v10 - 8, v11);
  char v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)v27 - v16;
  uint64_t v18 = swift_dynamicCastClass();
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = v2 + qword_10171CD20;
    swift_beginAccess();
    sub_100F99114(v20, (uint64_t)v9, type metadata accessor for CRLUSDZItemCRDTData);
    uint64_t v21 = v19 + qword_10171CD20;
    swift_beginAccess();
    sub_100F99114(v21, (uint64_t)v5, type metadata accessor for CRLUSDZItemCRDTData);
    sub_100F98244(&qword_10167D2F0, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);
    swift_retain();
    CRStruct_1.delta(_:from:)();
    sub_100F98868((uint64_t)v5, type metadata accessor for CRLUSDZItemCRDTData);
    sub_100F98868((uint64_t)v9, type metadata accessor for CRLUSDZItemCRDTData);
    sub_100522E9C((uint64_t)v17, (uint64_t)v13, &qword_1016A3D60);
    uint64_t v22 = sub_1005057FC(&qword_1016A3D08);
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v13, 1, v22) == 1)
    {
      sub_100522F00((uint64_t)v17, &qword_1016A3D60);
      swift_release();
      sub_100522F00((uint64_t)v13, &qword_1016A3D60);
      return 0;
    }
    else
    {
      if (qword_10166EE10 != -1) {
        swift_once();
      }
      uint64_t v25 = type metadata accessor for CRCodableVersion();
      sub_100556B74(v25, (uint64_t)qword_10171A2D8);
      sub_100523288(&qword_1016A3D00, &qword_1016A3D08);
      uint64_t v24 = PartialCRDT.deltaSerializedData(_:version:)();
      swift_release();
      sub_100522F00((uint64_t)v17, &qword_1016A3D60);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v22);
    }
    return v24;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

unint64_t sub_100F960C8(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v39 = *v3;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v38 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_1016A3D08);
  uint64_t v40 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100510D4C(a1, a2);
  sub_100523288(&qword_1016A3D00, &qword_1016A3D08);
  LOBYTE(a2) = v13;
  uint64_t v18 = v41;
  PartialCRDT.init(serializedData:)();
  if (!v18)
  {
    v36 = v12;
    v37 = v8;
    uint64_t v41 = v9;
    swift_beginAccess();
    type metadata accessor for CRLUSDZItemCRDTData(0);
    sub_100F98244(&qword_10167D2F0, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);
    LODWORD(a2) = CRStruct_1.merge(delta:)();
    swift_endAccess();
    if ((a2 & 1) == 0)
    {
      v33 = v16;
      uint64_t v34 = v13;
      int v35 = a2;
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v19 = (void *)static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      uint64_t v21 = (uint64_t)v3 + *(void *)(*v3 + 632);
      swift_beginAccess();
      uint64_t v22 = v21;
      uint64_t v23 = (uint64_t)v37;
      sub_100522E9C(v22, (uint64_t)v37, (uint64_t *)&unk_101683E10);
      id v24 = v19;
      sub_1005057FC(&qword_101674550);
      uint64_t v25 = v36;
      CRRegister.wrappedValue.getter();
      sub_100522F00(v23, (uint64_t *)&unk_101683E10);
      a2 = UUID.uuidString.getter();
      uint64_t v27 = v26;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v25, v41);
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v28 = sub_100528BE4();
      *(void *)(inited + 64) = v28;
      *(void *)(inited + 32) = a2;
      *(void *)(inited + 40) = v27;
      v42 = v3;
      swift_retain();
      uint64_t v29 = String.init<A>(describing:)();
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v28;
      *(void *)(inited + 72) = v29;
      *(void *)(inited + 80) = v30;
      uint64_t v31 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v24, (uint64_t)&_mh_execute_header, v31, (uint64_t)"Delta failed to apply for %{public}@%{public}@", 46, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      LOBYTE(a2) = v35;
      uint64_t v13 = v34;
      uint64_t v16 = v33;
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v13);
  }
  return a2 & 1;
}

unint64_t sub_100F96598()
{
  uint64_t v0 = type metadata accessor for CRLAssetData();
  uint64_t v37 = *(void *)(v0 - 8);
  uint64_t v38 = v0;
  __chkstk_darwin(v0, v1);
  uint64_t v32 = (uint64_t)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v30 - v5;
  uint64_t v35 = type metadata accessor for CRLUSDZAssetDataStruct(0) - 8;
  __chkstk_darwin(v35, v7);
  uint64_t v34 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v30 - v11;
  sub_1005057FC(&qword_1016737C8);
  uint64_t v13 = (int *)(sub_1005057FC(&qword_10169A0F0) - 8);
  uint64_t v14 = *(void *)v13;
  uint64_t v33 = *(void *)(*(void *)v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10117D8C0;
  uint64_t v36 = v16;
  uint64_t v17 = (void *)(v16 + v15);
  unint64_t v18 = v16 + v15 + v13[14];
  *uint64_t v17 = 2053403509;
  v17[1] = 0xE400000000000000;
  swift_beginAccess();
  sub_1005057FC((uint64_t *)&unk_10167D2A0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  sub_100F99114((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100F98868((uint64_t)v12, type metadata accessor for CRLUSDZAssetDataStruct);
  uint64_t v19 = type metadata accessor for UUID();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v31 = *(void (**)(unint64_t, char *, uint64_t))(v20 + 16);
  v31(v18, v6, v19);
  sub_100F98868((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  uint64_t v21 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
  v21(v18, 0, 1, v19);
  uint64_t v22 = (void *)((char *)v17 + v33);
  uint64_t v23 = (uint64_t)v34;
  id v24 = (char *)v22 + v13[14];
  void *v22 = 0x726574736F70;
  v22[1] = 0xE600000000000000;
  swift_beginAccess();
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  uint64_t v25 = v23 + *(int *)(v35 + 28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v25, 1, v38))
  {
    sub_100F98868(v23, type metadata accessor for CRLUSDZAssetDataStruct);
    uint64_t v26 = 1;
  }
  else
  {
    uint64_t v27 = v25;
    uint64_t v28 = v32;
    sub_100F99114(v27, v32, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100F98868(v23, type metadata accessor for CRLUSDZAssetDataStruct);
    v31((unint64_t)v24, (char *)v28, v19);
    sub_100F98868(v28, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    uint64_t v26 = 0;
  }
  v21((unint64_t)v24, v26, 1, v19);
  return sub_100A394EC(v36);
}

uint64_t sub_100F969C4()
{
  return sub_100F98868(v0 + qword_10171CD20, type metadata accessor for CRLUSDZItemCRDTData);
}

uint64_t sub_100F969FC()
{
  sub_100522F00(v0 + *(void *)(*(void *)v0 + 632), (uint64_t *)&unk_101683E10);
  sub_100F98868(v0 + qword_10171CD20, type metadata accessor for CRLUSDZItemCRDTData);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLUSDZItemData(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A3880);
}

uint64_t sub_100F96AB8()
{
  uint64_t result = type metadata accessor for CRLUSDZItemCRDTData(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLUSDZItemCRDTData(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_1016A3BB0);
}

uint64_t *sub_100F96B68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005057FC((uint64_t *)&unk_10167D2A0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100F96C3C(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_10167D2A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100F96CB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10167D2A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100F96D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10167D2A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100F96DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10167D2A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100F96E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10167D2A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100F96ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100F96EE4);
}

uint64_t sub_100F96EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10167D2A0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100F96FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100F96FBC);
}

uint64_t sub_100F96FBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1005057FC((uint64_t *)&unk_10167D2A0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_100F9707C()
{
  sub_100F97114();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100F97114()
{
  if (!qword_1016A3BC0)
  {
    type metadata accessor for CRLUSDZAssetDataStruct(255);
    sub_100F98244((unint64_t *)&unk_10167D2C0, (void (*)(uint64_t))type metadata accessor for CRLUSDZAssetDataStruct);
    unint64_t v0 = type metadata accessor for CRRegister();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1016A3BC0);
    }
  }
}

uint64_t type metadata accessor for CRLUSDZAssetDataStruct(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A3C48);
}

uint64_t *sub_100F971C8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v28 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v28(a1, a2, v7);
    uint64_t v8 = type metadata accessor for CRLAssetData();
    uint64_t v9 = *(int *)(v8 + 20);
    unint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + *(int *)(v8 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 24));
    uint64_t v13 = a3[5];
    __dst = (char *)a1 + v13;
    uint64_t v14 = (char *)a2 + v13;
    uint64_t v15 = *(void *)(v8 - 8);
    uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16(v14, 1, v8))
    {
      uint64_t v17 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
      memcpy(__dst, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v28((uint64_t *)__dst, (uint64_t *)v14, v7);
      uint64_t v19 = *(int *)(v8 + 20);
      uint64_t v20 = &__dst[v19];
      uint64_t v21 = &v14[v19];
      uint64_t v22 = *((void *)v21 + 1);
      *(void *)uint64_t v20 = *(void *)v21;
      *((void *)v20 + 1) = v22;
      *(void *)&__dst[*(int *)(v8 + 24)] = *(void *)&v14[*(int *)(v8 + 24)];
      uint64_t v23 = *(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23(__dst, 0, 1, v8);
    }
    uint64_t v24 = a3[7];
    *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    v25[16] = v26[16];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100F97418(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = type metadata accessor for CRLAssetData();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v7, 1, v6))
  {
    v5(v7, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100F97540(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v26(a1, a2, v6);
  uint64_t v7 = type metadata accessor for CRLAssetData();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  unint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  uint64_t v12 = a3[5];
  __dst = (char *)(a1 + v12);
  uint64_t v13 = (char *)(a2 + v12);
  uint64_t v14 = *(void *)(v7 - 8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15(v13, 1, v7))
  {
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
    memcpy(__dst, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v26((uint64_t)__dst, (uint64_t)v13, v6);
    uint64_t v17 = *(int *)(v7 + 20);
    uint64_t v18 = &__dst[v17];
    uint64_t v19 = &v13[v17];
    uint64_t v20 = *((void *)v19 + 1);
    *(void *)uint64_t v18 = *(void *)v19;
    *((void *)v18 + 1) = v20;
    *(void *)&__dst[*(int *)(v7 + 24)] = *(void *)&v13[*(int *)(v7 + 24)];
    uint64_t v21 = *(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(__dst, 0, 1, v7);
  }
  uint64_t v22 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *(unsigned char *)(v23 + 16) = *(unsigned char *)(v24 + 16);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100F97740(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 24);
  v32(a1, a2, v6);
  uint64_t v7 = type metadata accessor for CRLAssetData();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  unint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3;
  uint64_t v11 = a3[5];
  uint64_t v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = *(void *)(v7 - 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(a1 + v11, 1, v7);
  int v17 = v15((uint64_t)v13, 1, v7);
  if (!v16)
  {
    if (!v17)
    {
      v32((uint64_t)v12, (uint64_t)v13, v6);
      uint64_t v28 = *(int *)(v7 + 20);
      uint64_t v29 = &v12[v28];
      uint64_t v30 = &v13[v28];
      *(void *)uint64_t v29 = *(void *)v30;
      *((void *)v29 + 1) = *((void *)v30 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v12[*(int *)(v7 + 24)] = *(void *)&v13[*(int *)(v7 + 24)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_100F98868((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v22 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
    memcpy(v12, v13, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v12, v13, v6);
  uint64_t v18 = *(int *)(v7 + 20);
  uint64_t v19 = &v12[v18];
  uint64_t v20 = &v13[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  *(void *)&v12[*(int *)(v7 + 24)] = *(void *)&v13[*(int *)(v7 + 24)];
  uint64_t v21 = *(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21(v12, 0, 1, v7);
LABEL_7:
  *(_OWORD *)(a1 + v33[6]) = *(_OWORD *)(a2 + v33[6]);
  uint64_t v23 = v33[7];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = (long long *)(a2 + v23);
  long long v26 = *v25;
  *(unsigned char *)(v24 + 16) = *((unsigned char *)v25 + 16);
  *(_OWORD *)uint64_t v24 = v26;
  *(void *)(a1 + v33[8]) = *(void *)(a2 + v33[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100F97A4C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = type metadata accessor for CRLAssetData();
  *(_OWORD *)(a1 + *(int *)(v8 + 20)) = *(_OWORD *)(a2 + *(int *)(v8 + 20));
  *(void *)(a1 + *(int *)(v8 + 24)) = *(void *)(a2 + *(int *)(v8 + 24));
  uint64_t v9 = a3[5];
  unint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2 + v9, 1, v8))
  {
    uint64_t v13 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v6);
    *(_OWORD *)&v10[*(int *)(v8 + 20)] = *(_OWORD *)&v11[*(int *)(v8 + 20)];
    *(void *)&v10[*(int *)(v8 + 24)] = *(void *)&v11[*(int *)(v8 + 24)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v8);
  }
  uint64_t v14 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v16 + 16);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100F97C08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v30 = *(void *)(v6 - 8);
  uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 40);
  v31(a1, a2, v6);
  uint64_t v7 = type metadata accessor for CRLAssetData();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  unint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  swift_bridgeObjectRelease();
  uint64_t v32 = a3;
  uint64_t v13 = a3[5];
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  uint64_t v16 = *(void *)(v7 - 8);
  int v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(a1 + v13, 1, v7);
  int v19 = v17((uint64_t)v15, 1, v7);
  if (!v18)
  {
    if (!v19)
    {
      v31((uint64_t)v14, (uint64_t)v15, v6);
      uint64_t v25 = *(int *)(v7 + 20);
      long long v26 = &v14[v25];
      uint64_t v27 = &v15[v25];
      uint64_t v29 = *(void *)v27;
      uint64_t v28 = *((void *)v27 + 1);
      *(void *)long long v26 = v29;
      *((void *)v26 + 1) = v28;
      swift_bridgeObjectRelease();
      *(void *)&v14[*(int *)(v7 + 24)] = *(void *)&v15[*(int *)(v7 + 24)];
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_100F98868((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
    memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v14, v15, v6);
  *(_OWORD *)&v14[*(int *)(v7 + 20)] = *(_OWORD *)&v15[*(int *)(v7 + 20)];
  *(void *)&v14[*(int *)(v7 + 24)] = *(void *)&v15[*(int *)(v7 + 24)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v7);
LABEL_7:
  uint64_t v21 = v32[7];
  *(_OWORD *)(a1 + v32[6]) = *(_OWORD *)(a2 + v32[6]);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(unsigned char *)(v22 + 16) = *(unsigned char *)(v23 + 16);
  *(void *)(a1 + v32[8]) = *(void *)(a2 + v32[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100F97EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100F97ED0);
}

uint64_t sub_100F97ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CRLAssetData();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 32));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_100F97FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100F97FFC);
}

uint64_t sub_100F97FFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for CRLAssetData();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1005057FC((uint64_t *)&unk_10167D2B0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_100F98110()
{
  type metadata accessor for CRLAssetData();
  if (v0 <= 0x3F)
  {
    sub_10055420C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100F981FC()
{
  return sub_100F98244(&qword_1016A3C90, (void (*)(uint64_t))type metadata accessor for CRLUSDZAssetDataStruct);
}

uint64_t sub_100F98244(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100F9828C()
{
  return sub_100F98244((unint64_t *)&unk_10167D2C0, (void (*)(uint64_t))type metadata accessor for CRLUSDZAssetDataStruct);
}

uint64_t sub_100F982D4()
{
  return sub_100F98244(&qword_1016A3C98, (void (*)(uint64_t))type metadata accessor for CRLUSDZAssetDataStruct);
}

uint64_t sub_100F9831C()
{
  return sub_100F98244(&qword_1016A3CA0, (void (*)(uint64_t))type metadata accessor for CRLUSDZAssetDataStruct);
}

unint64_t sub_100F98368()
{
  unint64_t result = qword_1016A3CA8;
  if (!qword_1016A3CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3CA8);
  }
  return result;
}

unint64_t sub_100F983C0()
{
  unint64_t result = qword_1016A3CB0;
  if (!qword_1016A3CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3CB0);
  }
  return result;
}

unint64_t sub_100F98418()
{
  unint64_t result = qword_1016A3CB8;
  if (!qword_1016A3CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3CB8);
  }
  return result;
}

unint64_t sub_100F98470()
{
  unint64_t result = qword_1016A3CC0;
  if (!qword_1016A3CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3CC0);
  }
  return result;
}

unint64_t sub_100F984C8()
{
  unint64_t result = qword_1016A3CC8;
  if (!qword_1016A3CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3CC8);
  }
  return result;
}

unint64_t sub_100F98520()
{
  unint64_t result = qword_1016A3CD0;
  if (!qword_1016A3CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3CD0);
  }
  return result;
}

uint64_t sub_100F98574()
{
  return sub_100523288(&qword_1016A3CD8, &qword_1016A3CE0);
}

uint64_t sub_100F985B0()
{
  return sub_100F98244(&qword_1016A3CE8, (void (*)(uint64_t))type metadata accessor for CRLUSDZAssetDataStruct);
}

uint64_t sub_100F985F8()
{
  return sub_100F98244(&qword_1016A3CF0, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);
}

uint64_t sub_100F98640()
{
  return sub_100F98244(&qword_1016A3CF8, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);
}

uint64_t sub_100F98688()
{
  return sub_100F98244(&qword_10167D308, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);
}

uint64_t sub_100F986D0()
{
  return sub_100523288(&qword_1016A3D00, &qword_1016A3D08);
}

uint64_t sub_100F9870C()
{
  return sub_100F98244(&qword_10168B250, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);
}

uint64_t sub_100F98754()
{
  return sub_100F98244(&qword_1016A3D10, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);
}

uint64_t sub_100F9879C()
{
  return sub_100523288(&qword_1016A3D18, (uint64_t *)&unk_10167D2A0);
}

uint64_t sub_100F987D8()
{
  return sub_100F98244(&qword_1016A3D20, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);
}

uint64_t sub_100F98820()
{
  return sub_100F98244(&qword_1016A3D28, (void (*)(uint64_t))type metadata accessor for CRLUSDZAssetDataStruct);
}

uint64_t sub_100F98868(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100F988C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLAssetData();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_10167D2D0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v64 - v19;
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)&v64 - v23;
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    goto LABEL_26;
  }
  uint64_t v25 = *(int *)(v4 + 20);
  uint64_t v26 = *(void *)(a1 + v25);
  uint64_t v27 = *(void *)(a1 + v25 + 8);
  uint64_t v28 = (void *)(a2 + v25);
  if (v26 != *v28 || v27 != v28[1])
  {
    char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
    char v31 = 0;
    if ((v30 & 1) == 0) {
      return v31 & 1;
    }
  }
  if ((sub_100ED60AC(*(void *)(a1 + *(int *)(v4 + 24)), *(void *)(a2 + *(int *)(v4 + 24))) & 1) == 0)
  {
LABEL_26:
    char v31 = 0;
    return v31 & 1;
  }
  v64.n128_u64[0] = (unint64_t)v8;
  uint64_t v32 = v5;
  uint64_t v33 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  uint64_t v34 = *(int *)(v33 + 20);
  uint64_t v66 = a1;
  sub_100522E9C(a1 + v34, (uint64_t)v24, (uint64_t *)&unk_10167D2B0);
  uint64_t v65 = v33;
  uint64_t v35 = *(int *)(v33 + 20);
  uint64_t v67 = a2;
  sub_100522E9C(a2 + v35, (uint64_t)v20, (uint64_t *)&unk_10167D2B0);
  uint64_t v36 = (uint64_t)&v12[*(int *)(v9 + 48)];
  sub_100522E9C((uint64_t)v24, (uint64_t)v12, (uint64_t *)&unk_10167D2B0);
  sub_100522E9C((uint64_t)v20, v36, (uint64_t *)&unk_10167D2B0);
  uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  if (v37((uint64_t)v12, 1, v4) == 1)
  {
    sub_100522F00((uint64_t)v20, (uint64_t *)&unk_10167D2B0);
    sub_100522F00((uint64_t)v24, (uint64_t *)&unk_10167D2B0);
    if (v37(v36, 1, v4) == 1)
    {
      sub_100522F00((uint64_t)v12, (uint64_t *)&unk_10167D2B0);
      goto LABEL_11;
    }
    goto LABEL_17;
  }
  sub_100522E9C((uint64_t)v12, (uint64_t)v16, (uint64_t *)&unk_10167D2B0);
  if (v37(v36, 1, v4) == 1)
  {
    sub_100522F00((uint64_t)v20, (uint64_t *)&unk_10167D2B0);
    sub_100522F00((uint64_t)v24, (uint64_t *)&unk_10167D2B0);
    sub_100F98868((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
LABEL_17:
    v54 = &qword_10167D2D0;
    uint64_t v55 = (uint64_t)v12;
LABEL_25:
    sub_100522F00(v55, v54);
    goto LABEL_26;
  }
  uint64_t v56 = v64.n128_u64[0];
  sub_100F991D0(v36, v64.n128_i64[0], (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  if ((static UUID.== infix(_:_:)() & 1) == 0
    || ((uint64_t v57 = *(int *)(v4 + 20),
         uint64_t v58 = *(void *)&v16[v57],
         uint64_t v59 = *(void *)&v16[v57 + 8],
         v60 = (void *)(v56 + v57),
         v58 != *v60)
     || v59 != v60[1])
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    sub_100F98868(v56, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100522F00((uint64_t)v20, (uint64_t *)&unk_10167D2B0);
    sub_100522F00((uint64_t)v24, (uint64_t *)&unk_10167D2B0);
    sub_100F98868((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    uint64_t v55 = (uint64_t)v12;
    v54 = (uint64_t *)&unk_10167D2B0;
    goto LABEL_25;
  }
  char v61 = sub_100ED60AC(*(void *)&v16[*(int *)(v4 + 24)], *(void *)(v56 + *(int *)(v4 + 24)));
  sub_100F98868(v56, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100522F00((uint64_t)v20, (uint64_t *)&unk_10167D2B0);
  sub_100522F00((uint64_t)v24, (uint64_t *)&unk_10167D2B0);
  sub_100F98868((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100522F00((uint64_t)v12, (uint64_t *)&unk_10167D2B0);
  if ((v61 & 1) == 0) {
    goto LABEL_26;
  }
LABEL_11:
  uint64_t v39 = v65;
  uint64_t v38 = v66;
  uint64_t v40 = *(int *)(v65 + 24);
  __n128 v41 = *(__n128 *)(v66 + v40);
  uint64_t v42 = v67;
  __n128 v64 = *(__n128 *)(v67 + v40);
  uint64_t v43 = CRL3DRotation.rawValue.getter(v41);
  unint64_t v45 = v44;
  uint64_t v46 = CRL3DRotation.rawValue.getter(v64);
  unint64_t v48 = v47;
  char v49 = sub_1008D44A8(v43, v45, v46, v47);
  sub_100510084(v46, v48);
  sub_100510084(v43, v45);
  if ((v49 & 1) == 0) {
    goto LABEL_26;
  }
  uint64_t v50 = *(int *)(v39 + 28);
  v51 = (float *)(v38 + v50);
  char v52 = *(unsigned char *)(v38 + v50 + 16);
  uint64_t v53 = v42 + v50;
  if (v52)
  {
    if (*(unsigned char *)(v53 + 16))
    {
LABEL_33:
      char v31 = sub_100ED60AC(*(void *)(v38 + *(int *)(v39 + 32)), *(void *)(v42 + *(int *)(v39 + 32)));
      return v31 & 1;
    }
    goto LABEL_26;
  }
  if (*(unsigned char *)(v53 + 16)) {
    goto LABEL_26;
  }
  char v31 = 0;
  if (*v51 == COERCE_FLOAT(*(void *)v53) && v51[1] == COERCE_FLOAT(HIDWORD(*(void *)v53)))
  {
    uint64_t v63 = *(void *)(v53 + 8);
    if (v51[2] == *(float *)&v63 && v51[3] == *((float *)&v63 + 1)) {
      goto LABEL_33;
    }
  }
  return v31 & 1;
}

uint64_t sub_100F98E58(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7465737361 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7341726574736F70 && a2 == 0xEF61746144746573 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEB000000006E6F69 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x676E69646E756F62 && a2 == 0xEC00000074636552 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_100F990C0()
{
  unint64_t result = qword_1016A3D38;
  if (!qword_1016A3D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3D38);
  }
  return result;
}

uint64_t sub_100F99114(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_100F9917C()
{
  unint64_t result = qword_1016A3D48;
  if (!qword_1016A3D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3D48);
  }
  return result;
}

uint64_t sub_100F991D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for CRLUSDZAssetDataStruct.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100F99304);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDZAssetDataStruct.CodingKeys()
{
  return &type metadata for CRLUSDZAssetDataStruct.CodingKeys;
}

unint64_t sub_100F99340()
{
  unint64_t result = qword_1016A3D68;
  if (!qword_1016A3D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3D68);
  }
  return result;
}

uint64_t sub_100F99394@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for CRLCommandHistoryItem();
  uint64_t result = __chkstk_darwin(v10, v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(a5 + 8) = 0;
  uint64_t v15 = *(int *)(result + 32);
  *(void *)(a5 + v15) = 0;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v23 >= 1) {
      goto LABEL_3;
    }
LABEL_7:
    __break(1u);
    return result;
  }
  if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v16 = *(int *)(v10 + 28);
  uint64_t v17 = a2 + v16;
  uint64_t v18 = a5 + v16;
  uint64_t v19 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v18, v17, v19);
  *(void *)a5 = a1;
  sub_100BAE3D0(a2, (uint64_t)v14);
  if (!a4)
  {
    a4 = (void *)*((void *)v14 + 1);
    id v20 = a4;
  }
  sub_100BAE434((uint64_t)v14);

  *(void *)(a5 + 8) = a4;
  *(void *)(a5 + v15) = a3;
  uint64_t v22 = *(void *)(a2 + 16);
  uint64_t v21 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  uint64_t result = sub_100BAE434(a2);
  *(void *)(a5 + 16) = v22;
  *(void *)(a5 + 24) = v21;
  return result;
}

uint64_t type metadata accessor for CRLCommandHistoryItem()
{
  uint64_t result = qword_1016A3DC8;
  if (!qword_1016A3DC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_100F99574(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v9 = (void *)a2[1];
    uint64_t v8 = a2[2];
    a1[1] = (uint64_t)v9;
    a1[2] = v8;
    a1[3] = a2[3];
    uint64_t v10 = *(int *)(a3 + 28);
    uint64_t v19 = (char *)a1 + v10;
    uint64_t v11 = (char *)a2 + v10;
    uint64_t v12 = type metadata accessor for UUID();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    id v14 = v9;
    swift_bridgeObjectRetain();
    v13(v19, v11, v12);
    uint64_t v15 = *(int *)(a3 + 32);
    uint64_t v16 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)v7 + v15) = (uint64_t)v16;
    id v17 = v16;
  }
  return v7;
}

void sub_100F996A0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  unsigned int v6 = *(void **)(a1 + *(int *)(a2 + 32));
}

void *sub_100F9973C(void *a1, void *a2, uint64_t a3)
{
  unsigned int v6 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 28);
  id v17 = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  id v12 = v6;
  swift_bridgeObjectRetain();
  v11(v17, v9, v10);
  uint64_t v13 = *(int *)(a3 + 32);
  id v14 = *(void **)((char *)a2 + v13);
  *(void *)((char *)a1 + v13) = v14;
  id v15 = v14;
  return a1;
}

void *sub_100F99814(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unsigned int v6 = (void *)a1[1];
  uint64_t v7 = (void *)a2[1];
  a1[1] = v7;
  id v8 = v7;

  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 32);
  id v14 = *(void **)((char *)a1 + v13);
  id v15 = *(void **)((char *)a2 + v13);
  *(void *)((char *)a1 + v13) = v15;
  id v16 = v15;

  return a1;
}

uint64_t sub_100F998FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 32)) = *(void *)(a2 + *(int *)(a3 + 32));
  return a1;
}

void *sub_100F9999C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)a1[1];
  a1[1] = a2[1];

  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = *(void **)((char *)a1 + v12);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);

  return a1;
}

uint64_t sub_100F99A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100F99A78);
}

uint64_t sub_100F99A78(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100F99B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100F99B3C);
}

void *sub_100F99B3C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100F99BE4()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100F99C94()
{
  return static UUID.== infix(_:_:)();
}

void sub_100F99CA4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CRLBoardItemParentAffinity();
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v47 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v40 - v12;
  __chkstk_darwin(v14, v15);
  uint64_t v48 = (uint64_t)&v40 - v16;
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v40 - v22;
  __chkstk_darwin(v24, v25);
  uint64_t v28 = (char *)&v40 - v27;
  uint64_t v50 = a1;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_shouldResetObjectUUIDs) == 1)
  {
    uint64_t v43 = v26;
    unint64_t v44 = v13;
    uint64_t v46 = v1;
    sub_1005057FC(&qword_101674550);
    CRRegister.wrappedValue.getter();
    sub_100A68D30((uint64_t)v23, (uint64_t)v28);
    unint64_t v45 = v6;
    uint64_t v29 = *(void (**)(char *, uint64_t))(v18 + 8);
    v29(v23, v17);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v23, v28, v17);
    CRRegister.wrappedValue.setter();
    __n128 v41 = (void (*)(uint64_t, uint64_t))v29;
    uint64_t v42 = v18 + 8;
    v29(v28, v17);
    uint64_t v30 = v18;
    sub_1005057FC((uint64_t *)&unk_101683E10);
    sub_1005057FC((uint64_t *)&unk_101683E30);
    uint64_t v31 = (uint64_t)v45;
    CRRegister.wrappedValue.getter();
    uint64_t v32 = v31;
    uint64_t v33 = v31;
    uint64_t v34 = v48;
    sub_100522E9C(v32, v48, (uint64_t *)&unk_101674520);
    sub_100F9BBD8(v33, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v34, 1, v17) == 1)
    {
      sub_100522F00(v34, (uint64_t *)&unk_101674520);
    }
    else
    {
      uint64_t v35 = v43;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v43, v34, v17);
      uint64_t v36 = (uint64_t)v44;
      sub_100A68D30(v35, (uint64_t)v44);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v36, 0, 1, v17);
      uint64_t v37 = v47;
      sub_100522E9C(v36, v47, (uint64_t *)&unk_101674520);
      uint64_t v38 = (void (*)(char *, void))CRRegister.wrappedValue.modify();
      sub_10068EA54(v37, v39);
      v38(v49, 0);
      sub_100522F00(v36, (uint64_t *)&unk_101674520);
      v41(v35, v17);
    }
  }
}

void sub_100F9A0B8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v47 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v40 - v12;
  __chkstk_darwin(v14, v15);
  uint64_t v48 = (uint64_t)&v40 - v16;
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v40 - v22;
  __chkstk_darwin(v24, v25);
  uint64_t v28 = (char *)&v40 - v27;
  uint64_t v50 = a1;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_shouldResetObjectUUIDs) == 1)
  {
    uint64_t v43 = v26;
    unint64_t v44 = v13;
    uint64_t v46 = v1;
    sub_1005057FC(&qword_101674550);
    CRRegister.wrappedValue.getter();
    sub_100A68D30((uint64_t)v23, (uint64_t)v28);
    unint64_t v45 = v6;
    uint64_t v29 = *(void (**)(char *, uint64_t))(v18 + 8);
    v29(v23, v17);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v23, v28, v17);
    CRRegister.wrappedValue.setter();
    __n128 v41 = (void (*)(uint64_t, uint64_t))v29;
    uint64_t v42 = v18 + 8;
    v29(v28, v17);
    uint64_t v30 = v18;
    sub_1005057FC(&qword_1016892B0);
    sub_1005057FC(&qword_101686808);
    uint64_t v31 = (uint64_t)v45;
    CRRegister.wrappedValue.getter();
    uint64_t v32 = v31;
    uint64_t v33 = v31;
    uint64_t v34 = v48;
    sub_100522E9C(v32, v48, (uint64_t *)&unk_101674520);
    sub_100F9BBD8(v33, type metadata accessor for CRLShapeItemParentAffinity);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v34, 1, v17) == 1)
    {
      sub_100522F00(v34, (uint64_t *)&unk_101674520);
    }
    else
    {
      uint64_t v35 = v43;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v43, v34, v17);
      uint64_t v36 = (uint64_t)v44;
      sub_100A68D30(v35, (uint64_t)v44);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v36, 0, 1, v17);
      uint64_t v37 = v47;
      sub_100522E9C(v36, v47, (uint64_t *)&unk_101674520);
      uint64_t v38 = (void (*)(char *, void))CRRegister.wrappedValue.modify();
      sub_10068EA54(v37, v39);
      v38(v49, 0);
      sub_100522F00(v36, (uint64_t *)&unk_101674520);
      v41(v35, v17);
    }
  }
}

id sub_100F9A4CC(char a1)
{
  switch(a1)
  {
    case 1:
      id v1 = objc_allocWithZone((Class)CRLColor);
      double v3 = 0.423529412;
      double v4 = 0.411764706;
      goto LABEL_6;
    case 2:
      id v1 = objc_allocWithZone((Class)CRLColor);
      double v3 = 0.68627451;
      double v4 = 0.156862745;
      goto LABEL_6;
    case 3:
      id v1 = objc_allocWithZone((Class)CRLColor);
      double v3 = 0.882352941;
      double v4 = 0.423529412;
LABEL_6:
      double v2 = 1.0;
      double v5 = 1.0;
      goto LABEL_11;
    case 4:
      id v6 = [objc_allocWithZone((Class)CRLColor) initWithRed:0.501960784 green:0.870588235 blue:0.564705882 alpha:1.0];
      goto LABEL_12;
    case 5:
      id v1 = objc_allocWithZone((Class)CRLColor);
      double v2 = 0.392156863;
      double v3 = 0.854901961;
      goto LABEL_9;
    case 6:
      id v1 = objc_allocWithZone((Class)CRLColor);
      double v2 = 0.811764706;
      double v5 = 1.0;
      double v3 = 0.811764706;
      double v4 = 0.811764706;
      goto LABEL_11;
    default:
      id v1 = objc_allocWithZone((Class)CRLColor);
      double v2 = 0.91372549;
      double v3 = 0.501960784;
LABEL_9:
      double v4 = 1.0;
      double v5 = 1.0;
LABEL_11:
      id v6 = [v1 initWithRed:v2 green:v3 blue:v4 alpha:v5];
LABEL_12:
      uint64_t v7 = v6;
      id v8 = [objc_allocWithZone((Class)CRLColorFill) initWithColor:v6];

      return v8;
  }
}

uint64_t sub_100F9A698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_100F9A6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  type metadata accessor for Key(0);
  sub_100515BF8();
  uint64_t v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  v8(v9, a3, a4, a5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100F9A760(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, int a7)
{
  v97 = a4;
  LODWORD(v89) = a7;
  v86 = a6;
  v98 = a5;
  uint64_t v99 = a2;
  id v90 = a3;
  uint64_t v95 = type metadata accessor for CRLWPStorageCRDTData(0);
  v87 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v95 - 8);
  __chkstk_darwin(v95, v8);
  v84 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v96 = *(void *)(v94 - 8);
  uint64_t v11 = __chkstk_darwin(v94, v10);
  v88 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v16 = (char *)&v80 - v15;
  __chkstk_darwin(v14, v17);
  v83 = (char *)&v80 - v18;
  uint64_t v19 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  uint64_t v21 = __chkstk_darwin(v19 - 8, v20);
  uint64_t v85 = (uint64_t)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v23);
  uint64_t v92 = (uint64_t)&v80 - v24;
  uint64_t v25 = sub_1005057FC((uint64_t *)&unk_101689290);
  __chkstk_darwin(v25 - 8, v26);
  uint64_t v28 = (char *)&v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1005057FC((uint64_t *)&unk_101674610);
  __chkstk_darwin(v29 - 8, v30);
  uint64_t v32 = (char *)&v80 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for CRLShapeItemCRDTData(0);
  uint64_t v34 = v33 - 8;
  __chkstk_darwin(v33, v35);
  uint64_t v37 = (char *)&v80 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for CRLWPStickyNoteItemCRDTData(0);
  uint64_t v39 = v38 - 8;
  uint64_t v41 = __chkstk_darwin(v38, v40);
  uint64_t v82 = (uint64_t)&v80 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41, v43);
  unint64_t v45 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)&v80 - v44);
  uint64_t v46 = sub_1005057FC(&qword_1016892B0);
  uint64_t v48 = __chkstk_darwin(v46 - 8, v47);
  uint64_t v81 = (uint64_t)&v80 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48, v50);
  uint64_t v91 = (uint64_t)&v80 - v51;
  v93 = a1;
  sub_100A9CEF0(v99, v97, v98, 0, 0, (uint64_t)&v80 - v51);
  *(void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)v45 + *(int *)(v39 + 28)) = (void (*)(char *, uint64_t, uint64_t, uint64_t))&_swiftEmptyDictionarySingleton;
  memset(v102, 0, 112);
  sub_10051A3F4((uint64_t)v106);
  sub_10051B3EC((uint64_t)v106, (uint64_t)v103, (uint64_t *)&unk_101685110);
  memset(v104, 0, sizeof(v104));
  uint64_t v105 = 0;
  sub_100E21C10((uint64_t)v102, (uint64_t)v103, (uint64_t)v104, (uint64_t)v104, (uint64_t)v37, 0.0);
  *(void *)&v37[*(int *)(v34 + 28)] = &_swiftEmptyDictionarySingleton;
  v87[7](v32, 1, 1, v95);
  uint64_t v52 = type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v28, 1, 1, v52);
  sub_1005C6DF0((uint64_t)v107);
  sub_10051B3EC((uint64_t)v107, (uint64_t)v101, &qword_10168D670);
  v87 = v45;
  sub_1005D9280((uint64_t)v37, (uint64_t)v32, (uint64_t)v28, (uint64_t)v101, (uint64_t)v45);
  id v53 = sub_100F9A4CC((char)v89);
  unint64_t v54 = sub_1005D3BF8();
  id v55 = v90;
  id v89 = v53;
  uint64_t v56 = v88;
  unint64_t v80 = v54;
  CRAttributedString.init(_:)();
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v96 + 32);
  v57(v16, v56, v94);
  id v58 = [v55 length];
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = v16;
  uint64_t v60 = swift_allocObject();
  *(void *)(v60 + 16) = sub_1005D3C5C;
  *(void *)(v60 + 24) = v59;
  v100[4] = sub_100F9BB98;
  v100[5] = v60;
  v100[0] = _NSConcreteStackBlock;
  v100[1] = *(void *)"";
  v100[2] = sub_100F9A6C0;
  v100[3] = &unk_101535780;
  char v61 = _Block_copy(v100);
  swift_retain();
  swift_release();
  [v55 enumerateAttributesInRange:0 options:v58 usingBlock:v61];
  id v90 = v55;

  _Block_release(v61);
  LOBYTE(v58) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v58)
  {
    __break(1u);
  }
  else
  {
    uint64_t v63 = v83;
    uint64_t v64 = v94;
    v57(v83, v16, v94);
    swift_release();
    uint64_t v65 = v96;
    uint64_t v66 = (uint64_t)v84;
    (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v84, v63, v64);
    uint64_t v67 = v95;
    CRAttributedString.init(_:)();
    *(void *)(v66 + *(int *)(v67 + 24)) = &_swiftEmptyDictionarySingleton;
    uint64_t v68 = v92;
    v69 = v89;
    v70 = v86;
    sub_10098FED4(v89, 0, 0, 0, v66, v86, 1, v92, 10.0, 1u);
    sub_100F9BBD8(v66, type metadata accessor for CRLWPStorageCRDTData);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v63, v64);
    sub_1005DF370((uint64_t)v70);

    uint64_t v71 = (uint64_t)v87;
    sub_100803F80(v68, (uint64_t)v87);
    uint64_t v72 = v81;
    sub_100522E9C(v91, v81, &qword_1016892B0);
    uint64_t v73 = v82;
    sub_100803E54(v71, v82, type metadata accessor for CRLWPStickyNoteItemCRDTData);
    type metadata accessor for CRLWPStickyNoteItemData(0);
    uint64_t v74 = swift_allocObject();
    sub_100803E54(v73, v74 + qword_10171AB30, type metadata accessor for CRLWPStickyNoteItemCRDTData);
    uint64_t v75 = v85;
    sub_100803E54(v73, v85, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_100F9BBD8(v73, type metadata accessor for CRLWPStickyNoteItemCRDTData);
    sub_100803F1C(v75, v74 + *(void *)(*(void *)v74 + 752));
    *(void *)(v74 + qword_10169E700) = 0;
    sub_10051B3EC(v72, v74 + *(void *)(*(void *)v74 + 632), &qword_1016892B0);
    v76 = sub_10068B398(0x1000000000000, 0x2000400000000, 0x1000000000000, 2);
    id v77 = objc_allocWithZone((Class)type metadata accessor for CRLWPStickyNoteItem());
    v78 = sub_100989358(v93, (uint64_t)v76);

    uint64_t v79 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v99, v79);
    sub_100F9BBD8(v92, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_100522F00(v91, &qword_1016892B0);
    sub_100F9BBD8(v71, type metadata accessor for CRLWPStickyNoteItemCRDTData);
    return (uint64_t)v78;
  }
  return result;
}

char *sub_100F9B198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v55 = a4;
  uint64_t v51 = a2;
  uint64_t v5 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_1016892B0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v52 = (uint64_t)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v48 = (uint64_t)&v48 - v18;
  __chkstk_darwin(v19, v20);
  uint64_t v54 = (uint64_t)&v48 - v21;
  __chkstk_darwin(v22, v23);
  uint64_t v50 = (uint64_t)&v48 - v24;
  __chkstk_darwin(v25, v26);
  uint64_t v49 = (uint64_t)&v48 - v27;
  __chkstk_darwin(v28, v29);
  uint64_t v31 = (char *)&v48 - v30;
  uint64_t v53 = v4;
  type metadata accessor for CRLWPStickyNoteItemData(0);
  swift_dynamicCastClassUnconditional();
  swift_retain();
  uint64_t v32 = sub_100800B3C(1);
  swift_release();
  uint64_t v33 = (uint64_t)v32 + *(void *)(*v32 + 632);
  swift_beginAccess();
  sub_100522E9C(v33, (uint64_t)v12, &qword_1016892B0);
  swift_retain();
  sub_1005057FC(&qword_101686808);
  CRRegister.wrappedValue.getter();
  sub_100522E9C((uint64_t)v8, (uint64_t)v31, (uint64_t *)&unk_101674520);
  sub_100F9BBD8((uint64_t)v8, type metadata accessor for CRLShapeItemParentAffinity);
  sub_100522F00((uint64_t)v12, &qword_1016892B0);
  swift_release();
  swift_beginAccess();
  uint64_t v34 = (char *)v33;
  uint64_t v35 = (uint64_t)v57;
  sub_100F9A0B8(v55);
  swift_endAccess();
  if (v35)
  {
    swift_release();
    sub_100522F00((uint64_t)v31, (uint64_t *)&unk_101674520);
  }
  else
  {
    uint64_t v55 = v9;
    uint64_t v36 = v50;
    sub_100522E9C(v51, v50, (uint64_t *)&unk_101674520);
    uint64_t v57 = v31;
    sub_100522E9C((uint64_t)v31, v54, (uint64_t *)&unk_101674520);
    uint64_t v37 = type metadata accessor for UUID();
    uint64_t v38 = *(void *)(v37 - 8);
    int v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37);
    uint64_t v40 = v49;
    if (v39 == 1)
    {
      sub_10051B3EC(v54, v49, (uint64_t *)&unk_101674520);
      swift_retain();
      sub_100522F00(v36, (uint64_t *)&unk_101674520);
    }
    else
    {
      swift_retain();
      sub_100522F00(v54, (uint64_t *)&unk_101674520);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v40, v36, v37);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v40, 0, 1, v37);
    }
    uint64_t v41 = v48;
    sub_100522E9C(v40, v48, (uint64_t *)&unk_101674520);
    swift_beginAccess();
    uint64_t v42 = v52;
    sub_100522E9C(v41, v52, (uint64_t *)&unk_101674520);
    uint64_t v43 = (void (*)(unsigned char *, void))CRRegister.wrappedValue.modify();
    sub_10068EA54(v42, v44);
    v43(v56, 0);
    sub_100522F00(v41, (uint64_t *)&unk_101674520);
    swift_endAccess();
    sub_100522F00(v40, (uint64_t *)&unk_101674520);
    swift_release();
    unint64_t v45 = *(void **)(v53 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
    id v46 = objc_allocWithZone((Class)type metadata accessor for CRLWPStickyNoteItem());
    uint64_t v34 = sub_100989358(v45, (uint64_t)v32);
    sub_100522F00((uint64_t)v57, (uint64_t *)&unk_101674520);
  }
  return v34;
}

char *sub_100F9B6DC()
{
  uint64_t v1 = v0;
  type metadata accessor for CRLWPStickyNoteItemData(0);
  swift_dynamicCastClassUnconditional();
  swift_retain();
  double v2 = sub_100800B3C(0);
  swift_release();
  double v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  id v4 = objc_allocWithZone((Class)type metadata accessor for CRLWPStickyNoteItem());
  return sub_100989358(v3, (uint64_t)v2);
}

uint64_t sub_100F9B78C(char a1)
{
  if (!*(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0
    && (id v4 = Strong, v5 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
                     v4,
                     (v5 & 1) != 0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v8, v9);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    id v6 = sub_100F9A4CC(a1);
    return sub_100A9B548(v6);
  }
  return result;
}

void sub_100F9B928()
{
}

id sub_100F9B958()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPStickyNoteItem();
  return [super dealloc];
}

uint64_t sub_100F9B990()
{
  return type metadata accessor for CRLWPStickyNoteItem();
}

uint64_t type metadata accessor for CRLWPStickyNoteItem()
{
  uint64_t result = qword_1016A3E38;
  if (!qword_1016A3E38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100F9B9E4()
{
  return swift_updateClassMetadata2();
}

unsigned char *storeEnumTagSinglePayload for CRLStickyNotePreset(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100F9BAE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLStickyNotePreset()
{
  return &type metadata for CRLStickyNotePreset;
}

unint64_t sub_100F9BB24()
{
  unint64_t result = qword_1016A3E48;
  if (!qword_1016A3E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3E48);
  }
  return result;
}

uint64_t sub_100F9BB78()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100F9BB88()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100F9BB98()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100F9BBC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100F9BBD0()
{
  return swift_release();
}

uint64_t sub_100F9BBD8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_100F9BC38(void *a1, void *a2)
{
  swift_unknownObjectWeakInit();
  uint64_t v5 = OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_asset;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_asset] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_sidePadding] = 0x4028000000000000;
  uint64_t v6 = OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_backgroundColor;
  id v7 = objc_allocWithZone((Class)CRLColor);
  CKRecordID v8 = v2;
  *(void *)&v2[v6] = [v7 initWithRed:0.819607843 green:0.819607843 blue:0.839215686 alpha:1.0];
  swift_unknownObjectWeakAssign();
  Swift::String v9 = *(void **)&v2[v5];
  *(void *)&v2[v5] = a2;
  uint64_t v10 = a2;

  self;
  if (swift_dynamicCastObjCClass())
  {
    char v11 = 0;
  }
  else
  {
    type metadata accessor for CRLFileRep();
    if (swift_dynamicCastClass())
    {
      char v11 = 1;
    }
    else
    {
      self;
      if (swift_dynamicCastObjCClass())
      {
        char v11 = 2;
      }
      else
      {
        self;
        if (swift_dynamicCastObjCClass())
        {
          char v11 = 3;
        }
        else
        {
          type metadata accessor for CRLURLRep();
          if (swift_dynamicCastClass())
          {
            char v11 = 4;
          }
          else
          {
            type metadata accessor for CRLUSDZRep(0);
            if (swift_dynamicCastClass()) {
              char v11 = 5;
            }
            else {
              char v11 = 6;
            }
          }
        }
      }
    }
  }
  v8[OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_type] = v11;

  uint64_t v12 = *(void *)&v10[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
  uint64_t v13 = *(void *)&v10[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
  sub_10050F848(&v10[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v12);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 64))(v12, v13) & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(rep:asset:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUndownloadedAssetDrawingHelper.swift", 104, 2, 95, (uint64_t)"Expected the asset to need downloading.", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(rep:asset:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUndownloadedAssetDrawingHelper.swift", 104, 2, 95);
  }
  v18.receiver = v8;
  v18.super_class = (Class)type metadata accessor for CRLUndownloadedAssetDrawingHelper();
  id v14 = [super init];
  type metadata accessor for CRLImageUndownloadedAssetDrawingHelper();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v16 = v14;
  if (([v16 isKindOfClass:ObjCClassFromMetadata] & 1) == 0
    && *((unsigned char *)v16 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_type) == 2)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(rep:asset:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUndownloadedAssetDrawingHelper.swift", 104, 2, 100, (uint64_t)"Image undownloaded asset should be handled by CRLImageUndownloadedAssetDrawingHelper.", 85, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(rep:asset:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUndownloadedAssetDrawingHelper.swift", 104, 2, 100);
  }

  return v16;
}

void sub_100F9BFA8(CGContext *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CGPathFillRule();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  CKRecordID v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = Strong;
    id v37 = [Strong layout];
    [v37 boundsForStandardKnobs];
    CGFloat v12 = v11;
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    CGFloat v18 = v17;
    id v19 = [self bezierPathWithContinuousCornerRoundedRect:v11 cornerRadius:v13 v15, v17, 10.0];
    uint64_t v20 = (const CGPath *)[v19 CGPath];

    if (v20)
    {
      CGContextSaveGState(a1);
      CGContextAddPath(a1, v20);
      (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for CGPathFillRule.winding(_:), v4);
      CGContextRef.clip(using:)();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      uint64_t v21 = (CGColor *)[*(id *)(v2 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_backgroundColor) CGColor];
      CGContextSetFillColorWithColor(a1, v21);

      [v10 naturalBounds];
      CGContextFillRect(a1, v39);
      sub_100F9CFCC();
      sub_100F9D624();
      id v22 = objc_allocWithZone((Class)NSAttributedString);
      NSString v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_100515BF8();
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      CFAttributedStringRef v25 = (const __CFAttributedString *)[v22 initWithString:v23 attributes:isa];

      uint64_t v26 = CTLineCreateWithAttributedString(v25);
      CGRect BoundsWithOptions = CTLineGetBoundsWithOptions(v26, 0);
      if (CGRectGetWidth(BoundsWithOptions)
         + *(double *)(v2 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_sidePadding)
         + *(double *)(v2 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_sidePadding) <= v16)
      {
        sub_100F9CDB4(a1, v12, v14, v16, v18);
      }
      else
      {
        CGContextSaveGState(a1);
        double v28 = sub_100F9C4FC();
        if (v27)
        {
          uint64_t v29 = v27;
          double v30 = v28;
          double v31 = sub_100065738(v12, v14, v16, v18);
          sub_10006402C(v31, v32, v30);
          CGContextRef.draw(_:in:byTiling:)();
          CGContextRestoreGState(a1);
        }
        else
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"drawImage(in:rect:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUndownloadedAssetDrawingHelper.swift", 104, 2, 253, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"drawImage(in:rect:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUndownloadedAssetDrawingHelper.swift", 104, 2, 253);
        }
      }
      CGContextRestoreGState(a1);
      uint64_t v34 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_asset);
      if (v34)
      {
        sub_100458B68(a1, v34);
      }
      else
      {
        if (qword_10166FBD8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v35 = (id)static OS_os_log.assetManagement;
        uint64_t v36 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v35, (uint64_t)&_mh_execute_header, v36, (uint64_t)"CRLUndowloadedAssetDrawingHelper: draw(in ctx) called without a valid Asset. This might mean your generated Image is not updating correctly", 139, 2, (uint64_t)_swiftEmptyArrayStorage);
      }
    }
    else
    {

      id v33 = v37;
    }
  }
}

double sub_100F9C4FC()
{
  uint64_t v0 = self;
  id v1 = [v0 configurationWithPointSize:4 weight:20.0];
  swift_bridgeObjectRetain();
  id v2 = v1;
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v4 = self;
  id v5 = [v4 systemImageNamed:v3 withConfiguration:v2];

  if (!v5) {
    goto LABEL_9;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {

LABEL_9:
    return 0.0;
  }
  uint64_t v7 = (void *)Strong;
  id v8 = v5;
  id v9 = [v7 canvas];

  if (!v9)
  {

    return 0.0;
  }
  [v9 contentsScale];
  double v11 = v10;

  [v8 size];
  double v14 = sub_1000646A4(v12, v13, v11);
  CGFloat v16 = v14;
  CGFloat v17 = v15;
  if (v14 <= v15) {
    double v14 = v15;
  }
  id v18 = [v0 configurationWithPointSize:4 weight:v14];
  swift_bridgeObjectRetain();
  id v19 = v18;
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v21 = [v4 systemImageNamed:v20 withConfiguration:v19];

  if (v21)
  {
    id v22 = [self secondaryLabelColor];
    id v23 = [v21 imageWithTintColor:v22];
  }
  else
  {

    id v23 = 0;
  }
  v30.width = v16;
  v30.height = v17;
  UIGraphicsBeginImageContextWithOptions(v30, 0, v11);
  uint64_t v26 = UIGraphicsGetCurrentContext();
  if (!v26)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"fetchSymbolCGImageAndSize(imageName:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUndownloadedAssetDrawingHelper.swift", 104, 2, 194, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"fetchSymbolCGImageAndSize(imageName:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUndownloadedAssetDrawingHelper.swift", 104, 2, 194);

    return 0.0;
  }
  uint64_t v27 = v26;
  if (v23) {
    [v23 drawInRect:sub_100064070()];
  }
  double v28 = CGBitmapContextCreateImage(v27);
  UIGraphicsEndImageContext();
  [v8 size];
  double v24 = v29;

  return v24;
}

id sub_100F9C898(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double v7 = *(double *)(v4 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_sidePadding);
  sub_100F9CFCC();
  sub_100F9D624();
  id v8 = objc_allocWithZone((Class)NSAttributedString);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_100515BF8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  CFAttributedStringRef v11 = (const __CFAttributedString *)[v8 initWithString:v9 attributes:isa];

  double v12 = CTLineCreateWithAttributedString(v11);
  CGRect BoundsWithOptions = CTLineGetBoundsWithOptions(v12, 0);
  CGFloat x = BoundsWithOptions.origin.x;
  CGFloat y = BoundsWithOptions.origin.y;
  CGFloat width = BoundsWithOptions.size.width;
  CGFloat height = BoundsWithOptions.size.height;
  double v17 = CGRectGetWidth(BoundsWithOptions);
  v51.origin.CGFloat x = x;
  v51.origin.CGFloat y = y;
  v51.size.CGFloat width = width;
  v51.size.CGFloat height = height;
  double v18 = CGRectGetHeight(v51);

  id v19 = [objc_allocWithZone((Class)CATextLayer) init];
  NSString v20 = self;
  id v21 = [v20 systemFontOfSize:14.0];
  id v22 = [v21 fontDescriptor];
  id v23 = [v22 fontDescriptorWithSymbolicTraits:2];

  if (v23)
  {
    [v21 pointSize];
    id v24 = [v20 fontWithDescriptor:v23];

    id v21 = v24;
  }
  [v19 setFont:v21];

  id v25 = [v20 systemFontOfSize:14.0];
  id v26 = [v25 fontDescriptor];
  id v27 = [v26 fontDescriptorWithSymbolicTraits:2];

  if (v27)
  {
    [v25 pointSize];
    id v28 = [v20 fontWithDescriptor:v27];

    id v25 = v28;
  }
  [v25 pointSize];
  double v30 = v29;

  [v19 setFontSize:v30];
  id v31 = [self currentTraitCollection];
  id v32 = [v31 accessibilityContrast];

  if (v32 == (id)1) {
    id v33 = [self labelColor];
  }
  else {
    id v33 = [objc_allocWithZone((Class)UIColor) initWithRed:0.325490196 green:0.345098039 blue:0.37254902 alpha:1.0];
  }
  uint64_t v34 = v33;
  double v35 = a3 - (v7 + v7);
  BOOL v36 = v35 < v17;
  if (v35 >= v17) {
    double v37 = v18;
  }
  else {
    double v37 = v18 + v18;
  }
  double v38 = sub_100065738(a1, a2, a3, a4);
  double v40 = v39 - v37 * 0.5;
  double v41 = v38 - v35 * 0.5;
  id v42 = [v34 CGColor];

  [v19 setForegroundColor:v42];
  sub_100F9CFCC();
  sub_100F9D624();
  id v43 = objc_allocWithZone((Class)NSAttributedString);
  NSString v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class v45 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v46 = [v43 initWithString:v44 attributes:v45];

  [v19 setString:v46];
  [v19 setWrapped:v36];
  [v19 setTruncationMode:kCATruncationEnd];
  [v19 setAlignmentMode:kCAAlignmentCenter];
  [v19 setBounds:v41, v40, v35, v37];
  return v19;
}

void sub_100F9CDB4(CGContext *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  double v8 = *(double *)(v5 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_sidePadding);
  double v9 = a4 - (v8 + v8);
  int v10 = *(unsigned __int8 *)(v5 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_type);
  sub_100F9CFCC();
  sub_100F9D624();
  id v11 = objc_allocWithZone((Class)NSAttributedString);
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_100515BF8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  CFAttributedStringRef v14 = (const __CFAttributedString *)[v11 initWithString:v12 attributes:isa];

  double v15 = CTLineCreateWithAttributedString(v14);
  CGRect BoundsWithOptions = CTLineGetBoundsWithOptions(v15, 0);
  CGFloat x = BoundsWithOptions.origin.x;
  CGFloat y = BoundsWithOptions.origin.y;
  CGFloat width = BoundsWithOptions.size.width;
  CGFloat height = BoundsWithOptions.size.height;
  double v20 = CGRectGetWidth(BoundsWithOptions);
  v32.origin.CGFloat x = x;
  v32.origin.CGFloat y = y;
  v32.size.CGFloat width = width;
  v32.size.CGFloat height = height;
  double v21 = CGRectGetHeight(v32);

  if (v9 < v20) {
    double v21 = v21 + v21;
  }
  double v22 = sub_100065738(a2, a3, a4, a5) - v9 * 0.5;
  if (v10 == 5) {
    CGFloat v24 = v22;
  }
  else {
    CGFloat v24 = v8;
  }
  CGFloat v25 = v23 - v21 * 0.5;
  CGContextSaveGState(a1);
  id v29 = sub_100F9C898(a2, a3, a4, a5);
  CGContextTranslateCTM(a1, v24, v25);
  [v29 drawInContext:a1];
  CGContextRestoreGState(a1);
}

uint64_t sub_100F9CFCC()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

id sub_100F9D414()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUndownloadedAssetDrawingHelper();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLUndownloadedAssetDrawingHelper()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for CRLUndownloadedAssetDrawingHelper.UndownloadedAssetType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100F9D594);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUndownloadedAssetDrawingHelper.UndownloadedAssetType()
{
  return &type metadata for CRLUndownloadedAssetDrawingHelper.UndownloadedAssetType;
}

unint64_t sub_100F9D5D0()
{
  unint64_t result = qword_1016A3EA0;
  if (!qword_1016A3EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3EA0);
  }
  return result;
}

unint64_t sub_100F9D624()
{
  sub_1005057FC((uint64_t *)&unk_101687FB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  *(void *)(inited + 32) = NSFontAttributeName;
  NSString v1 = self;
  objc_super v2 = NSFontAttributeName;
  id v3 = [v1 systemFontOfSize:14.0];
  id v4 = [v3 fontDescriptor];
  id v5 = [v4 fontDescriptorWithSymbolicTraits:2];

  if (v5)
  {
    [v3 pointSize];
    id v6 = [v1 fontWithDescriptor:v5];

    id v3 = v6;
  }
  unint64_t v7 = sub_100515BB8();
  *(void *)(inited + 40) = v3;
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 72) = NSForegroundColorAttributeName;
  double v8 = self;
  double v9 = NSForegroundColorAttributeName;
  id v10 = [v8 currentTraitCollection];
  id v11 = [v10 accessibilityContrast];

  if (v11 == (id)1) {
    id v12 = [self labelColor];
  }
  else {
    id v12 = [objc_allocWithZone((Class)UIColor) initWithRed:0.325490196 green:0.345098039 blue:0.37254902 alpha:1.0];
  }
  double v13 = v12;
  id v14 = [v12 CGColor];

  type metadata accessor for CGColor(0);
  uint64_t v16 = v15;
  *(void *)(inited + 80) = v14;
  *(void *)(inited + 104) = v15;
  *(void *)(inited + 112) = NSBackgroundColorAttributeName;
  double v17 = self;
  double v18 = NSBackgroundColorAttributeName;
  id v19 = [v17 clearColor];
  id v20 = [v19 CGColor];

  *(void *)(inited + 144) = v16;
  *(void *)(inited + 120) = v20;
  return sub_100A38A68(inited);
}

uint64_t sub_100F9D888(char a1, uint64_t a2)
{
  if ((a1 & 1) == 0) {
    return sub_100F9F188(a2);
  }
  uint64_t v3 = *(void *)&asc_1011BF738[8 * (char)a2];
  if (*(void *)"\n" != v3)
  {
    uint64_t v4 = 9;
    id v5 = &byte_101502AE9;
    while (v4)
    {
      uint64_t v6 = *v5++;
      --v4;
      if (*(void *)&asc_1011BF738[8 * v6] == v3) {
        return *(v5 - 2);
      }
    }
  }
  return 10;
}

uint64_t sub_100F9D900()
{
  uint64_t v0 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0], v5);
  unint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Locale();
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v15 = type metadata accessor for TypeDisplayRepresentation();
  sub_100568B28(v15, qword_10171CD28);
  sub_100556B74(v15, (uint64_t)qword_10171CD28);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v4 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v17[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v3, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_100F9DBF0()
{
  uint64_t v0 = sub_1005057FC(&qword_10167D138);
  __chkstk_darwin(v0 - 8, v1);
  v87 = (char *)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v72 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v75 - 8);
  __chkstk_darwin(v75, v7);
  uint64_t v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Locale();
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v14 - 8, v15);
  double v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for LocalizedStringResource();
  uint64_t v86 = *(void *)(v84 - 8);
  __chkstk_darwin(v84, v18);
  sub_1005057FC(&qword_1016A3F18);
  uint64_t v19 = sub_1005057FC(&qword_10168D0B0);
  uint64_t v80 = v19;
  unint64_t v20 = (*(unsigned __int8 *)(*(void *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v19 - 8) + 80);
  uint64_t v78 = *(void *)(*(void *)(v19 - 8) + 72);
  uint64_t v21 = v78;
  uint64_t v22 = swift_allocObject();
  uint64_t v68 = v22;
  *(_OWORD *)(v22 + 16) = xmmword_101192420;
  unint64_t v23 = v22 + v20;
  uint64_t v69 = v22 + v20 + *(int *)(v19 + 48);
  *(unsigned char *)(v22 + v20) = 0;
  unint64_t v81 = v22 + v20;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  unsigned int v85 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  CGFloat v24 = *(void (**)(void))(v6 + 104);
  uint64_t v79 = v6 + 104;
  uint64_t v82 = (void (*)(char *, void, uint64_t))v24;
  v24(v9);
  CGFloat v25 = v9;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v74 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56);
  v86 += 56;
  id v26 = v72;
  uint64_t v27 = v84;
  v74(v72, 1, 1, v84);
  uint64_t v83 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v28 = *(void *)(v83 - 8);
  v76 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  uint64_t v77 = v28 + 56;
  v76(v87, 1, 1, v83);
  DisplayRepresentation.init(title:subtitle:image:)();
  id v29 = (unsigned char *)(v23 + v21);
  uint64_t v30 = v80;
  uint64_t v69 = (uint64_t)&v29[*(int *)(v80 + 48)];
  v70 = v17;
  *id v29 = 1;
  String.LocalizationValue.init(stringLiteral:)();
  id v31 = v13;
  static Locale.current.getter();
  uint64_t v73 = v25;
  CGRect v32 = v82;
  v82(v25, v85, v75);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  id v33 = v74;
  v74(v26, 1, 1, v27);
  uint64_t v34 = v83;
  v76(v87, 1, 1, v83);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v69 = 2 * v78;
  unint64_t v35 = v81;
  BOOL v36 = (unsigned char *)(v81 + 2 * v78);
  uint64_t v67 = &v36[*(int *)(v30 + 48)];
  unsigned char *v36 = 2;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v71 = v31;
  static Locale.current.getter();
  v32(v73, v85, v75);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  double v37 = v72;
  v33(v72, 1, 1, v84);
  double v38 = v76;
  v76(v87, 1, 1, v34);
  DisplayRepresentation.init(title:subtitle:image:)();
  double v39 = (unsigned char *)(v35 + v69 + v78);
  uint64_t v40 = v80;
  uint64_t v69 = (uint64_t)&v39[*(int *)(v80 + 48)];
  *double v39 = 3;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  double v41 = v73;
  uint64_t v42 = v75;
  v82(v73, v85, v75);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  id v43 = v74;
  v74(v37, 1, 1, v84);
  v38(v87, 1, 1, v83);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v44 = v78;
  uint64_t v69 = 4 * v78;
  Class v45 = (unsigned char *)(v81 + 4 * v78);
  uint64_t v67 = &v45[*(int *)(v40 + 48)];
  *Class v45 = 4;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  id v46 = v82;
  v82(v41, v85, v42);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v47 = v84;
  v43(v37, 1, 1, v84);
  uint64_t v48 = v83;
  v76(v87, 1, 1, v83);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v49 = (unsigned char *)(v81 + v69 + v44);
  uint64_t v69 = (uint64_t)&v49[*(int *)(v80 + 48)];
  *uint64_t v49 = 5;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v50 = v75;
  v46(v73, v85, v75);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v74(v37, 1, 1, v47);
  uint64_t v51 = v48;
  uint64_t v52 = v76;
  v76(v87, 1, 1, v51);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v53 = (unsigned char *)(v81 + 6 * v78);
  uint64_t v69 = (uint64_t)&v53[*(int *)(v80 + 48)];
  *uint64_t v53 = 6;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v54 = v73;
  v82(v73, v85, v50);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v74(v37, 1, 1, v84);
  v52(v87, 1, 1, v83);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v69 = 8 * v78;
  uint64_t v56 = v80;
  unint64_t v55 = v81;
  uint64_t v57 = (unsigned char *)(v81 + 7 * v78);
  uint64_t v67 = &v57[*(int *)(v80 + 48)];
  *uint64_t v57 = 7;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v58 = v85;
  uint64_t v59 = v75;
  v82(v54, v85, v75);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v60 = v37;
  char v61 = v74;
  v74(v60, 1, 1, v84);
  v76(v87, 1, 1, v83);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v67 = (unsigned char *)(v55 + v69 + *(int *)(v56 + 48));
  *(unsigned char *)(v55 + v69) = 8;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v62 = v73;
  v82(v73, v58, v59);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v61(v72, 1, 1, v84);
  uint64_t v63 = v87;
  uint64_t v64 = v76;
  v76(v87, 1, 1, v83);
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v55 + v69 + v78) = 9;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v82(v62, v85, v75);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v74(v72, 1, 1, v84);
  v64(v63, 1, 1, v83);
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t v65 = sub_100A466E4(v68);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t result = swift_deallocClassInstance();
  qword_10171CD40 = v65;
  return result;
}

BOOL sub_100F9E9D8(char *a1, char *a2)
{
  return *(void *)&asc_1011BF738[8 * *a1] == *(void *)&asc_1011BF738[8 * *a2];
}

unint64_t sub_100F9EA00()
{
  unint64_t result = qword_1016A3EA8;
  if (!qword_1016A3EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3EA8);
  }
  return result;
}

Swift::Int sub_100F9EA54()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(*(void *)&asc_1011BF738[8 * v1]);
  return Hasher._finalize()();
}

void sub_100F9EAA4()
{
  Hasher._combine(_:)(*(void *)&asc_1011BF738[8 * *v0]);
}

Swift::Int sub_100F9EADC()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(*(void *)&asc_1011BF738[8 * v1]);
  return Hasher._finalize()();
}

uint64_t sub_100F9EB28@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100F9F344(*a1);
  *a2 = result;
  return result;
}

void sub_100F9EB54(void *a1@<X8>)
{
  *a1 = *(void *)&asc_1011BF738[8 * *v1];
}

unint64_t sub_100F9EB70()
{
  unint64_t result = qword_1016A3EB0;
  if (!qword_1016A3EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3EB0);
  }
  return result;
}

unint64_t sub_100F9EBC8()
{
  unint64_t result = qword_1016A3EB8;
  if (!qword_1016A3EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3EB8);
  }
  return result;
}

unint64_t sub_100F9EC20()
{
  unint64_t result = qword_1016A3EC0;
  if (!qword_1016A3EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3EC0);
  }
  return result;
}

void *sub_100F9EC74()
{
  return &protocol witness table for Int;
}

unint64_t sub_100F9EC84()
{
  unint64_t result = qword_1016A3EC8;
  if (!qword_1016A3EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3EC8);
  }
  return result;
}

unint64_t sub_100F9ECDC()
{
  unint64_t result = qword_1016A3ED0;
  if (!qword_1016A3ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3ED0);
  }
  return result;
}

unint64_t sub_100F9ED34()
{
  unint64_t result = qword_1016A3ED8;
  if (!qword_1016A3ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3ED8);
  }
  return result;
}

unint64_t sub_100F9ED8C()
{
  unint64_t result = qword_1016A3EE0;
  if (!qword_1016A3EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3EE0);
  }
  return result;
}

uint64_t sub_100F9EDE0@<X0>(uint64_t a1@<X8>)
{
  if (qword_101670280 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_100556B74(v2, (uint64_t)qword_10171CD28);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100F9EE88()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100F9EED8()
{
  unint64_t result = qword_1016A3EE8;
  if (!qword_1016A3EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3EE8);
  }
  return result;
}

uint64_t sub_100F9EF2C(uint64_t a1)
{
  unint64_t v2 = sub_100F9EED8();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100F9EF7C()
{
  unint64_t result = qword_1016A3EF0;
  if (!qword_1016A3EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3EF0);
  }
  return result;
}

unint64_t sub_100F9EFD4()
{
  unint64_t result = qword_1016A3EF8;
  if (!qword_1016A3EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3EF8);
  }
  return result;
}

unint64_t sub_100F9F02C()
{
  unint64_t result = qword_1016A3F00;
  if (!qword_1016A3F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3F00);
  }
  return result;
}

uint64_t sub_100F9F080()
{
  if (qword_101670288 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_100F9F0DC(uint64_t a1)
{
  unint64_t v2 = sub_100F9ED8C();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100F9F12C()
{
  unint64_t result = qword_1016A3F08;
  if (!qword_1016A3F08)
  {
    sub_100522D34(&qword_1016A3F10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3F08);
  }
  return result;
}

uint64_t sub_100F9F188(uint64_t result)
{
  uint64_t v1 = *(void *)&asc_1011BF738[8 * (char)result];
  if (*(void *)"\n" != v1)
  {
    uint64_t v2 = 0;
    while (v2 != 9)
    {
      uint64_t v3 = *(void *)&asc_1011BF738[8 * *((char *)&off_101502AC8 + v2++ + 33)];
      if (v3 == v1) {
        goto LABEL_6;
      }
    }
    return 10;
  }
  uint64_t v2 = 0;
LABEL_6:
  if (v2 >= 9) {
    return 10;
  }
  unint64_t v4 = v2 + 1;
  if (v4 < 0xA) {
    return *((unsigned __int8 *)&off_101502AC8 + v4 + 32);
  }
  __break(1u);
  return result;
}

void sub_100F9F230(void *a1@<X8>)
{
  *a1 = &off_101502AC8;
}

unsigned char *storeEnumTagSinglePayload for CRLFontSizeEntity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100F9F30CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFontSizeEntity()
{
  return &type metadata for CRLFontSizeEntity;
}

uint64_t sub_100F9F344(uint64_t a1)
{
  uint64_t v1 = a1 - 10;
  uint64_t result = 1;
  switch(v1)
  {
    case 0:
      uint64_t result = 0;
      break;
    case 2:
      return result;
    case 4:
      uint64_t result = 2;
      break;
    case 8:
      uint64_t result = 3;
      break;
    case 14:
      uint64_t result = 4;
      break;
    case 26:
      uint64_t result = 5;
      break;
    case 38:
      uint64_t result = 6;
      break;
    case 62:
      uint64_t result = 7;
      break;
    case 86:
      uint64_t result = 8;
      break;
    default:
      uint64_t result = 10;
      break;
  }
  return result;
}

id sub_100F9F574(uint64_t a1, id a2)
{
  int v3 = v2;
  unsigned int v6 = (char *)objc_allocWithZone(v3);
  uint64_t v7 = &v6[OBJC_IVAR____TtC8Freeform19CRLCommandSetStroke_id];
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
  if (a2)
  {
    uint64_t v10 = v6;
    a2 = a2;
    [a2 copy];
    _bridgeAnyObjectToAny(_:)();

    swift_unknownObjectRelease();
    sub_100F9FDA8();
    swift_dynamicCast();
    *(void *)&v10[OBJC_IVAR____TtC8Freeform19CRLCommandSetStroke_stroke] = v13;
  }
  else
  {
    *(void *)&v6[OBJC_IVAR____TtC8Freeform19CRLCommandSetStroke_stroke] = 0;
  }
  v14.receiver = v6;
  v14.super_class = v3;
  id v11 = [super init];

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  return v11;
}

void sub_100F9F91C(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5 = v3;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v9 = [a1 getBoardItemForUUID:isa];

  if (!v9) {
    goto LABEL_7;
  }
  type metadata accessor for CRLStyledItem();
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10)
  {

LABEL_7:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetStroke.swift", 91, 2, 31, (uint64_t)"Unable to retrieve styled board item.", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve styled board item.");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetStroke.swift", 91, 2, 31);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v17, v18);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  id v11 = (void *)v10;
  id v12 = v9;
  sub_10103405C((uint64_t)v11, (uint64_t)&off_101518040);

  if (v4)
  {
  }
  else
  {
    uint64_t v13 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform19CRLCommandSetStroke_stroke);
    objc_super v14 = *(void (**)(void *))((swift_isaMask & *v11) + 0x428);
    id v15 = v13;
    v14(v13);
    id v16 = v12;
    sub_101023724((uint64_t)v11, (uint64_t)&off_101518040, a3);
  }
}

void sub_100F9FB88()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform19CRLCommandSetStroke_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLCommandSetStroke_stroke);
}

id sub_100F9FC04()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetStroke();
  return [super dealloc];
}

uint64_t sub_100F9FCBC()
{
  return type metadata accessor for CRLCommandSetStroke();
}

uint64_t type metadata accessor for CRLCommandSetStroke()
{
  uint64_t result = qword_1016A3F48;
  if (!qword_1016A3F48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100F9FD10()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_100F9FDA8()
{
  unint64_t result = qword_101686A50;
  if (!qword_101686A50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101686A50);
  }
  return result;
}

id sub_100F9FDE8(uint64_t a1, void *a2)
{
  uint64_t v5 = &v2[OBJC_IVAR____TtC8Freeform19CRLCommandSetStroke_id];
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  if (a2)
  {
    uint64_t v8 = v2;
    id v9 = a2;
    [v9 copy];
    _bridgeAnyObjectToAny(_:)();

    swift_unknownObjectRelease();
    sub_100F9FDA8();
    swift_dynamicCast();
    *(void *)&v8[OBJC_IVAR____TtC8Freeform19CRLCommandSetStroke_stroke] = v12;
  }
  else
  {
    *(void *)&v2[OBJC_IVAR____TtC8Freeform19CRLCommandSetStroke_stroke] = 0;
  }
  v13.receiver = v2;
  v13.super_class = (Class)type metadata accessor for CRLCommandSetStroke();
  id v10 = [super init];
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v10;
}

id sub_100F9FFB0(uint64_t a1, char a2)
{
  uint64_t v5 = objc_allocWithZone(v2);
  uint64_t v6 = &v5[OBJC_IVAR____TtC8Freeform30CRLCommandSetAspectRatioLocked_id];
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  v5[OBJC_IVAR____TtC8Freeform30CRLCommandSetAspectRatioLocked_aspectRatioLocked] = a2;
  v11.receiver = v5;
  v11.super_class = v2;
  [super init];
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v9;
}

void sub_100FA032C(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5 = v3;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v9 = [a1 getBoardItemForUUID:isa];

  if (v9)
  {
    id v10 = v9;
    sub_10103405C((uint64_t)v10, (uint64_t)&off_101518040);

    if (v4)
    {
    }
    else
    {
      (*(void (**)(void))((swift_isaMask & *v10) + 0x120))(*(unsigned __int8 *)(v5
                                                                                             + OBJC_IVAR____TtC8Freeform30CRLCommandSetAspectRatioLocked_aspectRatioLocked));
      objc_super v11 = v10;
      sub_101023724((uint64_t)v11, (uint64_t)&off_101518040, a3);
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetAspectRatioLocked.swift", 102, 2, 27, (uint64_t)"Unable to retrieve board item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve board item");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetAspectRatioLocked.swift", 102, 2, 27);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v12, v13);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
}

uint64_t sub_100FA0568()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform30CRLCommandSetAspectRatioLocked_id;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

id sub_100FA05D4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetAspectRatioLocked();
  return [super dealloc];
}

uint64_t sub_100FA0678()
{
  return type metadata accessor for CRLCommandSetAspectRatioLocked();
}

uint64_t type metadata accessor for CRLCommandSetAspectRatioLocked()
{
  uint64_t result = qword_1016A3F80;
  if (!qword_1016A3F80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100FA06CC()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100FA07C4()
{
  id v0 = [self standardUserDefaults];
  type metadata accessor for CRLWPiOSUserDefaults();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v0;
  qword_10171CD68 = result;
  return result;
}

uint64_t type metadata accessor for CRLWPiOSUserDefaults()
{
  return self;
}

uint64_t sub_100FA0844@<X0>(void *a1@<X8>)
{
  if (qword_101670290 != -1) {
    swift_once();
  }
  *a1 = qword_10171CD68;

  return swift_retain();
}

uint64_t sub_100FA08B0()
{
  char v0 = sub_100B3428C();
  return (v0 == 2) | v0 & 1u;
}

uint64_t sub_100FA08F0@<X0>(char *a1@<X0>, int a2@<W1>, char *a3@<X8>)
{
  LODWORD(v93) = a2;
  uint64_t v94 = a1;
  uint64_t v96 = a3;
  uint64_t v4 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v97 - 8);
  __chkstk_darwin(v97, v9);
  objc_super v11 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  id v15 = (char *)&v90 - v14;
  __chkstk_darwin(v16, v17);
  uint64_t v95 = (char *)&v90 - v18;
  uint64_t v19 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v22 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v23 - 8, v24);
  id v26 = (char *)&v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v90 - v29;
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_101685450);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_10077F98C((uint64_t)v22, (uint64_t)v26);
  sub_100FA7A14((uint64_t)v22, type metadata accessor for CRLFileItemAtomicDataStruct);
  uint64_t v31 = (uint64_t)v26;
  uint64_t v32 = (uint64_t)v30;
  sub_1008A7A50(v31, (uint64_t)v30);
  id v33 = *(char **)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  uint64_t v34 = *(void *)&v33[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  unint64_t v35 = *(os_unfair_lock_s **)(v34 + 16);
  BOOL v36 = v33;
  os_unfair_lock_lock(v35);
  uint64_t v37 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  double v38 = *(void **)&v36[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v38)
  {
    id v39 = *(id *)&v36[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v40 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    double v41 = v36;
    id v42 = sub_100EAFDE4((uint64_t)v41);

    id v43 = *(void **)&v36[v37];
    *(void *)&v36[v37] = v42;
    id v39 = v42;

    double v38 = 0;
  }
  uint64_t v44 = *(os_unfair_lock_s **)(v34 + 16);
  id v45 = v38;
  os_unfair_lock_unlock(v44);
  sub_100EA7CA0(v32, 0, 3, 0, 0, v7);

  uint64_t v46 = v97;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v97) == 1)
  {
    sub_100FA7A14(v32, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_1005CCBB8((uint64_t)v7);
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v47 = (id)static OS_os_log.crlDefault;
    uint64_t v48 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v47, (uint64_t)&_mh_execute_header, v48, (uint64_t)"Unable to make cache a preview item from backing asset because the asset is missing", 83, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t v49 = 1;
LABEL_21:
    uint64_t v77 = v96;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v77, v49, 1, v46);
  }
  uint64_t v92 = v32;
  uint64_t v50 = v95;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v95, v7, v46);
  uint64_t v51 = v94;
  URL.deletingLastPathComponent()();
  uint64_t v91 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v91(v11, v15, v46);
  uint64_t v52 = &selRef_crlaxPerformCleanupTasksPriorToRemovalFromCanvas;
  if (v93)
  {
    uint64_t v53 = self;
    id v54 = [v53 defaultManager];
    URL._bridgeToObjectiveC()(v55);
    uint64_t v57 = v56;
    unsigned __int8 v58 = [v54 crl_directoryExistsAt:v56];

    uint64_t v59 = *(void (**)(char *, uint64_t))(v8 + 8);
    v59(v11, v46);
    if (v58)
    {
      v93 = v59;
      uint64_t v46 = v97;
      uint64_t v51 = v94;
      uint64_t v50 = v95;
      uint64_t v52 = &selRef_crlaxPerformCleanupTasksPriorToRemovalFromCanvas;
    }
    else
    {
      id v60 = [v53 defaultManager];
      URL._bridgeToObjectiveC()(v61);
      uint64_t v63 = v62;
      v99[0] = 0;
      unsigned __int8 v64 = [v60 createDirectoryAtURL:v62 withIntermediateDirectories:0 attributes:0 error:v99];

      if ((v64 & 1) == 0)
      {
        id v80 = v99[0];
        uint64_t v79 = _convertNSErrorToError(_:)();

        swift_willThrow();
        uint64_t v81 = v97;
        v59(v15, v97);
        uint64_t v46 = v81;
        goto LABEL_18;
      }
      v93 = v59;
      id v65 = v99[0];
      uint64_t v46 = v97;
      uint64_t v51 = v94;
      uint64_t v50 = v95;
      uint64_t v52 = &selRef_crlaxPerformCleanupTasksPriorToRemovalFromCanvas;
    }
  }
  else
  {
    v93 = *(void (**)(char *, uint64_t))(v8 + 8);
    v93(v11, v46);
  }
  id v66 = [self v52[369]];
  URL._bridgeToObjectiveC()(v67);
  uint64_t v68 = v50;
  v70 = v69;
  URL._bridgeToObjectiveC()(v71);
  uint64_t v73 = v72;
  v99[0] = 0;
  unsigned int v74 = [v66 copyItemAtURL:v70 toURL:v72 error:v99];

  if (!v74)
  {
    id v78 = v99[0];
    uint64_t v79 = _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v59 = v93;
    v93(v15, v46);
LABEL_18:
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v82 = (void *)static OS_os_log.crlDefault;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    uint64_t v98 = v79;
    id v84 = v82;
    swift_errorRetain();
    sub_1005057FC(&qword_101672BD0);
    uint64_t v85 = String.init<A>(describing:)();
    uint64_t v87 = v86;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v85;
    *(void *)(inited + 40) = v87;
    uint64_t v88 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v84, (uint64_t)&_mh_execute_header, v88, (uint64_t)"Unable to copy asset to a temp location: \"%@\". ", 47, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    uint64_t v49 = 1;
    swift_arrayDestroy();

    swift_errorRelease();
    v59(v95, v46);
    sub_100FA7A14(v92, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    goto LABEL_21;
  }
  id v75 = v99[0];
  v76 = v93;
  v93(v15, v46);
  v76(v68, v46);
  sub_100FA7A14(v92, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  uint64_t v77 = v96;
  v91(v96, v51, v46);
  uint64_t v49 = 0;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v77, v49, 1, v46);
}

uint64_t sub_100FA1200@<X0>(char *a1@<X0>, int a2@<W1>, char *a3@<X8>)
{
  LODWORD(v93) = a2;
  uint64_t v94 = a1;
  uint64_t v96 = a3;
  uint64_t v4 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v97 - 8);
  __chkstk_darwin(v97, v9);
  objc_super v11 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  id v15 = (char *)&v90 - v14;
  __chkstk_darwin(v16, v17);
  uint64_t v95 = (char *)&v90 - v18;
  uint64_t v19 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v22 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v23 - 8, v24);
  id v26 = (char *)&v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v90 - v29;
  swift_beginAccess();
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_10167D2A0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_10077F98C((uint64_t)v22, (uint64_t)v26);
  sub_100FA7A14((uint64_t)v22, type metadata accessor for CRLUSDZAssetDataStruct);
  uint64_t v31 = (uint64_t)v26;
  uint64_t v32 = (uint64_t)v30;
  sub_1008A7A50(v31, (uint64_t)v30);
  id v33 = *(char **)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  uint64_t v34 = *(void *)&v33[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  unint64_t v35 = *(os_unfair_lock_s **)(v34 + 16);
  BOOL v36 = v33;
  os_unfair_lock_lock(v35);
  uint64_t v37 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  double v38 = *(void **)&v36[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v38)
  {
    id v39 = *(id *)&v36[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v40 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    double v41 = v36;
    id v42 = sub_100EAFDE4((uint64_t)v41);

    id v43 = *(void **)&v36[v37];
    *(void *)&v36[v37] = v42;
    id v39 = v42;

    double v38 = 0;
  }
  uint64_t v44 = *(os_unfair_lock_s **)(v34 + 16);
  id v45 = v38;
  os_unfair_lock_unlock(v44);
  sub_100EA7CA0(v32, 0, 3, 0, 0, v7);

  uint64_t v46 = v97;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v97) == 1)
  {
    sub_100FA7A14(v32, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_1005CCBB8((uint64_t)v7);
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v47 = (id)static OS_os_log.crlDefault;
    uint64_t v48 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v47, (uint64_t)&_mh_execute_header, v48, (uint64_t)"Unable to make cache a preview item from backing asset because the asset is missing", 83, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t v49 = 1;
LABEL_21:
    uint64_t v77 = v96;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v77, v49, 1, v46);
  }
  uint64_t v92 = v32;
  uint64_t v50 = v95;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v95, v7, v46);
  uint64_t v51 = v94;
  URL.deletingLastPathComponent()();
  uint64_t v91 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v91(v11, v15, v46);
  uint64_t v52 = &selRef_crlaxPerformCleanupTasksPriorToRemovalFromCanvas;
  if (v93)
  {
    uint64_t v53 = self;
    id v54 = [v53 defaultManager];
    URL._bridgeToObjectiveC()(v55);
    uint64_t v57 = v56;
    unsigned __int8 v58 = [v54 crl_directoryExistsAt:v56];

    uint64_t v59 = *(void (**)(char *, uint64_t))(v8 + 8);
    v59(v11, v46);
    if (v58)
    {
      v93 = v59;
      uint64_t v46 = v97;
      uint64_t v51 = v94;
      uint64_t v50 = v95;
      uint64_t v52 = &selRef_crlaxPerformCleanupTasksPriorToRemovalFromCanvas;
    }
    else
    {
      id v60 = [v53 defaultManager];
      URL._bridgeToObjectiveC()(v61);
      uint64_t v63 = v62;
      v99[0] = 0;
      unsigned __int8 v64 = [v60 createDirectoryAtURL:v62 withIntermediateDirectories:0 attributes:0 error:v99];

      if ((v64 & 1) == 0)
      {
        id v80 = v99[0];
        uint64_t v79 = _convertNSErrorToError(_:)();

        swift_willThrow();
        uint64_t v81 = v97;
        v59(v15, v97);
        uint64_t v46 = v81;
        goto LABEL_18;
      }
      v93 = v59;
      id v65 = v99[0];
      uint64_t v46 = v97;
      uint64_t v51 = v94;
      uint64_t v50 = v95;
      uint64_t v52 = &selRef_crlaxPerformCleanupTasksPriorToRemovalFromCanvas;
    }
  }
  else
  {
    v93 = *(void (**)(char *, uint64_t))(v8 + 8);
    v93(v11, v46);
  }
  id v66 = [self v52[369]];
  URL._bridgeToObjectiveC()(v67);
  uint64_t v68 = v50;
  v70 = v69;
  URL._bridgeToObjectiveC()(v71);
  uint64_t v73 = v72;
  v99[0] = 0;
  unsigned int v74 = [v66 copyItemAtURL:v70 toURL:v72 error:v99];

  if (!v74)
  {
    id v78 = v99[0];
    uint64_t v79 = _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v59 = v93;
    v93(v15, v46);
LABEL_18:
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v82 = (void *)static OS_os_log.crlDefault;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    uint64_t v98 = v79;
    id v84 = v82;
    swift_errorRetain();
    sub_1005057FC(&qword_101672BD0);
    uint64_t v85 = String.init<A>(describing:)();
    uint64_t v87 = v86;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v85;
    *(void *)(inited + 40) = v87;
    uint64_t v88 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v84, (uint64_t)&_mh_execute_header, v88, (uint64_t)"Unable to copy asset to a temp location: \"%@\". ", 47, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    uint64_t v49 = 1;
    swift_arrayDestroy();

    swift_errorRelease();
    v59(v95, v46);
    sub_100FA7A14(v92, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    goto LABEL_21;
  }
  id v75 = v99[0];
  v76 = v93;
  v93(v15, v46);
  v76(v68, v46);
  sub_100FA7A14(v92, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  uint64_t v77 = v96;
  v91(v96, v51, v46);
  uint64_t v49 = 0;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v77, v49, 1, v46);
}

uint64_t sub_100FA1B10@<X0>(char *a1@<X0>, int a2@<W1>, char *a3@<X8>)
{
  LODWORD(v93) = a2;
  uint64_t v94 = a1;
  uint64_t v96 = a3;
  uint64_t v4 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v97 - 8);
  __chkstk_darwin(v97, v9);
  objc_super v11 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  id v15 = (char *)&v90 - v14;
  __chkstk_darwin(v16, v17);
  uint64_t v95 = (char *)&v90 - v18;
  uint64_t v19 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v22 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v23 - 8, v24);
  id v26 = (char *)&v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v90 - v29;
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_1016A4070);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_10077F98C((uint64_t)v22, (uint64_t)v26);
  sub_100FA7A14((uint64_t)v22, type metadata accessor for CRLMovieItemAssetData);
  uint64_t v31 = (uint64_t)v26;
  uint64_t v32 = (uint64_t)v30;
  sub_1008A7A50(v31, (uint64_t)v30);
  id v33 = *(char **)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  uint64_t v34 = *(void *)&v33[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  unint64_t v35 = *(os_unfair_lock_s **)(v34 + 16);
  BOOL v36 = v33;
  os_unfair_lock_lock(v35);
  uint64_t v37 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  double v38 = *(void **)&v36[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v38)
  {
    id v39 = *(id *)&v36[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v40 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    double v41 = v36;
    id v42 = sub_100EAFDE4((uint64_t)v41);

    id v43 = *(void **)&v36[v37];
    *(void *)&v36[v37] = v42;
    id v39 = v42;

    double v38 = 0;
  }
  uint64_t v44 = *(os_unfair_lock_s **)(v34 + 16);
  id v45 = v38;
  os_unfair_lock_unlock(v44);
  sub_100EA7CA0(v32, 0, 3, 0, 0, v7);

  uint64_t v46 = v97;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v97) == 1)
  {
    sub_100FA7A14(v32, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_1005CCBB8((uint64_t)v7);
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v47 = (id)static OS_os_log.crlDefault;
    uint64_t v48 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v47, (uint64_t)&_mh_execute_header, v48, (uint64_t)"Unable to make cache a preview item from backing asset because the asset is missing", 83, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t v49 = 1;
LABEL_21:
    uint64_t v77 = v96;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v77, v49, 1, v46);
  }
  uint64_t v92 = v32;
  uint64_t v50 = v95;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v95, v7, v46);
  uint64_t v51 = v94;
  URL.deletingLastPathComponent()();
  uint64_t v91 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v91(v11, v15, v46);
  uint64_t v52 = &selRef_crlaxPerformCleanupTasksPriorToRemovalFromCanvas;
  if (v93)
  {
    uint64_t v53 = self;
    id v54 = [v53 defaultManager];
    URL._bridgeToObjectiveC()(v55);
    uint64_t v57 = v56;
    unsigned __int8 v58 = [v54 crl_directoryExistsAt:v56];

    uint64_t v59 = *(void (**)(char *, uint64_t))(v8 + 8);
    v59(v11, v46);
    if (v58)
    {
      v93 = v59;
      uint64_t v46 = v97;
      uint64_t v51 = v94;
      uint64_t v50 = v95;
      uint64_t v52 = &selRef_crlaxPerformCleanupTasksPriorToRemovalFromCanvas;
    }
    else
    {
      id v60 = [v53 defaultManager];
      URL._bridgeToObjectiveC()(v61);
      uint64_t v63 = v62;
      v99[0] = 0;
      unsigned __int8 v64 = [v60 createDirectoryAtURL:v62 withIntermediateDirectories:0 attributes:0 error:v99];

      if ((v64 & 1) == 0)
      {
        id v80 = v99[0];
        uint64_t v79 = _convertNSErrorToError(_:)();

        swift_willThrow();
        uint64_t v81 = v97;
        v59(v15, v97);
        uint64_t v46 = v81;
        goto LABEL_18;
      }
      v93 = v59;
      id v65 = v99[0];
      uint64_t v46 = v97;
      uint64_t v51 = v94;
      uint64_t v50 = v95;
      uint64_t v52 = &selRef_crlaxPerformCleanupTasksPriorToRemovalFromCanvas;
    }
  }
  else
  {
    v93 = *(void (**)(char *, uint64_t))(v8 + 8);
    v93(v11, v46);
  }
  id v66 = [self v52[369]];
  URL._bridgeToObjectiveC()(v67);
  uint64_t v68 = v50;
  v70 = v69;
  URL._bridgeToObjectiveC()(v71);
  uint64_t v73 = v72;
  v99[0] = 0;
  unsigned int v74 = [v66 copyItemAtURL:v70 toURL:v72 error:v99];

  if (!v74)
  {
    id v78 = v99[0];
    uint64_t v79 = _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v59 = v93;
    v93(v15, v46);
LABEL_18:
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v82 = (void *)static OS_os_log.crlDefault;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    uint64_t v98 = v79;
    id v84 = v82;
    swift_errorRetain();
    sub_1005057FC(&qword_101672BD0);
    uint64_t v85 = String.init<A>(describing:)();
    uint64_t v87 = v86;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v85;
    *(void *)(inited + 40) = v87;
    uint64_t v88 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v84, (uint64_t)&_mh_execute_header, v88, (uint64_t)"Unable to copy asset to a temp location: \"%@\". ", 47, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    uint64_t v49 = 1;
    swift_arrayDestroy();

    swift_errorRelease();
    v59(v95, v46);
    sub_100FA7A14(v92, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    goto LABEL_21;
  }
  id v75 = v99[0];
  v76 = v93;
  v93(v15, v46);
  v76(v68, v46);
  sub_100FA7A14(v92, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  uint64_t v77 = v96;
  v91(v96, v51, v46);
  uint64_t v49 = 0;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v77, v49, 1, v46);
}

uint64_t sub_100FA2420@<X0>(char *a1@<X0>, int a2@<W1>, char *a3@<X8>)
{
  LODWORD(v93) = a2;
  uint64_t v94 = a1;
  uint64_t v96 = a3;
  uint64_t v4 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v97 - 8);
  __chkstk_darwin(v97, v9);
  objc_super v11 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  id v15 = (char *)&v90 - v14;
  __chkstk_darwin(v16, v17);
  uint64_t v95 = (char *)&v90 - v18;
  uint64_t v19 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v22 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v23 - 8, v24);
  id v26 = (char *)&v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v90 - v29;
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_10167F4B0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_10077F98C((uint64_t)v22, (uint64_t)v26);
  sub_100FA7A14((uint64_t)v22, type metadata accessor for CRLImageItemAssetData);
  uint64_t v31 = (uint64_t)v26;
  uint64_t v32 = (uint64_t)v30;
  sub_1008A7A50(v31, (uint64_t)v30);
  id v33 = *(char **)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  uint64_t v34 = *(void *)&v33[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  unint64_t v35 = *(os_unfair_lock_s **)(v34 + 16);
  BOOL v36 = v33;
  os_unfair_lock_lock(v35);
  uint64_t v37 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  double v38 = *(void **)&v36[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v38)
  {
    id v39 = *(id *)&v36[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v40 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    double v41 = v36;
    id v42 = sub_100EAFDE4((uint64_t)v41);

    id v43 = *(void **)&v36[v37];
    *(void *)&v36[v37] = v42;
    id v39 = v42;

    double v38 = 0;
  }
  uint64_t v44 = *(os_unfair_lock_s **)(v34 + 16);
  id v45 = v38;
  os_unfair_lock_unlock(v44);
  sub_100EA7CA0(v32, 0, 3, 0, 0, v7);

  uint64_t v46 = v97;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v97) == 1)
  {
    sub_100FA7A14(v32, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_1005CCBB8((uint64_t)v7);
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v47 = (id)static OS_os_log.crlDefault;
    uint64_t v48 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v47, (uint64_t)&_mh_execute_header, v48, (uint64_t)"Unable to make cache a preview item from backing asset because the asset is missing", 83, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t v49 = 1;
LABEL_21:
    uint64_t v77 = v96;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v77, v49, 1, v46);
  }
  uint64_t v92 = v32;
  uint64_t v50 = v95;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v95, v7, v46);
  uint64_t v51 = v94;
  URL.deletingLastPathComponent()();
  uint64_t v91 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v91(v11, v15, v46);
  uint64_t v52 = &selRef_crlaxPerformCleanupTasksPriorToRemovalFromCanvas;
  if (v93)
  {
    uint64_t v53 = self;
    id v54 = [v53 defaultManager];
    URL._bridgeToObjectiveC()(v55);
    uint64_t v57 = v56;
    unsigned __int8 v58 = [v54 crl_directoryExistsAt:v56];

    uint64_t v59 = *(void (**)(char *, uint64_t))(v8 + 8);
    v59(v11, v46);
    if (v58)
    {
      v93 = v59;
      uint64_t v46 = v97;
      uint64_t v51 = v94;
      uint64_t v50 = v95;
      uint64_t v52 = &selRef_crlaxPerformCleanupTasksPriorToRemovalFromCanvas;
    }
    else
    {
      id v60 = [v53 defaultManager];
      URL._bridgeToObjectiveC()(v61);
      uint64_t v63 = v62;
      v99[0] = 0;
      unsigned __int8 v64 = [v60 createDirectoryAtURL:v62 withIntermediateDirectories:0 attributes:0 error:v99];

      if ((v64 & 1) == 0)
      {
        id v80 = v99[0];
        uint64_t v79 = _convertNSErrorToError(_:)();

        swift_willThrow();
        uint64_t v81 = v97;
        v59(v15, v97);
        uint64_t v46 = v81;
        goto LABEL_18;
      }
      v93 = v59;
      id v65 = v99[0];
      uint64_t v46 = v97;
      uint64_t v51 = v94;
      uint64_t v50 = v95;
      uint64_t v52 = &selRef_crlaxPerformCleanupTasksPriorToRemovalFromCanvas;
    }
  }
  else
  {
    v93 = *(void (**)(char *, uint64_t))(v8 + 8);
    v93(v11, v46);
  }
  id v66 = [self v52[369]];
  URL._bridgeToObjectiveC()(v67);
  uint64_t v68 = v50;
  v70 = v69;
  URL._bridgeToObjectiveC()(v71);
  uint64_t v73 = v72;
  v99[0] = 0;
  unsigned int v74 = [v66 copyItemAtURL:v70 toURL:v72 error:v99];

  if (!v74)
  {
    id v78 = v99[0];
    uint64_t v79 = _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v59 = v93;
    v93(v15, v46);
LABEL_18:
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v82 = (void *)static OS_os_log.crlDefault;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    uint64_t v98 = v79;
    id v84 = v82;
    swift_errorRetain();
    sub_1005057FC(&qword_101672BD0);
    uint64_t v85 = String.init<A>(describing:)();
    uint64_t v87 = v86;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v85;
    *(void *)(inited + 40) = v87;
    uint64_t v88 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v84, (uint64_t)&_mh_execute_header, v88, (uint64_t)"Unable to copy asset to a temp location: \"%@\". ", 47, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    uint64_t v49 = 1;
    swift_arrayDestroy();

    swift_errorRelease();
    v59(v95, v46);
    sub_100FA7A14(v92, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    goto LABEL_21;
  }
  id v75 = v99[0];
  v76 = v93;
  v93(v15, v46);
  v76(v68, v46);
  sub_100FA7A14(v92, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  uint64_t v77 = v96;
  v91(v96, v51, v46);
  uint64_t v49 = 0;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v77, v49, 1, v46);
}

id sub_100FA2D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v79 = a2;
  uint64_t v80 = a3;
  uint64_t v4 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v8 - 8, v9);
  objc_super v11 = (char *)v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v81 = (char *)v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)v76 - v17;
  uint64_t v19 = type metadata accessor for URL();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v21);
  id v78 = (char *)v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  id v26 = (char *)v76 - v25;
  __chkstk_darwin(v27, v28);
  id v84 = (char *)v76 - v29;
  id v30 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  v87[0] = 0;
  id v31 = [v30 initWithError:v87];
  id v32 = v87[0];
  id v83 = v31;
  if (v31)
  {
    id v85 = v31;
  }
  else
  {
    id v33 = v32;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    id v85 = 0;
  }
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
  uint64_t v82 = a1;
  v34(a1, 1, 1, v19);
  uint64_t v35 = v86;
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_101685450);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_10077F98C((uint64_t)v7, (uint64_t)v11);
  sub_100FA7A14((uint64_t)v7, type metadata accessor for CRLFileItemAtomicDataStruct);
  BOOL v36 = *(char **)(v35 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  uint64_t v37 = *(void *)&v36[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  double v38 = *(os_unfair_lock_s **)(v37 + 16);
  id v39 = v36;
  os_unfair_lock_lock(v38);
  uint64_t v40 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  double v41 = *(void **)&v39[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v41)
  {
    id v42 = *(id *)&v39[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v43 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    uint64_t v44 = v39;
    id v45 = sub_100EAFDE4((uint64_t)v44);

    uint64_t v46 = *(void **)&v39[v40];
    *(void *)&v39[v40] = v45;
    id v42 = v45;

    double v41 = 0;
  }
  id v47 = *(os_unfair_lock_s **)(v37 + 16);
  id v48 = v41;
  os_unfair_lock_unlock(v47);
  sub_100EA7CA0((uint64_t)v11, 0, 3, 0, 0, v18);

  sub_100FA7A14((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_1005CCBB8((uint64_t)v18);
    return v85;
  }
  uint64_t v49 = v84;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v84, v18, v19);
  id v50 = v85;
  if (!v85)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v49, v19);
    return v50;
  }
  id v51 = v85;
  id v52 = [v51 URL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  URL.absoluteString.getter();
  uint64_t v53 = *(void (**)(char *, uint64_t))(v20 + 8);
  v53(v26, v19);
  uint64_t v54 = String.count.getter();
  swift_bridgeObjectRelease();
  if (v54 >= 1024)
  {
    v53(v49, v19);

    return v50;
  }
  v76[1] = URL.pathExtension.getter();
  v76[2] = v55;
  id v56 = [v51 URL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  URL.absoluteString.getter();
  uint64_t v77 = v53;
  v53(v26, v19);
  uint64_t v57 = String.count.getter();
  swift_bridgeObjectRelease();
  if (__OFSUB__(1024, v57)) {
    __break(1u);
  }
  if (1024 - v57 >= 255) {
    uint64_t v58 = 255;
  }
  else {
    uint64_t v58 = 1024 - v57;
  }
  NSString v59 = String._bridgeToObjectiveC()();
  id v60 = [v59 pathExtension];

  uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v63 = v62;

  swift_bridgeObjectRelease();
  uint64_t v64 = HIBYTE(v63) & 0xF;
  if ((v63 & 0x2000000000000000) == 0) {
    uint64_t v64 = v61 & 0xFFFFFFFFFFFFLL;
  }
  if (v64)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    swift_bridgeObjectRetain();
    goto LABEL_24;
  }
  NSString v65 = String._bridgeToObjectiveC()();
  NSString v66 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v67 = [v65 stringByAppendingPathExtension:v66];

  if (!v67) {
    goto LABEL_19;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();

LABEL_24:
  NSString v68 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if ((v58 & 0x8000000000000000) == 0)
  {
    id v69 = [v68 crl_filenameTruncatedToCharacterLimit:v58];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v70 = [v51 URL];
    uint64_t v71 = v78;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    uint64_t v72 = v77;
    v77(v71, v19);
    uint64_t v73 = v81;
    sub_100FA08F0(v26, 0, v81);

    v72(v26, v19);
    v72(v84, v19);
    uint64_t v74 = v82;
    sub_1005CCBB8(v82);
    sub_100602000((uint64_t)v73, v74);
    return v85;
  }
  id result = (id)_assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_100FA3568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v79 = a2;
  uint64_t v80 = a3;
  uint64_t v4 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v8 - 8, v9);
  objc_super v11 = (char *)v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v81 = (char *)v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)v76 - v17;
  uint64_t v19 = type metadata accessor for URL();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v21);
  id v78 = (char *)v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  id v26 = (char *)v76 - v25;
  __chkstk_darwin(v27, v28);
  id v84 = (char *)v76 - v29;
  id v30 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  v87[0] = 0;
  id v31 = [v30 initWithError:v87];
  id v32 = v87[0];
  id v83 = v31;
  if (v31)
  {
    id v85 = v31;
  }
  else
  {
    id v33 = v32;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    id v85 = 0;
  }
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
  uint64_t v82 = a1;
  v34(a1, 1, 1, v19);
  uint64_t v35 = v86;
  swift_beginAccess();
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_10167D2A0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_10077F98C((uint64_t)v7, (uint64_t)v11);
  sub_100FA7A14((uint64_t)v7, type metadata accessor for CRLUSDZAssetDataStruct);
  BOOL v36 = *(char **)(v35 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  uint64_t v37 = *(void *)&v36[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  double v38 = *(os_unfair_lock_s **)(v37 + 16);
  id v39 = v36;
  os_unfair_lock_lock(v38);
  uint64_t v40 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  double v41 = *(void **)&v39[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v41)
  {
    id v42 = *(id *)&v39[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v43 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    uint64_t v44 = v39;
    id v45 = sub_100EAFDE4((uint64_t)v44);

    uint64_t v46 = *(void **)&v39[v40];
    *(void *)&v39[v40] = v45;
    id v42 = v45;

    double v41 = 0;
  }
  id v47 = *(os_unfair_lock_s **)(v37 + 16);
  id v48 = v41;
  os_unfair_lock_unlock(v47);
  sub_100EA7CA0((uint64_t)v11, 0, 3, 0, 0, v18);

  sub_100FA7A14((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_1005CCBB8((uint64_t)v18);
    return v85;
  }
  uint64_t v49 = v84;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v84, v18, v19);
  id v50 = v85;
  if (!v85)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v49, v19);
    return v50;
  }
  id v51 = v85;
  id v52 = [v51 URL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  URL.absoluteString.getter();
  uint64_t v53 = *(void (**)(char *, uint64_t))(v20 + 8);
  v53(v26, v19);
  uint64_t v54 = String.count.getter();
  swift_bridgeObjectRelease();
  if (v54 >= 1024)
  {
    v53(v49, v19);

    return v50;
  }
  v76[1] = URL.pathExtension.getter();
  v76[2] = v55;
  id v56 = [v51 URL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  URL.absoluteString.getter();
  uint64_t v77 = v53;
  v53(v26, v19);
  uint64_t v57 = String.count.getter();
  swift_bridgeObjectRelease();
  if (__OFSUB__(1024, v57)) {
    __break(1u);
  }
  if (1024 - v57 >= 255) {
    uint64_t v58 = 255;
  }
  else {
    uint64_t v58 = 1024 - v57;
  }
  NSString v59 = String._bridgeToObjectiveC()();
  id v60 = [v59 pathExtension];

  uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v63 = v62;

  swift_bridgeObjectRelease();
  uint64_t v64 = HIBYTE(v63) & 0xF;
  if ((v63 & 0x2000000000000000) == 0) {
    uint64_t v64 = v61 & 0xFFFFFFFFFFFFLL;
  }
  if (v64)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    swift_bridgeObjectRetain();
    goto LABEL_24;
  }
  NSString v65 = String._bridgeToObjectiveC()();
  NSString v66 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v67 = [v65 stringByAppendingPathExtension:v66];

  if (!v67) {
    goto LABEL_19;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();

LABEL_24:
  NSString v68 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if ((v58 & 0x8000000000000000) == 0)
  {
    id v69 = [v68 crl_filenameTruncatedToCharacterLimit:v58];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v70 = [v51 URL];
    uint64_t v71 = v78;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    uint64_t v72 = v77;
    v77(v71, v19);
    uint64_t v73 = v81;
    sub_100FA1200(v26, 0, v81);

    v72(v26, v19);
    v72(v84, v19);
    uint64_t v74 = v82;
    sub_1005CCBB8(v82);
    sub_100602000((uint64_t)v73, v74);
    return v85;
  }
  id result = (id)_assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_100FA3DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v79 = a2;
  uint64_t v80 = a3;
  uint64_t v4 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v8 - 8, v9);
  objc_super v11 = (char *)v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v81 = (char *)v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)v76 - v17;
  uint64_t v19 = type metadata accessor for URL();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v21);
  id v78 = (char *)v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  id v26 = (char *)v76 - v25;
  __chkstk_darwin(v27, v28);
  id v84 = (char *)v76 - v29;
  id v30 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  v87[0] = 0;
  id v31 = [v30 initWithError:v87];
  id v32 = v87[0];
  id v83 = v31;
  if (v31)
  {
    id v85 = v31;
  }
  else
  {
    id v33 = v32;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    id v85 = 0;
  }
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
  uint64_t v82 = a1;
  v34(a1, 1, 1, v19);
  uint64_t v35 = v86;
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_1016A4070);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_10077F98C((uint64_t)v7, (uint64_t)v11);
  sub_100FA7A14((uint64_t)v7, type metadata accessor for CRLMovieItemAssetData);
  BOOL v36 = *(char **)(v35 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  uint64_t v37 = *(void *)&v36[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  double v38 = *(os_unfair_lock_s **)(v37 + 16);
  id v39 = v36;
  os_unfair_lock_lock(v38);
  uint64_t v40 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  double v41 = *(void **)&v39[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v41)
  {
    id v42 = *(id *)&v39[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v43 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    uint64_t v44 = v39;
    id v45 = sub_100EAFDE4((uint64_t)v44);

    uint64_t v46 = *(void **)&v39[v40];
    *(void *)&v39[v40] = v45;
    id v42 = v45;

    double v41 = 0;
  }
  id v47 = *(os_unfair_lock_s **)(v37 + 16);
  id v48 = v41;
  os_unfair_lock_unlock(v47);
  sub_100EA7CA0((uint64_t)v11, 0, 3, 0, 0, v18);

  sub_100FA7A14((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_1005CCBB8((uint64_t)v18);
    return v85;
  }
  uint64_t v49 = v84;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v84, v18, v19);
  id v50 = v85;
  if (!v85)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v49, v19);
    return v50;
  }
  id v51 = v85;
  id v52 = [v51 URL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  URL.absoluteString.getter();
  uint64_t v53 = *(void (**)(char *, uint64_t))(v20 + 8);
  v53(v26, v19);
  uint64_t v54 = String.count.getter();
  swift_bridgeObjectRelease();
  if (v54 >= 1024)
  {
    v53(v49, v19);

    return v50;
  }
  v76[1] = URL.pathExtension.getter();
  v76[2] = v55;
  id v56 = [v51 URL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  URL.absoluteString.getter();
  uint64_t v77 = v53;
  v53(v26, v19);
  uint64_t v57 = String.count.getter();
  swift_bridgeObjectRelease();
  if (__OFSUB__(1024, v57)) {
    __break(1u);
  }
  if (1024 - v57 >= 255) {
    uint64_t v58 = 255;
  }
  else {
    uint64_t v58 = 1024 - v57;
  }
  NSString v59 = String._bridgeToObjectiveC()();
  id v60 = [v59 pathExtension];

  uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v63 = v62;

  swift_bridgeObjectRelease();
  uint64_t v64 = HIBYTE(v63) & 0xF;
  if ((v63 & 0x2000000000000000) == 0) {
    uint64_t v64 = v61 & 0xFFFFFFFFFFFFLL;
  }
  if (v64)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    swift_bridgeObjectRetain();
    goto LABEL_24;
  }
  NSString v65 = String._bridgeToObjectiveC()();
  NSString v66 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v67 = [v65 stringByAppendingPathExtension:v66];

  if (!v67) {
    goto LABEL_19;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();

LABEL_24:
  NSString v68 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if ((v58 & 0x8000000000000000) == 0)
  {
    id v69 = [v68 crl_filenameTruncatedToCharacterLimit:v58];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v70 = [v51 URL];
    uint64_t v71 = v78;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    uint64_t v72 = v77;
    v77(v71, v19);
    uint64_t v73 = v81;
    sub_100FA1B10(v26, 0, v81);

    v72(v26, v19);
    v72(v84, v19);
    uint64_t v74 = v82;
    sub_1005CCBB8(v82);
    sub_100602000((uint64_t)v73, v74);
    return v85;
  }
  id result = (id)_assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_100FA45D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v79 = a2;
  uint64_t v80 = a3;
  uint64_t v4 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v8 - 8, v9);
  objc_super v11 = (char *)v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v81 = (char *)v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)v76 - v17;
  uint64_t v19 = type metadata accessor for URL();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v21);
  id v78 = (char *)v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  id v26 = (char *)v76 - v25;
  __chkstk_darwin(v27, v28);
  id v84 = (char *)v76 - v29;
  id v30 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  v87[0] = 0;
  id v31 = [v30 initWithError:v87];
  id v32 = v87[0];
  id v83 = v31;
  if (v31)
  {
    id v85 = v31;
  }
  else
  {
    id v33 = v32;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    id v85 = 0;
  }
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
  uint64_t v82 = a1;
  v34(a1, 1, 1, v19);
  uint64_t v35 = v86;
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_10167F4B0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_10077F98C((uint64_t)v7, (uint64_t)v11);
  sub_100FA7A14((uint64_t)v7, type metadata accessor for CRLImageItemAssetData);
  BOOL v36 = *(char **)(v35 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  uint64_t v37 = *(void *)&v36[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  double v38 = *(os_unfair_lock_s **)(v37 + 16);
  id v39 = v36;
  os_unfair_lock_lock(v38);
  uint64_t v40 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  double v41 = *(void **)&v39[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v41)
  {
    id v42 = *(id *)&v39[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v43 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    uint64_t v44 = v39;
    id v45 = sub_100EAFDE4((uint64_t)v44);

    uint64_t v46 = *(void **)&v39[v40];
    *(void *)&v39[v40] = v45;
    id v42 = v45;

    double v41 = 0;
  }
  id v47 = *(os_unfair_lock_s **)(v37 + 16);
  id v48 = v41;
  os_unfair_lock_unlock(v47);
  sub_100EA7CA0((uint64_t)v11, 0, 3, 0, 0, v18);

  sub_100FA7A14((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_1005CCBB8((uint64_t)v18);
    return v85;
  }
  uint64_t v49 = v84;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v84, v18, v19);
  id v50 = v85;
  if (!v85)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v49, v19);
    return v50;
  }
  id v51 = v85;
  id v52 = [v51 URL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  URL.absoluteString.getter();
  uint64_t v53 = *(void (**)(char *, uint64_t))(v20 + 8);
  v53(v26, v19);
  uint64_t v54 = String.count.getter();
  swift_bridgeObjectRelease();
  if (v54 >= 1024)
  {
    v53(v49, v19);

    return v50;
  }
  v76[1] = URL.pathExtension.getter();
  v76[2] = v55;
  id v56 = [v51 URL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  URL.absoluteString.getter();
  uint64_t v77 = v53;
  v53(v26, v19);
  uint64_t v57 = String.count.getter();
  swift_bridgeObjectRelease();
  if (__OFSUB__(1024, v57)) {
    __break(1u);
  }
  if (1024 - v57 >= 255) {
    uint64_t v58 = 255;
  }
  else {
    uint64_t v58 = 1024 - v57;
  }
  NSString v59 = String._bridgeToObjectiveC()();
  id v60 = [v59 pathExtension];

  uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v63 = v62;

  swift_bridgeObjectRelease();
  uint64_t v64 = HIBYTE(v63) & 0xF;
  if ((v63 & 0x2000000000000000) == 0) {
    uint64_t v64 = v61 & 0xFFFFFFFFFFFFLL;
  }
  if (v64)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    swift_bridgeObjectRetain();
    goto LABEL_24;
  }
  NSString v65 = String._bridgeToObjectiveC()();
  NSString v66 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v67 = [v65 stringByAppendingPathExtension:v66];

  if (!v67) {
    goto LABEL_19;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();

LABEL_24:
  NSString v68 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if ((v58 & 0x8000000000000000) == 0)
  {
    id v69 = [v68 crl_filenameTruncatedToCharacterLimit:v58];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v70 = [v51 URL];
    uint64_t v71 = v78;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    uint64_t v72 = v77;
    v77(v71, v19);
    uint64_t v73 = v81;
    sub_100FA2420(v26, 0, v81);

    v72(v26, v19);
    v72(v84, v19);
    uint64_t v74 = v82;
    sub_1005CCBB8(v82);
    sub_100602000((uint64_t)v73, v74);
    return v85;
  }
  id result = (id)_assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_100FA4E10()
{
}

void sub_100FA4E3C()
{
}

void sub_100FA4E68(uint64_t (*a1)(uint64_t), void (*a2)(void))
{
  uint64_t v4 = v2;
  id v5 = [v2 info];
  type metadata accessor for CRLBoardItem(0);
  uint64_t v6 = swift_isaMask & *(void *)swift_dynamicCastClassUnconditional();
  char v7 = (*(uint64_t (**)(void))(v6 + 472))();
  uint64_t v8 = swift_unknownObjectRelease();
  if (v7)
  {
    id v13 = (id)a1(v8);
    id v9 = [v4 interactiveCanvasController];
    if (v9)
    {
      uint64_t v10 = v9;
      id v13 = v13;
      objc_super v11 = (void *)_convertErrorToNSError(_:)();

      [v10 presentError:v11 completionHandler:0];
    }
  }
  else
  {
    a2();
  }
}

void sub_100FA4FE0()
{
}

void sub_100FA4FF8(void (*a1)(void))
{
  objc_super v2 = v1;
  id v3 = [v1 info];
  type metadata accessor for CRLBoardItem(0);
  uint64_t v4 = swift_isaMask & *(void *)swift_dynamicCastClassUnconditional();
  char v5 = (*(uint64_t (**)(void))(v4 + 472))();
  swift_unknownObjectRelease();
  if (v5)
  {
    id v10 = (id)sub_100FA7798();
    id v6 = [v2 interactiveCanvasController];
    if (v6)
    {
      char v7 = v6;
      id v10 = v10;
      uint64_t v8 = (void *)_convertErrorToNSError(_:)();

      [v7 presentError:v8 completionHandler:0];
    }
  }
  else
  {
    a1();
  }
}

void sub_100FA5168()
{
}

void sub_100FA5194()
{
}

void sub_100FA51C0()
{
  objc_allocWithZone((Class)type metadata accessor for CRLAudioRepPlaceHolder());
  id v1 = v0;
  id v2 = sub_10077F5D4(v1);
  id v3 = objc_allocWithZone((Class)type metadata accessor for CRLiOSBoardItemQuickLookPreviewViewController());
  uint64_t v21 = sub_100FA6DEC((uint64_t)v2, v3);
  id v4 = [v1 interactiveCanvasController];
  if (!v4) {
    goto LABEL_9;
  }
  char v5 = v4;
  id v6 = [v4 layerHost];

  if (!v6) {
    goto LABEL_9;
  }
  if (([v6 respondsToSelector:"asiOSCVC"] & 1) == 0)
  {
    swift_unknownObjectRelease();
LABEL_9:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"showQLPreview()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2, 84, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showQLPreview()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2, 84);
    uint64_t v20 = v21;
    goto LABEL_10;
  }
  id v7 = [v6 asiOSCVC];
  swift_unknownObjectRelease();
  id v8 = [v7 presentedViewController];
  if (v8)
  {
    id v9 = v8;
    [v8 dismissViewControllerAnimated:1 completion:0];
  }
  id v10 = [v7 view];
  if (!v10)
  {
    __break(1u);
    return;
  }
  objc_super v11 = v10;
  [v1 layerFrameInScaledCanvas];
  id v16 = [objc_allocWithZone((Class)UIView) initWithFrame:v12, v13, v14, v15];
  [v11 addSubview:v16];
  uint64_t v17 = *(void **)&v21[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView];
  *(void *)&v21[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView] = v16;

  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v19 = (void (**)())&v21[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_onDismiss];
  *uint64_t v19 = sub_100FA79F8;
  v19[1] = (void (*)())v18;
  swift_release();
  [v7 presentViewController:v21 animated:1 completion:0];

  uint64_t v20 = (char *)v7;
LABEL_10:
}

void sub_100FA54C0()
{
  objc_allocWithZone((Class)type metadata accessor for CRLImageRepPlaceHolder());
  id v1 = v0;
  id v2 = sub_10078A4F0(v1);
  id v3 = objc_allocWithZone((Class)type metadata accessor for CRLiOSBoardItemQuickLookPreviewViewController());
  uint64_t v21 = sub_100FA6DEC((uint64_t)v2, v3);
  id v4 = [v1 interactiveCanvasController];
  if (!v4) {
    goto LABEL_9;
  }
  char v5 = v4;
  id v6 = [v4 layerHost];

  if (!v6) {
    goto LABEL_9;
  }
  if (([v6 respondsToSelector:"asiOSCVC"] & 1) == 0)
  {
    swift_unknownObjectRelease();
LABEL_9:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"showQLPreview()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2, 84, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showQLPreview()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2, 84);
    uint64_t v20 = v21;
    goto LABEL_10;
  }
  id v7 = [v6 asiOSCVC];
  swift_unknownObjectRelease();
  id v8 = [v7 presentedViewController];
  if (v8)
  {
    id v9 = v8;
    [v8 dismissViewControllerAnimated:1 completion:0];
  }
  id v10 = [v7 view];
  if (!v10)
  {
    __break(1u);
    return;
  }
  objc_super v11 = v10;
  [v1 layerFrameInScaledCanvas];
  id v16 = [objc_allocWithZone((Class)UIView) initWithFrame:v12, v13, v14, v15];
  [v11 addSubview:v16];
  uint64_t v17 = *(void **)&v21[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView];
  *(void *)&v21[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView] = v16;

  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v19 = (void (**)())&v21[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_onDismiss];
  *uint64_t v19 = sub_100FA79F8;
  v19[1] = (void (*)())v18;
  swift_release();
  [v7 presentViewController:v21 animated:1 completion:0];

  uint64_t v20 = (char *)v7;
LABEL_10:
}

void sub_100FA57C0()
{
  objc_allocWithZone((Class)type metadata accessor for CRLFileRepPlaceHolder());
  id v1 = v0;
  sub_100B4374C(v1);
  uint64_t v3 = v2;
  id v4 = objc_allocWithZone((Class)type metadata accessor for CRLiOSBoardItemQuickLookPreviewViewController());
  uint64_t v22 = sub_100FA6DEC(v3, v4);
  id v5 = [v1 interactiveCanvasController];
  if (!v5) {
    goto LABEL_9;
  }
  id v6 = v5;
  id v7 = [v5 layerHost];

  if (!v7) {
    goto LABEL_9;
  }
  if (([v7 respondsToSelector:"asiOSCVC"] & 1) == 0)
  {
    swift_unknownObjectRelease();
LABEL_9:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"showQLPreview()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2, 84, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showQLPreview()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2, 84);
    uint64_t v21 = v22;
    goto LABEL_10;
  }
  id v8 = [v7 asiOSCVC];
  swift_unknownObjectRelease();
  id v9 = [v8 presentedViewController];
  if (v9)
  {
    id v10 = v9;
    [v9 dismissViewControllerAnimated:1 completion:0];
  }
  id v11 = [v8 view];
  if (!v11)
  {
    __break(1u);
    return;
  }
  double v12 = v11;
  [v1 layerFrameInScaledCanvas];
  id v17 = [objc_allocWithZone((Class)UIView) initWithFrame:v13, v14, v15, v16];
  [v12 addSubview:v17];
  uint64_t v18 = *(void **)&v22[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView];
  *(void *)&v22[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView] = v17;

  uint64_t v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v20 = (void (**)())&v22[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_onDismiss];
  *uint64_t v20 = sub_100FA79F8;
  v20[1] = (void (*)())v19;
  swift_release();
  [v8 presentViewController:v22 animated:1 completion:0];

  uint64_t v21 = (char *)v8;
LABEL_10:
}

void sub_100FA5AC0()
{
  id v1 = objc_allocWithZone((Class)type metadata accessor for CRLiOSBoardItemQuickLookPreviewViewController());
  id v2 = v0;
  uint64_t v20 = sub_100FA6DEC((uint64_t)v2, v1);
  id v3 = [v2 interactiveCanvasController];
  if (!v3) {
    goto LABEL_9;
  }
  id v4 = v3;
  id v5 = [v3 layerHost];

  if (!v5) {
    goto LABEL_9;
  }
  if (([v5 respondsToSelector:"asiOSCVC"] & 1) == 0)
  {
    swift_unknownObjectRelease();
LABEL_9:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"showQLPreview()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2, 84, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showQLPreview()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2, 84);
    uint64_t v19 = v20;
    goto LABEL_10;
  }
  id v6 = [v5 asiOSCVC];
  swift_unknownObjectRelease();
  id v7 = [v6 presentedViewController];
  if (v7)
  {
    id v8 = v7;
    [v7 dismissViewControllerAnimated:1 completion:0];
  }
  id v9 = [v6 view];
  if (!v9)
  {
    __break(1u);
    return;
  }
  id v10 = v9;
  [v2 layerFrameInScaledCanvas];
  id v15 = [objc_allocWithZone((Class)UIView) initWithFrame:v11, v12, v13, v14];
  [v10 addSubview:v15];
  double v16 = *(void **)&v20[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView];
  *(void *)&v20[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView] = v15;

  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v18 = (void (**)())&v20[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_onDismiss];
  void *v18 = sub_100FA79F8;
  v18[1] = (void (*)())v17;
  swift_release();
  [v6 presentViewController:v20 animated:1 completion:0];

  uint64_t v19 = (char *)v6;
LABEL_10:
}

void sub_100FA5DA4()
{
  objc_allocWithZone((Class)type metadata accessor for CRLMovieRepPlaceholder());
  id v1 = v0;
  id v2 = sub_100E2D9B4(v1);
  id v3 = objc_allocWithZone((Class)type metadata accessor for CRLiOSBoardItemQuickLookPreviewViewController());
  uint64_t v21 = sub_100FA6DEC((uint64_t)v2, v3);
  id v4 = [v1 interactiveCanvasController];
  if (!v4) {
    goto LABEL_9;
  }
  id v5 = v4;
  id v6 = [v4 layerHost];

  if (!v6) {
    goto LABEL_9;
  }
  if (([v6 respondsToSelector:"asiOSCVC"] & 1) == 0)
  {
    swift_unknownObjectRelease();
LABEL_9:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"showQLPreview()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2, 84, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showQLPreview()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2, 84);
    uint64_t v20 = v21;
    goto LABEL_10;
  }
  id v7 = [v6 asiOSCVC];
  swift_unknownObjectRelease();
  id v8 = [v7 presentedViewController];
  if (v8)
  {
    id v9 = v8;
    [v8 dismissViewControllerAnimated:1 completion:0];
  }
  id v10 = [v7 view];
  if (!v10)
  {
    __break(1u);
    return;
  }
  double v11 = v10;
  [v1 layerFrameInScaledCanvas];
  id v16 = [objc_allocWithZone((Class)UIView) initWithFrame:v12, v13, v14, v15];
  [v11 addSubview:v16];
  uint64_t v17 = *(void **)&v21[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView];
  *(void *)&v21[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView] = v16;

  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v19 = (void (**)())&v21[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_onDismiss];
  *uint64_t v19 = sub_100FA79F8;
  v19[1] = (void (*)())v18;
  swift_release();
  [v7 presentViewController:v21 animated:1 completion:0];

  uint64_t v20 = (char *)v7;
LABEL_10:
}

void sub_100FA60A4()
{
  objc_allocWithZone((Class)type metadata accessor for CRLUSDZRepPlaceholder());
  id v1 = v0;
  id v2 = sub_100FA6A10(v1);
  id v3 = objc_allocWithZone((Class)type metadata accessor for CRLiOSBoardItemQuickLookPreviewViewController());
  uint64_t v21 = sub_100FA6DEC((uint64_t)v2, v3);
  id v4 = [v1 interactiveCanvasController];
  if (!v4) {
    goto LABEL_9;
  }
  id v5 = v4;
  id v6 = [v4 layerHost];

  if (!v6) {
    goto LABEL_9;
  }
  if (([v6 respondsToSelector:"asiOSCVC"] & 1) == 0)
  {
    swift_unknownObjectRelease();
LABEL_9:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"showQLPreview()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2, 84, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showQLPreview()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLPreviewableCanvasRep.swift", 116, 2, 84);
    uint64_t v20 = v21;
    goto LABEL_10;
  }
  id v7 = [v6 asiOSCVC];
  swift_unknownObjectRelease();
  id v8 = [v7 presentedViewController];
  if (v8)
  {
    id v9 = v8;
    [v8 dismissViewControllerAnimated:1 completion:0];
  }
  id v10 = [v7 view];
  if (!v10)
  {
    __break(1u);
    return;
  }
  double v11 = v10;
  [v1 layerFrameInScaledCanvas];
  id v16 = [objc_allocWithZone((Class)UIView) initWithFrame:v12, v13, v14, v15];
  [v11 addSubview:v16];
  uint64_t v17 = *(void **)&v21[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView];
  *(void *)&v21[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView] = v16;

  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v19 = (void (**)())&v21[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_onDismiss];
  *uint64_t v19 = sub_100FA79F8;
  v19[1] = (void (*)())v18;
  swift_release();
  [v7 presentViewController:v21 animated:1 completion:0];

  uint64_t v20 = (char *)v7;
LABEL_10:
}

void sub_100FA63A4()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = Strong;
    id v2 = [Strong interactiveCanvasController];

    [v2 didExitPreviewMode];
  }
}

uint64_t sub_100FA64C4()
{
  uint64_t v1 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v1 - 8, v2);
  id v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLAssetData();
  uint64_t v6 = v5 - 8;
  *(void *)&double v8 = __chkstk_darwin(v5, v7).n128_u64[0];
  id v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [v0 info:v8];
  type metadata accessor for CRLUSDZItem();
  swift_dynamicCastClassUnconditional();
  swift_beginAccess();
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_10167D2A0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_10077F98C((uint64_t)v4, (uint64_t)v10);
  sub_100FA7A14((uint64_t)v4, type metadata accessor for CRLUSDZAssetDataStruct);
  swift_unknownObjectRelease();
  uint64_t v12 = *(void *)&v10[*(int *)(v6 + 28)];
  swift_bridgeObjectRetain();
  sub_100FA7A14((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  return v12;
}

id sub_100FA6A10(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform21CRLUSDZRepPlaceholder_previewItemURL];
  uint64_t v8 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = (uint64_t *)&v1[OBJC_IVAR____TtC8Freeform21CRLUSDZRepPlaceholder_previewItemTitle];
  *uint64_t v9 = 0;
  v9[1] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform21CRLUSDZRepPlaceholder_usdzRep] = a1;
  id v10 = v1;
  id v11 = a1;
  *uint64_t v9 = sub_100FA64C4();
  v9[1] = v12;
  swift_bridgeObjectRelease();
  id v13 = [v11 info];
  type metadata accessor for CRLUSDZItem();
  swift_dynamicCastClassUnconditional();
  if (v9[1])
  {
    uint64_t v14 = *v9;
    uint64_t v15 = v9[1];
  }
  else
  {
    uint64_t v15 = 0xE400000000000000;
    uint64_t v14 = 2053403509;
  }
  swift_bridgeObjectRetain();
  id v16 = sub_100FA3568((uint64_t)v6, v14, v15);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1005C6D24((uint64_t)v6, v7);
  swift_endAccess();

  uint64_t v17 = (objc_class *)type metadata accessor for CRLUSDZRepPlaceholder();
  v21.receiver = v10;
  v21.super_class = v17;
  id v18 = [super init];
  if (v16)
  {
    [v16 setAssociatedLifetimeObject:v11];
  }
  sub_1005CCBB8((uint64_t)v6);
  return v18;
}

id sub_100FA6C58()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUSDZRepPlaceholder();
  [super dealloc];
}

uint64_t sub_100FA6CF0()
{
  return type metadata accessor for CRLUSDZRepPlaceholder();
}

uint64_t type metadata accessor for CRLUSDZRepPlaceholder()
{
  uint64_t result = qword_1016A4058;
  if (!qword_1016A4058) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100FA6D44()
{
  sub_100757DF8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

char *sub_100FA6DEC(uint64_t a1, unsigned char *a2)
{
  *(void *)&a2[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewItem] = 0;
  a2[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_shouldSaveMarkedUpItem] = 0;
  *(void *)&a2[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_itemProvider] = 0;
  *(void *)&a2[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView] = 0;
  uint64_t v3 = (Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall **)(CKRecordID, Swift::String))&a2[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_onDismiss];
  *uint64_t v3 = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
  v3[1] = 0;
  v6.receiver = a2;
  v6.super_class = (Class)type metadata accessor for CRLiOSBoardItemQuickLookPreviewViewController();
  uint64_t v4 = (char *)[super initWithNibName:0 bundle:0];
  [v4 setDelegate:v4];
  [v4 setDataSource:v4];
  [v4 setModalPresentationStyle:0];

  *(void *)&v4[OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewItem] = a1;
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_100FA6EF8()
{
  unint64_t v0 = self;
  NSString v1 = String._bridgeToObjectiveC()();
  objc_super v2 = self;
  id v3 = [v2 mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 localizedStringForKey:v4 value:v5 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [v2 mainBundle];
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v8 localizedStringForKey:v9 value:v10 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [v0 crl_errorWithDomain:v1 code:53277 alertTitle:v7 alertMessage:v12];

  uint64_t v14 = _convertErrorToNSError(_:)();
  return v14;
}

uint64_t sub_100FA7120()
{
  unint64_t v0 = self;
  NSString v1 = String._bridgeToObjectiveC()();
  objc_super v2 = self;
  id v3 = [v2 mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 localizedStringForKey:v4 value:v5 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [v2 mainBundle];
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v8 localizedStringForKey:v9 value:v10 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [v0 crl_errorWithDomain:v1 code:53277 alertTitle:v7 alertMessage:v12];

  uint64_t v14 = _convertErrorToNSError(_:)();
  return v14;
}

uint64_t sub_100FA7348()
{
  unint64_t v0 = self;
  NSString v1 = String._bridgeToObjectiveC()();
  objc_super v2 = self;
  id v3 = [v2 mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 localizedStringForKey:v4 value:v5 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [v2 mainBundle];
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v8 localizedStringForKey:v9 value:v10 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [v0 crl_errorWithDomain:v1 code:53277 alertTitle:v7 alertMessage:v12];

  uint64_t v14 = _convertErrorToNSError(_:)();
  return v14;
}

uint64_t sub_100FA7570()
{
  unint64_t v0 = self;
  NSString v1 = String._bridgeToObjectiveC()();
  objc_super v2 = self;
  id v3 = [v2 mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 localizedStringForKey:v4 value:v5 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [v2 mainBundle];
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v8 localizedStringForKey:v9 value:v10 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [v0 crl_errorWithDomain:v1 code:53277 alertTitle:v7 alertMessage:v12];

  uint64_t v14 = _convertErrorToNSError(_:)();
  return v14;
}

uint64_t sub_100FA7798()
{
  unint64_t v0 = self;
  NSString v1 = String._bridgeToObjectiveC()();
  objc_super v2 = self;
  id v3 = [v2 mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 localizedStringForKey:v4 value:v5 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [v2 mainBundle];
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v8 localizedStringForKey:v9 value:v10 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [v0 crl_errorWithDomain:v1 code:53277 alertTitle:v7 alertMessage:v12];

  uint64_t v14 = _convertErrorToNSError(_:)();
  return v14;
}

uint64_t sub_100FA79C0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100FA79F8()
{
}

uint64_t sub_100FA7A14(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_100FA7A88(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupSessionMessenger.DeliveryMode();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(_WORD *)((char *)a1 + v8) = *(_WORD *)((char *)a2 + v8);
    uint64_t v9 = a3[7];
    NSString v10 = (char *)a1 + v9;
    id v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for DispatchTimeInterval();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_100FA7BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GroupSessionMessenger.DeliveryMode();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  uint64_t v6 = type metadata accessor for DispatchTimeInterval();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_100FA7C4C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for GroupSessionMessenger.DeliveryMode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for DispatchTimeInterval();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t sub_100FA7D18(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for GroupSessionMessenger.DeliveryMode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_WORD *)(a1 + a3[6]) = *(_WORD *)(a2 + a3[6]);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for DispatchTimeInterval();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_100FA7DE8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for GroupSessionMessenger.DeliveryMode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for DispatchTimeInterval();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t sub_100FA7EB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for GroupSessionMessenger.DeliveryMode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for DispatchTimeInterval();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_100FA7F80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100FA7F94);
}

uint64_t sub_100FA7F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for GroupSessionMessenger.DeliveryMode();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for DispatchTimeInterval();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 28);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_100FA808C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100FA80A0);
}

uint64_t sub_100FA80A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for GroupSessionMessenger.DeliveryMode();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for DispatchTimeInterval();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 28);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for CRLRealTimeMessengerConfiguration()
{
  uint64_t result = qword_1016A40D0;
  if (!qword_1016A40D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100FA81F0()
{
  uint64_t result = type metadata accessor for GroupSessionMessenger.DeliveryMode();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DispatchTimeInterval();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100FA82D4()
{
  *(void *)(v1 + 232) = v0;
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 240) = v2;
  *unint64_t v2 = v1;
  v2[1] = sub_100FA8370;
  return sub_100FA8988(v1 + 16);
}

uint64_t sub_100FA8370()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  *(void *)(v3 + 248) = v0;
  long long v5 = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v3 + 256) = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v3 + 272) = v5;
  *(void *)(v3 + 288) = *(void *)(v2 + 48);
  *(_OWORD *)(v3 + 296) = *(_OWORD *)(v3 + 56);
  *(_OWORD *)(v3 + 312) = *(_OWORD *)(v3 + 72);
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v4 + 8);
    return v6();
  }
  else
  {
    return _swift_task_switch(sub_100FA84E0, 0, 0);
  }
}

uint64_t sub_100FA84E0()
{
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void **)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 24);
  swift_unknownObjectRetain();
  uint64_t v6 = v5(ObjectType, v3);
  if ((v7 & 0x100) == 0)
  {
    uint64_t v8 = *(void *)(v0 + 320);
    uint64_t v9 = *(void *)(v0 + 248);
    uint64_t v10 = *(void *)(v0 + 232);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for CRLBoardItemData();
    uint64_t v11 = swift_dynamicCastClassUnconditional();
    uint64_t v12 = *(void **)(v10 + 32);
    swift_unknownObjectRetain();
    id v13 = sub_1009F3230(v11, v12);
    swift_unknownObjectRelease();
    type metadata accessor for CRLBoardItemBase(0);
    unint64_t v14 = swift_dynamicCastClassUnconditional();
    swift_beginAccess();
    unint64_t v15 = *(void *)(v8 + 32);
    id v16 = (char *)v13;
    swift_bridgeObjectRetain();
    sub_100FA9FF0(v14, v15);
    if (!v9)
    {
      uint64_t v17 = &off_101518020;
      goto LABEL_16;
    }
    goto LABEL_9;
  }
  if (v6 | v7)
  {
    uint64_t v18 = *(void *)(v0 + 320);
    uint64_t v19 = *(void *)(v0 + 248);
    uint64_t v20 = *(void *)(v0 + 232);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (object_getClass(v2) == (Class)_TtC8Freeform23CRLPasteboardObjectData) {
      objc_super v21 = v2;
    }
    else {
      objc_super v21 = 0;
    }
    uint64_t v22 = *(void **)(v20 + 40);
    uint64_t v23 = (objc_class *)type metadata accessor for CRLPasteboardObject();
    uint64_t v24 = (char *)objc_allocWithZone(v23);
    *(void *)&v24[OBJC_IVAR____TtC8Freeform19CRLPasteboardObject__boardItems] = 0;
    *(void *)&v24[OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData] = v21;
    *(void *)&v24[OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_context] = v22;
    *(void *)(v0 + 216) = v24;
    *(void *)(v0 + 224) = v23;
    swift_unknownObjectRetain();
    id v25 = v22;
    [v0 init];
    uint64_t v27 = swift_dynamicCastClassUnconditional();
    swift_beginAccess();
    unint64_t v28 = *(void *)(v18 + 32);
    id v16 = (char *)v26;
    swift_bridgeObjectRetain();
    sub_100FAAF6C(v27, v28);
    if (!v19)
    {
      uint64_t v17 = &off_101513250;
      goto LABEL_16;
    }
LABEL_9:

    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    goto LABEL_10;
  }
  uint64_t v31 = *(void *)(v0 + 288);
  uint64_t v32 = *(void *)(v0 + 248);
  uint64_t v33 = *(void *)(v0 + 232);
  long long v34 = *(_OWORD *)(v0 + 272);
  *(_OWORD *)(v0 + 88) = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 104) = v34;
  *(void *)(v0 + 120) = v31;
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v0 + 296);
  type metadata accessor for CRLBoardData(0);
  uint64_t v35 = swift_dynamicCastClassUnconditional();
  BOOL v36 = *(void **)(v33 + 32);
  swift_unknownObjectRetain();
  uint64_t v37 = sub_1009F3BF8(v0 + 88, v35, v36);
  uint64_t v38 = *(void *)(v0 + 320);
  if (!v32)
  {
    uint64_t v40 = v37;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for CRLBoard(0);
    double v41 = (char *)swift_dynamicCastClassUnconditional();
    swift_beginAccess();
    unint64_t v42 = *(void *)(v38 + 32);
    id v16 = v40;
    swift_bridgeObjectRetain();
    sub_100FAA270(v41, v42);
    uint64_t v17 = &off_10152A240;
LABEL_16:
    swift_unknownObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();

    id v39 = *(uint64_t (**)(char *, _UNKNOWN **))(v0 + 8);
    return v39(v16, v17);
  }
  swift_release();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_10:
  uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
  return v29();
}

uint64_t sub_100FA8948()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100FA8988(uint64_t a1)
{
  v2[54] = a1;
  v2[55] = v1;
  sub_1005057FC((uint64_t *)&unk_101674520);
  v2[56] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for UUID();
  v2[57] = v3;
  v2[58] = *(void *)(v3 - 8);
  v2[59] = swift_task_alloc();
  v2[60] = swift_task_alloc();
  v2[61] = type metadata accessor for CRLBoardCRDTData(0);
  v2[62] = swift_task_alloc();
  v2[63] = swift_task_alloc();
  return _swift_task_switch(sub_100FA8AC8, 0, 0);
}

uint64_t sub_100FA8AC8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 440) + 16);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 512) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100FA8B80;
  return sub_100FAC834(v0 + 160, v1);
}

uint64_t sub_100FA8B80()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 520) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    long long v5 = *(_OWORD *)(v2 + 176);
    *(_OWORD *)(v2 + 528) = *(_OWORD *)(v2 + 160);
    *(_OWORD *)(v2 + 544) = v5;
    *(void *)(v2 + 560) = *(void *)(v2 + 192);
    *(_OWORD *)(v2 + 568) = *(_OWORD *)(v2 + 200);
    *(void *)(v2 + 584) = *(void *)(v2 + 216);
    return _swift_task_switch(sub_100FA8D20, 0, 0);
  }
}

uint64_t sub_100FA8D20()
{
  uint64_t v1 = (unint64_t *)(v0 + 224);
  long long v2 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 256) = v2;
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v0 + 160);
  *(void *)(v0 + 272) = *(void *)(v0 + 208);
  uint64_t v3 = sub_1008E0E9C(*(void *)(v0 + 256));
  if ((v4 & 0x101) == 0) {
    goto LABEL_5;
  }
  uint64_t v5 = v3;
  __int16 v6 = v4;
  unint64_t v7 = *v1;
  if (sub_1002094B0(*v1))
  {
    sub_10058EB88(v0 + 160);
    sub_1005F7CE8();
    swift_allocError();
    *uint64_t v8 = 14;
    swift_willThrow();
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_9;
  }
  if ((v6 & 0x100) != 0)
  {
    if (v5 | v6)
    {
      uint64_t v53 = *(void *)(v0 + 520);
      uint64_t v54 = sub_1009F3AFC((uint64_t *)(v0 + 224), *(void **)(*(void *)(v0 + 440) + 40));
      if (v53) {
        goto LABEL_6;
      }
      unint64_t v14 = (void *)v54;
      unint64_t v15 = &off_101513218;
    }
    else
    {
      uint64_t v60 = *(void *)(v0 + 264);
      if (!*(void *)(v60 + 16) || (unint64_t v61 = sub_100956650(0), (v62 & 1) == 0))
      {
        sub_1005F7CE8();
        swift_allocError();
        *id v67 = 10;
        swift_willThrow();
        goto LABEL_6;
      }
      uint64_t v63 = *(void *)(v0 + 520);
      uint64_t v64 = (uint64_t *)(*(void *)(v60 + 56) + 16 * v61);
      uint64_t v65 = *v64;
      unint64_t v66 = v64[1];
      sub_100510D4C(*v64, v66);
      sub_100510D4C(v65, v66);
      sub_100FAEBC0((unint64_t *)&unk_10169A0D0, 255, (void (*)(uint64_t))type metadata accessor for CRLBoardCRDTData);
      CRDT.init(serializedData:)();
      if (v63)
      {
        sub_100510084(v65, v66);
        uint64_t v11 = v0 + 160;
        goto LABEL_7;
      }
      uint64_t v77 = *(void *)(v0 + 496);
      uint64_t v78 = *(void *)(v0 + 504);
      uint64_t v79 = *(void *)(v0 + 232);
      uint64_t v80 = *(void *)(v0 + 240);
      sub_100FAEC5C(v78, v77, type metadata accessor for CRLBoardCRDTData);
      type metadata accessor for CRLBoardData(0);
      unint64_t v14 = (void *)swift_allocObject();
      v14[2] = 7;
      v14[3] = v7;
      v14[4] = v79;
      v14[5] = v80;
      sub_100FAED24(v77, (uint64_t)v14 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, type metadata accessor for CRLBoardCRDTData);
      sub_100510084(v65, v66);
      uint64_t v81 = (void *)((char *)v14 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      *uint64_t v81 = 0;
      v81[1] = 0xE000000000000000;
      sub_100FAECC4(v78, type metadata accessor for CRLBoardCRDTData);
      unint64_t v15 = &off_101538158;
    }
  }
  else
  {
LABEL_5:
    uint64_t v9 = *(void *)(v0 + 520);
    uint64_t v10 = sub_1009F3920((uint64_t *)(v0 + 224));
    if (v9)
    {
LABEL_6:
      uint64_t v11 = v0 + 160;
LABEL_7:
      sub_10058EB88(v11);
      goto LABEL_8;
    }
    unint64_t v14 = v10;
    unint64_t v15 = &off_10150E810;
  }
  *(void *)(v0 + 600) = v15;
  *(void *)(v0 + 592) = v14;
  uint64_t v16 = *(void *)(v0 + 480);
  uint64_t v87 = *(void *)(v0 + 464);
  uint64_t v84 = *(void *)(v0 + 456);
  uint64_t v17 = *(void *)(v0 + 440);
  type metadata accessor for CRLSerializableObjectReader.ReadObjectDataResult();
  uint64_t v18 = (void *)swift_allocObject();
  *(void *)(v0 + 608) = v18;
  v18[3] = v15;
  v18[4] = _swiftEmptyArrayStorage;
  v18[2] = v14;
  *(void *)(v0 + 616) = swift_getObjectType();
  uint64_t v19 = (void (__cdecl *)())v15[5];
  swift_unknownObjectRetain();
  swift_retain();
  v19();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v89 = *(void *)(v17 + 56);
  *(void *)(v17 + 56) = 0x8000000000000000;
  uint64_t v82 = sub_1007C0830((uint64_t)v18, v16, isUniquelyReferenced_nonNull_native);
  *(void *)(v0 + 624) = v82;
  *(void *)(v17 + 56) = v89;
  swift_bridgeObjectRelease();
  swift_endAccess();
  objc_super v21 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
  *(void *)(v0 + 632) = v21;
  *(void *)(v0 + 640) = (v87 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v21(v16, v84);
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_unknownObjectRetain();
  v19();
  swift_unknownObjectRelease();
  sub_100FAEBC0(&qword_101677460, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v25 = v24;
  v21(v16, v84);
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v23;
  *(void *)(inited + 40) = v25;
  if (v82)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"readNextObjectData()", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectReader.swift", 99, 2, 100, (uint64_t)"Object UUID has already been added to the set: %@", 49, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"readNextObjectData()", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectReader.swift", 99, 2, 100);
  }
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(v0 + 216);
  *(void *)(v0 + 648) = v26;
  *(void *)(v0 + 424) = v26;
  uint64_t v27 = *(void *)(v26 + 16);
  *(void *)(v0 + 656) = v27;
  uint64_t v28 = *(void *)(v0 + 464);
  if (v27)
  {
    int v29 = *(_DWORD *)(v28 + 80);
    *(_DWORD *)(v0 + 720) = v29;
    uint64_t v30 = *(void *)(v28 + 72);
    *(void *)(v0 + 664) = v30;
    uint64_t v31 = *(void (**)(uint64_t, unint64_t, uint64_t))(v28 + 16);
    *(void *)(v0 + 672) = v31;
    uint64_t v32 = swift_bridgeObjectRetain();
    uint64_t v33 = 0;
    while (1)
    {
      *(void *)(v0 + 680) = v33;
      uint64_t v34 = *(void *)(v0 + 448);
      uint64_t v35 = *(void *)(v0 + 456);
      v31(v34, v32 + ((v29 + 32) & ~(unint64_t)v29) + v33 * v30, v35);
      BOOL v36 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56);
      *(void *)(v0 + 688) = v36;
      v36(v34, 0, 1, v35);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v34, 1, v35) == 1) {
        break;
      }
      uint64_t v37 = *(void *)(v0 + 440);
      (*(void (**)(void, void, void))(*(void *)(v0 + 464) + 32))(*(void *)(v0 + 472), *(void *)(v0 + 448), *(void *)(v0 + 456));
      swift_beginAccess();
      uint64_t v38 = *(void *)(v37 + 56);
      if (!*(void *)(v38 + 16) || (unint64_t v39 = sub_100955FC8(*(void *)(v0 + 472)), (v40 & 1) == 0))
      {
        id v56 = *(void (**)(uint64_t, uint64_t))(v0 + 632);
        uint64_t v57 = *(void *)(v0 + 472);
        uint64_t v58 = *(void *)(v0 + 456);
        swift_endAccess();
        v56(v57, v58);
        NSString v59 = (void *)swift_task_alloc();
        *(void *)(v0 + 696) = v59;
        *NSString v59 = v0;
        v59[1] = sub_100FA9814;
        return sub_100FA8988(v0 + 16);
      }
      double v41 = *(void (**)(uint64_t, uint64_t))(v0 + 632);
      uint64_t v42 = *(void *)(v0 + 472);
      uint64_t v43 = *(void *)(v0 + 456);
      uint64_t v44 = *(void *)(*(void *)(v38 + 56) + 8 * v39);
      swift_endAccess();
      swift_retain();
      v41(v42, v43);
      type metadata accessor for CRLBoardItemData();
      uint64_t v45 = swift_dynamicCastClass();
      if (v45)
      {
        uint64_t v46 = v45;
        uint64_t v47 = *(void *)(v0 + 608);
        type metadata accessor for CRLBoardItemDatabaseResult();
        uint64_t v48 = swift_allocObject();
        *(void *)(v48 + 24) = _swiftEmptyArrayStorage;
        uint64_t v49 = (void *)(v48 + 24);
        *(void *)(v48 + 16) = v46;
        swift_beginAccess();
        uint64_t v50 = *(void *)(v44 + 32);
        swift_beginAccess();
        *uint64_t v49 = v50;
        swift_unknownObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        swift_retain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*(void *)(v47 + 32) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v47 + 32) & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_endAccess();
        swift_release();
        swift_unknownObjectRelease();
      }
      uint64_t v51 = *(void *)(v0 + 680);
      uint64_t v52 = *(void *)(v0 + 656);
      swift_release();
      if (v51 + 1 == v52)
      {
        (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 688))(*(void *)(v0 + 448), 1, 1, *(void *)(v0 + 456));
        break;
      }
      uint64_t v33 = *(void *)(v0 + 680) + 1;
      uint64_t v31 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 672);
      uint64_t v30 = *(void *)(v0 + 664);
      LOBYTE(v29) = *(unsigned char *)(v0 + 720);
      uint64_t v32 = *(void *)(v0 + 648);
      uint64_t v28 = *(void *)(v0 + 464);
    }
  }
  else
  {
    uint64_t v55 = *(void (**)(void, uint64_t, uint64_t, void))(v28 + 56);
    swift_bridgeObjectRetain();
    v55(*(void *)(v0 + 448), 1, 1, *(void *)(v0 + 456));
  }
  uint64_t v68 = *(void *)(v0 + 440);
  sub_10058EEF8(v0 + 424);
  uint64_t v69 = *(void *)(v68 + 24);
  if ((*(unsigned char *)(v69 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_shouldResetObjectUUIDs) & 1) != 0
    || (uint64_t v70 = v69 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_assetUUIDMap,
        swift_beginAccess(),
        *(void *)(*(void *)v70 + 16)))
  {
    uint64_t v71 = *(void *)(v0 + 616);
    uint64_t v72 = *(void *)(v0 + 600);
    uint64_t v73 = *(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
    swift_unknownObjectRetain();
    v73(v69, v71, v72);
    swift_unknownObjectRelease();
  }
  uint64_t v88 = *(void *)(v0 + 608);
  uint64_t v74 = *(void *)(v0 + 584);
  uint64_t v75 = *(void *)(v0 + 560);
  long long v85 = *(_OWORD *)(v0 + 528);
  long long v86 = *(_OWORD *)(v0 + 544);
  uint64_t v76 = *(void *)(v0 + 432);
  long long v83 = *(_OWORD *)(v0 + 568);
  swift_unknownObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)uint64_t v76 = v85;
  *(_OWORD *)(v76 + 16) = v86;
  *(void *)(v76 + 32) = v75;
  *(_OWORD *)(v76 + 40) = v83;
  *(void *)(v76 + 56) = v74;
  *(void *)(v76 + 64) = v88;
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
LABEL_9:
  return v12();
}

uint64_t sub_100FA9814()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  *(void *)(v3 + 704) = v0;
  *(void *)(v3 + 712) = *(void *)(v2 + 80);
  swift_task_dealloc();
  if (v0)
  {
    sub_10058EEF8(v3 + 424);
    sub_10058EB88(v3 + 160);
    __int16 v4 = sub_100FA9F34;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __int16 v4 = sub_100FA99B8;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100FA99B8()
{
  uint64_t v1 = *(void *)(v0 + 712);
  uint64_t v37 = *(void *)(v0 + 704);
  type metadata accessor for CRLBoardItemData();
  while (1)
  {
    uint64_t v2 = swift_dynamicCastClass();
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = *(void *)(v0 + 608);
      type metadata accessor for CRLBoardItemDatabaseResult();
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 24) = _swiftEmptyArrayStorage;
      uint64_t v6 = (void *)(v5 + 24);
      *(void *)(v5 + 16) = v3;
      swift_beginAccess();
      uint64_t v7 = *(void *)(v1 + 32);
      swift_beginAccess();
      *uint64_t v6 = v7;
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)(v4 + 32) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v4 + 32) & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      swift_release();
      swift_unknownObjectRelease();
    }
    uint64_t v8 = *(void *)(v0 + 680);
    uint64_t v9 = *(void *)(v0 + 656);
    swift_release();
    if (v8 + 1 == v9) {
      break;
    }
    uint64_t v10 = *(void *)(v0 + 680) + 1;
    *(void *)(v0 + 680) = v10;
    uint64_t v12 = *(void *)(v0 + 456);
    uint64_t v11 = *(void *)(v0 + 464);
    uint64_t v13 = *(void *)(v0 + 448);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 672))(v13, *(void *)(v0 + 648)+ ((*(unsigned __int8 *)(v0 + 720) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 720))+ *(void *)(v0 + 664) * v10, v12);
    unint64_t v14 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56);
    *(void *)(v0 + 688) = v14;
    v14(v13, 0, 1, v12);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v12) == 1) {
      goto LABEL_15;
    }
    uint64_t v15 = *(void *)(v0 + 440);
    (*(void (**)(void, void, void))(*(void *)(v0 + 464) + 32))(*(void *)(v0 + 472), *(void *)(v0 + 448), *(void *)(v0 + 456));
    swift_beginAccess();
    uint64_t v16 = *(void *)(v15 + 56);
    if (!*(void *)(v16 + 16) || (unint64_t v17 = sub_100955FC8(*(void *)(v0 + 472)), (v18 & 1) == 0))
    {
      uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v0 + 632);
      uint64_t v23 = *(void *)(v0 + 472);
      uint64_t v24 = *(void *)(v0 + 456);
      swift_endAccess();
      v22(v23, v24);
      uint64_t v25 = (void *)swift_task_alloc();
      *(void *)(v0 + 696) = v25;
      *uint64_t v25 = v0;
      v25[1] = sub_100FA9814;
      return sub_100FA8988(v0 + 16);
    }
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v0 + 632);
    uint64_t v20 = *(void *)(v0 + 472);
    uint64_t v21 = *(void *)(v0 + 456);
    uint64_t v1 = *(void *)(*(void *)(v16 + 56) + 8 * v17);
    swift_endAccess();
    swift_retain();
    v19(v20, v21);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 688))(*(void *)(v0 + 448), 1, 1, *(void *)(v0 + 456));
LABEL_15:
  uint64_t v27 = *(void *)(v0 + 440);
  sub_10058EEF8(v0 + 424);
  uint64_t v28 = *(void *)(v27 + 24);
  if ((*(unsigned char *)(v28 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_shouldResetObjectUUIDs) & 1) == 0)
  {
    uint64_t v29 = v28 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_assetUUIDMap;
    swift_beginAccess();
    if (!*(void *)(*(void *)v29 + 16)) {
      goto LABEL_20;
    }
  }
  uint64_t v30 = *(void *)(v0 + 616);
  uint64_t v31 = *(void *)(v0 + 600);
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
  swift_unknownObjectRetain();
  v32(v28, v30, v31);
  if (!v37)
  {
    swift_unknownObjectRelease();
LABEL_20:
    uint64_t v41 = *(void *)(v0 + 608);
    uint64_t v34 = *(void *)(v0 + 584);
    uint64_t v35 = *(void *)(v0 + 560);
    long long v39 = *(_OWORD *)(v0 + 528);
    long long v40 = *(_OWORD *)(v0 + 544);
    uint64_t v36 = *(void *)(v0 + 432);
    long long v38 = *(_OWORD *)(v0 + 568);
    swift_unknownObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    *(_OWORD *)uint64_t v36 = v39;
    *(_OWORD *)(v36 + 16) = v40;
    *(void *)(v36 + 32) = v35;
    *(_OWORD *)(v36 + 40) = v38;
    *(void *)(v36 + 56) = v34;
    *(void *)(v36 + 64) = v41;
    uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_21;
  }
  swift_release();
  swift_unknownObjectRelease_n();
  swift_release();
  sub_10058EB88(v0 + 160);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
LABEL_21:
  return v33();
}

uint64_t sub_100FA9F34()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100FA9FF0(unint64_t a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for UUID();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CRLSerializableObjectReader.PartialTreeOwner();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = _swiftEmptyDictionarySingleton;
  strcpy((char *)(v9 + 24), "Partial Tree");
  *(unsigned char *)(v9 + 37) = 0;
  *(_WORD *)(v9 + 38) = -5120;
  swift_retain();
  UUID.init()();
  type metadata accessor for CRLTransactionContext(0);
  uint64_t v10 = swift_allocObject();
  v22[1] = v9;
  uint64_t v23 = sub_100794104(v9, 0, 0, (uint64_t)v8, 0, v10);
  sub_100EBA390(a1, 2, v23);
  if (a2 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    if (v11) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
    {
LABEL_3:
      unint64_t v12 = a2 & 0xC000000000000001;
      uint64_t v13 = 4;
      unint64_t v14 = a2;
      do
      {
        uint64_t v15 = v13 - 4;
        if (v12)
        {
          uint64_t v16 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          a2 = v13 - 3;
          if (__OFADD__(v15, 1)) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v16 = *(void *)(a2 + 8 * v13);
          swift_retain();
          a2 = v13 - 3;
          if (__OFADD__(v15, 1))
          {
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
        }
        unint64_t v17 = sub_100FABD18(v16, v23);
        if (v2)
        {
          swift_release();
          swift_release();
          swift_release();
          return swift_bridgeObjectRelease();
        }
        char v18 = v17;
        swift_release();

        ++v13;
        BOOL v19 = a2 == v11;
        a2 = v14;
      }
      while (!v19);
    }
  }
  uint64_t v20 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)v23 + 720))(v20);
  if (!v2)
  {
    swift_release();
    sub_100FAC080();
  }
  swift_release();
  return swift_release();
}

uint64_t sub_100FAA270(char *a1, unint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v94 = *(void *)(v11 - 8);
  uint64_t v95 = v11;
  __chkstk_darwin(v11, v12);
  uint64_t v99 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v98 = (char *)&v85 - v16;
  __chkstk_darwin(v17, v18);
  dispatch_queue_t v97 = (dispatch_queue_t)((char *)&v85 - v19);
  uint64_t v20 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v96 = (uint64_t)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  uint64_t v100 = (uint64_t)&v85 - v25;
  uint64_t v26 = *(void *)(v2 + 24);
  if ((*(unsigned char *)(v26 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_shouldResetObjectUUIDs) & 1) == 0)
  {
    uint64_t v27 = v26 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_assetUUIDMap;
    swift_beginAccess();
    if (!*(void *)(*(void *)v27 + 16))
    {
      uint64_t v29 = a1;
LABEL_6:
      uint64_t v89 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
      uint64_t v32 = *(void *)&v29[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
      uint64_t v33 = v32 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      sub_100FAEC5C(v33, (uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
      swift_retain();
      sub_1005057FC(&qword_101674550);
      dispatch_queue_t v34 = v97;
      CRRegister.wrappedValue.getter();
      sub_100FAECC4((uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
      uint64_t v36 = *(void *)(v32 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      unint64_t v35 = *(void *)(v32 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName + 8);
      swift_bridgeObjectRetain();
      sub_100753370((uint64_t)v34, v36, v35, v100);
      swift_release();
      uint64_t v92 = OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer;
      uint64_t v37 = *(char **)&v29[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];
      uint64_t v91 = (void (**)(uint64_t))(**(void **)&v37[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                          + 256);
      long long v38 = *v91;
      long long v39 = v37;
      uint64_t v40 = swift_retain();
      uint64_t v41 = (uint64_t)v98;
      v38(v40);

      swift_release();
      v93 = v29;
      uint64_t v91 = (void (**)(uint64_t))OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer;
      uint64_t v42 = *(char **)&v29[OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer];
      uint64_t v43 = *(void (**)(uint64_t))(**(void **)&v42[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                           + 256);
      uint64_t v44 = v42;
      uint64_t v45 = swift_retain();
      v43(v45);

      swift_release();
      v106 = _swiftEmptyArrayStorage;
      uint64_t v105 = _swiftEmptyArrayStorage;
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v46 = result;
        uint64_t v47 = (uint64_t)v99;
        if (result) {
          goto LABEL_8;
        }
      }
      else
      {
        uint64_t v46 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain();
        uint64_t v47 = (uint64_t)v99;
        if (v46)
        {
LABEL_8:
          if (v46 < 1)
          {
            __break(1u);
LABEL_25:
            __break(1u);
            return result;
          }
          uint64_t v48 = 0;
          do
          {
            if ((a2 & 0xC000000000000001) != 0)
            {
              uint64_t v49 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              uint64_t v49 = *(void *)(a2 + 8 * v48 + 32);
              swift_retain();
            }
            ++v48;
            v101[0] = v49;
            sub_100FAB52C(v101, v41, &v106, v47, &v105);
            swift_release();
          }
          while (v46 != v48);
          swift_bridgeObjectRelease();
          uint64_t v50 = v106;
          uint64_t v88 = v105;
LABEL_17:
          uint64_t v51 = v93;
          uint64_t v52 = *(void *)(*(void *)&v93[v92] + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
          type metadata accessor for CRLBoardItemDatabaseResult();
          uint64_t v53 = swift_allocObject();
          uint64_t v86 = v53;
          *(void *)(v53 + 24) = _swiftEmptyArrayStorage;
          uint64_t v54 = (double **)(v53 + 24);
          *(void *)(v53 + 16) = v52;
          swift_beginAccess();
          char *v54 = v50;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRelease();
          uint64_t v55 = *(void *)(*(char **)((char *)v91 + (void)v51) + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
          uint64_t v56 = swift_allocObject();
          uint64_t v90 = v56;
          *(void *)(v56 + 24) = _swiftEmptyArrayStorage;
          uint64_t v57 = (double **)(v56 + 24);
          *(void *)(v56 + 16) = v55;
          swift_beginAccess();
          *uint64_t v57 = v88;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRelease();
          type metadata accessor for CRLBoardDatabaseFetchResult();
          uint64_t inited = (void *)swift_initStackObject();
          uint64_t v88 = (double *)inited;
          inited[2] = _swiftEmptyDictionarySingleton;
          NSString v59 = inited + 2;
          inited[3] = _swiftEmptyDictionarySingleton;
          uint64_t v60 = inited + 3;
          inited[4] = _swiftEmptyDictionarySingleton;
          uint64_t v87 = inited + 4;
          inited[5] = _swiftEmptyDictionarySingleton;
          long long v85 = type metadata accessor for CRLBoardIdentifier;
          uint64_t v61 = v96;
          sub_100FAEC5C(v100, v96, type metadata accessor for CRLBoardIdentifier);
          uint64_t v89 = *(void *)&v51[v89];
          type metadata accessor for CRLContainerItemData(0);
          uint64_t v92 = swift_dynamicCastClassUnconditional();
          uint64_t v91 = (void (**)(uint64_t))swift_dynamicCastClassUnconditional();
          char v62 = v51[OBJC_IVAR____TtC8Freeform8CRLBoard_makeUnsupported];
          swift_beginAccess();
          uint64_t v63 = v89;
          swift_retain();
          swift_retain();
          uint64_t v64 = v86;
          swift_retain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v104 = *v59;
          *NSString v59 = 0x8000000000000000;
          v102[0] = v63;
          v102[1] = v92;
          v102[2] = (uint64_t)v91;
          v102[3] = 0;
          char v103 = v62;
          sub_10097494C(v102, v61, isUniquelyReferenced_nonNull_native);
          *NSString v59 = v104;
          swift_bridgeObjectRelease();
          sub_100FAECC4(v61, type metadata accessor for CRLBoardIdentifier);
          swift_endAccess();
          uint64_t v66 = v100;
          id v67 = v85;
          sub_100FAEC5C(v100, v61, v85);
          swift_beginAccess();
          swift_retain();
          char v68 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v104 = *v60;
          uint64_t *v60 = 0x8000000000000000;
          sub_1009746A8(v64, v61, v68);
          uint64_t *v60 = v104;
          uint64_t v69 = v90;
          swift_bridgeObjectRelease();
          sub_100FAECC4(v61, type metadata accessor for CRLBoardIdentifier);
          swift_endAccess();
          sub_100FAEC5C(v66, v61, v67);
          uint64_t v70 = v87;
          swift_beginAccess();
          swift_retain();
          char v71 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v104 = *v70;
          uint64_t *v70 = 0x8000000000000000;
          sub_1009746A8(v69, v61, v71);
          uint64_t *v70 = v104;
          swift_bridgeObjectRelease();
          uint64_t v72 = (uint64_t)v88;
          sub_100FAECC4(v61, type metadata accessor for CRLBoardIdentifier);
          swift_endAccess();
          sub_100FAEBC0((unint64_t *)&qword_10167BA48, 255, (void (*)(uint64_t))type metadata accessor for CRLBoard);
          uint64_t v73 = (uint64_t)v93;
          swift_unknownObjectRetain();
          dispatch_queue_t v74 = v97;
          UUID.init()();
          type metadata accessor for CRLTransactionContext(0);
          uint64_t v75 = swift_allocObject();
          uint64_t v76 = sub_1007940B4(v73, 0, 1, (uint64_t)v74, 1, v75);
          sub_100CFE220(v72, v76, 0, 2);
          if (v4)
          {
            sub_100FAECC4(v66, type metadata accessor for CRLBoardIdentifier);
            swift_release();
            swift_release();
            swift_release();
            swift_setDeallocating();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_19:
            uint64_t v77 = v95;
            uint64_t v78 = *(void (**)(char *, uint64_t))(v94 + 8);
            v78(v99, v95);
            v78(v98, v77);
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
          (*(void (**)(void))(*(void *)v76 + 720))();
          swift_release();
          uint64_t v79 = v93;
          [v93 fixUp];
          uint64_t v80 = *(void *)&v79[OBJC_IVAR____TtC8Freeform8CRLBoard_pendingChanges];
          dispatch_queue_t v97 = *(dispatch_queue_t *)(v80 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
          uint64_t v81 = swift_allocObject();
          *(void *)(v81 + 16) = v76;
          *(void *)(v81 + 24) = v80;
          uint64_t v82 = swift_allocObject();
          *(void *)(v82 + 16) = sub_1006DADEC;
          *(void *)(v82 + 24) = v81;
          v101[4] = (uint64_t)sub_1006591F0;
          v101[5] = v82;
          v101[0] = (uint64_t)_NSConcreteStackBlock;
          v101[1] = *(void *)"";
          v101[2] = (uint64_t)sub_1006D9628;
          v101[3] = (uint64_t)&unk_101535B00;
          long long v83 = _Block_copy(v101);
          swift_retain();
          swift_retain();
          swift_retain();
          swift_release();
          dispatch_sync(v97, v83);
          _Block_release(v83);
          char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
          swift_release();
          swift_release();
          swift_release();
          swift_setDeallocating();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t result = swift_release();
          if ((isEscapingClosureAtFileLocation & 1) == 0)
          {
            sub_100FAECC4(v100, type metadata accessor for CRLBoardIdentifier);
            goto LABEL_19;
          }
          goto LABEL_25;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v50 = _swiftEmptyArrayStorage;
      uint64_t v88 = _swiftEmptyArrayStorage;
      goto LABEL_17;
    }
  }
  uint64_t v28 = *(void (**)(uint64_t))(**(void **)(*(void *)&a1[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer]
                                                     + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                       + 600);
  uint64_t v29 = a1;
  swift_retain();
  v28(v26);
  uint64_t result = swift_release();
  if (!v3)
  {
    uint64_t v31 = *(void (**)(uint64_t))(**(void **)(*(void *)&a1[OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer]
                                                       + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                         + 600);
    swift_retain();
    v31(v26);
    swift_release();
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_100FAAF6C(uint64_t a1, unint64_t a2)
{
  uint64_t isUniquelyReferenced_nonNull_native = v2;
  v37[1] = a1;
  uint64_t v46 = type metadata accessor for UUID();
  uint64_t v40 = *(void *)(v46 - 8);
  __chkstk_darwin(v46, v5);
  uint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)v37 - v10;
  type metadata accessor for CRLSerializableObjectReader.PartialTreeOwner();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = _swiftEmptyDictionarySingleton;
  strcpy((char *)(v12 + 24), "Partial Tree");
  *(unsigned char *)(v12 + 37) = 0;
  *(_WORD *)(v12 + 38) = -5120;
  sub_100FAEBC0(&qword_10167F6C8, v13, (void (*)(uint64_t))type metadata accessor for CRLSerializableObjectReader.PartialTreeOwner);
  swift_retain_n();
  UUID.init()();
  type metadata accessor for CRLTransactionContext(0);
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = sub_100794104(v12, 0, 0, (uint64_t)v11, 0, v14);
  swift_release();
  if (a2 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v38 = v12;
    if (v16) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v38 = v12;
    if (v16)
    {
LABEL_3:
      unint64_t v45 = a2 & 0xC000000000000001;
      uint64_t v39 = v40 + 16;
      uint64_t v42 = (void (**)(char *, uint64_t))(v40 + 8);
      uint64_t v17 = _swiftEmptyDictionarySingleton;
      uint64_t v12 = 4;
      unint64_t v43 = a2;
      uint64_t v44 = v15;
      uint64_t v41 = v16;
      while (1)
      {
        uint64_t v19 = v12 - 4;
        if (v45)
        {
          uint64_t v20 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v21 = v12 - 3;
          if (__OFADD__(v19, 1)) {
            goto LABEL_24;
          }
        }
        else
        {
          uint64_t v20 = *(void *)(a2 + 8 * v12);
          swift_retain();
          uint64_t v21 = v12 - 3;
          if (__OFADD__(v19, 1))
          {
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
LABEL_26:
            __break(1u);
            goto LABEL_27;
          }
        }
        uint64_t v48 = v21;
        uint64_t v22 = sub_100FABD18(v20, v15);
        if (isUniquelyReferenced_nonNull_native)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          return swift_release();
        }
        uint64_t v23 = v22;
        uint64_t v47 = 0;
        (*(void (**)(void))((swift_isaMask & *v22) + 0x88))();
        id v24 = v23;
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v49 = v17;
        uint64_t v15 = (uint64_t)v7;
        a2 = sub_100955FC8((uint64_t)v7);
        uint64_t v26 = v17[2];
        BOOL v27 = (v25 & 1) == 0;
        uint64_t v28 = v26 + v27;
        if (__OFADD__(v26, v27)) {
          goto LABEL_25;
        }
        char v29 = v25;
        if (v17[3] >= v28)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v17 = v49;
            if (v25) {
              goto LABEL_4;
            }
          }
          else
          {
            sub_10097C508();
            uint64_t v17 = v49;
            if (v29) {
              goto LABEL_4;
            }
          }
        }
        else
        {
          sub_10095F33C(v28, isUniquelyReferenced_nonNull_native);
          unint64_t v30 = sub_100955FC8(v15);
          if ((v29 & 1) != (v31 & 1))
          {
            uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
            __break(1u);
            return result;
          }
          a2 = v30;
          uint64_t v17 = v49;
          if (v29)
          {
LABEL_4:
            uint64_t v18 = v17[7];

            *(void *)(v18 + 8 * a2) = v24;
            uint64_t v7 = (char *)v15;
            goto LABEL_5;
          }
        }
        v17[(a2 >> 6) + 8] |= 1 << a2;
        uint64_t v7 = (char *)v15;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v40 + 16))(v17[6] + *(void *)(v40 + 72) * a2, v15, v46);
        *(void *)(v17[7] + 8 * a2) = v24;
        uint64_t v32 = v17[2];
        BOOL v33 = __OFADD__(v32, 1);
        uint64_t v34 = v32 + 1;
        if (v33) {
          goto LABEL_26;
        }
        void v17[2] = v34;
LABEL_5:
        swift_bridgeObjectRelease();
        (*v42)(v7, v46);
        swift_release();

        ++v12;
        uint64_t isUniquelyReferenced_nonNull_native = v47;
        a2 = v43;
        uint64_t v15 = v44;
        if (v48 == v41) {
          goto LABEL_29;
        }
      }
    }
  }
  uint64_t v17 = _swiftEmptyDictionarySingleton;
LABEL_29:
  uint64_t v35 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)v15 + 720))(v35);
  if (isUniquelyReferenced_nonNull_native)
  {
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    sub_100FAC080();
    sub_100781C68((uint64_t)v17);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_100FAB48C()
{
  swift_release();

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLSerializableObjectReader()
{
  return self;
}

uint64_t type metadata accessor for CRLSerializableObjectReader.ReadObjectDataResult()
{
  return self;
}

uint64_t sub_100FAB52C(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v57 = a5;
  uint64_t v66 = a4;
  NSString v59 = a3;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void **)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v61 = &v54[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_10168A0C0);
  __chkstk_darwin(v11, v12);
  char v68 = &v54[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14, v15);
  uint64_t v17 = &v54[-v16];
  uint64_t v18 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v58 = &v54[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21, v22);
  id v67 = &v54[-v23];
  __chkstk_darwin(v24, v25);
  uint64_t v70 = &v54[-v26];
  __chkstk_darwin(v27, v28);
  unint64_t v30 = &v54[-v29];
  __n128 v33 = __chkstk_darwin(v31, v32);
  uint64_t v35 = &v54[-v34];
  uint64_t v62 = *a1;
  (*(void (**)(__n128))(**(void **)(v62 + 16) + 264))(v33);
  uint64_t v63 = (void (*)(unsigned char *, uint64_t, uint64_t))v8[2];
  v63(v30, a2, v7);
  uint64_t v64 = (void (*)(unsigned char *, void, uint64_t, uint64_t))v8[7];
  v64(v30, 0, 1, v7);
  uint64_t v65 = v11;
  uint64_t v36 = (uint64_t)&v17[*(int *)(v11 + 48)];
  uint64_t v69 = v35;
  uint64_t v37 = (uint64_t)v35;
  uint64_t v38 = v8;
  sub_100522E9C(v37, (uint64_t)v17, (uint64_t *)&unk_101674520);
  sub_100522E9C((uint64_t)v30, v36, (uint64_t *)&unk_101674520);
  uint64_t v39 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v8[6];
  if (v39((uint64_t)v17, 1, v7) != 1)
  {
    sub_100522E9C((uint64_t)v17, (uint64_t)v70, (uint64_t *)&unk_101674520);
    if (v39(v36, 1, v7) != 1)
    {
      uint64_t v60 = v39;
      uint64_t v41 = v61;
      ((void (*)(unsigned char *, uint64_t, uint64_t))v38[4])(v61, v36, v7);
      sub_100FAEBC0((unint64_t *)&qword_10167BDC0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      int v55 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v56 = v38;
      uint64_t v42 = (void (*)(unsigned char *, uint64_t))v38[1];
      v42(v41, v7);
      sub_100522F00((uint64_t)v30, (uint64_t *)&unk_101674520);
      v42(v70, v7);
      uint64_t v38 = v56;
      sub_100522F00((uint64_t)v17, (uint64_t *)&unk_101674520);
      uint64_t v40 = (uint64_t)v69;
      if (v55) {
        goto LABEL_8;
      }
LABEL_9:
      uint64_t v44 = v67;
      v63(v67, v66, v7);
      uint64_t v45 = (uint64_t)v44;
      v64(v44, 0, 1, v7);
      uint64_t v46 = v68;
      uint64_t v47 = (uint64_t)&v68[*(int *)(v65 + 48)];
      sub_100522E9C(v40, (uint64_t)v68, (uint64_t *)&unk_101674520);
      sub_100522E9C(v45, v47, (uint64_t *)&unk_101674520);
      uint64_t v48 = v60;
      if (v60((uint64_t)v46, 1, v7) == 1)
      {
        sub_100522F00(v45, (uint64_t *)&unk_101674520);
        if (v48(v47, 1, v7) == 1)
        {
          sub_100522F00((uint64_t)v46, (uint64_t *)&unk_101674520);
LABEL_17:
          swift_retain();
          unint64_t v43 = v57;
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v49 = v58;
        sub_100522E9C((uint64_t)v46, (uint64_t)v58, (uint64_t *)&unk_101674520);
        if (v48(v47, 1, v7) != 1)
        {
          uint64_t v50 = v61;
          ((void (*)(unsigned char *, uint64_t, uint64_t))v38[4])(v61, v47, v7);
          sub_100FAEBC0((unint64_t *)&qword_10167BDC0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
          char v51 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v52 = (void (*)(unsigned char *, uint64_t))v38[1];
          v52(v50, v7);
          sub_100522F00(v45, (uint64_t *)&unk_101674520);
          v52(v49, v7);
          sub_100522F00((uint64_t)v46, (uint64_t *)&unk_101674520);
          if (v51) {
            goto LABEL_17;
          }
LABEL_15:
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"prepareBoard(_:childItemResults:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectReader.swift", 99, 2, 157, (uint64_t)"Encountered an item with unexpected parent", 42, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"prepareBoard(_:childItemResults:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectReader.swift", 99, 2, 157);
          return sub_100522F00(v40, (uint64_t *)&unk_101674520);
        }
        sub_100522F00(v45, (uint64_t *)&unk_101674520);
        ((void (*)(unsigned char *, uint64_t))v38[1])(v49, v7);
      }
      sub_100522F00((uint64_t)v46, (uint64_t *)&unk_10168A0C0);
      goto LABEL_15;
    }
    sub_100522F00((uint64_t)v30, (uint64_t *)&unk_101674520);
    ((void (*)(unsigned char *, uint64_t))v38[1])(v70, v7);
LABEL_6:
    uint64_t v60 = v39;
    sub_100522F00((uint64_t)v17, (uint64_t *)&unk_10168A0C0);
    uint64_t v40 = (uint64_t)v69;
    goto LABEL_9;
  }
  sub_100522F00((uint64_t)v30, (uint64_t *)&unk_101674520);
  if (v39(v36, 1, v7) != 1) {
    goto LABEL_6;
  }
  sub_100522F00((uint64_t)v17, (uint64_t *)&unk_101674520);
  uint64_t v40 = (uint64_t)v69;
LABEL_8:
  swift_retain();
  unint64_t v43 = v59;
LABEL_18:
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return sub_100522F00(v40, (uint64_t *)&unk_101674520);
}

void *sub_100FABD18(uint64_t a1, uint64_t a2)
{
  id v6 = sub_1009F3230(*(void *)(a1 + 16), *(void **)(v2 + 32));
  uint64_t v16 = a2;
  sub_100EB9DD8((unint64_t)v6, 2, a2);
  uint64_t v15 = v6;

  swift_beginAccess();
  unint64_t v7 = *(void *)(a1 + 24);
  if (v7 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      uint64_t v9 = 4;
      do
      {
        uint64_t v10 = v9 - 4;
        if ((v7 & 0xC000000000000001) != 0)
        {
          uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v12 = v9 - 3;
          if (__OFADD__(v10, 1)) {
            goto LABEL_14;
          }
        }
        else
        {
          uint64_t v11 = *(void *)(v7 + 8 * v9);
          swift_retain();
          uint64_t v12 = v9 - 3;
          if (__OFADD__(v10, 1))
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        uint64_t v13 = (void *)sub_100FABD18(v11, v16);
        swift_release();
        if (v3)
        {

          break;
        }

        ++v9;
      }
      while (v12 != v8);
    }
  }
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_100FABE7C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  if (!*(void *)(v3 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_100955FC8(a1);
  if (v5)
  {
    uint64_t v6 = *(void *)(*(void *)(v3 + 56) + 16 * v4);
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v6 = 0;
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_100FABF1C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
  swift_beginAccess();
  swift_unknownObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *(void *)(v2 + 16);
  *(void *)(v2 + 16) = 0x8000000000000000;
  sub_100971D88(a1, a2, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
  *(void *)(v2 + 16) = v13;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return swift_endAccess();
}

void *sub_100FAC080()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v1 - 8, v2);
  unint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = v0 + 16;
  swift_beginAccess();
  uint64_t v10 = *(void *)(v0 + 16);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v28 = v10 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  uint64_t v14 = v13 & v11;
  uint64_t v29 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  int64_t v30 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v25 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v26 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v31 = v10;
  uint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v16 = 0;
  while (v14)
  {
    v14 &= v14 - 1;
LABEL_23:
    type metadata accessor for CRLBoardItem(0);
    uint64_t result = (void *)swift_dynamicCastClass();
    if (result)
    {
      uint64_t v20 = result;
      uint64_t v21 = v5;
      uint64_t v22 = *(void (**)(uint64_t))((swift_isaMask & *result) + 0xB8);
      uint64_t v23 = swift_unknownObjectRetain_n();
      v22(v23);
      uint64_t v5 = v21;
      if ((*v29)(v4, 1, v21) == 1)
      {
        swift_unknownObjectRelease_n();
        uint64_t result = (void *)sub_100522F00((uint64_t)v4, (uint64_t *)&unk_101674520);
      }
      else
      {
        (*v26)(v9, v4, v21);
        if (!*(void *)(*(void *)v27 + 16)) {
          goto LABEL_30;
        }
        swift_bridgeObjectRetain();
        sub_100955FC8((uint64_t)v9);
        if ((v24 & 1) == 0)
        {
          swift_bridgeObjectRelease();
LABEL_30:
          (*v25)(v9, v21);
          goto LABEL_31;
        }
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        type metadata accessor for CRLContainerItem(0);
        if (swift_dynamicCastClass())
        {
          swift_unknownObjectRetain();
          sub_1008488B0(v20, 1);
          swift_unknownObjectRelease_n();
          swift_unknownObjectRelease_n();
          uint64_t v5 = v21;
          uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))*v25)(v9, v21);
        }
        else
        {
          swift_unknownObjectRelease();
          uint64_t v5 = v21;
          (*v25)(v9, v21);
LABEL_31:
          uint64_t result = (void *)swift_unknownObjectRelease_n();
        }
      }
    }
  }
  int64_t v17 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v17 >= v30) {
    return (void *)swift_release();
  }
  uint64_t v18 = *(void *)(v28 + 8 * v17);
  ++v16;
  if (v18) {
    goto LABEL_22;
  }
  int64_t v16 = v17 + 1;
  if (v17 + 1 >= v30) {
    return (void *)swift_release();
  }
  uint64_t v18 = *(void *)(v28 + 8 * v16);
  if (v18) {
    goto LABEL_22;
  }
  int64_t v16 = v17 + 2;
  if (v17 + 2 >= v30) {
    return (void *)swift_release();
  }
  uint64_t v18 = *(void *)(v28 + 8 * v16);
  if (v18) {
    goto LABEL_22;
  }
  int64_t v16 = v17 + 3;
  if (v17 + 3 >= v30) {
    return (void *)swift_release();
  }
  uint64_t v18 = *(void *)(v28 + 8 * v16);
  if (v18)
  {
LABEL_22:
    uint64_t v14 = (v18 - 1) & v18;
    goto LABEL_23;
  }
  int64_t v19 = v17 + 4;
  if (v19 >= v30) {
    return (void *)swift_release();
  }
  uint64_t v18 = *(void *)(v28 + 8 * v19);
  if (v18)
  {
    int64_t v16 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v16 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v16 >= v30) {
      return (void *)swift_release();
    }
    uint64_t v18 = *(void *)(v28 + 8 * v16);
    ++v19;
    if (v18) {
      goto LABEL_22;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_100FAC4D8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLSerializableObjectReader.PartialTreeOwner()
{
  return self;
}

ValueMetadata *type metadata accessor for CRLSerializableObjectReaderOptions()
{
  return &type metadata for CRLSerializableObjectReaderOptions;
}

unint64_t sub_100FAC550()
{
  unint64_t result = qword_1016A4388;
  if (!qword_1016A4388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4388);
  }
  return result;
}

unint64_t sub_100FAC5A8()
{
  unint64_t result = qword_1016A4390;
  if (!qword_1016A4390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4390);
  }
  return result;
}

unint64_t sub_100FAC600()
{
  unint64_t result = qword_1016A4398;
  if (!qword_1016A4398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4398);
  }
  return result;
}

unint64_t sub_100FAC658()
{
  unint64_t result = qword_1016A43A0;
  if (!qword_1016A43A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A43A0);
  }
  return result;
}

void sub_100FAC6B4()
{
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"removeTransactable(_:deletedNewlyCreated:)", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectReader.swift", 99, 2, 235, (uint64_t)"PartialTreeOwner.removeTransactable() not expected to be called ever.", 69, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"PartialTreeOwner.removeTransactable() not expected to be called ever.");
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"removeTransactable(_:deletedNewlyCreated:)", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectReader.swift", 99, 2, 235);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v0, v1);
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100FAC7A8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100FAC7DC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100FAEBC0(&qword_1016A43A8, a2, (void (*)(uint64_t))type metadata accessor for CRLSerializableObjectReader.PartialTreeOwner);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100FAC834(uint64_t a1, uint64_t a2)
{
  v2[15] = a1;
  v2[16] = a2;
  v2[17] = *(void *)(type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(0) - 8);
  v2[18] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference(0);
  v2[19] = v3;
  v2[20] = *(void *)(v3 - 8);
  v2[21] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v2[22] = v4;
  v2[23] = *(void *)(v4 - 8);
  v2[24] = swift_task_alloc();
  sub_1005057FC(&qword_101699720);
  v2[25] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for CRLProto_Data(0);
  v2[26] = v5;
  v2[27] = *(void *)(v5 - 8);
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674520);
  v2[30] = v6;
  v2[31] = *(void *)(v6 - 8);
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_101674160);
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  v2[36] = swift_task_alloc();
  type metadata accessor for BinaryDecodingOptions();
  v2[37] = swift_task_alloc();
  v2[38] = type metadata accessor for CRLProto_ObjectInfo(0);
  v2[39] = swift_task_alloc();
  return _swift_task_switch(sub_100FACB5C, 0, 0);
}

void sub_100FACB5C()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v1 + 24);
  if (__OFADD__(v2, 8))
  {
    __break(1u);
  }
  else
  {
    *(void *)(v1 + 24) = v2 + 8;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 320) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100FACC2C;
    sub_1007797F4(v2, 8, 1, ObjectType);
  }
}

uint64_t sub_100FACC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[41] = a1;
  v4[42] = a2;
  v4[43] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_100FACF1C;
  }
  else {
    uint64_t v5 = sub_100FACD44;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100FACD44()
{
  unint64_t v1 = v0[42];
  uint64_t v2 = 0;
  switch(v1 >> 62)
  {
    case 1uLL:
      uint64_t v3 = v0[41];
      uint64_t v4 = (int)v3;
      if ((int)v3 > v3 >> 32) {
        goto LABEL_17;
      }
      sub_100510D4C(v3, v1);
      uint64_t v5 = __DataStorage._bytes.getter();
      if (!v5) {
        goto LABEL_20;
      }
      uint64_t v6 = v5;
      uint64_t v7 = __DataStorage._offset.getter();
      uint64_t v8 = v4 - v7;
      if (__OFSUB__(v4, v7)) {
        goto LABEL_19;
      }
      uint64_t v10 = v0[41];
      unint64_t v9 = v0[42];
      __DataStorage._length.getter();
      uint64_t v2 = *(void *)(v6 + v8);
      sub_100510084(v10, v9);
LABEL_10:
      if (v2 < 0)
      {
        __break(1u);
        goto LABEL_16;
      }
LABEL_11:
      uint64_t v17 = v0[16];
      uint64_t v18 = *(void *)(v17 + 24);
      if (__OFADD__(v18, v2))
      {
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __DataStorage._length.getter();
        __break(1u);
LABEL_21:
        __DataStorage._length.getter();
        __break(1u);
        JUMPOUT(0x100FACF0CLL);
      }
      *(void *)(v17 + 24) = v18 + v2;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v20 = (void *)swift_task_alloc();
      v0[44] = v20;
      *uint64_t v20 = v0;
      v20[1] = sub_100FAD030;
      return sub_1007797F4(v18, v2, 1, ObjectType);
    case 2uLL:
      uint64_t v11 = *(void *)(v0[41] + 16);
      swift_retain();
      swift_retain();
      uint64_t v12 = __DataStorage._bytes.getter();
      if (!v12) {
        goto LABEL_21;
      }
      uint64_t v13 = v12;
      uint64_t v14 = __DataStorage._offset.getter();
      BOOL v15 = __OFSUB__(v11, v14);
      uint64_t v16 = v11 - v14;
      if (v15) {
        goto LABEL_18;
      }
      __DataStorage._length.getter();
      uint64_t v2 = *(void *)(v13 + v16);
      swift_release();
      swift_release();
      goto LABEL_10;
    case 3uLL:
      goto LABEL_11;
    default:
      uint64_t v2 = v0[41];
      goto LABEL_10;
  }
}

uint64_t sub_100FACF1C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100FAD030(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[45] = a1;
  v4[46] = a2;
  v4[47] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_100FAE044;
  }
  else {
    uint64_t v5 = sub_100FAD148;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100FAD148()
{
  uint64_t v1 = *(void *)(v0 + 376);
  sub_100510D4C(*(void *)(v0 + 360), *(void *)(v0 + 368));
  BinaryDecodingOptions.init()();
  sub_100FAEBC0(&qword_1016741B0, 255, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo);
  Message.init(serializedData:extensions:partial:options:)();
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 360);
    unint64_t v2 = *(void *)(v0 + 368);
    uint64_t v5 = *(void *)(v0 + 328);
    unint64_t v4 = *(void *)(v0 + 336);
    swift_release();
    sub_100510084(v3, v2);
    sub_100510084(v5, v4);
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(*(void *)(v0 + 312) + 24);
  uint64_t v9 = Dictionary.init(minimumCapacity:)();
  uint64_t v10 = (void *)v9;
  uint64_t v11 = *(void *)(v8 + 16);
  if (v11)
  {
    uint64_t v12 = *(void *)(v0 + 248);
    uint64_t v128 = *(void *)(v0 + 232);
    uint64_t v13 = *(void *)(v0 + 216);
    uint64_t v14 = (void *)v9;
    uint64_t v15 = *(void *)(v0 + 184);
    uint64_t v133 = type metadata accessor for CRLProto_ObjectInfo.AssetReference(0);
    uint64_t v16 = (uint64_t *)(v8
                    + ((*(unsigned __int8 *)(*(void *)(v133 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v133 - 8) + 80)));
    uint64_t v131 = *(void *)(*(void *)(v133 - 8) + 72);
    uint64_t v17 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    uint64_t v18 = (void (**)(uint64_t, void, uint64_t, void))(v15 + 56);
    uint64_t v10 = v14;
    uint64_t v129 = v12;
    v126 = v18;
    v127 = (void (**)(uint64_t, uint64_t, uint64_t, void))(v12 + 56);
    swift_bridgeObjectRetain();
    v130 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    while (1)
    {
      uint64_t v138 = v11;
      uint64_t v22 = *(void *)(v0 + 288);
      uint64_t v23 = *(void *)(v0 + 208);
      uint64_t v24 = (uint64_t)v16 + *(int *)(v133 + 24);
      sub_100522E9C(v24, v22, (uint64_t *)&unk_101674160);
      uint64_t v25 = *v17;
      int v26 = (*v17)(v22, 1, v23);
      sub_100522F00(v22, (uint64_t *)&unk_101674160);
      uint64_t v27 = *v16;
      uint64_t v28 = v16[1];
      if (v26 == 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v29 = sub_100955F50(v27, v28);
        char v31 = v30;
        swift_bridgeObjectRelease();
        if (v31)
        {
          uint64_t v17 = v130;
          uint64_t v20 = v138;
          if (!swift_isUniquelyReferenced_nonNull_native()) {
            sub_10097CD24();
          }
          uint64_t v32 = *(void *)(v0 + 200);
          swift_bridgeObjectRelease();
          sub_100A2A208(v10[7] + *(void *)(v129 + 72) * v29, v32);
          sub_10058D1CC(v29, (uint64_t)v10);
          swift_bridgeObjectRelease();
          uint64_t v19 = 0;
        }
        else
        {
          uint64_t v19 = 1;
          uint64_t v17 = v130;
          uint64_t v20 = v138;
        }
        uint64_t v21 = *(void *)(v0 + 200);
        (*v127)(v21, v19, 1, *(void *)(v0 + 240));
        swift_bridgeObjectRelease();
        sub_100522F00(v21, &qword_101699720);
      }
      else
      {
        v135 = v10;
        uint64_t v137 = *v16;
        uint64_t v33 = *(void *)(v0 + 280);
        uint64_t v34 = *(void *)(v0 + 208);
        sub_100522E9C(v24, v33, (uint64_t *)&unk_101674160);
        int v35 = v25(v33, 1, v34);
        uint64_t v36 = *(void *)(v0 + 280);
        uint64_t v37 = *(void **)(v0 + 232);
        if (v35 == 1)
        {
          void *v37 = 0;
          *(void *)(v128 + 8) = 0xC000000000000000;
          swift_bridgeObjectRetain();
          UnknownStorage.init()();
          sub_100522F00(v36, (uint64_t *)&unk_101674160);
        }
        else
        {
          sub_100FAED24(*(void *)(v0 + 280), (uint64_t)v37, type metadata accessor for CRLProto_Data);
          swift_bridgeObjectRetain();
        }
        uint64_t v38 = *(uint64_t **)(v0 + 232);
        uint64_t v39 = *v38;
        unint64_t v40 = *(void *)(v128 + 8);
        sub_100510D4C(*v38, v40);
        sub_100FAECC4((uint64_t)v38, type metadata accessor for CRLProto_Data);
        UUID.init(crl_data:)(v39, v40);
        uint64_t v42 = *(void *)(v0 + 256);
        uint64_t v41 = *(void *)(v0 + 264);
        (*v126)(v41, 0, 1, *(void *)(v0 + 176));
        sub_100A2A208(v41, v42);
        uint64_t v10 = v135;
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v45 = sub_100955F50(v137, v28);
        uint64_t v46 = v135[2];
        BOOL v47 = (v44 & 1) == 0;
        uint64_t result = v46 + v47;
        if (__OFADD__(v46, v47))
        {
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
          return result;
        }
        char v48 = v44;
        if (v135[3] >= result)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_10097CD24();
            uint64_t v10 = v135;
          }
        }
        else
        {
          sub_1009609B8(result, isUniquelyReferenced_nonNull_native);
          uint64_t v10 = v135;
          unint64_t v49 = sub_100955F50(v137, v28);
          if ((v48 & 1) != (v50 & 1))
          {
            return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          }
          unint64_t v45 = v49;
        }
        uint64_t v51 = *(void *)(v0 + 256);
        uint64_t v20 = v138;
        if (v48)
        {
          sub_10068EA54(v51, v10[7] + *(void *)(v129 + 72) * v45);
        }
        else
        {
          v10[(v45 >> 6) + 8] |= 1 << v45;
          uint64_t v52 = (uint64_t *)(v10[6] + 16 * v45);
          *uint64_t v52 = v137;
          v52[1] = v28;
          uint64_t result = sub_100A2A208(v51, v10[7] + *(void *)(v129 + 72) * v45);
          uint64_t v53 = v10[2];
          BOOL v54 = __OFADD__(v53, 1);
          uint64_t v55 = v53 + 1;
          if (v54) {
            goto LABEL_68;
          }
          v10[2] = v55;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v17 = v130;
      }
      uint64_t v16 = (uint64_t *)((char *)v16 + v131);
      uint64_t v11 = v20 - 1;
      if (!v11)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  *(void *)(v0 + 384) = v10;
  uint64_t v56 = *(void *)(v0 + 312);
  uint64_t v57 = *(void *)(v56 + 16);
  int64_t v58 = *(void *)(v57 + 16);
  NSString v59 = _swiftEmptyArrayStorage;
  if (v58)
  {
    uint64_t v60 = *(void *)(v0 + 216);
    uint64_t v61 = *(void *)(v0 + 224);
    uint64_t v62 = *(void *)(v0 + 184);
    uint64_t v63 = *(void *)(v0 + 160);
    uint64_t v139 = *(void *)(v0 + 152);
    v141 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1006BB544(0, v58, 0);
    uint64_t v64 = v57 + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80));
    uint64_t v65 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 48);
    uint64_t v134 = *(void *)(v63 + 72);
    do
    {
      uint64_t v66 = *(void *)(v0 + 272);
      uint64_t v67 = *(void *)(v0 + 208);
      uint64_t v68 = *(void *)(v0 + 168);
      sub_100FAEC5C(v64, v68, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
      sub_100522E9C(v68 + *(int *)(v139 + 20), v66, (uint64_t *)&unk_101674160);
      int v69 = (*v65)(v66, 1, v67);
      uint64_t v70 = *(void *)(v0 + 272);
      char v71 = *(void **)(v0 + 224);
      if (v69 == 1)
      {
        *char v71 = 0;
        *(void *)(v61 + 8) = 0xC000000000000000;
        UnknownStorage.init()();
        sub_100522F00(v70, (uint64_t *)&unk_101674160);
      }
      else
      {
        sub_100FAED24(*(void *)(v0 + 272), (uint64_t)v71, type metadata accessor for CRLProto_Data);
      }
      uint64_t v72 = *(uint64_t **)(v0 + 224);
      uint64_t v73 = *v72;
      unint64_t v74 = *(void *)(v61 + 8);
      sub_100510D4C(*v72, v74);
      sub_100FAECC4((uint64_t)v72, type metadata accessor for CRLProto_Data);
      UUID.init(crl_data:)(v73, v74);
      sub_100FAECC4(*(void *)(v0 + 168), type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
      NSString v59 = v141;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB544(0, *((void *)v141 + 2) + 1, 1);
        NSString v59 = v141;
      }
      unint64_t v76 = *((void *)v59 + 2);
      unint64_t v75 = *((void *)v59 + 3);
      if (v76 >= v75 >> 1)
      {
        sub_1006BB544(v75 > 1, v76 + 1, 1);
        NSString v59 = v141;
      }
      uint64_t v77 = *(void *)(v0 + 192);
      uint64_t v78 = *(void *)(v0 + 176);
      *((void *)v59 + 2) = v76 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v62 + 32))((unint64_t)v59+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(void *)(v62 + 72) * v76, v77, v78);
      v141 = v59;
      v64 += v134;
      --v58;
    }
    while (v58);
    swift_bridgeObjectRelease();
    uint64_t v56 = *(void *)(v0 + 312);
  }
  *(void *)(v0 + 392) = v59;
  uint64_t v79 = *(void *)(v56 + 32);
  *(void *)(v0 + 400) = v79;
  sub_100FAEC08();
  uint64_t v80 = Dictionary.init(minimumCapacity:)();
  uint64_t v81 = *(void *)(v79 + 16);
  *(void *)(v0 + 408) = v81;
  if (!v81)
  {
LABEL_56:
    uint64_t v102 = swift_bridgeObjectRetain();
    uint64_t v103 = sub_100FD2288(v102);
    uint64_t v104 = *(void *)(v0 + 384);
    uint64_t v105 = *(void *)(v0 + 392);
    uint64_t v106 = *(void *)(v0 + 360);
    unint64_t v107 = *(void *)(v0 + 368);
    uint64_t v108 = *(void *)(v0 + 328);
    unint64_t v109 = *(void *)(v0 + 336);
    v110 = *(unsigned int **)(v0 + 312);
    if ((v111 & 1) == 0)
    {
      uint64_t v140 = v103;
      v112 = *(uint64_t **)(v0 + 120);
      uint64_t v113 = swift_bridgeObjectRetain();
      uint64_t v136 = v105;
      uint64_t v124 = sub_100FD2288(v113);
      uint64_t v132 = v104;
      char v115 = v114;
      uint64_t v116 = swift_bridgeObjectRetain();
      uint64_t v117 = sub_100FD2288(v116);
      uint64_t v118 = 0x1000000000000;
      if ((v119 & 1) == 0) {
        uint64_t v118 = v117;
      }
      uint64_t v125 = v118;
      sub_100510084(v106, v107);
      sub_100510084(v108, v109);
      swift_release();
      if (v115) {
        uint64_t v120 = 0x2000400000000;
      }
      else {
        uint64_t v120 = v124;
      }
      uint64_t v121 = *((void *)v110 + 5);
      uint64_t v122 = *v110;
      sub_100FAECC4((uint64_t)v110, type metadata accessor for CRLProto_ObjectInfo);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t *v112 = v140;
      v112[1] = v120;
      v112[2] = v125;
      v112[3] = v121;
      v112[4] = v122;
      v112[5] = v80;
      v112[6] = v132;
      v112[7] = v136;
      uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1005F7CE8();
    swift_allocError();
    unsigned char *v123 = 11;
    swift_willThrow();
    sub_100510084(v108, v109);
    swift_release();
    sub_100510084(v106, v107);
    sub_100FAECC4((uint64_t)v110, type metadata accessor for CRLProto_ObjectInfo);
    swift_bridgeObjectRelease();
LABEL_3:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
LABEL_4:
    return v6();
  }
  uint64_t v82 = *(void *)(v0 + 136);
  int v83 = *(_DWORD *)(v82 + 80);
  *(_DWORD *)(v0 + 472) = v83;
  uint64_t v84 = *(void *)(v82 + 72);
  *(void *)(v0 + 416) = v84;
  swift_bridgeObjectRetain();
  uint64_t v85 = 0;
  while (1)
  {
    *(void *)(v0 + 424) = v80;
    *(void *)(v0 + 432) = v85;
    uint64_t v86 = *(uint64_t **)(v0 + 144);
    sub_100FAEC5C(*(void *)(v0 + 400) + ((v83 + 32) & ~(unint64_t)v83) + v84 * v85, (uint64_t)v86, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
    uint64_t v87 = *v86;
    uint64_t v88 = (void *)v86[1];
    swift_bridgeObjectRetain();
    v89._countAndFlagsBits = v87;
    v89._object = v88;
    unint64_t v90 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1015038E0, v89);
    uint64_t result = swift_bridgeObjectRelease();
    if (v90 < 5) {
      break;
    }
    if (qword_10166FA18 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v91 = (void *)static OS_os_log.crlSerializableObject;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v87;
    *(void *)(inited + 40) = v88;
    swift_bridgeObjectRetain();
    id v93 = v91;
    uint64_t v94 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v93, (uint64_t)&_mh_execute_header, v94, (uint64_t)"Skipping unknown entry type for the data dictionary of an object data representation. entryName=%@", 98, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v95 = *(void *)(v0 + 408);
    uint64_t v96 = *(void *)(v0 + 432) + 1;
    sub_100FAECC4(*(void *)(v0 + 144), type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
    if (v96 == v95)
    {
      swift_bridgeObjectRelease();
      goto LABEL_56;
    }
    uint64_t v85 = *(void *)(v0 + 432) + 1;
    uint64_t v84 = *(void *)(v0 + 416);
    LOBYTE(v83) = *(unsigned char *)(v0 + 472);
  }
  *(unsigned char *)(v0 + 476) = v90;
  uint64_t v97 = *(void *)(*(void *)(v0 + 144) + 16);
  if (v97 < 0) {
    goto LABEL_69;
  }
  uint64_t v98 = *(void *)(v0 + 128);
  uint64_t v99 = *(void *)(v98 + 24);
  if (__OFADD__(v99, v97)) {
    goto LABEL_70;
  }
  *(void *)(v98 + 24) = v99 + v97;
  uint64_t ObjectType = swift_getObjectType();
  v101 = (void *)swift_task_alloc();
  *(void *)(v0 + 440) = v101;
  void *v101 = v0;
  v101[1] = sub_100FAE168;
  return sub_1007797F4(v99, v97, 1, ObjectType);
}

uint64_t sub_100FAE044()
{
  uint64_t v1 = v0[41];
  unint64_t v2 = v0[42];
  swift_release();
  sub_100510084(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100FAE168(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (void *)*v3;
  v4[56] = a1;
  v4[57] = a2;
  v4[58] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_100FAE280;
  }
  else {
    uint64_t v5 = sub_100FAE424;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100FAE280()
{
  uint64_t v2 = v0[45];
  unint64_t v1 = v0[46];
  uint64_t v4 = v0[41];
  unint64_t v3 = v0[42];
  uint64_t v5 = v0[39];
  uint64_t v6 = v0[18];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100510084(v4, v3);
  swift_release();
  sub_100510084(v2, v1);
  sub_100FAECC4(v6, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
  sub_100FAECC4(v5, type metadata accessor for CRLProto_ObjectInfo);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100FAE424()
{
  uint64_t v1 = *(void *)(v0 + 424);
  unsigned __int8 v2 = *(unsigned char *)(v0 + 476);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v0 + 112) = v1;
  unint64_t v5 = sub_100956650(v2);
  uint64_t v6 = *(void *)(v1 + 16);
  BOOL v7 = (v4 & 1) == 0;
  uint64_t result = v6 + v7;
  if (__OFADD__(v6, v7))
  {
    __break(1u);
    goto LABEL_37;
  }
  char v9 = v4;
  if (*(void *)(*(void *)(v0 + 424) + 24) >= result)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t result = (uint64_t)sub_10097EB0C();
    }
  }
  else
  {
    unsigned __int8 v10 = *(unsigned char *)(v0 + 476);
    sub_10096418C(result, isUniquelyReferenced_nonNull_native);
    uint64_t result = sub_100956650(v10);
    if ((v9 & 1) != (v11 & 1))
    {
      return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    }
    unint64_t v5 = result;
  }
  uint64_t v12 = *(void **)(v0 + 112);
  uint64_t v14 = *(void *)(v0 + 448);
  uint64_t v13 = *(void *)(v0 + 456);
  if (v9)
  {
    uint64_t v15 = v12[7] + 16 * v5;
    sub_100510084(*(void *)v15, *(void *)(v15 + 8));
    *(void *)uint64_t v15 = v14;
    *(void *)(v15 + 8) = v13;
    goto LABEL_14;
  }
  char v16 = *(unsigned char *)(v0 + 476);
  v12[(v5 >> 6) + 8] |= 1 << v5;
  *(unsigned char *)(v12[6] + v5) = v16;
  uint64_t v17 = (void *)(v12[7] + 16 * v5);
  *uint64_t v17 = v14;
  v17[1] = v13;
  uint64_t v18 = v12[2];
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v12[2] = v20;
LABEL_14:
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v0 + 408);
  uint64_t v22 = *(void *)(v0 + 432) + 1;
  sub_100FAECC4(*(void *)(v0 + 144), type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
  if (v22 == v21)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = sub_100FD2288(v23);
    uint64_t v26 = *(void *)(v0 + 384);
    uint64_t v25 = *(void *)(v0 + 392);
    uint64_t v27 = *(void *)(v0 + 360);
    unint64_t v28 = *(void *)(v0 + 368);
    uint64_t v29 = *(void *)(v0 + 328);
    unint64_t v30 = *(void *)(v0 + 336);
    char v31 = *(unsigned int **)(v0 + 312);
    if (v32)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1005F7CE8();
      swift_allocError();
      *uint64_t v57 = 11;
      swift_willThrow();
      sub_100510084(v29, v30);
      swift_release();
      sub_100510084(v27, v28);
      sub_100FAECC4((uint64_t)v31, type metadata accessor for CRLProto_ObjectInfo);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      char v44 = *(uint64_t (**)(void))(v0 + 8);
    }
    else
    {
      uint64_t v33 = *(uint64_t **)(v0 + 120);
      uint64_t v67 = v24;
      uint64_t v34 = swift_bridgeObjectRetain();
      uint64_t v66 = v26;
      uint64_t v63 = sub_100FD2288(v34);
      uint64_t v65 = v25;
      char v36 = v35;
      uint64_t v37 = swift_bridgeObjectRetain();
      uint64_t v38 = sub_100FD2288(v37);
      uint64_t v39 = 0x1000000000000;
      if ((v40 & 1) == 0) {
        uint64_t v39 = v38;
      }
      uint64_t v64 = v39;
      sub_100510084(v27, v28);
      sub_100510084(v29, v30);
      swift_release();
      if (v36) {
        uint64_t v41 = 0x2000400000000;
      }
      else {
        uint64_t v41 = v63;
      }
      uint64_t v42 = *((void *)v31 + 5);
      uint64_t v43 = *v31;
      sub_100FAECC4((uint64_t)v31, type metadata accessor for CRLProto_ObjectInfo);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t *v33 = v67;
      v33[1] = v41;
      v33[2] = v64;
      v33[3] = v42;
      v33[4] = v43;
      v33[5] = (uint64_t)v12;
      v33[6] = v66;
      v33[7] = v65;
      char v44 = *(uint64_t (**)(void))(v0 + 8);
    }
    return v44();
  }
  while (1)
  {
    uint64_t v45 = *(void *)(v0 + 432) + 1;
    *(void *)(v0 + 424) = v12;
    *(void *)(v0 + 432) = v45;
    uint64_t v46 = *(uint64_t **)(v0 + 144);
    sub_100FAEC5C(*(void *)(v0 + 400)+ ((*(unsigned __int8 *)(v0 + 472) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 472))+ *(void *)(v0 + 416) * v45, (uint64_t)v46, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
    uint64_t v47 = *v46;
    char v48 = (void *)v46[1];
    swift_bridgeObjectRetain();
    v49._countAndFlagsBits = v47;
    v49._object = v48;
    unint64_t v50 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1015038E0, v49);
    uint64_t result = swift_bridgeObjectRelease();
    if (v50 < 5) {
      break;
    }
    if (qword_10166FA18 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v51 = (void *)static OS_os_log.crlSerializableObject;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v47;
    *(void *)(inited + 40) = v48;
    swift_bridgeObjectRetain();
    id v53 = v51;
    uint64_t v54 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v53, (uint64_t)&_mh_execute_header, v54, (uint64_t)"Skipping unknown entry type for the data dictionary of an object data representation. entryName=%@", 98, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v55 = *(void *)(v0 + 408);
    uint64_t v56 = *(void *)(v0 + 432) + 1;
    sub_100FAECC4(*(void *)(v0 + 144), type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
    if (v56 == v55) {
      goto LABEL_15;
    }
  }
  *(unsigned char *)(v0 + 476) = v50;
  uint64_t v58 = *(void *)(*(void *)(v0 + 144) + 16);
  if (v58 < 0) {
    goto LABEL_38;
  }
  uint64_t v59 = *(void *)(v0 + 128);
  uint64_t v60 = *(void *)(v59 + 24);
  if (__OFADD__(v60, v58))
  {
LABEL_39:
    __break(1u);
    return result;
  }
  *(void *)(v59 + 24) = v60 + v58;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v62 = (void *)swift_task_alloc();
  *(void *)(v0 + 440) = v62;
  void *v62 = v0;
  v62[1] = sub_100FAE168;
  return sub_1007797F4(v60, v58, 1, ObjectType);
}

uint64_t sub_100FAEB58()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100FAEB98()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100FAEBA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100FAEBB8()
{
  return swift_release();
}

uint64_t sub_100FAEBC0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100FAEC08()
{
  unint64_t result = qword_1016A43C8;
  if (!qword_1016A43C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A43C8);
  }
  return result;
}

uint64_t sub_100FAEC5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100FAECC4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100FAED24(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for CRLAnalyticsFastSyncSessionInvalidation()
{
  return self;
}

void sub_100FAEDB0()
{
  sub_100A39814((uint64_t)_swiftEmptyArrayStorage);
  NSString v0 = String._bridgeToObjectiveC()();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100973904((uint64_t)v0, 0xD000000000000019, 0x800000010129B6E0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  uint64_t v2 = self;
  NSString v3 = String._bridgeToObjectiveC()();
  sub_10057BCD8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 sendEventInDomain:v3 lazily:1 eventPayload:isa];
}

uint64_t sub_100FAEEDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[8];
  if (v2)
  {
    NSString v3 = *(void **)(*(void *)(v2 + 16) + 16);
    swift_beginAccess();
    uint64_t v4 = v0[2];
    id v5 = v3;
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_100950E28(v5, v4);
    swift_bridgeObjectRelease();
    if (v6)
    {
      swift_beginAccess();
      uint64_t v7 = v1[6];
      swift_bridgeObjectRetain();
      char v8 = sub_1006E5068(v5, v7);
      swift_bridgeObjectRelease();
      if (v8)
      {

        swift_release();
      }
      else
      {
        uint64_t v9 = sub_100EA4498();
        swift_release();

        if (v9)
        {
LABEL_7:
          v1[8] = v9;
          swift_retain();
LABEL_43:
          swift_release();
          return v9;
        }
      }
    }
    else
    {
    }
  }
  unsigned __int8 v10 = v1 + 3;
  char v11 = v1 + 2;
  swift_beginAccess();
  swift_beginAccess();
  swift_beginAccess();
  while (1)
  {
    if ((unint64_t)*v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v23) {
        goto LABEL_42;
      }
    }
    else if (!*(void *)((*v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_42;
    }
    uint64_t result = swift_beginAccess();
    if ((unint64_t)*v10 >> 62) {
      break;
    }
    if (!*(void *)((*v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_44;
    }
LABEL_15:
    uint64_t v13 = *v10;
    if ((unint64_t)*v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v25) {
        goto LABEL_45;
      }
    }
    else if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_45;
    }
    if ((v13 & 0xC000000000000001) != 0)
    {
      id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_46;
      }
      id v14 = *(id *)(v13 + 32);
    }
    uint64_t v15 = v14;
    if ((unint64_t)*v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v26)
      {
LABEL_41:
        __break(1u);
LABEL_42:
        uint64_t v9 = 0;
        v1[8] = 0;
        goto LABEL_43;
      }
    }
    else if (!*(void *)((*v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_41;
    }
    sub_100F4DEE0(0, 1);
    swift_endAccess();
    uint64_t v16 = *v11;
    if ((*v11 & 0xC000000000000001) != 0)
    {
      id v17 = v15;
      swift_bridgeObjectRetain();
      if (!__CocoaDictionary.lookup(_:)()) {
        goto LABEL_9;
      }
      type metadata accessor for CRLSyncRecordGroup();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v18 = v27;
      swift_unknownObjectRelease();
    }
    else
    {
      if (!*(void *)(v16 + 16)) {
        goto LABEL_10;
      }
      id v17 = v15;
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_100956E24((uint64_t)v17);
      if ((v20 & 1) == 0)
      {
LABEL_9:

        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
      uint64_t v18 = *(void *)(*(void *)(v16 + 56) + 8 * v19);
      swift_retain();
    }

    swift_bridgeObjectRelease();
    if (v18)
    {
      uint64_t v21 = v1[6];
      swift_bridgeObjectRetain();
      char v22 = sub_1006E5068(v15, v21);
      swift_bridgeObjectRelease();
      if (v22)
      {

        swift_release();
      }
      else
      {
        uint64_t v9 = sub_100EA4498();
        swift_release();

        if (v9) {
          goto LABEL_7;
        }
      }
    }
    else
    {
LABEL_10:
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v24) {
    goto LABEL_15;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_100FAF328()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLSyncControllerSaveTask()
{
  return self;
}

uint64_t sub_100FAF3A4(unint64_t a1)
{
  unint64_t v2 = a1;
  *(void *)(v1 + 16) = _swiftEmptyDictionarySingleton;
  NSString v3 = (uint64_t *)(v1 + 16);
  *(void *)(v1 + 24) = _swiftEmptyArrayStorage;
  uint64_t v4 = (void *)(v1 + 24);
  *(unsigned char *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = &_swiftEmptySetSingleton;
  *(void *)(v1 + 48) = &_swiftEmptySetSingleton;
  *(_WORD *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = 0;
  if (a1 >> 62)
  {
LABEL_33:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
    return v32;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5) {
    return v32;
  }
LABEL_3:
  unint64_t v34 = v2;
  unint64_t v35 = v2 & 0xC000000000000001;
  uint64_t v6 = 4;
  uint64_t v33 = v5;
  while (1)
  {
    uint64_t v7 = v6 - 4;
    if (v35)
    {
      uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v7, 1)) {
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v8 = *(void *)(v2 + 8 * v6);
      swift_retain();
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v7, 1))
      {
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
    }
    unsigned __int8 v10 = *(void **)(v8 + 16);
    swift_beginAccess();
    uint64_t v11 = *v3;
    if ((*v3 & 0xC000000000000001) != 0)
    {
      if (v11 >= 0) {
        v11 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      id v12 = v10;
      swift_retain();
      uint64_t v13 = __CocoaDictionary.count.getter();
      if (__OFADD__(v13, 1)) {
        goto LABEL_31;
      }
      *NSString v3 = sub_1009EC9BC(v11, v13 + 1);
    }
    else
    {
      id v14 = v10;
      swift_retain();
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v3;
    char v36 = (void *)*v3;
    *NSString v3 = 0x8000000000000000;
    unint64_t v18 = sub_100956E24((uint64_t)v10);
    uint64_t v19 = *(void *)(v16 + 16);
    BOOL v20 = (v17 & 1) == 0;
    uint64_t v21 = v19 + v20;
    if (__OFADD__(v19, v20)) {
      goto LABEL_30;
    }
    unint64_t v2 = v17;
    if (*(void *)(v16 + 24) < v21) {
      break;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_100981B2C();
    }
LABEL_21:
    if (v2)
    {
      uint64_t v24 = v36[7];
      swift_release();
      *(void *)(v24 + 8 * v18) = v8;
    }
    else
    {
      v36[(v18 >> 6) + 8] |= 1 << v18;
      *(void *)(v36[6] + 8 * v18) = v10;
      *(void *)(v36[7] + 8 * v18) = v8;
      uint64_t v25 = v36[2];
      BOOL v26 = __OFADD__(v25, 1);
      uint64_t v27 = v25 + 1;
      if (v26) {
        goto LABEL_32;
      }
      v36[2] = v27;
      id v28 = v10;
    }
    *NSString v3 = (uint64_t)v36;

    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v29 = *(void **)(v8 + 16);
    swift_beginAccess();
    id v30 = v29;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    unint64_t v2 = v34;
    if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    swift_release();
    ++v6;
    if (v9 == v33) {
      return v32;
    }
  }
  sub_10096A294(v21, isUniquelyReferenced_nonNull_native);
  unint64_t v22 = sub_100956E24((uint64_t)v10);
  if ((v2 & 1) == (v23 & 1))
  {
    unint64_t v18 = v22;
    goto LABEL_21;
  }
  sub_100FAF6E0();
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

unint64_t sub_100FAF6E0()
{
  unint64_t result = qword_101674210;
  if (!qword_101674210)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101674210);
  }
  return result;
}

uint64_t destroy for CRLWPStickyNotePresetData(uint64_t a1)
{
  if (*(void *)(a1 + 96))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 144))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 200))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 328))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 424))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 520))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 576))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  int v2 = *(unsigned __int8 *)(a1 + 616);
  if (v2 != 255) {
    sub_10051ACA0(*(void *)(a1 + 600), *(void *)(a1 + 608), v2 & 1);
  }
  if (*(void *)(a1 + 760))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CRLWPStickyNotePresetData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 96);
  if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    *(void *)(a1 + 36) = *(void *)(a2 + 36);
    *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v4;
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
    uint64_t v6 = (_OWORD *)(a2 + 144);
    uint64_t v5 = *(void *)(a2 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v5)
    {
      *(void *)(a1 + 144) = v5;
      *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 144) = *v6;
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
    }
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    uint64_t v14 = *(void *)(a2 + 200);
    swift_bridgeObjectRetain();
    if (v14)
    {
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = v14;
      *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
      *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v15 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v15;
    }
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v7;
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    long long v8 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v8;
    long long v9 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v9;
    long long v10 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v10;
    long long v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v11;
    long long v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    long long v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
  }
  uint64_t v16 = (void *)(a1 + 232);
  unint64_t v17 = (void *)(a2 + 232);
  uint64_t v18 = *(void *)(a2 + 328);
  if (v18)
  {
    *uint64_t v16 = *v17;
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
    *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
    *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    *(void *)(a1 + 328) = v18;
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v19 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v19;
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    long long v20 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(_OWORD *)(a1 + 248) = v20;
    long long v21 = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 280) = v21;
  }
  unint64_t v22 = (_DWORD *)(a1 + 344);
  char v23 = (_DWORD *)(a2 + 344);
  uint64_t v24 = *(void *)(a2 + 424);
  if (v24)
  {
    _DWORD *v22 = *v23;
    *(unsigned char *)(a1 + 348) = *(unsigned char *)(a2 + 348);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    *(unsigned char *)(a1 + 360) = *(unsigned char *)(a2 + 360);
    *(_DWORD *)(a1 + 364) = *(_DWORD *)(a2 + 364);
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    *(void *)(a1 + 376) = *(void *)(a2 + 376);
    *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
    *(void *)(a1 + 400) = *(void *)(a2 + 400);
    *(_DWORD *)(a1 + 408) = *(_DWORD *)(a2 + 408);
    *(void *)(a1 + 416) = *(void *)(a2 + 416);
    *(void *)(a1 + 424) = v24;
    *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
    *(_DWORD *)(a1 + 448) = *(_DWORD *)(a2 + 448);
    uint64_t v25 = *(void *)(a2 + 464);
    *(void *)(a1 + 456) = *(void *)(a2 + 456);
    *(void *)(a1 + 464) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v26 = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 424) = v26;
    long long v27 = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 456) = v27;
    long long v28 = *(_OWORD *)(a2 + 360);
    *(_OWORD *)unint64_t v22 = *(_OWORD *)v23;
    *(_OWORD *)(a1 + 360) = v28;
    long long v29 = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 392) = v29;
  }
  *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
  uint64_t v30 = *(void *)(a2 + 520);
  if (v30)
  {
    uint64_t v31 = *(void *)(a2 + 488);
    *(void *)(a1 + 480) = *(void *)(a2 + 480);
    *(void *)(a1 + 488) = v31;
    *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
    *(void *)(a1 + 500) = *(void *)(a2 + 500);
    *(unsigned char *)(a1 + 508) = *(unsigned char *)(a2 + 508);
    *(void *)(a1 + 512) = *(void *)(a2 + 512);
    *(void *)(a1 + 520) = v30;
    *(void *)(a1 + 528) = *(void *)(a2 + 528);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v32 = *(void *)(a2 + 576);
    if (v32)
    {
LABEL_18:
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      *(void *)(a1 + 544) = *(void *)(a2 + 544);
      *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
      *(void *)(a1 + 556) = *(void *)(a2 + 556);
      *(unsigned char *)(a1 + 564) = *(unsigned char *)(a2 + 564);
      *(void *)(a1 + 568) = *(void *)(a2 + 568);
      *(void *)(a1 + 576) = v32;
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_21;
    }
  }
  else
  {
    long long v33 = *(_OWORD *)(a2 + 496);
    *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 496) = v33;
    *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
    *(void *)(a1 + 528) = *(void *)(a2 + 528);
    uint64_t v32 = *(void *)(a2 + 576);
    if (v32) {
      goto LABEL_18;
    }
  }
  long long v34 = *(_OWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
  *(_OWORD *)(a1 + 552) = v34;
  *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
LABEL_21:
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  int v35 = *(unsigned __int8 *)(a2 + 616);
  swift_bridgeObjectRetain();
  if (v35 == 255)
  {
    *(_OWORD *)(a1 + 600) = *(_OWORD *)(a2 + 600);
    *(unsigned char *)(a1 + 616) = *(unsigned char *)(a2 + 616);
  }
  else
  {
    char v36 = v35 & 1;
    uint64_t v37 = *(void *)(a2 + 600);
    unint64_t v38 = *(void *)(a2 + 608);
    sub_10051B3C8(v37, v38, v36);
    *(void *)(a1 + 600) = v37;
    *(void *)(a1 + 608) = v38;
    *(unsigned char *)(a1 + 616) = v36;
  }
  *(_DWORD *)(a1 + 620) = *(_DWORD *)(a2 + 620);
  *(unsigned char *)(a1 + 624) = *(unsigned char *)(a2 + 624);
  *(_WORD *)(a1 + 625) = *(_WORD *)(a2 + 625);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(unsigned char *)(a1 + 640) = *(unsigned char *)(a2 + 640);
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  *(unsigned char *)(a1 + 656) = *(unsigned char *)(a2 + 656);
  uint64_t v39 = (void *)(a1 + 664);
  char v40 = (void *)(a2 + 664);
  uint64_t v41 = *(void *)(a2 + 760);
  if (v41)
  {
    *uint64_t v39 = *v40;
    *(unsigned char *)(a1 + 672) = *(unsigned char *)(a2 + 672);
    *(_DWORD *)(a1 + 680) = *(_DWORD *)(a2 + 680);
    *(unsigned char *)(a1 + 684) = *(unsigned char *)(a2 + 684);
    *(void *)(a1 + 688) = *(void *)(a2 + 688);
    *(unsigned char *)(a1 + 696) = *(unsigned char *)(a2 + 696);
    *(_DWORD *)(a1 + 700) = *(_DWORD *)(a2 + 700);
    *(void *)(a1 + 704) = *(void *)(a2 + 704);
    *(void *)(a1 + 712) = *(void *)(a2 + 712);
    *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
    *(void *)(a1 + 736) = *(void *)(a2 + 736);
    *(_DWORD *)(a1 + 744) = *(_DWORD *)(a2 + 744);
    *(void *)(a1 + 752) = *(void *)(a2 + 752);
    *(void *)(a1 + 760) = v41;
    *(void *)(a1 + 768) = *(void *)(a2 + 768);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v42 = *(_OWORD *)(a2 + 744);
    *(_OWORD *)(a1 + 728) = *(_OWORD *)(a2 + 728);
    *(_OWORD *)(a1 + 744) = v42;
    *(_OWORD *)(a1 + 760) = *(_OWORD *)(a2 + 760);
    long long v43 = *(_OWORD *)(a2 + 680);
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    *(_OWORD *)(a1 + 680) = v43;
    long long v44 = *(_OWORD *)(a2 + 712);
    *(_OWORD *)(a1 + 696) = *(_OWORD *)(a2 + 696);
    *(_OWORD *)(a1 + 712) = v44;
  }
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  *(unsigned char *)(a1 + 784) = *(unsigned char *)(a2 + 784);
  *(void *)(a1 + 792) = *(void *)(a2 + 792);
  *(unsigned char *)(a1 + 800) = *(unsigned char *)(a2 + 800);
  *(void *)(a1 + 808) = *(void *)(a2 + 808);
  *(unsigned char *)(a1 + 816) = *(unsigned char *)(a2 + 816);
  *(unsigned char *)(a1 + 832) = *(unsigned char *)(a2 + 832);
  *(void *)(a1 + 824) = *(void *)(a2 + 824);
  *(void *)(a1 + 840) = *(void *)(a2 + 840);
  *(_DWORD *)(a1 + 848) = *(_DWORD *)(a2 + 848);
  *(unsigned char *)(a1 + 864) = *(unsigned char *)(a2 + 864);
  *(void *)(a1 + 856) = *(void *)(a2 + 856);
  *(void *)(a1 + 872) = *(void *)(a2 + 872);
  *(void *)(a1 + 880) = *(void *)(a2 + 880);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLWPStickyNotePresetData(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = a2[12];
  if (*(void *)(a1 + 96))
  {
    if (v4)
    {
      uint64_t v5 = *a2;
      *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
      *(void *)a1 = v5;
      LODWORD(v5) = *((_DWORD *)a2 + 4);
      *(unsigned char *)(a1 + 20) = *((unsigned char *)a2 + 20);
      *(_DWORD *)(a1 + 16) = v5;
      uint64_t v6 = a2[3];
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      *(void *)(a1 + 24) = v6;
      *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
      *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
      *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
      *(void *)(a1 + 48) = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
      *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
      *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
      *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
      *(void *)(a1 + 72) = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
      *(void *)(a1 + 88) = a2[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      long long v7 = (_OWORD *)(a1 + 144);
      uint64_t v8 = *(void *)(a1 + 144);
      *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
      uint64_t v9 = a2[14];
      *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
      *(void *)(a1 + 112) = v9;
      uint64_t v10 = a2[16];
      *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
      *(void *)(a1 + 128) = v10;
      *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
      long long v12 = a2 + 18;
      uint64_t v11 = a2[18];
      if (v8)
      {
        if (v11)
        {
          *(void *)(a1 + 144) = v11;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
          *(void *)(a1 + 160) = a2[20];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_100A19AFC(a1 + 144);
          uint64_t v41 = a2[20];
          *long long v7 = *v12;
          *(void *)(a1 + 160) = v41;
        }
      }
      else if (v11)
      {
        *(void *)(a1 + 144) = v11;
        *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
        *(void *)(a1 + 160) = a2[20];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v46 = *v12;
        *(void *)(a1 + 160) = a2[20];
        *long long v7 = v46;
      }
      uint64_t v47 = a2[21];
      *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
      *(void *)(a1 + 168) = v47;
      *(void *)(a1 + 184) = a2[23];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      char v48 = (_OWORD *)(a1 + 192);
      Swift::String v49 = a2 + 24;
      uint64_t v50 = a2[25];
      if (*(void *)(a1 + 200))
      {
        if (v50)
        {
          *(void *)(a1 + 192) = a2[24];
          *(void *)(a1 + 200) = a2[25];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
          *(unsigned char *)(a1 + 212) = *((unsigned char *)a2 + 212);
          *(void *)(a1 + 216) = a2[27];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_100A19B30(a1 + 192);
          long long v51 = *((_OWORD *)a2 + 13);
          *char v48 = *v49;
          *(_OWORD *)(a1 + 208) = v51;
        }
      }
      else if (v50)
      {
        *(void *)(a1 + 192) = a2[24];
        *(void *)(a1 + 200) = a2[25];
        *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
        *(unsigned char *)(a1 + 212) = *((unsigned char *)a2 + 212);
        *(void *)(a1 + 216) = a2[27];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v52 = *((_OWORD *)a2 + 13);
        *char v48 = *v49;
        *(_OWORD *)(a1 + 208) = v52;
      }
      *(void *)(a1 + 224) = a2[28];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100B409D8(a1);
      long long v20 = *((_OWORD *)a2 + 1);
      long long v19 = *((_OWORD *)a2 + 2);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v20;
      *(_OWORD *)(a1 + 32) = v19;
      long long v21 = *((_OWORD *)a2 + 6);
      long long v23 = *((_OWORD *)a2 + 3);
      long long v22 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v21;
      *(_OWORD *)(a1 + 48) = v23;
      *(_OWORD *)(a1 + 64) = v22;
      long long v24 = *((_OWORD *)a2 + 10);
      long long v26 = *((_OWORD *)a2 + 7);
      long long v25 = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 160) = v24;
      *(_OWORD *)(a1 + 112) = v26;
      *(_OWORD *)(a1 + 128) = v25;
      long long v28 = *((_OWORD *)a2 + 12);
      long long v27 = *((_OWORD *)a2 + 13);
      long long v29 = *((_OWORD *)a2 + 11);
      *(void *)(a1 + 224) = a2[28];
      *(_OWORD *)(a1 + 192) = v28;
      *(_OWORD *)(a1 + 208) = v27;
      *(_OWORD *)(a1 + 176) = v29;
    }
  }
  else if (v4)
  {
    uint64_t v13 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)a1 = v13;
    LODWORD(v13) = *((_DWORD *)a2 + 4);
    *(unsigned char *)(a1 + 20) = *((unsigned char *)a2 + 20);
    *(_DWORD *)(a1 + 16) = v13;
    uint64_t v14 = a2[3];
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(void *)(a1 + 24) = v14;
    *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
    *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
    *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
    *(void *)(a1 + 48) = a2[6];
    *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
    *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
    *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(void *)(a1 + 72) = a2[9];
    *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = a2[12];
    *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
    uint64_t v15 = a2[14];
    *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
    *(void *)(a1 + 112) = v15;
    uint64_t v16 = a2[16];
    *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
    *(void *)(a1 + 128) = v16;
    *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
    uint64_t v18 = (long long *)(a2 + 18);
    uint64_t v17 = a2[18];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17)
    {
      *(void *)(a1 + 144) = v17;
      *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
      *(void *)(a1 + 160) = a2[20];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v42 = *v18;
      *(void *)(a1 + 160) = a2[20];
      *(_OWORD *)(a1 + 144) = v42;
    }
    uint64_t v43 = a2[21];
    *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
    *(void *)(a1 + 168) = v43;
    *(void *)(a1 + 184) = a2[23];
    uint64_t v44 = a2[25];
    swift_bridgeObjectRetain();
    if (v44)
    {
      *(void *)(a1 + 192) = a2[24];
      *(void *)(a1 + 200) = a2[25];
      *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
      *(unsigned char *)(a1 + 212) = *((unsigned char *)a2 + 212);
      *(void *)(a1 + 216) = a2[27];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v45 = *((_OWORD *)a2 + 13);
      *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
      *(_OWORD *)(a1 + 208) = v45;
    }
    *(void *)(a1 + 224) = a2[28];
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v30 = *(_OWORD *)a2;
    long long v31 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v31;
    *(_OWORD *)a1 = v30;
    long long v32 = *((_OWORD *)a2 + 3);
    long long v33 = *((_OWORD *)a2 + 4);
    long long v34 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v34;
    *(_OWORD *)(a1 + 48) = v32;
    *(_OWORD *)(a1 + 64) = v33;
    long long v35 = *((_OWORD *)a2 + 7);
    long long v36 = *((_OWORD *)a2 + 8);
    long long v37 = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 160) = v37;
    *(_OWORD *)(a1 + 112) = v35;
    *(_OWORD *)(a1 + 128) = v36;
    long long v38 = *((_OWORD *)a2 + 11);
    long long v39 = *((_OWORD *)a2 + 12);
    long long v40 = *((_OWORD *)a2 + 13);
    *(void *)(a1 + 224) = a2[28];
    *(_OWORD *)(a1 + 192) = v39;
    *(_OWORD *)(a1 + 208) = v40;
    *(_OWORD *)(a1 + 176) = v38;
  }
  id v53 = (void *)(a1 + 232);
  uint64_t v54 = a2 + 29;
  uint64_t v55 = a2[41];
  if (*(void *)(a1 + 328))
  {
    if (v55)
    {
      uint64_t v56 = *v54;
      *(unsigned char *)(a1 + 240) = *((unsigned char *)a2 + 240);
      *id v53 = v56;
      LODWORD(v56) = *((_DWORD *)a2 + 62);
      *(unsigned char *)(a1 + 252) = *((unsigned char *)a2 + 252);
      *(_DWORD *)(a1 + 248) = v56;
      uint64_t v57 = a2[32];
      *(unsigned char *)(a1 + 264) = *((unsigned char *)a2 + 264);
      *(void *)(a1 + 256) = v57;
      *(_DWORD *)(a1 + 268) = *((_DWORD *)a2 + 67);
      *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
      *(_DWORD *)(a1 + 276) = *((_DWORD *)a2 + 69);
      *(void *)(a1 + 280) = a2[35];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 288) = *((_DWORD *)a2 + 72);
      *(_DWORD *)(a1 + 292) = *((_DWORD *)a2 + 73);
      *(_DWORD *)(a1 + 296) = *((_DWORD *)a2 + 74);
      *(_DWORD *)(a1 + 300) = *((_DWORD *)a2 + 75);
      *(void *)(a1 + 304) = a2[38];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 312) = *((_DWORD *)a2 + 78);
      *(void *)(a1 + 320) = a2[40];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 328) = a2[41];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 336) = a2[42];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1008EB164(a1 + 232);
      long long v61 = *(_OWORD *)(a2 + 31);
      long long v60 = *(_OWORD *)(a2 + 33);
      *(_OWORD *)id v53 = *(_OWORD *)v54;
      *(_OWORD *)(a1 + 248) = v61;
      *(_OWORD *)(a1 + 264) = v60;
      long long v62 = *(_OWORD *)(a2 + 41);
      long long v64 = *(_OWORD *)(a2 + 35);
      long long v63 = *(_OWORD *)(a2 + 37);
      *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 39);
      *(_OWORD *)(a1 + 328) = v62;
      *(_OWORD *)(a1 + 280) = v64;
      *(_OWORD *)(a1 + 296) = v63;
    }
  }
  else if (v55)
  {
    uint64_t v58 = *v54;
    *(unsigned char *)(a1 + 240) = *((unsigned char *)a2 + 240);
    *id v53 = v58;
    LODWORD(v58) = *((_DWORD *)a2 + 62);
    *(unsigned char *)(a1 + 252) = *((unsigned char *)a2 + 252);
    *(_DWORD *)(a1 + 248) = v58;
    uint64_t v59 = a2[32];
    *(unsigned char *)(a1 + 264) = *((unsigned char *)a2 + 264);
    *(void *)(a1 + 256) = v59;
    *(_DWORD *)(a1 + 268) = *((_DWORD *)a2 + 67);
    *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
    *(_DWORD *)(a1 + 276) = *((_DWORD *)a2 + 69);
    *(void *)(a1 + 280) = a2[35];
    *(_DWORD *)(a1 + 288) = *((_DWORD *)a2 + 72);
    *(_DWORD *)(a1 + 292) = *((_DWORD *)a2 + 73);
    *(_DWORD *)(a1 + 296) = *((_DWORD *)a2 + 74);
    *(_DWORD *)(a1 + 300) = *((_DWORD *)a2 + 75);
    *(void *)(a1 + 304) = a2[38];
    *(_DWORD *)(a1 + 312) = *((_DWORD *)a2 + 78);
    *(void *)(a1 + 320) = a2[40];
    *(void *)(a1 + 328) = a2[41];
    *(void *)(a1 + 336) = a2[42];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v65 = *(_OWORD *)v54;
    long long v66 = *(_OWORD *)(a2 + 33);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 31);
    *(_OWORD *)(a1 + 264) = v66;
    *(_OWORD *)id v53 = v65;
    long long v67 = *(_OWORD *)(a2 + 35);
    long long v68 = *(_OWORD *)(a2 + 37);
    long long v69 = *(_OWORD *)(a2 + 41);
    *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 39);
    *(_OWORD *)(a1 + 328) = v69;
    *(_OWORD *)(a1 + 280) = v67;
    *(_OWORD *)(a1 + 296) = v68;
  }
  uint64_t v70 = (_DWORD *)(a1 + 344);
  char v71 = (int *)(a2 + 43);
  uint64_t v72 = a2[53];
  if (*(void *)(a1 + 424))
  {
    if (v72)
    {
      int v73 = *v71;
      *(unsigned char *)(a1 + 348) = *((unsigned char *)a2 + 348);
      _DWORD *v70 = v73;
      uint64_t v74 = a2[44];
      *(unsigned char *)(a1 + 360) = *((unsigned char *)a2 + 360);
      *(void *)(a1 + 352) = v74;
      *(_DWORD *)(a1 + 364) = *((_DWORD *)a2 + 91);
      *(_DWORD *)(a1 + 368) = *((_DWORD *)a2 + 92);
      *(_DWORD *)(a1 + 372) = *((_DWORD *)a2 + 93);
      *(void *)(a1 + 376) = a2[47];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 384) = *((_DWORD *)a2 + 96);
      *(_DWORD *)(a1 + 388) = *((_DWORD *)a2 + 97);
      *(_DWORD *)(a1 + 392) = *((_DWORD *)a2 + 98);
      *(_DWORD *)(a1 + 396) = *((_DWORD *)a2 + 99);
      *(void *)(a1 + 400) = a2[50];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 408) = *((_DWORD *)a2 + 102);
      *(void *)(a1 + 416) = a2[52];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 424) = a2[53];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 432) = *((_DWORD *)a2 + 108);
      *(_DWORD *)(a1 + 436) = *((_DWORD *)a2 + 109);
      *(_DWORD *)(a1 + 440) = *((_DWORD *)a2 + 110);
      *(_DWORD *)(a1 + 444) = *((_DWORD *)a2 + 111);
      *(_DWORD *)(a1 + 448) = *((_DWORD *)a2 + 112);
      *(void *)(a1 + 456) = a2[57];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 464) = a2[58];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100B40A2C(a1 + 344);
      long long v77 = *(_OWORD *)(a2 + 49);
      long long v79 = *(_OWORD *)v71;
      long long v78 = *(_OWORD *)(a2 + 45);
      *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 47);
      *(_OWORD *)(a1 + 392) = v77;
      *(_OWORD *)uint64_t v70 = v79;
      *(_OWORD *)(a1 + 360) = v78;
      long long v80 = *(_OWORD *)(a2 + 57);
      long long v82 = *(_OWORD *)(a2 + 51);
      long long v81 = *(_OWORD *)(a2 + 53);
      *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 55);
      *(_OWORD *)(a1 + 456) = v80;
      *(_OWORD *)(a1 + 408) = v82;
      *(_OWORD *)(a1 + 424) = v81;
    }
  }
  else if (v72)
  {
    int v75 = *v71;
    *(unsigned char *)(a1 + 348) = *((unsigned char *)a2 + 348);
    _DWORD *v70 = v75;
    uint64_t v76 = a2[44];
    *(unsigned char *)(a1 + 360) = *((unsigned char *)a2 + 360);
    *(void *)(a1 + 352) = v76;
    *(_DWORD *)(a1 + 364) = *((_DWORD *)a2 + 91);
    *(_DWORD *)(a1 + 368) = *((_DWORD *)a2 + 92);
    *(_DWORD *)(a1 + 372) = *((_DWORD *)a2 + 93);
    *(void *)(a1 + 376) = a2[47];
    *(_DWORD *)(a1 + 384) = *((_DWORD *)a2 + 96);
    *(_DWORD *)(a1 + 388) = *((_DWORD *)a2 + 97);
    *(_DWORD *)(a1 + 392) = *((_DWORD *)a2 + 98);
    *(_DWORD *)(a1 + 396) = *((_DWORD *)a2 + 99);
    *(void *)(a1 + 400) = a2[50];
    *(_DWORD *)(a1 + 408) = *((_DWORD *)a2 + 102);
    *(void *)(a1 + 416) = a2[52];
    *(void *)(a1 + 424) = a2[53];
    *(_DWORD *)(a1 + 432) = *((_DWORD *)a2 + 108);
    *(_DWORD *)(a1 + 436) = *((_DWORD *)a2 + 109);
    *(_DWORD *)(a1 + 440) = *((_DWORD *)a2 + 110);
    *(_DWORD *)(a1 + 444) = *((_DWORD *)a2 + 111);
    *(_DWORD *)(a1 + 448) = *((_DWORD *)a2 + 112);
    *(void *)(a1 + 456) = a2[57];
    *(void *)(a1 + 464) = a2[58];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v83 = *(_OWORD *)v71;
    long long v84 = *(_OWORD *)(a2 + 45);
    long long v85 = *(_OWORD *)(a2 + 49);
    *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 47);
    *(_OWORD *)(a1 + 392) = v85;
    *(_OWORD *)uint64_t v70 = v83;
    *(_OWORD *)(a1 + 360) = v84;
    long long v86 = *(_OWORD *)(a2 + 51);
    long long v87 = *(_OWORD *)(a2 + 53);
    long long v88 = *(_OWORD *)(a2 + 57);
    *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 55);
    *(_OWORD *)(a1 + 456) = v88;
    *(_OWORD *)(a1 + 408) = v86;
    *(_OWORD *)(a1 + 424) = v87;
  }
  *(unsigned char *)(a1 + 472) = *((unsigned char *)a2 + 472);
  Swift::String v89 = (_OWORD *)(a1 + 480);
  unint64_t v90 = (long long *)(a2 + 60);
  uint64_t v91 = a2[65];
  if (*(void *)(a1 + 520))
  {
    if (v91)
    {
      *(void *)(a1 + 480) = a2[60];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v92 = a2[61];
      *(unsigned char *)(a1 + 496) = *((unsigned char *)a2 + 496);
      *(void *)(a1 + 488) = v92;
      *(_DWORD *)(a1 + 500) = *((_DWORD *)a2 + 125);
      *(_DWORD *)(a1 + 504) = *((_DWORD *)a2 + 126);
      *(unsigned char *)(a1 + 508) = *((unsigned char *)a2 + 508);
      *(void *)(a1 + 512) = a2[64];
      *(void *)(a1 + 520) = a2[65];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 528) = a2[66];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100EBF468(a1 + 480);
      long long v95 = *((_OWORD *)a2 + 31);
      long long v94 = *((_OWORD *)a2 + 32);
      long long v96 = *v90;
      *(void *)(a1 + 528) = a2[66];
      *(_OWORD *)(a1 + 496) = v95;
      *(_OWORD *)(a1 + 512) = v94;
      *Swift::String v89 = v96;
    }
  }
  else if (v91)
  {
    *(void *)(a1 + 480) = a2[60];
    uint64_t v93 = a2[61];
    *(unsigned char *)(a1 + 496) = *((unsigned char *)a2 + 496);
    *(void *)(a1 + 488) = v93;
    *(void *)(a1 + 500) = *(uint64_t *)((char *)a2 + 500);
    *(unsigned char *)(a1 + 508) = *((unsigned char *)a2 + 508);
    *(void *)(a1 + 512) = a2[64];
    *(void *)(a1 + 520) = a2[65];
    *(void *)(a1 + 528) = a2[66];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v97 = *v90;
    long long v98 = *((_OWORD *)a2 + 31);
    long long v99 = *((_OWORD *)a2 + 32);
    *(void *)(a1 + 528) = a2[66];
    *(_OWORD *)(a1 + 496) = v98;
    *(_OWORD *)(a1 + 512) = v99;
    *Swift::String v89 = v97;
  }
  uint64_t v100 = (_OWORD *)(a1 + 536);
  v101 = (long long *)(a2 + 67);
  uint64_t v102 = a2[72];
  if (*(void *)(a1 + 576))
  {
    if (v102)
    {
      *(void *)(a1 + 536) = a2[67];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v103 = a2[68];
      *(unsigned char *)(a1 + 552) = *((unsigned char *)a2 + 552);
      *(void *)(a1 + 544) = v103;
      *(_DWORD *)(a1 + 556) = *((_DWORD *)a2 + 139);
      *(_DWORD *)(a1 + 560) = *((_DWORD *)a2 + 140);
      *(unsigned char *)(a1 + 564) = *((unsigned char *)a2 + 564);
      *(void *)(a1 + 568) = a2[71];
      *(void *)(a1 + 576) = a2[72];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 584) = a2[73];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100EBF468(a1 + 536);
      long long v106 = *(_OWORD *)(a2 + 69);
      long long v105 = *(_OWORD *)(a2 + 71);
      long long v107 = *v101;
      *(void *)(a1 + 584) = a2[73];
      *(_OWORD *)(a1 + 552) = v106;
      *(_OWORD *)(a1 + 568) = v105;
      *uint64_t v100 = v107;
    }
  }
  else if (v102)
  {
    *(void *)(a1 + 536) = a2[67];
    uint64_t v104 = a2[68];
    *(unsigned char *)(a1 + 552) = *((unsigned char *)a2 + 552);
    *(void *)(a1 + 544) = v104;
    *(void *)(a1 + 556) = *(uint64_t *)((char *)a2 + 556);
    *(unsigned char *)(a1 + 564) = *((unsigned char *)a2 + 564);
    *(void *)(a1 + 568) = a2[71];
    *(void *)(a1 + 576) = a2[72];
    *(void *)(a1 + 584) = a2[73];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v108 = *v101;
    long long v109 = *(_OWORD *)(a2 + 69);
    long long v110 = *(_OWORD *)(a2 + 71);
    *(void *)(a1 + 584) = a2[73];
    *(_OWORD *)(a1 + 552) = v109;
    *(_OWORD *)(a1 + 568) = v110;
    *uint64_t v100 = v108;
  }
  *(void *)(a1 + 592) = a2[74];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v111 = (long long *)(a1 + 600);
  v112 = (long long *)(a2 + 75);
  int v113 = *((unsigned __int8 *)a2 + 616);
  if (*(unsigned __int8 *)(a1 + 616) == 255)
  {
    if (v113 == 255)
    {
      long long v115 = *v112;
      *(unsigned char *)(a1 + 616) = *((unsigned char *)a2 + 616);
      *char v111 = v115;
    }
    else
    {
      char v122 = v113 & 1;
      uint64_t v123 = a2[75];
      unint64_t v124 = a2[76];
      sub_10051B3C8(v123, v124, v113 & 1);
      *(void *)(a1 + 600) = v123;
      *(void *)(a1 + 608) = v124;
      *(unsigned char *)(a1 + 616) = v122;
    }
  }
  else if (v113 == 255)
  {
    sub_1008EB104(a1 + 600);
    char v114 = *((unsigned char *)a2 + 616);
    *char v111 = *v112;
    *(unsigned char *)(a1 + 616) = v114;
  }
  else
  {
    char v116 = v113 & 1;
    uint64_t v117 = a2[75];
    unint64_t v118 = a2[76];
    sub_10051B3C8(v117, v118, v113 & 1);
    uint64_t v119 = *(void *)(a1 + 600);
    unint64_t v120 = *(void *)(a1 + 608);
    char v121 = *(unsigned char *)(a1 + 616);
    *(void *)(a1 + 600) = v117;
    *(void *)(a1 + 608) = v118;
    *(unsigned char *)(a1 + 616) = v116;
    sub_10051ACA0(v119, v120, v121);
  }
  int v125 = *((_DWORD *)a2 + 155);
  *(unsigned char *)(a1 + 624) = *((unsigned char *)a2 + 624);
  *(_DWORD *)(a1 + 620) = v125;
  *(unsigned char *)(a1 + 625) = *((unsigned char *)a2 + 625);
  *(unsigned char *)(a1 + 626) = *((unsigned char *)a2 + 626);
  uint64_t v126 = a2[79];
  *(unsigned char *)(a1 + 640) = *((unsigned char *)a2 + 640);
  *(void *)(a1 + 632) = v126;
  uint64_t v127 = a2[81];
  *(unsigned char *)(a1 + 656) = *((unsigned char *)a2 + 656);
  *(void *)(a1 + 648) = v127;
  uint64_t v128 = (void *)(a1 + 664);
  uint64_t v129 = a2 + 83;
  uint64_t v130 = a2[95];
  if (*(void *)(a1 + 760))
  {
    if (v130)
    {
      uint64_t v131 = *v129;
      *(unsigned char *)(a1 + 672) = *((unsigned char *)a2 + 672);
      *uint64_t v128 = v131;
      LODWORD(v131) = *((_DWORD *)a2 + 170);
      *(unsigned char *)(a1 + 684) = *((unsigned char *)a2 + 684);
      *(_DWORD *)(a1 + 680) = v131;
      uint64_t v132 = a2[86];
      *(unsigned char *)(a1 + 696) = *((unsigned char *)a2 + 696);
      *(void *)(a1 + 688) = v132;
      *(_DWORD *)(a1 + 700) = *((_DWORD *)a2 + 175);
      *(_DWORD *)(a1 + 704) = *((_DWORD *)a2 + 176);
      *(_DWORD *)(a1 + 708) = *((_DWORD *)a2 + 177);
      *(void *)(a1 + 712) = a2[89];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 720) = *((_DWORD *)a2 + 180);
      *(_DWORD *)(a1 + 724) = *((_DWORD *)a2 + 181);
      *(_DWORD *)(a1 + 728) = *((_DWORD *)a2 + 182);
      *(_DWORD *)(a1 + 732) = *((_DWORD *)a2 + 183);
      *(void *)(a1 + 736) = a2[92];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 744) = *((_DWORD *)a2 + 186);
      *(void *)(a1 + 752) = a2[94];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 760) = a2[95];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 768) = a2[96];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1008EB164(a1 + 664);
      long long v136 = *(_OWORD *)(a2 + 85);
      long long v135 = *(_OWORD *)(a2 + 87);
      *(_OWORD *)uint64_t v128 = *(_OWORD *)v129;
      *(_OWORD *)(a1 + 680) = v136;
      *(_OWORD *)(a1 + 696) = v135;
      long long v137 = *(_OWORD *)(a2 + 95);
      long long v139 = *(_OWORD *)(a2 + 89);
      long long v138 = *(_OWORD *)(a2 + 91);
      *(_OWORD *)(a1 + 744) = *(_OWORD *)(a2 + 93);
      *(_OWORD *)(a1 + 760) = v137;
      *(_OWORD *)(a1 + 712) = v139;
      *(_OWORD *)(a1 + 728) = v138;
    }
  }
  else if (v130)
  {
    uint64_t v133 = *v129;
    *(unsigned char *)(a1 + 672) = *((unsigned char *)a2 + 672);
    *uint64_t v128 = v133;
    LODWORD(v133) = *((_DWORD *)a2 + 170);
    *(unsigned char *)(a1 + 684) = *((unsigned char *)a2 + 684);
    *(_DWORD *)(a1 + 680) = v133;
    uint64_t v134 = a2[86];
    *(unsigned char *)(a1 + 696) = *((unsigned char *)a2 + 696);
    *(void *)(a1 + 688) = v134;
    *(_DWORD *)(a1 + 700) = *((_DWORD *)a2 + 175);
    *(_DWORD *)(a1 + 704) = *((_DWORD *)a2 + 176);
    *(_DWORD *)(a1 + 708) = *((_DWORD *)a2 + 177);
    *(void *)(a1 + 712) = a2[89];
    *(_DWORD *)(a1 + 720) = *((_DWORD *)a2 + 180);
    *(_DWORD *)(a1 + 724) = *((_DWORD *)a2 + 181);
    *(_DWORD *)(a1 + 728) = *((_DWORD *)a2 + 182);
    *(_DWORD *)(a1 + 732) = *((_DWORD *)a2 + 183);
    *(void *)(a1 + 736) = a2[92];
    *(_DWORD *)(a1 + 744) = *((_DWORD *)a2 + 186);
    *(void *)(a1 + 752) = a2[94];
    *(void *)(a1 + 760) = a2[95];
    *(void *)(a1 + 768) = a2[96];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v140 = *(_OWORD *)v129;
    long long v141 = *(_OWORD *)(a2 + 87);
    *(_OWORD *)(a1 + 680) = *(_OWORD *)(a2 + 85);
    *(_OWORD *)(a1 + 696) = v141;
    *(_OWORD *)uint64_t v128 = v140;
    long long v142 = *(_OWORD *)(a2 + 89);
    long long v143 = *(_OWORD *)(a2 + 91);
    long long v144 = *(_OWORD *)(a2 + 95);
    *(_OWORD *)(a1 + 744) = *(_OWORD *)(a2 + 93);
    *(_OWORD *)(a1 + 760) = v144;
    *(_OWORD *)(a1 + 712) = v142;
    *(_OWORD *)(a1 + 728) = v143;
  }
  uint64_t v145 = a2[97];
  *(unsigned char *)(a1 + 784) = *((unsigned char *)a2 + 784);
  *(void *)(a1 + 776) = v145;
  uint64_t v146 = a2[99];
  *(unsigned char *)(a1 + 800) = *((unsigned char *)a2 + 800);
  *(void *)(a1 + 792) = v146;
  uint64_t v147 = a2[101];
  *(unsigned char *)(a1 + 816) = *((unsigned char *)a2 + 816);
  *(void *)(a1 + 808) = v147;
  uint64_t v148 = a2[103];
  *(unsigned char *)(a1 + 832) = *((unsigned char *)a2 + 832);
  *(void *)(a1 + 824) = v148;
  *(void *)(a1 + 840) = a2[105];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 848) = *((_DWORD *)a2 + 212);
  uint64_t v149 = a2[107];
  *(unsigned char *)(a1 + 864) = *((unsigned char *)a2 + 864);
  *(void *)(a1 + 856) = v149;
  *(void *)(a1 + 872) = a2[109];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 880) = a2[110];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for CRLWPStickyNotePresetData(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x378uLL);
}

uint64_t assignWithTake for CRLWPStickyNotePresetData(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 96)) {
    goto LABEL_7;
  }
  if (!*(void *)(a2 + 96))
  {
    sub_100B409D8(a1);
LABEL_7:
    long long v6 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v6;
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    long long v7 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v7;
    long long v8 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v8;
    long long v9 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v9;
    long long v10 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v10;
    long long v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    long long v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    goto LABEL_16;
  }
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 36) = *(void *)(a2 + 36);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 144);
  uint64_t v5 = *(void *)(a1 + 144);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  if (v5)
  {
    if (v4)
    {
      *(void *)(a1 + 144) = v4;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_100A19AFC(a1 + 144);
  }
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
LABEL_10:
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 200))
  {
LABEL_14:
    long long v14 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v14;
    goto LABEL_15;
  }
  uint64_t v13 = *(void *)(a2 + 200);
  if (!v13)
  {
    sub_100A19B30(a1 + 192);
    goto LABEL_14;
  }
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v13;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRelease();
LABEL_15:
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRelease();
LABEL_16:
  uint64_t v15 = (void *)(a1 + 232);
  uint64_t v16 = (void *)(a2 + 232);
  if (*(void *)(a1 + 328))
  {
    if (*(void *)(a2 + 328))
    {
      *uint64_t v15 = *v16;
      *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
      *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
      *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
      *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1008EB164(a1 + 232);
  }
  long long v17 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v17;
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  long long v18 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_OWORD *)(a1 + 248) = v18;
  long long v19 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v19;
LABEL_21:
  long long v20 = (_DWORD *)(a1 + 344);
  long long v21 = (_DWORD *)(a2 + 344);
  if (*(void *)(a1 + 424))
  {
    if (*(void *)(a2 + 424))
    {
      *long long v20 = *v21;
      *(unsigned char *)(a1 + 348) = *(unsigned char *)(a2 + 348);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(unsigned char *)(a1 + 360) = *(unsigned char *)(a2 + 360);
      *(_DWORD *)(a1 + 364) = *(_DWORD *)(a2 + 364);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 408) = *(_DWORD *)(a2 + 408);
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
      *(_DWORD *)(a1 + 448) = *(_DWORD *)(a2 + 448);
      *(void *)(a1 + 456) = *(void *)(a2 + 456);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 464) = *(void *)(a2 + 464);
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_100B40A2C(a1 + 344);
  }
  long long v22 = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 424) = v22;
  long long v23 = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = v23;
  long long v24 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)long long v20 = *(_OWORD *)v21;
  *(_OWORD *)(a1 + 360) = v24;
  long long v25 = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 392) = v25;
LABEL_26:
  *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
  if (*(void *)(a1 + 520))
  {
    if (*(void *)(a2 + 520))
    {
      *(void *)(a1 + 480) = *(void *)(a2 + 480);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 488) = *(void *)(a2 + 488);
      *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
      *(_DWORD *)(a1 + 500) = *(_DWORD *)(a2 + 500);
      *(_DWORD *)(a1 + 504) = *(_DWORD *)(a2 + 504);
      *(unsigned char *)(a1 + 508) = *(unsigned char *)(a2 + 508);
      *(void *)(a1 + 512) = *(void *)(a2 + 512);
      *(void *)(a1 + 520) = *(void *)(a2 + 520);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 528) = *(void *)(a2 + 528);
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    sub_100EBF468(a1 + 480);
  }
  long long v26 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v26;
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
LABEL_31:
  if (*(void *)(a1 + 576))
  {
    if (*(void *)(a2 + 576))
    {
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 544) = *(void *)(a2 + 544);
      *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
      *(_DWORD *)(a1 + 556) = *(_DWORD *)(a2 + 556);
      *(_DWORD *)(a1 + 560) = *(_DWORD *)(a2 + 560);
      *(unsigned char *)(a1 + 564) = *(unsigned char *)(a2 + 564);
      *(void *)(a1 + 568) = *(void *)(a2 + 568);
      *(void *)(a1 + 576) = *(void *)(a2 + 576);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    sub_100EBF468(a1 + 536);
  }
  long long v27 = *(_OWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
  *(_OWORD *)(a1 + 552) = v27;
  *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
LABEL_36:
  long long v28 = (_OWORD *)(a1 + 600);
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  swift_bridgeObjectRelease();
  long long v29 = (_OWORD *)(a2 + 600);
  int v30 = *(unsigned __int8 *)(a1 + 616);
  if (v30 == 255)
  {
LABEL_39:
    *long long v28 = *v29;
    *(unsigned char *)(a1 + 616) = *(unsigned char *)(a2 + 616);
    goto LABEL_41;
  }
  int v31 = *(unsigned __int8 *)(a2 + 616);
  if (v31 == 255)
  {
    sub_1008EB104(a1 + 600);
    goto LABEL_39;
  }
  uint64_t v32 = *(void *)(a1 + 600);
  unint64_t v33 = *(void *)(a1 + 608);
  *long long v28 = *v29;
  *(unsigned char *)(a1 + 616) = v31 & 1;
  sub_10051ACA0(v32, v33, v30 & 1);
LABEL_41:
  *(_DWORD *)(a1 + 620) = *(_DWORD *)(a2 + 620);
  *(unsigned char *)(a1 + 624) = *(unsigned char *)(a2 + 624);
  *(_WORD *)(a1 + 625) = *(_WORD *)(a2 + 625);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(unsigned char *)(a1 + 640) = *(unsigned char *)(a2 + 640);
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  *(unsigned char *)(a1 + 656) = *(unsigned char *)(a2 + 656);
  long long v34 = (_OWORD *)(a1 + 664);
  long long v35 = (_OWORD *)(a2 + 664);
  if (!*(void *)(a1 + 760))
  {
LABEL_45:
    long long v36 = *(_OWORD *)(a2 + 744);
    *(_OWORD *)(a1 + 728) = *(_OWORD *)(a2 + 728);
    *(_OWORD *)(a1 + 744) = v36;
    *(_OWORD *)(a1 + 760) = *(_OWORD *)(a2 + 760);
    long long v37 = *(_OWORD *)(a2 + 680);
    *long long v34 = *v35;
    *(_OWORD *)(a1 + 680) = v37;
    long long v38 = *(_OWORD *)(a2 + 712);
    *(_OWORD *)(a1 + 696) = *(_OWORD *)(a2 + 696);
    *(_OWORD *)(a1 + 712) = v38;
    goto LABEL_46;
  }
  if (!*(void *)(a2 + 760))
  {
    sub_1008EB164(a1 + 664);
    goto LABEL_45;
  }
  *(void *)long long v34 = *(void *)v35;
  *(unsigned char *)(a1 + 672) = *(unsigned char *)(a2 + 672);
  *(_DWORD *)(a1 + 680) = *(_DWORD *)(a2 + 680);
  *(unsigned char *)(a1 + 684) = *(unsigned char *)(a2 + 684);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(unsigned char *)(a1 + 696) = *(unsigned char *)(a2 + 696);
  *(_DWORD *)(a1 + 700) = *(_DWORD *)(a2 + 700);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 744) = *(_DWORD *)(a2 + 744);
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 760) = *(void *)(a2 + 760);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  swift_bridgeObjectRelease();
LABEL_46:
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  *(unsigned char *)(a1 + 784) = *(unsigned char *)(a2 + 784);
  *(void *)(a1 + 792) = *(void *)(a2 + 792);
  *(unsigned char *)(a1 + 800) = *(unsigned char *)(a2 + 800);
  *(void *)(a1 + 808) = *(void *)(a2 + 808);
  *(unsigned char *)(a1 + 816) = *(unsigned char *)(a2 + 816);
  *(unsigned char *)(a1 + 832) = *(unsigned char *)(a2 + 832);
  *(void *)(a1 + 824) = *(void *)(a2 + 824);
  *(void *)(a1 + 840) = *(void *)(a2 + 840);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 848) = *(_DWORD *)(a2 + 848);
  *(void *)(a1 + 856) = *(void *)(a2 + 856);
  *(unsigned char *)(a1 + 864) = *(unsigned char *)(a2 + 864);
  *(void *)(a1 + 872) = *(void *)(a2 + 872);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 880) = *(void *)(a2 + 880);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLWPStickyNotePresetData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 888)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 592);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLWPStickyNotePresetData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 888) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 592) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 888) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLWPStickyNotePresetData()
{
  return &type metadata for CRLWPStickyNotePresetData;
}

id sub_100FB1824()
{
  memcpy(__dst, v0, sizeof(__dst));
  sub_10051B3EC((uint64_t)&__dst[344], (uint64_t)v10, (uint64_t *)&unk_101683E20);
  sub_10051B3EC((uint64_t)v10, (uint64_t)&v13, (uint64_t *)&unk_101683E20);
  if (sub_10068F2EC((uint64_t)&v13) == 1) {
    return 0;
  }
  long long v25 = v17;
  long long v26 = v18;
  v27[0] = v19;
  v27[1] = v20;
  long long v21 = v13;
  long long v22 = v14;
  long long v23 = v15;
  long long v24 = v16;
  sub_10068F4B8();
  v28[2] = v15;
  v28[3] = v16;
  v28[4] = v17;
  uint64_t v29 = v18;
  v28[0] = v13;
  v28[1] = v14;
  v11[0] = v13;
  v11[1] = v14;
  v11[3] = v16;
  v11[4] = v17;
  v11[2] = v15;
  uint64_t v12 = v18;
  sub_10068F4F8((uint64_t)v28);
  unint64_t v2 = sub_1007B0B84((uint64_t)v11);
  double v3 = *((float *)&v26 + 2);
  double v4 = *((float *)&v26 + 3);
  double v5 = *(float *)v27;
  double v6 = *((float *)v27 + 1);
  sub_10051B3EC((uint64_t)v27 + 8, (uint64_t)v30, &qword_101679B98);
  sub_10051B3EC((uint64_t)v30, (uint64_t)&v31, &qword_101679B98);
  if (v32) {
    id v7 = [objc_allocWithZone((Class)CRLCurvedShadow) initWithOffset:v2 angle:1 radius:v4 curve:v3 opacity:v5 color:v31 enabled:v6];
  }
  else {
    id v7 = [objc_allocWithZone((Class)CRLDropShadow) initWithAngle:v2 offset:1 radius:v3 opacity:v4 color:v5 enabled:v6];
  }
  id v1 = v7;

  return v1;
}

uint64_t sub_100FB1A04(void *a1)
{
  double v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_1016A4688);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  long long v9 = (char *)&v12[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100FB22D0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  memcpy(v12, v3, sizeof(v12));
  char v13 = 0;
  sub_100EC0984();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    v12[0] = v3[110];
    char v13 = 1;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100FB1BB4()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x5365706168537077;
  }
}

uint64_t sub_100FB1BFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100FB2704(a1, a2);
  *a3 = result;
  return result;
}

void sub_100FB1C24(void *a1@<X8>)
{
  *a1 = &off_1015033E8;
}

uint64_t sub_100FB1C34(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100FB2278();
  unint64_t v5 = sub_100FB22D0();

  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100FB1C8C(uint64_t a1)
{
  unint64_t v2 = sub_100FB22D0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100FB1CC8(uint64_t a1)
{
  unint64_t v2 = sub_100FB22D0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100FB1D04()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100FB1D0C(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 880) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_100FB1D38())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_100FB1D58(void *__src, const void *a2)
{
  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_100FB1A00(v4) & 1;
}

void *sub_100FB1DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_100FB280C(a1, a2);
  if (!v3) {
    return memcpy(a3, __src, 0x378uLL);
  }
  return result;
}

uint64_t sub_100FB1E04(void *a1)
{
  return sub_100FB1A04(a1);
}

uint64_t sub_100FB1E1C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100FB3100();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100FB1E70(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100FB3100();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100FB1EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100FB20C0();
  unint64_t v7 = sub_100FB3154();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100FB1F34(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100FB3100();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100FB1F80()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100FB1FD0()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100FB2018(uint64_t a1)
{
  unint64_t v2 = sub_100FB2438();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_100FB2068()
{
  unint64_t result = qword_1016A4610;
  if (!qword_1016A4610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4610);
  }
  return result;
}

unint64_t sub_100FB20C0()
{
  unint64_t result = qword_1016A4618;
  if (!qword_1016A4618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4618);
  }
  return result;
}

unint64_t sub_100FB2118()
{
  unint64_t result = qword_1016A4620;
  if (!qword_1016A4620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4620);
  }
  return result;
}

unint64_t sub_100FB2170()
{
  unint64_t result = qword_1016A4628;
  if (!qword_1016A4628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4628);
  }
  return result;
}

unint64_t sub_100FB21C8()
{
  unint64_t result = qword_1016A4630;
  if (!qword_1016A4630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4630);
  }
  return result;
}

unint64_t sub_100FB2220()
{
  unint64_t result = qword_1016A4638;
  if (!qword_1016A4638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4638);
  }
  return result;
}

unint64_t sub_100FB2278()
{
  unint64_t result = qword_1016A4640;
  if (!qword_1016A4640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4640);
  }
  return result;
}

unint64_t sub_100FB22D0()
{
  unint64_t result = qword_1016A4648;
  if (!qword_1016A4648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4648);
  }
  return result;
}

unint64_t sub_100FB2328()
{
  unint64_t result = qword_1016A4650;
  if (!qword_1016A4650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4650);
  }
  return result;
}

unint64_t sub_100FB2380()
{
  unint64_t result = qword_1016A4658;
  if (!qword_1016A4658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4658);
  }
  return result;
}

unint64_t sub_100FB23D8()
{
  unint64_t result = qword_1016A4660;
  if (!qword_1016A4660)
  {
    sub_100522D34(&qword_1016A4668);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4660);
  }
  return result;
}

unint64_t sub_100FB2438()
{
  unint64_t result = qword_1016A4670;
  if (!qword_1016A4670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4670);
  }
  return result;
}

unint64_t sub_100FB2490()
{
  unint64_t result = qword_1016A4678;
  if (!qword_1016A4678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4678);
  }
  return result;
}

uint64_t sub_100FB24E4(uint64_t *__src, uint64_t *a2)
{
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v8, a2, sizeof(v8));
  memcpy(v17, __src, sizeof(v17));
  memcpy(v12, a2, sizeof(v12));
  if ((sub_100EC102C((uint64_t)v17, (uint64_t)v12) & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v16 = __dst[105];
  v15[12] = *(_OWORD *)&__dst[99];
  v15[13] = *(_OWORD *)&__dst[101];
  v15[14] = *(_OWORD *)&__dst[103];
  v15[8] = *(_OWORD *)&__dst[91];
  v15[9] = *(_OWORD *)&__dst[93];
  v15[10] = *(_OWORD *)&__dst[95];
  v15[11] = *(_OWORD *)&__dst[97];
  v15[4] = *(_OWORD *)&__dst[83];
  v15[5] = *(_OWORD *)&__dst[85];
  v15[6] = *(_OWORD *)&__dst[87];
  v15[7] = *(_OWORD *)&__dst[89];
  v15[0] = *(_OWORD *)&__dst[75];
  v15[1] = *(_OWORD *)&__dst[77];
  v15[2] = *(_OWORD *)&__dst[79];
  v15[3] = *(_OWORD *)&__dst[81];
  v10[12] = *(_OWORD *)&v8[99];
  v10[13] = *(_OWORD *)&v8[101];
  v10[14] = *(_OWORD *)&v8[103];
  uint64_t v11 = v8[105];
  v10[8] = *(_OWORD *)&v8[91];
  v10[9] = *(_OWORD *)&v8[93];
  v10[10] = *(_OWORD *)&v8[95];
  v10[11] = *(_OWORD *)&v8[97];
  v10[4] = *(_OWORD *)&v8[83];
  v10[5] = *(_OWORD *)&v8[85];
  v10[6] = *(_OWORD *)&v8[87];
  v10[7] = *(_OWORD *)&v8[89];
  v10[0] = *(_OWORD *)&v8[75];
  v10[1] = *(_OWORD *)&v8[77];
  v10[2] = *(_OWORD *)&v8[79];
  v10[3] = *(_OWORD *)&v8[81];
  if ((sub_1008ECDE4(v15, v10) & 1) == 0) {
    goto LABEL_7;
  }
  if (*(float *)&__dst[106] == *(float *)&v8[106]
    && (sub_10051B3EC((uint64_t)&__dst[107], (uint64_t)v14, (uint64_t *)&unk_1016892A0),
        sub_10051B3EC((uint64_t)v14, (uint64_t)v7, (uint64_t *)&unk_1016892A0),
        sub_10051B3EC((uint64_t)&v8[107], (uint64_t)v9, (uint64_t *)&unk_1016892A0),
        sub_10051B3EC((uint64_t)v9, (uint64_t)&v6, (uint64_t *)&unk_1016892A0),
        sub_1005DF574(),
        (static CRExtensible.== infix(_:_:)() & 1) != 0)
    && (sub_100ED60AC(__dst[109], v8[109]) & 1) != 0)
  {
    char v4 = sub_100ED60AC(__src[110], a2[110]);
  }
  else
  {
LABEL_7:
    char v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_100FB2704(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x5365706168537077 && a2 == 0xEC000000656C7974;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *sub_100FB280C(uint64_t a1, uint64_t a2)
{
  __chkstk_darwin(a1, a2);
  char v4 = v3;
  char v6 = v5;
  uint64_t v16 = sub_1005057FC(&qword_1016A4680);
  uint64_t v7 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v8);
  long long v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(v4, v4[3]);
  sub_100FB22D0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v4);
    return (void *)swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = v6;
    v23[903] = 0;
    sub_100EC092C();
    uint64_t v12 = v16;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    memcpy(v21, v22, sizeof(v21));
    memcpy(v23, v22, 0x370uLL);
    sub_1005057FC((uint64_t *)&unk_101687A40);
    v23[902] = 1;
    sub_100EC3D4C((uint64_t)v21);
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v12);
    uint64_t v13 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    memcpy(v17, v21, 0x370uLL);
    v17[110] = v13;
    sub_100FB2AF0((uint64_t)v17);
    swift_bridgeObjectRelease();
    sub_10089B2D0((uint64_t)v21);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v4);
    memcpy(v18, v23, sizeof(v18));
    uint64_t v19 = v13;
    sub_100FB2DF8((uint64_t)v18);
    return memcpy(v11, v17, 0x378uLL);
  }
}

uint64_t sub_100FB2AF0(uint64_t a1)
{
  uint64_t v30 = *(void *)(a1 + 240);
  uint64_t v31 = *(void *)(a1 + 232);
  uint64_t v28 = *(void *)(a1 + 256);
  uint64_t v29 = *(void *)(a1 + 248);
  uint64_t v26 = *(void *)(a1 + 272);
  uint64_t v27 = *(void *)(a1 + 264);
  uint64_t v24 = *(void *)(a1 + 288);
  uint64_t v25 = *(void *)(a1 + 280);
  long long v19 = *(_OWORD *)(a1 + 296);
  long long v17 = *(_OWORD *)(a1 + 312);
  uint64_t v16 = *(void *)(a1 + 328);
  uint64_t v45 = *(void *)(a1 + 352);
  uint64_t v46 = *(void *)(a1 + 344);
  uint64_t v43 = *(void *)(a1 + 368);
  uint64_t v44 = *(void *)(a1 + 360);
  uint64_t v41 = *(void *)(a1 + 384);
  uint64_t v42 = *(void *)(a1 + 376);
  uint64_t v39 = *(void *)(a1 + 400);
  uint64_t v40 = *(void *)(a1 + 392);
  long long v23 = *(_OWORD *)(a1 + 408);
  long long v21 = *(_OWORD *)(a1 + 424);
  long long v48 = *(_OWORD *)(a1 + 744);
  long long v49 = *(_OWORD *)(a1 + 728);
  uint64_t v3 = *(void *)(a1 + 480);
  uint64_t v2 = *(void *)(a1 + 488);
  uint64_t v5 = *(void *)(a1 + 496);
  uint64_t v4 = *(void *)(a1 + 504);
  uint64_t v6 = *(void *)(a1 + 512);
  uint64_t v7 = *(void *)(a1 + 520);
  uint64_t v8 = *(void *)(a1 + 536);
  uint64_t v9 = *(void *)(a1 + 544);
  uint64_t v11 = *(void *)(a1 + 552);
  uint64_t v12 = *(void *)(a1 + 560);
  uint64_t v13 = *(void *)(a1 + 568);
  uint64_t v14 = *(void *)(a1 + 576);
  uint64_t v18 = *(void *)(a1 + 600);
  unint64_t v20 = *(void *)(a1 + 608);
  uint64_t v32 = *(void *)(a1 + 664);
  uint64_t v33 = *(void *)(a1 + 672);
  uint64_t v34 = *(void *)(a1 + 680);
  uint64_t v35 = *(void *)(a1 + 688);
  uint64_t v36 = *(void *)(a1 + 696);
  uint64_t v37 = *(void *)(a1 + 704);
  uint64_t v38 = *(void *)(a1 + 712);
  uint64_t v47 = *(void *)(a1 + 720);
  uint64_t v22 = *(void *)(a1 + 760);
  unsigned __int8 v15 = *(unsigned char *)(a1 + 616);
  sub_10051A1EC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200));
  sub_10051B2E8(v31, v30, v29, v28, v27, v26, v25, v24, v19, *((uint64_t *)&v19 + 1), v17, *((uint64_t *)&v17 + 1), v16);
  sub_10051A364(v46, v45, v44, v43, v42, v41, v40, v39, v23, *((uint64_t *)&v23 + 1), v21);
  sub_10051B364(v3, v2, v5, v4, v6, v7);
  sub_10051B364(v8, v9, v11, v12, v13, v14);
  swift_bridgeObjectRetain();
  sub_10051B3B0(v18, v20, v15);
  sub_10051B2E8(v32, v33, v34, v35, v36, v37, v38, v47, v49, *((uint64_t *)&v49 + 1), v48, *((uint64_t *)&v48 + 1), v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100FB2DF8(uint64_t a1)
{
  uint64_t v30 = *(void *)(a1 + 240);
  uint64_t v31 = *(void *)(a1 + 232);
  uint64_t v28 = *(void *)(a1 + 256);
  uint64_t v29 = *(void *)(a1 + 248);
  uint64_t v26 = *(void *)(a1 + 272);
  uint64_t v27 = *(void *)(a1 + 264);
  uint64_t v24 = *(void *)(a1 + 288);
  uint64_t v25 = *(void *)(a1 + 280);
  long long v19 = *(_OWORD *)(a1 + 296);
  long long v17 = *(_OWORD *)(a1 + 312);
  uint64_t v16 = *(void *)(a1 + 328);
  uint64_t v45 = *(void *)(a1 + 352);
  uint64_t v46 = *(void *)(a1 + 344);
  uint64_t v43 = *(void *)(a1 + 368);
  uint64_t v44 = *(void *)(a1 + 360);
  uint64_t v41 = *(void *)(a1 + 384);
  uint64_t v42 = *(void *)(a1 + 376);
  uint64_t v39 = *(void *)(a1 + 400);
  uint64_t v40 = *(void *)(a1 + 392);
  long long v23 = *(_OWORD *)(a1 + 408);
  long long v21 = *(_OWORD *)(a1 + 424);
  long long v48 = *(_OWORD *)(a1 + 744);
  long long v49 = *(_OWORD *)(a1 + 728);
  uint64_t v3 = *(void *)(a1 + 480);
  uint64_t v2 = *(void *)(a1 + 488);
  uint64_t v5 = *(void *)(a1 + 496);
  uint64_t v4 = *(void *)(a1 + 504);
  uint64_t v6 = *(void *)(a1 + 512);
  uint64_t v7 = *(void *)(a1 + 520);
  uint64_t v8 = *(void *)(a1 + 536);
  uint64_t v9 = *(void *)(a1 + 544);
  uint64_t v11 = *(void *)(a1 + 552);
  uint64_t v12 = *(void *)(a1 + 560);
  uint64_t v13 = *(void *)(a1 + 568);
  uint64_t v14 = *(void *)(a1 + 576);
  uint64_t v18 = *(void *)(a1 + 600);
  unint64_t v20 = *(void *)(a1 + 608);
  uint64_t v32 = *(void *)(a1 + 664);
  uint64_t v33 = *(void *)(a1 + 672);
  uint64_t v34 = *(void *)(a1 + 680);
  uint64_t v35 = *(void *)(a1 + 688);
  uint64_t v36 = *(void *)(a1 + 696);
  uint64_t v37 = *(void *)(a1 + 704);
  uint64_t v38 = *(void *)(a1 + 712);
  uint64_t v47 = *(void *)(a1 + 720);
  uint64_t v22 = *(void *)(a1 + 760);
  unsigned __int8 v15 = *(unsigned char *)(a1 + 616);
  sub_100519F40(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200));
  sub_10051ABBC(v31, v30, v29, v28, v27, v26, v25, v24, v19, *((uint64_t *)&v19 + 1), v17, *((uint64_t *)&v17 + 1), v16);
  sub_10051A0B8(v46, v45, v44, v43, v42, v41, v40, v39, v23, *((uint64_t *)&v23 + 1), v21);
  sub_10051AC38(v3, v2, v5, v4, v6, v7);
  sub_10051AC38(v8, v9, v11, v12, v13, v14);
  swift_bridgeObjectRelease();
  sub_10051AC88(v18, v20, v15);
  sub_10051ABBC(v32, v33, v34, v35, v36, v37, v38, v47, v49, *((uint64_t *)&v49 + 1), v48, *((uint64_t *)&v48 + 1), v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_100FB3100()
{
  unint64_t result = qword_1016A4690;
  if (!qword_1016A4690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4690);
  }
  return result;
}

unint64_t sub_100FB3154()
{
  unint64_t result = qword_1016A4698;
  if (!qword_1016A4698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4698);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLWPStickyNotePresetData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100FB3274);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLWPStickyNotePresetData.CodingKeys()
{
  return &type metadata for CRLWPStickyNotePresetData.CodingKeys;
}

unint64_t sub_100FB32B0()
{
  unint64_t result = qword_1016A46A0;
  if (!qword_1016A46A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A46A0);
  }
  return result;
}

id sub_100FB3304()
{
  swift_unknownObjectWeakInit();
  id v1 = objc_allocWithZone((Class)type metadata accessor for CRLImagePlaygroundViewControllerDelegate());
  uint64_t v2 = v0;
  id v3 = [v1 init];
  *(void *)&v2[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_gpDelegate] = v3;
  id v4 = objc_allocWithZone((Class)type metadata accessor for ImagePlaygroundViewController());
  id v5 = v3;
  id v6 = [v4 init];
  *(void *)&v2[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController] = v6;
  id v7 = v6;

  id v8 = v5;
  dispatch thunk of ImagePlaygroundViewController.delegate.setter();
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for CRLGenerativePlaygroundHelper();
  [super init];
  swift_unknownObjectWeakAssign();

  return v9;
}

uint64_t sub_100FB3464(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v25 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v9);
  objc_super v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v24 - 8);
  *(void *)&double v14 = __chkstk_darwin(v24, v13).n128_u64[0];
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = [a1 generateImage:v14];
  sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
  uint64_t v18 = (void *)static OS_dispatch_queue.main.getter();
  long long v19 = (void *)swift_allocObject();
  v19[2] = a2;
  v19[3] = v17;
  v19[4] = a3;
  v19[5] = a4;
  aBlock[4] = sub_100FB8A60;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = &unk_101535DD8;
  unint64_t v20 = _Block_copy(aBlock);
  id v21 = a2;
  id v22 = v17;
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100522CDC();
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_10056B494();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v16, v24);
}

uint64_t sub_100FB3734(int a1, id a2, uint64_t (*a3)(uint64_t))
{
  if (a2) {
    id v4 = [a2 UIImage];
  }
  uint64_t v5 = dispatch thunk of ImagePlaygroundViewController.sourceImage.setter();
  return a3(v5);
}

uint64_t sub_100FB379C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a2;
  v16[3] = a3;
  v16[4] = a5;
  v16[5] = a6;
  swift_retain();
  sub_1005173A0(a5);
  static TaskPriority.userInitiated.getter();
  uint64_t v17 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v15, 0, 1, v17);
  type metadata accessor for MainActor();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v18 = static MainActor.shared.getter();
  long long v19 = (void *)swift_allocObject();
  v19[2] = v18;
  v19[3] = &protocol witness table for MainActor;
  v19[4] = a4;
  v19[5] = a1;
  v19[6] = 0;
  v19[7] = sub_100FB8B1C;
  v19[8] = v16;
  sub_1005912D0((uint64_t)v15, (uint64_t)&unk_101674438, (uint64_t)v19);
  swift_release();
  return swift_release();
}

uint64_t sub_100FB394C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  id v74 = a3;
  uint64_t v75 = a4;
  uint64_t v6 = type metadata accessor for URL.DirectoryHint();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v77 - 8);
  __chkstk_darwin(v77, v12);
  uint64_t v14 = (char *)v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for URL();
  uint64_t v78 = *(void *)(v79 - 8);
  __chkstk_darwin(v79, v15);
  uint64_t v72 = (char *)v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  unint64_t v20 = (char *)v67 - v19;
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)v67 - v23;
  uint64_t v71 = a1;
  long long v68 = (void *)URL.lastPathComponent.getter();
  int v73 = v25;
  id v26 = [a2 URL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  UUID.init()();
  uint64_t v27 = (void *)UUID.uuidString.getter();
  uint64_t v29 = v28;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v77);
  id v83 = v27;
  v84.super.Class isa = v29;
  uint64_t v30 = *(void (**)(char *, void, uint64_t))(v7 + 104);
  v30(v10, enum case for URL.DirectoryHint.isDirectory(_:), v6);
  v67[2] = sub_10052E310();
  URL.appending<A>(path:directoryHint:)();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v70 = v6;
  uint64_t v69 = v7 + 8;
  v31(v10, v6);
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v78 + 8);
  uint64_t v77 = v78 + 8;
  uint64_t v76 = v32;
  v32(v20, v79);
  URL._bridgeToObjectiveC()(v33);
  uint64_t v35 = v34;
  id v83 = 0;
  id v36 = v74;
  LODWORD(v7) = [v74 createDirectoryAtURL:v34 withIntermediateDirectories:1 attributes:0 error:&v83];

  id v37 = v83;
  if (v7)
  {
    id v83 = v68;
    v84.super.Class isa = v73;
    uint64_t v38 = v70;
    v30(v10, enum case for URL.DirectoryHint.notDirectory(_:), v70);
    id v39 = v37;
    uint64_t v40 = v72;
    URL.appending<A>(component:directoryHint:)();
    v31(v10, v38);
    swift_bridgeObjectRelease();
    URL._bridgeToObjectiveC()(&v84);
    uint64_t v42 = v41;
    URL._bridgeToObjectiveC()(v43);
    uint64_t v45 = v44;
    id v83 = 0;
    unsigned int v46 = [v36 copyItemAtURL:v42 toURL:v44 error:&v83];

    if (v46)
    {
      id v47 = v83;
      uint64_t v48 = v79;
      v76(v24, v79);
      uint64_t v49 = v78;
      uint64_t v50 = v75;
      (*(void (**)(uint64_t, char *, uint64_t))(v78 + 32))(v75, v40, v48);
      uint64_t v51 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(v50, v51, 1, v79);
    }
    id v74 = v24;
    id v53 = v83;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    v76(v40, v79);
  }
  else
  {
    id v74 = v24;
    id v52 = v83;
    swift_bridgeObjectRelease();
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  if (qword_10166FAC8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v54 = (void *)static OS_os_log.crlInsertMedia;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  swift_getErrorValue();
  uint64_t v56 = v81;
  uint64_t v57 = v82;
  id v58 = v54;
  uint64_t v59 = Error.publicDescription.getter(v56, v57);
  uint64_t v61 = v60;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v62 = sub_100528BE4();
  *(void *)(inited + 64) = v62;
  *(void *)(inited + 32) = v59;
  *(void *)(inited + 40) = v61;
  swift_getErrorValue();
  uint64_t v63 = Error.fullDescription.getter(v80);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v62;
  *(void *)(inited + 72) = v63;
  *(void *)(inited + 80) = v64;
  uint64_t v65 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v58, (uint64_t)&_mh_execute_header, v65, (uint64_t)"Error copying asset to temporary directory: %{public}@ <%@>", 59, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  v76((char *)v74, v79);
  uint64_t v51 = 1;
  uint64_t v50 = v75;
  uint64_t v49 = v78;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(v50, v51, 1, v79);
}

id sub_100FB40B4(uint64_t a1)
{
  return sub_100FB4318(a1, type metadata accessor for CRLGenerativePlaygroundHelper);
}

uint64_t type metadata accessor for CRLGenerativePlaygroundHelper()
{
  return self;
}

id sub_100FB42FC()
{
  return sub_100FB4318(0, type metadata accessor for CRLImagePlaygroundViewControllerDelegate);
}

id sub_100FB4318(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLImagePlaygroundViewControllerDelegate()
{
  return self;
}

id sub_100FB43D0()
{
  return [*v0 isGEnerativePlaygroundImageItem];
}

void sub_100FB43FC(void *a1)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLWPStorageCRDTData(0);
  __n128 v14 = __chkstk_darwin(v12 - 8, v13);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v17)
  {
    uint64_t v18 = *(void *)&v17[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (!v18)
    {
      __break(1u);
      return;
    }
    (*(void (**)(__n128))(*(void *)v18 + 760))(v14);
    sub_1005D3C94((uint64_t)&v11[*(int *)(v8 + 20)], (uint64_t)v16);
    uint64_t v19 = v17;
    sub_1005D3CF8((uint64_t)v11, type metadata accessor for CRLWPShapeItemCRDTData);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v16, v3);
    sub_1005D3CF8((uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
    unint64_t v20 = (void *)CRAttributedString.attributedString.getter();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    id v21 = [v20 string];

    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v24 = v23;

    uint64_t v25 = HIBYTE(v24) & 0xF;
    if ((v24 & 0x2000000000000000) == 0) {
      uint64_t v25 = v22 & 0xFFFFFFFFFFFFLL;
    }
    if (!v25) {
      goto LABEL_11;
    }
    sub_10050BF48(0, (unint64_t *)&qword_101683830);
    id v26 = [a1 mostSpecificSelectionOfClass:swift_getObjCClassFromMetadata()];
    if (v26)
    {
      uint64_t v27 = v26;
      self;
      uint64_t v28 = (void *)swift_dynamicCastObjCClass();
      if (v28)
      {
        [v28 range];
        Range<>.init(_:in:)();
        if ((v29 & 1) == 0)
        {
          uint64_t v30 = String.subscript.getter();
          unint64_t v32 = v31;
          swift_bridgeObjectRelease();
          if ((v30 ^ v32) >> 14)
          {
            sub_1005057FC((uint64_t *)&unk_101672610);
            uint64_t v34 = swift_allocObject();
            *(_OWORD *)(v34 + 16) = xmmword_10117E810;
            uint64_t v35 = static String._fromSubstring(_:)();
            uint64_t v37 = v36;
            swift_bridgeObjectRelease();
            *(void *)(v34 + 32) = v35;
            *(void *)(v34 + 40) = v37;

            return;
          }

LABEL_11:
          swift_bridgeObjectRelease();
          return;
        }
      }
    }
    sub_1005057FC((uint64_t *)&unk_101672610);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_10117E810;
    *(void *)(v33 + 32) = v22;
    *(void *)(v33 + 40) = v24;
  }
}

uint64_t sub_100FB485C(uint64_t a1)
{
  id v2 = [*v1 generativePlaygroundStringsFor:a1];
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void sub_100FB48B0(void *a1)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLWPStorageCRDTData(0);
  __n128 v14 = __chkstk_darwin(v12 - 8, v13);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v17)
  {
    __break(1u);
    return;
  }
  (*(void (**)(__n128))(*(void *)v17 + 760))(v14);
  sub_1005D3C94((uint64_t)&v11[*(int *)(v8 + 20)], (uint64_t)v16);
  sub_1005D3CF8((uint64_t)v11, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v16, v3);
  sub_1005D3CF8((uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v18 = (void *)CRAttributedString.attributedString.getter();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  id v19 = [v18 string];

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v22 = v21;

  uint64_t v23 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0) {
    uint64_t v23 = v20 & 0xFFFFFFFFFFFFLL;
  }
  if (!v23) {
    goto LABEL_10;
  }
  sub_10050BF48(0, (unint64_t *)&qword_101683830);
  id v24 = [a1 mostSpecificSelectionOfClass:swift_getObjCClassFromMetadata()];
  if (!v24)
  {
LABEL_12:
    sub_1005057FC((uint64_t *)&unk_101672610);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_10117E810;
    *(void *)(v31 + 32) = v20;
    *(void *)(v31 + 40) = v22;
    return;
  }
  uint64_t v25 = v24;
  self;
  id v26 = (void *)swift_dynamicCastObjCClass();
  if (!v26 || ([v26 range], Range<>.init(_:in:)(), (v27 & 1) != 0))
  {

    goto LABEL_12;
  }
  uint64_t v28 = String.subscript.getter();
  unint64_t v30 = v29;
  swift_bridgeObjectRelease();
  if (!((v28 ^ v30) >> 14))
  {

LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  sub_1005057FC((uint64_t *)&unk_101672610);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_10117E810;
  uint64_t v33 = static String._fromSubstring(_:)();
  uint64_t v35 = v34;
  swift_bridgeObjectRelease();
  *(void *)(v32 + 32) = v33;
  *(void *)(v32 + 40) = v35;
}

void sub_100FB4C6C(void *a1)
{
}

double *sub_100FB4C90(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  id v53 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v48 = (char *)v45 - v12;
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)v45 - v15;
  uint64_t v17 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v17 - 8, v18);
  __chkstk_darwin(v19, v20);
  uint64_t v23 = (char *)v45 - v21;
  uint64_t v24 = *(void *)(a1 + 16);
  if (v24)
  {
    uint64_t v62 = v4;
    id v26 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v25 = v7 + 16;
    uint64_t v54 = v26;
    unint64_t v27 = (*(unsigned __int8 *)(v25 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 64);
    v45[1] = a1;
    unint64_t v46 = v27;
    uint64_t v28 = a1 + v27;
    uint64_t v29 = *(void *)(v25 + 56);
    uint64_t v57 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 40);
    id v58 = (char *)v45 - v21;
    uint64_t v60 = (void (**)(uint64_t, char *, uint64_t))(v25 + 16);
    uint64_t v61 = (unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 32);
    uint64_t v51 = (void (**)(uint64_t, uint64_t))(v25 - 8);
    uint64_t v52 = v22;
    swift_bridgeObjectRetain();
    uint64_t v59 = _swiftEmptyArrayStorage;
    uint64_t v47 = v6;
    uint64_t v50 = v25;
    while (1)
    {
      uint64_t v30 = (uint64_t)v16;
      uint64_t v31 = v58;
      v54(v58, v28, v6);
      uint64_t v49 = *v57;
      v49(v31, 0, 1, v6);
      uint64_t v32 = *v61;
      if ((*v61)(v31, 1, v6) == 1) {
        break;
      }
      uint64_t v33 = *v60;
      uint64_t v34 = v31;
      uint64_t v16 = (char *)v30;
      (*v60)(v30, v34, v6);
      uint64_t v35 = v6;
      uint64_t v36 = v52;
      uint64_t v37 = v62;
      sub_100FB394C(v30, v55, v56, v52);
      uint64_t v62 = v37;
      if (v37)
      {
        (*v51)(v30, v35);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v59;
      }
      (*v51)(v30, v35);
      if (v32((char *)v36, 1, v35) == 1)
      {
        sub_100522F00(v36, &qword_101672E90);
        uint64_t v6 = v35;
      }
      else
      {
        uint64_t v38 = v48;
        v33((uint64_t)v48, (char *)v36, v35);
        v33((uint64_t)v53, v38, v35);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v59 = (double *)sub_100F62784(0, *((void *)v59 + 2) + 1, 1, (unint64_t)v59);
        }
        unint64_t v40 = *((void *)v59 + 2);
        unint64_t v39 = *((void *)v59 + 3);
        uint64_t v16 = (char *)v30;
        if (v40 >= v39 >> 1) {
          uint64_t v59 = (double *)sub_100F62784(v39 > 1, v40 + 1, 1, (unint64_t)v59);
        }
        uint64_t v41 = v59;
        *((void *)v59 + 2) = v40 + 1;
        uint64_t v42 = (char *)v41 + v46 + v40 * v29;
        uint64_t v6 = v47;
        v33((uint64_t)v42, v53, v47);
      }
      v28 += v29;
      if (!--v24)
      {
        v49(v58, 1, 1, v6);
        break;
      }
    }
  }
  else
  {
    uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
    uint64_t v59 = _swiftEmptyArrayStorage;
    v43(v23, 1, 1, v6);
  }
  swift_bridgeObjectRelease();
  return v59;
}

double *sub_100FB50FC(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  uint64_t v29 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
LABEL_31:
  }
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  else {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = _swiftEmptyArrayStorage;
  if (v4)
  {
    unint64_t v6 = 0;
    unint64_t v7 = v3 & 0xC000000000000001;
    unint64_t v19 = v3 & 0xC000000000000001;
    unint64_t v20 = v3 + 32;
    v3 &= 0xFFFFFFFFFFFFFF8uLL;
    uint64_t v8 = a2 + 56;
    unint64_t v18 = v3;
    while (1)
    {
      if (v7)
      {
        uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v10 = __OFADD__(v6++, 1);
        if (v10)
        {
LABEL_27:
          __break(1u);
          return v29;
        }
      }
      else
      {
        if (v6 >= *(void *)(v3 + 16))
        {
          __break(1u);
          goto LABEL_31;
        }
        uint64_t v9 = *(void *)(v20 + 8 * v6);
        swift_unknownObjectRetain();
        BOOL v10 = __OFADD__(v6++, 1);
        if (v10) {
          goto LABEL_27;
        }
      }
      uint64_t v23 = v9;
      swift_unknownObjectRetain();
      sub_1005057FC(&qword_101673060);
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v22 = 0;
        memset(v21, 0, sizeof(v21));
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"configureViewController(for:completion:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 91, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"configureViewController(for:completion:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 91);
      }
      sub_100FB8A6C((uint64_t)v21, (uint64_t)&v24);
      if (*((void *)&v25 + 1))
      {
        v27[0] = v24;
        v27[1] = v25;
        uint64_t v28 = v26;
        if (*(void *)(a2 + 16))
        {
          Swift::Int v11 = AnyHashable._rawHashValue(seed:)(*(void *)(a2 + 40));
          uint64_t v12 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v13 = v11 & ~v12;
          if ((*(void *)(v8 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
          {
            uint64_t v14 = v4;
            uint64_t v15 = ~v12;
            while (1)
            {
              sub_10050BF84(*(void *)(a2 + 48) + 40 * v13, (uint64_t)&v24);
              char v16 = static AnyHashable.== infix(_:_:)();
              sub_10050BFE0((uint64_t)&v24);
              if (v16) {
                break;
              }
              unint64_t v13 = (v13 + 1) & v15;
              if (((*(void *)(v8 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
              {
                sub_10050BFE0((uint64_t)v27);
                swift_unknownObjectRelease();
                goto LABEL_23;
              }
            }
            sub_10050BFE0((uint64_t)v27);
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
LABEL_23:
            uint64_t v4 = v14;
          }
          else
          {
            sub_10050BFE0((uint64_t)v27);
            swift_unknownObjectRelease();
          }
          unint64_t v3 = v18;
          unint64_t v7 = v19;
          goto LABEL_7;
        }
        sub_10050BFE0((uint64_t)v27);
      }
      else
      {
        sub_100522F00((uint64_t)&v24, &qword_10167B190);
      }
      swift_unknownObjectRelease();
LABEL_7:
      if (v6 == v4) {
        return v29;
      }
    }
  }
  return v5;
}

uint64_t sub_100FB543C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a3;
  uint64_t v5 = a1;
  if (a3 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      unint64_t v20 = v4;
      unint64_t v22 = v4 & 0xC000000000000001;
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v9 = i - 4;
        if (v22)
        {
          uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v10 = i - 3;
          if (__OFADD__(v9, 1)) {
            goto LABEL_24;
          }
        }
        else
        {
          uint64_t v5 = *(void *)(v4 + 8 * i);
          swift_unknownObjectRetain();
          uint64_t v10 = i - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
        }
        uint64_t v11 = swift_dynamicCastObjCProtocolConditional();
        if (v11)
        {
          uint64_t v12 = v11;
          swift_getObjectType();
          uint64_t v13 = swift_conformsToProtocol2();
          uint64_t v14 = v13 ? v13 : 0;
          if (v13 ? v12 : 0)
          {
            uint64_t v16 = v6;
            uint64_t ObjectType = swift_getObjectType();
            unint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
            swift_unknownObjectRetain();
            if (v18(ObjectType, v14))
            {
              swift_unknownObjectRetain();
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
            uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a4, ObjectType, v14);
            sub_1006E0CB8(v8);
            swift_unknownObjectRelease();
            uint64_t v6 = v16;
            unint64_t v4 = v20;
          }
        }
        swift_unknownObjectRelease();
        if (v10 == v6)
        {
          swift_bridgeObjectRelease();
          return a1;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return v5;
}

void sub_100FB5698(void *a1, char *a2, uint64_t a3, void *a4)
{
  uint64_t v82 = a2;
  uint64_t v7 = type metadata accessor for ImagePlaygroundConcept();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v81 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v18);
  uint64_t v80 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v78 = *(void *)(v20 - 8);
  uint64_t v79 = v20;
  __chkstk_darwin(v20, v21);
  uint64_t v77 = (char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a3;
  *(void *)(v23 + 24) = a4;
  uint64_t v84 = a3;
  uint64_t v85 = v23;
  swift_retain();
  id v83 = a4;
  id v24 = [a1 editorController];
  if (!v24)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"configureViewController(for:completion:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 79, (uint64_t)"No editor controller", 20, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"configureViewController(for:completion:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 79);
    goto LABEL_11;
  }
  long long v25 = v24;
  id v26 = [a1 selectionModelTranslator];
  if (!v26)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"configureViewController(for:completion:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 80, (uint64_t)"No selection model translator", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"configureViewController(for:completion:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 80);

LABEL_11:
    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v44 = Strong;
      [Strong presentViewController:*(void *)&v83[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController] animated:1 completion:0];
      swift_release();

      return;
    }
    goto LABEL_17;
  }
  unint64_t v27 = v26;
  long long v68 = v16;
  uint64_t v69 = v17;
  uint64_t v70 = v13;
  uint64_t v71 = v12;
  id v75 = v25;
  id v28 = [v25 selectionPath];
  id v76 = v27;
  id v29 = [v27 infosForSelectionPath:v28];
  uint64_t v30 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  Class isa = Set._bridgeToObjectiveC()().super.isa;
  id v72 = a1;
  id v32 = [a1 topLevelZOrderedSiblingsOfInfos:isa];

  uint64_t v67 = sub_1005057FC(&qword_101673060);
  unint64_t v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v34 = sub_100FB50FC(v33, v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v35 = v28;
  unint64_t v74 = sub_100FB543C((uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (unint64_t)v34, (uint64_t)v35);
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  id v73 = v35;

  uint64_t v82 = *(char **)&v82[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController];
  int64_t v38 = *(void *)(v37 + 16);
  if (v38)
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1006BB804(0, v38, 0);
    uint64_t v39 = aBlock[0];
    uint64_t v40 = v37 + 40;
    do
    {
      swift_bridgeObjectRetain();
      static ImagePlaygroundConcept.extracted(from:title:)();
      swift_bridgeObjectRelease();
      aBlock[0] = v39;
      unint64_t v42 = *(void *)(v39 + 16);
      unint64_t v41 = *(void *)(v39 + 24);
      if (v42 >= v41 >> 1)
      {
        sub_1006BB804(v41 > 1, v42 + 1, 1);
        uint64_t v39 = aBlock[0];
      }
      v40 += 16;
      *(void *)(v39 + 16) = v42 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v39+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v42, v11, v7);
      --v38;
    }
    while (v38);
  }
  swift_bridgeObjectRelease();
  uint64_t v45 = v85;
  unint64_t v46 = v82;
  dispatch thunk of ImagePlaygroundViewController.concepts.setter();
  id v47 = v75;
  id v48 = v76;
  if (v74 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v66 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v66) {
      goto LABEL_19;
    }
  }
  else if (!*(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_19;
  }
  id v49 = [v72 board];
  if (v49)
  {
    uint64_t v50 = v49;
    id v51 = [objc_allocWithZone((Class)CRLCanvasImager) initWithBoard:v49];
    Class v52 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v51 setInfos:v52];

    sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
    uint64_t v54 = v77;
    uint64_t v53 = v78;
    uint64_t v55 = v79;
    (*(void (**)(char *, void, uint64_t))(v78 + 104))(v77, enum case for DispatchQoS.QoSClass.default(_:), v79);
    uint64_t v56 = (void *)static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v55);
    uint64_t v57 = (void *)swift_allocObject();
    v57[2] = v51;
    v57[3] = v46;
    v57[4] = sub_100FB8BC8;
    v57[5] = v45;
    aBlock[4] = sub_100FB8C24;
    aBlock[5] = v57;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_100679958;
    aBlock[3] = &unk_101535EC8;
    id v58 = _Block_copy(aBlock);
    id v59 = v51;
    id v60 = v46;
    swift_retain();
    uint64_t v61 = v80;
    static DispatchQoS.unspecified.getter();
    long long v86 = _swiftEmptyArrayStorage;
    sub_100522CDC();
    sub_1005057FC((uint64_t *)&unk_1016725D0);
    sub_10056B494();
    uint64_t v62 = v68;
    uint64_t v63 = v71;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();

    _Block_release(v58);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v62, v63);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v61, v69);
    swift_release();
LABEL_17:
    swift_release();
    return;
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"configureViewController(for:completion:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 110, (uint64_t)"No board", 8, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"configureViewController(for:completion:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 110);
  id v48 = v76;
LABEL_19:
  swift_bridgeObjectRelease();
  dispatch thunk of ImagePlaygroundViewController.sourceImage.setter();
  swift_beginAccess();
  uint64_t v64 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v64)
  {
    uint64_t v65 = v64;
    [v64 presentViewController:*(void *)&v83[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController] animated:1 completion:0];
    swift_release();
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_100FB614C(uint64_t a1, void (*a2)(double *, Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *)(CKRecordID recordID, Swift::String recordType), uint64_t), uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)v71 - v12;
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  unint64_t v74 = (char *)v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v78 = (char *)v71 - v20;
  __chkstk_darwin(v21, v22);
  id v24 = (char *)v71 - v23;
  uint64_t v25 = *(void *)(a1 + 16);
  if (v25)
  {
    v71[1] = a3;
    id v72 = a2;
    id v73 = v9;
    Swift::String v89 = _swiftEmptyArrayStorage;
    unint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v26 = v15 + 16;
    uint64_t v84 = v27;
    unint64_t v76 = (*(unsigned __int8 *)(v26 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 64);
    uint64_t v28 = a1 + v76;
    uint64_t v79 = *(void *)(v26 + 56);
    id v29 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 40);
    id v83 = (unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 32);
    uint64_t v30 = (void (**)(char *, char *, uint64_t))(v26 + 16);
    uint64_t v80 = (void (**)(char *, uint64_t))(v26 - 8);
    v71[0] = a1;
    swift_bridgeObjectRetain();
    uint64_t v75 = v26;
    uint64_t v77 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 40);
    uint64_t v81 = (void (**)(char *, char *, uint64_t))(v26 + 16);
    while (1)
    {
      v84(v13, v28, v14);
      uint64_t v85 = *v29;
      v85(v13, 0, 1, v14);
      uint64_t v82 = *v83;
      if (v82(v13, 1, v14) == 1) {
        break;
      }
      id v32 = *v30;
      (*v30)(v24, v13, v14);
      if (URL.startAccessingSecurityScopedResource()())
      {
        v32(v78, v24, v14);
        unint64_t v33 = v89;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB824(0, *((void *)v33 + 2) + 1, 1);
          unint64_t v33 = v89;
        }
        unint64_t v35 = *((void *)v33 + 2);
        unint64_t v34 = *((void *)v33 + 3);
        if (v35 >= v34 >> 1)
        {
          sub_1006BB824(v34 > 1, v35 + 1, 1);
          unint64_t v33 = v89;
        }
        *((void *)v33 + 2) = v35 + 1;
        uint64_t v31 = v79;
        v32((char *)v33 + v76 + v35 * v79, v78, v14);
        Swift::String v89 = v33;
        id v29 = v77;
      }
      else
      {
        (*v80)(v24, v14);
        uint64_t v31 = v79;
      }
      v28 += v31;
      --v25;
      uint64_t v30 = v81;
      if (!v25)
      {
        v85(v13, 1, 1, v14);
        break;
      }
    }
    uint64_t v39 = v71[0];
    swift_bridgeObjectRelease();
    sub_100522F00((uint64_t)v13, &qword_101672E90);
    uint64_t v40 = v89;
    id v41 = objc_allocWithZone((Class)CRLTemporaryDirectory);
    NSString v42 = String._bridgeToObjectiveC()();
    Swift::String v89 = 0;
    id v43 = [v41 initWithSignature:v42 error:&v89];

    uint64_t v44 = v89;
    if (v43)
    {
      uint64_t v45 = self;
      unint64_t v46 = v44;
      id v47 = [v45 defaultManager];
      id v48 = v43;
      id v49 = v47;
      uint64_t v50 = sub_100FB4C90(v39, v48, v49);

      uint64_t v51 = swift_allocObject();
      *(void *)(v51 + 16) = v48;
      id v52 = v48;
      v72(v50, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), v51);

      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      uint64_t v53 = v89;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_10166FAC8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v54 = (void *)static OS_os_log.crlInsertMedia;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      swift_getErrorValue();
      uint64_t v56 = v87;
      uint64_t v57 = v88;
      uint64_t v81 = v54;
      uint64_t v58 = Error.publicDescription.getter(v56, v57);
      uint64_t v60 = v59;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v61 = sub_100528BE4();
      *(void *)(inited + 64) = v61;
      *(void *)(inited + 32) = v58;
      *(void *)(inited + 40) = v60;
      swift_getErrorValue();
      uint64_t v62 = Error.fullDescription.getter(v86);
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v61;
      *(void *)(inited + 72) = v62;
      *(void *)(inited + 80) = v63;
      uint64_t v64 = static os_log_type_t.error.getter();
      uint64_t v65 = v81;
      sub_100BAC898((uint64_t)v81, (uint64_t)&_mh_execute_header, v64, (uint64_t)"Error creating temporary directory: %{public}@ <%@>", 51, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      v72(_swiftEmptyArrayStorage, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
      swift_errorRelease();
    }
    uint64_t v66 = *((void *)v40 + 2);
    uint64_t v67 = v73;
    long long v68 = v74;
    uint64_t v69 = v79;
    if (v66)
    {
      uint64_t v70 = (char *)v40 + v76;
      swift_retain();
      while (1)
      {
        v84(v67, (uint64_t)v70, v14);
        v85(v67, 0, 1, v14);
        if (v82(v67, 1, v14) == 1) {
          break;
        }
        (*v30)(v68, v67, v14);
        URL.stopAccessingSecurityScopedResource()();
        (*v80)(v68, v14);
        v70 += v69;
        if (!--v66) {
          goto LABEL_27;
        }
      }
    }
    else
    {
      swift_retain();
LABEL_27:
      v85(v67, 1, 1, v14);
    }
    return swift_release_n();
  }
  else
  {
    if (qword_10166FAC8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v36 = (id)static OS_os_log.crlInsertMedia;
    uint64_t v37 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v36, (uint64_t)&_mh_execute_header, v37, (uint64_t)"No URLs.", 8, 2, (uint64_t)_swiftEmptyArrayStorage);

    return ((uint64_t (*)(double *, Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *)(CKRecordID, Swift::String), void))a2)(_swiftEmptyArrayStorage, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
  }
}

void sub_100FB6A90(void *a1, char *a2, uint64_t a3, void *a4)
{
  uint64_t v84 = a2;
  uint64_t v7 = type metadata accessor for ImagePlaygroundConcept();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v83 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v18);
  uint64_t v82 = (char *)v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v80 = *(void *)(v20 - 8);
  uint64_t v81 = v20;
  __chkstk_darwin(v20, v21);
  uint64_t v79 = (char *)v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a3;
  *(void *)(v23 + 24) = a4;
  uint64_t v86 = a3;
  uint64_t v87 = v23;
  swift_retain();
  uint64_t v85 = a4;
  id v24 = [a1 editorController];
  if (v24)
  {
    uint64_t v25 = v24;
    unint64_t v74 = v16;
    id v26 = [a1 selectionModelTranslator];
    if (v26)
    {
      id v27 = v26;
      uint64_t v71 = v17;
      uint64_t v72 = v13;
      uint64_t v73 = v12;
      id v78 = v25;
      id v28 = [v25 selectionPath];
      id v29 = [v27 infosForSelectionPath:v28];
      uint64_t v30 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      Class isa = Set._bridgeToObjectiveC()().super.isa;
      unint64_t v76 = a1;
      id v32 = [a1 topLevelZOrderedSiblingsOfInfos:isa];

      v70[1] = sub_1005057FC(&qword_101673060);
      unint64_t v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v34 = sub_100FB50FC(v33, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v35 = v28;
      unint64_t v36 = sub_100FB543C((uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (unint64_t)v34, (uint64_t)v35);
      uint64_t v38 = v37;
      swift_bridgeObjectRelease();
      id v75 = v35;

      uint64_t v84 = *(char **)&v84[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController];
      int64_t v39 = *(void *)(v38 + 16);
      id v77 = v27;
      if (v39)
      {
        v70[0] = v36;
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_1006BB804(0, v39, 0);
        uint64_t v40 = aBlock[0];
        uint64_t v41 = v38 + 40;
        do
        {
          swift_bridgeObjectRetain();
          static ImagePlaygroundConcept.extracted(from:title:)();
          swift_bridgeObjectRelease();
          aBlock[0] = v40;
          unint64_t v43 = *(void *)(v40 + 16);
          unint64_t v42 = *(void *)(v40 + 24);
          if (v43 >= v42 >> 1)
          {
            sub_1006BB804(v42 > 1, v43 + 1, 1);
            uint64_t v40 = aBlock[0];
          }
          v41 += 16;
          *(void *)(v40 + 16) = v43 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v40+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v43, v11, v7);
          --v39;
        }
        while (v39);
        swift_bridgeObjectRelease();
        uint64_t v44 = v87;
        id v27 = v77;
        unint64_t v36 = v70[0];
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v44 = v87;
      }
      id v48 = v84;
      dispatch thunk of ImagePlaygroundViewController.concepts.setter();
      id v49 = v78;
      uint64_t v50 = v76;
      if (v36 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v69 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v69) {
          goto LABEL_17;
        }
      }
      else if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_17:
        id v51 = [v50 board];
        if (v51)
        {
          id v52 = v51;
          id v53 = [objc_allocWithZone((Class)CRLCanvasImager) initWithBoard:v51];
          Class v54 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v53 setInfos:v54];

          sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
          uint64_t v56 = v79;
          uint64_t v55 = v80;
          uint64_t v57 = v81;
          (*(void (**)(char *, void, uint64_t))(v80 + 104))(v79, enum case for DispatchQoS.QoSClass.default(_:), v81);
          uint64_t v58 = (void *)static OS_dispatch_queue.global(qos:)();
          (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v57);
          uint64_t v59 = (void *)swift_allocObject();
          v59[2] = v53;
          v59[3] = v48;
          v59[4] = sub_100FB8A2C;
          v59[5] = v44;
          aBlock[4] = sub_100FB8A38;
          aBlock[5] = v59;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = *(void *)"";
          aBlock[2] = sub_100679958;
          aBlock[3] = &unk_101535D88;
          uint64_t v60 = _Block_copy(aBlock);
          id v61 = v53;
          id v62 = v48;
          swift_retain();
          uint64_t v63 = v82;
          static DispatchQoS.unspecified.getter();
          uint64_t v88 = _swiftEmptyArrayStorage;
          sub_100522CDC();
          sub_1005057FC((uint64_t *)&unk_1016725D0);
          sub_10056B494();
          uint64_t v64 = v74;
          uint64_t v65 = v73;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();

          _Block_release(v60);
          (*(void (**)(char *, uint64_t))(v72 + 8))(v64, v65);
          (*(void (**)(char *, uint64_t))(v83 + 8))(v63, v71);
          swift_release();
          swift_release();
          return;
        }
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"configureViewController(for:completion:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 110, (uint64_t)"No board", 8, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"configureViewController(for:completion:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 110);
        id v27 = v77;
      }
      swift_bridgeObjectRelease();
      dispatch thunk of ImagePlaygroundViewController.sourceImage.setter();
      swift_beginAccess();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v67 = (void *)Strong;
        id v68 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController);

        [v68 presentViewController:*(void *)&v85[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController] animated:1 completion:0];
        swift_release();
      }
      else
      {
        swift_release();
      }
      return;
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"configureViewController(for:completion:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 80, (uint64_t)"No selection model translator", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"configureViewController(for:completion:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 80);
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"configureViewController(for:completion:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 79, (uint64_t)"No editor controller", 20, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"configureViewController(for:completion:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 79);
  }
  swift_beginAccess();
  uint64_t v45 = swift_unknownObjectWeakLoadStrong();
  if (v45)
  {
    unint64_t v46 = (void *)v45;
    id v47 = *(id *)(v45 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController);

    [v47 presentViewController:*(void *)&v85[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController] animated:1 completion:0];
    swift_release();
  }
  else
  {
    swift_release();
  }
}

void sub_100FB75A0(uint64_t a1, uint64_t a2)
{
  uint64_t v84 = a2;
  uint64_t v3 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v80 - v9;
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v88 = (double *)((char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15, v16);
  __chkstk_darwin(v17, v18);
  uint64_t v21 = (char *)&v80 - v20;
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22)
  {
    uint64_t v82 = v19;
    uint64_t v83 = v6;
    long long v99 = _swiftEmptyArrayStorage;
    id v24 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
    uint64_t v23 = v12 + 16;
    long long v94 = v24;
    unint64_t v85 = (*(unsigned __int8 *)(v23 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 64);
    unint64_t v25 = a1 + v85;
    uint64_t v26 = *(void *)(v23 + 56);
    long long v95 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 40);
    uint64_t v93 = (unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 32);
    uint64_t v91 = (void (**)(char *, char *, uint64_t))(v23 + 16);
    uint64_t v87 = (void (**)(char *, uint64_t))(v23 - 8);
    uint64_t v81 = a1;
    swift_bridgeObjectRetain();
    uint64_t v86 = v23;
    uint64_t v90 = v26;
    while (1)
    {
      v94(v10, v25, v11);
      Swift::String v89 = *v95;
      v89(v10, 0, 1, v11);
      uint64_t v92 = *v93;
      if (v92(v10, 1, v11) == 1) {
        break;
      }
      id v27 = *v91;
      (*v91)(v21, v10, v11);
      if (URL.startAccessingSecurityScopedResource()())
      {
        v27((char *)v88, v21, v11);
        id v28 = v99;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB824(0, *((void *)v28 + 2) + 1, 1);
          id v28 = v99;
        }
        unint64_t v30 = *((void *)v28 + 2);
        unint64_t v29 = *((void *)v28 + 3);
        if (v30 >= v29 >> 1)
        {
          sub_1006BB824(v29 > 1, v30 + 1, 1);
          id v28 = v99;
        }
        *((void *)v28 + 2) = v30 + 1;
        uint64_t v26 = v90;
        v27((char *)v28 + v85 + v30 * v90, (char *)v88, v11);
        long long v99 = v28;
      }
      else
      {
        (*v87)(v21, v11);
      }
      v25 += v26;
      if (!--v22)
      {
        v89(v10, 1, 1, v11);
        break;
      }
    }
    uint64_t v37 = v81;
    swift_bridgeObjectRelease();
    sub_100522F00((uint64_t)v10, &qword_101672E90);
    uint64_t v88 = v99;
    id v38 = objc_allocWithZone((Class)CRLTemporaryDirectory);
    NSString v39 = String._bridgeToObjectiveC()();
    long long v99 = 0;
    id v40 = [v38 initWithSignature:v39 error:&v99];

    uint64_t v41 = v99;
    if (v40)
    {
      unint64_t v42 = self;
      unint64_t v43 = v41;
      id v44 = [v42 defaultManager];
      id v45 = v40;
      unint64_t v46 = sub_100FB4C90(v37, v45, v44);

      uint64_t v47 = swift_allocObject();
      *(void *)(v47 + 16) = v45;
      uint64_t v48 = swift_allocObject();
      *(void *)(v48 + 16) = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
      *(void *)(v48 + 24) = v47;
      id v49 = v45;
      swift_retain();
      uint64_t v50 = v84;
      sub_1009C65D4((uint64_t)v46, sub_100659320, v48);
      uint64_t v51 = v50;
      swift_release();
      uint64_t v52 = OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_gpHelper;
      uint64_t v53 = *(void *)(v51 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_gpHelper);
      if (v53)
      {
        [*(id *)(v53 + OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController) dismissViewControllerAnimated:1 completion:0];
        Class v54 = *(void **)(v51 + v52);
      }
      else
      {
        Class v54 = 0;
      }
      *(void *)(v51 + v52) = 0;

      swift_bridgeObjectRelease();
      swift_release();

      uint64_t v73 = v83;
      uint64_t v74 = v82;
      id v75 = (void (**)(uint64_t, char *, uint64_t))v91;
      unint64_t v76 = (void (**)(uint64_t, uint64_t))v87;
      id v77 = v89;
    }
    else
    {
      uint64_t v55 = v99;
      uint64_t v56 = _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_10166FAC8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v57 = (void *)static OS_os_log.crlInsertMedia;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      swift_getErrorValue();
      uint64_t v59 = v97;
      uint64_t v60 = v98;
      id v61 = v57;
      uint64_t v62 = Error.publicDescription.getter(v59, v60);
      uint64_t v64 = v63;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v65 = sub_100528BE4();
      *(void *)(inited + 64) = v65;
      *(void *)(inited + 32) = v62;
      *(void *)(inited + 40) = v64;
      uint64_t v86 = v56;
      swift_getErrorValue();
      uint64_t v66 = Error.fullDescription.getter(v96);
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v65;
      *(void *)(inited + 72) = v66;
      *(void *)(inited + 80) = v67;
      uint64_t v68 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v61, (uint64_t)&_mh_execute_header, v68, (uint64_t)"Error creating temporary directory: %{public}@ <%@>", 51, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      uint64_t v69 = swift_allocObject();
      *(void *)(v69 + 16) = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
      *(void *)(v69 + 24) = 0;
      uint64_t v70 = v84;
      sub_1009C65D4((uint64_t)_swiftEmptyArrayStorage, sub_1006591F0, v69);
      swift_release();
      uint64_t v71 = OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_gpHelper;
      uint64_t v72 = *(char **)(v70 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_gpHelper);
      if (v72)
      {
        [*(id *)&v72[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController] dismissViewControllerAnimated:1 completion:0];
        uint64_t v72 = *(char **)(v70 + v71);
      }
      uint64_t v73 = v83;
      uint64_t v74 = v82;
      id v75 = (void (**)(uint64_t, char *, uint64_t))v91;
      unint64_t v76 = (void (**)(uint64_t, uint64_t))v87;
      id v77 = v89;
      *(void *)(v70 + v71) = 0;

      swift_errorRelease();
    }
    uint64_t v78 = *((void *)v88 + 2);
    if (v78)
    {
      uint64_t v79 = (char *)v88 + v85;
      swift_retain();
      while (1)
      {
        v94(v73, (unint64_t)v79, v11);
        v77(v73, 0, 1, v11);
        if (v92(v73, 1, v11) == 1) {
          break;
        }
        (*v75)(v74, v73, v11);
        URL.stopAccessingSecurityScopedResource()();
        (*v76)(v74, v11);
        v79 += v90;
        if (!--v78) {
          goto LABEL_34;
        }
      }
    }
    else
    {
      swift_retain();
LABEL_34:
      v77(v73, 1, 1, v11);
    }
    swift_release_n();
  }
  else
  {
    if (qword_10166FAC8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v31 = (id)static OS_os_log.crlInsertMedia;
    uint64_t v32 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v31, (uint64_t)&_mh_execute_header, v32, (uint64_t)"No URLs.", 8, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
    *(void *)(v33 + 24) = 0;
    uint64_t v34 = v84;
    sub_1009C65D4((uint64_t)_swiftEmptyArrayStorage, sub_100659320, v33);
    swift_release();
    uint64_t v35 = OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_gpHelper;
    unint64_t v36 = *(char **)(v34 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_gpHelper);
    if (v36)
    {
      [*(id *)&v36[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController] dismissViewControllerAnimated:1 completion:0];
      unint64_t v36 = *(char **)(v34 + v35);
    }
    *(void *)(v34 + v35) = 0;
  }
}

void sub_100FB8064(void *a1)
{
  uint64_t v37 = &type metadata for CRLGenerativePlaygroundFeatureFlags;
  unint64_t v38 = sub_1005C6C64();
  char v2 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v36);
  if ((v2 & 1) == 0) {
    return;
  }
  uint64_t v37 = &type metadata for CRLFeatureFlags;
  unint64_t v38 = sub_1005396A8();
  v36[0] = 13;
  char v3 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v36);
  if ((v3 & 1) == 0
    || ![(id)type metadata accessor for ImagePlaygroundViewController() available])
  {
    return;
  }
  id v4 = [a1 editorController];
  if (!v4)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"iccHasGenerativePlaygroundInputSelection(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 62, (uint64_t)"No editor controller", 20, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"iccHasGenerativePlaygroundInputSelection(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 62);
    return;
  }
  uint64_t v5 = v4;
  id v6 = [a1 selectionModelTranslator];
  if (!v6)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"iccHasGenerativePlaygroundInputSelection(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 63, (uint64_t)"No selection model translator", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"iccHasGenerativePlaygroundInputSelection(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 63);

    return;
  }
  uint64_t v26 = v6;
  id v27 = [v5 selectionPath];
  id v7 = [v26 infosForSelectionPath:];
  uint64_t v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  int64_t v9 = 0;
  uint64_t v10 = v8 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v8 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  if (v13) {
    goto LABEL_11;
  }
LABEL_12:
  int64_t v17 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v17 >= v14)
  {
LABEL_33:

    swift_release();
    return;
  }
  unint64_t v18 = *(void *)(v10 + 8 * v17);
  ++v9;
  if (!v18)
  {
    int64_t v9 = v17 + 1;
    if (v17 + 1 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v10 + 8 * v9);
    if (!v18)
    {
      int64_t v9 = v17 + 2;
      if (v17 + 2 >= v14) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v10 + 8 * v9);
      if (!v18)
      {
        int64_t v19 = v17 + 3;
        if (v19 < v14)
        {
          unint64_t v18 = *(void *)(v10 + 8 * v19);
          if (v18)
          {
            int64_t v9 = v19;
            goto LABEL_25;
          }
          while (1)
          {
            int64_t v9 = v19 + 1;
            if (__OFADD__(v19, 1)) {
              break;
            }
            if (v9 >= v14) {
              goto LABEL_33;
            }
            unint64_t v18 = *(void *)(v10 + 8 * v9);
            ++v19;
            if (v18) {
              goto LABEL_25;
            }
          }
LABEL_39:
          __break(1u);
          return;
        }
        goto LABEL_33;
      }
    }
  }
LABEL_25:
  unint64_t v13 = (v18 - 1) & v18;
  for (unint64_t i = __clz(__rbit64(v18)) + (v9 << 6); ; unint64_t i = v15 | (v9 << 6))
  {
    sub_10050BF84(*(void *)(v8 + 48) + 40 * i, (uint64_t)v36);
    sub_1005057FC(&qword_1016A4728);
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v32 = 0;
      memset(v31, 0, sizeof(v31));
      sub_100522F00((uint64_t)v31, &qword_1016A4730);
      if (!v13) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
    sub_10053974C(v31, (uint64_t)v33);
    uint64_t v20 = v34;
    uint64_t v21 = v35;
    sub_10050F848(v33, v34);
    char v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
    sub_1005498A4((uint64_t)v33, (uint64_t)v28);
    if (v22)
    {

      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v28);
      swift_release();
      goto LABEL_37;
    }
    uint64_t v23 = v29;
    uint64_t v24 = v30;
    sub_10050F848(v28, v29);
    uint64_t v25 = *(void *)((*(uint64_t (**)(id, uint64_t, uint64_t))(v24 + 16))(v27, v23, v24) + 16);
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v28);
    if (v25) {
      break;
    }
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v33);
    if (!v13) {
      goto LABEL_12;
    }
LABEL_11:
    unint64_t v15 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
  }
  swift_release();

LABEL_37:
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v33);
}

void sub_100FB8558()
{
  if (qword_10166FAC8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.crlInsertMedia;
  uint64_t v1 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v0, (uint64_t)&_mh_execute_header, v1, (uint64_t)"imagePlaygroundViewController(_:didCreateImageAt:)", 50, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v3 = (void *)Strong;
    uint64_t v4 = swift_unknownObjectWeakLoadStrong();
    if (v4)
    {
      id v6 = (void *)v4;
      URL._bridgeToObjectiveC()(v5);
      uint64_t v8 = v7;
      [v6 generativePlaygroundHelper:v3 didCreateImageAt:v7];

      swift_unknownObjectRelease();
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"imagePlaygroundViewController(_:didCreateImageAt:)", 50, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 187, (uint64_t)"No delegate", 11, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"imagePlaygroundViewController(_:didCreateImageAt:)", 50, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 187);
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"imagePlaygroundViewController(_:didCreateImageAt:)", 50, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 186, (uint64_t)"No helper", 9, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"imagePlaygroundViewController(_:didCreateImageAt:)", 50, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 186);
  }
}

void sub_100FB8794()
{
  if (qword_10166FAC8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.crlInsertMedia;
  uint64_t v1 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v0, (uint64_t)&_mh_execute_header, v1, (uint64_t)"imagePlaygroundViewControllerDidCancel(_:)", 42, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v3 = (void *)Strong;
    uint64_t v4 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v4)
    {
      [v4 generativePlaygroundHelperDidCancel:v3];

      swift_unknownObjectRelease();
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"imagePlaygroundViewControllerDidCancel(_:)", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 196, (uint64_t)"No delegate", 11, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"imagePlaygroundViewControllerDidCancel(_:)", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 196);
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"imagePlaygroundViewControllerDidCancel(_:)", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 195, (uint64_t)"No helper", 9, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"imagePlaygroundViewControllerDidCancel(_:)", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLGenerativePlaygroundHelper.swift", 96, 2, 195);
  }
}

uint64_t sub_100FB89B8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100FB89F0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100FB8A2C()
{
  sub_1009C6358(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100FB8A38()
{
  return sub_100FB3464(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100FB8A44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100FB8A54()
{
  return swift_release();
}

uint64_t sub_100FB8A60()
{
  return sub_100FB3734(*(void *)(v0 + 16), *(id *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t sub_100FB8A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10167B190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100FB8AD4()
{
  swift_release();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100FB8B1C()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 32);
  uint64_t result = (*(uint64_t (**)(void))(v0 + 16))();
  if (v1) {
    return v1(result);
  }
  return result;
}

uint64_t sub_100FB8B64()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 72, 7);
}

void sub_100FB8BC8()
{
  sub_1005B69CC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100FB8BD4()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t type metadata accessor for CRLAASApplicationMangerConfiguration()
{
  return self;
}

id sub_100FB8CA8()
{
  id result = sub_10021E74C();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100FB8CFC()
{
  return sub_100FB8D68();
}

uint64_t sub_100FB8D34()
{
  return sub_100FB8D68();
}

uint64_t sub_100FB8D68()
{
  uint64_t v0 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v0 - 8, v1);
  char v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)();
  uint64_t v4 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    id v6 = objc_allocWithZone((Class)type metadata accessor for Endpoint());
    return Endpoint.init(url:name:sharedContainerIdentifier:)();
  }
  return result;
}

uint64_t sub_100FB8E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v11 - 8, v12);
  int64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a3 + 16) && (unint64_t v15 = sub_1009563EC(a2), (v16 & 1) != 0))
  {
    char v17 = *(unsigned char *)(*(void *)(*(void *)(a3 + 56) + 8 * v15) + 40);
    sub_100540CFC(a2, (uint64_t)v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
    if (v17)
    {
      char v18 = 1;
      goto LABEL_10;
    }
  }
  else
  {
    sub_100540CFC(a2, (uint64_t)v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
  }
  if (*(void *)(a3 + 16) && (unint64_t v19 = sub_1009563EC((uint64_t)v14), (v20 & 1) != 0))
  {
    uint64_t v21 = *(void *)(*(void *)(a3 + 56) + 8 * v19);
    swift_beginAccess();
    uint64_t v22 = *(void *)(v21 + 24);
    swift_bridgeObjectRetain();
    char v18 = sub_1006E3E24((uint64_t)v10, v22);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v18 = 0;
  }
LABEL_10:
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  sub_100510028((uint64_t)v14);
  return v18 & 1;
}

uint64_t sub_100FB907C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLTransientSyncExclusionCollection.BoardSyncExclusionCollection()
{
  return self;
}

ValueMetadata *type metadata accessor for CRLTransientSyncExclusionCollection()
{
  return &type metadata for CRLTransientSyncExclusionCollection;
}

uint64_t sub_100FB90F0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  if (*(void *)(v8 + 16) && (unint64_t v9 = sub_1009563EC(a1), (v10 & 1) != 0))
  {
    uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
    swift_retain();
  }
  else
  {
    type metadata accessor for CRLTransientSyncExclusionCollection.BoardSyncExclusionCollection();
    uint64_t v11 = swift_allocObject();
    *(_WORD *)(v11 + 16) = 0;
    *(void *)(v11 + 24) = &_swiftEmptySetSingleton;
    *(void *)(v11 + 32) = &_swiftEmptySetSingleton;
    *(_WORD *)(v11 + 40) = 0;
    *(unsigned char *)(v11 + 42) = 0;
    sub_100540CFC(a1, (uint64_t)v7);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_100978E3C(v11, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v15;
    swift_bridgeObjectRelease();
    sub_100510028((uint64_t)v7);
  }
  return v11;
}

unint64_t sub_100FB9224(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674520);
  unint64_t result = __chkstk_darwin(v5 - 8, v6);
  unint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  if (*(void *)(v10 + 16))
  {
    unint64_t result = sub_1009563EC(a2);
    if (v11)
    {
      uint64_t v12 = *(void *)(*(void *)(v10 + 56) + 8 * result);
      swift_beginAccess();
      swift_retain();
      sub_100D16510(a1, (uint64_t)v9);
      sub_100510824((uint64_t)v9);
      swift_endAccess();
      if (*(unsigned char *)(v12 + 41) == 1)
      {
        *(unsigned char *)(v12 + 16) = 0;
        *(unsigned char *)(v12 + 40) = 0;
      }
      if (*(unsigned char *)(v12 + 42) == 1)
      {
        *(unsigned char *)(v12 + 16) = 0;
        *(unsigned char *)(v12 + 40) = 0;
        *(void *)(v12 + 24) = &_swiftEmptySetSingleton;
        swift_release();
        return swift_bridgeObjectRelease();
      }
      else
      {
        return swift_release();
      }
    }
  }
  return result;
}

unint64_t sub_100FB9350(unint64_t result, char a2)
{
  uint64_t v3 = *v2;
  if (*(void *)(v3 + 16))
  {
    unint64_t result = sub_1009563EC(result);
    if (v5)
    {
      uint64_t v6 = *(void *)(*(void *)(v3 + 56) + 8 * result);
      *(unsigned char *)(v6 + 16) = 0;
      if (a2) {
        *(unsigned char *)(v6 + 40) = 0;
      }
      if (*(unsigned char *)(v6 + 42) == 1)
      {
        *(unsigned char *)(v6 + 16) = 0;
        *(unsigned char *)(v6 + 40) = 0;
        swift_beginAccess();
        *(void *)(v6 + 24) = &_swiftEmptySetSingleton;
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

unint64_t sub_100FB93DC(char a1)
{
  unint64_t result = 0x6E6F697469736F70;
  switch(a1)
  {
    case 1:
      unint64_t result = 1702521203;
      break;
    case 2:
      unint64_t result = 0x656C676E61;
      break;
    case 3:
      unint64_t result = 0x6C61566874646977;
      break;
    case 4:
      unint64_t result = 0x6156746867696568;
      break;
    case 5:
      unint64_t result = 0x746E6F7A69726F68;
      break;
    case 6:
      unint64_t result = 0x6C61636974726576;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100FB94FC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_1016A4948);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  unint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100FBA0B0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v12 = *v3;
  HIBYTE(v11) = 0;
  sub_10089DC18();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v12 = v3[1];
    HIBYTE(v11) = 1;
    sub_100AB4E40();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v12) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 6;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v12 = v3[3];
    HIBYTE(v11) = 7;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

BOOL sub_100FB97A0(char *a1, char *a2)
{
  return qword_1011C05B0[*a1] == qword_1011C05B0[*a2];
}

Swift::Int sub_100FB97C4()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011C05B0[v1]);
  return Hasher._finalize()();
}

void sub_100FB9814()
{
  Hasher._combine(_:)(qword_1011C05B0[*v0]);
}

Swift::Int sub_100FB984C()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011C05B0[v1]);
  return Hasher._finalize()();
}

void sub_100FB9898(void *a1@<X8>)
{
  *a1 = qword_1011C05B0[*v1];
}

unint64_t sub_100FB98B0()
{
  return sub_100FB93DC(*v0);
}

uint64_t sub_100FB98B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100FBA26C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100FB98E0()
{
  return qword_1011C05B0[*v0];
}

void sub_100FB98F8(void *a1@<X8>)
{
  *a1 = &off_101503398;
}

uint64_t sub_100FB9908(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100FBA058();
  unint64_t v5 = sub_100FBA0B0();

  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100FB9960(uint64_t a1)
{
  unint64_t v2 = sub_100FBA0B0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100FB999C(uint64_t a1)
{
  unint64_t v2 = sub_100FBA0B0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100FB99D8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  long long v3 = a2[1];
  v6[0] = *a2;
  v6[1] = v3;
  return sub_100FB94F8(v5, v6) & 1;
}

double sub_100FB9A14@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100FBA5FC(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_100FB9A50(void *a1)
{
  return sub_100FB94FC(a1);
}

uint64_t sub_100FB9A68(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100FBA95C();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100FB9ABC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100FBA95C();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100FB9B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100FB9F48();
  unint64_t v7 = sub_100FBA9B0();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100FB9B80(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100FBA95C();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100FB9BCC()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100FB9C1C()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100FB9C64(uint64_t a1)
{
  unint64_t v2 = sub_100FBA218();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100FB9CB0(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 == *(float *)a2
    && *(float *)(a1 + 4) == *(float *)(a2 + 4)
    && *(float *)(a1 + 8) == *(float *)(a2 + 8)
    && *(float *)(a1 + 12) == *(float *)(a2 + 12)
    && *(float *)(a1 + 16) == *(float *)(a2 + 16)
    && ((*(unsigned __int8 *)(a1 + 20) ^ *(unsigned __int8 *)(a2 + 20)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 21) ^ *(unsigned __int8 *)(a2 + 21)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 22) ^ *(unsigned __int8 *)(a2 + 22)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 23) ^ *(unsigned __int8 *)(a2 + 23)) & 1) == 0)
  {
    return sub_100ED60AC(*(void *)(a1 + 24), *(void *)(a2 + 24));
  }
  else
  {
    return 0;
  }
}

uint64_t initializeWithCopy for CRLCanvasInfoGeometryData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLCanvasInfoGeometryData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(unsigned char *)(a1 + 21) = *(unsigned char *)(a2 + 21);
  *(unsigned char *)(a1 + 22) = *(unsigned char *)(a2 + 22);
  *(unsigned char *)(a1 + 23) = *(unsigned char *)(a2 + 23);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLCanvasInfoGeometryData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(unsigned char *)(a1 + 21) = *(unsigned char *)(a2 + 21);
  *(unsigned char *)(a1 + 22) = *(unsigned char *)(a2 + 22);
  *(unsigned char *)(a1 + 23) = *(unsigned char *)(a2 + 23);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CRLCanvasInfoGeometryData()
{
  return &type metadata for CRLCanvasInfoGeometryData;
}

unint64_t sub_100FB9E98()
{
  unint64_t result = qword_1016A48E0;
  if (!qword_1016A48E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A48E0);
  }
  return result;
}

unint64_t sub_100FB9EF0()
{
  unint64_t result = qword_1016A48E8;
  if (!qword_1016A48E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A48E8);
  }
  return result;
}

unint64_t sub_100FB9F48()
{
  unint64_t result = qword_1016A48F0;
  if (!qword_1016A48F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A48F0);
  }
  return result;
}

unint64_t sub_100FB9FA8()
{
  unint64_t result = qword_1016A48F8;
  if (!qword_1016A48F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A48F8);
  }
  return result;
}

unint64_t sub_100FBA000()
{
  unint64_t result = qword_1016A4900;
  if (!qword_1016A4900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4900);
  }
  return result;
}

unint64_t sub_100FBA058()
{
  unint64_t result = qword_1016A4908;
  if (!qword_1016A4908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4908);
  }
  return result;
}

unint64_t sub_100FBA0B0()
{
  unint64_t result = qword_1016A4910;
  if (!qword_1016A4910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4910);
  }
  return result;
}

unint64_t sub_100FBA108()
{
  unint64_t result = qword_1016A4918;
  if (!qword_1016A4918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4918);
  }
  return result;
}

unint64_t sub_100FBA160()
{
  unint64_t result = qword_1016A4920;
  if (!qword_1016A4920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4920);
  }
  return result;
}

unint64_t sub_100FBA1B8()
{
  unint64_t result = qword_1016A4928;
  if (!qword_1016A4928)
  {
    sub_100522D34(&qword_1016A4930);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4928);
  }
  return result;
}

unint64_t sub_100FBA218()
{
  unint64_t result = qword_1016A4938;
  if (!qword_1016A4938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4938);
  }
  return result;
}

uint64_t sub_100FBA26C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C676E61 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C61566874646977 && a2 == 0xEA00000000006469 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6156746867696568 && a2 == 0xEB0000000064696CLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746E6F7A69726F68 && a2 == 0xEE0070696C466C61 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6C61636974726576 && a2 == 0xEC00000070696C46 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_100FBA5FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_1016A4940);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  unint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100FBA0B0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v24 = 0;
    sub_10089DB08();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v10 = v25;
    char v24 = 1;
    sub_100AB4DEC();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v11 = v25;
    LOBYTE(v25) = 2;
    KeyedDecodingContainer.decode(_:forKey:)();
    int v13 = v12;
    LOBYTE(v25) = 3;
    char v14 = KeyedDecodingContainer.decode(_:forKey:)();
    LOBYTE(v25) = 4;
    char v15 = KeyedDecodingContainer.decode(_:forKey:)();
    LOBYTE(v25) = 5;
    int v23 = KeyedDecodingContainer.decode(_:forKey:)();
    LOBYTE(v25) = 6;
    int v22 = KeyedDecodingContainer.decode(_:forKey:)();
    sub_1005057FC((uint64_t *)&unk_101687A40);
    char v24 = 7;
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    HIDWORD(v20) = v15 & 1;
    int v21 = v14 & 1;
    char v16 = v23 & 1;
    char v17 = v22 & 1;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v18 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = v10;
    *(void *)(a2 + 8) = v11;
    *(_DWORD *)(a2 + 16) = v13;
    *(unsigned char *)(a2 + 20) = v21;
    *(unsigned char *)(a2 + 21) = BYTE4(v20);
    *(unsigned char *)(a2 + 22) = v16;
    *(unsigned char *)(a2 + 23) = v17;
    *(void *)(a2 + 24) = v18;
  }
  return result;
}

unint64_t sub_100FBA95C()
{
  unint64_t result = qword_1016A4950;
  if (!qword_1016A4950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4950);
  }
  return result;
}

unint64_t sub_100FBA9B0()
{
  unint64_t result = qword_1016A4958;
  if (!qword_1016A4958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4958);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLCanvasInfoGeometryData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100FBAAD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCanvasInfoGeometryData.CodingKeys()
{
  return &type metadata for CRLCanvasInfoGeometryData.CodingKeys;
}

unint64_t sub_100FBAB0C()
{
  unint64_t result = qword_1016A4960;
  if (!qword_1016A4960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4960);
  }
  return result;
}

uint64_t sub_100FBAB60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void sub_100FBAB6C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

uint64_t sub_100FBAEEC()
{
  return type metadata accessor for CRLMemoryWriteChannel();
}

uint64_t type metadata accessor for CRLMemoryWriteChannel()
{
  uint64_t result = qword_1016A49A0;
  if (!qword_1016A49A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100FBAF40()
{
  uint64_t result = type metadata accessor for DispatchData();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100FBAFD0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_100FBE9A4(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_100FBB010(uint64_t a1)
{
  v2[82] = v1;
  v2[81] = a1;
  uint64_t v3 = type metadata accessor for URL();
  v2[83] = v3;
  v2[84] = *(void *)(v3 - 8);
  v2[85] = swift_task_alloc();
  v2[86] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[87] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[88] = v5;
  v2[89] = v4;
  return _swift_task_switch(sub_100FBB11C, v5, v4);
}

uint64_t sub_100FBB11C()
{
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 688);
  uint64_t v2 = *(void *)(v0 + 672);
  uint64_t v3 = *(void *)(v0 + 664);
  uint64_t v25 = *(void *)(v0 + 680);
  uint64_t v4 = *(void *)(v0 + 648);
  swift_beginAccess();
  uint64_t v5 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  *(void *)(v0 + 720) = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v7 = v5;
  unint64_t v8 = sub_100AD0F58();
  uint64_t v10 = v9;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v11 = sub_100528BE4();
  *(void *)(v0 + 728) = v11;
  *(void *)(inited + 64) = v11;
  *(void *)(inited + 32) = v8;
  *(void *)(inited + 40) = v10;
  uint64_t v12 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v12, (uint64_t)"(ARViewBackend) loadScene(%@)", 29, 2, inited);
  swift_setDeallocating();
  *(void *)(v0 + 736) = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  int v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v13(v1, v4, v3);
  v13(v25, v1, v3);
  type metadata accessor for CRLUSDRendering.LoadReceipt(0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_entityLoadRequest) = 0;
  *(void *)(v0 + 744) = v14;
  *(void *)(v14 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_cancellable) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v14 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_url, v25, v3);
  *(void *)(v14 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_entityLoadRequest) = 0;
  swift_release();
  *(void *)(v14 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_cancellable) = 0;
  swift_release();
  uint64_t v15 = type metadata accessor for CRLUSDRendering.SceneRequest(0);
  *(void *)(v0 + 752) = v15;
  char v16 = (unsigned int *)(v4 + *(int *)(v15 + 24));
  uint64_t v17 = *v16;
  uint64_t v19 = *((void *)v16 + 2);
  uint64_t v18 = *((void *)v16 + 3);
  uint64_t v20 = *((void *)v16 + 8);
  long long v21 = *((_OWORD *)v16 + 2);
  long long v22 = *((_OWORD *)v16 + 3);
  *(void *)(v0 + 16) = v14;
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = v17;
  *(void *)(v0 + 40) = 0;
  *(void *)(v0 + 48) = v19;
  *(void *)(v0 + 56) = v18;
  *(_OWORD *)(v0 + 64) = v21;
  *(_OWORD *)(v0 + 80) = v22;
  *(void *)(v0 + 96) = v20;
  swift_retain();
  sub_100FBE9DC((uint64_t *)(v0 + 16));
  swift_release();
  int v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 760) = v23;
  *int v23 = v0;
  v23[1] = sub_100FBB410;
  return sub_100AD6C3C();
}

uint64_t sub_100FBB410(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 768) = a1;
  *(void *)(v4 + 776) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 712);
  uint64_t v6 = *(void *)(v3 + 704);
  if (v1) {
    id v7 = sub_100FBB9CC;
  }
  else {
    id v7 = sub_100FBB558;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100FBB558()
{
  uint64_t v1 = *(void **)(v0 + 656);
  swift_release();
  id v2 = (id)static OS_os_log.crlThreeDimensionalObjects;
  uint64_t v3 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"(ARViewBackend) loadScene(): entity loaded", 42, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v5 = v1[6];
  unint64_t v4 = v1[7];
  uint64_t v7 = v1[8];
  unint64_t v6 = v1[9];
  uint64_t v8 = v1[10];
  uint64_t v9 = v1[11];
  uint64_t v11 = v1[12];
  uint64_t v10 = v1[13];
  uint64_t v12 = v1[14];
  uint64_t v13 = v1[15];
  uint64_t v14 = v1[16];
  if (v6 >> 62)
  {
    uint64_t v16 = *(void *)(v0 + 672);
    uint64_t v35 = *(void *)(v0 + 664);
    uint64_t v37 = *(void *)(v0 + 688);
    unint64_t v17 = v1[7];
    unint64_t v18 = v6;
    sub_100B71214(v5, v4, v7, v6);
    swift_release();
    swift_release();
    sub_100B712BC(v5, v17, v7, v18);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v37, v35);
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 744);
    *(_DWORD *)(v0 + 448) = v7;
    *(void *)(v0 + 464) = v8;
    *(void *)(v0 + 472) = v9;
    *(void *)(v0 + 480) = v11;
    *(void *)(v0 + 488) = v10;
    *(void *)(v0 + 496) = v12;
    *(void *)(v0 + 504) = v13;
    *(void *)(v0 + 512) = v14;
    if (v15 == v5)
    {
      uint64_t v30 = v15;
      uint64_t v33 = *(void *)(v0 + 672);
      uint64_t v34 = *(void *)(v0 + 664);
      uint64_t v36 = *(void *)(v0 + 688);
      uint64_t v19 = (double *)(*(void *)(v0 + 648) + *(int *)(*(void *)(v0 + 752) + 28));
      double v20 = *v19;
      double v21 = v19[1];
      double v22 = v19[2];
      double v23 = v19[3];
      unint64_t v31 = v4;
      unint64_t v24 = v4;
      unint64_t v32 = v6;
      unint64_t v25 = v6;
      _s13ARViewBackendC17ARViewCoordinatorCMa();
      swift_allocObject();
      sub_100B71214(v5, v24, v7, v25);
      uint64_t v26 = swift_retain();
      uint64_t v27 = sub_100FBEC54(v26, v0 + 448, v20, v21, v22, v23);
      swift_release();
      *(void *)(v0 + 640) = *(void *)(v27 + 168);
      swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_1005057FC(&qword_1016A4D20);
      sub_100FC00C8();
      Publisher<>.sink(receiveValue:)();
      swift_release();
      swift_release();
      AnyCancellable.store(in:)();
      swift_release();
      *(void *)(v0 + 336) = v30;
      *(void *)(v0 + 344) = v27;
      *(void *)(v0 + 352) = &_swiftEmptySetSingleton;
      *(void *)(v0 + 360) = 0x4000000000000000;
      *(_OWORD *)(v0 + 368) = 0u;
      *(_OWORD *)(v0 + 384) = 0u;
      *(_OWORD *)(v0 + 400) = 0u;
      *(void *)(v0 + 416) = 0;
      swift_retain();
      swift_retain();
      sub_100FBE9DC((uint64_t *)(v0 + 336));
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      sub_100B712BC(v5, v31, v7, v32);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v36, v34);
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 672) + 8))(*(void *)(v0 + 688), *(void *)(v0 + 664));
      swift_release();
      swift_release();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  id v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

uint64_t sub_100FBB9CC()
{
  uint64_t v1 = *(void *)(v0 + 776);
  uint64_t v17 = *(void *)(v0 + 728);
  uint64_t v2 = *(void *)(v0 + 688);
  uint64_t v3 = *(void *)(v0 + 672);
  uint64_t v4 = *(void *)(v0 + 664);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v7 = v5;
  uint64_t v8 = Error.localizedDescription.getter();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v17;
  *(void *)(inited + 32) = v8;
  *(void *)(inited + 40) = v9;
  uint64_t v10 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v10, (uint64_t)"(ARViewBackend) loadScene() error: %{public}@", 45, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  *(void *)(v0 + 616) = v1;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  if (swift_dynamicCast())
  {
    uint64_t v11 = *(void *)(v0 + 568);
    unint64_t v12 = *(void *)(v0 + 576);
    unsigned int v13 = *(unsigned __int8 *)(v0 + 584);
  }
  else
  {
    *(void *)(v0 + 608) = *(void *)(v0 + 776);
    swift_errorRetain();
    if (swift_dynamicCast())
    {
      uint64_t v11 = *(void *)(v0 + 592);
      unint64_t v12 = *(void *)(v0 + 600);
      unsigned int v13 = 4;
    }
    else
    {
      swift_getErrorValue();
      uint64_t v11 = Error.localizedDescription.getter();
      unint64_t v12 = v14;
      unsigned int v13 = 2;
    }
  }
  *(void *)(v0 + 176) = v11;
  *(void *)(v0 + 184) = v12;
  *(void *)(v0 + 192) = v13;
  *(void *)(v0 + 200) = 0x8000000000000000;
  *(_OWORD *)(v0 + 208) = 0u;
  *(_OWORD *)(v0 + 224) = 0u;
  *(_OWORD *)(v0 + 240) = 0u;
  *(void *)(v0 + 256) = 0;
  sub_100FBE9DC((uint64_t *)(v0 + 176));
  sub_1007676B8(v11, v12, v13);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_100FBBC80()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v2 = v1[3];
      uint64_t v3 = v1[8];
      unint64_t v4 = v1[9];
      unint64_t v5 = 0x8000000000000000;
      uint64_t v6 = 0;
      unint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      switch(v4 >> 62)
      {
        case 1uLL:
          uint64_t v12 = v1[6];
          unint64_t v13 = v1[7];
          char v14 = v1[8];
          unint64_t v15 = v1[9];
          sub_100B71214(v12, v13, v3, v4);
          swift_retain();
          CurrentValueSubject.value.getter();
          swift_release();
          sub_100B712BC(v12, v13, v14, v15);
          uint64_t v6 = v17;
          unint64_t v7 = v18;
          uint64_t v8 = v19;
          uint64_t v9 = v20;
          uint64_t v10 = v21;
          unint64_t v5 = v22;
          uint64_t v11 = v23;
          break;
        case 2uLL:
          uint64_t v8 = v1[8];
          uint64_t v6 = v1[6];
          unint64_t v7 = v1[7];
          sub_100767448(v6, v7, v3);
          uint64_t v9 = 0;
          uint64_t v10 = 0;
          uint64_t v11 = 0;
          unint64_t v5 = 0x4000000000000000;
          break;
        case 3uLL:
          break;
        default:
          unint64_t v7 = 0;
          uint64_t v8 = 0;
          uint64_t v9 = 0;
          uint64_t v10 = 0;
          uint64_t v11 = 0;
          uint64_t v6 = 2;
          break;
      }
      uint64_t v17 = v6;
      unint64_t v18 = v7;
      uint64_t v19 = v8;
      uint64_t v20 = v9;
      uint64_t v21 = v10;
      unint64_t v22 = v5;
      uint64_t v23 = v11;
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v2 + 8))((uint64_t)v1 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering13ARViewBackend_uuid, &v17, ObjectType, v2);
      swift_unknownObjectRelease();
      sub_100767658(v6, v7, v8, v9, v10, v5);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_100FBBEB4(uint64_t a1)
{
  long long v3 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v2 + 136) = *(_OWORD *)(a1 + 32);
  *(_DWORD *)(v2 + 184) = *(_DWORD *)a1;
  uint64_t v4 = *(void *)(a1 + 16);
  *(void *)(v2 + 120) = *(void *)(a1 + 24);
  *(void *)(v2 + 128) = v1;
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = v4;
  *(_OWORD *)(v2 + 152) = v3;
  *(void *)(v2 + 168) = *(void *)(a1 + 64);
  type metadata accessor for MainActor();
  *(void *)(v2 + 176) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100FBBF70, v6, v5);
}

uint64_t sub_100FBBF70()
{
  uint64_t v1 = *(void **)(v0 + 128);
  swift_release();
  uint64_t v3 = v1[6];
  unint64_t v2 = v1[7];
  uint64_t v5 = v1[8];
  unint64_t v4 = v1[9];
  if (v4 >> 62 == 1)
  {
    uint64_t v11 = *(void *)(v0 + 104);
    *(_OWORD *)(v2 + 16) = *(_OWORD *)v11;
    long long v12 = *(_OWORD *)(v11 + 16);
    long long v13 = *(_OWORD *)(v11 + 32);
    long long v14 = *(_OWORD *)(v11 + 48);
    *(void *)(v2 + 80) = *(void *)(v11 + 64);
    *(_OWORD *)(v2 + 48) = v13;
    *(_OWORD *)(v2 + 64) = v14;
    *(_OWORD *)(v2 + 32) = v12;
    sub_100B71214(v3, v2, v5, v4);
    swift_retain();
    sub_100FBD058();
    swift_release();
  }
  else
  {
    if (v4 >> 62) {
      goto LABEL_6;
    }
    uint64_t v6 = *(void *)(v0 + 168);
    uint64_t v8 = *(void *)(v0 + 112);
    uint64_t v7 = *(void *)(v0 + 120);
    uint64_t v9 = *(unsigned int *)(v0 + 184);
    *(void *)(v0 + 16) = v3;
    *(void *)(v0 + 24) = 0;
    *(void *)(v0 + 32) = v9;
    *(void *)(v0 + 40) = 0;
    *(void *)(v0 + 48) = v8;
    *(void *)(v0 + 56) = v7;
    long long v10 = *(_OWORD *)(v0 + 152);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 136);
    *(_OWORD *)(v0 + 80) = v10;
    *(void *)(v0 + 96) = v6;
    sub_100B71214(v3, v2, v5, v4);
    sub_100FBE9DC((uint64_t *)(v0 + 16));
  }
  sub_100B712BC(v3, v2, v5, v4);
LABEL_6:
  unint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_100FBC13C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100FBC1D4, v4, v3);
}

uint64_t sub_100FBC1D4()
{
  uint64_t v1 = v0[3];
  swift_release();
  if (*(void *)(v1 + 72) >> 62 == 1)
  {
    uint64_t v2 = *(void *)(v0[2] + 16);
    swift_retain();
    if (v2)
    {
      uint64_t v3 = (unsigned char *)(swift_bridgeObjectRetain() + 40);
      do
      {
        switch(*v3)
        {
          case 2:
            sub_100FBC79C();
            break;
          case 3:
            sub_100FBC7B4();
            break;
          case 4:
            sub_100FBCE24();
            break;
          case 5:
            sub_100FBCA0C();
            break;
          default:
            sub_100FBC300();
            break;
        }
        v3 += 16;
        --v2;
      }
      while (v2);
      swift_bridgeObjectRelease();
    }
    swift_release();
  }
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100FBC300()
{
  uint64_t v1 = (void *)(v0 + 176);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v39 = v2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & v3;
  int64_t v40 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v41 = v0;
  uint64_t v42 = *(void *)(v0 + 176);
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v7 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_44;
    }
    if (v11 >= v40) {
      break;
    }
    unint64_t v12 = *(void *)(v39 + 8 * v11);
    ++v7;
    if (!v12)
    {
      int64_t v7 = v11 + 1;
      if (v11 + 1 >= v40) {
        break;
      }
      unint64_t v12 = *(void *)(v39 + 8 * v7);
      if (!v12)
      {
        int64_t v7 = v11 + 2;
        if (v11 + 2 >= v40) {
          break;
        }
        unint64_t v12 = *(void *)(v39 + 8 * v7);
        if (!v12)
        {
          int64_t v13 = v11 + 3;
          if (v13 >= v40) {
            break;
          }
          unint64_t v12 = *(void *)(v39 + 8 * v13);
          if (!v12)
          {
            while (1)
            {
              int64_t v7 = v13 + 1;
              if (__OFADD__(v13, 1)) {
                goto LABEL_46;
              }
              if (v7 >= v40) {
                goto LABEL_40;
              }
              unint64_t v12 = *(void *)(v39 + 8 * v7);
              ++v13;
              if (v12) {
                goto LABEL_22;
              }
            }
          }
          int64_t v7 = v13;
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v7 << 6);
LABEL_23:
    uint64_t v14 = 16 * v10;
    unint64_t v15 = (uint64_t *)(*(void *)(v42 + 48) + v14);
    uint64_t v16 = v15[1];
    uint64_t v45 = *v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v42 + 56) + v14);
    uint64_t v18 = *v17;
    if (!v17[1])
    {
      swift_bridgeObjectRetain();
      swift_retain();
LABEL_29:
      unint64_t v43 = v6;
      int64_t v44 = v7;
      AnimationResource.repeat(duration:)();
      uint64_t v19 = Entity.playAnimation(_:transitionDuration:startsPaused:)();
      uint64_t v20 = v1;
      swift_beginAccess();
      swift_retain();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v22 = *(void **)(v41 + 176);
      *(void *)(v41 + 176) = 0x8000000000000000;
      unint64_t v24 = sub_100955F50(v45, v16);
      uint64_t v25 = v22[2];
      BOOL v26 = (v23 & 1) == 0;
      uint64_t v27 = v25 + v26;
      if (__OFADD__(v25, v26))
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        return result;
      }
      char v28 = v23;
      if (v22[3] < v27)
      {
        sub_100969008(v27, isUniquelyReferenced_nonNull_native);
        unint64_t v29 = sub_100955F50(v45, v16);
        if ((v28 & 1) != (v30 & 1)) {
          goto LABEL_47;
        }
        unint64_t v24 = v29;
        if ((v28 & 1) == 0) {
          goto LABEL_36;
        }
LABEL_4:
        uint64_t v8 = (void *)(v22[7] + 16 * v24);
        swift_release();
        swift_release();
        *uint64_t v8 = v18;
        v8[1] = v19;
LABEL_5:
        uint64_t v1 = v20;
        *uint64_t v20 = v22;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_release();
        swift_release();
        swift_release();
        unint64_t v6 = v43;
        int64_t v7 = v44;
        goto LABEL_6;
      }
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v23) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1009811E4();
        if (v28) {
          goto LABEL_4;
        }
      }
LABEL_36:
      v22[(v24 >> 6) + 8] |= 1 << v24;
      unint64_t v31 = (uint64_t *)(v22[6] + 16 * v24);
      *unint64_t v31 = v45;
      v31[1] = v16;
      unint64_t v32 = (void *)(v22[7] + 16 * v24);
      *unint64_t v32 = v18;
      v32[1] = v19;
      uint64_t v33 = v22[2];
      BOOL v34 = __OFADD__(v33, 1);
      uint64_t v35 = v33 + 1;
      if (v34) {
        goto LABEL_45;
      }
      void v22[2] = v35;
      swift_bridgeObjectRetain();
      goto LABEL_5;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if ((AnimationPlaybackController.isValid.getter() & 1) == 0) {
      goto LABEL_29;
    }
    swift_bridgeObjectRelease();
    if (dispatch thunk of AnimationPlaybackController.isPaused.getter()) {
      dispatch thunk of AnimationPlaybackController.resume()();
    }
    swift_release();
LABEL_6:
    swift_release();
  }
LABEL_40:
  swift_release();
  uint64_t v36 = swift_bridgeObjectRetain();
  sub_100B4CBD0(v36);
  swift_bridgeObjectRelease();
  id v37 = [*(id *)(v41 + 88) superview];
  if (v37) {

  }
  sub_100A3B07C((uint64_t)_swiftEmptyArrayStorage);
  CurrentValueSubject.send(_:)();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_100FBC79C()
{
  return sub_100FBC7CC((void (*)(void))&dispatch thunk of AnimationPlaybackController.pause());
}

uint64_t sub_100FBC7B4()
{
  return sub_100FBC7CC((void (*)(void))&dispatch thunk of AnimationPlaybackController.resume());
}

uint64_t sub_100FBC7CC(void (*a1)(void))
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 176);
  uint64_t v4 = v3 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v3 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v10 << 6);
LABEL_21:
    if (*(void *)(*(void *)(v3 + 56) + 16 * v12 + 8))
    {
      swift_retain();
      swift_retain();
      if (AnimationPlaybackController.isValid.getter()) {
        a1();
      }
      swift_release();
      uint64_t result = swift_release();
    }
  }
  int64_t v13 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
LABEL_28:
    __break(1u);
    return result;
  }
  if (v13 >= v8) {
    goto LABEL_24;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  ++v10;
  if (v14) {
    goto LABEL_20;
  }
  int64_t v10 = v13 + 1;
  if (v13 + 1 >= v8) {
    goto LABEL_24;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v10);
  if (v14) {
    goto LABEL_20;
  }
  int64_t v10 = v13 + 2;
  if (v13 + 2 >= v8) {
    goto LABEL_24;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v10);
  if (v14)
  {
LABEL_20:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_21;
  }
  int64_t v15 = v13 + 3;
  if (v15 < v8)
  {
    unint64_t v14 = *(void *)(v4 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v10 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_28;
        }
        if (v10 >= v8) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v4 + 8 * v10);
        ++v15;
        if (v14) {
          goto LABEL_20;
        }
      }
    }
    int64_t v10 = v15;
    goto LABEL_20;
  }
LABEL_24:
  swift_release();
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_100B4CBD0(v16);
  swift_bridgeObjectRelease();
  id v17 = [*(id *)(v1 + 88) superview];
  if (v17) {

  }
  sub_100A3B07C((uint64_t)_swiftEmptyArrayStorage);
  CurrentValueSubject.send(_:)();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_100FBCA0C()
{
  uint64_t v1 = (void *)(v0 + 176);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v39 = v0;
  uint64_t v40 = v2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & v3;
  int64_t v41 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v42 = *(void *)(v0 + 176);
  swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v43)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (i << 6);
      goto LABEL_22;
    }
    int64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      goto LABEL_43;
    }
    if (v11 >= v41) {
      break;
    }
    unint64_t v12 = *(void *)(v40 + 8 * v11);
    ++i;
    if (!v12)
    {
      int64_t i = v11 + 1;
      if (v11 + 1 >= v41) {
        break;
      }
      unint64_t v12 = *(void *)(v40 + 8 * i);
      if (!v12)
      {
        int64_t i = v11 + 2;
        if (v11 + 2 >= v41) {
          break;
        }
        unint64_t v12 = *(void *)(v40 + 8 * i);
        if (!v12)
        {
          int64_t v13 = v11 + 3;
          if (v13 >= v41) {
            break;
          }
          unint64_t v12 = *(void *)(v40 + 8 * v13);
          if (!v12)
          {
            while (1)
            {
              int64_t i = v13 + 1;
              if (__OFADD__(v13, 1)) {
                goto LABEL_44;
              }
              if (i >= v41) {
                goto LABEL_38;
              }
              unint64_t v12 = *(void *)(v40 + 8 * i);
              ++v13;
              if (v12) {
                goto LABEL_21;
              }
            }
          }
          int64_t i = v13;
        }
      }
    }
LABEL_21:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (i << 6);
LABEL_22:
    uint64_t v14 = 16 * v10;
    int64_t v15 = (uint64_t *)(*(void *)(v42 + 48) + v14);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v18 = (uint64_t *)(*(void *)(v42 + 56) + v14);
    uint64_t v19 = *v18;
    int64_t v43 = i;
    if (v18[1])
    {
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_retain();
      if (AnimationPlaybackController.isValid.getter()) {
        dispatch thunk of AnimationPlaybackController.stop()();
      }
      swift_release();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = (void *)*v1;
    int64_t v44 = (void *)*v1;
    *uint64_t v1 = 0x8000000000000000;
    unint64_t v23 = sub_100955F50(v17, v16);
    uint64_t v24 = v21[2];
    BOOL v25 = (v22 & 1) == 0;
    uint64_t v26 = v24 + v25;
    if (__OFADD__(v24, v25))
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      return result;
    }
    char v27 = v22;
    if (v21[3] >= v26)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        char v30 = v44;
        if (v22) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1009811E4();
        char v30 = v44;
        if (v27) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_100969008(v26, isUniquelyReferenced_nonNull_native);
      unint64_t v28 = sub_100955F50(v17, v16);
      if ((v27 & 1) != (v29 & 1)) {
        goto LABEL_45;
      }
      unint64_t v23 = v28;
      char v30 = v44;
      if (v27)
      {
LABEL_4:
        int64_t v8 = (void *)(v30[7] + 16 * v23);
        swift_release();
        swift_release();
        *int64_t v8 = v19;
        v8[1] = 0;
        goto LABEL_5;
      }
    }
    v30[(v23 >> 6) + 8] |= 1 << v23;
    unint64_t v31 = (uint64_t *)(v30[6] + 16 * v23);
    *unint64_t v31 = v17;
    v31[1] = v16;
    unint64_t v32 = (void *)(v30[7] + 16 * v23);
    *unint64_t v32 = v19;
    v32[1] = 0;
    uint64_t v33 = v30[2];
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34) {
      goto LABEL_42;
    }
    v30[2] = v35;
    swift_bridgeObjectRetain();
LABEL_5:
    *uint64_t v1 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    swift_release();
  }
LABEL_38:
  swift_release();
  uint64_t v36 = swift_bridgeObjectRetain();
  sub_100B4CBD0(v36);
  swift_bridgeObjectRelease();
  id v37 = [*(id *)(v39 + 88) superview];
  if (v37) {

  }
  sub_100A3B07C((uint64_t)_swiftEmptyArrayStorage);
  CurrentValueSubject.send(_:)();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_100FBCE24()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (v5)
  {
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_21:
    if (*(void *)(*(void *)(v1 + 56) + 16 * v10 + 8))
    {
      swift_retain();
      swift_retain();
      if (AnimationPlaybackController.isValid.getter()) {
        AnimationPlaybackController.time.setter();
      }
      swift_release();
      uint64_t result = swift_release();
    }
  }
  int64_t v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
LABEL_28:
    __break(1u);
    return result;
  }
  if (v11 >= v6) {
    goto LABEL_24;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v11);
  ++v8;
  if (v12) {
    goto LABEL_20;
  }
  int64_t v8 = v11 + 1;
  if (v11 + 1 >= v6) {
    goto LABEL_24;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12) {
    goto LABEL_20;
  }
  int64_t v8 = v11 + 2;
  if (v11 + 2 >= v6) {
    goto LABEL_24;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12)
  {
LABEL_20:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_21;
  }
  int64_t v13 = v11 + 3;
  if (v13 < v6)
  {
    unint64_t v12 = *(void *)(v2 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_28;
        }
        if (v8 >= v6) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v2 + 8 * v8);
        ++v13;
        if (v12) {
          goto LABEL_20;
        }
      }
    }
    int64_t v8 = v13;
    goto LABEL_20;
  }
LABEL_24:
  swift_release();
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_100B4CBD0(v14);
  swift_bridgeObjectRelease();
  id v15 = [*(id *)(v0 + 88) superview];
  if (v15) {

  }
  sub_100A3B07C((uint64_t)_swiftEmptyArrayStorage);
  CurrentValueSubject.send(_:)();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_100FBD058()
{
  float v1 = *(float *)(v0 + 16);
  BoundingBox.boundingRadius.getter();
  float v3 = v2;
  float v4 = (float)((float)(v1 * 0.5) * 3.1416) / 180.0;
  if (v1 <= 0.0) {
    float v4 = 0.0087266;
  }
  float v5 = v3 / sinf(v4);
  sub_1005057FC((uint64_t *)&unk_101693750);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  *(void *)(inited + 32) = 0;
  *(float *)(inited + 40) = v5;
  sub_100B4CE8C(inited);
  swift_setDeallocating();
  type metadata accessor for AnchorEntity();
  HasTransform.position.setter();
  type metadata accessor for PerspectiveCamera();
  unint64_t v7 = (void (*)(unsigned char *, void))HasPerspectiveCamera.camera.modify();
  PerspectiveCameraComponent.fieldOfViewInDegrees.setter();
  v7(v9, 0);
  return HasTransform.orientation.setter();
}

uint64_t sub_100FBD1A8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100FBD1F8()
{
  sub_100FBD1A8();

  return swift_deallocClassInstance();
}

uint64_t sub_100FBD22C()
{
  sub_100523398((uint64_t)(v0 + 2));
  sub_100B712BC(v0[6], v0[7], v0[8], v0[9]);
  float v1 = (char *)v0 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering13ARViewBackend_uuid;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100FBD300()
{
  return _s13ARViewBackendCMa(0);
}

uint64_t _s13ARViewBackendCMa(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_1016A49D8);
}

uint64_t sub_100FBD328()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t _s13ARViewBackendC17ARViewCoordinatorCMa()
{
  return self;
}

uint64_t type metadata accessor for CRLARView(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_1016A4C68);
}

uint64_t sub_100FBD420()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100FBD46C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering13ARViewBackend_uuid;
  uint64_t v4 = type metadata accessor for UUID();
  float v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_100FBD4E0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528D08;
  return sub_100FBB010(a1);
}

uint64_t sub_100FBD574(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528488;
  return sub_100FBBEB4(a1);
}

uint64_t sub_100FBD608(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 128) = a2;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = v2;
  type metadata accessor for MainActor();
  *(void *)(v3 + 80) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 88) = v5;
  *(void *)(v3 + 96) = v4;
  return _swift_task_switch(sub_100FBD6A4, v5, v4);
}

uint64_t sub_100FBD6A4()
{
  char v1 = *(unsigned char *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 64);
  sub_1005057FC(&qword_10167E9D0);
  uint64_t inited = swift_initStackObject();
  *(void *)(v0 + 104) = inited;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 32) = v2;
  *(unsigned char *)(inited + 40) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100776A9C;
  return sub_100FBC13C(inited);
}

uint64_t sub_100FBD77C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528D08;
  return sub_100FBC13C(a1);
}

uint64_t sub_100FBD810()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1016A4D00 + dword_1016A4D00);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10072CB9C;
  return v3();
}

uint64_t sub_100FBD8B0(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101681FF0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4, v7);
  int64_t v8 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v9 - 8, v10);
  unint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  type metadata accessor for MainActor();
  id v14 = a2;
  uint64_t v15 = static MainActor.shared.getter();
  unint64_t v16 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = v15;
  *((void *)v17 + 3) = &protocol witness table for MainActor;
  *((void *)v17 + 4) = v14;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v17[v16], v8, v4);
  sub_1005912D0((uint64_t)v12, (uint64_t)&unk_1016A4D18, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_100FBDAA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = sub_1005057FC(&qword_101681FF0);
  v5[4] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[5] = v7;
  v5[6] = *(void *)(v7 + 64);
  v5[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[8] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100FBDBA8, v9, v8);
}

uint64_t sub_100FBDBA8()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v5 = (void *)v0[2];
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  unint64_t v6 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v7 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v7 + v6, v1, v3);
  dispatch thunk of ARView.snapshot(saveToHDR:completion:)();
  swift_release();
  [v5 bounds];
  [v5 setNeedsDisplayInRect:];
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100FBDCDC(void *a1)
{
  id v1 = a1;
  sub_1005057FC(&qword_101681FF0);
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_100FBDD24()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for CRLARView(0);
  [super didMoveToSuperview];
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v2 = result;
    swift_beginAccess();
    uint64_t v3 = swift_bridgeObjectRetain();
    sub_100B4CBD0(v3);
    swift_bridgeObjectRelease();
    id v4 = [*(id *)(v2 + 88) superview];
    if (v4) {

    }
    sub_100A3B07C((uint64_t)_swiftEmptyArrayStorage);
    CurrentValueSubject.send(_:)();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_100FBDE44(void *a1)
{
  id v1 = a1;
  sub_100FBDD24();
}

id sub_100FBDE8C(void *a1, uint64_t a2, uint64_t a3)
{
  swift_weakInit();
  v6.receiver = a1;
  v6.super_class = (Class)type metadata accessor for CRLARView(0);
  return [super initWithCoder:a3];
}

id sub_100FBDEEC(void *a1, double a2, double a3, double a4, double a5)
{
  swift_weakInit();
  v11.receiver = a1;
  v11.super_class = (Class)type metadata accessor for CRLARView(0);
  return [super initWithFrame:a2, a3, a4, a5];
}

uint64_t sub_100FBDF74(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ARView.CameraMode();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_allocWithZone(v1);
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a1, v3);
  uint64_t v9 = ARView.init(frame:cameraMode:automaticallyConfigureSession:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v9;
}

uint64_t sub_100FBE0C0()
{
  return swift_weakDestroy();
}

id sub_100FBE0D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLARView(0);
  return [super dealloc];
}

uint64_t sub_100FBE108()
{
  return swift_weakDestroy();
}

uint64_t sub_100FBE118()
{
  return type metadata accessor for CRLARView(0);
}

ValueMetadata *_s13ARViewBackendC17ARViewCoordinatorC22InternalAnimationStateOMa()
{
  return &_s13ARViewBackendC17ARViewCoordinatorC22InternalAnimationStateON;
}

uint64_t _s13ARViewBackendC12BackendStateOwxx(uint64_t *a1)
{
  return sub_100B712BC(*a1, a1[1], a1[2], a1[3]);
}

uint64_t *_s13ARViewBackendC12BackendStateOwcp(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v13 = a2[9];
  uint64_t v14 = a2[10];
  sub_100B71214(*a2, v4, v5, v6);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  return a1;
}

uint64_t *_s13ARViewBackendC12BackendStateOwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v17 = a2[9];
  uint64_t v18 = a2[10];
  sub_100B71214(*a2, v4, v5, v6);
  uint64_t v12 = *a1;
  unint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  unint64_t v15 = a1[3];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v17;
  a1[10] = v18;
  sub_100B712BC(v12, v13, v14, v15);
  return a1;
}

uint64_t _s13ARViewBackendC12BackendStateOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 80);
  uint64_t v4 = *(void *)a1;
  unint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  long long v9 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = v3;
  sub_100B712BC(v4, v6, v5, v7);
  return a1;
}

uint64_t _s13ARViewBackendC12BackendStateOwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 24);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double _s13ARViewBackendC12BackendStateOwst(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = -a2;
      double result = 0.0;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(void *)(a1 + 80) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_100FBE42C(uint64_t result, uint64_t a2)
{
  if (a2 < 3)
  {
    *(void *)(result + 24) = a2 << 62;
  }
  else
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)double result = (a2 - 3);
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(void *)(result + 80) = 0;
    *(void *)(result + 24) = 0xC000000000000000;
  }
  return result;
}

ValueMetadata *_s13ARViewBackendC12BackendStateOMa()
{
  return &_s13ARViewBackendC12BackendStateON;
}

ValueMetadata *_s13ARViewBackendC5FlagsVMa()
{
  return &_s13ARViewBackendC5FlagsVN;
}

unint64_t sub_100FBE488()
{
  unint64_t result = qword_1016A4CB8;
  if (!qword_1016A4CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4CB8);
  }
  return result;
}

unint64_t sub_100FBE4E0()
{
  unint64_t result = qword_1016A4CC0;
  if (!qword_1016A4CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4CC0);
  }
  return result;
}

unint64_t sub_100FBE538()
{
  unint64_t result = qword_1016A4CC8;
  if (!qword_1016A4CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4CC8);
  }
  return result;
}

unint64_t sub_100FBE590()
{
  unint64_t result = qword_1016A4CD0;
  if (!qword_1016A4CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4CD0);
  }
  return result;
}

uint64_t sub_100FBE5E4(void *a1, char a2, void *a3)
{
  if (!a1[2]) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v46 = a1[2];
  uint64_t v6 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v7 = a1[6];
  uint64_t v8 = a1[7];
  swift_bridgeObjectRetain();
  long long v9 = (void *)*a3;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  unint64_t v11 = sub_100955F50(v6, v5);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_23;
  }
  char v15 = v10;
  if (v9[3] >= v14)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1009811E4();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v19 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    uint64_t v20 = (uint64_t *)(v19[6] + 16 * v11);
    *uint64_t v20 = v6;
    v20[1] = v5;
    uint64_t v21 = (void *)(v19[7] + 16 * v11);
    *uint64_t v21 = v7;
    v21[1] = v8;
    uint64_t v22 = v19[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v19[2] = v24;
    uint64_t v25 = v46 - 1;
    if (v46 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    for (int64_t i = a1 + 11; ; i += 4)
    {
      uint64_t v28 = *(i - 3);
      uint64_t v27 = *(i - 2);
      uint64_t v29 = *(i - 1);
      uint64_t v30 = *i;
      unint64_t v31 = (void *)*a3;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      unint64_t v32 = sub_100955F50(v28, v27);
      uint64_t v34 = v31[2];
      BOOL v35 = (v33 & 1) == 0;
      BOOL v23 = __OFADD__(v34, v35);
      uint64_t v36 = v34 + v35;
      if (v23) {
        break;
      }
      char v37 = v33;
      if (v31[3] < v36)
      {
        sub_100969008(v36, 1);
        unint64_t v32 = sub_100955F50(v28, v27);
        if ((v37 & 1) != (v38 & 1)) {
          goto LABEL_25;
        }
      }
      if (v37) {
        goto LABEL_10;
      }
      uint64_t v39 = (void *)*a3;
      *(void *)(*a3 + 8 * (v32 >> 6) + 64) |= 1 << v32;
      uint64_t v40 = (uint64_t *)(v39[6] + 16 * v32);
      *uint64_t v40 = v28;
      v40[1] = v27;
      int64_t v41 = (void *)(v39[7] + 16 * v32);
      *int64_t v41 = v29;
      v41[1] = v30;
      uint64_t v42 = v39[2];
      BOOL v23 = __OFADD__(v42, 1);
      uint64_t v43 = v42 + 1;
      if (v23) {
        goto LABEL_24;
      }
      v39[2] = v43;
      if (!--v25) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_100969008(v14, a2 & 1);
  unint64_t v16 = sub_100955F50(v6, v5);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    swift_allocError();
    swift_willThrow();
    swift_errorRetain();
    sub_1005057FC(&qword_101672BD0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
      return swift_errorRelease();
    }
    goto LABEL_26;
  }
LABEL_25:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_26:
  _StringGuts.grow(_:)(30);
  v44._object = (void *)0x8000000101274430;
  v44._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v44);
  _print_unlocked<A, B>(_:_:)();
  v45._countAndFlagsBits = 39;
  v45._object = (void *)0xE100000000000000;
  String.append(_:)(v45);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100FBE9A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_100FBE9DC(uint64_t *a1)
{
  unsigned int v2 = v1;
  uint64_t v4 = v1[6];
  unint64_t v6 = v1[7];
  uint64_t v5 = (uint64_t)(v1 + 6);
  uint64_t v7 = *(void *)(v5 + 16);
  unint64_t v8 = *(void *)(v5 + 24);
  uint64_t v29 = v4;
  sub_100776DB4((uint64_t)a1, v5);
  sub_100FC0034(a1);
  sub_100B712BC(v29, v6, v7, v8);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v10 = *(void *)(v5 - 24);
    uint64_t v11 = v2[6];
    unint64_t v12 = v2[7];
    uint64_t v13 = v2[8];
    unint64_t v14 = v2[9];
    unint64_t v15 = 0x8000000000000000;
    uint64_t v16 = 0;
    char v17 = v2;
    unint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    switch(v14 >> 62)
    {
      case 1uLL:
        uint64_t v30 = v10;
        uint64_t v23 = v11;
        unint64_t v24 = v12;
        char v25 = v13;
        unint64_t v26 = v14;
        sub_100B71214(v11, v12, v13, v14);
        swift_retain();
        CurrentValueSubject.value.getter();
        swift_release();
        unint64_t v27 = v24;
        uint64_t v10 = v30;
        sub_100B712BC(v23, v27, v25, v26);
        uint64_t v16 = v31;
        unint64_t v18 = v32;
        uint64_t v19 = v33;
        uint64_t v20 = v34;
        uint64_t v21 = v35;
        unint64_t v15 = v36;
        uint64_t v22 = v37;
        break;
      case 2uLL:
        uint64_t v19 = v13;
        uint64_t v16 = v11;
        unint64_t v18 = v12;
        sub_100767448(v11, v12, v13);
        uint64_t v20 = 0;
        uint64_t v21 = 0;
        uint64_t v22 = 0;
        unint64_t v15 = 0x4000000000000000;
        break;
      case 3uLL:
        break;
      default:
        unint64_t v18 = 0;
        uint64_t v19 = 0;
        uint64_t v20 = 0;
        uint64_t v21 = 0;
        uint64_t v22 = 0;
        uint64_t v16 = 2;
        break;
    }
    uint64_t v31 = v16;
    unint64_t v32 = v18;
    uint64_t v33 = v19;
    uint64_t v34 = v20;
    uint64_t v35 = v21;
    unint64_t v36 = v15;
    uint64_t v37 = v22;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v10 + 8))((uint64_t)v17 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering13ARViewBackend_uuid, &v31, ObjectType, v10);
    swift_unknownObjectRelease();
    return sub_100767658(v16, v18, v19, v20, v21, v15);
  }
  return result;
}

uint64_t sub_100FBEC54(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = type metadata accessor for ARView.Environment.Background();
  __chkstk_darwin(v14 - 8, v15);
  *(void *)&long long v62 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ARView.CameraMode();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v7 + 96) = a1;
  long long v22 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v7 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v7 + 64) = v22;
  *(void *)(v7 + 80) = *(void *)(a2 + 64);
  long long v23 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v7 + 32) = v23;
  type metadata accessor for AnchorEntity();
  sub_100B4CE8C((uint64_t)&off_101504100);
  long long v61 = v24;
  swift_retain();
  *(void *)(v7 + 144) = AnchorEntity.__allocating_init(world:)();
  type metadata accessor for Entity();
  HasTransform.visualBounds(recursive:relativeTo:excludeInactive:)();
  *(_OWORD *)(v7 + 112) = v25;
  *(_OWORD *)(v7 + 128) = v26;
  BoundingBox.center.getter();
  uint64_t v27 = v7;
  HasTransform.position.setter();
  swift_retain();
  HasHierarchy.addChild(_:preservingWorldTransform:)();
  swift_release();
  type metadata accessor for PerspectiveCamera();
  swift_allocObject();
  *(void *)(v7 + 152) = PerspectiveCamera.init()();
  sub_100B4CE8C((uint64_t)&off_101504130);
  *(void *)(v7 + 160) = AnchorEntity.__allocating_init(world:)();
  swift_retain();
  swift_retain();
  HasHierarchy.addChild(_:preservingWorldTransform:)();
  swift_release();
  swift_release();
  Class v60 = (Class)type metadata accessor for CRLARView(0);
  *(void *)(v7 + 88) = [objc_allocWithZone(v60) initWithFrame:a3, a4, a5, a6];
  dispatch thunk of ARView.scene.getter();
  dispatch thunk of Scene.__interactionService.getter();
  swift_release();
  type metadata accessor for __RKEntityInteractionManager();
  if (swift_dynamicCastClass())
  {
    dispatch thunk of __RKEntityInteractionManager.areInteractionsEnabled.setter();
    dispatch thunk of __RKEntityInteractionManager.automaticallyInvokesStartTrigger.setter();
    dispatch thunk of __RKEntityInteractionManager.__removeAllInteractions()();
  }
  swift_unknownObjectRelease();
  uint64_t v28 = *(void **)(v7 + 88);
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v21, enum case for ARView.CameraMode.nonAR(_:), v17);
  ARView.cameraMode.setter();
  [v28 setUserInteractionEnabled:0];
  dispatch thunk of ARView.scene.getter();
  swift_retain();
  dispatch thunk of Scene.addAnchor(_:)();
  swift_release();
  swift_release();
  dispatch thunk of ARView.scene.getter();
  swift_retain();
  dispatch thunk of Scene.addAnchor(_:)();
  swift_release();
  swift_release();
  id v29 = [self clearColor];
  static ARView.Environment.Background.color(_:)();

  uint64_t v30 = (void (*)(long long *, void))dispatch thunk of ARView.environment.modify();
  ARView.Environment.background.setter();
  v30(&v64, 0);
  unint64_t v31 = Entity.availableAnimations.getter();
  unint64_t v32 = v31;
  if (v31 >> 62)
  {
    uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
    if (v33)
    {
LABEL_5:
      uint64_t v63 = _swiftEmptyArrayStorage;
      sub_1006BBA24(0, v33 & ~(v33 >> 63), 0);
      if (v33 < 0)
      {
        __break(1u);
        uint64_t result = swift_unexpectedError();
        __break(1u);
        return result;
      }
      *(void *)&long long v61 = v27;
      uint64_t v34 = 0;
      uint64_t v35 = v63;
      *(void *)&long long v62 = v32 & 0xC000000000000001;
      unint64_t v36 = v32;
      do
      {
        if ((void)v62)
        {
          uint64_t v37 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v37 = *(void *)(v32 + 8 * v34 + 32);
          swift_retain();
        }
        uint64_t v69 = ObjectIdentifier.hashValue.getter();
        *(void *)&long long v64 = dispatch thunk of CustomStringConvertible.description.getter();
        *((void *)&v64 + 1) = v38;
        v39._countAndFlagsBits = 47;
        v39._object = (void *)0xE100000000000000;
        String.append(_:)(v39);
        uint64_t v40 = AnimationResource.name.getter();
        if (v41)
        {
          unint64_t v42 = v41;
        }
        else
        {
          uint64_t v40 = 0x64656D616E6E75;
          unint64_t v42 = 0xE700000000000000;
        }
        unint64_t v43 = v42;
        String.append(_:)(*(Swift::String *)&v40);
        swift_bridgeObjectRelease();
        long long v44 = v64;
        uint64_t v63 = v35;
        unint64_t v46 = *((void *)v35 + 2);
        unint64_t v45 = *((void *)v35 + 3);
        if (v46 >= v45 >> 1)
        {
          sub_1006BBA24(v45 > 1, v46 + 1, 1);
          uint64_t v35 = v63;
        }
        ++v34;
        *((void *)v35 + 2) = v46 + 1;
        uint64_t v47 = &v35[4 * v46];
        *((_OWORD *)v47 + 2) = v44;
        *((void *)v47 + 6) = v37;
        v47[7] = 0.0;
        unint64_t v32 = v36;
      }
      while (v33 != v34);
      swift_bridgeObjectRelease();
      uint64_t v27 = v61;
      if (*((void *)v35 + 2)) {
        goto LABEL_17;
      }
LABEL_20:
      uint64_t v48 = _swiftEmptyDictionarySingleton;
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v33 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v33) {
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease();
  if (!*(void *)&_swiftEmptyArrayStorage[2]) {
    goto LABEL_20;
  }
LABEL_17:
  sub_1005057FC(&qword_101688F18);
  uint64_t v48 = (void *)static _DictionaryStorage.allocate(capacity:)();
LABEL_21:
  *(void *)&long long v64 = v48;
  id v49 = (void *)swift_bridgeObjectRetain();
  sub_100FBE5E4(v49, 1, &v64);
  swift_bridgeObjectRelease();
  *(void *)(v27 + 176) = v64;
  long long v50 = *(_OWORD *)(v27 + 112);
  long long v61 = *(_OWORD *)(v27 + 128);
  long long v62 = v50;
  unint64_t v51 = sub_100A3B298((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v52 = sub_100A3B07C((uint64_t)_swiftEmptyArrayStorage);
  long long v64 = v62;
  long long v65 = v61;
  unint64_t v66 = v51;
  BOOL v67 = 0;
  unint64_t v68 = v52;
  sub_1005057FC(&qword_1016A4D20);
  swift_allocObject();
  *(void *)(v27 + 168) = CurrentValueSubject.init(_:)();
  if (swift_dynamicCastClass()) {
    swift_weakAssign();
  }
  sub_100FBD058();
  swift_beginAccess();
  uint64_t v53 = swift_bridgeObjectRetain();
  uint64_t v54 = sub_100B4CBD0(v53);
  swift_bridgeObjectRelease();
  id v55 = [*(id *)(v27 + 88) superview];
  id v56 = v55;
  if (v55) {

  }
  unint64_t v57 = sub_100A3B07C((uint64_t)_swiftEmptyArrayStorage);
  long long v64 = v62;
  long long v65 = v61;
  unint64_t v66 = v54;
  BOOL v67 = v56 != 0;
  unint64_t v68 = v57;
  CurrentValueSubject.send(_:)();
  swift_release();
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_100FBF3D4(uint64_t a1)
{
  v1[3] = a1;
  v1[4] = type metadata accessor for MainActor();
  v1[5] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[6] = v3;
  v1[7] = v2;
  return _swift_task_switch(sub_100FBF470, v3, v2);
}

uint64_t sub_100FBF470()
{
  id v1 = [*(id *)(v0 + 24) superview];

  if (v1)
  {
    id v2 = 0;
  }
  else
  {
    uint64_t v3 = *(void **)(v0 + 24);
    [v3 bounds];
    id v2 = [objc_allocWithZone((Class)UIView) initWithFrame:v4, v5, v6, v7];
    [v2 addSubview:v3];
  }
  *(void *)(v0 + 64) = v2;
  [*(id *)(v0 + 24) frame];
  if (CGRectIsEmpty(v20))
  {
    id v8 = [*(id *)(v0 + 24) superview];
    if (v8)
    {
      long long v9 = v8;
      uint64_t v10 = *(void **)(v0 + 24);
      [v8 setNeedsLayout];
      [v9 layoutIfNeeded];
      [v10 frame];
      if (CGRectIsEmpty(v21)) {
        [*(id *)(v0 + 24) setFrame:0.0, 0.0, 300.0, 300.0];
      }
    }
  }
  [*(id *)(v0 + 24) frame];
  if (v11 != v12)
  {
    if (v11 <= v12) {
      double v11 = v12;
    }
    [*(id *)(v0 + 24) setFrame:0.0, 0.0, v11, v11];
  }
  uint64_t v13 = *(void *)(v0 + 24);
  uint64_t v14 = static MainActor.shared.getter();
  *(void *)(v0 + 72) = v14;
  uint64_t v15 = swift_task_alloc();
  *(void *)(v0 + 80) = v15;
  *(void *)(v15 + 16) = v13;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v16;
  uint64_t v17 = sub_1005057FC((uint64_t *)&unk_10169DC30);
  *uint64_t v16 = v0;
  v16[1] = sub_100FBF6EC;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, v14, &protocol witness table for MainActor, 0xD000000000000012, 0x800000010129BFD0, sub_100FBFD4C, v15, v17);
}

uint64_t sub_100FBF6EC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_100FBF84C, v3, v2);
}

uint64_t sub_100FBF84C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_release();
  uint64_t v2 = *(void **)(v0 + 16);
  if (v1)
  {
    id v3 = [*(id *)(v0 + 24) superview];
    if (v3)
    {
      double v4 = v3;
      uint64_t v5 = *(void **)(v0 + 64);
      sub_1009ACFF8();
      id v6 = v5;
      id v7 = v4;
      LOBYTE(v4) = static NSObject.== infix(_:_:)();

      if (v4) {
        [*(id *)(v0 + 24) removeFromSuperview];
      }
    }
  }
  id v8 = *(void **)(v0 + 64);
  id v9 = v2;
  id v10 = [v9 CGImage];

  double v11 = *(uint64_t (**)(id))(v0 + 8);
  return v11(v10);
}

uint64_t sub_100FBF970()
{
  v1[2] = v0;
  type metadata accessor for MainActor();
  v1[3] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[4] = v3;
  v1[5] = v2;
  return _swift_task_switch(sub_100FBFA08, v3, v2);
}

uint64_t sub_100FBFA08()
{
  uint64_t v1 = v0[2];
  if (*(void *)(v1 + 72) >> 62 == 1)
  {
    uint64_t v2 = *(void *)(v1 + 56);
    v0[6] = v2;
    uint64_t v3 = *(void **)(v2 + 88);
    v0[7] = v3;
    id v8 = (uint64_t (*)(uint64_t))((char *)&dword_1016A4D08 + dword_1016A4D08);
    id v4 = v3;
    swift_retain();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[8] = v5;
    void *v5 = v0;
    v5[1] = sub_100FBFB30;
    return v8((uint64_t)v4);
  }
  else
  {
    swift_release();
    id v7 = (uint64_t (*)(void))v0[1];
    return v7(0);
  }
}

uint64_t sub_100FBFB30(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 32);
    uint64_t v6 = *(void *)(v4 + 40);
    id v7 = sub_100FBFCD4;
  }
  else
  {

    *(void *)(v4 + 80) = a1;
    uint64_t v5 = *(void *)(v4 + 32);
    uint64_t v6 = *(void *)(v4 + 40);
    id v7 = sub_100FBFC60;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100FBFC60()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100FBFCD4()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100FBFD4C(uint64_t a1)
{
  return sub_100FBD8B0(a1, *(void **)(v1 + 16));
}

uint64_t sub_100FBFD54()
{
  uint64_t v1 = sub_1005057FC(&qword_101681FF0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100FBFE2C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1005057FC(&qword_101681FF0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528488;
  return sub_100FBDAA8(a1, v5, v6, v7, v8);
}

uint64_t sub_100FBFF2C()
{
  uint64_t v1 = sub_1005057FC(&qword_101681FF0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100FBFFC0(void *a1)
{
  sub_1005057FC(&qword_101681FF0);

  return sub_100FBDCDC(a1);
}

uint64_t *sub_100FC0034(uint64_t *a1)
{
  return a1;
}

uint64_t sub_100FC0088()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100FC00C0()
{
  return sub_100FBBC80();
}

unint64_t sub_100FC00C8()
{
  unint64_t result = qword_1016A4D28;
  if (!qword_1016A4D28)
  {
    sub_100522D34(&qword_1016A4D20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4D28);
  }
  return result;
}

uint64_t *sub_100FC0124(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    id v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (uint64_t *)((char *)a1 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    void *v18 = *v19;
    v18[1] = v20;
    *(uint64_t *)((char *)a1 + v17) = *(uint64_t *)((char *)a2 + v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100FC0238(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100FC02D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  id v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100FC0394(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  void *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100FC0494(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  return a1;
}

uint64_t sub_100FC052C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  void *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100FC05FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100FC0610);
}

uint64_t sub_100FC0610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100FC06D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100FC06E8);
}

uint64_t sub_100FC06E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t _s17CategoryViewModelVMa()
{
  uint64_t result = qword_1016A4D88;
  if (!qword_1016A4D88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100FC07F4()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_100FC08A4()
{
  type metadata accessor for UUID();
  sub_100FC0AB8((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v1 = _s17CategoryViewModelVMa();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + *(int *)(v1 + 24) + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(void *)(v0 + *(int *)(v1 + 32)));
}

Swift::Int sub_100FC09EC()
{
  return Hasher._finalize()();
}

Swift::Int sub_100FC0A30()
{
  return Hasher._finalize()();
}

uint64_t sub_100FC0A70()
{
  return sub_100FC0AB8(&qword_1016A4DD0, (void (*)(uint64_t))_s17CategoryViewModelVMa);
}

uint64_t sub_100FC0AB8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_100FC0B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s17CategoryViewModelVMa();
  __chkstk_darwin(v4, v5);
  uint64_t v62 = (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v61 = (uint64_t)&v59 - v9;
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v59 - v12;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v59 - v16;
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v59 - v20;
  __chkstk_darwin(v22, v23);
  long long v25 = (char *)&v59 - v24;
  __chkstk_darwin(v26, v27);
  id v29 = (char *)&v59 - v28;
  __chkstk_darwin(v30, v31);
  uint64_t v33 = (char *)&v59 - v32;
  char v34 = static UUID.== infix(_:_:)();
  sub_100FC0F98(a1, (uint64_t)v33);
  sub_100FC0F98(a2, (uint64_t)v29);
  if ((v34 & 1) == 0)
  {
    sub_100FC0FFC((uint64_t)v33);
    sub_100FC0FFC((uint64_t)v29);
    sub_100FC0F98(a1, (uint64_t)v25);
    sub_100FC0F98(a2, (uint64_t)v21);
    goto LABEL_9;
  }
  uint64_t v60 = v4;
  uint64_t v35 = *(int *)(v4 + 20);
  uint64_t v36 = *(void *)&v33[v35];
  uint64_t v37 = *(void *)&v33[v35 + 8];
  uint64_t v38 = &v29[v35];
  if (v36 == *(void *)v38 && v37 == *((void *)v38 + 1))
  {
    sub_100FC0FFC((uint64_t)v33);
    sub_100FC0FFC((uint64_t)v29);
    sub_100FC0F98(a1, (uint64_t)v25);
    sub_100FC0F98(a2, (uint64_t)v21);
    goto LABEL_11;
  }
  char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
  sub_100FC0FFC((uint64_t)v33);
  sub_100FC0FFC((uint64_t)v29);
  sub_100FC0F98(a1, (uint64_t)v25);
  sub_100FC0F98(a2, (uint64_t)v21);
  if ((v40 & 1) == 0)
  {
LABEL_9:
    sub_100FC0FFC((uint64_t)v21);
    sub_100FC0FFC((uint64_t)v25);
LABEL_23:
    sub_100FC0F98(a1, (uint64_t)v17);
    sub_100FC0F98(a2, (uint64_t)v13);
    goto LABEL_24;
  }
LABEL_11:
  uint64_t v41 = *(int *)(v60 + 24);
  unint64_t v42 = &v25[v41];
  uint64_t v43 = *(void *)&v25[v41 + 8];
  long long v44 = &v21[v41];
  uint64_t v45 = *((void *)v44 + 1);
  if (!v43)
  {
    swift_bridgeObjectRetain();
    sub_100FC0FFC((uint64_t)v21);
    sub_100FC0FFC((uint64_t)v25);
    if (!v45)
    {
LABEL_28:
      sub_100FC0F98(a1, (uint64_t)v17);
      sub_100FC0F98(a2, (uint64_t)v13);
      goto LABEL_29;
    }
    goto LABEL_22;
  }
  if (!v45)
  {
    swift_bridgeObjectRetain();
    sub_100FC0FFC((uint64_t)v21);
    sub_100FC0FFC((uint64_t)v25);
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  if (*(void *)v42 == *(void *)v44 && v43 == v45)
  {
    swift_bridgeObjectRetain();
    sub_100FC0FFC((uint64_t)v21);
    sub_100FC0FFC((uint64_t)v25);
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRetain();
  sub_100FC0FFC((uint64_t)v21);
  sub_100FC0FFC((uint64_t)v25);
  swift_bridgeObjectRelease();
  sub_100FC0F98(a1, (uint64_t)v17);
  sub_100FC0F98(a2, (uint64_t)v13);
  if ((v47 & 1) == 0)
  {
LABEL_24:
    sub_100FC0FFC((uint64_t)v17);
    sub_100FC0FFC((uint64_t)v13);
    uint64_t v48 = v61;
    sub_100FC0F98(a1, v61);
    uint64_t v49 = v62;
    sub_100FC0F98(a2, v62);
    goto LABEL_25;
  }
LABEL_29:
  uint64_t v51 = v60;
  uint64_t v52 = *(int *)(v60 + 28);
  uint64_t v53 = *(void *)&v17[v52];
  uint64_t v54 = *(void *)&v17[v52 + 8];
  id v55 = &v13[v52];
  if (v53 == *(void *)v55 && v54 == *((void *)v55 + 1))
  {
    sub_100FC0FFC((uint64_t)v17);
    sub_100FC0FFC((uint64_t)v13);
    uint64_t v48 = v61;
    sub_100FC0F98(a1, v61);
    uint64_t v49 = v62;
    sub_100FC0F98(a2, v62);
LABEL_33:
    uint64_t v57 = *(void *)(v48 + *(int *)(v51 + 32));
    sub_100FC0FFC(v48);
    uint64_t v58 = *(void *)(v49 + *(int *)(v51 + 32));
    sub_100FC0FFC(v49);
    return v57 == v58;
  }
  char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
  sub_100FC0FFC((uint64_t)v17);
  sub_100FC0FFC((uint64_t)v13);
  uint64_t v48 = v61;
  sub_100FC0F98(a1, v61);
  uint64_t v49 = v62;
  sub_100FC0F98(a2, v62);
  if (v56) {
    goto LABEL_33;
  }
LABEL_25:
  sub_100FC0FFC(v49);
  sub_100FC0FFC(v48);
  return 0;
}

uint64_t sub_100FC0F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s17CategoryViewModelVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100FC0FFC(uint64_t a1)
{
  uint64_t v2 = _s17CategoryViewModelVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100FC1058(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (*(uint64_t (**)(void))(a2 + 8))();
  swift_release();
  if (v4 || ((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2) & 1) == 0) {
    return 1;
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v6, v7);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t CRLTransactablePropertyMapKeys.rawValue.getter(char a1)
{
  uint64_t result = 0x61446E6F6D6D6F63;
  switch(a1)
  {
    case 1:
      return 0x656E6961746E6F63;
    case 2:
      unint64_t v3 = 0x446472616F62;
      return v3 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
    case 3:
      uint64_t v4 = 1734438249;
      goto LABEL_7;
    case 4:
      uint64_t v4 = 1769369453;
      goto LABEL_7;
    case 5:
      uint64_t v4 = 1885431923;
LABEL_7:
      unint64_t v3 = v4 & 0xFFFF0000FFFFFFFFLL | 0x446500000000;
      return v3 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
    case 6:
      unsigned int v5 = 1701603686;
      goto LABEL_12;
    case 7:
      return 0x617461446C7275;
    case 8:
      unsigned int v5 = 2053403509;
LABEL_12:
      uint64_t result = v5 | 0x6174614400000000;
      break;
    case 9:
      uint64_t result = 0x646E616865657266;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100FC12DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  swift_release();
  if (v6 || *(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active) != 1)
  {
    sub_100895BA8();
    swift_allocError();
    unsigned char *v10 = 0;
    return swift_willThrow();
  }
  else
  {
    Swift::String v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 16);
    uint64_t v8 = swift_retain();
    v7(v8, a2, a3);
    return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
  }
}

uint64_t sub_100FC13CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 8);
  uint64_t v7 = v6(a2, a3);
  swift_release();
  if (!v7)
  {
LABEL_5:
    sub_100895BA8();
    swift_allocError();
    unsigned char *v10 = 1;
    return swift_willThrow();
  }
  uint64_t result = v6(a2, a3);
  if (result)
  {
    char v9 = static UUID.== infix(_:_:)();
    swift_release();
    if (v9)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 120))(a1, a2, a3);
      return (*(uint64_t (**)(void, uint64_t, uint64_t))(a3 + 16))(0, a2, a3);
    }
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_100FC14FC(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = CRLTransactablePropertyMapKeys.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == CRLTransactablePropertyMapKeys.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_100FC1588()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  CRLTransactablePropertyMapKeys.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100FC15EC()
{
  CRLTransactablePropertyMapKeys.rawValue.getter(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100FC1640()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  CRLTransactablePropertyMapKeys.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_100FC16A0@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s8Freeform30CRLTransactablePropertyMapKeysO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100FC16D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CRLTransactablePropertyMapKeys.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100FC16FC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100FC17AC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform31CRLTransactableObservableDeltas_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

unint64_t _s8Freeform30CRLTransactablePropertyMapKeysO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101505060, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xA) {
    return 10;
  }
  else {
    return v3;
  }
}

unint64_t sub_100FC18BC()
{
  unint64_t result = qword_1016A4DD8;
  if (!qword_1016A4DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4DD8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLTransactablePropertyMapKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100FC19DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLTransactablePropertyMapKeys()
{
  return &type metadata for CRLTransactablePropertyMapKeys;
}

uint64_t sub_100FC1A14()
{
  return type metadata accessor for CRLTransactableUndoingMutations(0);
}

uint64_t type metadata accessor for CRLTransactableUndoingMutations(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A4E08);
}

uint64_t sub_100FC1A3C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100FC1AD8()
{
  return type metadata accessor for CRLTransactableObservableDeltas(0);
}

uint64_t type metadata accessor for CRLTransactableObservableDeltas(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A4EF0);
}

uint64_t sub_100FC1B00()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLTransactableError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100FC1C74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLTransactableError()
{
  return &type metadata for CRLTransactableError;
}

unint64_t sub_100FC1CB0()
{
  unint64_t result = qword_1016A4F90;
  if (!qword_1016A4F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A4F90);
  }
  return result;
}

uint64_t sub_100FC1D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_1016892B0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v25 - v19;
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  CRRegister.wrappedValue.getter();
  char v21 = static UUID.== infix(_:_:)();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22(v16, v12);
  v22(v20, v12);
  sub_100522E9C(a1, (uint64_t)v11, &qword_1016892B0);
  sub_100522E9C(a2, (uint64_t)v7, &qword_1016892B0);
  if (v21) {
    char v23 = sub_100FC293C((uint64_t)v7, &qword_1016892B0, type metadata accessor for CRLShapeItemParentAffinity, &qword_101686808, (uint64_t (*)(char *, char *))sub_100E2CB20, type metadata accessor for CRLShapeItemParentAffinity);
  }
  else {
    char v23 = 0;
  }
  sub_100522F00((uint64_t)v7, &qword_1016892B0);
  sub_100522F00((uint64_t)v11, &qword_1016892B0);
  return v23 & 1;
}

uint64_t sub_100FC1F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101683E10);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v15 = __chkstk_darwin(v12, v14);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v18);
  uint64_t v20 = (char *)&v25 - v19;
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  CRRegister.wrappedValue.getter();
  char v21 = static UUID.== infix(_:_:)();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22(v17, v12);
  v22(v20, v12);
  sub_100522E9C(a1, (uint64_t)v11, (uint64_t *)&unk_101683E10);
  sub_100522E9C(a2, (uint64_t)v8, (uint64_t *)&unk_101683E10);
  if (v21) {
    char v23 = sub_100FC293C((uint64_t)v8, (uint64_t *)&unk_101683E10, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity, (uint64_t *)&unk_101683E30, (uint64_t (*)(char *, char *))sub_10068EB20, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  }
  else {
    char v23 = 0;
  }
  sub_100522F00((uint64_t)v8, (uint64_t *)&unk_101683E10);
  sub_100522F00((uint64_t)v11, (uint64_t *)&unk_101683E10);
  return v23 & 1;
}

uint64_t sub_100FC21CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v31 = a6;
  uint64_t v32 = a7;
  uint64_t v30 = a5;
  int v27 = a3;
  int v28 = a4;
  uint64_t v26 = a2;
  uint64_t v35 = a1;
  uint64_t v9 = sub_1005057FC(qword_1016799F8);
  uint64_t v33 = *(void *)(v9 - 8);
  uint64_t v34 = v9;
  __chkstk_darwin(v9, v10);
  id v29 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v24, v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1005057FC(&qword_1016892B0);
  uint64_t v25 = a8 + *(int *)(v20 + 52);
  sub_10051A41C(v37);
  sub_10051B3EC((uint64_t)v37, (uint64_t)v36, (uint64_t *)&unk_101683E20);
  sub_1005057FC((uint64_t *)&unk_101683E20);
  sub_10068E368();
  CRRegister.init(wrappedValue:)();
  *(void *)(a8 + *(int *)(v20 + 56)) = &_swiftEmptyDictionarySingleton;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v35, v15);
  CRRegister.init(_:)();
  uint64_t v21 = v26;
  sub_100FC98A0(v26, (uint64_t)v14, type metadata accessor for CRLShapeItemParentAffinity);
  sub_100FC8D40(&qword_10169ECC8, (void (*)(uint64_t))type metadata accessor for CRLShapeItemParentAffinity);
  CRRegister.init(_:)();
  LOBYTE(v36[0]) = v27;
  CRRegister.init(_:)();
  LOBYTE(v36[0]) = v28;
  CRRegister.init(_:)();
  v36[0] = v30;
  v36[1] = v31;
  CRRegister.init(_:)();
  sub_10051B3EC(v32, (uint64_t)v36, (uint64_t *)&unk_101683E20);
  uint64_t v22 = v29;
  CRRegister.init(_:)();
  sub_100FC9908(v21, type metadata accessor for CRLShapeItemParentAffinity);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v35, v15);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v33 + 40))(v25, v22, v34);
}

uint64_t sub_100FC2584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v31 = a6;
  uint64_t v32 = a7;
  uint64_t v30 = a5;
  int v27 = a3;
  int v28 = a4;
  uint64_t v26 = a2;
  uint64_t v35 = a1;
  uint64_t v9 = sub_1005057FC(qword_1016799F8);
  uint64_t v33 = *(void *)(v9 - 8);
  uint64_t v34 = v9;
  __chkstk_darwin(v9, v10);
  id v29 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for CRLBoardItemParentAffinity();
  __chkstk_darwin(v24, v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101683E10);
  uint64_t v25 = a8 + *(int *)(v20 + 52);
  sub_10051A41C(v37);
  sub_10051B3EC((uint64_t)v37, (uint64_t)v36, (uint64_t *)&unk_101683E20);
  sub_1005057FC((uint64_t *)&unk_101683E20);
  sub_10068E368();
  CRRegister.init(wrappedValue:)();
  *(void *)(a8 + *(int *)(v20 + 56)) = _swiftEmptyDictionarySingleton;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v35, v15);
  CRRegister.init(_:)();
  uint64_t v21 = v26;
  sub_100FC98A0(v26, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  sub_100FC8D40(&qword_101679AE8, (void (*)(uint64_t))type metadata accessor for CRLBoardItemParentAffinity);
  CRRegister.init(_:)();
  LOBYTE(v36[0]) = v27;
  CRRegister.init(_:)();
  LOBYTE(v36[0]) = v28;
  CRRegister.init(_:)();
  v36[0] = v30;
  v36[1] = v31;
  CRRegister.init(_:)();
  sub_10051B3EC(v32, (uint64_t)v36, (uint64_t *)&unk_101683E20);
  uint64_t v22 = v29;
  CRRegister.init(_:)();
  sub_100FC9908(v21, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v35, v15);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v33 + 40))(v25, v22, v34);
}

uint64_t sub_100FC293C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(char *, char *), uint64_t (*a6)(void))
{
  unint64_t v66 = a5;
  BOOL v67 = a6;
  uint64_t v10 = v6;
  uint64_t v65 = a1;
  uint64_t v11 = sub_1005057FC(a2);
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v70 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13, v15);
  uint64_t v71 = (uint64_t)&v62 - v17;
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v68 = (uint64_t)&v62 - v20;
  uint64_t v22 = __chkstk_darwin(v19, v21);
  uint64_t v69 = (uint64_t)&v62 - v23;
  uint64_t v25 = __chkstk_darwin(v22, v24);
  uint64_t v63 = (uint64_t)&v62 - v26;
  uint64_t v28 = __chkstk_darwin(v25, v27);
  uint64_t v64 = (uint64_t)&v62 - v29;
  uint64_t v31 = __chkstk_darwin(v28, v30);
  uint64_t v33 = (char *)&v62 - v32;
  __chkstk_darwin(v31, v34);
  uint64_t v36 = (char *)&v62 - v35;
  uint64_t v37 = a3(0);
  uint64_t v39 = __chkstk_darwin(v37 - 8, v38);
  uint64_t v41 = (char *)&v62 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39, v42);
  long long v44 = (char *)&v62 - v43;
  sub_1005057FC(a4);
  CRRegister.wrappedValue.getter();
  uint64_t v62 = v11;
  uint64_t v45 = v65;
  CRRegister.wrappedValue.getter();
  char v46 = v66(v44, v41);
  char v47 = v67;
  sub_100FC9908((uint64_t)v41, v67);
  sub_100FC9908((uint64_t)v44, v47);
  sub_100522E9C((uint64_t)v10, (uint64_t)v36, a2);
  sub_100522E9C(v45, (uint64_t)v33, a2);
  if ((v46 & 1) == 0)
  {
    sub_100522F00((uint64_t)v33, a2);
    sub_100522F00((uint64_t)v36, a2);
    uint64_t v50 = v64;
    sub_100522E9C((uint64_t)v10, v64, a2);
    uint64_t v51 = v63;
    sub_100522E9C(v45, v63, a2);
    uint64_t v54 = (uint64_t)v70;
    uint64_t v53 = v71;
LABEL_9:
    sub_100522F00(v51, a2);
    sub_100522F00(v50, a2);
    uint64_t v56 = v69;
    sub_100522E9C((uint64_t)v10, v69, a2);
    uint64_t v57 = v68;
    sub_100522E9C(v45, v68, a2);
LABEL_10:
    sub_100522F00(v57, a2);
    sub_100522F00(v56, a2);
    sub_100522E9C((uint64_t)v10, v53, a2);
    sub_100522E9C(v45, v54, a2);
LABEL_11:
    sub_100522F00(v54, a2);
    sub_100522F00(v53, a2);
    goto LABEL_12;
  }
  sub_1005057FC((uint64_t *)&unk_101689310);
  CRRegister.wrappedValue.getter();
  int v48 = LOBYTE(v92[0]);
  CRRegister.wrappedValue.getter();
  int v49 = LOBYTE(v92[0]);
  sub_100522F00((uint64_t)v33, a2);
  sub_100522F00((uint64_t)v36, a2);
  uint64_t v50 = v64;
  sub_100522E9C((uint64_t)v10, v64, a2);
  uint64_t v51 = v63;
  sub_100522E9C(v45, v63, a2);
  BOOL v52 = v48 == v49;
  uint64_t v54 = (uint64_t)v70;
  uint64_t v53 = v71;
  if (!v52) {
    goto LABEL_9;
  }
  sub_1005057FC((uint64_t *)&unk_101689310);
  CRRegister.wrappedValue.getter();
  LODWORD(v67) = LOBYTE(v92[0]);
  CRRegister.wrappedValue.getter();
  int v55 = LOBYTE(v92[0]);
  sub_100522F00(v51, a2);
  uint64_t v54 = (uint64_t)v70;
  sub_100522F00(v50, a2);
  uint64_t v56 = v69;
  sub_100522E9C((uint64_t)v10, v69, a2);
  uint64_t v57 = v68;
  sub_100522E9C(v45, v68, a2);
  BOOL v52 = v67 == v55;
  uint64_t v53 = v71;
  if (!v52) {
    goto LABEL_10;
  }
  BOOL v67 = v10;
  sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  long long v58 = v92[0];
  CRRegister.wrappedValue.getter();
  if (v58 == v92[0])
  {
    swift_bridgeObjectRelease_n();
    sub_100522F00(v68, a2);
    sub_100522F00(v69, a2);
    uint64_t v53 = v71;
    sub_100522E9C((uint64_t)v67, v71, a2);
    sub_100522E9C(v45, v54, a2);
  }
  else
  {
    char v61 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100522F00(v68, a2);
    sub_100522F00(v69, a2);
    uint64_t v53 = v71;
    sub_100522E9C((uint64_t)v67, v71, a2);
    sub_100522E9C(v45, v54, a2);
    if ((v61 & 1) == 0) {
      goto LABEL_11;
    }
  }
  sub_1005057FC(qword_1016799F8);
  CRRegister.wrappedValue.getter();
  sub_10051B3EC((uint64_t)v92, (uint64_t)v94, (uint64_t *)&unk_101683E20);
  CRRegister.wrappedValue.getter();
  sub_10051B3EC((uint64_t)v92, (uint64_t)v95, (uint64_t *)&unk_101683E20);
  sub_10051B3EC((uint64_t)v94, (uint64_t)v92, (uint64_t *)&unk_101683E20);
  sub_10051B3EC((uint64_t)v95, (uint64_t)v93, (uint64_t *)&unk_101683E20);
  sub_10051B3EC((uint64_t)v94, (uint64_t)v96, (uint64_t *)&unk_101683E20);
  if (sub_10068F2EC((uint64_t)v96) == 1)
  {
    sub_100522F00(v54, a2);
    sub_100522F00(v53, a2);
    sub_10051B3EC((uint64_t)v93, (uint64_t)v97, (uint64_t *)&unk_101683E20);
    sub_10051B3EC((uint64_t)v97, (uint64_t)&v76, (uint64_t *)&unk_101683E20);
    if (sub_10068F2EC((uint64_t)&v76) == 1)
    {
      sub_10051B3EC((uint64_t)v92, (uint64_t)v75, (uint64_t *)&unk_101683E20);
      sub_10068F3E8(v75);
      char v59 = 1;
      return v59 & 1;
    }
  }
  else
  {
    sub_10051B3EC((uint64_t)v95, (uint64_t)v75, (uint64_t *)&unk_101683E20);
    if (sub_10068F2EC((uint64_t)v75) != 1)
    {
      sub_10051B3EC((uint64_t)v94, (uint64_t)v72, (uint64_t *)&unk_101683E20);
      v97[4] = v72[4];
      v97[5] = v72[5];
      v97[6] = v72[6];
      v97[7] = v72[7];
      v97[0] = v72[0];
      v97[1] = v72[1];
      v97[2] = v72[2];
      v97[3] = v72[3];
      sub_10051B3EC((uint64_t)v95, (uint64_t)v73, (uint64_t *)&unk_101683E20);
      long long v80 = v73[4];
      long long v81 = v73[5];
      long long v82 = v73[6];
      long long v83 = v73[7];
      long long v76 = v73[0];
      long long v77 = v73[1];
      long long v78 = v73[2];
      long long v79 = v73[3];
      sub_10068F444((uint64_t)v72);
      char v59 = sub_10093C18C(v97, &v76);
      sub_10068F3E8(v95);
      sub_10068F3E8(v94);
      sub_100522F00(v54, a2);
      sub_100522F00(v53, a2);
      sub_10051B3EC((uint64_t)v92, (uint64_t)v74, (uint64_t *)&unk_101683E20);
      sub_10068F3E8(v74);
      return v59 & 1;
    }
    sub_10051B3EC((uint64_t)v94, (uint64_t)&v76, (uint64_t *)&unk_101683E20);
    sub_10068F444((uint64_t)&v76);
    sub_100522F00(v54, a2);
    sub_100522F00(v53, a2);
    sub_10068F3E8(v94);
  }
  long long v88 = v93[4];
  long long v89 = v93[5];
  long long v90 = v93[6];
  long long v91 = v93[7];
  long long v84 = v93[0];
  long long v85 = v93[1];
  long long v86 = v93[2];
  long long v87 = v93[3];
  long long v80 = v92[4];
  long long v81 = v92[5];
  long long v82 = v92[6];
  long long v83 = v92[7];
  long long v76 = v92[0];
  long long v77 = v92[1];
  long long v78 = v92[2];
  long long v79 = v92[3];
  sub_10068F304((uint64_t)&v76);
LABEL_12:
  char v59 = 0;
  return v59 & 1;
}

uint64_t sub_100FC3180()
{
  qword_10171CDB8 = 97;
  unk_10171CDC0 = 0xE100000000000000;
  qword_10171CDC8 = swift_getKeyPath();
  unk_10171CDD0 = 98;
  qword_10171CDD8 = 0xE100000000000000;
  qword_10171CDE0 = swift_getKeyPath();
  qword_10171CDE8 = 99;
  qword_10171CDF0 = 0xE100000000000000;
  uint64_t result = swift_getKeyPath();
  qword_10171CDF8 = result;
  return result;
}

uint64_t sub_100FC31F4@<X0>(void *a1@<X8>)
{
  if (qword_101670298 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_10171CDC0;
  uint64_t v4 = qword_10171CDC8;
  uint64_t v3 = unk_10171CDD0;
  uint64_t v5 = qword_10171CDD8;
  uint64_t v6 = qword_10171CDE0;
  uint64_t v7 = qword_10171CDE8;
  uint64_t v8 = qword_10171CDF0;
  uint64_t v9 = qword_10171CDF8;
  *a1 = qword_10171CDB8;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  a1[8] = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();

  return swift_retain();
}

uint64_t sub_100FC32BC(uint64_t a1)
{
  uint64_t v2 = sub_100FC8D40(&qword_1016A5480, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);

  return static CRStruct_3.fieldKeys.getter(a1, v2);
}

uint64_t sub_100FC3328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + *(int *)(a1 + 28)) = _swiftEmptyDictionarySingleton;
  *(void *)(a2 + *(int *)(type metadata accessor for CRLContainerItemCRDTData(0) + 20)) = _swiftEmptyDictionarySingleton;
  type metadata accessor for UUID();
  sub_100FC8D40((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  CROrderedSet.init()();
  CRRegister.init(wrappedValue:)();
  return CRRegister.init(wrappedValue:)();
}

uint64_t sub_100FC341C(uint64_t a1)
{
  uint64_t v2 = sub_100FC8D40(&qword_10168AB78, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);

  return CRType.context.getter(a1, v2);
}

uint64_t sub_100FC3488()
{
  sub_100FC8D40(&qword_1016A5480, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);

  return CRStruct_3.actionUndoingDifference(from:)();
}

uint64_t sub_100FC350C()
{
  sub_100FC8D40(&qword_1016A5480, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);

  return CRStruct_3.apply(_:)();
}

uint64_t sub_100FC3588()
{
  sub_100FC8D40(&qword_1016A5480, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);

  return CRStruct_3.hasDelta(from:)();
}

uint64_t sub_100FC3604()
{
  sub_100FC8D40(&qword_1016A5480, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);

  return CRStruct_3.delta(_:from:)();
}

uint64_t sub_100FC3698(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100FC8D40(&qword_1016A5480, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);

  return CRStruct_3.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_100FC3714()
{
  sub_100FC8D40(&qword_1016A5480, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);

  return CRStruct_3.merge(delta:)();
}

uint64_t sub_100FC3790(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100FC8D40(&qword_1016A5480, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);

  return CRStruct_3.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100FC3814(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100FC8D40(&qword_1016A5480, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);

  return CRStruct_3.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100FC3898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100FC8D40(&qword_1016A5480, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);

  return CRStruct_3.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_100FC392C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100FC8D40(&qword_1016A5480, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);

  return CRStruct_3.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_100FC39A8()
{
  sub_100FC8D40(&qword_1016A5480, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);

  return CRStruct_3.needToFinalizeTimestamps()();
}

uint64_t sub_100FC3A14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100FC8D40(&qword_1016A5480, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);

  return CRStruct_3.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_100FC3A90()
{
  sub_100FC8D40(&qword_1016A5480, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);

  return CRStruct_3.merge(_:)();
}

uint64_t sub_100FC3B0C()
{
  return CRDT.serializedData(_:version:)();
}

uint64_t sub_100FC3B8C()
{
  return CRDT.init(serializedData:)();
}

uint64_t sub_100FC3C1C()
{
  return CRStruct_3.init(from:)();
}

uint64_t sub_100FC3C9C()
{
  return CRStruct_3.encode(to:)();
}

uint64_t sub_100FC3D14(uint64_t a1)
{
  uint64_t v2 = sub_100FC8D40(&qword_1016A5480, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);

  return CRStruct_3.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100FC3D90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11, v12);
  uint64_t v14 = &v19[-v13];
  uint64_t v15 = (int *)type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(0);
  *(void *)(a1 + v15[7]) = _swiftEmptyDictionarySingleton;
  UUID.init()();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 16))(v10, v14, v6);
  CRRegister.init(wrappedValue:)();
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v14, v6);
  uint64_t v16 = a1 + v15[5];
  UUID.init()();
  sub_10051A41C(v24);
  sub_10051B3EC((uint64_t)v24, (uint64_t)v23, (uint64_t *)&unk_101683E20);
  sub_100E22E2C((uint64_t)v5);
  sub_100FC21CC((uint64_t)v14, (uint64_t)v5, 0, 0, 0, 0xE000000000000000, (uint64_t)v23, v16);
  uint64_t v17 = a1 + v15[6];
  memset(v19, 0, 112);
  sub_10051A3F4((uint64_t)v25);
  sub_10051B3EC((uint64_t)v25, (uint64_t)v20, (uint64_t *)&unk_101685110);
  memset(v21, 0, sizeof(v21));
  uint64_t v22 = 0;
  sub_100E21C10((uint64_t)v19, (uint64_t)v20, (uint64_t)v21, (uint64_t)v21, v17, 0.0);
  *(void *)(v17 + *(int *)(type metadata accessor for CRLShapeItemCRDTData(0) + 20)) = _swiftEmptyDictionarySingleton;
  uint64_t result = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  *(void *)(v17 + *(int *)(result + 20)) = _swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_100FC4008()
{
  qword_10171CE00 = 97;
  *(void *)algn_10171CE08 = 0xE100000000000000;
  qword_10171CE10 = swift_getKeyPath();
  unk_10171CE18 = 98;
  qword_10171CE20 = 0xE100000000000000;
  qword_10171CE28 = swift_getKeyPath();
  qword_10171CE30 = 99;
  qword_10171CE38 = 0xE100000000000000;
  uint64_t result = swift_getKeyPath();
  qword_10171CE40 = result;
  return result;
}

uint64_t sub_100FC407C@<X0>(void *a1@<X8>)
{
  if (qword_1016702A0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_10171CE08;
  uint64_t v4 = qword_10171CE10;
  uint64_t v3 = unk_10171CE18;
  uint64_t v5 = qword_10171CE20;
  uint64_t v6 = qword_10171CE28;
  uint64_t v7 = qword_10171CE30;
  uint64_t v8 = qword_10171CE38;
  uint64_t v9 = qword_10171CE40;
  *a1 = qword_10171CE00;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  a1[8] = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();

  return swift_retain();
}

uint64_t sub_100FC4144(uint64_t a1)
{
  uint64_t v2 = sub_100FC8D40(&qword_1016973A0, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);

  return static CRStruct_3.fieldKeys.getter(a1, v2);
}

uint64_t sub_100FC41B4(uint64_t a1)
{
  uint64_t v2 = sub_100FC8D40(&qword_1016A5428, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);

  return CRType.context.getter(a1, v2);
}

uint64_t sub_100FC4220()
{
  sub_100FC8D40(&qword_1016973A0, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);

  return CRStruct_3.actionUndoingDifference(from:)();
}

uint64_t sub_100FC42A4()
{
  sub_100FC8D40(&qword_1016973A0, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);

  return CRStruct_3.apply(_:)();
}

uint64_t sub_100FC4320()
{
  sub_100FC8D40(&qword_1016973A0, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);

  return CRStruct_3.hasDelta(from:)();
}

uint64_t sub_100FC439C()
{
  sub_100FC8D40(&qword_1016973A0, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);

  return CRStruct_3.delta(_:from:)();
}

uint64_t sub_100FC4430(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100FC8D40(&qword_1016973A0, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);

  return CRStruct_3.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_100FC44AC()
{
  sub_100FC8D40(&qword_1016973A0, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);

  return CRStruct_3.merge(delta:)();
}

uint64_t sub_100FC4528(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100FC8D40(&qword_1016973A0, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);

  return CRStruct_3.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100FC45AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100FC8D40(&qword_1016973A0, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);

  return CRStruct_3.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100FC4630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100FC8D40(&qword_1016973A0, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);

  return CRStruct_3.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_100FC46C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100FC8D40(&qword_1016973A0, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);

  return CRStruct_3.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_100FC4740()
{
  sub_100FC8D40(&qword_1016973A0, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);

  return CRStruct_3.needToFinalizeTimestamps()();
}

uint64_t sub_100FC47AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100FC8D40(&qword_1016973A0, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);

  return CRStruct_3.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_100FC4828()
{
  sub_100FC8D40(&qword_1016973A0, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);

  return CRStruct_3.merge(_:)();
}

uint64_t sub_100FC48A4()
{
  return CRDT.serializedData(_:version:)();
}

uint64_t sub_100FC4924()
{
  return CRDT.init(serializedData:)();
}

uint64_t sub_100FC49B4()
{
  return CRStruct_3.init(from:)();
}

uint64_t sub_100FC4A34()
{
  return CRStruct_3.encode(to:)();
}

uint64_t sub_100FC4AAC(uint64_t a1)
{
  uint64_t v2 = sub_100FC8D40(&qword_1016973A0, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);

  return CRStruct_3.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100FC4B28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_10171CE48;
  swift_beginAccess();
  return sub_100FC98A0(v3, a1, type metadata accessor for CRLContainerItemCRDTData);
}

void (*sub_100FC4B90(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[9] = v1;
  size_t v4 = *(void *)(*(void *)(type metadata accessor for CRLContainerItemCRDTData(0) - 8) + 64);
  v3[10] = malloc(v4);
  uint64_t v5 = malloc(v4);
  uint64_t v6 = qword_10171CE48;
  v3[11] = v5;
  v3[12] = v6;
  uint64_t v7 = v1 + v6;
  swift_beginAccess();
  sub_100FC98A0(v7, (uint64_t)v5, type metadata accessor for CRLContainerItemCRDTData);
  return sub_100FC4C60;
}

void sub_100FC4C60(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 88);
  size_t v4 = *(void **)(*(void *)a1 + 80);
  uint64_t v5 = *(void *)(*(void *)a1 + 72) + *(void *)(*(void *)a1 + 96);
  if (a2)
  {
    sub_100FC98A0(*(void *)(*(void *)a1 + 88), (uint64_t)v4, type metadata accessor for CRLContainerItemCRDTData);
    swift_beginAccess();
    sub_100FC9968((uint64_t)v4, v5);
    swift_endAccess();
    sub_100FC9908((uint64_t)v4, type metadata accessor for CRLContainerItemCRDTData);
  }
  else
  {
    swift_beginAccess();
    sub_100FC9968((uint64_t)v3, v5);
    swift_endAccess();
  }
  sub_100FC9908((uint64_t)v3, type metadata accessor for CRLContainerItemCRDTData);
  free(v3);
  free(v4);

  free(v2);
}

uint64_t sub_100FC4D78()
{
  return 8;
}

uint64_t sub_100FC4D84()
{
  uint64_t v0 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  __chkstk_darwin(v0, v1);
  uint64_t v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for CRLFreehandItemData(0);
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    uint64_t v5 = result + qword_10171CE48;
    swift_beginAccess();
    sub_100FC98A0(v5, (uint64_t)v3, type metadata accessor for CRLFreehandDrawingCRDTData);
    swift_beginAccess();
    sub_100FC8D40(&qword_1016A5480, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);
    swift_retain();
    CRStruct_3.merge(_:)();
    sub_100FC9908((uint64_t)v3, type metadata accessor for CRLFreehandDrawingCRDTData);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

void *sub_100FC4EF8(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v37 = (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v36 - v13;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v36 - v21;
  uint64_t v23 = (uint64_t)v2 + *(void *)(*v2 + 632);
  swift_beginAccess();
  if (a1)
  {
    sub_100522E9C(v23, (uint64_t)v18, (uint64_t *)&unk_101683E10);
    sub_100523288((unint64_t *)&qword_1016737D8, (uint64_t *)&unk_101683E10);
    CRType.copy(renamingReferences:)();
    sub_100522F00((uint64_t)v18, (uint64_t *)&unk_101683E10);
    uint64_t v24 = (uint64_t)v2 + qword_10171CE48;
    swift_beginAccess();
    sub_100FC98A0(v24, (uint64_t)v10, type metadata accessor for CRLFreehandDrawingCRDTData);
    sub_100FC8D40(&qword_10168AB78, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);
    CRType.copy(renamingReferences:)();
    sub_100FC9908((uint64_t)v10, type metadata accessor for CRLFreehandDrawingCRDTData);
  }
  else
  {
    sub_100522E9C(v23, (uint64_t)v22, (uint64_t *)&unk_101683E10);
    uint64_t v25 = (uint64_t)v2 + qword_10171CE48;
    swift_beginAccess();
    sub_100FC98A0(v25, (uint64_t)v14, type metadata accessor for CRLFreehandDrawingCRDTData);
  }
  sub_100522E9C((uint64_t)v22, (uint64_t)v18, (uint64_t *)&unk_101683E10);
  uint64_t v36 = v22;
  uint64_t v26 = (uint64_t)v14;
  sub_100FC98A0((uint64_t)v14, (uint64_t)v10, type metadata accessor for CRLFreehandDrawingCRDTData);
  uint64_t v27 = v2[4];
  uint64_t v28 = v2[5];
  uint64_t v31 = v2 + 2;
  uint64_t v29 = v2[2];
  uint64_t v30 = v31[1];
  type metadata accessor for CRLFreehandItemData(0);
  uint64_t v32 = swift_allocObject();
  sub_100FC98A0((uint64_t)v10, v32 + qword_10171CE48, type metadata accessor for CRLFreehandDrawingCRDTData);
  uint64_t v33 = v37;
  sub_100FC98A0((uint64_t)v10, v37, type metadata accessor for CRLContainerItemCRDTData);
  sub_100FC9908((uint64_t)v10, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_100BC5C14(v33, v32 + qword_10171BE80);
  sub_10051B3EC((uint64_t)v18, v32 + *(void *)(*(void *)v32 + 632), (uint64_t *)&unk_101683E10);
  uint64_t v34 = sub_10068B398(v30, v27, v28, v29);
  sub_100FC9908(v26, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_100522F00((uint64_t)v36, (uint64_t *)&unk_101683E10);
  return v34;
}

uint64_t sub_100FC5344()
{
  uint64_t v1 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5, v6);
  uint64_t v8 = &v25[-v7];
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13, v14);
  uint64_t v16 = &v25[-v15];
  type metadata accessor for CRLFreehandItemData(0);
  uint64_t v17 = swift_dynamicCastClass();
  if (!v17) {
    goto LABEL_5;
  }
  uint64_t v18 = v17;
  uint64_t v19 = v0 + *(void *)(*(void *)v0 + 632);
  swift_beginAccess();
  sub_100522E9C(v19, (uint64_t)v16, (uint64_t *)&unk_101683E10);
  uint64_t v20 = v18 + *(void *)(*(void *)v18 + 632);
  swift_beginAccess();
  sub_100522E9C(v20, (uint64_t)v12, (uint64_t *)&unk_101683E10);
  swift_retain();
  LOBYTE(v20) = sub_100FC1F68((uint64_t)v16, (uint64_t)v12);
  sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101683E10);
  sub_100522F00((uint64_t)v16, (uint64_t *)&unk_101683E10);
  if ((v20 & 1) == 0)
  {
    swift_release();
LABEL_5:
    char v23 = 0;
    return v23 & 1;
  }
  uint64_t v21 = v0 + qword_10171CE48;
  swift_beginAccess();
  sub_100FC98A0(v21, (uint64_t)v8, type metadata accessor for CRLFreehandDrawingCRDTData);
  uint64_t v22 = v18 + qword_10171CE48;
  swift_beginAccess();
  sub_100FC98A0(v22, (uint64_t)v4, type metadata accessor for CRLFreehandDrawingCRDTData);
  char v23 = sub_100FC9220((uint64_t)v8, (uint64_t)v4);
  swift_release();
  sub_100FC9908((uint64_t)v4, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_100FC9908((uint64_t)v8, type metadata accessor for CRLFreehandDrawingCRDTData);
  return v23 & 1;
}

uint64_t sub_100FC55F0(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v16 - v10;
  uint64_t v12 = v2 + qword_10171CE48;
  swift_beginAccess();
  if (a2)
  {
    sub_100FC98A0(v12, (uint64_t)v7, type metadata accessor for CRLFreehandDrawingCRDTData);
    sub_100FC8D40(&qword_10168AB78, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);
    CRType.copy(renamingReferences:)();
    sub_100FC9908((uint64_t)v7, type metadata accessor for CRLFreehandDrawingCRDTData);
  }
  else
  {
    sub_100FC98A0(v12, (uint64_t)v11, type metadata accessor for CRLFreehandDrawingCRDTData);
  }
  if (qword_10166EE10 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for CRCodableVersion();
  sub_100556B74(v13, (uint64_t)qword_10171A2D8);
  sub_100FC8D40(&qword_10168B260, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);
  uint64_t v14 = CRDT.serializedData(_:version:)();
  sub_100FC9908((uint64_t)v11, type metadata accessor for CRLFreehandDrawingCRDTData);
  return v14;
}

uint64_t sub_100FC5844()
{
  uint64_t v1 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5, v6);
  uint64_t v8 = &v15[-v7];
  type metadata accessor for CRLFreehandItemData(0);
  uint64_t v9 = swift_dynamicCastClass();
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = v0 + qword_10171CE48;
    swift_beginAccess();
    sub_100FC98A0(v11, (uint64_t)v8, type metadata accessor for CRLFreehandDrawingCRDTData);
    uint64_t v12 = v10 + qword_10171CE48;
    swift_beginAccess();
    sub_100FC98A0(v12, (uint64_t)v4, type metadata accessor for CRLFreehandDrawingCRDTData);
    sub_100FC8D40(&qword_1016A5480, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);
    char v13 = CRStruct_3.hasDelta(from:)();
    sub_100FC9908((uint64_t)v4, type metadata accessor for CRLFreehandDrawingCRDTData);
    sub_100FC9908((uint64_t)v8, type metadata accessor for CRLFreehandDrawingCRDTData);
    return v13 & 1;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100FC5A4C(uint64_t a1, uint64_t a2)
{
  v27[1] = a2;
  v27[0] = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  __chkstk_darwin(v27[0], v3);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v27 - v8;
  uint64_t v10 = sub_1005057FC(&qword_1016A5488);
  __chkstk_darwin(v10 - 8, v11);
  char v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)v27 - v16;
  uint64_t v18 = swift_dynamicCastClass();
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = v2 + qword_10171CE48;
    swift_beginAccess();
    sub_100FC98A0(v20, (uint64_t)v9, type metadata accessor for CRLFreehandDrawingCRDTData);
    uint64_t v21 = v19 + qword_10171CE48;
    swift_beginAccess();
    sub_100FC98A0(v21, (uint64_t)v5, type metadata accessor for CRLFreehandDrawingCRDTData);
    sub_100FC8D40(&qword_1016A5480, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);
    swift_retain();
    CRStruct_3.delta(_:from:)();
    sub_100FC9908((uint64_t)v5, type metadata accessor for CRLFreehandDrawingCRDTData);
    sub_100FC9908((uint64_t)v9, type metadata accessor for CRLFreehandDrawingCRDTData);
    sub_100522E9C((uint64_t)v17, (uint64_t)v13, &qword_1016A5488);
    uint64_t v22 = sub_1005057FC(&qword_1016A5468);
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v13, 1, v22) == 1)
    {
      sub_100522F00((uint64_t)v17, &qword_1016A5488);
      swift_release();
      sub_100522F00((uint64_t)v13, &qword_1016A5488);
      return 0;
    }
    else
    {
      if (qword_10166EE10 != -1) {
        swift_once();
      }
      uint64_t v25 = type metadata accessor for CRCodableVersion();
      sub_100556B74(v25, (uint64_t)qword_10171A2D8);
      sub_100523288(&qword_1016A5460, &qword_1016A5468);
      uint64_t v24 = PartialCRDT.deltaSerializedData(_:version:)();
      swift_release();
      sub_100522F00((uint64_t)v17, &qword_1016A5488);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v22);
    }
    return v24;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

unint64_t sub_100FC5EA4(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v39 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_1016A5468);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100510D4C(a1, a2);
  sub_100523288(&qword_1016A5460, &qword_1016A5468);
  LOBYTE(a2) = v11;
  uint64_t v17 = v41;
  PartialCRDT.init(serializedData:)();
  if (!v17)
  {
    uint64_t v36 = v10;
    uint64_t v37 = v6;
    uint64_t v38 = v7;
    uint64_t v41 = v12;
    uint64_t v18 = v40;
    swift_beginAccess();
    type metadata accessor for CRLFreehandDrawingCRDTData(0);
    sub_100FC8D40(&qword_1016A5480, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);
    LODWORD(a2) = CRStruct_3.merge(delta:)();
    swift_endAccess();
    if ((a2 & 1) == 0)
    {
      v34[0] = v11;
      int v35 = a2;
      v34[1] = 0;
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v19 = (void *)static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      uint64_t v21 = v18 + *(void *)(*(void *)v18 + 632);
      swift_beginAccess();
      uint64_t v22 = v21;
      uint64_t v23 = (uint64_t)v37;
      sub_100522E9C(v22, (uint64_t)v37, (uint64_t *)&unk_101683E10);
      id v24 = v19;
      sub_1005057FC(&qword_101674550);
      uint64_t v25 = v36;
      CRRegister.wrappedValue.getter();
      sub_100522F00(v23, (uint64_t *)&unk_101683E10);
      a2 = UUID.uuidString.getter();
      uint64_t v27 = v26;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v25, v38);
      *(void *)(inited + 56) = &type metadata for String;
      uint64_t v28 = v18;
      unint64_t v29 = sub_100528BE4();
      *(void *)(inited + 64) = v29;
      *(void *)(inited + 32) = a2;
      *(void *)(inited + 40) = v27;
      uint64_t v42 = v28;
      type metadata accessor for CRLFreehandItemData(0);
      swift_retain();
      uint64_t v30 = String.init<A>(describing:)();
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v29;
      *(void *)(inited + 72) = v30;
      *(void *)(inited + 80) = v31;
      uint64_t v32 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v24, (uint64_t)&_mh_execute_header, v32, (uint64_t)"Delta failed to apply for %{public}@%{public}@", 46, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      LOBYTE(a2) = v35;
      uint64_t v11 = v34[0];
    }
    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v11);
  }
  return a2 & 1;
}

unint64_t sub_100FC6364()
{
  uint64_t v1 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v5 = sub_100682B70();
  uint64_t v6 = v0 + qword_10171CE48;
  swift_beginAccess();
  sub_100FC98A0(v6, (uint64_t)v4, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_1005057FC((uint64_t *)&unk_101689310);
  CRRegister.wrappedValue.getter();
  int v7 = v10[7];
  sub_100FC9908((uint64_t)v4, type metadata accessor for CRLFreehandDrawingCRDTData);
  uint64_t v8 = 0x3000000000000;
  if (v5 > 0x3000000000000) {
    uint64_t v8 = v5;
  }
  if (v7) {
    return v8;
  }
  else {
    return v5;
  }
}

uint64_t sub_100FC6478()
{
  return sub_100FC9908(v0 + qword_10171CE48, type metadata accessor for CRLFreehandDrawingCRDTData);
}

uint64_t sub_100FC64B0()
{
  sub_100522F00(v0 + *(void *)(*(void *)v0 + 632), (uint64_t *)&unk_101683E10);
  sub_100FC9908(v0 + qword_10171BE80, type metadata accessor for CRLContainerItemCRDTData);
  sub_100FC9908(v0 + qword_10171CE48, type metadata accessor for CRLFreehandDrawingCRDTData);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLFreehandItemData(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A4FC0);
}

uint64_t sub_100FC6594()
{
  uint64_t result = type metadata accessor for CRLFreehandDrawingCRDTData(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLFreehandDrawingCRDTData(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A5330);
}

char *sub_100FC6644(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101683E40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for CRLContainerItemCRDTData(0);
    *(void *)&a1[*(int *)(v8 + 20)] = *(void *)&a2[*(int *)(v8 + 20)];
    uint64_t v9 = a3[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101689310);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v13(&a1[a3[6]], &a2[a3[6]], v12);
    *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100FC67AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101683E40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for CRLContainerItemCRDTData(0);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101689310);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(a1 + *(int *)(a2 + 24), v6);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100FC68A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101683E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for CRLContainerItemCRDTData(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101689310);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  v12(v9, v10, v11);
  v12(a1 + a3[6], a2 + a3[6], v11);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100FC69C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101683E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for CRLContainerItemCRDTData(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101689310);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24);
  v12(v9, v10, v11);
  v12(a1 + a3[6], a2 + a3[6], v11);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100FC6AF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101683E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for CRLContainerItemCRDTData(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101689310);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(a1 + a3[6], a2 + a3[6], v11);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100FC6C00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101683E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for CRLContainerItemCRDTData(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101689310);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v12(a1 + a3[6], a2 + a3[6], v11);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100FC6D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100FC6D34);
}

uint64_t sub_100FC6D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CRLContainerItemCRDTData(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101689310);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_100FC6E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100FC6E60);
}

uint64_t sub_100FC6E60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for CRLContainerItemCRDTData(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1005057FC((uint64_t *)&unk_101689310);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_100FC6F74()
{
  type metadata accessor for CRLContainerItemCRDTData(319);
  if (v0 <= 0x3F)
  {
    sub_100FC704C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100FC704C()
{
  if (!qword_101675390)
  {
    unint64_t v0 = type metadata accessor for CRRegister();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101675390);
    }
  }
}

void *sub_100FC70AC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v50 = *a2;
    *a1 = *a2;
    a1 = (void *)(v50 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005057FC(&qword_101674550);
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    v8((void *)((char *)a1 + v9), (void *)((char *)a2 + v9), v7);
    uint64_t v12 = (int *)sub_1005057FC(&qword_1016892B0);
    uint64_t v13 = v12[9];
    uint64_t v14 = &v10[v13];
    uint64_t v15 = &v11[v13];
    uint64_t v16 = sub_1005057FC(&qword_101686808);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = v12[10];
    uint64_t v18 = &v10[v17];
    uint64_t v19 = &v11[v17];
    uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101689310);
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
    BOOL v52 = a2;
    v21(v18, v19, v20);
    v21(&v10[v12[11]], &v11[v12[11]], v20);
    uint64_t v22 = v12[12];
    uint64_t v23 = &v10[v22];
    id v24 = &v11[v22];
    uint64_t v25 = sub_1005057FC(&qword_101674450);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    uint64_t v26 = v12[13];
    uint64_t v27 = &v10[v26];
    uint64_t v28 = &v11[v26];
    uint64_t v29 = sub_1005057FC(qword_1016799F8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    *(void *)&v10[v12[14]] = *(void *)&v11[v12[14]];
    uint64_t v30 = a3[6];
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
    uint64_t v34 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
    uint64_t v35 = v34[5];
    uint64_t v36 = &v31[v35];
    uint64_t v37 = &v32[v35];
    uint64_t v38 = sub_1005057FC(&qword_101673478);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
    uint64_t v39 = v34[6];
    uint64_t v40 = &v31[v39];
    uint64_t v41 = &v32[v39];
    uint64_t v42 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
    v43(v40, v41, v42);
    v43(&v31[v34[7]], &v32[v34[7]], v42);
    uint64_t v44 = v34[8];
    uint64_t v45 = &v31[v44];
    char v46 = &v32[v44];
    uint64_t v47 = sub_1005057FC(&qword_101689320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    *(void *)&v31[v34[9]] = *(void *)&v32[v34[9]];
    uint64_t v48 = type metadata accessor for CRLShapeItemCRDTData(0);
    *(void *)&v31[*(int *)(v48 + 20)] = *(void *)&v32[*(int *)(v48 + 20)];
    uint64_t v49 = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
    *(void *)&v31[*(int *)(v49 + 20)] = *(void *)&v32[*(int *)(v49 + 20)];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)v52 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100FC74F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101674550);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  v5(v6, v4);
  uint64_t v7 = (int *)sub_1005057FC(&qword_1016892B0);
  uint64_t v8 = v6 + v7[9];
  uint64_t v9 = sub_1005057FC(&qword_101686808);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v6 + v7[10];
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101689310);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  v12(v6 + v7[11], v11);
  uint64_t v13 = v6 + v7[12];
  uint64_t v14 = sub_1005057FC(&qword_101674450);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = v6 + v7[13];
  uint64_t v16 = sub_1005057FC(qword_1016799F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  swift_bridgeObjectRelease();
  uint64_t v17 = a1 + *(int *)(a2 + 24);
  uint64_t v18 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v20 = v17 + v19[5];
  uint64_t v21 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  uint64_t v22 = v17 + v19[6];
  uint64_t v23 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  id v24 = *(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8);
  v24(v22, v23);
  v24(v17 + v19[7], v23);
  uint64_t v25 = v17 + v19[8];
  uint64_t v26 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  swift_bridgeObjectRelease();
  type metadata accessor for CRLShapeItemCRDTData(0);
  swift_bridgeObjectRelease();
  type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100FC7854(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101674550);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, v10, v6);
  uint64_t v11 = (int *)sub_1005057FC(&qword_1016892B0);
  uint64_t v12 = v11[9];
  uint64_t v13 = v9 + v12;
  uint64_t v14 = v10 + v12;
  uint64_t v15 = sub_1005057FC(&qword_101686808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = v11[10];
  uint64_t v17 = v9 + v16;
  uint64_t v18 = v10 + v16;
  uint64_t v19 = sub_1005057FC((uint64_t *)&unk_101689310);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  v20(v17, v18, v19);
  v20(v9 + v11[11], v10 + v11[11], v19);
  uint64_t v21 = v11[12];
  uint64_t v22 = v9 + v21;
  uint64_t v23 = v10 + v21;
  uint64_t v24 = sub_1005057FC(&qword_101674450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  uint64_t v25 = v11[13];
  uint64_t v26 = v9 + v25;
  uint64_t v27 = v10 + v25;
  uint64_t v28 = sub_1005057FC(qword_1016799F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  *(void *)(v9 + v11[14]) = *(void *)(v10 + v11[14]);
  uint64_t v29 = a3[6];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
  uint64_t v33 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v34 = v33[5];
  uint64_t v35 = v30 + v34;
  uint64_t v36 = v31 + v34;
  uint64_t v37 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  uint64_t v38 = v33[6];
  uint64_t v39 = v30 + v38;
  uint64_t v40 = v31 + v38;
  uint64_t v41 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16);
  v42(v39, v40, v41);
  v42(v30 + v33[7], v31 + v33[7], v41);
  uint64_t v43 = v33[8];
  uint64_t v44 = v30 + v43;
  uint64_t v45 = v31 + v43;
  uint64_t v46 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  *(void *)(v30 + v33[9]) = *(void *)(v31 + v33[9]);
  uint64_t v47 = type metadata accessor for CRLShapeItemCRDTData(0);
  *(void *)(v30 + *(int *)(v47 + 20)) = *(void *)(v31 + *(int *)(v47 + 20));
  uint64_t v48 = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  *(void *)(v30 + *(int *)(v48 + 20)) = *(void *)(v31 + *(int *)(v48 + 20));
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100FC7C4C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101674550);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, v10, v6);
  uint64_t v11 = (int *)sub_1005057FC(&qword_1016892B0);
  uint64_t v12 = v11[9];
  uint64_t v13 = v9 + v12;
  uint64_t v14 = v10 + v12;
  uint64_t v15 = sub_1005057FC(&qword_101686808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = v11[10];
  uint64_t v17 = v9 + v16;
  uint64_t v18 = v10 + v16;
  uint64_t v19 = sub_1005057FC((uint64_t *)&unk_101689310);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24);
  v20(v17, v18, v19);
  v20(v9 + v11[11], v10 + v11[11], v19);
  uint64_t v21 = v11[12];
  uint64_t v22 = v9 + v21;
  uint64_t v23 = v10 + v21;
  uint64_t v24 = sub_1005057FC(&qword_101674450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  uint64_t v25 = v11[13];
  uint64_t v26 = v9 + v25;
  uint64_t v27 = v10 + v25;
  uint64_t v28 = sub_1005057FC(qword_1016799F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
  *(void *)(v9 + v11[14]) = *(void *)(v10 + v11[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[6];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 24))(v30, v31, v32);
  uint64_t v33 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v34 = v33[5];
  uint64_t v35 = v30 + v34;
  uint64_t v36 = v31 + v34;
  uint64_t v37 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 24))(v35, v36, v37);
  uint64_t v38 = v33[6];
  uint64_t v39 = v30 + v38;
  uint64_t v40 = v31 + v38;
  uint64_t v41 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 24);
  v42(v39, v40, v41);
  v42(v30 + v33[7], v31 + v33[7], v41);
  uint64_t v43 = v33[8];
  uint64_t v44 = v30 + v43;
  uint64_t v45 = v31 + v43;
  uint64_t v46 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  *(void *)(v30 + v33[9]) = *(void *)(v31 + v33[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v47 = type metadata accessor for CRLShapeItemCRDTData(0);
  *(void *)(v30 + *(int *)(v47 + 20)) = *(void *)(v31 + *(int *)(v47 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v48 = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  *(void *)(v30 + *(int *)(v48 + 20)) = *(void *)(v31 + *(int *)(v48 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100FC8070(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101674550);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, v10, v6);
  uint64_t v11 = (int *)sub_1005057FC(&qword_1016892B0);
  uint64_t v12 = v11[9];
  uint64_t v13 = v9 + v12;
  uint64_t v14 = v10 + v12;
  uint64_t v15 = sub_1005057FC(&qword_101686808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = v11[10];
  uint64_t v17 = v9 + v16;
  uint64_t v18 = v10 + v16;
  uint64_t v19 = sub_1005057FC((uint64_t *)&unk_101689310);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32);
  v20(v17, v18, v19);
  v20(v9 + v11[11], v10 + v11[11], v19);
  uint64_t v21 = v11[12];
  uint64_t v22 = v9 + v21;
  uint64_t v23 = v10 + v21;
  uint64_t v24 = sub_1005057FC(&qword_101674450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  uint64_t v25 = v11[13];
  uint64_t v26 = v9 + v25;
  uint64_t v27 = v10 + v25;
  uint64_t v28 = sub_1005057FC(qword_1016799F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
  *(void *)(v9 + v11[14]) = *(void *)(v10 + v11[14]);
  uint64_t v29 = a3[6];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
  uint64_t v33 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v34 = v33[5];
  uint64_t v35 = v30 + v34;
  uint64_t v36 = v31 + v34;
  uint64_t v37 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
  uint64_t v38 = v33[6];
  uint64_t v39 = v30 + v38;
  uint64_t v40 = v31 + v38;
  uint64_t v41 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 32);
  v42(v39, v40, v41);
  v42(v30 + v33[7], v31 + v33[7], v41);
  uint64_t v43 = v33[8];
  uint64_t v44 = v30 + v43;
  uint64_t v45 = v31 + v43;
  uint64_t v46 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  *(void *)(v30 + v33[9]) = *(void *)(v31 + v33[9]);
  uint64_t v47 = type metadata accessor for CRLShapeItemCRDTData(0);
  *(void *)(v30 + *(int *)(v47 + 20)) = *(void *)(v31 + *(int *)(v47 + 20));
  uint64_t v48 = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  *(void *)(v30 + *(int *)(v48 + 20)) = *(void *)(v31 + *(int *)(v48 + 20));
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100FC8444(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101674550);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, v10, v6);
  uint64_t v11 = (int *)sub_1005057FC(&qword_1016892B0);
  uint64_t v12 = v11[9];
  uint64_t v13 = v9 + v12;
  uint64_t v14 = v10 + v12;
  uint64_t v15 = sub_1005057FC(&qword_101686808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = v11[10];
  uint64_t v17 = v9 + v16;
  uint64_t v18 = v10 + v16;
  uint64_t v19 = sub_1005057FC((uint64_t *)&unk_101689310);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40);
  v20(v17, v18, v19);
  v20(v9 + v11[11], v10 + v11[11], v19);
  uint64_t v21 = v11[12];
  uint64_t v22 = v9 + v21;
  uint64_t v23 = v10 + v21;
  uint64_t v24 = sub_1005057FC(&qword_101674450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  uint64_t v25 = v11[13];
  uint64_t v26 = v9 + v25;
  uint64_t v27 = v10 + v25;
  uint64_t v28 = sub_1005057FC(qword_1016799F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
  *(void *)(v9 + v11[14]) = *(void *)(v10 + v11[14]);
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[6];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
  uint64_t v33 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v34 = v33[5];
  uint64_t v35 = v30 + v34;
  uint64_t v36 = v31 + v34;
  uint64_t v37 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 40))(v35, v36, v37);
  uint64_t v38 = v33[6];
  uint64_t v39 = v30 + v38;
  uint64_t v40 = v31 + v38;
  uint64_t v41 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 40);
  v42(v39, v40, v41);
  v42(v30 + v33[7], v31 + v33[7], v41);
  uint64_t v43 = v33[8];
  uint64_t v44 = v30 + v43;
  uint64_t v45 = v31 + v43;
  uint64_t v46 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  *(void *)(v30 + v33[9]) = *(void *)(v31 + v33[9]);
  swift_bridgeObjectRelease();
  uint64_t v47 = type metadata accessor for CRLShapeItemCRDTData(0);
  *(void *)(v30 + *(int *)(v47 + 20)) = *(void *)(v31 + *(int *)(v47 + 20));
  swift_bridgeObjectRelease();
  uint64_t v48 = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  *(void *)(v30 + *(int *)(v48 + 20)) = *(void *)(v31 + *(int *)(v48 + 20));
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100FC8840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100FC8854);
}

uint64_t sub_100FC8854(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101674550);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1005057FC(&qword_1016892B0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[7]);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_100FC89BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100FC89D0);
}

uint64_t sub_100FC89D0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1005057FC(&qword_101674550);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_1005057FC(&qword_1016892B0);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t result = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[7]) = (a2 - 1);
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[6];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_1016A53C8);
}

void sub_100FC8B54()
{
  sub_10068E2A0();
  if (v0 <= 0x3F)
  {
    sub_100FC8C64();
    if (v1 <= 0x3F)
    {
      type metadata accessor for CRLFreehandDrawingShapeCRDTData(319);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100FC8C64()
{
  if (!qword_1016A53D8)
  {
    type metadata accessor for CRLShapeItemParentAffinity(255);
    sub_100FC8D40((unint64_t *)&unk_1016A53E0, (void (*)(uint64_t))type metadata accessor for CRLShapeItemParentAffinity);
    unint64_t v0 = type metadata accessor for CRLBoardItemCommonAbstractCRDTData();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1016A53D8);
    }
  }
}

uint64_t sub_100FC8CF8()
{
  return sub_100FC8D40(&qword_1016A5418, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
}

uint64_t sub_100FC8D40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100FC8D88()
{
  return sub_100FC8D40(&qword_1016A5420, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
}

uint64_t sub_100FC8DD0()
{
  return sub_100FC8D40(&qword_1016A5428, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
}

uint64_t sub_100FC8E18()
{
  return sub_100523288(&qword_1016A5430, &qword_1016A5438);
}

uint64_t sub_100FC8E54()
{
  return sub_100FC8D40((unint64_t *)&unk_10169A230, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
}

uint64_t sub_100FC8E9C()
{
  return sub_100FC8D40(&qword_1016A5440, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
}

uint64_t sub_100FC8EE4()
{
  return sub_100523288(&qword_101679AC0, &qword_101674550);
}

uint64_t sub_100FC8F20()
{
  return sub_100523288(&qword_10168B230, &qword_1016892B0);
}

uint64_t sub_100FC8F5C()
{
  return sub_100FC8D40(&qword_101676A38, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);
}

uint64_t sub_100FC8FA4()
{
  return sub_100FC8D40(&qword_1016A5448, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
}

uint64_t sub_100FC8FEC()
{
  return sub_100FC8D40(&qword_1016A5450, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);
}

uint64_t sub_100FC9034()
{
  return sub_100FC8D40(&qword_1016A5458, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);
}

uint64_t sub_100FC907C()
{
  return sub_100FC8D40(&qword_10168AB78, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);
}

uint64_t sub_100FC90C4()
{
  return sub_100523288(&qword_1016A5460, &qword_1016A5468);
}

uint64_t sub_100FC9100()
{
  return sub_100FC8D40(&qword_10168B260, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);
}

uint64_t sub_100FC9148()
{
  return sub_100FC8D40(&qword_1016A5470, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);
}

uint64_t sub_100FC9190()
{
  return sub_100FC8D40(&qword_10168B268, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);
}

uint64_t sub_100FC91D8()
{
  return sub_100FC8D40(&qword_1016A5478, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);
}

uint64_t sub_100FC9220(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8, v9);
  uint64_t v11 = &v26[-v10];
  __chkstk_darwin(v12, v13);
  uint64_t v15 = &v26[-v14];
  __chkstk_darwin(v16, v17);
  uint64_t v19 = &v26[-v18];
  type metadata accessor for UUID();
  sub_100FC8D40((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  char v20 = static CROrderedSet.== infix(_:_:)();
  sub_100FC98A0(a1, (uint64_t)v19, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_100FC98A0(a2, (uint64_t)v15, type metadata accessor for CRLFreehandDrawingCRDTData);
  if ((v20 & 1) == 0)
  {
    sub_100FC9908((uint64_t)v15, type metadata accessor for CRLFreehandDrawingCRDTData);
    sub_100FC9908((uint64_t)v19, type metadata accessor for CRLFreehandDrawingCRDTData);
    sub_100FC98A0(a1, (uint64_t)v11, type metadata accessor for CRLFreehandDrawingCRDTData);
    sub_100FC98A0(a2, (uint64_t)v7, type metadata accessor for CRLFreehandDrawingCRDTData);
    goto LABEL_5;
  }
  sub_1005057FC((uint64_t *)&unk_101689310);
  CRRegister.wrappedValue.getter();
  int v21 = v26[13];
  CRRegister.wrappedValue.getter();
  int v22 = v26[12];
  sub_100FC9908((uint64_t)v15, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_100FC9908((uint64_t)v19, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_100FC98A0(a1, (uint64_t)v11, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_100FC98A0(a2, (uint64_t)v7, type metadata accessor for CRLFreehandDrawingCRDTData);
  if (v21 != v22)
  {
LABEL_5:
    char v24 = 0;
    goto LABEL_6;
  }
  sub_1005057FC((uint64_t *)&unk_101689310);
  CRRegister.wrappedValue.getter();
  char v23 = v26[15];
  CRRegister.wrappedValue.getter();
  char v24 = v23 ^ v26[14] ^ 1;
LABEL_6:
  sub_100FC9908((uint64_t)v7, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_100FC9908((uint64_t)v11, type metadata accessor for CRLFreehandDrawingCRDTData);
  return v24 & 1;
}

BOOL sub_100FC9530(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(0);
  __chkstk_darwin(v37, v4);
  uint64_t v39 = (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v38 = (uint64_t)&v36 - v8;
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v36 - v11;
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  int v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v36 - v24;
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  CRRegister.wrappedValue.getter();
  char v26 = static UUID.== infix(_:_:)();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v18 + 8);
  v27(v21, v17);
  v27(v25, v17);
  sub_100FC98A0(a1, (uint64_t)v16, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
  sub_100FC98A0(a2, (uint64_t)v12, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
  if ((v26 & 1) == 0)
  {
    sub_100FC9908((uint64_t)v12, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
    sub_100FC9908((uint64_t)v16, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
    uint64_t v30 = v38;
    sub_100FC98A0(a1, v38, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
    uint64_t v34 = a2;
    uint64_t v32 = v39;
    sub_100FC98A0(v34, v39, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
    goto LABEL_5;
  }
  uint64_t v28 = v37;
  char v29 = sub_100FC1D04((uint64_t)&v16[*(int *)(v37 + 20)], (uint64_t)&v12[*(int *)(v37 + 20)]);
  sub_100FC9908((uint64_t)v12, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
  sub_100FC9908((uint64_t)v16, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
  uint64_t v30 = v38;
  sub_100FC98A0(a1, v38, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
  uint64_t v31 = a2;
  uint64_t v32 = v39;
  sub_100FC98A0(v31, v39, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
  if ((v29 & 1) == 0)
  {
LABEL_5:
    BOOL v33 = 0;
    goto LABEL_6;
  }
  BOOL v33 = sub_100E23AA8(v30 + *(int *)(v28 + 24), v32 + *(int *)(v28 + 24));
LABEL_6:
  sub_100FC9908(v32, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
  sub_100FC9908(v30, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
  return v33;
}

uint64_t sub_100FC98A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100FC9908(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100FC9968(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLContainerItemCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100FC99D4()
{
  uint64_t v0 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0], v5);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Locale();
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v15 = type metadata accessor for TypeDisplayRepresentation();
  sub_100568B28(v15, qword_10171CE50);
  sub_100556B74(v15, (uint64_t)qword_10171CE50);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v4 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v17[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v3, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

unint64_t sub_100FC9CBC()
{
  uint64_t v0 = sub_1005057FC(&qword_10167D138);
  __chkstk_darwin(v0 - 8, v1);
  long long v91 = (char *)v71 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v3 - 8, v4);
  long long v83 = (char *)v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v86 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Locale();
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (char *)v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for LocalizedStringResource();
  uint64_t v92 = *(void *)(v88 - 8);
  __chkstk_darwin(v88, v19);
  int v21 = (char *)v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005057FC(&qword_1016A54F8);
  uint64_t v22 = sub_1005057FC(&qword_10168D0A0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v90 = *(void *)(v23 + 72);
  uint64_t v24 = v22 - 8;
  uint64_t v85 = v22 - 8;
  unint64_t v25 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v73 = 8 * v90;
  uint64_t v26 = swift_allocObject();
  uint64_t v74 = v26;
  *(_OWORD *)(v26 + 16) = xmmword_1011ABAB0;
  uint64_t v72 = v26 + v25 + *(int *)(v24 + 56);
  *(unsigned char *)(v26 + v25) = 0;
  unint64_t v27 = v26 + v25;
  unint64_t v82 = v26 + v25;
  id v75 = v18;
  String.LocalizationValue.init(stringLiteral:)();
  long long v84 = v14;
  static Locale.current.getter();
  uint64_t v28 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  char v29 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  uint64_t v89 = v7 + 104;
  long long v76 = v10;
  unsigned int v78 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v29(v10, enum case for LocalizedStringResource.BundleDescription.main(_:), v6);
  uint64_t v30 = v29;
  long long v77 = v29;
  uint64_t v31 = v21;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56);
  v92 += 56;
  long long v81 = v32;
  BOOL v33 = v83;
  uint64_t v34 = v88;
  v32(v83, 1, 1, v88);
  uint64_t v79 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v35 = *(void *)(v79 - 8);
  long long v87 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
  uint64_t v80 = v35 + 56;
  uint64_t v36 = v91;
  v87(v91, 1, 1, v79);
  uint64_t v37 = v33;
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v38 = v90;
  uint64_t v72 = v27 + v90 + *(int *)(v85 + 56);
  *(unsigned char *)(v27 + v90) = 1;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v39 = v76;
  v30(v76, v28, v86);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v40 = v81;
  v81(v37, 1, 1, v34);
  v87(v36, 1, 1, v79);
  uint64_t v41 = v31;
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v72 = 2 * v38;
  unint64_t v42 = v82;
  uint64_t v43 = (unsigned char *)(v82 + 2 * v38);
  void v71[2] = &v43[*(int *)(v85 + 56)];
  *uint64_t v43 = 2;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v44 = v78;
  uint64_t v45 = v86;
  v77(v39, v78, v86);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v40(v37, 1, 1, v88);
  uint64_t v46 = v79;
  v87(v91, 1, 1, v79);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v47 = (unsigned char *)(v42 + v72 + v90);
  uint64_t v48 = v85;
  uint64_t v72 = (uint64_t)&v47[*(int *)(v85 + 56)];
  *uint64_t v47 = 3;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v49 = v77;
  v77(v76, v44, v45);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v50 = v88;
  v81(v83, 1, 1, v88);
  uint64_t v51 = v46;
  BOOL v52 = v87;
  v87(v91, 1, 1, v51);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v53 = 4 * v90;
  unint64_t v54 = v82;
  uint64_t v72 = v82 + 4 * v90 + *(int *)(v48 + 56);
  *(unsigned char *)(v82 + 4 * v90) = 4;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  int v55 = v76;
  v49(v76, v78, v86);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v56 = v81;
  v81(v83, 1, 1, v50);
  v52(v91, 1, 1, v79);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v57 = (unsigned char *)(v54 + v53 + v90);
  uint64_t v58 = v85;
  uint64_t v72 = (uint64_t)&v57[*(int *)(v85 + 56)];
  *uint64_t v57 = 5;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  char v59 = v55;
  uint64_t v60 = v78;
  uint64_t v61 = v86;
  uint64_t v62 = v77;
  v77(v59, v78, v86);
  v71[1] = v41;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v63 = v83;
  v56(v83, 1, 1, v88);
  uint64_t v64 = v79;
  uint64_t v65 = v87;
  v87(v91, 1, 1, v79);
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t v66 = (unsigned char *)(v82 + 6 * v90);
  uint64_t v72 = (uint64_t)&v66[*(int *)(v58 + 56)];
  *unint64_t v66 = 6;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  BOOL v67 = v76;
  v62(v76, v60, v61);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v68 = v81;
  v81(v63, 1, 1, v88);
  uint64_t v69 = v91;
  v65(v91, 1, 1, v64);
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v82 + v73 - v90) = 7;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v77(v67, v78, v86);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v68(v63, 1, 1, v88);
  v87(v69, 1, 1, v64);
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t result = sub_100A3D034(v74);
  qword_10171CE68 = result;
  return result;
}

uint64_t sub_100FCA8DC(unsigned __int8 *a1, char *a2)
{
  return sub_10094F428(*a1, *a2);
}

unint64_t sub_100FCA8EC()
{
  unint64_t result = qword_1016A5490;
  if (!qword_1016A5490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5490);
  }
  return result;
}

Swift::Int sub_100FCA940()
{
  return sub_10095092C();
}

uint64_t sub_100FCA94C()
{
  return sub_1009500E8();
}

Swift::Int sub_100FCA954()
{
  return sub_10095092C();
}

unint64_t sub_100FCA95C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100FCB380(*a1);
  *a2 = result;
  return result;
}

void sub_100FCA98C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x6B63616C62;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1702194274;
      goto LABEL_3;
    case 2:
      *a1 = 2036429415;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 0x6E65657267;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 0x65676E61726FLL;
      a1[1] = 0xE600000000000000;
      break;
    case 5:
      *a1 = 0x656C70727570;
      a1[1] = 0xE600000000000000;
      break;
    case 6:
      *a1 = 6579570;
      a1[1] = 0xE300000000000000;
      break;
    case 7:
      *a1 = 0x776F6C6C6579;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_100FCAA7C()
{
  unint64_t result = qword_1016A5498;
  if (!qword_1016A5498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5498);
  }
  return result;
}

unint64_t sub_100FCAAD4()
{
  unint64_t result = qword_1016A54A0;
  if (!qword_1016A54A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A54A0);
  }
  return result;
}

unint64_t sub_100FCAB2C()
{
  unint64_t result = qword_1016A54A8;
  if (!qword_1016A54A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A54A8);
  }
  return result;
}

unint64_t sub_100FCAB84()
{
  unint64_t result = qword_1016A54B0;
  if (!qword_1016A54B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A54B0);
  }
  return result;
}

unint64_t sub_100FCABDC()
{
  unint64_t result = qword_1016A54B8;
  if (!qword_1016A54B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A54B8);
  }
  return result;
}

unint64_t sub_100FCAC34()
{
  unint64_t result = qword_1016A54C0;
  if (!qword_1016A54C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A54C0);
  }
  return result;
}

unint64_t sub_100FCAC8C()
{
  unint64_t result = qword_1016A54C8;
  if (!qword_1016A54C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A54C8);
  }
  return result;
}

uint64_t sub_100FCACE0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1016702A8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_100556B74(v2, (uint64_t)qword_10171CE50);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100FCAD88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100FCADD8(uint64_t a1)
{
  unint64_t v2 = sub_100F762D8();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100FCAE28()
{
  unint64_t result = qword_1016A54D0;
  if (!qword_1016A54D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A54D0);
  }
  return result;
}

unint64_t sub_100FCAE80()
{
  unint64_t result = qword_1016A54D8;
  if (!qword_1016A54D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A54D8);
  }
  return result;
}

unint64_t sub_100FCAED8()
{
  unint64_t result = qword_1016A54E0;
  if (!qword_1016A54E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A54E0);
  }
  return result;
}

uint64_t sub_100FCAF2C()
{
  if (qword_1016702B0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_100FCAF88(uint64_t a1)
{
  unint64_t v2 = sub_100FCAC8C();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100FCAFD8()
{
  unint64_t result = qword_1016A54E8;
  if (!qword_1016A54E8)
  {
    sub_100522D34(&qword_1016A54F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A54E8);
  }
  return result;
}

void sub_100FCB034(void *a1@<X8>)
{
  *a1 = &off_101502CF8;
}

unsigned char *storeEnumTagSinglePayload for CRLColorEntity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100FCB110);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLColorEntity()
{
  return &type metadata for CRLColorEntity;
}

uint64_t sub_100FCB148(char a1)
{
  switch(a1)
  {
    case 1:
      if (qword_10166F190 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_10171A9A0;
      break;
    case 2:
      if (qword_10166F140 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_10171A950;
      break;
    case 3:
      if (qword_10166F180 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_10171A990;
      break;
    case 4:
      if (qword_10166F170 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_10171A980;
      break;
    case 5:
      if (qword_10166F160 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_10171A970;
      break;
    case 6:
      if (qword_10166F168 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_10171A978;
      break;
    case 7:
      if (qword_10166F178 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_10171A988;
      break;
    default:
      if (qword_10166F148 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_10171A958;
      break;
  }
  return *v1;
}

unint64_t sub_100FCB380(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101505170, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 8) {
    return 8;
  }
  else {
    return v3;
  }
}

char *sub_100FCB40C(uint64_t a1)
{
  v1[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_canCenter] = 1;
  v1[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_isVertical] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_selectionPath] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_icc] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_hudHeight] = 0x404B800000000000;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for CRLWPEditMenuController();
  unint64_t v3 = [(char *)[super init]];
  unsigned int v4 = *(void **)&v3[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_icc];
  *(void *)&v3[OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_icc] = a1;

  return v3;
}

id sub_100FCB4DC(void *a1)
{
  Swift::String v2 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_selectionPath);
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_selectionPath) = a1;
  id v3 = a1;

  id result = *(id *)(v1 + OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_icc);
  if (result)
  {
    id result = [result layerHost];
    if (result)
    {
      uint64_t v5 = result;
      if ([result respondsToSelector:"asUIKitHost"])
      {
        id v6 = [v5 asUIKitHost];
        id result = (id)swift_unknownObjectRelease();
        if (!v6) {
          return result;
        }
        [v6 showEditUIForSelectionPath:v3];
      }
      return (id)swift_unknownObjectRelease();
    }
  }
  return result;
}

id sub_100FCB628()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_selectionPath);
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_selectionPath) = 0;

  id result = *(id *)(v0 + OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_icc);
  if (result)
  {
    id result = [result layerHost];
    if (result)
    {
      id v3 = result;
      if ([result respondsToSelector:"asUIKitHost"])
      {
        id v4 = [v3 asUIKitHost];
        id result = (id)swift_unknownObjectRelease();
        if (!v4) {
          return result;
        }
        [v4 hideEditMenu];
      }
      return (id)swift_unknownObjectRelease();
    }
  }
  return result;
}

double sub_100FCB73C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_icc;
  id v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_icc);
  if (!v4) {
    return CGRectNull.origin.x;
  }
  id v6 = v4;
  id v7 = [v6 selectionModelTranslator];
  if (!v7
    || (uint64_t v8 = v7,
        id v9 = [v7 infoForSelectionPath:a1],
        v8,
        !v9))
  {
LABEL_17:

    return CGRectNull.origin.x;
  }
  type metadata accessor for CRLWPStorage();
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10
    || (uint64_t v11 = v10, (v12 = *(void **)(v2 + v3)) == 0)
    || (id v13 = [v12 layoutForInfo:v11]) == 0)
  {
LABEL_16:
    swift_unknownObjectRelease();
    goto LABEL_17;
  }
  uint64_t v14 = v13;
  type metadata accessor for CRLWPLayout();
  uint64_t v15 = swift_dynamicCastClass();
  if (!v15)
  {

    goto LABEL_16;
  }
  uint64_t v16 = (char *)v15;
  sub_1007ADDEC();
  id v17 = [a1 mostSpecificSelectionOfClass:swift_getObjCClassFromMetadata()];
  if (!v17)
  {
LABEL_21:
    swift_unknownObjectRelease();

    goto LABEL_17;
  }
  uint64_t v18 = v17;
  self;
  uint64_t v19 = (void *)swift_dynamicCastObjCClass();
  if (!v19)
  {

    goto LABEL_21;
  }
  id v20 = [v19 superRange];
  uint64_t v22 = v21;
  id v23 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
  uint64_t v24 = (void *)sub_1006CC83C((uint64_t)v20, v22);
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  id v25 = (id)qword_10171A478;
  uint64_t v26 = v24;
  sub_1006E8D20(v16, v26, v46);

  [v16 rectInRoot:v46[0], v46[1], v46[2], v46[3]];
  [v6 convertUnscaledToBoundsRect:];
  CGFloat v28 = v27;
  CGFloat v30 = v29;
  CGFloat v32 = v31;
  CGFloat v34 = v33;
  [v6 visibleBoundsRect];
  v52.origin.double x = v35;
  v52.origin.CGFloat y = v36;
  v52.size.double width = v37;
  v52.size.double height = v38;
  v47.origin.double x = v28;
  v47.origin.CGFloat y = v30;
  v47.size.double width = v32;
  v47.size.double height = v34;
  CGRect v48 = CGRectIntersection(v47, v52);
  double x = v48.origin.x;
  CGFloat y = v48.origin.y;
  double width = v48.size.width;
  double height = v48.size.height;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_canCenter) == 1)
  {
    CGFloat MidX = CGRectGetMidX(v48);
    v49.origin.double x = x;
    v49.origin.CGFloat y = y;
    v49.size.double width = width;
    v49.size.double height = height;
    v50.origin.CGFloat y = CGRectGetMinY(v49);
    v50.size.double width = 0.0;
    v50.origin.double x = MidX;
    v50.size.double height = height;
    CGRect v51 = CGRectInset(v50, -0.5, -0.5);
    double x = v51.origin.x;
    CGFloat y = v51.origin.y;
    double width = v51.size.width;
    double height = v51.size.height;
  }
  double v44 = sub_100FCBB7C(*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform23CRLWPEditMenuController_isVertical), x, y, width, height);

  swift_unknownObjectRelease();
  return v44;
}

id sub_100FCBAD8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPEditMenuController();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLWPEditMenuController()
{
  return self;
}

double sub_100FCBB7C(char a1, double a2, CGFloat y, double a4, double a5)
{
  double x = a2;
  if (a1) {
    double Width = CGRectGetWidth(*(CGRect *)&a2);
  }
  else {
    double Width = CGRectGetHeight(*(CGRect *)&a2);
  }
  double height = a5;
  double v11 = a4;
  if (sub_100FCBC24(Width))
  {
    double x = CGRectNull.origin.x;
    CGFloat y = CGRectNull.origin.y;
    double v11 = CGRectNull.size.width;
    double height = CGRectNull.size.height;
  }
  v13.origin.double x = x;
  v13.origin.CGFloat y = y;
  v13.size.double width = v11;
  v13.size.double height = height;
  CGRectIsNull(v13);
  return x;
}

BOOL sub_100FCBC24(double a1)
{
  return fabs(a1) < 0.00999999978 || a1 == 0.0;
}

char *sub_100FCBC44()
{
  *(void *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_alignment] = 4;
  uint64_t v1 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_decimalTab];
  *uint64_t v1 = 46;
  v1[1] = 0xE100000000000000;
  *(_DWORD *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_defaultTabStops] = 1108344832;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_paragraphFill] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_firstLineIndent] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_followingParagraphStyle] = 0;
  v0[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_hyphenate] = 1;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_initialListStyle] = 0;
  v0[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_keepLinesTogether] = 0;
  v0[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_keepWithNext] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_leftIndent] = 0;
  uint64_t v2 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_lineSpacing;
  id v3 = objc_allocWithZone((Class)CRLWPLineSpacing);
  id v4 = v0;
  *(void *)&v0[v2] = [v3 init];
  *(void *)&v4[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_outlineLevel] = -1;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_outlineStyleType] = 0;
  v4[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_pageBreakBefore] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_paragraphBorders] = 0;
  uint64_t v5 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_paragraphRuleOffset;
  *(void *)&v4[v5] = [objc_allocWithZone((Class)CRLWPRuleOffset) init];
  *(_DWORD *)&v4[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_paragraphRuleWidth] = 1065353216;
  *(_DWORD *)&v4[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_rightIndent] = 0;
  *(_DWORD *)&v4[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_spaceBefore] = 0;
  *(_DWORD *)&v4[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_spaceAfter] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_paragraphStroke] = 0;
  uint64_t v6 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_tabs;
  *(void *)&v4[v6] = [objc_allocWithZone((Class)CRLWPTabs) init];
  v4[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_widowControl] = 1;

  v25.receiver = v4;
  v25.super_class = (Class)type metadata accessor for CRLWPParagraphStyle();
  [super init];
  uint64_t v8 = &v7[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_baselineShift];
  *(_DWORD *)uint64_t v8 = 0;
  v8[4] = 0;
  v7[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_bold] = 0;
  id v9 = &v7[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalization];
  *(void *)id v9 = 0;
  v9[8] = 0;
  v7[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalizationUsesLinguistics] = 0;
  uint64_t v10 = self;
  double v11 = v7;
  id v12 = [v10 blackColor];
  CGRect v13 = *(void **)&v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill];
  *(void *)&v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill] = v12;

  v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFillShouldFillTextContainer] = 0;
  *(_OWORD *)&v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName] = xmmword_1011C14A0;
  swift_bridgeObjectRelease();
  *(void *)&v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontFeatures] = 0;

  swift_bridgeObjectRelease();
  uint64_t v14 = &v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize];
  *(_DWORD *)uint64_t v14 = 1094713344;
  v14[4] = 0;
  v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_isNamedPointSize] = 0;
  v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_italic] = 0;
  uint64_t v15 = &v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_kerning];
  *(_DWORD *)uint64_t v15 = 0;
  v15[4] = 0;
  uint64_t v16 = &v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_ligatures];
  *(_DWORD *)uint64_t v16 = 0;
  v16[4] = 0;
  id v17 = &v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough];
  *(void *)id v17 = 0;
  v17[8] = 1;
  uint64_t v18 = &v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethruWidth];
  *(_DWORD *)uint64_t v18 = 1065353216;
  v18[4] = 0;
  uint64_t v19 = &v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_superscript];
  *(void *)uint64_t v19 = 0;
  v19[8] = 0;
  id v20 = &v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_tracking];
  *(_DWORD *)id v20 = 0;
  v20[4] = 0;
  uint64_t v21 = &v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline];
  *(void *)uint64_t v21 = 0;
  v21[8] = 1;
  uint64_t v22 = &v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineWidth];
  *(_DWORD *)uint64_t v22 = 1065353216;
  v22[4] = 0;
  id v23 = &v11[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_writingDirection];
  *(void *)id v23 = -1;
  v23[8] = 0;
  return v11;
}

id sub_100FCC054(uint64_t a1)
{
  switch(a1)
  {
    case 29:
      uint64_t v2 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_alignment;
      goto LABEL_24;
    case 30:
      swift_bridgeObjectRetain();
      NSString v4 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      goto LABEL_39;
    case 31:
      uint64_t v5 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_defaultTabStops;
      goto LABEL_31;
    case 32:
      NSString v4 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_paragraphFill);
      if (!v4) {
        goto LABEL_39;
      }
      goto LABEL_35;
    case 33:
      uint64_t v5 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_firstLineIndent;
      goto LABEL_31;
    case 34:
      NSString v4 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_followingParagraphStyle);
      if (!v4) {
        goto LABEL_39;
      }
      goto LABEL_35;
    case 35:
      uint64_t v6 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_hyphenate;
      goto LABEL_37;
    case 36:
      NSString v4 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_initialListStyle);
      if (!v4) {
        goto LABEL_39;
      }
      goto LABEL_35;
    case 37:
      uint64_t v6 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_keepLinesTogether;
      goto LABEL_37;
    case 38:
      uint64_t v6 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_keepWithNext;
      goto LABEL_37;
    case 39:
      uint64_t v5 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_leftIndent;
      goto LABEL_31;
    case 40:
      NSString v4 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_lineSpacing);
      id v7 = v4;
      goto LABEL_39;
    case 41:
      uint64_t v2 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_outlineLevel;
      goto LABEL_24;
    case 42:
      uint64_t v2 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_outlineStyleType;
      goto LABEL_24;
    case 43:
      uint64_t v6 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_pageBreakBefore;
      goto LABEL_37;
    case 44:
      uint64_t v2 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_paragraphBorders;
LABEL_24:
      id v8 = [objc_allocWithZone((Class)NSNumber) initWithInteger:*(void *)(v1 + v2)];
      goto LABEL_38;
    case 45:
      NSString v4 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_paragraphRuleOffset);
      if (!v4) {
        goto LABEL_39;
      }
      goto LABEL_35;
    case 46:
      uint64_t v5 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_paragraphRuleWidth;
      goto LABEL_31;
    case 47:
      uint64_t v5 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_rightIndent;
      goto LABEL_31;
    case 48:
      uint64_t v5 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_spaceAfter;
      goto LABEL_31;
    case 49:
      uint64_t v5 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_spaceBefore;
LABEL_31:
      int v9 = *(_DWORD *)(v1 + v5);
      id v10 = objc_allocWithZone((Class)NSNumber);
      LODWORD(v11) = v9;
      id v8 = [v10 initWithFloat:v11];
      goto LABEL_38;
    case 50:
      NSString v4 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_paragraphStroke);
      if (!v4) {
        goto LABEL_39;
      }
      goto LABEL_35;
    case 51:
      NSString v4 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_tabs);
      if (v4) {
LABEL_35:
      }
        id v12 = v4;
      goto LABEL_39;
    case 52:
      uint64_t v6 = OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_widowControl;
LABEL_37:
      id v8 = [objc_allocWithZone((Class)NSNumber) initWithBool:*(unsigned __int8 *)(v1 + v6)];
      goto LABEL_38;
    case 53:
      CGRect v13 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill);
      if (!v13 || (id v8 = [v13 referenceColor]) == 0) {
        id v8 = [self blackColor];
      }
LABEL_38:
      NSString v4 = v8;
LABEL_39:
      id result = v4;
      break;
    default:
      id result = sub_100BCA2CC(a1);
      break;
  }
  return result;
}

void sub_100FCC3AC()
{
  swift_bridgeObjectRelease();

  uint64_t v1 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_followingParagraphStyle);
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_followingParagraphStyle) = 0;
  if (v1)
  {
    while (1)
    {
      NSString v4 = v1;
      if (!swift_isUniquelyReferenced()) {
        break;
      }
      uint64_t v2 = *(char **)&v4[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_followingParagraphStyle];
      id v3 = v2;

      uint64_t v1 = v2;
      if (!v2) {
        goto LABEL_6;
      }
    }
    uint64_t v1 = v4;
  }
LABEL_6:
}

id sub_100FCC49C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPParagraphStyle();
  [super dealloc];
}

uint64_t type metadata accessor for CRLWPParagraphStyle()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for CRLWPShapeVerticalAlignmentData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *id result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100FCC6B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLWPShapeVerticalAlignmentData()
{
  return &type metadata for CRLWPShapeVerticalAlignmentData;
}

uint64_t sub_100FCC6EC()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100FCC74C()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100FCC79C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100FCCA3C();
  unint64_t v7 = sub_100FCC9E8();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100FCC80C()
{
  return CRValue<>.init(from:)();
}

uint64_t sub_100FCC878()
{
  return CRValue<>.encode(to:)();
}

uint64_t sub_100FCC8D4(uint64_t a1)
{
  unint64_t v2 = sub_100FCCA3C();
  unint64_t v3 = sub_1005DF574();

  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for Int);
}

unint64_t sub_100FCC938()
{
  unint64_t result = qword_1016A5638;
  if (!qword_1016A5638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5638);
  }
  return result;
}

unint64_t sub_100FCC990()
{
  unint64_t result = qword_1016A5640;
  if (!qword_1016A5640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5640);
  }
  return result;
}

unint64_t sub_100FCC9E8()
{
  unint64_t result = qword_1016A5648;
  if (!qword_1016A5648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5648);
  }
  return result;
}

unint64_t sub_100FCCA3C()
{
  unint64_t result = qword_1016A5650;
  if (!qword_1016A5650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5650);
  }
  return result;
}

id sub_100FCCB04()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLGenerativePlaygroundAvailabilityHelper();
  [super dealloc];
}

uint64_t type metadata accessor for CRLGenerativePlaygroundAvailabilityHelper()
{
  return self;
}

uint64_t sub_100FCCB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  unint64_t v36 = a6;
  uint64_t v37 = a2;
  uint64_t v11 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC(&qword_101691F20);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v19 = *(void *)(v6 + 120);
  uint64_t v20 = *(void *)(v19 + 16);
  uint64_t v39 = a4;
  uint64_t v40 = a5;
  uint64_t v38 = a3;
  uint64_t v42 = a1;
  if (v20 && (unint64_t v21 = sub_1009563EC(a1), (v22 & 1) != 0))
  {
    unint64_t v23 = v21;
    uint64_t v24 = *(void *)(v19 + 56);
    uint64_t v25 = type metadata accessor for CRLBoardEntity();
    uint64_t v26 = *(void *)(v25 - 8);
    CGFloat v35 = v14;
    uint64_t v27 = v26;
    sub_100FCD458(v24 + *(void *)(v26 + 72) * v23, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v18, 0, 1, v25);
    uint64_t v14 = v35;
  }
  else
  {
    uint64_t v25 = type metadata accessor for CRLBoardEntity();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v18, 1, 1, v25);
  }
  swift_endAccess();
  type metadata accessor for CRLBoardEntity();
  CGFloat v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48);
  int v29 = v28(v18, 1, v25);
  sub_100FCCF44((uint64_t)v18);
  if (v29 == 1)
  {
    type metadata accessor for CRLBoardEntityStore.BoardEntityStoreError();
    sub_100EB2830();
    swift_allocError();
    sub_100FCD458(v42, v30, type metadata accessor for CRLBoardIdentifier);
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  else
  {
    sub_100FCD458(v42, (uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
    swift_beginAccess();
    CGFloat v32 = sub_100F474B0(v41, (uint64_t)v14);
    if (!v28(v33, 1, v25)) {
      sub_1007DCD2C(v37, v38, v39, v40, v36);
    }
    ((void (*)(void *, void))v32)(v41, 0);
    swift_endAccess();
    return sub_100FCD5A0((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
  }
}

uint64_t sub_100FCCEE0()
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for CRLBoardEntityStore()
{
  return self;
}

uint64_t sub_100FCCF44(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101691F20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for CRLBoardEntityStore.BoardEntityStoreError()
{
  uint64_t result = qword_1016A57A0;
  if (!qword_1016A57A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100FCCFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v46 = a4;
  uint64_t v47 = a2;
  uint64_t v7 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v44 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v12 = __chkstk_darwin(v10 - 8, v11);
  uint64_t v41 = (uint64_t)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v14);
  uint64_t v45 = (uint64_t)&v40 - v15;
  uint64_t v16 = sub_1005057FC(&qword_101691F20);
  uint64_t v18 = __chkstk_darwin(v16 - 8, v17);
  uint64_t v42 = (uint64_t)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v20);
  char v22 = (char *)&v40 - v21;
  uint64_t v40 = v4 + 120;
  swift_beginAccess();
  uint64_t v43 = v4;
  uint64_t v23 = *(void *)(v4 + 120);
  if (*(void *)(v23 + 16) && (unint64_t v24 = sub_1009563EC(a1), (v25 & 1) != 0))
  {
    unint64_t v26 = v24;
    uint64_t v27 = *(void *)(v23 + 56);
    uint64_t v28 = type metadata accessor for CRLBoardEntity();
    uint64_t v29 = *(void *)(v28 - 8);
    sub_100FCD458(v27 + *(void *)(v29 + 72) * v26, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v22, 0, 1, v28);
  }
  else
  {
    uint64_t v28 = type metadata accessor for CRLBoardEntity();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v22, 1, 1, v28);
  }
  swift_endAccess();
  type metadata accessor for CRLBoardEntity();
  uint64_t v30 = *(void *)(v28 - 8);
  int v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v22, 1, v28);
  sub_100FCCF44((uint64_t)v22);
  if (v31 == 1)
  {
    uint64_t v32 = v45;
    sub_100FCD458(a1, v45, type metadata accessor for CRLBoardIdentifier);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    uint64_t v34 = a1;
    uint64_t v35 = v41;
    sub_100FCD458(v34, v41, type metadata accessor for CRLBoardIdentifier);
    uint64_t v36 = v44;
    sub_100FCD458(v46, v44, type metadata accessor for CRLBoardViewModelMetadata);
    swift_bridgeObjectRetain();
    uint64_t v37 = v42;
    sub_1007DC958(Strong, v35, v47, a3, v36, 0, 0xF000000000000000, v42);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v37, 0, 1, v28);
    swift_beginAccess();
    sub_10057E0F0(v37, v32);
    return swift_endAccess();
  }
  else
  {
    type metadata accessor for CRLBoardEntityStore.BoardEntityStoreError();
    sub_100EB2830();
    swift_allocError();
    sub_100FCD458(a1, v39, type metadata accessor for CRLBoardIdentifier);
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
}

uint64_t sub_100FCD458(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100FCD4C0(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100FCD5A0(a1, (uint64_t (*)(void))type metadata accessor for CRLBoardEntityStore.BoardEntityStoreError);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    uint64_t v5 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v6 = (void *)(a1 + v5);
    uint64_t v7 = (void *)(a2 + v5);
    *uint64_t v6 = *v7;
    v6[1] = v7[1];
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100FCD5A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100FCD600(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100FCD5A0(a1, (uint64_t (*)(void))type metadata accessor for CRLBoardEntityStore.BoardEntityStoreError);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    uint64_t v5 = type metadata accessor for CRLBoardIdentifierStorage(0);
    *(_OWORD *)(a1 + *(int *)(v5 + 20)) = *(_OWORD *)(a2 + *(int *)(v5 + 20));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unint64_t sub_100FCD6D0()
{
  unint64_t result = qword_1016A57D8;
  if (!qword_1016A57D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A57D8);
  }
  return result;
}

uint64_t sub_100FCD728@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v1 = type metadata accessor for InputConnectionBehavior();
  uint64_t v35 = *(void *)(v1 - 8);
  uint64_t v36 = v1;
  __chkstk_darwin(v1, v2);
  uint64_t v34 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v33 - 8);
  __chkstk_darwin(v33, v5);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Locale();
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v15 = sub_1005057FC(&qword_101673B38);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  char v22 = (char *)&v32 - v21;
  uint64_t v23 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v23 - 8, v24);
  unint64_t v26 = (char *)&v32 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1005057FC(&qword_1016A5808);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v26, 1, 1, v12);
  uint64_t v40 = 0;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v33);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  IntentDialog.init(_:)();
  uint64_t v27 = type metadata accessor for IntentDialog();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
  v28(v22, 0, 1, v27);
  v28(v18, 1, 1, v27);
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v34, enum case for InputConnectionBehavior.default(_:), v36);
  sub_10057B450();
  uint64_t v29 = IntentParameter<>.init(description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  uint64_t v30 = v37;
  uint64_t *v37 = v29;
  sub_1005057FC(&qword_101673B50);
  unint64_t v38 = 0xD00000000000001FLL;
  unint64_t v39 = 0x800000010123B260;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  v30[1] = result;
  v30[5] = (uint64_t)&type metadata for CRLDeleteBoardIntentPerformer;
  v30[6] = (uint64_t)&off_10152D338;
  return result;
}

uint64_t sub_100FCDC1C(uint64_t a1)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = v1;
  return _swift_task_switch(sub_100FCDC3C, 0, 0);
}

uint64_t sub_100FCDC3C()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = v0[7];
  v0[10] = v1;
  AppDependency.wrappedValue.getter();
  v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[6] = &off_10152F800;
  uint64_t v4 = (char *)&dword_10169BC60 + dword_10169BC60;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[11] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100FCDD2C;
  return ((uint64_t (*)(uint64_t, void *))v4)(v1, v0 + 2);
}

uint64_t sub_100FCDD2C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    uint64_t v3 = sub_100E38174;
  }
  else
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v2 + 16);
    uint64_t v3 = sub_100FCDE6C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100FCDE6C()
{
  static IntentResult.result<>()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100FCDED0()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

unint64_t sub_100FCDF08()
{
  unint64_t result = qword_1016A57E0;
  if (!qword_1016A57E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A57E0);
  }
  return result;
}

unint64_t sub_100FCDF60()
{
  unint64_t result = qword_1016A57E8;
  if (!qword_1016A57E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A57E8);
  }
  return result;
}

unint64_t sub_100FCDFB8()
{
  unint64_t result = qword_1016A57F0;
  if (!qword_1016A57F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A57F0);
  }
  return result;
}

uint64_t sub_100FCE00C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100FCE028()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100FCE078(uint64_t a1)
{
  unint64_t v2 = sub_100FCE218();

  return static AssistantSchemaIntent.title.getter(a1, v2);
}

uint64_t sub_100FCE0C4(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100528488;
  v4[8] = a1;
  v4[9] = v1;
  return _swift_task_switch(sub_100FCDC3C, 0, 0);
}

uint64_t sub_100FCE174(uint64_t a1)
{
  unint64_t v2 = sub_100FCDF08();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_100FCE1B4()
{
  unint64_t result = qword_1016A5800;
  if (!qword_1016A5800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5800);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLDeleteBoardIntent()
{
  return &type metadata for CRLDeleteBoardIntent;
}

unint64_t sub_100FCE218()
{
  unint64_t result = qword_1016A5818;
  if (!qword_1016A5818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5818);
  }
  return result;
}

uint64_t sub_100FCE26C()
{
  uint64_t v0 = sub_1005057FC(&qword_10167A2C0);
  sub_100568B28(v0, qword_10171CE70);
  sub_100556B74(v0, (uint64_t)qword_10171CE70);
  return Tips.Event.init<>(id:)();
}

ValueMetadata *type metadata accessor for CRLTipFollowParticipant()
{
  return &type metadata for CRLTipFollowParticipant;
}

uint64_t sub_100FCE2E4@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v38 = a1;
  uint64_t v1 = type metadata accessor for PredicateExpressions.ComparisonOperator();
  uint64_t v36 = *(void *)(v1 - 8);
  uint64_t v37 = v1;
  __chkstk_darwin(v1, v2);
  uint64_t v35 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC(&qword_10167A2D8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  uint64_t v40 = v5;
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_10167A2E0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_10167A2E8);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1005057FC(&qword_1016896F0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v33 = v19;
  uint64_t v34 = v20;
  __chkstk_darwin(v19, v21);
  uint64_t v23 = (char *)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100523288(&qword_10167A300, &qword_10167A2E0);
  static PredicateExpressions.build_Arg<A>(_:)();
  swift_getKeyPath();
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  swift_getKeyPath();
  sub_100523288(&qword_1016896F8, &qword_10167A2E8);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  uint64_t v41 = 1;
  static PredicateExpressions.build_Arg<A>(_:)();
  uint64_t v25 = v35;
  uint64_t v24 = v36;
  uint64_t v26 = v37;
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v35, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v37);
  uint64_t v27 = sub_1005057FC(&qword_101689700);
  uint64_t v28 = v38;
  v38[3] = v27;
  v28[4] = sub_10099C4B8();
  sub_1005767BC(v28);
  sub_100523288(&qword_101689718, &qword_1016896F0);
  sub_100523288(&qword_10167A350, &qword_10167A2D8);
  uint64_t v29 = v33;
  uint64_t v30 = v39;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v23, v29);
}

uint64_t sub_100FCE7CC()
{
  return sub_100FCEAD0();
}

uint64_t sub_100FCE7F4()
{
  uint64_t v0 = sub_1005057FC(&qword_10167A2C0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Tips.Rule();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1016702B8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_100556B74(v0, (uint64_t)qword_10171CE70);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v10, v0);
  type metadata accessor for Tips.EmptyDonation();
  sub_1006A1230(&qword_10167A2C8);
  sub_1006A1230(&qword_10167A2D0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v11 = static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_100FCEA30@<X0>(uint64_t *a1@<X8>)
{
  sub_100FCF170();
  uint64_t result = Tip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100FCEA74()
{
  unint64_t result = qword_1016A5820;
  if (!qword_1016A5820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5820);
  }
  return result;
}

uint64_t sub_100FCEAD0()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10052E310();
  return Text.init<A>(_:)();
}

uint64_t sub_100FCEBD0()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10052E310();
  uint64_t v4 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
  if (*(void *)(v4 + 16) == 2)
  {
    uint64_t result = swift_bridgeObjectRelease();
    if (*(void *)(v4 + 16))
    {
      sub_1006F6734();
      swift_bridgeObjectRetain();
      uint64_t v6 = Text.init<A>(_:)();
      uint64_t v8 = v7;
      char v10 = v9 & 1;
      Image.init(systemName:)();
      uint64_t v11 = Text.init(_:)();
      uint64_t v13 = v12;
      char v15 = v14 & 1;
      uint64_t v16 = static Text.+ infix(_:_:)();
      uint64_t v47 = v17;
      uint64_t v48 = v16;
      char v19 = v18;
      sub_1006A7D28(v11, v13, v15);
      swift_bridgeObjectRelease();
      sub_1006A7D28(v6, v8, v10);
      uint64_t result = swift_bridgeObjectRelease();
      if (*(void *)(v4 + 16) >= 2uLL)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v20 = Text.init<A>(_:)();
        uint64_t v22 = v21;
        char v24 = v23 & 1;
        uint64_t v51 = static Text.+ infix(_:_:)();
        sub_1006A7D28(v20, v22, v24);
        swift_bridgeObjectRelease();
        uint64_t v25 = v48;
        uint64_t v26 = v47;
        char v27 = v19 & 1;
LABEL_10:
        sub_1006A7D28(v25, v26, v27);
        swift_bridgeObjectRelease();
        return v51;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_100FCF11C();
  sub_1006A4AA8();
  char v28 = BidirectionalCollection<>.starts<A>(with:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (v28)
  {
    Image.init(systemName:)();
    uint64_t result = Text.init(_:)();
    if (*(void *)(v4 + 16))
    {
      char v31 = v30 & 1;
      uint64_t v49 = result;
      uint64_t v32 = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1006F6734();
      uint64_t v33 = Text.init<A>(_:)();
      uint64_t v35 = v34;
      char v37 = v36 & 1;
      uint64_t v51 = static Text.+ infix(_:_:)();
      sub_1006A7D28(v33, v35, v37);
      swift_bridgeObjectRelease();
      uint64_t v25 = v49;
      uint64_t v26 = v32;
      char v27 = v31;
      goto LABEL_10;
    }
    goto LABEL_13;
  }
  if (*(void *)(v4 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1006F6734();
    uint64_t v38 = Text.init<A>(_:)();
    uint64_t v50 = v39;
    char v41 = v40 & 1;
    Image.init(systemName:)();
    uint64_t v42 = Text.init(_:)();
    uint64_t v44 = v43;
    char v46 = v45 & 1;
    uint64_t v51 = static Text.+ infix(_:_:)();
    sub_1006A7D28(v42, v44, v46);
    swift_bridgeObjectRelease();
    uint64_t v25 = v38;
    uint64_t v26 = v50;
    char v27 = v41;
    goto LABEL_10;
  }
LABEL_14:
  __break(1u);
  return result;
}

unint64_t sub_100FCF11C()
{
  unint64_t result = qword_1016A5828;
  if (!qword_1016A5828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5828);
  }
  return result;
}

unint64_t sub_100FCF170()
{
  unint64_t result = qword_1016A5830;
  if (!qword_1016A5830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5830);
  }
  return result;
}

void *sub_100FCF1C4(void *a1, void *a2)
{
  v2[4] = sub_100A3AF5C((uint64_t)_swiftEmptyArrayStorage);
  v2[5] = 0;
  v2[2] = a2;
  v2[3] = a1;
  uint64_t v5 = self;
  id v6 = a1;
  id v7 = a2;
  id v8 = [v5 defaultCenter];
  if (qword_10166ED88 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_10171A160;
  id v10 = [self mainQueue];
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  v15[4] = sub_100FD1DC8;
  v15[5] = v11;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = *(void *)"";
  v15[2] = sub_1005E5680;
  v15[3] = &unk_101536608;
  uint64_t v12 = _Block_copy(v15);
  swift_release();
  id v13 = [v8 addObserverForName:v9 object:0 queue:v10 usingBlock:v12];

  _Block_release(v12);
  v2[5] = v13;
  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_100FCF398()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = Notification.userInfo.getter();
    if (v1)
    {
      uint64_t v2 = v1;
      AnyHashable.init<A>(_:)();
      if (*(void *)(v2 + 16) && (unint64_t v3 = sub_10095647C((uint64_t)v6), (v4 & 1) != 0))
      {
        sub_100522D7C(*(void *)(v2 + 56) + 32 * v3, (uint64_t)&v7);
      }
      else
      {
        long long v7 = 0u;
        long long v8 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_10050BFE0((uint64_t)v6);
      if (*((void *)&v8 + 1))
      {
        sub_1005057FC((uint64_t *)&unk_101677438);
        if ((swift_dynamicCast() & 1) == 0) {
          return swift_release();
        }
        uint64_t v5 = v6[0];
        swift_retain();
        sub_100FD1578(v5);
        swift_bridgeObjectRelease();
        return swift_release_n();
      }
    }
    else
    {
      long long v7 = 0u;
      long long v8 = 0u;
    }
    swift_release();
    return sub_100522F00((uint64_t)&v7, &qword_101672BF0);
  }
  return result;
}

uint64_t sub_100FCF50C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  if (v1)
  {
    uint64_t v2 = self;
    swift_unknownObjectRetain();
    id v3 = [v2 defaultCenter];
    [v3 removeObserver:v1];
    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLSharedBoardThumbnailManager()
{
  return self;
}

uint64_t sub_100FCF5E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v58 = a2;
  uint64_t v59 = a3;
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v56 = *(uint64_t (**)(uint64_t))(v6 - 8);
  uint64_t v7 = *((void *)v56 + 8);
  __chkstk_darwin(v6 - 8, v8);
  uint64_t v60 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_1016741E0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v61 = (uint64_t)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = v3 + 32;
  swift_beginAccess();
  if (!*(void *)(*(void *)(v3 + 32) + 16)
    || (swift_bridgeObjectRetain(), sub_1009563EC(a1), v22 = v21, uint64_t result = swift_bridgeObjectRelease(), (v22 & 1) == 0))
  {
    sub_100ED7F04(a1, (uint64_t)v16);
    uint64_t v55 = a1;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
    uint64_t v24 = v61;
    sub_100FD1DD0((uint64_t)v16, v61, type metadata accessor for CRLBoardViewModelMetadata);
    sub_100FD1954(v24 + *(int *)(v17 + 28), (uint64_t)v12);
    uint64_t v25 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
    int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v12, 1, v25);
    sub_100522F00((uint64_t)v12, (uint64_t *)&unk_1016741E0);
    if (v26 == 1)
    {
      uint64_t v27 = v24;
    }
    else
    {
      if (qword_10166FBE0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      char v28 = (void *)static OS_os_log.shareState;
      uint64_t v54 = sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      long long v53 = xmmword_10117E810;
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v52 = sub_100528BE4();
      *(void *)(inited + 64) = v52;
      uint64_t v30 = v58;
      uint64_t v31 = v59;
      *(void *)(inited + 32) = v58;
      uint64_t v32 = v30;
      *(void *)(inited + 40) = v31;
      id v33 = v28;
      swift_bridgeObjectRetain();
      uint64_t v34 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v33, (uint64_t)&_mh_execute_header, v34, (uint64_t)"Share thumbnail was invalidated for %@", 38, 2, inited);
      swift_setDeallocating();
      uint64_t v51 = sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      uint64_t v35 = self;
      uint64_t v50 = type metadata accessor for CRLBoardIdentifier;
      uint64_t v36 = v55;
      uint64_t v37 = v60;
      sub_100668C00(v55, v60, type metadata accessor for CRLBoardIdentifier);
      unint64_t v38 = (*((unsigned __int8 *)v56 + 80) + 40) & ~(unint64_t)*((unsigned __int8 *)v56 + 80);
      uint64_t v39 = (void *)swift_allocObject();
      v39[2] = v32;
      v39[3] = v31;
      v39[4] = v4;
      uint64_t v56 = type metadata accessor for CRLBoardIdentifier;
      sub_100FD1DD0(v37, (uint64_t)v39 + v38, type metadata accessor for CRLBoardIdentifier);
      v63[4] = sub_100FD1ABC;
      v63[5] = v39;
      v63[0] = _NSConcreteStackBlock;
      v63[1] = *(void *)"";
      v63[2] = sub_10051CE64;
      v63[3] = &unk_101536590;
      char v40 = _Block_copy(v63);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      id v41 = [v35 scheduledTimerWithTimeInterval:0 repeats:v40 block:3600.0];
      _Block_release(v40);
      uint64_t v42 = (void *)static OS_os_log.shareState;
      uint64_t v43 = swift_initStackObject();
      *(_OWORD *)(v43 + 16) = v53;
      unint64_t v44 = v52;
      *(void *)(v43 + 56) = &type metadata for String;
      *(void *)(v43 + 64) = v44;
      *(void *)(v43 + 32) = v32;
      *(void *)(v43 + 40) = v31;
      swift_bridgeObjectRetain();
      id v45 = v42;
      uint64_t v46 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v45, (uint64_t)&_mh_execute_header, v46, (uint64_t)"Share thumbnail timer created for %@", 36, 2, v43);
      swift_setDeallocating();
      swift_arrayDestroy();

      sub_100668C00(v36, v37, v50);
      swift_beginAccess();
      id v47 = v41;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v62 = *(void *)(v4 + 32);
      *(void *)(v4 + 32) = 0x8000000000000000;
      sub_100979DA4((uint64_t)v47, v37, isUniquelyReferenced_nonNull_native);
      *(void *)(v4 + 32) = v62;
      swift_bridgeObjectRelease();
      sub_100FD1E38(v37, v56);
      swift_endAccess();

      uint64_t v27 = v61;
    }
    return sub_100FD1E38(v27, type metadata accessor for CRLBoardViewModelMetadata);
  }
  return result;
}

void sub_100FCFCB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v27 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v27 + 64);
  __chkstk_darwin(v9 - 8, v11);
  uint64_t v12 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v17 = (void *)static OS_os_log.shareState;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = a2;
  *(void *)(inited + 40) = a3;
  id v19 = v17;
  swift_bridgeObjectRetain();
  uint64_t v20 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v20, (uint64_t)"Share thumbnail timer fired for %@", 34, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v21 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v16, 1, 1, v21);
  sub_100668C00(a5, (uint64_t)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLBoardIdentifier);
  unint64_t v22 = (*(unsigned __int8 *)(v27 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  unint64_t v23 = (v10 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = 0;
  v24[3] = 0;
  v24[4] = a4;
  sub_100FD1DD0((uint64_t)v12, (uint64_t)v24 + v22, type metadata accessor for CRLBoardIdentifier);
  uint64_t v25 = (void *)((char *)v24 + v23);
  *uint64_t v25 = a2;
  v25[1] = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1005912D0((uint64_t)v16, (uint64_t)&unk_1016A5958, (uint64_t)v24);
  swift_release();
  swift_beginAccess();
  int v26 = (void *)sub_10095C2B0(a5);
  swift_endAccess();
}

uint64_t sub_100FCFFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return _swift_task_switch(sub_100FD0000, 0, 0);
}

uint64_t sub_100FD0000()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100FD00A0;
  uint64_t v2 = *(void *)(v0 + 24);
  return sub_100ED3CA0(v2, 0);
}

uint64_t sub_100FD00A0(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 56) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
LABEL_3:
    uint64_t v6 = (uint64_t (*)(void))v5[1];
    return v6();
  }
  if (!a1) {
    goto LABEL_3;
  }
  uint64_t v8 = (void *)swift_task_alloc();
  v4[8] = v8;
  *uint64_t v8 = v5;
  v8[1] = sub_100FD0230;
  uint64_t v9 = v4[4];
  uint64_t v10 = v4[5];
  uint64_t v11 = v4[3];
  return sub_100FD038C(v11, v9, v10, a1);
}

uint64_t sub_100FD0230()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100FD032C, 0, 0);
}

uint64_t sub_100FD032C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100FD038C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[53] = a4;
  v5[54] = v4;
  v5[51] = a2;
  v5[52] = a3;
  v5[50] = a1;
  type metadata accessor for MainActor();
  v5[55] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[56] = v7;
  v5[57] = v6;
  return _swift_task_switch(sub_100FD042C, v7, v6);
}

uint64_t sub_100FD042C()
{
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[52];
  uint64_t v1 = (void *)v0[53];
  uint64_t v3 = v0[51];
  swift_beginAccess();
  uint64_t v4 = (void *)static OS_os_log.shareState;
  v0[58] = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v6 = sub_100528BE4();
  v0[59] = v6;
  *(void *)(inited + 64) = v6;
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 40) = v2;
  id v7 = v4;
  swift_bridgeObjectRetain();
  uint64_t v8 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Share thumbnail updating for %@", 31, 2, inited);
  swift_setDeallocating();
  v0[60] = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  [v1 copy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  v0[61] = sub_100538CB4();
  if (swift_dynamicCast())
  {
    uint64_t v9 = (void *)v0[48];
    v0[62] = v9;
    uint64_t v16 = (uint64_t (*)(uint64_t, __n128))((char *)&dword_101677050 + dword_101677050);
    id v10 = v9;
    uint64_t v11 = (void *)swift_task_alloc();
    v0[63] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_100FD06C4;
    uint64_t v12 = v0[50];
    v13.n128_u64[0] = 2.0;
    return v16(v12, v13);
  }
  else
  {
    swift_release();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
}

uint64_t sub_100FD06C4(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 512) = a1;
  *(void *)(v4 + 520) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 456);
  uint64_t v6 = *(void *)(v3 + 448);
  if (v1) {
    id v7 = sub_100FD0CE8;
  }
  else {
    id v7 = sub_100FD080C;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100FD080C()
{
  uint64_t v1 = (UIImage *)[*(id *)(v0 + 512) UIImage];
  uint64_t v2 = UIImagePNGRepresentation(v1);

  if (v2)
  {
    uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;

    static CKShare.SystemFieldKey.thumbnailImageData.getter();
  }
  else
  {
    static CKShare.SystemFieldKey.thumbnailImageData.getter();
    uint64_t v3 = 0;
    unint64_t v5 = 0xF000000000000000;
  }
  *(void *)(v0 + 536) = v3;
  *(void *)(v0 + 528) = v5;
  uint64_t v6 = *(void **)(v0 + 496);
  sub_1005FA2A0(v3, v5);
  CKRecordKeyValueSetting.subscript.setter();
  if ((uint64_t)[v6 size] <= 0x100000)
  {
    unint64_t v22 = *(void **)(v0 + 496);
    id v23 = v22;
    uint64_t v24 = (void *)swift_task_alloc();
    *(void *)(v0 + 544) = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_100FD0F04;
    uint64_t v25 = *(void *)(v0 + 400);
    return sub_100ED4738(v25, (uint64_t)v22, 1);
  }
  else
  {
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    id v7 = *(void **)(v0 + 496);
    id v33 = *(void **)(v0 + 512);
    swift_beginAccess();
    uint64_t v8 = (void *)static OS_os_log.crlDefault;
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v10 = v8;
    id v11 = [v7 size];
    *(void *)(inited + 56) = &type metadata for Int;
    *(void *)(inited + 64) = &protocol witness table for Int;
    *(void *)(inited + 32) = v11;
    uint64_t v12 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v10, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Guard CKShare size %d <= 1MB", 28, 2, inited);
    swift_setDeallocating();
    swift_arrayDestroy();

    sub_10074B704();
    uint64_t v13 = swift_allocError();
    swift_willThrow();
    swift_release();
    sub_100514260(v3, v5);

    *(void *)(v0 + 392) = v13;
    swift_errorRetain();
    sub_1005057FC(&qword_101672BD0);
    char v14 = swift_dynamicCast();
    uint64_t v15 = *(void *)(v0 + 472);
    if (v14)
    {
      swift_errorRelease();
      uint64_t v16 = (void *)static OS_os_log.shareState;
      uint64_t v17 = swift_initStackObject();
      *(_OWORD *)(v17 + 16) = xmmword_10117E810;
      id v18 = v16;
      uint64_t v19 = UUID.uuidString.getter();
      *(void *)(v17 + 56) = &type metadata for String;
      *(void *)(v17 + 64) = v15;
      *(void *)(v17 + 32) = v19;
      *(void *)(v17 + 40) = v20;
      uint64_t v21 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v18, (uint64_t)&_mh_execute_header, v21, (uint64_t)"Updating to thumbnail image would cause the share to be too large for board %@", 78, 2, v17);
    }
    else
    {
      swift_errorRelease();
      uint64_t v27 = (void *)static OS_os_log.shareState;
      uint64_t v28 = swift_initStackObject();
      *(_OWORD *)(v28 + 16) = xmmword_10117E810;
      id v18 = v27;
      uint64_t v29 = UUID.uuidString.getter();
      *(void *)(v28 + 56) = &type metadata for String;
      *(void *)(v28 + 64) = v15;
      *(void *)(v28 + 32) = v29;
      *(void *)(v28 + 40) = v30;
      uint64_t v31 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v18, (uint64_t)&_mh_execute_header, v31, (uint64_t)"Couldn't get board grid size thumbnail for board %@", 51, 2, v28);
    }
    swift_setDeallocating();
    swift_arrayDestroy();

    swift_errorRelease();
    uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
    return v32();
  }
}

uint64_t sub_100FD0CE8()
{
  uint64_t v1 = (void *)v0[62];
  swift_release();

  v0[49] = v0[65];
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  char v2 = swift_dynamicCast();
  uint64_t v3 = v0[59];
  if (v2)
  {
    swift_errorRelease();
    unint64_t v4 = (void *)static OS_os_log.shareState;
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v6 = v4;
    uint64_t v7 = UUID.uuidString.getter();
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = v3;
    *(void *)(inited + 32) = v7;
    *(void *)(inited + 40) = v8;
    uint64_t v9 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Updating to thumbnail image would cause the share to be too large for board %@", 78, 2, inited);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  else
  {
    swift_errorRelease();
    id v10 = (void *)static OS_os_log.shareState;
    uint64_t v11 = swift_initStackObject();
    *(_OWORD *)(v11 + 16) = xmmword_10117E810;
    id v12 = v10;
    uint64_t v13 = UUID.uuidString.getter();
    *(void *)(v11 + 56) = &type metadata for String;
    *(void *)(v11 + 64) = v3;
    *(void *)(v11 + 32) = v13;
    *(void *)(v11 + 40) = v14;
    uint64_t v15 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v15, (uint64_t)"Couldn't get board grid size thumbnail for board %@", 51, 2, v11);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  swift_errorRelease();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_100FD0F04()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 552) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 448);
    uint64_t v4 = *(void *)(v2 + 456);
    unint64_t v5 = sub_100FD10BC;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 448);
    uint64_t v4 = *(void *)(v2 + 456);
    unint64_t v5 = sub_100FD1020;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100FD1020()
{
  uint64_t v1 = v0[67];
  unint64_t v2 = v0[66];
  uint64_t v3 = (void *)v0[64];
  uint64_t v4 = (void *)v0[62];

  swift_release();
  sub_100514260(v1, v2);

  unint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100FD10BC()
{
  uint64_t v1 = v0[67];
  unint64_t v2 = v0[66];
  uint64_t v3 = (void *)v0[64];
  uint64_t v4 = (void *)v0[62];
  swift_release();

  sub_100514260(v1, v2);
  v0[49] = v0[69];
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  char v5 = swift_dynamicCast();
  uint64_t v6 = v0[59];
  if (v5)
  {
    swift_errorRelease();
    uint64_t v7 = (void *)static OS_os_log.shareState;
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v9 = v7;
    uint64_t v10 = UUID.uuidString.getter();
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = v6;
    *(void *)(inited + 32) = v10;
    *(void *)(inited + 40) = v11;
    uint64_t v12 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Updating to thumbnail image would cause the share to be too large for board %@", 78, 2, inited);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  else
  {
    swift_errorRelease();
    uint64_t v13 = (void *)static OS_os_log.shareState;
    uint64_t v14 = swift_initStackObject();
    *(_OWORD *)(v14 + 16) = xmmword_10117E810;
    id v15 = v13;
    uint64_t v16 = UUID.uuidString.getter();
    *(void *)(v14 + 56) = &type metadata for String;
    *(void *)(v14 + 64) = v6;
    *(void *)(v14 + 32) = v16;
    *(void *)(v14 + 40) = v17;
    uint64_t v18 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v18, (uint64_t)"Couldn't get board grid size thumbnail for board %@", 51, 2, v14);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  swift_errorRelease();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

void sub_100FD12F8(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 32);
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v4 = sub_1009563EC(a1);
    if (v5)
    {
      id v6 = *(id *)(*(void *)(v3 + 56) + 8 * v4);
      swift_bridgeObjectRelease();
      if (qword_10166FBE0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v7 = (id)static OS_os_log.shareState;
      uint64_t v8 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Share thumbnail timer firing early because board closed.", 56, 2, (uint64_t)_swiftEmptyArrayStorage);

      [v6 fire];
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

void sub_100FD1418(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 32);
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v4 = sub_1009563EC(a1);
    if (v5)
    {
      id v6 = *(id *)(*(void *)(v3 + 56) + 8 * v4);
      swift_bridgeObjectRelease();
      if (qword_10166FBE0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v7 = (id)static OS_os_log.shareState;
      uint64_t v8 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Share thumbnail timer invalidating early because board closed.", 62, 2, (uint64_t)_swiftEmptyArrayStorage);

      [v6 invalidate];
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_beginAccess();
  id v9 = (void *)sub_10095C2B0(a1);
  swift_endAccess();
}

uint64_t sub_100FD1578(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v44 = (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  id v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v40 - v12;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v40 - v16;
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v45 = a1 + 56;
  uint64_t v19 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  int64_t v46 = (unint64_t)(v19 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v23 = 0;
  uint64_t v42 = v5;
  uint64_t v43 = v6;
  id v41 = v17;
  while (1)
  {
    if (v21)
    {
      unint64_t v26 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      int64_t v47 = v23;
      unint64_t v27 = v26 | (v23 << 6);
      goto LABEL_24;
    }
    int64_t v28 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v46) {
      return swift_release();
    }
    unint64_t v29 = *(void *)(v45 + 8 * v28);
    int64_t v30 = v23 + 1;
    if (!v29)
    {
      int64_t v30 = v23 + 2;
      if (v23 + 2 >= v46) {
        return swift_release();
      }
      unint64_t v29 = *(void *)(v45 + 8 * v30);
      if (!v29)
      {
        int64_t v30 = v23 + 3;
        if (v23 + 3 >= v46) {
          return swift_release();
        }
        unint64_t v29 = *(void *)(v45 + 8 * v30);
        if (!v29)
        {
          int64_t v30 = v23 + 4;
          if (v23 + 4 >= v46) {
            return swift_release();
          }
          unint64_t v29 = *(void *)(v45 + 8 * v30);
          if (!v29) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v21 = (v29 - 1) & v29;
    int64_t v47 = v30;
    unint64_t v27 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_24:
    sub_100668C00(*(void *)(a1 + 48) + *(void *)(v6 + 72) * v27, (uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100FD1DD0((uint64_t)v17, (uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100668C00((uint64_t)v13, (uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v32 = (uint64_t *)&v9[*(int *)(sub_1005057FC(&qword_101677100) + 48)];
      uint64_t v33 = a1;
      uint64_t v34 = *v32;
      uint64_t v35 = v32[1];
      uint64_t v36 = (uint64_t)v9;
      uint64_t v37 = v13;
      unint64_t v38 = v9;
      uint64_t v39 = v44;
      sub_100FD1DD0(v36, v44, type metadata accessor for CRLBoardIdentifier);
      sub_100FCF5E8(v39, v34, v35);
      a1 = v33;
      uint64_t v17 = v41;
      swift_bridgeObjectRelease();
      uint64_t v25 = v39;
      id v9 = v38;
      uint64_t v13 = v37;
      uint64_t v24 = type metadata accessor for CRLBoardIdentifier;
      uint64_t v6 = v43;
    }
    else
    {
      uint64_t v24 = type metadata accessor for CRLBoardLibraryViewModel.Item;
      uint64_t v25 = (uint64_t)v9;
    }
    sub_100FD1E38(v25, v24);
    int64_t v23 = v47;
    uint64_t result = sub_100FD1E38((uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
  }
  uint64_t v31 = v23 + 5;
  if (v23 + 5 >= v46) {
    return swift_release();
  }
  unint64_t v29 = *(void *)(v45 + 8 * v31);
  if (v29)
  {
    int64_t v30 = v23 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v30 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v30 >= v46) {
      return swift_release();
    }
    unint64_t v29 = *(void *)(v45 + 8 * v30);
    ++v31;
    if (v29) {
      goto LABEL_23;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100FD1954(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_1016741E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100FD19BC()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

void sub_100FD1ABC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (uint64_t)v1 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_100FCFCB0(a1, v4, v5, v6, v7);
}

uint64_t sub_100FD1B34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100FD1B44()
{
  return swift_release();
}

uint64_t sub_100FD1B4C()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_100FD1C6C()
{
  uint64_t v2 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = (uint64_t *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  id v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *id v9 = v1;
  v9[4] = v7;
  v9[5] = v8;
  v9[2] = v4;
  v9[3] = v5;
  v9[1] = sub_100528488;
  return _swift_task_switch(sub_100FD0000, 0, 0);
}

uint64_t sub_100FD1D90()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100FD1DC8()
{
  return sub_100FCF398();
}

uint64_t sub_100FD1DD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100FD1E38(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100FD1EA0()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLiOSPencilTrayPickerFillImageProvider()
{
  return self;
}

uint64_t type metadata accessor for CRLiOSPencilTrayPickerImageProvider()
{
  return self;
}

void CRLChangeRecord.init()()
{
}

id CRLChangeRecord.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLChangeRecord();
  [super dealloc];
}

uint64_t type metadata accessor for CRLChangeRecord()
{
  return self;
}

id sub_100FD20B4(int a1, void *a2)
{
  *(_DWORD *)&v2[OBJC_IVAR____TtC8Freeform15CRLChangeRecord_kind] = a1;
  if (a2)
  {
    uint64_t v4 = v2;
    id v5 = a2;
  }
  else
  {
    unint64_t v6 = sub_100A45DBC((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v7 = (objc_class *)type metadata accessor for CRLPropertyMap();
    uint64_t v8 = (char *)objc_allocWithZone(v7);
    *(void *)&v8[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data] = v6;
    v13.receiver = v8;
    v13.super_class = v7;
    id v9 = v2;
    id v5 = [super init];
  }
  *(void *)&v2[OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details] = v5;
  id v10 = a2;

  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for CRLChangeRecord();
  return [super init];
}

double sub_100FD217C(uint64_t a1)
{
  if (a1)
  {
    int v7 = 0;
    int v8 = 0;
    sub_1002094D8(a1, (_WORD *)&v8 + 1, &v8, &v7);
    int v1 = v7;
    if (v7)
    {
      sub_1005057FC(&qword_10167AD10);
      uint64_t v2 = swift_allocObject();
      *(void *)&double result = 3;
      *(_OWORD *)(v2 + 16) = xmmword_10117DF40;
      int v4 = (unsigned __int16)v8;
      *(_DWORD *)(v2 + 32) = HIWORD(v8);
      *(_DWORD *)(v2 + 36) = v4;
      *(_DWORD *)(v2 + 40) = v1;
    }
    else
    {
      int v5 = (unsigned __int16)v8;
      sub_1005057FC(&qword_10167AD10);
      uint64_t v6 = swift_allocObject();
      if (v5)
      {
        *(void *)&double result = 2;
        *(_OWORD *)(v6 + 16) = xmmword_10117D8C0;
        *(_DWORD *)(v6 + 32) = HIWORD(v8);
        *(_DWORD *)(v6 + 36) = v5;
      }
      else
      {
        *(void *)&double result = 1;
        *(_OWORD *)(v6 + 16) = xmmword_10117E810;
        *(_DWORD *)(v6 + 32) = HIWORD(v8);
      }
    }
  }
  return result;
}

uint64_t sub_100FD2288(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    unsigned int v2 = *(_DWORD *)(a1 + 32);
    if (v1 == 1)
    {
      unsigned int v3 = 0;
      unsigned int v4 = 0;
      swift_bridgeObjectRelease();
      if (v2) {
        goto LABEL_15;
      }
    }
    else
    {
      unsigned int v4 = *(_DWORD *)(a1 + 36);
      if (v1 >= 3)
      {
        unsigned int v3 = *(_DWORD *)(a1 + 40);
        swift_bridgeObjectRelease();
        if (v2) {
          goto LABEL_15;
        }
      }
      else
      {
        unsigned int v3 = 0;
        swift_bridgeObjectRelease();
        if (v2) {
          goto LABEL_15;
        }
      }
    }
    if (!v4 && !v3) {
      goto LABEL_12;
    }
LABEL_15:
    if (v2 < 0x10000 && v4 < 0x10000) {
      return sub_1002094FC((unsigned __int16)v2, (unsigned __int16)v4, v3);
    }
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
LABEL_12:
  if (qword_10166FBC0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v5 = (id)static OS_os_log.pasteboard;
  uint64_t v6 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v6, (uint64_t)"Empty CRLVersion unwrapped fromProtobufArray", 44, 2, (uint64_t)_swiftEmptyArrayStorage);

  return 0;
}

unint64_t sub_100FD241C()
{
  unint64_t result = qword_1016A5B90;
  if (!qword_1016A5B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5B90);
  }
  return result;
}

unint64_t sub_100FD2474()
{
  unint64_t result = qword_1016A5B98;
  if (!qword_1016A5B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5B98);
  }
  return result;
}

uint64_t sub_100FD24C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100FD24E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100FD2500(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return _swift_task_switch(sub_100FD2520, 0, 0);
}

uint64_t sub_100FD2520()
{
  *(void *)(v0 + 152) = sub_10050F848(*(void **)(v0 + 144), *(void *)(*(void *)(v0 + 144) + 24));
  *(void *)(v0 + 160) = type metadata accessor for MainActor();
  *(void *)(v0 + 168) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100FD25C8, v2, v1);
}

uint64_t sub_100FD25C8()
{
  uint64_t v1 = *(void **)(v0 + 152);
  swift_release();
  uint64_t v2 = (void *)(*v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
  swift_beginAccess();
  *(void *)(v0 + 176) = *v2;
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_100FD2670, 0, 0);
}

uint64_t sub_100FD2670()
{
  if (*(void *)(v0[22] + 16) && (unint64_t v1 = sub_1009563EC(v0[17]), (v2 & 1) != 0))
  {
    uint64_t v3 = *(void *)(*(void *)(v0[22] + 56) + 8 * v1);
    v0[23] = v3;
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v4 = (char *)[*(id *)(v3 + 24) anyObject];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void **)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
      v0[24] = v6;
      id v7 = v6;

      v0[25] = static MainActor.shared.getter();
      uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
      return _swift_task_switch(sub_100FD29B0, v9, v8);
    }
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  uint64_t v10 = v0[17];
  swift_beginAccess();
  uint64_t v11 = (void *)static OS_os_log.appIntents;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v13 = v11;
  uint64_t v23 = UUID.uuidString.getter();
  uint64_t v24 = v14;
  swift_bridgeObjectRetain();
  v15._countAndFlagsBits = 58;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t *)(v10 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v17 = *v16;
  uint64_t v18 = (void *)v16[1];
  swift_bridgeObjectRetain();
  v19._countAndFlagsBits = v17;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v23;
  *(void *)(inited + 40) = v24;
  uint64_t v20 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v20, (uint64_t)"Board is not currently open or is missing controllers - %@", 58, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  type metadata accessor for _PrebuiltAppIntentError();
  sub_100D20210((unint64_t *)&qword_101678490, (void (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError);
  swift_allocError();
  static _UnrecoverableError.actionNotAllowed.getter();
  swift_willThrow();
  unint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_100FD29B0()
{
  unint64_t v1 = *(void **)(v0 + 192);
  swift_release();
  *(void *)(v0 + 208) = [v1 editorController];
  return _swift_task_switch(sub_100FD2A34, 0, 0);
}

uint64_t sub_100FD2A34()
{
  uint64_t v1 = *(void *)(v0 + 208);
  swift_release();
  if (v1)
  {
    char v2 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    uint64_t v3 = *(void *)(v0 + 208);
    uint64_t v4 = *(void *)(v0 + 192);
    return v2(v4, v3);
  }
  else
  {

    if (qword_10166FB50 != -1) {
      swift_once();
    }
    uint64_t v6 = *(void *)(v0 + 136);
    swift_beginAccess();
    id v7 = (void *)static OS_os_log.appIntents;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v9 = v7;
    uint64_t v18 = UUID.uuidString.getter();
    uint64_t v19 = v10;
    swift_bridgeObjectRetain();
    v11._countAndFlagsBits = 58;
    v11._object = (void *)0xE100000000000000;
    String.append(_:)(v11);
    swift_bridgeObjectRelease();
    objc_super v12 = (uint64_t *)(v6 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
    uint64_t v13 = *v12;
    uint64_t v14 = (void *)v12[1];
    swift_bridgeObjectRetain();
    v15._countAndFlagsBits = v13;
    v15._object = v14;
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v18;
    *(void *)(inited + 40) = v19;
    uint64_t v16 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Board is not currently open or is missing controllers - %@", 58, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    type metadata accessor for _PrebuiltAppIntentError();
    sub_100D20210((unint64_t *)&qword_101678490, (void (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError);
    swift_allocError();
    static _UnrecoverableError.actionNotAllowed.getter();
    swift_willThrow();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_100FD2CD4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return _swift_task_switch(sub_100FD2CF4, 0, 0);
}

uint64_t sub_100FD2CF4()
{
  *(void *)(v0 + 152) = sub_10050F848(*(void **)(v0 + 144), *(void *)(*(void *)(v0 + 144) + 24));
  *(void *)(v0 + 160) = type metadata accessor for MainActor();
  *(void *)(v0 + 168) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100FD2D9C, v2, v1);
}

uint64_t sub_100FD2D9C()
{
  uint64_t v1 = *(void **)(v0 + 152);
  swift_release();
  uint64_t v2 = (void *)(*v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
  swift_beginAccess();
  *(void *)(v0 + 176) = *v2;
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_100FD2E44, 0, 0);
}

uint64_t sub_100FD2E44()
{
  if (*(void *)(v0[22] + 16) && (unint64_t v1 = sub_1009563EC(v0[17]), (v2 & 1) != 0))
  {
    uint64_t v3 = *(void *)(*(void *)(v0[22] + 56) + 8 * v1);
    v0[23] = v3;
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v4 = (char *)[*(id *)(v3 + 24) anyObject];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void **)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
      v0[24] = v6;
      id v7 = v6;

      v0[25] = static MainActor.shared.getter();
      uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
      return _swift_task_switch(sub_100FD3184, v9, v8);
    }
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  uint64_t v10 = v0[17];
  swift_beginAccess();
  Swift::String v11 = (void *)static OS_os_log.appIntents;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v13 = v11;
  uint64_t v23 = UUID.uuidString.getter();
  uint64_t v24 = v14;
  swift_bridgeObjectRetain();
  v15._countAndFlagsBits = 58;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t *)(v10 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v17 = *v16;
  uint64_t v18 = (void *)v16[1];
  swift_bridgeObjectRetain();
  v19._countAndFlagsBits = v17;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v23;
  *(void *)(inited + 40) = v24;
  uint64_t v20 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v20, (uint64_t)"Board is not currently open or is missing controllers - %@", 58, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  type metadata accessor for _PrebuiltAppIntentError();
  sub_100D20210((unint64_t *)&qword_101678490, (void (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError);
  swift_allocError();
  static _UnrecoverableError.actionNotAllowed.getter();
  swift_willThrow();
  unint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_100FD3184()
{
  unint64_t v1 = *(void **)(v0 + 192);
  swift_release();
  *(void *)(v0 + 208) = [v1 editorController];
  return _swift_task_switch(sub_100FD4830, 0, 0);
}

uint64_t sub_100FD3208@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v70 = a1;
  uint64_t v1 = type metadata accessor for InputConnectionBehavior();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v71 = v1;
  uint64_t v72 = v2;
  __chkstk_darwin(v1, v3);
  uint64_t v69 = &v48[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1005057FC(&qword_101673B38);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v68 = &v48[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8, v9);
  uint64_t v65 = &v48[-v10];
  uint64_t v11 = sub_1005057FC(&qword_101691F20);
  __chkstk_darwin(v11 - 8, v12);
  BOOL v67 = &v48[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v14 - 8, v15);
  unint64_t v66 = &v48[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  unint64_t v21 = &v48[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = type metadata accessor for Locale();
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v24 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v24 - 8, v25);
  uint64_t v26 = type metadata accessor for LocalizedStringResource();
  uint64_t v62 = v26;
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26, v28);
  uint64_t v57 = &v48[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v64 = sub_1005057FC(&qword_101673B48);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v30 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v31 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v18 + 104);
  unsigned int v53 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v54 = v17;
  v31(v21, enum case for LocalizedStringResource.BundleDescription.main(_:), v17);
  uint64_t v55 = v31;
  uint64_t v56 = v18 + 104;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v31(v21, v30, v17);
  uint64_t v32 = v66;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v33 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v27 + 56);
  uint64_t v61 = v27 + 56;
  uint64_t v63 = v33;
  v33(v32, 0, 1, v26);
  uint64_t v34 = type metadata accessor for CRLBoardEntity();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v67, 1, 1, v34);
  uint64_t v35 = type metadata accessor for IntentDialog();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
  uint64_t v51 = v37;
  uint64_t v52 = v36 + 56;
  unint64_t v38 = v65;
  v37(v65, 1, 1, v35);
  v37(v68, 1, 1, v35);
  uint64_t v59 = sub_1005057FC(&qword_101673B50);
  unint64_t v60 = 0x800000010123B260;
  unint64_t v73 = 0xD00000000000001FLL;
  unint64_t v74 = 0x800000010123B260;
  AnyHashable.init<A>(_:)();
  uint64_t v58 = type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v75 = AppDependency.__allocating_init(key:manager:)();
  unsigned int v49 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v39 = *(void (**)(void))(v72 + 104);
  v72 += 104;
  uint64_t v50 = (void (*)(unsigned char *, void, uint64_t))v39;
  v39(v69);
  sub_100568898();
  sub_100D20210((unint64_t *)&qword_101673B60, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  uint64_t *v70 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)();
  BOOL v67 = (unsigned char *)sub_1005057FC(&qword_1016A5BC0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v40 = v53;
  uint64_t v41 = v54;
  uint64_t v42 = v55;
  v55(v21, v53, v54);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v42(v21, v40, v41);
  uint64_t v43 = v66;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v63(v43, 0, 1, v62);
  LOBYTE(v75) = 10;
  uint64_t v44 = v51;
  v51(v38, 1, 1, v35);
  v44(v68, 1, 1, v35);
  v50(v69, v49, v71);
  sub_100F9EED8();
  uint64_t v45 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  int64_t v46 = v70;
  v70[1] = v45;
  unint64_t v73 = 0xD00000000000001FLL;
  unint64_t v74 = v60;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  v46[2] = result;
  v46[6] = (uint64_t)&type metadata for CRLChangeSelectionFontSizeIntentPerformer;
  v46[7] = (uint64_t)&off_101521B70;
  return result;
}

uint64_t sub_100FD3B34(uint64_t a1)
{
  v2[16] = a1;
  v2[17] = v1;
  type metadata accessor for CRLBoardIdentifier(0);
  v2[18] = swift_task_alloc();
  type metadata accessor for CRLBoardEntity();
  v2[19] = swift_task_alloc();
  v2[20] = type metadata accessor for MainActor();
  v2[21] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[22] = v4;
  v2[23] = v3;
  return _swift_task_switch(sub_100FD3C28, v4, v3);
}

uint64_t sub_100FD3C28()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  IntentParameter.wrappedValue.getter();
  sub_100540CFC(v1, v2);
  sub_100568A20(v1, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  AppDependency.wrappedValue.getter();
  v0[11] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[12] = &off_10152F800;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1016A5BD0 + dword_1016A5BD0);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[24] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100FD3D44;
  uint64_t v4 = v0[18];
  return v6(v4, (uint64_t)(v0 + 8));
}

uint64_t sub_100FD3D44(void *a1, uint64_t a2)
{
  uint64_t v5 = *v3;
  v5[25] = a2;
  v5[26] = v2;
  swift_task_dealloc();
  sub_100568A20(v5[18], type metadata accessor for CRLBoardIdentifier);
  if (v2)
  {
    uint64_t v6 = v5[22];
    uint64_t v7 = v5[23];
    uint64_t v8 = sub_1005667EC;
  }
  else
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v5 + 8));

    uint64_t v6 = v5[22];
    uint64_t v7 = v5[23];
    uint64_t v8 = sub_100FD3EAC;
  }
  return _swift_task_switch(v8, v6, v7);
}

uint64_t sub_100FD3EAC()
{
  uint64_t v1 = (void *)v0[25];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  uint64_t v3 = (long long *)(v2 + 16);
  *(void *)(v2 + 24) = 0;
  v0[6] = sub_100565100;
  v0[7] = v2;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = *(void *)"";
  v0[4] = sub_1005B74EC;
  v0[5] = &unk_101536718;
  uint64_t v4 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  [v1 enumerateEditorsOnStackUsingBlock:v4];
  _Block_release(v4);
  swift_beginAccess();
  long long v5 = *v3;
  *(_OWORD *)(v0 + 27) = *v3;
  uint64_t v6 = v5;
  swift_unknownObjectRetain();
  swift_release();
  if (v6)
  {
    IntentParameter.wrappedValue.getter();
    *((unsigned char *)v0 + 241) = *((unsigned char *)v0 + 240);
    v0[29] = static MainActor.shared.getter();
    uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_100FD40BC, v8, v7);
  }
  else
  {
    swift_release();
    uint64_t v9 = (void *)v0[25];
    static IntentResult.result<>()();

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_100FD40BC()
{
  uint64_t v1 = *(char *)(v0 + 241);
  swift_release();
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, float))(*(void *)(v0 + 224) + 32))(ObjectType, flt_1011C1CF8[v1]);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 184);
  return _swift_task_switch(sub_100566750, v3, v4);
}

uint64_t sub_100FD4154()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  sub_100568B28(v9, qword_10171CE88);
  sub_100556B74(v9, (uint64_t)qword_10171CE88);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_100FD434C()
{
  uint64_t v0 = sub_1005057FC(&qword_1016A5BD8);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v2 = sub_1005057FC(&qword_1016A5BE0);
  __chkstk_darwin(v2, v3);
  sub_100FD46AC();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v4._object = (void *)0x800000010129CB60;
  v4._countAndFlagsBits = 0xD000000000000014;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  sub_1005057FC(&qword_1016A5BE8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v5._countAndFlagsBits = 544175136;
  v5._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1005057FC(&qword_1016A5BF0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v6);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_100FD453C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1016702C0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_100556B74(v2, (uint64_t)qword_10171CE88);
  Swift::String v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100FD45E8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528488;
  return sub_100FD3B34(a1);
}

unint64_t sub_100FD4684(uint64_t a1)
{
  unint64_t result = sub_100FD46AC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100FD46AC()
{
  unint64_t result = qword_1016A5BA8;
  if (!qword_1016A5BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5BA8);
  }
  return result;
}

uint64_t sub_100FD4700(uint64_t a1)
{
  unint64_t v2 = sub_100FD46AC();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for CRLChangeSelectionFontSizeIntent()
{
  return &type metadata for CRLChangeSelectionFontSizeIntent;
}

uint64_t sub_100FD474C()
{
  return sub_100523288(&qword_1016A5BB0, &qword_1016A5BB8);
}

uint64_t sub_100FD4788()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100FD47C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100FD47D0()
{
  return swift_release();
}

uint64_t sub_100FD47D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100FD4804@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

id sub_100FD4880(uint64_t a1, void *a2)
{
  id v5 = objc_allocWithZone(v2);
  id v6 = sub_100FD507C(a1, a2);

  return v6;
}

void sub_100FD4B04(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5 = v3;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v9 = [a1 getBoardItemForUUID:isa];

  if (!v9) {
    goto LABEL_7;
  }
  type metadata accessor for CRLShapeItem();
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10)
  {

LABEL_7:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetFill.swift", 89, 2, 32, (uint64_t)"Unable to retrieve shape item.", 30, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve shape item.");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetFill.swift", 89, 2, 32);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v16, v17);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  uint64_t v11 = v10;
  id v12 = v9;
  sub_10103405C(v11, (uint64_t)&off_101518040);

  if (v4)
  {
  }
  else
  {
    uint64_t v13 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform17CRLCommandSetFill_fill);
    id v14 = v13;
    sub_100A9B548(v13);
    id v15 = v12;
    sub_101023724(v11, (uint64_t)&off_101518040, a3);
  }
}

uint64_t sub_100FD4DE8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform17CRLCommandSetFill_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_bridgeObjectRelease();
}

id sub_100FD4E78()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetFill();
  return [super dealloc];
}

uint64_t sub_100FD4F44()
{
  return type metadata accessor for CRLCommandSetFill();
}

uint64_t type metadata accessor for CRLCommandSetFill()
{
  uint64_t result = qword_1016A5C38;
  if (!qword_1016A5C38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100FD4F98()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100FD503C()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC8Freeform17CRLCommandSetFill_actionString);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_100FD507C(uint64_t a1, void *a2)
{
  uint64_t v5 = (uint64_t *)&v2[OBJC_IVAR____TtC8Freeform17CRLCommandSetFill_actionString];
  id v6 = self;
  uint64_t v7 = v2;
  id v8 = [v6 mainBundle];
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v8 localizedStringForKey:v9 value:v10 table:0];

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  uint64_t *v5 = v12;
  v5[1] = v14;
  id v15 = &v7[OBJC_IVAR____TtC8Freeform17CRLCommandSetFill_id];
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a1, v16);
  if (a2 && (uint64_t v18 = swift_dynamicCastObjCProtocolConditional()) != 0)
  {
    uint64_t v19 = (void *)v18;
    id v20 = a2;
    [v19 copyWithZone:0];
    _bridgeAnyObjectToAny(_:)();

    swift_unknownObjectRelease();
    sub_100FD52E0();
    swift_dynamicCast();
    *(void *)&v7[OBJC_IVAR____TtC8Freeform17CRLCommandSetFill_fill] = v24;
  }
  else
  {
    *(void *)&v7[OBJC_IVAR____TtC8Freeform17CRLCommandSetFill_fill] = a2;
    id v21 = a2;
  }

  v25.receiver = v7;
  v25.super_class = (Class)type metadata accessor for CRLCommandSetFill();
  id v22 = [super init];
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a1, v16);
  return v22;
}

unint64_t sub_100FD52E0()
{
  unint64_t result = qword_101687660;
  if (!qword_101687660)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101687660);
  }
  return result;
}

void *sub_100FD5320(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    swift_unknownObjectWeakCopyInit();
    v4[1] = a2[1];
    *((_OWORD *)v4 + 1) = *((_OWORD *)a2 + 1);
    id v8 = (void *)a2[4];
    uint64_t v7 = a2[5];
    v4[4] = v8;
    v4[5] = v7;
    uint64_t v9 = *(int *)(a3 + 32);
    NSString v10 = (char *)v4 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    v4[6] = a2[6];
    uint64_t v12 = type metadata accessor for EditMode();
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    id v13 = v8;
    swift_bridgeObjectRetain();
    swift_retain();
    v23(v10, v11, v12);
    uint64_t v14 = sub_1005057FC(&qword_1016A5C48);
    *(void *)&v10[*(int *)(v14 + 28)] = *(void *)(v11 + *(int *)(v14 + 28));
    uint64_t v15 = *(int *)(a3 + 36);
    uint64_t v16 = (void *)((char *)v4 + v15);
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v19 = *(void **)v17;
    uint64_t v18 = *(void *)(v17 + 8);
    *uint64_t v16 = *(void *)v17;
    v16[1] = v18;
    swift_retain();
    id v20 = v19;
  }
  swift_retain();
  return v4;
}

uint64_t sub_100FD5490(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakDestroy();

  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for EditMode();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_1005057FC(&qword_1016A5C48);
  swift_release();

  return swift_release();
}

uint64_t sub_100FD5554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_unknownObjectWeakCopyInit();
  *(void *)(v6 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)(a2 + 16);
  id v8 = *(void **)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(v6 + 32) = v8;
  *(void *)(v6 + 40) = v7;
  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)(v6 + 48) = *(void *)(a2 + 48);
  uint64_t v12 = type metadata accessor for EditMode();
  id v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  id v14 = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  v13(v10, v11, v12);
  uint64_t v15 = sub_1005057FC(&qword_1016A5C48);
  *(void *)(v10 + *(int *)(v15 + 28)) = *(void *)(v11 + *(int *)(v15 + 28));
  uint64_t v16 = *(int *)(a3 + 36);
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = a2 + v16;
  id v20 = *(void **)v18;
  uint64_t v19 = *(void *)(v18 + 8);
  *uint64_t v17 = *(void *)v18;
  v17[1] = v19;
  swift_retain();
  id v21 = v20;
  swift_retain();
  return a1;
}

uint64_t sub_100FD5670(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_unknownObjectWeakCopyAssign();
  v6[1] = a2[1];
  _OWORD v6[2] = a2[2];
  v6[3] = a2[3];
  uint64_t v7 = (void *)a2[4];
  id v8 = (void *)v6[4];
  v6[4] = v7;
  id v9 = v7;

  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = a2[6];
  swift_retain();
  swift_release();
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for EditMode();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = sub_1005057FC(&qword_1016A5C48);
  *(void *)(v11 + *(int *)(v14 + 28)) = *(void *)&v12[*(int *)(v14 + 28)];
  swift_retain();
  swift_release();
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void **)(a1 + v15);
  uint64_t v19 = *(void **)v17;
  *uint64_t v16 = *(void *)v17;
  id v20 = v19;

  v16[1] = *((void *)v17 + 1);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100FD57B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_unknownObjectWeakTakeInit();
  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(v6 + 8) = *(void *)(a2 + 8);
  *(void *)(v6 + 16) = v7;
  *(_OWORD *)(v6 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(v6 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = v6 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for EditMode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = sub_1005057FC(&qword_1016A5C48);
  *(void *)(v9 + *(int *)(v12 + 28)) = *(void *)(v10 + *(int *)(v12 + 28));
  *(_OWORD *)(a1 + *(int *)(a3 + 36)) = *(_OWORD *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t sub_100FD5878(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_unknownObjectWeakTakeAssign();
  v6[1] = a2[1];
  _OWORD v6[2] = a2[2];
  uint64_t v7 = a2[4];
  uint64_t v8 = (void *)v6[4];
  v6[3] = a2[3];
  v6[4] = v7;

  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = a2[6];
  swift_release();
  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for EditMode();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = sub_1005057FC(&qword_1016A5C48);
  *(void *)(v10 + *(int *)(v13 + 28)) = *(void *)&v11[*(int *)(v13 + 28)];
  swift_release();
  uint64_t v14 = *(int *)(a3 + 36);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = *(void **)(a1 + v14);
  *uint64_t v15 = *v16;

  v15[1] = v16[1];
  swift_release();
  return a1;
}

uint64_t sub_100FD598C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100FD59A0);
}

uint64_t sub_100FD59A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    if ((*(void *)(a1 + 8) & 0xF000000000000007) != 0) {
      return (*(_DWORD *)a1 & 0x7FFFFFFFu) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v7 = sub_1005057FC(&qword_1016A5C48);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
    uint64_t v9 = v7;
    uint64_t v10 = a1 + *(int *)(a3 + 32);
    return v8(v10, a2, v9);
  }
}

uint64_t sub_100FD5A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100FD5A68);
}

void *sub_100FD5A68(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
    result[1] = 1;
  }
  else
  {
    uint64_t v7 = sub_1005057FC(&qword_1016A5C48);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 32);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for CRLCompactScenesListUI_i(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_1016A5CA8);
}

void sub_100FD5B38()
{
  sub_100FF2704(319, (unint64_t *)&unk_1016A5CB8, (uint64_t (*)(uint64_t))&type metadata accessor for EditMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100FD5C20()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100FD5C3C(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    uint64_t v18 = 8 * i;
    uint64_t v19 = *(void *)(*(void *)(a3 + 56) + v18);
    v20[0] = *(void *)(*(void *)(a3 + 48) + v18);
    v20[1] = v19;
    swift_retain();
    a1(v20);
    if (v3)
    {
      swift_release();
      return swift_release();
    }
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v10) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    if (!v16) {
      break;
    }
LABEL_17:
    unint64_t v9 = (v16 - 1) & v16;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_16:
    int64_t v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v10) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100FD5DF0(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a1;
  uint64_t v28 = sub_1005057FC(&qword_101679180);
  __chkstk_darwin(v28, v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v12 = *(void *)(a3 + 64);
  uint64_t v26 = a3 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v27 = (unint64_t)(v13 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  while (v15)
  {
    unint64_t v18 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v19 = v18 | (v17 << 6);
LABEL_5:
    uint64_t v20 = *(void *)(a3 + 48);
    uint64_t v21 = type metadata accessor for UUID();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v11, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v19, v21);
    *(void *)&v11[*(int *)(v28 + 48)] = *(void *)(*(void *)(a3 + 56) + 8 * v19);
    sub_10051B3EC((uint64_t)v11, (uint64_t)v7, &qword_101679180);
    swift_retain();
    v29(v7);
    uint64_t result = sub_100522F00((uint64_t)v7, &qword_101679180);
    if (v3) {
      return swift_release();
    }
  }
  if (__OFADD__(v17++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v17 >= v27) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v26 + 8 * v17);
  if (v23)
  {
LABEL_19:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v19 = __clz(__rbit64(v23)) + (v17 << 6);
    goto LABEL_5;
  }
  int64_t v24 = v17 + 1;
  if (v17 + 1 >= v27) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23) {
    goto LABEL_18;
  }
  int64_t v24 = v17 + 2;
  if (v17 + 2 >= v27) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23) {
    goto LABEL_18;
  }
  int64_t v24 = v17 + 3;
  if (v17 + 3 >= v27) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23) {
    goto LABEL_18;
  }
  int64_t v24 = v17 + 4;
  if (v17 + 4 >= v27) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23)
  {
LABEL_18:
    int64_t v17 = v24;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v17 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v17 >= v27) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v26 + 8 * v17);
    ++v24;
    if (v23) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100FD609C(void (*a1)(void *), uint64_t a2)
{
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  uint64_t v44 = type metadata accessor for IndexSet.Index();
  uint64_t v3 = *(void *)(v44 - 8);
  __chkstk_darwin(v44, v4);
  int64_t v46 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v50 = (char *)&v35 - v8;
  uint64_t v9 = type metadata accessor for IndexSet();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_101689838);
  uint64_t v15 = v14 - 8;
  __n128 v17 = __chkstk_darwin(v14, v16);
  unint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v37(v13, v2, v9, v17);
  sub_100FEF54C((unint64_t *)&unk_10168A9B0, (void (*)(uint64_t))&type metadata accessor for IndexSet);
  unint64_t v38 = v13;
  dispatch thunk of Sequence.makeIterator()();
  uint64_t v20 = *(int *)(v15 + 44);
  uint64_t v45 = v19;
  uint64_t v21 = &v19[v20];
  id v22 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v47 = v3 + 16;
  uint64_t v42 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v43 = v22;
  uint64_t v39 = v10 + 16;
  uint64_t v36 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v24 = v44;
  uint64_t v23 = (uint64_t)v45;
  while (1)
  {
    v43(v50, v21, v24);
    sub_100FEF54C(&qword_101689840, (void (*)(uint64_t))&type metadata accessor for IndexSet);
    uint64_t v25 = v21;
    uint64_t v26 = v46;
    dispatch thunk of Collection.endIndex.getter();
    sub_100FEF54C(&qword_10168A9C0, (void (*)(uint64_t))&type metadata accessor for IndexSet.Index);
    char v27 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v28 = *v42;
    (*v42)(v26, v24);
    v28(v50, v24);
    if (v27) {
      break;
    }
    uint64_t v21 = v25;
    uint64_t v29 = (void (*)(void *, void))dispatch thunk of Collection.subscript.read();
    uint64_t v31 = *v30;
    v29(v49, 0);
    uint64_t v32 = v38;
    ((void (*)(char *, uint64_t, uint64_t))v37)(v38, v23, v9);
    dispatch thunk of Collection.formIndex(after:)();
    (*v36)(v32, v9);
    v49[0] = v31;
    uint64_t v33 = v48;
    v40(v49);
    if (v33) {
      break;
    }
    uint64_t v48 = 0;
  }
  return sub_100522F00(v23, &qword_101689838);
}

uint64_t sub_100FD64C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _ConditionalContent.Storage();
  __n128 v6 = __chkstk_darwin(v4, v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(a2 - 8) + 16))((char *)&v9 - v7, a1, a2, v6);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_100FD65BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for _ConditionalContent.Storage();
  __n128 v7 = __chkstk_darwin(v5, v6);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(a3 - 8) + 16))((char *)&v10 - v8, a1, a3, v7);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_100FD66B4()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100FD66D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100FEF788(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_100FD6704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = static HorizontalAlignment.center.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v4 = sub_1005057FC(&qword_1016A6570);
  return sub_100FD6750(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_100FD6750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v3 = sub_1005057FC(&qword_1016A6578);
  __chkstk_darwin(v3 - 8, v4);
  unsigned int v53 = &v44[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6, v7);
  uint64_t v51 = &v44[-v8];
  uint64_t v9 = type metadata accessor for EditMode();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v50 = &v44[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13, v14);
  uint64_t v16 = &v44[-v15];
  uint64_t v17 = type metadata accessor for CRLScenesListUI_i(0);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17, v19);
  uint64_t v21 = &v44[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v22, v23);
  uint64_t v48 = &v44[-v24];
  swift_unknownObjectWeakLoadStrong();
  uint64_t v25 = *(void *)(a1 + 8);
  uint64_t v26 = *(void **)(a1 + 24);
  uint64_t v27 = *(void *)(a1 + 40);
  LOBYTE(v54) = *(unsigned char *)(a1 + 32);
  uint64_t v55 = v27;
  id v28 = v26;
  uint64_t v49 = sub_1005057FC(&qword_101695310);
  State.projectedValue.getter();
  uint64_t v46 = *((void *)&v56 + 1);
  uint64_t v47 = v56;
  int v45 = v57;
  (*(void (**)(unsigned char *, void, uint64_t))(v10 + 104))(v16, enum case for EditMode.inactive(_:), v9);
  v21[1] = v25;
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  type metadata accessor for CRLScenesPopoverState();
  sub_100FEF54C(&qword_10169FB80, (void (*)(uint64_t))type metadata accessor for CRLScenesPopoverState);
  _OWORD v21[2] = ObservedObject.init(wrappedValue:)();
  v21[3] = v29;
  uint64_t v54 = &_swiftEmptySetSingleton;
  sub_1005057FC(&qword_10169FB88);
  State.init(wrappedValue:)();
  uint64_t v30 = *((void *)&v56 + 1);
  v21[4] = v56;
  v21[5] = v30;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v50, v16, v9);
  State.init(wrappedValue:)();
  uint64_t v31 = v9;
  uint64_t v32 = (uint64_t)v48;
  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v16, v31);
  uint64_t v33 = *(int *)(v18 + 40);
  uint64_t v54 = 0;
  sub_1005057FC(&qword_10169FB90);
  State.init(wrappedValue:)();
  *(_OWORD *)((char *)v21 + v33) = v56;
  uint64_t v34 = (char *)v21 + *(int *)(v18 + 44);
  uint64_t v35 = v46;
  *(void *)uint64_t v34 = v47;
  *((void *)v34 + 1) = v35;
  v34[16] = v45;
  sub_100FF2E0C((uint64_t)v21, v32, type metadata accessor for CRLScenesListUI_i);
  uint64_t v36 = *(void *)(a1 + 40);
  LOBYTE(v56) = *(unsigned char *)(a1 + 32);
  *((void *)&v56 + 1) = v36;
  State.wrappedValue.getter();
  if (v54 == 1)
  {
    uint64_t v37 = (uint64_t)v51;
    Divider.init()();
    uint64_t v38 = type metadata accessor for Divider();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v37, 0, 1, v38);
  }
  else
  {
    uint64_t v39 = type metadata accessor for Divider();
    uint64_t v37 = (uint64_t)v51;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v51, 1, 1, v39);
  }
  sub_100FF2DA0(v32, (uint64_t)v21, type metadata accessor for CRLScenesListUI_i);
  uint64_t v40 = v53;
  sub_100522E9C(v37, (uint64_t)v53, &qword_1016A6578);
  uint64_t v41 = v52;
  sub_100FF2DA0((uint64_t)v21, v52, type metadata accessor for CRLScenesListUI_i);
  uint64_t v42 = sub_1005057FC(qword_1016A6580);
  sub_100522E9C((uint64_t)v40, v41 + *(int *)(v42 + 48), &qword_1016A6578);
  sub_100522F00(v37, &qword_1016A6578);
  sub_100FF38E8(v32, type metadata accessor for CRLScenesListUI_i);
  sub_100522F00((uint64_t)v40, &qword_1016A6578);
  return sub_100FF38E8((uint64_t)v21, type metadata accessor for CRLScenesListUI_i);
}

uint64_t sub_100FD6C48()
{
  return NavigationStack.init<>(root:)();
}

uint64_t sub_100FD6CDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLScenesListUI_i(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for EditMode();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005057FC(&qword_1016A5C48);
  State.wrappedValue.getter();
  char v11 = EditMode.isEditing.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  sub_100FF2DA0(v1, (uint64_t)v5, type metadata accessor for CRLScenesListUI_i);
  if ((v11 & 1) == 0)
  {
    long long v14 = *(_OWORD *)&v5[*(int *)(v2 + 32)];
    sub_1005057FC(&qword_1016A5F70);
    State.wrappedValue.getter();
    if (!v15)
    {
      uint64_t v12 = 0;
      goto LABEL_6;
    }
  }
  uint64_t v12 = 1;
LABEL_6:
  sub_100FF38E8((uint64_t)v5, type metadata accessor for CRLScenesListUI_i);
  return v12;
}

uint64_t sub_100FD6EA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v154 = a1;
  uint64_t v3 = sub_1005057FC(&qword_10169D6D0);
  __chkstk_darwin(v3 - 8, v4);
  v153 = (char *)&v118 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v139 = *(void *)(v140 - 8);
  __chkstk_darwin(v140, v6);
  long long v138 = (char *)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = type metadata accessor for CRLScenesListUI_i(0);
  uint64_t v161 = *(void *)(v145 - 8);
  __chkstk_darwin(v145, v8);
  uint64_t v160 = v9;
  uint64_t v155 = (uint64_t)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = type metadata accessor for ContentMarginPlacement();
  uint64_t v122 = *(void *)(v159 - 8);
  __chkstk_darwin(v159, v10);
  uint64_t v12 = (char *)&v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_1016A5D58);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v118 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_1005057FC(&qword_1016A66B8);
  uint64_t v121 = *(void *)(v119 - 8);
  __chkstk_darwin(v119, v18);
  uint64_t v20 = (char *)&v118 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_1005057FC(&qword_1016A66C0);
  uint64_t v123 = *(void *)(v124 - 8);
  __chkstk_darwin(v124, v21);
  uint64_t v23 = (char *)&v118 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_1005057FC(&qword_1016A66C8);
  uint64_t v125 = *(void *)(v127 - 8);
  __chkstk_darwin(v127, v24);
  unint64_t v120 = (char *)&v118 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_1005057FC(&qword_1016A66D0);
  uint64_t v128 = *(void *)(v130 - 8);
  __chkstk_darwin(v130, v26);
  uint64_t v126 = (char *)&v118 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_1005057FC(&qword_1016A66D8);
  uint64_t v133 = *(void *)(v134 - 8);
  __chkstk_darwin(v134, v28);
  uint64_t v131 = (char *)&v118 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_1005057FC(&qword_1016A66E0);
  uint64_t v135 = *(void *)(v136 - 8);
  __chkstk_darwin(v136, v30);
  uint64_t v132 = (char *)&v118 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_1005057FC(&qword_1016A66E8);
  __chkstk_darwin(v129, v32);
  long long v137 = (char *)&v118 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_1005057FC(&qword_1016A66F0);
  __chkstk_darwin(v157, v34);
  long long v141 = (char *)&v118 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = sub_1005057FC(&qword_1016A66F8);
  uint64_t v143 = *(void *)(v144 - 8);
  __chkstk_darwin(v144, v36);
  long long v142 = (char *)&v118 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_1005057FC(&qword_1016A6700);
  __chkstk_darwin(v158, v38);
  uint64_t v146 = (char *)&v118 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1005057FC(&qword_1016A6708);
  uint64_t v151 = *(void *)(v40 - 8);
  uint64_t v152 = v40;
  __chkstk_darwin(v40, v41);
  uint64_t v149 = (char *)&v118 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_1005057FC(&qword_1016A6710);
  uint64_t v148 = *(void *)(v150 - 8);
  __chkstk_darwin(v150, v43);
  uint64_t v147 = (char *)&v118 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = (void *)v2;
  uint64_t v162 = v2;
  sub_1005057FC(&qword_1016A5D90);
  sub_100FE1558();
  List<>.init(content:)();
  static Edge.Set.horizontal.getter();
  if (qword_10166F5F8 != -1) {
    swift_once();
  }
  static ContentMarginPlacement.scrollContent.getter();
  uint64_t v45 = sub_100523288(&qword_1016A5D50, &qword_1016A5D58);
  View.contentMargins(_:_:for:)();
  uint64_t v46 = *(void (**)(char *, uint64_t))(v122 + 8);
  uint64_t v47 = v159;
  v46(v12, v159);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  static Edge.Set.vertical.getter();
  static ContentMarginPlacement.scrollContent.getter();
  unint64_t v163 = v13;
  v164 = (void *)v45;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v49 = v119;
  View.contentMargins(_:_:for:)();
  v46(v12, v47);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v20, v49);
  uint64_t v51 = v155;
  uint64_t v50 = (uint64_t)v156;
  sub_100FF2DA0((uint64_t)v156, v155, type metadata accessor for CRLScenesListUI_i);
  uint64_t v52 = *(unsigned __int8 *)(v161 + 80);
  uint64_t v53 = (v52 + 16) & ~v52;
  uint64_t v159 = v52 | 7;
  v160 += v53;
  uint64_t v54 = swift_allocObject();
  uint64_t v161 = v53;
  sub_100FF2E0C(v51, v54 + v53, type metadata accessor for CRLScenesListUI_i);
  unint64_t v163 = v49;
  v164 = (void *)OpaqueTypeConformance2;
  uint64_t v55 = swift_getOpaqueTypeConformance2();
  long long v56 = v120;
  uint64_t v57 = v124;
  View.onScrollGeometryChange<A>(for:of:action:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v123 + 8))(v23, v57);
  uint64_t v58 = *(void **)(v50 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  id v59 = v58;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  unint64_t v60 = v57;
  if (v163 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v61 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v61 = *(void *)((v163 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v61)
  {
    id v62 = [self mainBundle];
    NSString v63 = String._bridgeToObjectiveC()();
    NSString v64 = String._bridgeToObjectiveC()();
    id v65 = [v62 localizedStringForKey:v63 value:v64 table:0];

    uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v68 = v67;
  }
  else
  {
    uint64_t v66 = 0;
    unint64_t v68 = 0xE000000000000000;
  }
  uint64_t v167 = v66;
  unint64_t v168 = v68;
  unint64_t v163 = v60;
  v164 = &type metadata for Bool;
  unint64_t v165 = v55;
  v166 = &protocol witness table for Bool;
  uint64_t v69 = swift_getOpaqueTypeConformance2();
  unint64_t v70 = sub_10052E310();
  uint64_t v71 = v126;
  uint64_t v72 = v127;
  View.navigationTitle<A>(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v125 + 8))(v56, v72);
  uint64_t v73 = v139;
  unint64_t v74 = v138;
  uint64_t v75 = v140;
  (*(void (**)(char *, void, uint64_t))(v139 + 104))(v138, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v140);
  unint64_t v163 = v72;
  v164 = &type metadata for String;
  unint64_t v165 = v69;
  v166 = (void *)v70;
  uint64_t v76 = swift_getOpaqueTypeConformance2();
  long long v77 = v131;
  uint64_t v78 = v130;
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v75);
  uint64_t v79 = (*(uint64_t (**)(char *, uint64_t))(v128 + 8))(v71, v78);
  __chkstk_darwin(v79, v80);
  long long v81 = v156;
  sub_1005057FC(&qword_1016A6718);
  unint64_t v163 = v78;
  v164 = (void *)v76;
  swift_getOpaqueTypeConformance2();
  uint64_t v82 = sub_100522D34(&qword_1016A6720);
  unint64_t v83 = sub_100FF5B94();
  unint64_t v163 = v82;
  v164 = (void *)v83;
  swift_getOpaqueTypeConformance2();
  long long v84 = v132;
  uint64_t v85 = v134;
  View.toolbar<A>(content:)();
  (*(void (**)(char *, uint64_t))(v133 + 8))(v77, v85);
  uint64_t v86 = static Alignment.center.getter();
  uint64_t v88 = v87;
  uint64_t v89 = (uint64_t)v137;
  uint64_t v90 = (uint64_t)&v137[*(int *)(v129 + 36)];
  sub_100FDAF6C((uint64_t)v81, v90);
  long long v91 = (uint64_t *)(v90 + *(int *)(sub_1005057FC(&qword_1016A6740) + 36));
  *long long v91 = v86;
  v91[1] = v88;
  (*(void (**)(uint64_t, char *, uint64_t))(v135 + 32))(v89, v84, v136);
  uint64_t KeyPath = swift_getKeyPath();
  sub_1005057FC(&qword_1016A5C48);
  uint64_t v93 = (uint64_t)v153;
  State.projectedValue.getter();
  uint64_t v94 = sub_1005057FC(&qword_1016A5E28);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v93, 0, 1, v94);
  uint64_t v95 = (uint64_t)v141;
  uint64_t v96 = (uint64_t *)&v141[*(int *)(v157 + 36)];
  uint64_t v97 = sub_1005057FC(&qword_1016A5D80);
  sub_100522E9C(v93, (uint64_t)v96 + *(int *)(v97 + 28), &qword_10169D6D0);
  *uint64_t v96 = KeyPath;
  sub_100522E9C(v89, v95, &qword_1016A66E8);
  sub_100522F00(v93, &qword_10169D6D0);
  sub_100522F00(v89, &qword_1016A66E8);
  uint64_t v98 = (void *)v81[5];
  unint64_t v163 = v81[4];
  v164 = v98;
  sub_1005057FC(&qword_1016A6000);
  State.wrappedValue.getter();
  uint64_t v99 = v155;
  sub_100FF2DA0((uint64_t)v81, v155, type metadata accessor for CRLScenesListUI_i);
  uint64_t v100 = swift_allocObject();
  uint64_t v101 = v161;
  sub_100FF2E0C(v99, v100 + v161, type metadata accessor for CRLScenesListUI_i);
  sub_1005057FC(&qword_10169FB88);
  sub_100FF5DB0();
  sub_100523288(&qword_1016A61F0, &qword_10169FB88);
  uint64_t v102 = v142;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100522F00(v95, &qword_1016A66F0);
  sub_100FF2DA0((uint64_t)v81, v99, type metadata accessor for CRLScenesListUI_i);
  uint64_t v103 = swift_allocObject();
  sub_100FF2E0C(v99, v103 + v101, type metadata accessor for CRLScenesListUI_i);
  uint64_t v104 = v143;
  uint64_t v105 = (uint64_t)v146;
  uint64_t v106 = v144;
  (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v146, v102, v144);
  long long v107 = (void *)(v105 + *(int *)(v158 + 36));
  *long long v107 = 0;
  v107[1] = 0;
  v107[2] = sub_100FF60DC;
  v107[3] = v103;
  (*(void (**)(char *, uint64_t))(v104 + 8))(v102, v106);
  long long v108 = (void *)v81[3];
  swift_getKeyPath();
  swift_getKeyPath();
  id v109 = v108;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  sub_100FF2DA0((uint64_t)v81, v99, type metadata accessor for CRLScenesListUI_i);
  uint64_t v110 = swift_allocObject();
  sub_100FF2E0C(v99, v110 + v161, type metadata accessor for CRLScenesListUI_i);
  unint64_t v111 = sub_100FF6178();
  v112 = v149;
  uint64_t v113 = v158;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100522F00(v105, &qword_1016A6700);
  LOBYTE(v167) = sub_100FD6CDC() & 1;
  sub_100FF2DA0((uint64_t)v81, v99, type metadata accessor for CRLScenesListUI_i);
  uint64_t v114 = swift_allocObject();
  sub_100FF2E0C(v99, v114 + v161, type metadata accessor for CRLScenesListUI_i);
  unint64_t v163 = v113;
  v164 = &type metadata for Bool;
  unint64_t v165 = v111;
  v166 = &protocol witness table for Bool;
  swift_getOpaqueTypeConformance2();
  long long v115 = v147;
  uint64_t v116 = v152;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v151 + 8))(v112, v116);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v148 + 32))(v154, v115, v150);
}

uint64_t sub_100FD82E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v3 = type metadata accessor for CRLScenesListUI_i(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8, v6);
  uint64_t v45 = sub_1005057FC(&qword_1016A5DD8);
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin(v45, v7);
  uint64_t v40 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1005057FC(&qword_1016A5DC8) - 8;
  __chkstk_darwin(v42, v9);
  uint64_t v41 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1005057FC(&qword_1016A5DB8) - 8;
  __chkstk_darwin(v46, v11);
  uint64_t v44 = (uint64_t)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1005057FC(&qword_1016A5DA8) - 8;
  __chkstk_darwin(v48, v13);
  uint64_t v47 = (uint64_t)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void **)(a1 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  id v16 = v15;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  v39[3] = swift_getKeyPath();
  sub_100FF2DA0(a1, (uint64_t)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLScenesListUI_i);
  uint64_t v17 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v18 = (v17 + 16) & ~v17;
  uint64_t v50 = v18;
  v39[1] = v18 + v5;
  v39[2] = v17 | 7;
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100FF2E0C((uint64_t)v20, v19 + v18, type metadata accessor for CRLScenesListUI_i);
  sub_1005057FC(&qword_10168A520);
  type metadata accessor for CRLSceneRowItemUI_i(0);
  sub_100523288(&qword_1016A5FE0, &qword_10168A520);
  sub_100FEF54C(&qword_10169FA90, (void (*)(uint64_t))type metadata accessor for CRLSceneInfo);
  sub_100FEF54C(&qword_1016A5DE0, (void (*)(uint64_t))type metadata accessor for CRLSceneRowItemUI_i);
  uint64_t v21 = v40;
  ForEach<>.init(_:id:content:)();
  sub_100FF2DA0(a1, (uint64_t)v20, type metadata accessor for CRLScenesListUI_i);
  uint64_t v22 = swift_allocObject();
  sub_100FF2E0C((uint64_t)v20, v22 + v50, type metadata accessor for CRLScenesListUI_i);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_100FF651C;
  *(void *)(v23 + 24) = v22;
  uint64_t v24 = v43;
  uint64_t v25 = (uint64_t)v41;
  uint64_t v26 = v45;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v41, v21, v45);
  uint64_t v27 = (void *)(v25 + *(int *)(v42 + 44));
  *uint64_t v27 = sub_100FF683C;
  v27[1] = v23;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v26);
  sub_100FF2DA0(a1, (uint64_t)v20, type metadata accessor for CRLScenesListUI_i);
  uint64_t v28 = swift_allocObject();
  sub_100FF2E0C((uint64_t)v20, v28 + v50, type metadata accessor for CRLScenesListUI_i);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_100FF661C;
  *(void *)(v29 + 24) = v28;
  uint64_t v30 = v44;
  sub_100522E9C(v25, v44, &qword_1016A5DC8);
  uint64_t v31 = (uint64_t (**)())(v30 + *(int *)(v46 + 44));
  *uint64_t v31 = sub_100FF6844;
  v31[1] = (uint64_t (*)())v29;
  sub_100522F00(v25, &qword_1016A5DC8);
  uint64_t v32 = *(void **)(a1 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  id v33 = v32;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  LOBYTE(v29) = v51;
  uint64_t v34 = v47;
  sub_100522E9C(v30, v47, &qword_1016A5DB8);
  *(unsigned char *)(v34 + *(int *)(v48 + 44)) = v29;
  sub_100522F00(v30, &qword_1016A5DB8);
  uint64_t v35 = *(void **)(a1 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  id v36 = v35;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  LOBYTE(v28) = v51;
  uint64_t v37 = v49;
  sub_100522E9C(v34, v49, &qword_1016A5DA8);
  *(unsigned char *)(v37 + *(int *)(sub_1005057FC(&qword_1016A5D90) + 36)) = v28;
  return sub_100522F00(v34, &qword_1016A5DA8);
}

uint64_t sub_100FD8980@<X0>(void **a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  id v33 = a3;
  uint64_t v5 = sub_1005057FC(&qword_1016A5FF0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1005057FC(&qword_101684770);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (uint64_t *)((char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_1005057FC(&qword_1016A5FF8);
  __chkstk_darwin(v13 - 8, v14);
  id v16 = (uint64_t *)((char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *a1;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v31 = a2[1];
  uint64_t v32 = Strong;
  uint64_t v19 = (void *)a2[3];
  uint64_t v20 = a2[5];
  *(void *)&long long v34 = a2[4];
  *((void *)&v34 + 1) = v20;
  id v21 = v17;
  id v22 = v19;
  sub_1005057FC(&qword_1016A6000);
  State.projectedValue.getter();
  long long v23 = v35;
  uint64_t v24 = v36;
  long long v34 = *(_OWORD *)((char *)a2 + *(int *)(type metadata accessor for CRLScenesListUI_i(0) + 32));
  sub_1005057FC(&qword_1016A5F70);
  State.projectedValue.getter();
  long long v30 = v35;
  uint64_t v25 = v36;
  *id v16 = swift_getKeyPath();
  sub_1005057FC(&qword_10169D6C8);
  swift_storeEnumTagMultiPayload();
  *uint64_t v12 = swift_getKeyPath();
  sub_1005057FC(&qword_101684750);
  swift_storeEnumTagMultiPayload();
  *uint64_t v8 = swift_getKeyPath();
  sub_1005057FC(&qword_10169D6D8);
  swift_storeEnumTagMultiPayload();
  char v26 = FocusState.init<>()();
  return sub_100FD8C14((uint64_t)v21, v31, (uint64_t)v16, (uint64_t)v12, (uint64_t)v8, v23, v33, *((uint64_t *)&v23 + 1), v24, v30, v25, 0, 0, 0xE000000000000000, 1, v26 & 1, v28, v27 & 1);
}

uint64_t sub_100FD8C14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, void *a7@<X8>, uint64_t a8, uint64_t a9, long long a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int16 a15, char a16, uint64_t a17, char a18)
{
  *a7 = a1;
  a7[2] = a2;
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  type metadata accessor for CRLScenesPopoverState();
  sub_100FEF54C(&qword_10169FB80, (void (*)(uint64_t))type metadata accessor for CRLScenesPopoverState);
  a7[3] = ObservedObject.init(wrappedValue:)();
  a7[4] = v22;
  long long v23 = (int *)type metadata accessor for CRLSceneRowItemUI_i(0);
  sub_10051B3EC(a3, (uint64_t)a7 + v23[7], &qword_1016A5FF8);
  sub_10051B3EC(a4, (uint64_t)a7 + v23[8], &qword_101684770);
  sub_10051B3EC(a5, (uint64_t)a7 + v23[9], &qword_1016A5FF0);
  uint64_t v24 = (void *)((char *)a7 + v23[10]);
  *uint64_t v24 = a6;
  v24[1] = a8;
  v24[2] = a9;
  uint64_t v25 = (char *)a7 + v23[11];
  *(_OWORD *)uint64_t v25 = a10;
  *((void *)v25 + 2) = a11;
  uint64_t v26 = v23[12];
  sub_1005057FC(&qword_1016A6008);
  State.init(wrappedValue:)();
  *(_OWORD *)((char *)a7 + v26) = v33;
  char v27 = (char *)a7 + v23[13];
  State.init(wrappedValue:)();
  *(_OWORD *)char v27 = v33;
  *((void *)v27 + 2) = v34;
  uint64_t v28 = (char *)a7 + v23[14];
  State.init(wrappedValue:)();
  *uint64_t v28 = v33;
  *((void *)v28 + 1) = *((void *)&v33 + 1);
  uint64_t v29 = (char *)a7 + v23[15];
  State.init(wrappedValue:)();
  *uint64_t v29 = v33;
  *((void *)v29 + 1) = *((void *)&v33 + 1);
  long long v30 = (char *)a7 + v23[16];
  *long long v30 = a16;
  *((void *)v30 + 1) = a17;
  unsigned char v30[16] = a18;
  return AccessibilityFocusState.init<>()();
}

uint64_t sub_100FD8E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void **)(a3 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v3;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  sub_1005057FC(&qword_10168A520);
  sub_100523288(&qword_1016A5FE8, &qword_10168A520);
  MutableCollection.move(fromOffsets:toOffset:)();
  if (!swift_unknownObjectWeakLoadStrong()) {
    return swift_bridgeObjectRelease();
  }
  sub_100E6B6B0(v6);
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_100FD8FBC(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    __chkstk_darwin(result, v4);
    v7[2] = a2;
    v7[3] = v5;
    v7[4] = v6;
    sub_100FD609C(sub_100FF668C, (uint64_t)v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_100FD9058(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void **)(a2 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v3;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v2 >= v5)
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = &type metadata for Int;
    *(void *)(inited + 64) = &protocol witness table for Int;
    *(void *)(inited + 32) = v2;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"body", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLScenesListUI_i.swift", 87, 2, 76, (uint64_t)"Tried to delete scene at invalid index: %d", 42, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"body", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLScenesListUI_i.swift", 87, 2, 76);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v6 = v4;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    if ((v12 & 0xC000000000000001) != 0)
    {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_8;
    }
    if (v2 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v2 < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v7 = *(id *)(v12 + 8 * v2 + 32);
LABEL_8:
      uint64_t v8 = v7;
      swift_bridgeObjectRelease();
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v9 = swift_initStackObject();
      *(_OWORD *)(v9 + 16) = xmmword_101177E70;
      *(void *)(v9 + 32) = v8;
      unint64_t v13 = v9;
      specialized Array._endMutation()();
      id v10 = v8;
      sub_100E6B0B8(v13);
      swift_bridgeObjectRelease();

      return;
    }
    __break(1u);
  }
}

uint64_t sub_100FD931C@<X0>(BOOL *a1@<X8>)
{
  ScrollGeometry.contentSize.getter();
  double v3 = v2;
  ScrollGeometry.bounds.getter();
  double v4 = v3 - CGRectGetHeight(v7);
  uint64_t result = ScrollGeometry.contentOffset.getter();
  *a1 = v6 + 1.0 < v4;
  return result;
}

unsigned __int8 *sub_100FD9374(unsigned __int8 *result, unsigned __int8 *a2)
{
  if (*result != *a2)
  {
    type metadata accessor for CRLScenesListUI_i(0);
    sub_1005057FC(&qword_1016A67B0);
    return (unsigned __int8 *)Binding.wrappedValue.setter();
  }
  return result;
}

uint64_t sub_100FD93EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v67 = sub_1005057FC(&qword_1016A6780);
  __chkstk_darwin(v67, v3);
  uint64_t v69 = (uint64_t)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1005057FC(&qword_1016A5E50);
  uint64_t v63 = *(void *)(v66 - 8);
  __chkstk_darwin(v66, v5);
  id v62 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_1016A5E58);
  __chkstk_darwin(v7 - 8, v8);
  id v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  unint64_t v68 = (char *)&v60 - v13;
  uint64_t v14 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v14 - 8, v15);
  NSString v64 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC(&qword_1016A6788);
  uint64_t v61 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1005057FC(&qword_1016A6790);
  __chkstk_darwin(v21 - 8, v22);
  uint64_t v24 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v26);
  id v65 = (char *)&v60 - v27;
  uint64_t v71 = sub_1005057FC(&qword_1016A6720);
  __chkstk_darwin(v71, v28);
  long long v30 = (char *)&v60 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31, v32);
  uint64_t v34 = (char *)&v60 - v33;
  long long v35 = *(void **)(a1 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  id v36 = v35;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if ((unint64_t)v72 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v37 = *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v37)
  {
    long long v72 = *(_OWORD *)(a1 + *(int *)(type metadata accessor for CRLScenesListUI_i(0) + 32));
    sub_1005057FC(&qword_1016A5F70);
    State.wrappedValue.getter();
    if (v73)
    {

      uint64_t v38 = sub_1005057FC(&qword_1016A67A8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v24, 1, 1, v38);
      uint64_t v39 = sub_100523288(&qword_1016A67A0, &qword_1016A6788);
      *(void *)&long long v72 = v17;
      *((void *)&v72 + 1) = v39;
      swift_getOpaqueTypeConformance2();
      uint64_t v40 = (uint64_t)v65;
      static ToolbarContentBuilder.buildIf<A>(_:)();
      sub_100522F00((uint64_t)v24, &qword_1016A6790);
    }
    else
    {
      uint64_t v42 = static ToolbarItemPlacement.topBarLeading.getter();
      uint64_t v60 = (uint64_t)&v60;
      __chkstk_darwin(v42, v43);
      *(&v60 - 2) = a1;
      sub_1005057FC(&qword_1016A5EE0);
      sub_100FF6304();
      ToolbarItem<>.init(placement:content:)();
      uint64_t v44 = sub_100523288(&qword_1016A67A0, &qword_1016A6788);
      static ToolbarContentBuilder.buildBlock<A>(_:)();
      uint64_t v45 = sub_1005057FC(&qword_1016A67A8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v24, 0, 1, v45);
      *(void *)&long long v72 = v17;
      *((void *)&v72 + 1) = v44;
      swift_getOpaqueTypeConformance2();
      uint64_t v40 = (uint64_t)v65;
      static ToolbarContentBuilder.buildIf<A>(_:)();
      sub_100522F00((uint64_t)v24, &qword_1016A6790);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v20, v17);
    }
    uint64_t v46 = *(void **)(a1 + 24);
    swift_getKeyPath();
    swift_getKeyPath();
    id v47 = v46;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    uint64_t v48 = (uint64_t)v68;
    if (v72)
    {
      uint64_t v49 = sub_1005057FC(&qword_1016A5E80);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v10, 1, 1, v49);
      uint64_t v50 = sub_100523288(&qword_1016A5E78, &qword_1016A5E50);
      *(void *)&long long v72 = v66;
      *((void *)&v72 + 1) = v50;
      swift_getOpaqueTypeConformance2();
      static ToolbarContentBuilder.buildIf<A>(_:)();
      sub_100522F00((uint64_t)v10, &qword_1016A5E58);
    }
    else
    {
      uint64_t v51 = static ToolbarItemPlacement.topBarTrailing.getter();
      __chkstk_darwin(v51, v52);
      *(&v60 - 2) = a1;
      sub_1005057FC(&qword_1016A5E60);
      sub_100FEF444();
      uint64_t v53 = v62;
      ToolbarItem<>.init(placement:content:)();
      uint64_t v54 = sub_100523288(&qword_1016A5E78, &qword_1016A5E50);
      uint64_t v55 = v66;
      static ToolbarContentBuilder.buildBlock<A>(_:)();
      uint64_t v56 = sub_1005057FC(&qword_1016A5E80);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v10, 0, 1, v56);
      *(void *)&long long v72 = v55;
      *((void *)&v72 + 1) = v54;
      swift_getOpaqueTypeConformance2();
      static ToolbarContentBuilder.buildIf<A>(_:)();
      sub_100522F00((uint64_t)v10, &qword_1016A5E58);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v53, v55);
    }
    uint64_t v57 = v69 + *(int *)(v67 + 48);
    sub_100522E9C(v40, v69, &qword_1016A6790);
    sub_100522E9C(v48, v57, &qword_1016A5E58);
    TupleToolbarContent.init(_:)();
    uint64_t v58 = sub_1005057FC(&qword_1016A6738);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v30, 0, 1, v58);
    sub_100523288(&qword_1016A6730, &qword_1016A6738);
    static ToolbarContentBuilder.buildIf<A>(_:)();
    sub_100522F00((uint64_t)v30, &qword_1016A6720);
    sub_100522F00(v48, &qword_1016A5E58);
    sub_100522F00(v40, &qword_1016A6790);
  }
  else
  {
    uint64_t v41 = sub_1005057FC(&qword_1016A6738);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v30, 1, 1, v41);
    sub_100523288(&qword_1016A6730, &qword_1016A6738);
    static ToolbarContentBuilder.buildIf<A>(_:)();
    sub_100522F00((uint64_t)v30, &qword_1016A6720);
  }
  sub_100FF5B94();
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  return sub_100522F00((uint64_t)v34, &qword_1016A6720);
}

uint64_t sub_100FD9E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v3 = type metadata accessor for BorderlessButtonMenuStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  uint64_t v51 = v4;
  __chkstk_darwin(v3, v5);
  uint64_t v44 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1005057FC(&qword_1016A5EB8);
  uint64_t v49 = *(void *)(v46 - 8);
  __chkstk_darwin(v46, v7);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_1016A5EC0);
  uint64_t v47 = *(void *)(v10 - 8);
  uint64_t v48 = v10;
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_1016A5EC8);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1005057FC(&qword_1016A5ED0);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19, v21);
  uint64_t v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1005057FC(&qword_1016A5ED8);
  __chkstk_darwin(v45, v24);
  uint64_t v43 = (uint64_t)&v43 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = a1;
  sub_1005057FC(&qword_10167D880);
  sub_1005057FC(&qword_1016A5F18);
  sub_100523288(&qword_10167D878, &qword_10167D880);
  sub_100523288(&qword_1016A5F20, &qword_1016A5F18);
  Menu.init(content:label:)();
  uint64_t v26 = v44;
  BorderlessButtonMenuStyle.init()();
  sub_100523288(&qword_1016A5F28, &qword_1016A5EB8);
  sub_100FEF54C(&qword_1016A5F30, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonMenuStyle);
  uint64_t v27 = v46;
  uint64_t v28 = v50;
  View.menuStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v26, v28);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v9, v27);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = v47;
  uint64_t v30 = v48;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v18, v13, v48);
  uint64_t v32 = &v18[*(int *)(v15 + 44)];
  *(void *)uint64_t v32 = KeyPath;
  v32[8] = 2;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v30);
  sub_100522E9C((uint64_t)v18, (uint64_t)v23, &qword_1016A5EC8);
  *(_WORD *)&v23[*(int *)(v20 + 44)] = 257;
  sub_100522F00((uint64_t)v18, &qword_1016A5EC8);
  uint64_t v33 = static Color.accentColor.getter();
  uint64_t v34 = v43;
  sub_100522E9C((uint64_t)v23, v43, &qword_1016A5ED0);
  *(void *)(v34 + *(int *)(v45 + 36)) = v33;
  sub_100522F00((uint64_t)v23, &qword_1016A5ED0);
  id v35 = [self mainBundle];
  NSString v36 = String._bridgeToObjectiveC()();
  NSString v37 = String._bridgeToObjectiveC()();
  id v38 = [v35 localizedStringForKey:v36 value:v37 table:0];

  uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v41 = v40;

  uint64_t v54 = v39;
  uint64_t v55 = v41;
  sub_100FEF8AC();
  sub_10052E310();
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  return sub_100522F00(v34, &qword_1016A5ED8);
}

uint64_t sub_100FDA454@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  NSString v37 = a2;
  uint64_t v3 = type metadata accessor for CRLScenesListUI_i(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8, v6);
  uint64_t v7 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10167A598);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  NSString v36 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  id v35 = (char *)&v33 - v14;
  __chkstk_darwin(v15, v16);
  uint64_t v34 = (char *)&v33 - v17;
  __chkstk_darwin(v18, v19);
  id v38 = (char *)&v33 - v20;
  if (qword_10166F650 != -1) {
    swift_once();
  }
  uint64_t v39 = qword_10171B238;
  uint64_t v40 = unk_10171B240;
  sub_100FF2DA0(a1, (uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLScenesListUI_i);
  unint64_t v21 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v33 = a1;
  uint64_t v22 = swift_allocObject();
  sub_100FF2E0C((uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, type metadata accessor for CRLScenesListUI_i);
  sub_10052E310();
  swift_bridgeObjectRetain();
  Button<>.init<A>(_:action:)();
  if (qword_10166F660 != -1) {
    swift_once();
  }
  uint64_t v39 = qword_10171B258;
  uint64_t v40 = unk_10171B260;
  sub_100FF2DA0(v33, (uint64_t)v7, type metadata accessor for CRLScenesListUI_i);
  uint64_t v23 = swift_allocObject();
  sub_100FF2E0C((uint64_t)v7, v23 + v21, type metadata accessor for CRLScenesListUI_i);
  swift_bridgeObjectRetain();
  uint64_t v24 = v34;
  Button<>.init<A>(_:action:)();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v26 = v35;
  uint64_t v27 = v38;
  v25(v35, v38, v8);
  uint64_t v28 = v36;
  v25(v36, v24, v8);
  uint64_t v29 = v37;
  v25(v37, v26, v8);
  uint64_t v30 = sub_1005057FC(&qword_1016A5F68);
  v25(&v29[*(int *)(v30 + 48)], v28, v8);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v9 + 8);
  v31(v24, v8);
  v31(v27, v8);
  v31(v28, v8);
  return ((uint64_t (*)(char *, uint64_t))v31)(v26, v8);
}

uint64_t sub_100FDA888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v3 = type metadata accessor for EditMode();
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for EditButton();
  uint64_t v43 = *(void *)(v48 - 8);
  __chkstk_darwin(v48, v7);
  uint64_t v40 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1005057FC(&qword_1016A5F78);
  uint64_t v45 = *(void *)(v49 - 8);
  __chkstk_darwin(v49, v9);
  uint64_t v39 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v44 = (char *)&v39 - v13;
  uint64_t v46 = sub_1005057FC(&qword_1016A5F80);
  __chkstk_darwin(v46, v14);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for CRLScenesListUI_i(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __chkstk_darwin(v17, v20);
  uint64_t v47 = sub_1005057FC(&qword_10167A598);
  uint64_t v21 = *(void *)(v47 - 8);
  __chkstk_darwin(v47, v22);
  uint64_t v24 = (char *)&v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1;
  long long v51 = *(_OWORD *)(a1 + *(int *)(v17 + 32));
  sub_1005057FC(&qword_1016A5F70);
  State.wrappedValue.getter();
  id v26 = v52;

  if (v26)
  {
    sub_100FF2DA0(v25, (uint64_t)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLScenesListUI_i);
    unint64_t v27 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    uint64_t v28 = swift_allocObject();
    sub_100FF2E0C((uint64_t)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v28 + v27, type metadata accessor for CRLScenesListUI_i);
    Button.init(action:label:)();
    uint64_t v29 = v47;
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v16, v24, v47);
    swift_storeEnumTagMultiPayload();
    sub_100523288(&qword_10167A5A0, &qword_10167A598);
    uint64_t v30 = sub_100FEF54C(&qword_1016A5E70, (void (*)(uint64_t))&type metadata accessor for EditButton);
    *(void *)&long long v51 = v48;
    *((void *)&v51 + 1) = v30;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v24, v29);
  }
  else
  {
    uint64_t v32 = v40;
    EditButton.init()();
    sub_1005057FC(&qword_1016A5C48);
    State.wrappedValue.getter();
    EditMode.isEditing.getter();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v6, v42);
    uint64_t v33 = sub_100FEF54C(&qword_1016A5E70, (void (*)(uint64_t))&type metadata accessor for EditButton);
    uint64_t v34 = v39;
    uint64_t v35 = v48;
    View.bold(_:)();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v35);
    NSString v37 = v44;
    uint64_t v36 = v45;
    uint64_t v38 = v49;
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v44, v34, v49);
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v16, v37, v38);
    swift_storeEnumTagMultiPayload();
    sub_100523288(&qword_10167A5A0, &qword_10167A598);
    *(void *)&long long v51 = v35;
    *((void *)&v51 + 1) = v33;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v37, v38);
  }
}

uint64_t sub_100FDAF0C()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100FDAF6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CRLScenesListUI_i(0);
  uint64_t v46 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v46 + 64);
  __chkstk_darwin(v4 - 8, v6);
  uint64_t v47 = (uint64_t)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1005057FC(&qword_1016A6768);
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin(v45, v7);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1005057FC(&qword_1016A6770);
  __chkstk_darwin(v42, v10);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_1016A6778);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v44 = (uint64_t)&v41 - v20;
  uint64_t v48 = a1;
  uint64_t v21 = *(void **)(a1 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  id v22 = v21;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v51 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v23)
  {
    uint64_t v24 = 1;
  }
  else
  {
    uint64_t v41 = a2;
    if (qword_10166F620 != -1) {
      swift_once();
    }
    unint64_t v51 = qword_10171B1D8;
    uint64_t v52 = unk_10171B1E0;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    id v25 = v22;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    if (v49 == 1)
    {
      if (qword_10166F630 != -1) {
        swift_once();
      }
      id v26 = &qword_10171B1F8;
    }
    else
    {
      if (qword_10166F628 != -1) {
        swift_once();
      }
      id v26 = &qword_10171B1E8;
    }
    uint64_t v27 = *v26;
    uint64_t v28 = swift_bridgeObjectRetain();
    uint64_t v49 = v27;
    uint64_t v50 = v28;
    sub_10052E310();
    Text.init<A>(_:)();
    ContentUnavailableView<>.init<A>(_:image:description:)();
    if (qword_10166F5F0 != -1) {
      swift_once();
    }
    id v29 = (id)qword_10171B1A0;
    uint64_t v30 = Color.init(_:)();
    char v31 = static Edge.Set.all.getter();
    uint64_t v32 = v43;
    uint64_t v33 = v45;
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v12, v9, v45);
    uint64_t v34 = &v12[*(int *)(v42 + 36)];
    *(void *)uint64_t v34 = v30;
    v34[8] = v31;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v33);
    uint64_t v35 = v47;
    sub_100FF2DA0(v48, v47, type metadata accessor for CRLScenesListUI_i);
    unint64_t v36 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
    uint64_t v37 = swift_allocObject();
    sub_100FF2E0C(v35, v37 + v36, type metadata accessor for CRLScenesListUI_i);
    sub_100522E9C((uint64_t)v12, (uint64_t)v17, &qword_1016A6770);
    uint64_t v38 = (uint64_t (**)())&v17[*(int *)(v13 + 36)];
    *uint64_t v38 = sub_100FF62D0;
    v38[1] = (uint64_t (*)())v37;
    v38[2] = 0;
    v38[3] = 0;
    sub_100522F00((uint64_t)v12, &qword_1016A6770);
    uint64_t v39 = v44;
    sub_10051B3EC((uint64_t)v17, v44, &qword_1016A6778);
    a2 = v41;
    sub_10051B3EC(v39, v41, &qword_1016A6778);
    uint64_t v24 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a2, v24, 1, v13);
}

uint64_t sub_100FDB564(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EditMode();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v9 = __chkstk_darwin(v7, v8);
  uint64_t v11 = (char *)v14 - v10;
  (*(void (**)(char *, void, uint64_t, __n128))(v3 + 104))((char *)v14 - v10, enum case for EditMode.inactive(_:), v2, v9);
  uint64_t v12 = type metadata accessor for CRLScenesListUI_i(0);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v11, v2);
  sub_1005057FC(&qword_1016A5C48);
  State.wrappedValue.setter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
  long long v15 = *(_OWORD *)(a1 + *(int *)(v12 + 32));
  v14[1] = 0;
  sub_1005057FC(&qword_1016A5F70);
  return State.wrappedValue.setter();
}

uint64_t sub_100FDB6F4(uint64_t a1)
{
  uint64_t v1 = (char *)*(id *)(a1 + 24);
  sub_1005057FC(&qword_1016A6000);
  State.wrappedValue.getter();
  *(void *)&v1[OBJC_IVAR____TtC8Freeform21CRLScenesPopoverState_sceneInfosToDelete] = v3;

  return swift_bridgeObjectRelease();
}

uint64_t sub_100FDB768()
{
  uint64_t v0 = type metadata accessor for EditMode();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v7 = __chkstk_darwin(v5, v6);
  __n128 v9 = (char *)&v11 - v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v1 + 104))((char *)&v11 - v8, enum case for EditMode.inactive(_:), v0, v7);
  type metadata accessor for CRLScenesListUI_i(0);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v9, v0);
  sub_1005057FC(&qword_1016A5C48);
  State.wrappedValue.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v9, v0);
}

uint64_t sub_100FDB8BC(uint64_t a1)
{
  int v2 = sub_100FD6CDC() & 1;
  uint64_t v3 = *(void **)(a1 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v3;
  static Published.subscript.getter();

  swift_release();
  uint64_t result = swift_release();
  if (v2 != v7)
  {
    __chkstk_darwin(result, v6);
    static Animation.default.getter();
    withAnimation<A>(_:_:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_100FDB9C0(uint64_t a1)
{
  id v1 = *(id *)(a1 + 24);
  sub_100FD6CDC();
  swift_getKeyPath();
  swift_getKeyPath();
  return static Published.subscript.setter();
}

uint64_t sub_100FDBA48()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLCompactScenesListUI_i(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for EditMode();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005057FC(&qword_1016A5C48);
  State.wrappedValue.getter();
  char v11 = EditMode.isEditing.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  sub_100FF2DA0(v1, (uint64_t)v5, type metadata accessor for CRLCompactScenesListUI_i);
  if (v11)
  {
    sub_100FF38E8((uint64_t)v5, type metadata accessor for CRLCompactScenesListUI_i);
    return 1;
  }
  long long v14 = *(_OWORD *)&v5[*(int *)(v2 + 36)];
  sub_1005057FC(&qword_1016A5F70);
  State.wrappedValue.getter();
  uint64_t v12 = v15;
  sub_100FF38E8((uint64_t)v5, type metadata accessor for CRLCompactScenesListUI_i);
  if (v12)
  {

    return 1;
  }
  return 0;
}

uint64_t sub_100FDBC28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v114 = a2;
  uint64_t v104 = type metadata accessor for CRLCompactScenesListUI_i(0);
  uint64_t v107 = *(void *)(v104 - 8);
  __chkstk_darwin(v104, v3);
  uint64_t v108 = v4;
  uint64_t v116 = (uint64_t)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_10169D6D0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v106 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v98 = *(void *)(v99 - 8);
  __chkstk_darwin(v99, v8);
  uint64_t v97 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_1016A5D58);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  long long v14 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC(&qword_1016A5D40);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_1005057FC(&qword_1016A5D38);
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92, v19);
  uint64_t v21 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1005057FC(&qword_1016A5D28);
  uint64_t v94 = *(void *)(v96 - 8);
  __chkstk_darwin(v96, v22);
  uint64_t v93 = (char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1005057FC(&qword_1016A5D88);
  uint64_t v101 = *(void *)(v102 - 8);
  __chkstk_darwin(v102, v24);
  uint64_t v100 = (char *)&v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_1005057FC(&qword_1016A5D20);
  __chkstk_darwin(v95, v26);
  uint64_t v103 = (char *)&v90 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_1005057FC(&qword_1016A5D08);
  __chkstk_darwin(v117, v28);
  uint64_t v105 = (uint64_t)&v90 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1005057FC(&qword_1016A5D00);
  uint64_t v112 = *(void *)(v30 - 8);
  uint64_t v113 = v30;
  __chkstk_darwin(v30, v31);
  long long v115 = (char *)&v90 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1005057FC(&qword_1016A5CF8);
  uint64_t v110 = *(void *)(v33 - 8);
  uint64_t v111 = v33;
  __chkstk_darwin(v33, v34);
  id v109 = (char *)&v90 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = a1;
  sub_1005057FC(&qword_1016A5D90);
  sub_100FE1558();
  List<>.init(content:)();
  uint64_t v36 = static Alignment.center.getter();
  uint64_t v38 = v37;
  uint64_t v39 = (uint64_t)&v18[*(int *)(v15 + 36)];
  sub_100FDD614(a1, v39);
  uint64_t v40 = (uint64_t *)(v39 + *(int *)(sub_1005057FC(&qword_1016A5D68) + 36));
  *uint64_t v40 = v36;
  v40[1] = v38;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v14, v10);
  uint64_t v41 = *(void **)(a1 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  id v42 = v41;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v120 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v43 = *(void *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v43)
  {
    id v44 = [self mainBundle];
    NSString v45 = String._bridgeToObjectiveC()();
    NSString v46 = String._bridgeToObjectiveC()();
    id v47 = [v44 localizedStringForKey:v45 value:v46 table:0];

    uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v49 = v48;
  }
  else
  {
    unint64_t v49 = 0xE000000000000000;
  }
  unint64_t v120 = v43;
  uint64_t v121 = (void *)v49;
  unint64_t v50 = sub_100FE148C();
  unint64_t v51 = sub_10052E310();
  View.navigationTitle<A>(_:)();
  swift_bridgeObjectRelease();
  sub_100522F00((uint64_t)v18, &qword_1016A5D40);
  uint64_t v52 = v98;
  uint64_t v53 = v97;
  uint64_t v54 = v99;
  (*(void (**)(char *, void, uint64_t))(v98 + 104))(v97, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v99);
  unint64_t v120 = v15;
  uint64_t v121 = &type metadata for String;
  unint64_t v122 = v50;
  uint64_t v123 = (void *)v51;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v56 = v93;
  uint64_t v57 = v92;
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
  uint64_t v58 = (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v21, v57);
  __chkstk_darwin(v58, v59);
  *(&v90 - 2) = a1;
  sub_1005057FC(&qword_1016A5D30);
  unint64_t v120 = v57;
  uint64_t v121 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_100523288(&qword_1016A5D70, &qword_1016A5D30);
  uint64_t v60 = v100;
  uint64_t v61 = v96;
  View.toolbar<A>(content:)();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v56, v61);
  uint64_t KeyPath = swift_getKeyPath();
  sub_1005057FC(&qword_1016A5C48);
  uint64_t v63 = (uint64_t)v106;
  State.projectedValue.getter();
  uint64_t v64 = sub_1005057FC(&qword_1016A5E28);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v63, 0, 1, v64);
  uint64_t v65 = (uint64_t)v103;
  uint64_t v66 = (uint64_t *)&v103[*(int *)(v95 + 36)];
  uint64_t v67 = sub_1005057FC(&qword_1016A5D80);
  sub_100522E9C(v63, (uint64_t)v66 + *(int *)(v67 + 28), &qword_10169D6D0);
  *uint64_t v66 = KeyPath;
  uint64_t v68 = v101;
  uint64_t v69 = v102;
  (*(void (**)(uint64_t, char *, uint64_t))(v101 + 16))(v65, v60, v102);
  sub_100522F00(v63, &qword_10169D6D0);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v60, v69);
  uint64_t v70 = v116;
  sub_100FF2DA0(a1, v116, type metadata accessor for CRLCompactScenesListUI_i);
  uint64_t v71 = *(unsigned __int8 *)(v107 + 80);
  uint64_t v72 = (v71 + 16) & ~v71;
  uint64_t v108 = v71 | 7;
  uint64_t v73 = swift_allocObject();
  sub_100FF2E0C(v70, v73 + v72, type metadata accessor for CRLCompactScenesListUI_i);
  uint64_t v74 = v105;
  sub_100522E9C(v65, v105, &qword_1016A5D20);
  uint64_t v75 = (void *)(v74 + *(int *)(v117 + 36));
  *uint64_t v75 = 0;
  v75[1] = 0;
  v75[2] = sub_100FEF1A8;
  v75[3] = v73;
  sub_100522F00(v65, &qword_1016A5D20);
  uint64_t v76 = *(void **)(a1 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  id v77 = v76;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  sub_100FF2DA0(a1, v70, type metadata accessor for CRLCompactScenesListUI_i);
  uint64_t v78 = swift_allocObject();
  sub_100FF2E0C(v70, v78 + v72, type metadata accessor for CRLCompactScenesListUI_i);
  uint64_t v79 = sub_100FF3EB8(&qword_1016A5D10, &qword_1016A5D08, (void (*)(void))sub_100FE12E4);
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100522F00(v74, &qword_1016A5D08);
  uint64_t v80 = *(void **)(a1 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  id v81 = v80;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v120 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v82 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v82 = *(void *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  BOOL v119 = v82 == 0;
  uint64_t v83 = a1;
  uint64_t v84 = v116;
  sub_100FF2DA0(v83, v116, type metadata accessor for CRLCompactScenesListUI_i);
  uint64_t v85 = swift_allocObject();
  sub_100FF2E0C(v84, v85 + v72, type metadata accessor for CRLCompactScenesListUI_i);
  unint64_t v120 = v117;
  uint64_t v121 = &type metadata for Bool;
  unint64_t v122 = v79;
  uint64_t v123 = &protocol witness table for Bool;
  swift_getOpaqueTypeConformance2();
  uint64_t v86 = v109;
  uint64_t v87 = v113;
  uint64_t v88 = v115;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v112 + 8))(v88, v87);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v110 + 32))(v114, v86, v111);
}

uint64_t sub_100FDCA70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v3 = type metadata accessor for CRLCompactScenesListUI_i(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8, v6);
  uint64_t v45 = sub_1005057FC(&qword_1016A5DD8);
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin(v45, v7);
  uint64_t v40 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1005057FC(&qword_1016A5DC8) - 8;
  __chkstk_darwin(v42, v9);
  uint64_t v41 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1005057FC(&qword_1016A5DB8) - 8;
  __chkstk_darwin(v46, v11);
  uint64_t v44 = (uint64_t)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1005057FC(&qword_1016A5DA8) - 8;
  __chkstk_darwin(v48, v13);
  uint64_t v47 = (uint64_t)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void **)(a1 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  id v16 = v15;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  v39[3] = swift_getKeyPath();
  sub_100FF2DA0(a1, (uint64_t)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLCompactScenesListUI_i);
  uint64_t v17 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v18 = (v17 + 16) & ~v17;
  uint64_t v50 = v18;
  v39[1] = v18 + v5;
  v39[2] = v17 | 7;
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100FF2E0C((uint64_t)v20, v19 + v18, type metadata accessor for CRLCompactScenesListUI_i);
  sub_1005057FC(&qword_10168A520);
  type metadata accessor for CRLSceneRowItemUI_i(0);
  sub_100523288(&qword_1016A5FE0, &qword_10168A520);
  sub_100FEF54C(&qword_10169FA90, (void (*)(uint64_t))type metadata accessor for CRLSceneInfo);
  sub_100FEF54C(&qword_1016A5DE0, (void (*)(uint64_t))type metadata accessor for CRLSceneRowItemUI_i);
  uint64_t v21 = v40;
  ForEach<>.init(_:id:content:)();
  sub_100FF2DA0(a1, (uint64_t)v20, type metadata accessor for CRLCompactScenesListUI_i);
  uint64_t v22 = swift_allocObject();
  sub_100FF2E0C((uint64_t)v20, v22 + v50, type metadata accessor for CRLCompactScenesListUI_i);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_100FEFF34;
  *(void *)(v23 + 24) = v22;
  uint64_t v24 = v43;
  uint64_t v25 = (uint64_t)v41;
  uint64_t v26 = v45;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v41, v21, v45);
  uint64_t v27 = (void *)(v25 + *(int *)(v42 + 44));
  *uint64_t v27 = sub_100FEFF60;
  v27[1] = v23;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v26);
  sub_100FF2DA0(a1, (uint64_t)v20, type metadata accessor for CRLCompactScenesListUI_i);
  uint64_t v28 = swift_allocObject();
  sub_100FF2E0C((uint64_t)v20, v28 + v50, type metadata accessor for CRLCompactScenesListUI_i);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_100FEFF90;
  *(void *)(v29 + 24) = v28;
  uint64_t v30 = v44;
  sub_100522E9C(v25, v44, &qword_1016A5DC8);
  uint64_t v31 = (uint64_t (**)())(v30 + *(int *)(v46 + 44));
  *uint64_t v31 = sub_1006F66F4;
  v31[1] = (uint64_t (*)())v29;
  sub_100522F00(v25, &qword_1016A5DC8);
  uint64_t v32 = *(void **)(a1 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  id v33 = v32;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  LOBYTE(v29) = v51;
  uint64_t v34 = v47;
  sub_100522E9C(v30, v47, &qword_1016A5DB8);
  *(unsigned char *)(v34 + *(int *)(v48 + 44)) = v29;
  sub_100522F00(v30, &qword_1016A5DB8);
  uint64_t v35 = *(void **)(a1 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  id v36 = v35;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  LOBYTE(v28) = v51;
  uint64_t v37 = v49;
  sub_100522E9C(v34, v49, &qword_1016A5DA8);
  *(unsigned char *)(v37 + *(int *)(sub_1005057FC(&qword_1016A5D90) + 36)) = v28;
  return sub_100522F00(v34, &qword_1016A5DA8);
}

uint64_t sub_100FDD108@<X0>(void **a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  id v33 = a3;
  uint64_t v5 = sub_1005057FC(&qword_1016A5FF0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1005057FC(&qword_101684770);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (uint64_t *)((char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_1005057FC(&qword_1016A5FF8);
  __chkstk_darwin(v13 - 8, v14);
  id v16 = (uint64_t *)((char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *a1;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v31 = a2[1];
  uint64_t v32 = Strong;
  uint64_t v19 = (void *)a2[4];
  uint64_t v20 = a2[6];
  *(void *)&long long v34 = a2[5];
  *((void *)&v34 + 1) = v20;
  id v21 = v17;
  id v22 = v19;
  sub_1005057FC(&qword_1016A6000);
  State.projectedValue.getter();
  long long v23 = v35;
  uint64_t v24 = v36;
  long long v34 = *(_OWORD *)((char *)a2 + *(int *)(type metadata accessor for CRLCompactScenesListUI_i(0) + 36));
  sub_1005057FC(&qword_1016A5F70);
  State.projectedValue.getter();
  long long v30 = v35;
  uint64_t v25 = v36;
  *id v16 = swift_getKeyPath();
  sub_1005057FC(&qword_10169D6C8);
  swift_storeEnumTagMultiPayload();
  *uint64_t v12 = swift_getKeyPath();
  sub_1005057FC(&qword_101684750);
  swift_storeEnumTagMultiPayload();
  *uint64_t v8 = swift_getKeyPath();
  sub_1005057FC(&qword_10169D6D8);
  swift_storeEnumTagMultiPayload();
  char v26 = FocusState.init<>()();
  return sub_100FD8C14((uint64_t)v21, v31, (uint64_t)v16, (uint64_t)v12, (uint64_t)v8, v23, v33, *((uint64_t *)&v23 + 1), v24, v30, v25, 0, 0, 0xE000000000000000, 1, v26 & 1, v28, v27 & 1);
}

uint64_t sub_100FDD39C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void **)(a3 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v3;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  sub_1005057FC(&qword_10168A520);
  sub_100523288(&qword_1016A5FE8, &qword_10168A520);
  MutableCollection.move(fromOffsets:toOffset:)();
  if (!swift_unknownObjectWeakLoadStrong()) {
    return swift_bridgeObjectRelease();
  }
  sub_100E6B6B0(v6);
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

void sub_100FDD4BC(unint64_t *a1, uint64_t a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *(void **)(a2 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v3;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if ((v9 & 0xC000000000000001) == 0)
  {
    if ((v2 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v2 < *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v5 = *(id *)(v9 + 8 * v2 + 32);
      goto LABEL_5;
    }
    __break(1u);
    return;
  }
  id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
  unint64_t v6 = v5;
  swift_bridgeObjectRelease();
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_101177E70;
    *(void *)(inited + 32) = v6;
    unint64_t v10 = inited;
    specialized Array._endMutation()();
    id v8 = v6;
    sub_100E6B0B8(v10);
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

uint64_t sub_100FDD614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v3;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v6 = swift_bridgeObjectRelease();
  if (v5)
  {
    uint64_t v8 = sub_1005057FC(&qword_1016A5F88);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a2, 1, 1, v8);
  }
  else
  {
    __chkstk_darwin(v6, v7);
    __chkstk_darwin(v10, v11);
    sub_1005057FC(&qword_10167D880);
    sub_1005057FC(&qword_1016A5F90);
    sub_1005057FC(&qword_1016A5F98);
    sub_100523288(&qword_10167D878, &qword_10167D880);
    sub_100FF4CD4(&qword_1016A5FA0, &qword_1016A5F90);
    sub_100FEFCB0();
    ContentUnavailableView.init(label:description:actions:)();
    uint64_t v12 = sub_1005057FC(&qword_1016A5F88);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a2, 0, 1, v12);
  }
}

uint64_t sub_100FDD8B8()
{
  if (qword_10166F620 != -1) {
    swift_once();
  }
  sub_10052E310();
  swift_bridgeObjectRetain();
  return Label<>.init<A>(_:image:)();
}

double sub_100FDD970@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v3;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v14 == 1)
  {
    if (qword_10166F630 != -1) {
      swift_once();
    }
    uint64_t v5 = &qword_10171B1F8;
  }
  else
  {
    if (qword_10166F628 != -1) {
      swift_once();
    }
    uint64_t v5 = &qword_10171B1E8;
  }
  uint64_t v15 = *v5;
  char v16 = swift_bridgeObjectRetain();
  sub_10052E310();
  uint64_t v6 = Text.init<A>(_:)();
  uint64_t v8 = v7;
  char v10 = v9;
  uint64_t v12 = v11;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v8;
  *(unsigned char *)(a2 + 16) = v10 & 1;
  *(void *)(a2 + 24) = v12;
  *(void *)(a2 + 32) = v15;
  *(unsigned char *)(a2 + 40) = v16;
  *(void *)(a2 + 48) = v17;
  *(unsigned char *)(a2 + 56) = v18;
  double result = *(double *)&v19;
  *(_OWORD *)(a2 + 64) = v19;
  return result;
}

uint64_t sub_100FDDB0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v3 = type metadata accessor for ControlSize();
  uint64_t v61 = *(void *)(v3 - 8);
  uint64_t v62 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v60 = (char *)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin(v59, v6);
  uint64_t v54 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLCompactScenesListUI_i(0);
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v50 + 64);
  __chkstk_darwin(v8 - 8, v10);
  uint64_t v11 = sub_1005057FC(&qword_10168A580);
  uint64_t v52 = *(void *)(v11 - 8);
  uint64_t v53 = v11;
  __chkstk_darwin(v11, v12);
  char v14 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1005057FC(&qword_1016A5FD8);
  uint64_t v56 = *(void *)(v58 - 8);
  __chkstk_darwin(v58, v15);
  uint64_t v17 = (char *)v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1005057FC(&qword_1016A5FC8);
  __chkstk_darwin(v51, v18);
  uint64_t v20 = (char *)v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1005057FC(&qword_1016A5FB8);
  uint64_t v21 = *(void *)(v63 - 8);
  __chkstk_darwin(v63, v22);
  uint64_t v55 = (uint64_t)v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1;
  uint64_t v25 = *(void **)(a1 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  id v26 = v25;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v65)
  {
    uint64_t v27 = 1;
    uint64_t v29 = v63;
    uint64_t v28 = v64;
  }
  else
  {
    v49[1] = v24;
    sub_100FF2DA0(v24, (uint64_t)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLCompactScenesListUI_i);
    unint64_t v30 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
    uint64_t v31 = swift_allocObject();
    sub_100FF2E0C((uint64_t)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v31 + v30, type metadata accessor for CRLCompactScenesListUI_i);
    sub_1005057FC(&qword_10168A598);
    sub_100FF4CD4((unint64_t *)&qword_10168A5A0, &qword_10168A598);
    Button.init(action:label:)();
    uint64_t v32 = v54;
    BorderedProminentButtonStyle.init()();
    sub_100523288(&qword_10168A5B0, &qword_10168A580);
    sub_100FEF54C(&qword_10168A5B8, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
    uint64_t v33 = v53;
    uint64_t v34 = v59;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v32, v34);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v14, v33);
    uint64_t v36 = v60;
    uint64_t v35 = v61;
    uint64_t v37 = v62;
    (*(void (**)(char *, void, uint64_t))(v61 + 104))(v60, enum case for ControlSize.large(_:), v62);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v39 = (uint64_t *)&v20[*(int *)(v51 + 36)];
    uint64_t v40 = sub_1005057FC(&qword_10168A5C0);
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))((char *)v39 + *(int *)(v40 + 28), v36, v37);
    *uint64_t v39 = KeyPath;
    uint64_t v41 = v56;
    uint64_t v42 = v58;
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v20, v17, v58);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v42);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v43 = v55;
    sub_100522E9C((uint64_t)v20, v55, &qword_1016A5FC8);
    uint64_t v44 = v63;
    uint64_t v45 = (_OWORD *)(v43 + *(int *)(v63 + 36));
    long long v46 = v66;
    *uint64_t v45 = v65;
    v45[1] = v46;
    void v45[2] = v67;
    sub_100522F00((uint64_t)v20, &qword_1016A5FC8);
    uint64_t v47 = v64;
    sub_10051B3EC(v43, v64, &qword_1016A5FB8);
    uint64_t v27 = 0;
    uint64_t v28 = v47;
    uint64_t v29 = v44;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v28, v27, 1, v29);
}

__n128 sub_100FDE210@<Q0>(uint64_t a1@<X8>)
{
  if (qword_10166F618 != -1) {
    swift_once();
  }
  v20[0] = xmmword_10171B1C8;
  sub_10052E310();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  uint64_t v7 = Text.bold()();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  sub_1006A7D28(v2, v4, v6);
  swift_bridgeObjectRelease();
  uint64_t v14 = static Alignment.center.getter();
  sub_1007B59E0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v20, 0.0, 1, 0.0, 1, v14, v15, v7, v9, v13, v11);
  sub_1006A7D28(v7, v9, v13);
  swift_bridgeObjectRelease();
  long long v16 = v20[7];
  *(_OWORD *)(a1 + 96) = v20[6];
  *(_OWORD *)(a1 + 112) = v16;
  *(_OWORD *)(a1 + 128) = v20[8];
  long long v17 = v20[3];
  *(_OWORD *)(a1 + 32) = v20[2];
  *(_OWORD *)(a1 + 48) = v17;
  long long v18 = v20[5];
  *(_OWORD *)(a1 + 64) = v20[4];
  *(_OWORD *)(a1 + 80) = v18;
  __n128 result = (__n128)v20[1];
  *(_OWORD *)a1 = v20[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100FDE38C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v93 = a2;
  uint64_t v90 = sub_1005057FC(&qword_1016A5E30);
  __chkstk_darwin(v90, v3);
  uint64_t v89 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1005057FC(&qword_1016A5E38);
  uint64_t v84 = *(void *)(v87 - 8);
  __chkstk_darwin(v87, v5);
  uint64_t v83 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_1016A5E40);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v86 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v88 = (char *)&v81 - v12;
  uint64_t v92 = sub_1005057FC(&qword_1016A5E48);
  uint64_t v96 = *(void *)(v92 - 8);
  __chkstk_darwin(v92, v13);
  uint64_t v91 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v95 = (char *)&v81 - v17;
  uint64_t v18 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v18 - 8, v19);
  __chkstk_darwin(v20, v21);
  uint64_t v85 = (char *)&v81 - v22;
  uint64_t v23 = sub_1005057FC(&qword_1016A5E50);
  uint64_t v82 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v24);
  id v26 = (char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for CRLCompactScenesListUI_i(0);
  __chkstk_darwin(v27 - 8, v28);
  unint64_t v30 = (char *)&v81 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31, v32);
  uint64_t v34 = (char *)&v81 - v33;
  uint64_t v35 = sub_1005057FC(&qword_1016A5E58);
  __chkstk_darwin(v35 - 8, v36);
  uint64_t v38 = (char *)&v81 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39, v40);
  uint64_t v94 = (uint64_t)&v81 - v41;
  uint64_t v42 = *(void **)(a1 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  id v43 = v42;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v97 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v44 = *(void *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  sub_100FF2DA0(a1, (uint64_t)v34, type metadata accessor for CRLCompactScenesListUI_i);
  if (v44)
  {
    uint64_t v45 = (void *)*((void *)v34 + 4);
    swift_getKeyPath();
    swift_getKeyPath();
    id v46 = v45;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    char v47 = v97;
    sub_100FF38E8((uint64_t)v34, type metadata accessor for CRLCompactScenesListUI_i);
    if ((v47 & 1) == 0)
    {
      uint64_t v48 = static ToolbarItemPlacement.topBarLeading.getter();
      __chkstk_darwin(v48, v49);
      *(&v81 - 2) = a1;
      sub_1005057FC(&qword_1016A5E60);
      sub_100FEF444();
      ToolbarItem<>.init(placement:content:)();
      uint64_t v50 = sub_100523288(&qword_1016A5E78, &qword_1016A5E50);
      static ToolbarContentBuilder.buildBlock<A>(_:)();
      uint64_t v51 = sub_1005057FC(&qword_1016A5E80);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v38, 0, 1, v51);
      unint64_t v97 = v23;
      uint64_t v98 = v50;
      swift_getOpaqueTypeConformance2();
      static ToolbarContentBuilder.buildIf<A>(_:)();
      sub_100522F00((uint64_t)v38, &qword_1016A5E58);
      (*(void (**)(char *, uint64_t))(v82 + 8))(v26, v23);
      goto LABEL_8;
    }
  }
  else
  {
    sub_100FF38E8((uint64_t)v34, type metadata accessor for CRLCompactScenesListUI_i);
  }
  uint64_t v52 = sub_1005057FC(&qword_1016A5E80);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v38, 1, 1, v52);
  uint64_t v53 = sub_100523288(&qword_1016A5E78, &qword_1016A5E50);
  unint64_t v97 = v23;
  uint64_t v98 = v53;
  swift_getOpaqueTypeConformance2();
  static ToolbarContentBuilder.buildIf<A>(_:)();
  sub_100522F00((uint64_t)v38, &qword_1016A5E58);
LABEL_8:
  uint64_t v55 = (uint64_t)v89;
  uint64_t v54 = v90;
  uint64_t v56 = (uint64_t)v88;
  uint64_t v57 = static ToolbarItemPlacement.topBarTrailing.getter();
  __chkstk_darwin(v57, v58);
  *(&v81 - 2) = a1;
  sub_1005057FC(&qword_1016A5E88);
  sub_100FEF59C();
  uint64_t v59 = v91;
  ToolbarItem<>.init(placement:content:)();
  uint64_t v60 = v92;
  (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v95, v59, v92);
  uint64_t v61 = *(void **)(a1 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  id v62 = v61;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v97 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v63 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v63 = *(void *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  sub_100FF2DA0(a1, (uint64_t)v30, type metadata accessor for CRLCompactScenesListUI_i);
  if (!v63)
  {
    sub_100FF38E8((uint64_t)v30, type metadata accessor for CRLCompactScenesListUI_i);
    goto LABEL_14;
  }
  char v64 = sub_100FDBA48();
  sub_100FF38E8((uint64_t)v30, type metadata accessor for CRLCompactScenesListUI_i);
  if (v64)
  {
LABEL_14:
    uint64_t v72 = sub_1005057FC(&qword_1016A5EB0);
    uint64_t v73 = (uint64_t)v86;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v86, 1, 1, v72);
    uint64_t v74 = sub_100523288(&qword_1016A5EA8, &qword_1016A5E38);
    unint64_t v97 = v87;
    uint64_t v98 = v74;
    swift_getOpaqueTypeConformance2();
    static ToolbarContentBuilder.buildIf<A>(_:)();
    sub_100522F00(v73, &qword_1016A5E40);
    goto LABEL_15;
  }
  uint64_t v65 = static ToolbarItemPlacement.bottomBar.getter();
  __chkstk_darwin(v65, v66);
  *(&v81 - 2) = a1;
  sub_1005057FC(&qword_1016A5E98);
  sub_100523288(&qword_1016A5EA0, &qword_1016A5E98);
  long long v67 = v83;
  ToolbarItemGroup.init(placement:content:)();
  uint64_t v68 = sub_100523288(&qword_1016A5EA8, &qword_1016A5E38);
  uint64_t v70 = (uint64_t)v86;
  uint64_t v69 = v87;
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  uint64_t v71 = sub_1005057FC(&qword_1016A5EB0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v70, 0, 1, v71);
  unint64_t v97 = v69;
  uint64_t v98 = v68;
  swift_getOpaqueTypeConformance2();
  static ToolbarContentBuilder.buildIf<A>(_:)();
  sub_100522F00(v70, &qword_1016A5E40);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v67, v69);
LABEL_15:
  uint64_t v75 = v55 + *(int *)(v54 + 48);
  uint64_t v76 = v55 + *(int *)(v54 + 64);
  uint64_t v77 = v94;
  sub_100522E9C(v94, v55, &qword_1016A5E58);
  uint64_t v79 = v95;
  uint64_t v78 = v96;
  (*(void (**)(uint64_t, char *, uint64_t))(v96 + 16))(v75, v95, v60);
  sub_100522E9C(v56, v76, &qword_1016A5E40);
  TupleToolbarContent.init(_:)();
  sub_100522F00(v56, &qword_1016A5E40);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v60);
  return sub_100522F00(v77, &qword_1016A5E58);
}

uint64_t sub_100FDEF7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v3 = type metadata accessor for EditMode();
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for EditButton();
  uint64_t v43 = *(void *)(v48 - 8);
  __chkstk_darwin(v48, v7);
  uint64_t v40 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1005057FC(&qword_1016A5F78);
  uint64_t v45 = *(void *)(v49 - 8);
  __chkstk_darwin(v49, v9);
  uint64_t v39 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v44 = (char *)&v39 - v13;
  uint64_t v46 = sub_1005057FC(&qword_1016A5F80);
  __chkstk_darwin(v46, v14);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for CRLCompactScenesListUI_i(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __chkstk_darwin(v17, v20);
  uint64_t v47 = sub_1005057FC(&qword_10167A598);
  uint64_t v21 = *(void *)(v47 - 8);
  __chkstk_darwin(v47, v22);
  uint64_t v24 = (char *)&v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1;
  long long v51 = *(_OWORD *)(a1 + *(int *)(v17 + 36));
  sub_1005057FC(&qword_1016A5F70);
  State.wrappedValue.getter();
  id v26 = v52;

  if (v26)
  {
    sub_100FF2DA0(v25, (uint64_t)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLCompactScenesListUI_i);
    unint64_t v27 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    uint64_t v28 = swift_allocObject();
    sub_100FF2E0C((uint64_t)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v28 + v27, type metadata accessor for CRLCompactScenesListUI_i);
    Button.init(action:label:)();
    uint64_t v29 = v47;
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v16, v24, v47);
    swift_storeEnumTagMultiPayload();
    sub_100523288(&qword_10167A5A0, &qword_10167A598);
    uint64_t v30 = sub_100FEF54C(&qword_1016A5E70, (void (*)(uint64_t))&type metadata accessor for EditButton);
    *(void *)&long long v51 = v48;
    *((void *)&v51 + 1) = v30;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v24, v29);
  }
  else
  {
    uint64_t v32 = v40;
    EditButton.init()();
    sub_1005057FC(&qword_1016A5C48);
    State.wrappedValue.getter();
    EditMode.isEditing.getter();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v6, v42);
    uint64_t v33 = sub_100FEF54C(&qword_1016A5E70, (void (*)(uint64_t))&type metadata accessor for EditButton);
    uint64_t v34 = v39;
    uint64_t v35 = v48;
    View.bold(_:)();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v35);
    uint64_t v37 = v44;
    uint64_t v36 = v45;
    uint64_t v38 = v49;
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v44, v34, v49);
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v16, v37, v38);
    swift_storeEnumTagMultiPayload();
    sub_100523288(&qword_10167A5A0, &qword_10167A598);
    *(void *)&long long v51 = v35;
    *((void *)&v51 + 1) = v33;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v37, v38);
  }
}

uint64_t sub_100FDF600()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100FDF65C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v3 = type metadata accessor for CRLCompactScenesListUI_i(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8, v6);
  uint64_t v7 = sub_1005057FC(&qword_10167A598);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_1016A5E88);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100FF2DA0(a1, (uint64_t)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLCompactScenesListUI_i);
  unint64_t v17 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v18 = swift_allocObject();
  sub_100FF2E0C((uint64_t)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, type metadata accessor for CRLCompactScenesListUI_i);
  Button.init(action:label:)();
  if (sub_100FDBA48()) {
    double v19 = 0.0;
  }
  else {
    double v19 = 1.0;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v16, v11, v7);
  *(double *)&v16[*(int *)(v13 + 44)] = v19;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  return sub_10051B3EC((uint64_t)v16, v22, &qword_1016A5E88);
}

uint64_t sub_100FDF8F0()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    unsigned __int8 v1 = [self isReduceMotionEnabled];
    sub_100E531D4(v1 ^ 1, 0, 0);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100FDF960@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 localizedStringForKey:v3 value:v4 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10052E310();
  uint64_t v6 = Text.init<A>(_:)();
  uint64_t v8 = v7;
  LOBYTE(v5) = v9 & 1;
  static Color.accentColor.getter();
  uint64_t v10 = Text.foregroundStyle<A>(_:)();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  sub_1006A7D28(v6, v8, (char)v5);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v15 = Text.bold()();
  uint64_t v17 = v16;
  LOBYTE(v4) = v18;
  uint64_t v20 = v19;
  sub_1006A7D28(v10, v12, v14);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v15;
  *(void *)(a1 + 8) = v17;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v20;
  return result;
}

uint64_t sub_100FDFB18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v100 = a2;
  uint64_t v3 = type metadata accessor for BorderlessButtonMenuStyle();
  uint64_t v94 = *(void *)(v3 - 8);
  uint64_t v95 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v92 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_1005057FC(&qword_1016A5EB8);
  uint64_t v88 = *(void *)(v90 - 8);
  __chkstk_darwin(v90, v6);
  uint64_t v86 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_1005057FC(&qword_1016A5EC0);
  uint64_t v89 = *(void *)(v91 - 8);
  __chkstk_darwin(v91, v8);
  uint64_t v87 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1005057FC(&qword_1016A5EC8);
  __chkstk_darwin(v83, v10);
  uint64_t v85 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1005057FC(&qword_1016A5ED0);
  __chkstk_darwin(v82, v12);
  uint64_t v84 = (uint64_t)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1005057FC(&qword_1016A5ED8);
  __chkstk_darwin(v96, v14);
  uint64_t v97 = (uint64_t)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC(&qword_1016A5EE0);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v99 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v98 = (uint64_t)&v80 - v21;
  uint64_t v22 = type metadata accessor for CRLCompactScenesListUI_i(0);
  uint64_t v80 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v80 + 64);
  __chkstk_darwin(v22 - 8, v24);
  uint64_t v25 = sub_1005057FC(&qword_1016A5EE8);
  uint64_t v81 = *(void *)(v25 - 8);
  __chkstk_darwin(v25, v26);
  uint64_t v28 = (char *)&v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29, v30);
  uint64_t v32 = (char *)&v80 - v31;
  uint64_t v33 = sub_1005057FC(&qword_1016A5EF0);
  __chkstk_darwin(v33 - 8, v34);
  uint64_t v36 = (char *)&v80 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37, v38);
  uint64_t v93 = (uint64_t)&v80 - v39;
  uint64_t v40 = a1;
  uint64_t v41 = *(void **)(a1 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  id v42 = v41;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v101)
  {
    uint64_t v43 = sub_1005057FC(&qword_1016A5F10);
    uint64_t v44 = v93;
    uint64_t v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v93, 1, 1, v43);
  }
  else
  {
    sub_100FF2DA0(v40, (uint64_t)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLCompactScenesListUI_i);
    unint64_t v47 = (*(unsigned __int8 *)(v80 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
    uint64_t v48 = swift_allocObject();
    sub_100FF2E0C((uint64_t)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), v48 + v47, type metadata accessor for CRLCompactScenesListUI_i);
    sub_1005057FC(&qword_1016A5EF8);
    sub_100523288(&qword_1016A5F00, &qword_1016A5EF8);
    Button.init(action:label:)();
    uint64_t v49 = v81;
    uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v81 + 16);
    v50(v28, v32, v25);
    v50(v36, v28, v25);
    long long v51 = &v36[*(int *)(sub_1005057FC(&qword_1016A5F08) + 48)];
    *(void *)long long v51 = 0;
    v51[8] = 1;
    id v52 = *(void (**)(char *, uint64_t))(v49 + 8);
    v52(v32, v25);
    v52(v28, v25);
    uint64_t v53 = sub_1005057FC(&qword_1016A5F10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v36, 0, 1, v53);
    uint64_t v44 = v93;
    uint64_t v45 = sub_10051B3EC((uint64_t)v36, v93, &qword_1016A5EF0);
  }
  __chkstk_darwin(v45, v46);
  *(&v80 - 2) = v40;
  sub_1005057FC(&qword_10167D880);
  sub_1005057FC(&qword_1016A5F18);
  sub_100523288(&qword_10167D878, &qword_10167D880);
  sub_100523288(&qword_1016A5F20, &qword_1016A5F18);
  uint64_t v54 = v86;
  Menu.init(content:label:)();
  uint64_t v55 = v92;
  BorderlessButtonMenuStyle.init()();
  sub_100523288(&qword_1016A5F28, &qword_1016A5EB8);
  sub_100FEF54C(&qword_1016A5F30, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonMenuStyle);
  uint64_t v56 = v87;
  uint64_t v57 = v90;
  uint64_t v58 = v95;
  View.menuStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v55, v58);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v54, v57);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v60 = v89;
  uint64_t v61 = (uint64_t)v85;
  uint64_t v62 = v91;
  (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v85, v56, v91);
  uint64_t v63 = v61 + *(int *)(v83 + 36);
  *(void *)uint64_t v63 = KeyPath;
  *(unsigned char *)(v63 + 8) = 2;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v56, v62);
  uint64_t v64 = v84;
  sub_100522E9C(v61, v84, &qword_1016A5EC8);
  *(_WORD *)(v64 + *(int *)(v82 + 36)) = 257;
  sub_100522F00(v61, &qword_1016A5EC8);
  uint64_t v65 = static Color.accentColor.getter();
  uint64_t v66 = v97;
  sub_100522E9C(v64, v97, &qword_1016A5ED0);
  *(void *)(v66 + *(int *)(v96 + 36)) = v65;
  sub_100522F00(v64, &qword_1016A5ED0);
  id v67 = [self mainBundle];
  NSString v68 = String._bridgeToObjectiveC()();
  NSString v69 = String._bridgeToObjectiveC()();
  id v70 = [v67 localizedStringForKey:v68 value:v69 table:0];

  uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v73 = v72;

  uint64_t v101 = v71;
  uint64_t v102 = v73;
  sub_100FEF8AC();
  sub_10052E310();
  uint64_t v74 = (uint64_t)v99;
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  sub_100522F00(v66, &qword_1016A5ED8);
  uint64_t v75 = v98;
  sub_10051B3EC(v74, v98, &qword_1016A5EE0);
  sub_100522E9C(v44, (uint64_t)v36, &qword_1016A5EF0);
  sub_100522E9C(v75, v74, &qword_1016A5EE0);
  uint64_t v76 = v100;
  sub_100522E9C((uint64_t)v36, v100, &qword_1016A5EF0);
  uint64_t v77 = sub_1005057FC(&qword_1016A5F60);
  uint64_t v78 = v76 + *(int *)(v77 + 48);
  *(void *)uint64_t v78 = 0;
  *(unsigned char *)(v78 + 8) = 1;
  sub_100522E9C(v74, v76 + *(int *)(v77 + 64), &qword_1016A5EE0);
  sub_100522F00(v75, &qword_1016A5EE0);
  sub_100522F00(v44, &qword_1016A5EF0);
  sub_100522F00(v74, &qword_1016A5EE0);
  return sub_100522F00((uint64_t)v36, &qword_1016A5EF0);
}

uint64_t sub_100FE0670@<X0>(uint64_t a1@<X8>)
{
  uint64_t v15 = Image.init(systemName:)();
  if (qword_10166F618 != -1) {
    swift_once();
  }
  sub_10052E310();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Color.accentColor.getter();
  uint64_t v7 = Text.foregroundStyle<A>(_:)();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  sub_1006A7D28(v2, v4, v6);
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)a1 = v15;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 24) = v13;
  *(void *)(a1 + 32) = v11;
  swift_retain();
  sub_10073F0E0(v7, v9, v13);
  swift_bridgeObjectRetain();
  sub_1006A7D28(v7, v9, v13);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100FE080C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = type metadata accessor for CRLCompactScenesListUI_i(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8, v6);
  uint64_t v7 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10167A598);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v36 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v35 = (char *)&v33 - v14;
  __chkstk_darwin(v15, v16);
  uint64_t v34 = (char *)&v33 - v17;
  __chkstk_darwin(v18, v19);
  uint64_t v38 = (char *)&v33 - v20;
  if (qword_10166F650 != -1) {
    swift_once();
  }
  uint64_t v39 = qword_10171B238;
  uint64_t v40 = unk_10171B240;
  sub_100FF2DA0(a1, (uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLCompactScenesListUI_i);
  unint64_t v21 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v33 = a1;
  uint64_t v22 = swift_allocObject();
  sub_100FF2E0C((uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, type metadata accessor for CRLCompactScenesListUI_i);
  sub_10052E310();
  swift_bridgeObjectRetain();
  Button<>.init<A>(_:action:)();
  if (qword_10166F660 != -1) {
    swift_once();
  }
  uint64_t v39 = qword_10171B258;
  uint64_t v40 = unk_10171B260;
  sub_100FF2DA0(v33, (uint64_t)v7, type metadata accessor for CRLCompactScenesListUI_i);
  uint64_t v23 = swift_allocObject();
  sub_100FF2E0C((uint64_t)v7, v23 + v21, type metadata accessor for CRLCompactScenesListUI_i);
  swift_bridgeObjectRetain();
  uint64_t v24 = v34;
  Button<>.init<A>(_:action:)();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v26 = v35;
  uint64_t v27 = v38;
  v25(v35, v38, v8);
  uint64_t v28 = v36;
  v25(v36, v24, v8);
  uint64_t v29 = v37;
  v25(v37, v26, v8);
  uint64_t v30 = sub_1005057FC(&qword_1016A5F68);
  v25(&v29[*(int *)(v30 + 48)], v28, v8);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v9 + 8);
  v31(v24, v8);
  v31(v27, v8);
  v31(v28, v8);
  return ((uint64_t (*)(char *, uint64_t))v31)(v26, v8);
}

uint64_t sub_100FE0C3C()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_100E6B96C();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100FE0C88()
{
  uint64_t v0 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = *(char **)(*(void *)(result + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                  + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    uint64_t v7 = *(void *)&v6[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    uint64_t v8 = type metadata accessor for CRLBoardCRDTData(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v7 + *(int *)(v8 + 36), v0);
    uint64_t v9 = v6;
    uint64_t v10 = sub_1005C2550((uint64_t)v4, (uint64_t)v9);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);

    sub_100E6BC04((uint64_t)v10);
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100FE0E1C()
{
  LocalizedStringKey.init(stringLiteral:)();

  return Label<>.init(_:systemImage:)();
}

uint64_t sub_100FE0E74()
{
  uint64_t v0 = type metadata accessor for EditMode();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v7 = __chkstk_darwin(v5, v6);
  uint64_t v9 = (char *)&v11 - v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v1 + 104))((char *)&v11 - v8, enum case for EditMode.inactive(_:), v0, v7);
  type metadata accessor for CRLCompactScenesListUI_i(0);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v9, v0);
  sub_1005057FC(&qword_1016A5C48);
  State.wrappedValue.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v9, v0);
}

uint64_t sub_100FE0FC8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EditMode();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v15 - v9;
  uint64_t v11 = *(void **)(a1 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  id v12 = v11;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!v13)
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v10, enum case for EditMode.inactive(_:), v2);
    type metadata accessor for CRLCompactScenesListUI_i(0);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v10, v2);
    sub_1005057FC(&qword_1016A5C48);
    State.wrappedValue.setter();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v10, v2);
  }
  return result;
}

uint64_t sub_100FE11C4()
{
  return NavigationStack.init<>(root:)();
}

uint64_t sub_100FE12DC@<X0>(uint64_t a1@<X8>)
{
  return sub_100FDBC28(*(void *)(v1 + 16), a1);
}

unint64_t sub_100FE12E4()
{
  unint64_t result = qword_1016A5D18;
  if (!qword_1016A5D18)
  {
    sub_100522D34(&qword_1016A5D20);
    sub_100522D34(&qword_1016A5D28);
    sub_100522D34(&qword_1016A5D30);
    sub_100522D34(&qword_1016A5D38);
    sub_100522D34(&qword_1016A5D40);
    sub_100FE148C();
    sub_10052E310();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100523288(&qword_1016A5D70, &qword_1016A5D30);
    swift_getOpaqueTypeConformance2();
    sub_100523288(&qword_1016A5D78, &qword_1016A5D80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5D18);
  }
  return result;
}

unint64_t sub_100FE148C()
{
  unint64_t result = qword_1016A5D48;
  if (!qword_1016A5D48)
  {
    sub_100522D34(&qword_1016A5D40);
    sub_100523288(&qword_1016A5D50, &qword_1016A5D58);
    sub_100523288(&qword_1016A5D60, &qword_1016A5D68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5D48);
  }
  return result;
}

uint64_t sub_100FE1550@<X0>(uint64_t a1@<X8>)
{
  return sub_100FDCA70(*(void *)(v1 + 16), a1);
}

unint64_t sub_100FE1558()
{
  unint64_t result = qword_1016A5D98;
  if (!qword_1016A5D98)
  {
    sub_100522D34(&qword_1016A5D90);
    sub_100FE15F8();
    sub_100523288(&qword_1016A5E18, &qword_1016A5E20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5D98);
  }
  return result;
}

unint64_t sub_100FE15F8()
{
  unint64_t result = qword_1016A5DA0;
  if (!qword_1016A5DA0)
  {
    sub_100522D34(&qword_1016A5DA8);
    sub_100FE1698();
    sub_100523288(&qword_1016A5E08, &qword_1016A5E10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5DA0);
  }
  return result;
}

unint64_t sub_100FE1698()
{
  unint64_t result = qword_1016A5DB0;
  if (!qword_1016A5DB0)
  {
    sub_100522D34(&qword_1016A5DB8);
    sub_100FE1738();
    sub_100523288(&qword_1016A5DF8, &qword_1016A5E00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5DB0);
  }
  return result;
}

unint64_t sub_100FE1738()
{
  unint64_t result = qword_1016A5DC0;
  if (!qword_1016A5DC0)
  {
    sub_100522D34(&qword_1016A5DC8);
    sub_100FE17D8();
    sub_100523288(&qword_1016A5DE8, &qword_1016A5DF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5DC0);
  }
  return result;
}

unint64_t sub_100FE17D8()
{
  unint64_t result = qword_1016A5DD0;
  if (!qword_1016A5DD0)
  {
    sub_100522D34(&qword_1016A5DD8);
    sub_100FEF54C(&qword_1016A5DE0, (void (*)(uint64_t))type metadata accessor for CRLSceneRowItemUI_i);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5DD0);
  }
  return result;
}

uint64_t type metadata accessor for CRLSceneRowItemUI_i(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_1016A6068);
}

uint64_t sub_100FE189C()
{
  uint64_t v1 = *(void **)(v0 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  char v3 = (char)v8;
  if (v8)
  {
    uint64_t v4 = *(void **)v0;
    type metadata accessor for CRLSceneInfo();
    id v5 = v4;
    id v6 = v8;
    char v3 = static NSObject.== infix(_:_:)();
  }
  return v3 & 1;
}

uint64_t sub_100FE195C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLSceneRowItemUI_i(0);
  __chkstk_darwin(v2, v3);
  id v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for EditMode();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_10169D6D0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100E03F0C((uint64_t)v14);
  uint64_t v15 = sub_1005057FC(&qword_1016A5E28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15) == 1)
  {
    sub_100522F00((uint64_t)v14, &qword_10169D6D0);
    sub_100FF2DA0(v0, (uint64_t)v5, type metadata accessor for CRLSceneRowItemUI_i);
  }
  else
  {
    Binding.wrappedValue.getter();
    sub_100522F00((uint64_t)v14, &qword_1016A5E28);
    char v16 = EditMode.isEditing.getter();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    sub_100FF2DA0(v1, (uint64_t)v5, type metadata accessor for CRLSceneRowItemUI_i);
    if (v16) {
      goto LABEL_6;
    }
  }
  uint64_t v17 = &v5[*(int *)(v2 + 44)];
  long long v18 = *(_OWORD *)v17;
  uint64_t v19 = *((void *)v17 + 2);
  long long v22 = v18;
  uint64_t v23 = v19;
  sub_1005057FC(&qword_1016A61F8);
  Binding.wrappedValue.getter();
  if (!v24)
  {
    uint64_t v20 = 0;
    goto LABEL_8;
  }

LABEL_6:
  uint64_t v20 = 1;
LABEL_8:
  sub_100FF38E8((uint64_t)v5, type metadata accessor for CRLSceneRowItemUI_i);
  return v20;
}

double sub_100FE1C08()
{
  uint64_t v1 = type metadata accessor for DynamicTypeSize();
  uint64_t v2 = *(char **)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v98 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v101 = (char *)&v92 - v7;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v92 - v10;
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v92 - v14;
  __chkstk_darwin(v16, v17);
  uint64_t v99 = (void (*)(char *, unint64_t, uint64_t))((char *)&v92 - v18);
  __chkstk_darwin(v19, v20);
  uint64_t v102 = (void (*)(char *, uint64_t))((char *)&v92 - v21);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v92 - v24;
  __chkstk_darwin(v26, v27);
  uint64_t v97 = (char *)&v92 - v28;
  uint64_t v29 = *(void **)(v0 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  id v30 = v29;
  unint64_t v31 = v0;
  id v32 = v30;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  double v33 = v103;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (v33 < 1.0)
  {
    if (!Strong) {
      goto LABEL_12;
    }
    uint64_t v94 = Strong;
    unint64_t v95 = v0 + 8;
    type metadata accessor for CRLSceneRowItemUI_i(0);
    unint64_t v100 = v0;
    sub_100E03F74((uint64_t)v15);
    sub_1005057FC(&qword_1016755E8);
    uint64_t v35 = *((void *)v2 + 9);
    uint64_t v36 = v15;
    unint64_t v37 = (v2[80] + 32) & ~(unint64_t)v2[80];
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_10117DF40;
    unint64_t v39 = v38 + v37;
    uint64_t v40 = v2;
    uint64_t v41 = (void (*)(void))*((void *)v2 + 13);
    ((void (*)(unint64_t, void, uint64_t))v41)(v39, enum case for DynamicTypeSize.accessibility3(_:), v1);
    uint64_t v97 = (char *)(v39 + v35);
    v41();
    unint64_t v93 = v39 + 2 * v35;
    v41();
    uint64_t v99 = (void (*)(char *, unint64_t, uint64_t))*((void *)v40 + 2);
    v99(v11, v39, v1);
    sub_100FEF54C((unint64_t *)&qword_1016755F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    LOBYTE(v35) = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v96 = v40;
    id v42 = (void (*)(char *, uint64_t))*((void *)v40 + 1);
    swift_bridgeObjectRetain();
    uint64_t v102 = v42;
    v42(v11, v1);
    if ((v35 & 1) != 0
      || (v99(v11, (unint64_t)v97, v1),
          char v43 = dispatch thunk of static Equatable.== infix(_:_:)(),
          v102(v11, v1),
          (v43 & 1) != 0))
    {
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      swift_unknownObjectRelease();
      v102(v36, v1);
      double v44 = 75.0;
      uint64_t v2 = v96;
      unint64_t v31 = v100;
LABEL_14:
      uint64_t v59 = *(void **)(v31 + 32);
      swift_getKeyPath();
      swift_getKeyPath();
      id v60 = v59;
      static Published.subscript.getter();

      swift_release();
      swift_release();
      double v61 = v103;
      uint64_t v62 = swift_unknownObjectWeakLoadStrong();
      uint64_t v63 = (uint64_t)v101;
      if (v62)
      {
        uint64_t v102 = (void (*)(char *, uint64_t))v62;
        type metadata accessor for CRLSceneRowItemUI_i(0);
        sub_100E03F74(v63);
        sub_1005057FC(&qword_1016755E8);
        uint64_t v64 = *((void *)v2 + 9);
        unint64_t v65 = (v2[80] + 32) & ~(unint64_t)v2[80];
        uint64_t v66 = swift_allocObject();
        *(_OWORD *)(v66 + 16) = xmmword_10117DF40;
        unint64_t v67 = v66 + v65;
        NSString v68 = (void (*)(void))*((void *)v2 + 13);
        ((void (*)(unint64_t, void, uint64_t))v68)(v66 + v65, enum case for DynamicTypeSize.accessibility3(_:), v1);
        unint64_t v100 = v67 + v64;
        v68();
        uint64_t v99 = (void (*)(char *, unint64_t, uint64_t))(v67 + 2 * v64);
        v68();
        NSString v69 = (void (*)(char *, unint64_t, uint64_t))*((void *)v2 + 2);
        id v70 = v98;
        v69(v98, v67, v1);
        sub_100FEF54C((unint64_t *)&qword_1016755F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
        LOBYTE(v64) = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v71 = (void (*)(char *, uint64_t))*((void *)v2 + 1);
        swift_bridgeObjectRetain();
        v71(v70, v1);
        if ((v64 & 1) != 0
          || (v69(v70, v100, v1), char v72 = dispatch thunk of static Equatable.== infix(_:_:)(),
                                  v71(v70, v1),
                                  (v72 & 1) != 0))
        {
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();
          swift_unknownObjectRelease();
          v71(v101, v1);
        }
        else
        {
          v69(v70, (unint64_t)v99, v1);
          uint64_t v87 = v101;
          dispatch thunk of static Equatable.== infix(_:_:)();
          v71(v70, v1);
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();
          swift_unknownObjectRelease();
          v71(v87, v1);
        }
      }
      return v44 * v61;
    }
    v99(v11, v93, v1);
    char v55 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v56 = v11;
    uint64_t v57 = v102;
    v102(v56, v1);
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    swift_unknownObjectRelease();
    v57(v36, v1);
    uint64_t v2 = v96;
    unint64_t v31 = v100;
    if (v55) {
      *(double *)&uint64_t v58 = 75.0;
    }
    else {
LABEL_12:
    }
      *(double *)&uint64_t v58 = 50.0;
    double v44 = *(double *)&v58;
    goto LABEL_14;
  }
  uint64_t v45 = &unk_10117D000;
  unint64_t v100 = v0;
  if (!Strong) {
    goto LABEL_20;
  }
  uint64_t v94 = Strong;
  unint64_t v95 = v0 + 8;
  type metadata accessor for CRLSceneRowItemUI_i(0);
  uint64_t v46 = (uint64_t)v97;
  sub_100E03F74((uint64_t)v97);
  sub_1005057FC(&qword_1016755E8);
  uint64_t v47 = *((void *)v2 + 9);
  unint64_t v48 = (v2[80] + 32) & ~(unint64_t)v2[80];
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_10117DF40;
  unint64_t v50 = v49 + v48;
  long long v51 = (void (*)(void))*((void *)v2 + 13);
  ((void (*)(unint64_t, void, uint64_t))v51)(v50, enum case for DynamicTypeSize.accessibility3(_:), v1);
  uint64_t v98 = (char *)(v50 + v47);
  v51();
  unint64_t v93 = v50 + 2 * v47;
  v51();
  uint64_t v101 = (char *)*((void *)v2 + 2);
  ((void (*)(char *, unint64_t, uint64_t))v101)(v25, v50, v1);
  sub_100FEF54C((unint64_t *)&qword_1016755F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  LOBYTE(v47) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v96 = v2;
  id v52 = (void (*)(char *, uint64_t))*((void *)v2 + 1);
  swift_bridgeObjectRetain();
  v52(v25, v1);
  if ((v47 & 1) == 0)
  {
    ((void (*)(char *, char *, uint64_t))v101)(v25, v98, v1);
    char v53 = dispatch thunk of static Equatable.== infix(_:_:)();
    v52(v25, v1);
    if ((v53 & 1) == 0)
    {
      ((void (*)(char *, unint64_t, uint64_t))v101)(v25, v93, v1);
      char v73 = dispatch thunk of static Equatable.== infix(_:_:)();
      v52(v25, v1);
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      swift_unknownObjectRelease();
      v52((char *)v46, v1);
      uint64_t v2 = v96;
      unint64_t v31 = v100;
      uint64_t v45 = (_OWORD *)&unk_10117D000;
      if (v73)
      {
        *(double *)&uint64_t v74 = 75.0;
LABEL_21:
        double v54 = *(double *)&v74;
        goto LABEL_22;
      }
LABEL_20:
      *(double *)&uint64_t v74 = 50.0;
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  v52((char *)v46, v1);
  double v54 = 75.0;
  uint64_t v2 = v96;
  unint64_t v31 = v100;
  uint64_t v45 = (_OWORD *)&unk_10117D000;
LABEL_22:
  uint64_t v75 = swift_unknownObjectWeakLoadStrong();
  uint64_t v76 = (uint64_t)v102;
  uint64_t v77 = (char *)v99;
  if (v75)
  {
    uint64_t v101 = (char *)v75;
    type metadata accessor for CRLSceneRowItemUI_i(0);
    sub_100E03F74(v76);
    sub_1005057FC(&qword_1016755E8);
    uint64_t v78 = *((void *)v2 + 9);
    unint64_t v79 = (v2[80] + 32) & ~(unint64_t)v2[80];
    uint64_t v80 = swift_allocObject();
    *(_OWORD *)(v80 + 16) = v45[244];
    uint64_t v81 = (char *)(v80 + v79);
    uint64_t v82 = v2;
    uint64_t v83 = (void (*)(void))*((void *)v2 + 13);
    ((void (*)(unint64_t, void, uint64_t))v83)(v80 + v79, enum case for DynamicTypeSize.accessibility3(_:), v1);
    uint64_t v97 = &v81[v78];
    v83();
    uint64_t v96 = &v81[2 * v78];
    v83();
    uint64_t v84 = (void (*)(char *, char *, uint64_t))*((void *)v82 + 2);
    uint64_t v98 = v81;
    v84(v77, v81, v1);
    sub_100FEF54C((unint64_t *)&qword_1016755F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    LOBYTE(v78) = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v85 = (void (*)(char *, uint64_t))*((void *)v82 + 1);
    swift_bridgeObjectRetain();
    v85(v77, v1);
    if ((v78 & 1) != 0
      || (v84(v77, v97, v1), char v86 = dispatch thunk of static Equatable.== infix(_:_:)(), v85(v77, v1), (v86 & 1) != 0))
    {
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      swift_unknownObjectRelease();
      v85((char *)v102, v1);
      unint64_t v31 = v100;
    }
    else
    {
      v84(v77, v96, v1);
      uint64_t v88 = (char *)v102;
      dispatch thunk of static Equatable.== infix(_:_:)();
      v85(v77, v1);
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      swift_unknownObjectRelease();
      v85(v88, v1);
      unint64_t v31 = v100;
    }
  }
  uint64_t v89 = *(void **)(v31 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  id v90 = v89;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  return v54;
}

uint64_t sub_100FE2A9C()
{
  uint64_t v1 = type metadata accessor for ColorScheme();
  uint64_t v50 = *(void *)(v1 - 8);
  uint64_t v51 = v1;
  __chkstk_darwin(v1, v2);
  uint64_t v49 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  uint64_t v48 = (uint64_t)&v47 - v6;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v47 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_10168A0C0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v52 = (uint64_t)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v47 - v20;
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v47 - v24;
  char v53 = v0;
  uint64_t v26 = (void *)v0[4];
  swift_getKeyPath();
  swift_getKeyPath();
  id v27 = v26;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  uint64_t v28 = v54;
  if (v54)
  {
    uint64_t v29 = v8;
    id v30 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v30(v25, &v54[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID], v7);

    unint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
    v31(v25, 0, 1, v7);
  }
  else
  {
    unint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v31(v25, 1, 1, v7);
    uint64_t v29 = v8;
    id v30 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  }
  v30(v21, (char *)(*v53 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID), v7);
  v31(v21, 0, 1, v7);
  uint64_t v32 = (uint64_t)&v14[*(int *)(v11 + 48)];
  sub_100522E9C((uint64_t)v25, (uint64_t)v14, (uint64_t *)&unk_101674520);
  sub_100522E9C((uint64_t)v21, v32, (uint64_t *)&unk_101674520);
  double v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  if (v33((uint64_t)v14, 1, v7) == 1)
  {
    sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101674520);
    sub_100522F00((uint64_t)v25, (uint64_t *)&unk_101674520);
    if (v33(v32, 1, v7) == 1)
    {
      sub_100522F00((uint64_t)v14, (uint64_t *)&unk_101674520);
LABEL_12:
      type metadata accessor for CRLSceneRowItemUI_i(0);
      uint64_t v41 = v48;
      sub_100E03F38(v48);
      char v43 = v49;
      uint64_t v42 = v50;
      uint64_t v44 = v51;
      (*(void (**)(char *, void, uint64_t))(v50 + 104))(v49, enum case for ColorScheme.dark(_:), v51);
      static ColorScheme.== infix(_:_:)();
      uint64_t v45 = *(void (**)(char *, uint64_t))(v42 + 8);
      v45(v43, v44);
      v45((char *)v41, v44);
      static Color.accentColor.getter();
      uint64_t v37 = Color.opacity(_:)();
      swift_release();
      return v37;
    }
    goto LABEL_9;
  }
  uint64_t v34 = v29;
  uint64_t v35 = v52;
  sub_100522E9C((uint64_t)v14, v52, (uint64_t *)&unk_101674520);
  if (v33(v32, 1, v7) == 1)
  {
    sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101674520);
    sub_100522F00((uint64_t)v25, (uint64_t *)&unk_101674520);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v7);
LABEL_9:
    sub_100522F00((uint64_t)v14, (uint64_t *)&unk_10168A0C0);
    goto LABEL_10;
  }
  uint64_t v38 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v47, v32, v7);
  sub_100FEF54C((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  char v39 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v34 + 8);
  v40(v38, v7);
  sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101674520);
  sub_100522F00((uint64_t)v25, (uint64_t *)&unk_101674520);
  v40((char *)v35, v7);
  sub_100522F00((uint64_t)v14, (uint64_t *)&unk_101674520);
  if (v39) {
    goto LABEL_12;
  }
LABEL_10:
  id v36 = [self tertiarySystemBackgroundColor];
  return Color.init(uiColor:)();
}

uint64_t sub_100FE3110@<X0>(uint64_t a1@<X8>)
{
  uint64_t v233 = a1;
  uint64_t v232 = type metadata accessor for AccessibilityTraits();
  uint64_t v231 = *(void *)(v232 - 8);
  __chkstk_darwin(v232, v2);
  v230 = (char *)&v195 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  v229 = (char *)&v195 - v6;
  uint64_t v228 = type metadata accessor for AccessibilityActionKind();
  uint64_t v227 = *(void *)(v228 - 8);
  __chkstk_darwin(v228, v7);
  v226 = (char *)&v195 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v215 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v214 = *(void *)(v215 - 8);
  __chkstk_darwin(v215, v9);
  v213 = (char *)&v195 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = type metadata accessor for EditMode();
  uint64_t v196 = *(void *)(v197 - 8);
  __chkstk_darwin(v197, v11);
  v195 = (char *)&v195 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_10169D6D0);
  __chkstk_darwin(v13 - 8, v14);
  v202 = (char *)&v195 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v246 = (int *)type metadata accessor for CRLSceneRowItemUI_i(0);
  uint64_t v245 = *((void *)v246 - 1);
  uint64_t v243 = *(void *)(v245 + 64);
  __chkstk_darwin(v246, v16);
  uint64_t v247 = (uint64_t)&v195 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005057FC(&qword_1016A60F0);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v21 = (char *)&v195 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1005057FC(&qword_1016A60F8);
  uint64_t v23 = v22 - 8;
  __chkstk_darwin(v22, v24);
  uint64_t v26 = (char *)&v195 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1005057FC(&qword_1016A6100);
  uint64_t v28 = v27 - 8;
  __chkstk_darwin(v27, v29);
  unint64_t v31 = (char *)&v195 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1005057FC(&qword_1016A6108);
  __chkstk_darwin(v32, v33);
  uint64_t v35 = (char *)&v195 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v234 = sub_1005057FC(&qword_1016A6110);
  v216 = *(char **)(v234 - 8);
  __chkstk_darwin(v234, v36);
  v237 = (char *)&v195 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = sub_1005057FC(&qword_1016A6118);
  uint64_t v201 = *(void *)(v200 - 8);
  __chkstk_darwin(v200, v38);
  v235 = (char *)&v195 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = sub_1005057FC(&qword_1016A6120);
  uint64_t v203 = *(void *)(v205 - 8);
  __chkstk_darwin(v205, v40);
  v236 = (char *)&v195 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = sub_1005057FC(&qword_1016A6128);
  uint64_t v206 = *(void *)(v208 - 8);
  __chkstk_darwin(v208, v42);
  v204 = (char *)&v195 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v211 = sub_1005057FC(&qword_1016A6130);
  uint64_t v209 = *(void *)(v211 - 8);
  __chkstk_darwin(v211, v44);
  v207 = (char *)&v195 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v239 = (void *)sub_1005057FC(&qword_1016A6138);
  uint64_t v212 = *(v239 - 1);
  __chkstk_darwin(v239, v46);
  v210 = (char *)&v195 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v218 = sub_1005057FC(&qword_1016A6140);
  uint64_t v217 = *(void *)(v218 - 8);
  __chkstk_darwin(v218, v48);
  v238 = (char *)&v195 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v225 = sub_1005057FC(&qword_1016A6148);
  __chkstk_darwin(v225, v50);
  v240 = (char *)&v195 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v52, v53);
  v219 = (char *)&v195 - v54;
  __chkstk_darwin(v55, v56);
  v220 = (char *)&v195 - v57;
  __chkstk_darwin(v58, v59);
  v241 = (char *)&v195 - v60;
  __chkstk_darwin(v61, v62);
  v242 = (char *)&v195 - v63;
  __chkstk_darwin(v64, v65);
  v223 = (char *)&v195 - v66;
  uint64_t v224 = sub_1005057FC(&qword_1016A6150);
  uint64_t v222 = *(void *)(v224 - 8);
  __chkstk_darwin(v224, v67);
  v221 = (char *)&v195 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v21 = static VerticalAlignment.center.getter();
  *((void *)v21 + 1) = 0;
  v21[16] = 0;
  NSString v69 = &v21[*(int *)(sub_1005057FC(&qword_1016A6158) + 44)];
  *(void *)NSString v69 = static VerticalAlignment.center.getter();
  *((void *)v69 + 1) = 0;
  v69[16] = 0;
  uint64_t v70 = sub_1005057FC(&qword_1016A6160);
  sub_100FE4DCC(v1, &v69[*(int *)(v70 + 44)]);
  sub_100522E9C((uint64_t)v21, (uint64_t)v26, &qword_1016A60F0);
  uint64_t v71 = &v26[*(int *)(v23 + 44)];
  *(_OWORD *)uint64_t v71 = xmmword_1011C1D80;
  *((_OWORD *)v71 + 1) = xmmword_1011C1D90;
  v71[32] = 0;
  sub_100522F00((uint64_t)v21, &qword_1016A60F0);
  uint64_t v72 = static HorizontalAlignment.listRowSeparatorLeading.getter();
  sub_100522E9C((uint64_t)v26, (uint64_t)v31, &qword_1016A60F8);
  char v73 = (uint64_t *)&v31[*(int *)(v28 + 44)];
  *char v73 = v72;
  v73[1] = (uint64_t)sub_100FE7D44;
  v73[2] = 0;
  sub_100522F00((uint64_t)v26, &qword_1016A60F8);
  *(void *)v252 = sub_100FE2A9C();
  swift_retain();
  uint64_t v74 = AnyView.init<A>(_:)();
  sub_100522E9C((uint64_t)v31, (uint64_t)v35, &qword_1016A6100);
  swift_release();
  unint64_t v199 = v32;
  *(void *)&v35[*(int *)(v32 + 36)] = v74;
  sub_100522F00((uint64_t)v31, &qword_1016A6100);
  uint64_t v75 = v1;
  uint64_t v249 = v1;
  uint64_t v76 = sub_1005057FC(&qword_1016A6168);
  unint64_t v77 = sub_100FF2A30();
  unint64_t v78 = sub_100FF2C64();
  View.contextMenu<A>(menuItems:)();
  sub_100522F00((uint64_t)v35, &qword_1016A6108);
  unint64_t v79 = *(void **)(v1 + 32);
  v248 = (void *)v1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v80 = v79;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  id v250 = *(id *)v252;
  uint64_t v81 = v247;
  sub_100FF2DA0(v75, v247, type metadata accessor for CRLSceneRowItemUI_i);
  uint64_t v82 = *(unsigned __int8 *)(v245 + 80);
  uint64_t v83 = (v82 + 16) & ~v82;
  uint64_t v84 = v83 + v243;
  uint64_t v85 = v82 | 7;
  uint64_t v86 = swift_allocObject();
  sub_100FF2E0C(v81, v86 + v83, type metadata accessor for CRLSceneRowItemUI_i);
  uint64_t v87 = sub_1005057FC(&qword_10169FB90);
  *(void *)v252 = v199;
  *(void *)&v252[8] = v76;
  *(void *)&v252[16] = v77;
  v253 = (void *)v78;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v89 = sub_100FF2EA0();
  uint64_t v90 = v234;
  uint64_t v91 = v237;
  View.onChange<A>(of:initial:_:)();
  swift_release();

  (*((void (**)(char *, uint64_t))v216 + 1))(v91, v90);
  uint64_t v92 = (uint64_t)v248;
  unint64_t v93 = (char *)v248 + v246[10];
  *(void *)v252 = *(void *)v93;
  v216 = v93;
  *(_OWORD *)&v252[8] = *(_OWORD *)(v93 + 8);
  v237 = (char *)sub_1005057FC(&qword_1016A61E8);
  Binding.wrappedValue.getter();
  uint64_t v94 = v247;
  sub_100FF2DA0(v92, v247, type metadata accessor for CRLSceneRowItemUI_i);
  uint64_t v243 = v84;
  uint64_t v245 = v85;
  uint64_t v95 = swift_allocObject();
  uint64_t v244 = v83;
  uint64_t v96 = v92;
  sub_100FF2E0C(v94, v95 + v83, type metadata accessor for CRLSceneRowItemUI_i);
  uint64_t v97 = sub_1005057FC(&qword_10169FB88);
  *(void *)v252 = v234;
  *(void *)&v252[8] = v87;
  uint64_t v234 = v87;
  *(void *)&v252[16] = OpaqueTypeConformance2;
  v253 = (void *)v89;
  uint64_t v98 = (uint64_t)v202;
  unint64_t v199 = v89;
  uint64_t v99 = swift_getOpaqueTypeConformance2();
  uint64_t v100 = sub_100523288(&qword_1016A61F0, &qword_10169FB88);
  uint64_t v101 = v200;
  uint64_t v198 = v97;
  uint64_t v102 = v235;
  View.onChange<A>(of:initial:_:)();
  uint64_t v103 = v101;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v201 + 8))(v102, v101);
  sub_100E03F0C(v98);
  uint64_t v104 = sub_1005057FC(&qword_1016A5E28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 48))(v98, 1, v104) == 1)
  {
    sub_100522F00(v98, &qword_10169D6D0);
    char v105 = 0;
  }
  else
  {
    uint64_t v106 = v195;
    Binding.wrappedValue.getter();
    sub_100522F00(v98, &qword_1016A5E28);
    char v105 = EditMode.isEditing.getter();
    (*(void (**)(char *, uint64_t))(v196 + 8))(v106, v197);
  }
  LOBYTE(v250) = v105 & 1;
  uint64_t v107 = v96;
  uint64_t v108 = v247;
  sub_100FF2DA0(v107, v247, type metadata accessor for CRLSceneRowItemUI_i);
  uint64_t v109 = swift_allocObject();
  uint64_t v110 = v244;
  sub_100FF2E0C(v108, v109 + v244, type metadata accessor for CRLSceneRowItemUI_i);
  *(void *)v252 = v103;
  *(void *)&v252[8] = v198;
  *(void *)&v252[16] = v99;
  v253 = (void *)v100;
  v235 = (char *)&opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>;
  uint64_t v111 = swift_getOpaqueTypeConformance2();
  uint64_t v112 = v204;
  uint64_t v113 = v205;
  uint64_t v114 = v236;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v203 + 8))(v114, v113);
  LOBYTE(v250) = sub_100FE195C() & 1;
  sub_100FF2DA0((uint64_t)v248, v108, type metadata accessor for CRLSceneRowItemUI_i);
  uint64_t v115 = swift_allocObject();
  sub_100FF2E0C(v108, v115 + v110, type metadata accessor for CRLSceneRowItemUI_i);
  *(void *)v252 = v113;
  *(void *)&v252[8] = &type metadata for Bool;
  *(void *)&v252[16] = v111;
  v253 = &protocol witness table for Bool;
  uint64_t v116 = swift_getOpaqueTypeConformance2();
  uint64_t v117 = v207;
  uint64_t v118 = v208;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v206 + 8))(v112, v118);
  BOOL v119 = (char *)v248 + v246[11];
  long long v120 = *(_OWORD *)v119;
  uint64_t v121 = *((void *)v119 + 2);
  *(_OWORD *)v252 = v120;
  *(void *)&v252[16] = v121;
  sub_1005057FC(&qword_1016A61F8);
  Binding.wrappedValue.getter();
  sub_100FF2DA0((uint64_t)v248, v108, type metadata accessor for CRLSceneRowItemUI_i);
  uint64_t v122 = swift_allocObject();
  sub_100FF2E0C(v108, v122 + v244, type metadata accessor for CRLSceneRowItemUI_i);
  *(void *)v252 = v118;
  *(void *)&v252[8] = &type metadata for Bool;
  *(void *)&v252[16] = v116;
  v253 = &protocol witness table for Bool;
  uint64_t v123 = swift_getOpaqueTypeConformance2();
  uint64_t v124 = v210;
  uint64_t v125 = v211;
  uint64_t v126 = v234;
  uint64_t v127 = (void *)v199;
  View.onChange<A>(of:initial:_:)();
  swift_release();

  (*(void (**)(char *, uint64_t))(v209 + 8))(v117, v125);
  uint64_t v128 = v213;
  static AccessibilityChildBehavior.combine.getter();
  *(void *)v252 = v125;
  *(void *)&v252[8] = v126;
  *(void *)&v252[16] = v123;
  v253 = v127;
  uint64_t v129 = v248;
  uint64_t v130 = swift_getOpaqueTypeConformance2();
  uint64_t v131 = v239;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v214 + 8))(v128, v215);
  (*(void (**)(char *, void *))(v212 + 8))(v124, v131);
  sub_1005057FC(&qword_101692EF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  uint64_t v133 = (void *)(*v129 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_name);
  uint64_t v134 = v133[1];
  *(void *)(inited + 32) = *v133;
  *(void *)(inited + 40) = v134;
  *(_OWORD *)v252 = *(_OWORD *)((char *)v129 + v246[12]);
  swift_bridgeObjectRetain();
  sub_1005057FC(&qword_1016A6200);
  State.wrappedValue.getter();
  id v135 = v250;
  if (!v250)
  {
    uint64_t v138 = 0;
    *(void *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0;
    uint64_t v139 = *(void *)(inited + 40);
    if (v139) {
      goto LABEL_12;
    }
LABEL_8:
    uint64_t v140 = _swiftEmptyArrayStorage;
    if (!v138) {
      goto LABEL_20;
    }
    goto LABEL_15;
  }
  id v136 = [v250 crlaxDescription];

  if (v136)
  {
    id v135 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v138 = v137;
  }
  else
  {
    id v135 = 0;
    uint64_t v138 = 0;
  }
  *(void *)(inited + 48) = v135;
  *(void *)(inited + 56) = v138;
  uint64_t v139 = *(void *)(inited + 40);
  if (!v139) {
    goto LABEL_8;
  }
LABEL_12:
  uint64_t v141 = *(void *)(inited + 32);
  swift_bridgeObjectRetain();
  uint64_t v140 = sub_100F61B70(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v143 = *((void *)v140 + 2);
  unint64_t v142 = *((void *)v140 + 3);
  if (v143 >= v142 >> 1) {
    uint64_t v140 = sub_100F61B70((double *)(v142 > 1), v143 + 1, 1, v140);
  }
  *((void *)v140 + 2) = v143 + 1;
  uint64_t v144 = &v140[2 * v143];
  *((void *)v144 + 4) = v141;
  *((void *)v144 + 5) = v139;
  id v135 = *(id *)(inited + 48);
  uint64_t v138 = *(void *)(inited + 56);
  if (v138)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v140 = sub_100F61B70(0, *((void *)v140 + 2) + 1, 1, v140);
    }
    unint64_t v146 = *((void *)v140 + 2);
    unint64_t v145 = *((void *)v140 + 3);
    if (v146 >= v145 >> 1) {
      uint64_t v140 = sub_100F61B70((double *)(v145 > 1), v146 + 1, 1, v140);
    }
    *((void *)v140 + 2) = v146 + 1;
    uint64_t v147 = &v140[2 * v146];
    *((void *)v147 + 4) = v135;
    *((void *)v147 + 5) = v138;
  }
LABEL_20:
  swift_bridgeObjectRelease();
  *(void *)v252 = v140;
  sub_1005057FC((uint64_t *)&unk_1016773F0);
  sub_100523288((unint64_t *)&qword_101672620, (uint64_t *)&unk_1016773F0);
  uint64_t v148 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v150 = v149;
  swift_bridgeObjectRelease();
  *(void *)v252 = v148;
  *(void *)&v252[8] = v150;
  id v250 = v239;
  uint64_t v251 = v130;
  swift_getOpaqueTypeConformance2();
  sub_10052E310();
  uint64_t v151 = v218;
  uint64_t v152 = v238;
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v217 + 8))(v152, v151);
  v153 = (uint64_t *)(*v129 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_name);
  uint64_t v155 = *v153;
  uint64_t v154 = v153[1];
  swift_bridgeObjectRetain_n();
  v156 = sub_100F61B70(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v158 = *((void *)v156 + 2);
  unint64_t v157 = *((void *)v156 + 3);
  if (v158 >= v157 >> 1) {
    v156 = sub_100F61B70((double *)(v157 > 1), v158 + 1, 1, v156);
  }
  *((void *)v156 + 2) = v158 + 1;
  uint64_t v159 = &v156[2 * v158];
  *((void *)v159 + 4) = v155;
  *((void *)v159 + 5) = v154;
  swift_bridgeObjectRelease();
  uint64_t v160 = (uint64_t)v219;
  uint64_t v161 = (uint64_t)v240;
  ModifiedContent<>.accessibilityInputLabels<A>(_:)();
  swift_bridgeObjectRelease();
  sub_100522F00(v161, &qword_1016A6148);
  id v162 = [self mainBundle];
  NSString v163 = String._bridgeToObjectiveC()();
  NSString v164 = String._bridgeToObjectiveC()();
  id v165 = [v162 localizedStringForKey:v163 value:v164 table:0];

  uint64_t v166 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v168 = v167;

  *(void *)v252 = v166;
  *(void *)&v252[8] = v168;
  uint64_t v169 = (uint64_t)v220;
  ModifiedContent<>.accessibilityHint<A>(_:)();
  swift_bridgeObjectRelease();
  sub_100522F00(v160, &qword_1016A6148);
  v170 = v226;
  static AccessibilityActionKind.default.getter();
  uint64_t v171 = (uint64_t)v129;
  uint64_t v172 = v247;
  sub_100FF2DA0(v171, v247, type metadata accessor for CRLSceneRowItemUI_i);
  uint64_t v173 = swift_allocObject() + v244;
  uint64_t v174 = v172;
  v175 = (id *)v248;
  sub_100FF2E0C(v174, v173, type metadata accessor for CRLSceneRowItemUI_i);
  ModifiedContent<>.accessibilityAction(_:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v227 + 8))(v170, v228);
  sub_100522F00(v169, &qword_1016A6148);
  v176 = v216;
  *(void *)v252 = *(void *)v216;
  *(_OWORD *)&v252[8] = *(_OWORD *)(v216 + 8);
  Binding.wrappedValue.getter();
  uint64_t v177 = (uint64_t)v250;
  id v178 = *v175;
  char v179 = sub_1006E7B3C(v178, v177);

  swift_bridgeObjectRelease();
  if (v179)
  {
    v180 = v229;
    static AccessibilityTraits.isSelected.getter();
    uint64_t v181 = v232;
  }
  else
  {
    *(void *)v252 = _swiftEmptyArrayStorage;
    sub_100FEF54C(&qword_1016A6208, (void (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
    sub_1005057FC(&qword_1016A6210);
    sub_100523288(&qword_1016A6218, &qword_1016A6210);
    v180 = v229;
    uint64_t v181 = v232;
    dispatch thunk of SetAlgebra.init<A>(_:)();
  }
  uint64_t v182 = v231;
  uint64_t v183 = (uint64_t)v241;
  ModifiedContent<>.accessibilityAddTraits(_:)();
  v184 = *(void (**)(char *, uint64_t))(v182 + 8);
  v184(v180, v181);
  sub_100522F00(v183, &qword_1016A6148);
  *(void *)v252 = *(void *)v176;
  *(_OWORD *)&v252[8] = *(_OWORD *)(v176 + 8);
  Binding.wrappedValue.getter();
  uint64_t v185 = (uint64_t)v250;
  id v186 = *v175;
  char v187 = sub_1006E7B3C(v186, v185);

  swift_bridgeObjectRelease();
  if (v187)
  {
    *(void *)v252 = _swiftEmptyArrayStorage;
    sub_100FEF54C(&qword_1016A6208, (void (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
    sub_1005057FC(&qword_1016A6210);
    sub_100523288(&qword_1016A6218, &qword_1016A6210);
    v188 = v230;
    dispatch thunk of SetAlgebra.init<A>(_:)();
  }
  else
  {
    v188 = v230;
    static AccessibilityTraits.isSelected.getter();
  }
  uint64_t v189 = (uint64_t)v223;
  uint64_t v190 = (uint64_t)v242;
  ModifiedContent<>.accessibilityRemoveTraits(_:)();
  v184(v188, v181);
  uint64_t v191 = sub_100522F00(v190, &qword_1016A6148);
  __chkstk_darwin(v191, v192);
  *(&v195 - 2) = (char *)v175;
  sub_1005057FC(&qword_1016A6220);
  sub_100FF33EC();
  sub_100FF3688();
  v193 = v221;
  View.accessibilityActions<A>(_:)();
  sub_100522F00(v189, &qword_1016A6148);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v222 + 32))(v233, v193, v224);
}

uint64_t sub_100FE4DCC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v107 = a2;
  uint64_t v96 = sub_1005057FC(&qword_1016A62D0);
  uint64_t v94 = *(void *)(v96 - 8);
  __chkstk_darwin(v96, v3);
  unint64_t v93 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_1016A62D8);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v95 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_1016A62E0);
  uint64_t v103 = *(void *)(v8 - 8);
  uint64_t v104 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v92 = (uint64_t)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_1016A62E8);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v106 = (uint64_t)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v105 = (uint64_t)&v89 - v16;
  uint64_t v97 = type metadata accessor for DynamicTypeSize();
  uint64_t v98 = *(void *)(v97 - 8);
  __chkstk_darwin(v97, v17);
  uint64_t v108 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v109 = (uint64_t)&v89 - v21;
  uint64_t v110 = type metadata accessor for CRLSceneRowItemUI_i(0);
  uint64_t v22 = *(void *)(v110 - 8);
  uint64_t v23 = *(void *)(v22 + 64);
  __chkstk_darwin(v110, v24);
  uint64_t v25 = (char *)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1005057FC(&qword_1016A62F0);
  uint64_t v101 = *(void *)(v102 - 8);
  __chkstk_darwin(v102, v26);
  uint64_t v100 = (char *)&v89 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28, v29);
  unint64_t v31 = (char *)&v89 - v30;
  uint64_t v32 = sub_100FE5928();
  char v34 = v33;
  sub_100FF2DA0(a1, (uint64_t)v25, type metadata accessor for CRLSceneRowItemUI_i);
  unint64_t v35 = (*(unsigned __int8 *)(v22 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v36 = swift_allocObject();
  sub_100FF2E0C((uint64_t)v25, v36 + v35, type metadata accessor for CRLSceneRowItemUI_i);
  uint64_t v113 = v32;
  LOBYTE(v114) = v34 & 1;
  uint64_t v115 = 0;
  char v116 = 0;
  uint64_t v117 = sub_100FF39DC;
  uint64_t v118 = v36;
  char v119 = 0;
  sub_100FF2DA0(a1, (uint64_t)v25, type metadata accessor for CRLSceneRowItemUI_i);
  uint64_t v37 = swift_allocObject();
  sub_100FF2E0C((uint64_t)v25, v37 + v35, type metadata accessor for CRLSceneRowItemUI_i);
  sub_1005057FC(&qword_1016A62F8);
  sub_100FF3A8C();
  uint64_t v99 = v31;
  View.onTapGesture(count:perform:)();
  swift_release();
  swift_release();
  uint64_t v111 = a1;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v91 = Strong;
    sub_100E03F74(v109);
    sub_1005057FC(&qword_1016755E8);
    uint64_t v39 = (void *)v98;
    uint64_t v40 = *(void *)(v98 + 72);
    unint64_t v41 = (*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_10117DF40;
    unint64_t v43 = v42 + v41;
    uint64_t v44 = (void (*)(void))v39[13];
    uint64_t v45 = v97;
    ((void (*)(unint64_t, void, uint64_t))v44)(v42 + v41, enum case for DynamicTypeSize.accessibility3(_:), v97);
    unint64_t v90 = v43 + v40;
    v44();
    unint64_t v89 = v43 + 2 * v40;
    v44();
    uint64_t v46 = (void (*)(char *, unint64_t, uint64_t))v39[2];
    uint64_t v47 = v108;
    v46(v108, v43, v45);
    sub_100FEF54C((unint64_t *)&qword_1016755F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    LOBYTE(v41) = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v48 = (void (*)(uint64_t, uint64_t))v39[1];
    swift_bridgeObjectRetain();
    uint64_t v49 = v47;
    uint64_t v50 = v48;
    v48((uint64_t)v49, v45);
    if ((v41 & 1) != 0
      || (uint64_t v51 = v108,
          v46(v108, v90, v45),
          char v52 = dispatch thunk of static Equatable.== infix(_:_:)(),
          v50((uint64_t)v51, v45),
          (v52 & 1) != 0))
    {
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      swift_unknownObjectRelease();
      v50(v109, v45);
LABEL_5:
      LODWORD(v109) = 0;
      LODWORD(v108) = 1;
      goto LABEL_8;
    }
    uint64_t v53 = (void (*)(char *, uint64_t))v50;
    uint64_t v54 = v108;
    v46(v108, v89, v45);
    uint64_t v55 = v109;
    char v56 = dispatch thunk of static Equatable.== infix(_:_:)();
    v53(v54, v45);
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    swift_unknownObjectRelease();
    v53((char *)v55, v45);
    if (v56) {
      goto LABEL_5;
    }
  }
  LODWORD(v108) = 0;
  LODWORD(v109) = 1;
LABEL_8:
  uint64_t v57 = v111 + *(int *)(v110 + 56);
  char v58 = *(unsigned char *)v57;
  uint64_t v59 = *(void *)(v57 + 8);
  LOBYTE(v113) = v58;
  uint64_t v114 = v59;
  sub_1005057FC(&qword_101695310);
  uint64_t v60 = State.wrappedValue.getter();
  if (v112 == 1)
  {
    __chkstk_darwin(v60, v61);
    *(&v89 - 2) = v111;
    sub_1005057FC(&qword_1016A6330);
    sub_1005057FC(&qword_1016A6338);
    sub_100FF3B58();
    sub_100523288(&qword_1016A6358, &qword_1016A6338);
    uint64_t v62 = v93;
    Menu.init(content:label:)();
    sub_100523288(&qword_1016A6360, &qword_1016A62D0);
    uint64_t v63 = (uint64_t)v95;
    uint64_t v64 = v96;
    View.accessibilityHidden(_:)();
    (*(void (**)(char *, uint64_t))(v94 + 8))(v62, v64);
    LOBYTE(v64) = static Edge.Set.trailing.getter();
    EdgeInsets.init(_all:)();
    uint64_t v66 = v65;
    uint64_t v68 = v67;
    uint64_t v70 = v69;
    uint64_t v72 = v71;
    uint64_t v73 = v92;
    sub_100522E9C(v63, v92, &qword_1016A62D8);
    uint64_t v74 = v104;
    uint64_t v75 = v73 + *(int *)(v104 + 36);
    *(unsigned char *)uint64_t v75 = v64;
    *(void *)(v75 + 8) = v66;
    *(void *)(v75 + 16) = v68;
    *(void *)(v75 + 24) = v70;
    *(void *)(v75 + 32) = v72;
    *(unsigned char *)(v75 + 40) = 0;
    sub_100522F00(v63, &qword_1016A62D8);
    uint64_t v76 = v105;
    sub_10051B3EC(v73, v105, &qword_1016A62E0);
    uint64_t v77 = 0;
  }
  else
  {
    uint64_t v77 = 1;
    uint64_t v74 = v104;
    uint64_t v76 = v105;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v103 + 56))(v76, v77, 1, v74);
  uint64_t v78 = v101;
  unint64_t v79 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
  id v80 = v100;
  uint64_t v81 = v99;
  uint64_t v82 = v102;
  v79(v100, v99, v102);
  uint64_t v83 = v106;
  sub_100522E9C(v76, v106, &qword_1016A62E8);
  uint64_t v84 = v107;
  v79(v107, v80, v82);
  uint64_t v85 = sub_1005057FC(&qword_1016A6328);
  uint64_t v86 = &v84[*(int *)(v85 + 48)];
  *(void *)uint64_t v86 = 0;
  v86[8] = (char)v108;
  v86[9] = v109;
  sub_100522E9C(v83, (uint64_t)&v84[*(int *)(v85 + 64)], &qword_1016A62E8);
  sub_100522F00(v76, &qword_1016A62E8);
  uint64_t v87 = *(void (**)(char *, uint64_t))(v78 + 8);
  v87(v81, v82);
  sub_100522F00(v83, &qword_1016A62E8);
  return ((uint64_t (*)(char *, uint64_t))v87)(v80, v82);
}

uint64_t sub_100FE5928()
{
  uint64_t v0 = type metadata accessor for DynamicTypeSize();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v23 = Strong;
    type metadata accessor for CRLSceneRowItemUI_i(0);
    sub_100E03F74((uint64_t)v8);
    sub_1005057FC(&qword_1016755E8);
    uint64_t v10 = *(void *)(v1 + 72);
    unint64_t v11 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_10117DF40;
    unint64_t v13 = v12 + v11;
    uint64_t v14 = *(void (**)(void))(v1 + 104);
    ((void (*)(unint64_t, void, uint64_t))v14)(v12 + v11, enum case for DynamicTypeSize.accessibility3(_:), v0);
    unint64_t v22 = v13 + v10;
    v14();
    unint64_t v21 = v13 + 2 * v10;
    v14();
    uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    v15(v4, v13, v0);
    sub_100FEF54C((unint64_t *)&qword_1016755F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    uint64_t v24 = v8;
    LOBYTE(v10) = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v1 + 8);
    swift_bridgeObjectRetain();
    v16(v4, v0);
    if ((v10 & 1) != 0
      || (v15(v4, v22, v0), char v17 = dispatch thunk of static Equatable.== infix(_:_:)(), v16(v4, v0), (v17 & 1) != 0))
    {
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      swift_unknownObjectRelease();
      v16(v24, v0);
      return static HorizontalAlignment.leading.getter();
    }
    v15(v4, v21, v0);
    uint64_t v19 = v24;
    char v20 = dispatch thunk of static Equatable.== infix(_:_:)();
    v16(v4, v0);
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    swift_unknownObjectRelease();
    v16(v19, v0);
    if (v20) {
      return static HorizontalAlignment.leading.getter();
    }
  }
  return static VerticalAlignment.center.getter();
}

uint64_t sub_100FE5CC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1005057FC(&qword_1016A6390);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = sub_1005057FC(&qword_1016A6398);
  __chkstk_darwin(v10 - 8, v11);
  unint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  char v17 = (char *)&v21 - v16;
  sub_100FE5E88((uint64_t)&v21 - v16);
  sub_100FE6584((uint64_t)v9);
  sub_100522E9C((uint64_t)v17, (uint64_t)v13, &qword_1016A6398);
  sub_100522E9C((uint64_t)v9, (uint64_t)v5, &qword_1016A6390);
  sub_100522E9C((uint64_t)v13, a1, &qword_1016A6398);
  uint64_t v18 = sub_1005057FC(&qword_1016A63A0);
  sub_100522E9C((uint64_t)v5, a1 + *(int *)(v18 + 48), &qword_1016A6390);
  uint64_t v19 = a1 + *(int *)(v18 + 64);
  *(void *)uint64_t v19 = 0;
  *(unsigned char *)(v19 + 8) = 1;
  sub_100522F00((uint64_t)v9, &qword_1016A6390);
  sub_100522F00((uint64_t)v17, &qword_1016A6398);
  sub_100522F00((uint64_t)v5, &qword_1016A6390);
  return sub_100522F00((uint64_t)v13, &qword_1016A6398);
}

uint64_t sub_100FE5E88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v68 = a1;
  uint64_t v69 = type metadata accessor for TaskPriority();
  uint64_t v67 = *(void *)(v69 - 8);
  __chkstk_darwin(v69, v2);
  uint64_t v66 = (char *)v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRLSceneRowItemUI_i(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8, v7);
  uint64_t v8 = sub_1005057FC(&qword_1016A6440);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (void *)((char *)v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_1005057FC(&qword_1016A6448);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1005057FC(&qword_1016A6450);
  uint64_t v63 = *(void *)(v62 - 8);
  __chkstk_darwin(v62, v16);
  uint64_t v60 = (char *)v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005057FC(&qword_1016A6458);
  uint64_t v64 = *(void *)(v18 - 8);
  uint64_t v65 = v18;
  __chkstk_darwin(v18, v19);
  uint64_t v61 = (char *)v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v11 = static Alignment.center.getter();
  v11[1] = v21;
  uint64_t v22 = sub_1005057FC(&qword_1016A6460);
  sub_100FEA9A0((uint64_t)v1, (uint64_t *)((char *)v11 + *(int *)(v22 + 44)));
  char v23 = static Edge.Set.trailing.getter();
  EdgeInsets.init(_all:)();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v59 = v15;
  sub_100522E9C((uint64_t)v11, (uint64_t)v15, &qword_1016A6440);
  uint64_t v32 = &v15[*(int *)(v12 + 36)];
  *uint64_t v32 = v23;
  *((void *)v32 + 1) = v25;
  *((void *)v32 + 2) = v27;
  *((void *)v32 + 3) = v29;
  *((void *)v32 + 4) = v31;
  v32[40] = 0;
  sub_100522F00((uint64_t)v11, &qword_1016A6440);
  char v33 = (void *)v1[4];
  uint64_t v70 = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v34 = v33;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  unint64_t v35 = (char *)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100FF2DA0((uint64_t)v1, (uint64_t)v35, type metadata accessor for CRLSceneRowItemUI_i);
  uint64_t v36 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v37 = (v36 + 16) & ~v36;
  v58[0] = v37 + v6;
  v58[1] = v36 | 7;
  uint64_t v38 = swift_allocObject();
  sub_100FF2E0C((uint64_t)v35, v38 + v37, type metadata accessor for CRLSceneRowItemUI_i);
  unint64_t v39 = sub_100FF41D0();
  uint64_t v40 = v60;
  uint64_t v41 = (uint64_t)v59;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100522F00(v41, &qword_1016A6448);
  uint64_t v42 = (long long *)(*v70 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect);
  long long v43 = v42[1];
  long long v75 = *v42;
  long long v76 = v43;
  sub_100FF2DA0((uint64_t)v70, (uint64_t)v35, type metadata accessor for CRLSceneRowItemUI_i);
  uint64_t v44 = swift_allocObject();
  sub_100FF2E0C((uint64_t)v35, v44 + v37, type metadata accessor for CRLSceneRowItemUI_i);
  type metadata accessor for CGRect(0);
  uint64_t v71 = v12;
  uint64_t v72 = &type metadata for Bool;
  unint64_t v73 = v39;
  uint64_t v74 = &protocol witness table for Bool;
  swift_getOpaqueTypeConformance2();
  sub_100FEF54C(&qword_1016A6478, type metadata accessor for CGRect);
  uint64_t v45 = v61;
  uint64_t v46 = v62;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v40, v46);
  sub_100FF2DA0((uint64_t)v70, (uint64_t)v35, type metadata accessor for CRLSceneRowItemUI_i);
  uint64_t v47 = swift_allocObject();
  sub_100FF2E0C((uint64_t)v35, v47 + v37, type metadata accessor for CRLSceneRowItemUI_i);
  uint64_t v48 = v66;
  static TaskPriority.userInitiated.getter();
  uint64_t v49 = sub_1005057FC(&qword_1016A6398);
  uint64_t v50 = v68;
  uint64_t v51 = (char *)(v68 + *(int *)(v49 + 36));
  uint64_t v52 = type metadata accessor for _TaskModifier();
  uint64_t v53 = v67;
  uint64_t v54 = v69;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(&v51[*(int *)(v52 + 20)], v48, v69);
  *(void *)uint64_t v51 = &unk_1016A6488;
  *((void *)v51 + 1) = v47;
  uint64_t v56 = v64;
  uint64_t v55 = v65;
  (*(void (**)(uint64_t, char *, uint64_t))(v64 + 16))(v50, v45, v65);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v48, v54);
  return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v45, v55);
}

uint64_t sub_100FE6584@<X0>(uint64_t a1@<X8>)
{
  uint64_t v169 = a1;
  id v136 = (uint64_t (*)(void))type metadata accessor for DynamicTypeSize();
  uint64_t v134 = *((void *)v136 - 1);
  __chkstk_darwin(v136, v2);
  id v135 = (char *)v132 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)v132 - v6;
  uint64_t v170 = sub_1005057FC(&qword_1016A63A8);
  uint64_t v163 = *(void *)(v170 - 8);
  __chkstk_darwin(v170, v8);
  id v162 = (char *)v132 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)v132 - v12;
  uint64_t v14 = sub_1005057FC(&qword_1016A63B0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005057FC(&qword_1016A63B8);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v160 = (char *)v132 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = (char *)type metadata accessor for WritingToolsBehavior();
  uint64_t v159 = *((void *)v161 - 1);
  __chkstk_darwin(v161, v21);
  unint64_t v158 = (char *)v132 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = type metadata accessor for SubmitLabel();
  uint64_t v149 = *(void *)(v151 - 8);
  __chkstk_darwin(v151, v23);
  uint64_t v148 = (char *)v132 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = (int *)type metadata accessor for CRLSceneRowItemUI_i(0);
  uint64_t v168 = *((void *)v25 - 1);
  uint64_t v26 = *(void *)(v168 + 64);
  __chkstk_darwin(v25, v27);
  uint64_t v28 = (char *)v132 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_1005057FC(&qword_101684968);
  uint64_t v138 = *(void *)(v141 - 8);
  __chkstk_darwin(v141, v29);
  uint64_t v137 = (char *)v132 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_1005057FC(&qword_1016A63C0);
  uint64_t v142 = *(void *)(v143 - 8);
  __chkstk_darwin(v143, v31);
  uint64_t v139 = (char *)v132 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_1005057FC(&qword_1016A63C8);
  uint64_t v145 = *(void *)(v146 - 8);
  __chkstk_darwin(v146, v33);
  uint64_t v144 = (char *)v132 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_1005057FC(&qword_1016A63D0);
  __chkstk_darwin(v140, v35);
  uint64_t v147 = (char *)v132 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_1005057FC(&qword_1016A63D8);
  __chkstk_darwin(v150, v37);
  uint64_t v152 = (uint64_t)v132 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_1005057FC(&qword_1016A63E0);
  uint64_t v155 = *(void *)(v156 - 8);
  __chkstk_darwin(v156, v39);
  uint64_t v154 = (char *)v132 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1005057FC(&qword_1016A63E8);
  __chkstk_darwin(v41, v42);
  v153 = (char *)v132 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44, v45);
  uint64_t v157 = (uint64_t)v132 - v46;
  uint64_t v47 = (char *)v1 + v25[15];
  char v48 = *v47;
  uint64_t v49 = *((void *)v47 + 1);
  LOBYTE(v173) = v48;
  uint64_t v174 = (char *)v49;
  sub_1005057FC(&qword_101695310);
  State.wrappedValue.getter();
  uint64_t v167 = v25;
  if (v171 == 1)
  {
    id v135 = (char *)LocalizedStringKey.init(stringLiteral:)();
    uint64_t v166 = v17;
    uint64_t v134 = v50;
    uint64_t v164 = v41;
    v132[1] = v51;
    uint64_t v52 = (uint64_t)v1;
    uint64_t v133 = (char *)v53;
    uint64_t v54 = (char *)v1 + v25[13];
    long long v55 = *(_OWORD *)v54;
    uint64_t v56 = *((void *)v54 + 2);
    long long v171 = v55;
    uint64_t v172 = v56;
    sub_1005057FC(&qword_101684970);
    State.projectedValue.getter();
    uint64_t v165 = v14;
    id v136 = type metadata accessor for CRLSceneRowItemUI_i;
    sub_100FF2DA0((uint64_t)v1, (uint64_t)v132 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLSceneRowItemUI_i);
    uint64_t v57 = *(unsigned __int8 *)(v168 + 80);
    id v162 = (char *)(((v57 + 16) & ~v57) + v26);
    uint64_t v163 = (v57 + 16) & ~v57;
    uint64_t v58 = v163;
    uint64_t v168 = v57 | 7;
    uint64_t v59 = swift_allocObject();
    sub_100FF2E0C((uint64_t)v28, v59 + v58, type metadata accessor for CRLSceneRowItemUI_i);
    uint64_t v60 = (uint64_t)v28;
    uint64_t v61 = v137;
    TextField<>.init(_:text:onEditingChanged:onCommit:)();
    uint64_t v62 = (char *)v1 + v25[16];
    char v63 = *v62;
    uint64_t v64 = *((void *)v62 + 1);
    LOBYTE(v62) = v62[16];
    LOBYTE(v171) = v63;
    *((void *)&v171 + 1) = v64;
    LOBYTE(v172) = (_BYTE)v62;
    sub_1005057FC(&qword_1016A6438);
    FocusState.projectedValue.getter();
    uint64_t v65 = sub_100523288(&qword_101684978, &qword_101684968);
    uint64_t v66 = v139;
    uint64_t v67 = v141;
    View.focused(_:)();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v138 + 8))(v61, v67);
    uint64_t v68 = v148;
    static SubmitLabel.done.getter();
    uint64_t v173 = v67;
    uint64_t v174 = (char *)v65;
    swift_getOpaqueTypeConformance2();
    uint64_t v69 = v144;
    uint64_t v70 = v143;
    View.submitLabel(_:)();
    (*(void (**)(char *, uint64_t))(v149 + 8))(v68, v151);
    (*(void (**)(char *, uint64_t))(v142 + 8))(v66, v70);
    uint64_t v71 = v136;
    sub_100FF2DA0((uint64_t)v1, v60, v136);
    uint64_t v72 = swift_allocObject();
    uint64_t v73 = v163;
    sub_100FF2E0C(v60, v72 + v163, v71);
    uint64_t v74 = v145;
    uint64_t v75 = (uint64_t)v147;
    uint64_t v76 = v146;
    (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v147, v69, v146);
    uint64_t v77 = (uint64_t (**)())(v75 + *(int *)(v140 + 36));
    *uint64_t v77 = sub_100FF4078;
    v77[1] = (uint64_t (*)())v72;
    v77[2] = 0;
    v77[3] = 0;
    (*(void (**)(char *, uint64_t))(v74 + 8))(v69, v76);
    sub_100FF2DA0(v52, v60, v71);
    uint64_t v78 = swift_allocObject();
    sub_100FF2E0C(v60, v78 + v73, v71);
    uint64_t v79 = v152;
    sub_100522E9C(v75, v152, &qword_1016A63D0);
    id v80 = (void *)(v79 + *(int *)(v150 + 36));
    *id v80 = 0;
    v80[1] = 0;
    v80[2] = sub_100FF4048;
    v80[3] = v78;
    sub_100522F00(v75, &qword_1016A63D0);
    sub_1005057FC(&qword_10168EEF0);
    AccessibilityFocusState.projectedValue.getter();
    sub_100FF3EB8(&qword_1016A6418, &qword_1016A63D8, (void (*)(void))sub_100FF3F34);
    uint64_t v81 = v154;
    View.accessibilityFocused(_:)();
    swift_release();
    swift_release();
    sub_100522F00(v79, &qword_1016A63D8);
    uint64_t v82 = v158;
    static WritingToolsBehavior.disabled.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v84 = v159;
    uint64_t v86 = (uint64_t)v160;
    uint64_t v85 = (uint64_t)v161;
    (*(void (**)(char *, char *, char *))(v159 + 16))(v160, v82, v161);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v84 + 56))(v86, 0, 1, v85);
    uint64_t v87 = (uint64_t)v153;
    uint64_t v88 = (uint64_t *)&v153[*(int *)(v164 + 36)];
    uint64_t v89 = sub_1005057FC(&qword_1016A6430);
    sub_100522E9C(v86, (uint64_t)v88 + *(int *)(v89 + 28), &qword_1016A63B8);
    uint64_t *v88 = KeyPath;
    uint64_t v90 = v155;
    uint64_t v91 = v156;
    (*(void (**)(uint64_t, char *, uint64_t))(v155 + 16))(v87, v81, v156);
    sub_100522F00(v86, &qword_1016A63B8);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v82, v85);
    (*(void (**)(char *, uint64_t))(v90 + 8))(v81, v91);
    uint64_t v92 = v157;
    sub_10051B3EC(v87, v157, &qword_1016A63E8);
    sub_100522E9C(v92, (uint64_t)v166, &qword_1016A63E8);
    swift_storeEnumTagMultiPayload();
    sub_100FF3DB0();
    uint64_t v93 = sub_100522D34(&qword_1016A63F0);
    unint64_t v94 = sub_100FF3D10();
    uint64_t v173 = v93;
    uint64_t v174 = (char *)v94;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return sub_100522F00(v92, &qword_1016A63E8);
  }
  uint64_t v159 = v26;
  uint64_t v96 = v170;
  uint64_t v133 = v7;
  uint64_t v160 = v13;
  uint64_t v161 = v28;
  uint64_t v97 = v1;
  uint64_t v98 = (uint64_t *)(*(void *)v1 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_name);
  uint64_t v99 = v98[1];
  uint64_t v173 = *v98;
  uint64_t v174 = (char *)v99;
  sub_10052E310();
  swift_bridgeObjectRetain();
  uint64_t v100 = Text.init<A>(_:)();
  unint64_t v158 = v101;
  LODWORD(v157) = v102;
  uint64_t v104 = v103;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v106 = (uint64_t)v97;
  if (!Strong) {
    goto LABEL_9;
  }
  uint64_t v154 = (char *)Strong;
  uint64_t v155 = v100;
  uint64_t v156 = v104;
  uint64_t v164 = v41;
  uint64_t v165 = v14;
  uint64_t v166 = v17;
  uint64_t v167 = v97;
  sub_100E03F74((uint64_t)v133);
  sub_1005057FC(&qword_1016755E8);
  uint64_t v107 = (void *)v134;
  uint64_t v108 = *(void *)(v134 + 72);
  unint64_t v109 = (*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80);
  uint64_t v110 = 2 * v108;
  uint64_t v111 = swift_allocObject();
  *(_OWORD *)(v111 + 16) = xmmword_10117DF40;
  unint64_t v112 = v111 + v109;
  uint64_t v113 = (void (*)(void))v107[13];
  uint64_t v114 = v136;
  ((void (*)(unint64_t, void, uint64_t (*)(void)))v113)(v111 + v109, enum case for DynamicTypeSize.accessibility3(_:), v136);
  uint64_t v115 = v112 + v108;
  ((void (*)(uint64_t, void, uint64_t (*)(void)))v113)(v115, enum case for DynamicTypeSize.accessibility4(_:), v114);
  uint64_t v152 = v112 + v110;
  v113();
  char v116 = v135;
  v153 = (char *)v107[2];
  ((void (*)(char *, unint64_t, uint64_t (*)(void)))v153)(v135, v112, v114);
  sub_100FEF54C((unint64_t *)&qword_1016755F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  LOBYTE(v109) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v117 = (void (*)(char *, uint64_t (*)(void)))v107[1];
  swift_bridgeObjectRetain();
  v117(v116, v114);
  if ((v109 & 1) == 0)
  {
    ((void (*)(char *, uint64_t, uint64_t (*)(void)))v153)(v116, v115, v114);
    char v118 = dispatch thunk of static Equatable.== infix(_:_:)();
    v117(v116, v114);
    if ((v118 & 1) == 0)
    {
      ((void (*)(char *, uint64_t, uint64_t (*)(void)))v153)(v116, v152, v114);
      uint64_t v121 = (uint64_t)v133;
      char v122 = dispatch thunk of static Equatable.== infix(_:_:)();
      v117(v116, v114);
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      swift_unknownObjectRelease();
      v117((char *)v121, v114);
      uint64_t v96 = v170;
      uint64_t v17 = v166;
      uint64_t v106 = (uint64_t)v167;
      uint64_t v104 = v156;
      uint64_t v100 = v155;
      if (v122)
      {
        uint64_t v119 = 3;
LABEL_10:
        uint64_t v120 = (uint64_t)v17;
        goto LABEL_11;
      }
LABEL_9:
      uint64_t v119 = 1;
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  v117(v133, v114);
  uint64_t v119 = 3;
  uint64_t v96 = v170;
  uint64_t v120 = (uint64_t)v166;
  uint64_t v106 = (uint64_t)v167;
  uint64_t v104 = v156;
  uint64_t v100 = v155;
LABEL_11:
  uint64_t v123 = swift_getKeyPath();
  uint64_t v173 = v100;
  uint64_t v174 = v158;
  LOBYTE(v175) = v157 & 1;
  uint64_t v176 = v104;
  uint64_t v177 = v123;
  uint64_t v178 = v119;
  char v179 = 0;
  uint64_t v124 = (uint64_t)v161;
  sub_100FF2DA0(v106, (uint64_t)v161, type metadata accessor for CRLSceneRowItemUI_i);
  unint64_t v125 = (*(unsigned __int8 *)(v168 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80);
  uint64_t v126 = swift_allocObject();
  sub_100FF2E0C(v124, v126 + v125, type metadata accessor for CRLSceneRowItemUI_i);
  uint64_t v127 = sub_1005057FC(&qword_1016A63F0);
  unint64_t v128 = sub_100FF3D10();
  uint64_t v129 = v162;
  View.onTapGesture(count:perform:)();
  swift_release();
  sub_1006A7D28(v173, (uint64_t)v174, v175);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v130 = v163;
  uint64_t v131 = v160;
  (*(void (**)(char *, char *, uint64_t))(v163 + 32))(v160, v129, v96);
  (*(void (**)(uint64_t, char *, uint64_t))(v130 + 16))(v120, v131, v96);
  swift_storeEnumTagMultiPayload();
  sub_100FF3DB0();
  uint64_t v173 = v127;
  uint64_t v174 = (char *)v128;
  swift_getOpaqueTypeConformance2();
  _ConditionalContent<>.init(storage:)();
  return (*(uint64_t (**)(char *, uint64_t))(v130 + 8))(v131, v96);
}

uint64_t sub_100FE7918(char **a1)
{
  uint64_t v2 = type metadata accessor for EditMode();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  uint64_t v7 = sub_1005057FC(&qword_10169D6D0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  uint64_t v11 = type metadata accessor for CRLSceneRowItemUI_i(0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  uint64_t v16 = (char *)a1 + *(int *)(v15 + 44);
  uint64_t v17 = *((void *)v16 + 2);
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v16;
  *(void *)&v38[16] = v17;
  sub_1005057FC(&qword_1016A61F8);
  Binding.wrappedValue.getter();
  if (!v39)
  {
    sub_100FF2DA0((uint64_t)a1, (uint64_t)v14, type metadata accessor for CRLSceneRowItemUI_i);
    sub_100E03F0C((uint64_t)v10);
    uint64_t v24 = sub_1005057FC(&qword_1016A5E28);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v10, 1, v24) == 1)
    {
      sub_100522F00((uint64_t)v10, &qword_10169D6D0);
      sub_100FF38E8((uint64_t)v14, type metadata accessor for CRLSceneRowItemUI_i);
    }
    else
    {
      Binding.wrappedValue.getter();
      sub_100522F00((uint64_t)v10, &qword_1016A5E28);
      char v25 = EditMode.isEditing.getter();
      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v6, v2);
      sub_100FF38E8((uint64_t)v14, type metadata accessor for CRLSceneRowItemUI_i);
      if (v25) {
        goto LABEL_3;
      }
    }
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_100E6A650(*a1);
      swift_unknownObjectRelease();
    }
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_101177E70;
    uint64_t v27 = *a1;
    *(void *)(inited + 32) = *a1;
    *(void *)uint64_t v38 = inited;
    specialized Array._endMutation()();
    unint64_t v28 = *(void *)v38;
    if (*(void *)v38 >> 62)
    {
      uint64_t v33 = v27;
      swift_bridgeObjectRetain();
      uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v34) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v29 = *(void *)((*(void *)v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v30 = v27;
      if (v29)
      {
LABEL_11:
        sub_10050BF28(v28);
        uint64_t v32 = v31;
LABEL_14:
        swift_bridgeObjectRelease();
        uint64_t v35 = (char *)a1 + *(int *)(v11 + 40);
        *(void *)uint64_t v38 = *(void *)v35;
        *(_OWORD *)&v38[8] = *(_OWORD *)(v35 + 8);
        uint64_t v39 = v32;
        sub_1005057FC(&qword_1016A61E8);
        return Binding.wrappedValue.setter();
      }
    }
    uint64_t v32 = (char *)&_swiftEmptySetSingleton;
    goto LABEL_14;
  }

  sub_100FF2DA0((uint64_t)a1, (uint64_t)v14, type metadata accessor for CRLSceneRowItemUI_i);
  sub_100FF38E8((uint64_t)v14, type metadata accessor for CRLSceneRowItemUI_i);
LABEL_3:
  uint64_t v18 = (char *)a1 + *(int *)(v11 + 60);
  char v19 = *v18;
  uint64_t v20 = *((void *)v18 + 1);
  v38[0] = v19;
  *(void *)&v38[8] = v20;
  LOBYTE(v39) = 1;
  sub_1005057FC(&qword_101695310);
  State.wrappedValue.setter();
  uint64_t v21 = *a1;
  uint64_t v22 = *((void *)v16 + 2);
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v16;
  *(void *)&v38[16] = v22;
  uint64_t v39 = v21;
  uint64_t v23 = v21;
  return Binding.wrappedValue.setter();
}

uint64_t sub_100FE7D44()
{
  return ViewDimensions.subscript.getter();
}

uint64_t sub_100FE7D6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v164 = a2;
  uint64_t v150 = sub_1005057FC(&qword_1016A61D8);
  __chkstk_darwin(v150, v3);
  uint64_t v138 = (char *)&v130 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = sub_1005057FC(&qword_1016A6280);
  __chkstk_darwin(v147, v5);
  uint64_t v149 = (uint64_t)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_1005057FC(&qword_1016A61C8);
  __chkstk_darwin(v148, v7);
  uint64_t v145 = (char *)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_1016A6288);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v139 = (char *)&v130 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_1016A6290);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v156 = (uint64_t)&v130 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v160 = (char *)&v130 - v17;
  uint64_t v140 = type metadata accessor for Divider();
  uint64_t v144 = *(void *)(v140 - 8);
  __chkstk_darwin(v140, v18);
  uint64_t v143 = (char *)&v130 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v154 = (char *)&v130 - v22;
  __chkstk_darwin(v23, v24);
  uint64_t v155 = (char *)&v130 - v25;
  __chkstk_darwin(v26, v27);
  uint64_t v157 = (char *)&v130 - v28;
  __chkstk_darwin(v29, v30);
  unint64_t v158 = (char *)&v130 - v31;
  __chkstk_darwin(v32, v33);
  uint64_t v159 = (char *)&v130 - v34;
  uint64_t v35 = type metadata accessor for CRLSceneRowItemUI_i(0);
  uint64_t v36 = v35 - 8;
  unint64_t v152 = *(void *)(v35 - 8);
  __chkstk_darwin(v35, v37);
  uint64_t v153 = v38;
  uint64_t v151 = (uint64_t)&v130 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_1005057FC(&qword_1016A6298);
  uint64_t v161 = *(void *)(v146 - 8);
  __chkstk_darwin(v146, v39);
  uint64_t v142 = (char *)&v130 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41, v42);
  uint64_t v44 = (char *)&v130 - v43;
  __chkstk_darwin(v45, v46);
  char v48 = (char *)&v130 - v47;
  __chkstk_darwin(v49, v50);
  uint64_t v52 = (char *)&v130 - v51;
  __chkstk_darwin(v53, v54);
  uint64_t v56 = (char *)&v130 - v55;
  __chkstk_darwin(v57, v58);
  uint64_t v60 = (char *)&v130 - v59;
  __chkstk_darwin(v61, v62);
  uint64_t v64 = (char *)&v130 - v63;
  __chkstk_darwin(v65, v66);
  uint64_t v68 = (char *)&v130 - v67;
  uint64_t v69 = sub_1005057FC(&qword_1016A61B8);
  uint64_t v162 = *(void *)(v69 - 8);
  uint64_t v163 = v69;
  __chkstk_darwin(v69, v70);
  uint64_t v72 = (char *)&v130 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = a1 + *(int *)(v36 + 52);
  long long v74 = *(_OWORD *)v73;
  uint64_t v75 = *(void *)(v73 + 16);
  long long v165 = v74;
  uint64_t v166 = v75;
  sub_1005057FC(&qword_1016A61F8);
  Binding.wrappedValue.getter();
  if (v167)
  {

    uint64_t v76 = 1;
    uint64_t v78 = v162;
    uint64_t v77 = v163;
    uint64_t v79 = v164;
  }
  else
  {
    uint64_t v133 = v48;
    uint64_t v131 = v44;
    uint64_t v134 = v68;
    uint64_t v137 = v52;
    id v135 = v56;
    id v136 = v60;
    uint64_t v141 = v64;
    uint64_t v132 = v72;
    uint64_t v80 = a1;
    uint64_t v81 = *(void **)(a1 + 32);
    swift_getKeyPath();
    swift_getKeyPath();
    id v82 = v81;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    char v83 = v165;
    uint64_t v84 = v151;
    sub_100FF2DA0(a1, v151, type metadata accessor for CRLSceneRowItemUI_i);
    unint64_t v85 = (*(unsigned __int8 *)(v152 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80);
    if (v83)
    {
      uint64_t v86 = swift_allocObject();
      sub_100FF2E0C(v84, v86 + v85, type metadata accessor for CRLSceneRowItemUI_i);
      sub_1005057FC(&qword_1016A62A0);
      uint64_t v160 = (char *)&protocol conformance descriptor for TupleView<A>;
      sub_100523288(&qword_1016A62A8, &qword_1016A62A0);
      uint64_t v87 = v141;
      Button.init(action:label:)();
      sub_100FF2DA0(a1, v84, type metadata accessor for CRLSceneRowItemUI_i);
      uint64_t v88 = swift_allocObject();
      sub_100FF2E0C(v84, v88 + v85, type metadata accessor for CRLSceneRowItemUI_i);
      uint64_t v89 = v136;
      Button.init(action:label:)();
      uint64_t v90 = v161;
      uint64_t v91 = *(void (**)(char *, char *, uint64_t))(v161 + 16);
      uint64_t v92 = v135;
      uint64_t v93 = v146;
      v91(v135, v87, v146);
      unint64_t v94 = v137;
      v91(v137, v89, v93);
      uint64_t v95 = (uint64_t)v138;
      v91(v138, v92, v93);
      uint64_t v96 = sub_1005057FC(&qword_1016A62B8);
      v91((char *)(v95 + *(int *)(v96 + 48)), v94, v93);
      uint64_t v97 = *(void (**)(char *, uint64_t))(v90 + 8);
      v97(v94, v93);
      v97(v92, v93);
      sub_100522E9C(v95, v149, &qword_1016A61D8);
      swift_storeEnumTagMultiPayload();
      sub_100523288(&qword_1016A61C0, &qword_1016A61C8);
      sub_100523288(&qword_1016A61D0, &qword_1016A61D8);
      uint64_t v98 = (uint64_t)v132;
      _ConditionalContent<>.init(storage:)();
      sub_100522F00(v95, &qword_1016A61D8);
      v97(v89, v93);
      v97(v141, v93);
    }
    else
    {
      uint64_t v99 = swift_allocObject();
      sub_100FF2E0C(v84, v99 + v85, type metadata accessor for CRLSceneRowItemUI_i);
      uint64_t v100 = sub_1005057FC(&qword_1016A62A0);
      uint64_t v101 = v84;
      sub_100523288(&qword_1016A62A8, &qword_1016A62A0);
      Button.init(action:label:)();
      Divider.init()();
      char v102 = sub_100FE189C();
      uint64_t v103 = v160;
      uint64_t v104 = v161;
      uint64_t v105 = v80;
      if (v102)
      {
        uint64_t v106 = 1;
      }
      else
      {
        sub_100FF2DA0(v80, v101, type metadata accessor for CRLSceneRowItemUI_i);
        uint64_t v107 = swift_allocObject();
        uint64_t v103 = v160;
        sub_100FF2E0C(v101, v107 + v85, type metadata accessor for CRLSceneRowItemUI_i);
        Button.init(action:label:)();
        uint64_t v106 = 0;
      }
      uint64_t v108 = v146;
      (*(void (**)(void *, uint64_t, uint64_t))(v104 + 56))(v103, v106, 1);
      Divider.init()();
      sub_100FF2DA0(v105, v101, type metadata accessor for CRLSceneRowItemUI_i);
      uint64_t v109 = swift_allocObject();
      sub_100FF2E0C(v101, v109 + v85, type metadata accessor for CRLSceneRowItemUI_i);
      uint64_t v153 = v100;
      Button.init(action:label:)();
      sub_100FF2DA0(v105, v101, type metadata accessor for CRLSceneRowItemUI_i);
      uint64_t v110 = swift_allocObject();
      sub_100FF2E0C(v101, v110 + v85, type metadata accessor for CRLSceneRowItemUI_i);
      unint64_t v152 = v85;
      uint64_t v111 = v136;
      Button.init(action:label:)();
      Divider.init()();
      unint64_t v112 = v139;
      static ButtonRole.destructive.getter();
      uint64_t v113 = type metadata accessor for ButtonRole();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v112, 0, 1, v113);
      sub_100FF2DA0(v105, v101, type metadata accessor for CRLSceneRowItemUI_i);
      uint64_t v114 = swift_allocObject();
      sub_100FF2E0C(v101, v114 + v152, type metadata accessor for CRLSceneRowItemUI_i);
      uint64_t v115 = v135;
      Button.init(role:action:label:)();
      char v116 = v111;
      uint64_t v117 = *(void (**)(char *, char *, uint64_t))(v161 + 16);
      v117(v137, v134, v108);
      char v118 = *(void (**)(char *, char *, uint64_t))(v144 + 16);
      uint64_t v119 = v140;
      v118(v155, v159, v140);
      sub_100522E9C((uint64_t)v160, v156, &qword_1016A6290);
      v118(v154, v158, v119);
      v117(v133, v141, v108);
      v117(v131, v116, v108);
      v118(v143, v157, v119);
      v117(v142, v115, v108);
      uint64_t v120 = (uint64_t)v145;
      uint64_t v121 = v108;
      v117(v145, v137, v108);
      char v122 = (int *)sub_1005057FC(&qword_1016A62B0);
      v118((char *)(v120 + v122[12]), v155, v119);
      sub_100522E9C(v156, v120 + v122[16], &qword_1016A6290);
      v118((char *)(v120 + v122[20]), v154, v119);
      v117((char *)(v120 + v122[24]), v133, v108);
      uint64_t v123 = v131;
      v117((char *)(v120 + v122[28]), v131, v108);
      uint64_t v124 = v143;
      v118((char *)(v120 + v122[32]), v143, v119);
      unint64_t v125 = v142;
      v117((char *)(v120 + v122[36]), v142, v121);
      uint64_t v126 = *(void (**)(char *, uint64_t))(v161 + 8);
      v126(v125, v121);
      uint64_t v127 = *(void (**)(char *, uint64_t))(v144 + 8);
      v127(v124, v119);
      v126(v123, v121);
      v126(v133, v121);
      v127(v154, v119);
      sub_100522F00(v156, &qword_1016A6290);
      v127(v155, v119);
      v126(v137, v121);
      sub_100522E9C(v120, v149, &qword_1016A61C8);
      swift_storeEnumTagMultiPayload();
      sub_100523288(&qword_1016A61C0, &qword_1016A61C8);
      sub_100523288(&qword_1016A61D0, &qword_1016A61D8);
      uint64_t v128 = (uint64_t)v160;
      uint64_t v98 = (uint64_t)v132;
      _ConditionalContent<>.init(storage:)();
      sub_100522F00((uint64_t)v145, &qword_1016A61C8);
      v126(v135, v121);
      v127(v157, v119);
      v126(v136, v121);
      v126(v141, v121);
      v127(v158, v119);
      sub_100522F00(v128, &qword_1016A6290);
      v127(v159, v119);
      v126(v134, v121);
    }
    uint64_t v77 = v163;
    uint64_t v79 = v164;
    uint64_t v78 = v162;
    sub_10051B3EC(v98, v164, &qword_1016A61B8);
    uint64_t v76 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 56))(v79, v76, 1, v77);
}

void sub_100FE8F34(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  uint64_t v3 = v9;
  if (!v9)
  {
    type metadata accessor for CRLSceneRowItemUI_i(0);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1005057FC(&qword_1016A61E8);
    Binding.wrappedValue.getter();
    swift_bridgeObjectRelease();
    Binding.wrappedValue.setter();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return;
  }
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_101177E70;
  *(void *)(inited + 32) = v9;
  unint64_t v10 = inited;
  specialized Array._endMutation()();
  if (v10 >> 62)
  {
    id v7 = v3;
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v8) {
      goto LABEL_7;
    }
    goto LABEL_4;
  }
  uint64_t v5 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v6 = v3;
  if (v5) {
LABEL_4:
  }
    sub_10050BF28(v10);
LABEL_7:
  swift_bridgeObjectRelease();
  type metadata accessor for CRLSceneRowItemUI_i(0);
  sub_1005057FC(&qword_1016A61E8);
  Binding.wrappedValue.setter();
}

void sub_100FE9140()
{
  type metadata accessor for CRLSceneRowItemUI_i(0);
  LOBYTE(v5) = 0;
  sub_1005057FC(&qword_101695310);
  State.wrappedValue.setter();
  sub_1005057FC(&qword_1016A61F8);
  Binding.wrappedValue.getter();
  if (v5)
  {
    uint64_t v1 = *v0;
    type metadata accessor for CRLSceneInfo();
    id v2 = v1;
    id v3 = v5;
    char v4 = static NSObject.== infix(_:_:)();

    if (v4) {
      Binding.wrappedValue.setter();
    }
  }
}

uint64_t sub_100FE9254(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v20 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLSceneRowItemUI_i(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10 - 8, v13);
  sub_100656064();
  uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
  sub_100FF2DA0(a1, (uint64_t)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLSceneRowItemUI_i);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v16 = swift_allocObject();
  sub_100FF2E0C((uint64_t)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for CRLSceneRowItemUI_i);
  aBlock[4] = sub_100FF38A4;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = &unk_101536C60;
  uint64_t v17 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100FEF54C((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v19);
}

uint64_t sub_100FE95D0()
{
  return State.wrappedValue.setter();
}

void sub_100FE9648()
{
  type metadata accessor for CRLSceneRowItemUI_i(0);
  sub_1005057FC(&qword_1016A61F8);
  Binding.wrappedValue.getter();

  if (!v0) {
    sub_100FE9140();
  }
}

uint64_t sub_100FE96BC(char **a1)
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_100E6A650(*a1);
    swift_unknownObjectRelease();
  }
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_101177E70;
  uint64_t v3 = *a1;
  *(void *)(inited + 32) = *a1;
  unint64_t v9 = inited;
  specialized Array._endMutation()();
  if (v9 >> 62)
  {
    uint64_t v6 = v3;
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v5 = v3;
  if (v4) {
LABEL_5:
  }
    sub_10050BF28(v9);
LABEL_7:
  swift_bridgeObjectRelease();
  type metadata accessor for CRLSceneRowItemUI_i(0);
  sub_1005057FC(&qword_1016A61E8);
  return Binding.wrappedValue.setter();
}

uint64_t sub_100FE97E8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v100 = a2;
  uint64_t v101 = sub_1005057FC(&qword_1016A6250);
  __chkstk_darwin(v101, v3);
  uint64_t v94 = (uint64_t)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_1016A6258);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v93 = (uint64_t)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v92 = (uint64_t)&v91 - v10;
  __chkstk_darwin(v11, v12);
  uint64_t v102 = (uint64_t)&v91 - v13;
  __chkstk_darwin(v14, v15);
  uint64_t v104 = (char *)&v91 - v16;
  uint64_t v17 = sub_1005057FC(&qword_1016A6260);
  __chkstk_darwin(v17, v18);
  uint64_t v99 = (uint64_t)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_1005057FC(&qword_1016A6240);
  __chkstk_darwin(v98, v20);
  uint64_t v91 = (char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for CRLSceneRowItemUI_i(0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void *)(v23 + 64);
  __chkstk_darwin(v22, v25);
  uint64_t v106 = (uint64_t)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1005057FC(&qword_1016A5EE8);
  uint64_t v103 = *(void *)(v26 - 8);
  __chkstk_darwin(v26, v27);
  uint64_t v95 = (char *)&v91 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29, v30);
  uint64_t v96 = (char *)&v91 - v31;
  __chkstk_darwin(v32, v33);
  uint64_t v105 = (char *)&v91 - v34;
  __chkstk_darwin(v35, v36);
  uint64_t v107 = (char *)&v91 - v37;
  uint64_t v38 = a1;
  uint64_t v39 = a1[4];
  swift_getKeyPath();
  swift_getKeyPath();
  id v40 = v39;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  uint64_t v97 = v17;
  if (v108 == 1)
  {
    uint64_t v41 = v106;
    sub_100FF2DA0((uint64_t)v38, v106, type metadata accessor for CRLSceneRowItemUI_i);
    unint64_t v42 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v43 = swift_allocObject();
    sub_100FF2E0C(v41, v43 + v42, type metadata accessor for CRLSceneRowItemUI_i);
    sub_1005057FC(&qword_1016A5EF8);
    uint64_t v104 = (char *)&protocol conformance descriptor for TupleView<A>;
    sub_100523288(&qword_1016A5F00, &qword_1016A5EF8);
    Button.init(action:label:)();
    sub_100FF2DA0((uint64_t)v38, v41, type metadata accessor for CRLSceneRowItemUI_i);
    uint64_t v44 = swift_allocObject();
    sub_100FF2E0C(v41, v44 + v42, type metadata accessor for CRLSceneRowItemUI_i);
    uint64_t v45 = v105;
    Button.init(action:label:)();
    uint64_t v46 = v103;
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v103 + 16);
    char v48 = v96;
    uint64_t v49 = v107;
    v47(v96, v107, v26);
    uint64_t v50 = v95;
    v47(v95, v45, v26);
    uint64_t v51 = (uint64_t)v91;
    v47(v91, v48, v26);
    uint64_t v52 = sub_1005057FC(&qword_1016A6270);
    v47((char *)(v51 + *(int *)(v52 + 48)), v50, v26);
    uint64_t v53 = *(void (**)(char *, uint64_t))(v46 + 8);
    v53(v50, v26);
    v53(v48, v26);
    sub_100522E9C(v51, v99, &qword_1016A6240);
    swift_storeEnumTagMultiPayload();
    sub_100523288(&qword_1016A6238, &qword_1016A6240);
    sub_100523288(&qword_1016A6248, &qword_1016A6250);
    _ConditionalContent<>.init(storage:)();
    sub_100522F00(v51, &qword_1016A6240);
    v53(v45, v26);
    return ((uint64_t (*)(char *, uint64_t))v53)(v49, v26);
  }
  else
  {
    uint64_t v55 = v23;
    uint64_t v56 = v103;
    uint64_t v57 = (char *)v38 + *(int *)(v22 + 44);
    long long v58 = *(_OWORD *)v57;
    uint64_t v59 = *((void *)v57 + 2);
    long long v108 = v58;
    uint64_t v109 = v59;
    sub_1005057FC(&qword_1016A61F8);
    Binding.wrappedValue.getter();
    uint64_t v60 = v110;
    uint64_t v61 = (uint64_t)v38;
    if (!v110) {
      goto LABEL_6;
    }
    uint64_t v62 = *v38;
    type metadata accessor for CRLSceneInfo();
    id v63 = v62;
    id v64 = v60;
    char v65 = static NSObject.== infix(_:_:)();

    if (v65)
    {
      uint64_t v66 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56);
      v66(v104, 1, 1, v26);
    }
    else
    {
LABEL_6:
      uint64_t v67 = (uint64_t)v38;
      uint64_t v68 = v106;
      sub_100FF2DA0(v67, v106, type metadata accessor for CRLSceneRowItemUI_i);
      unint64_t v69 = (*(unsigned __int8 *)(v55 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
      uint64_t v70 = swift_allocObject();
      sub_100FF2E0C(v68, v70 + v69, type metadata accessor for CRLSceneRowItemUI_i);
      sub_1005057FC(&qword_1016A5EF8);
      sub_100523288(&qword_1016A5F00, &qword_1016A5EF8);
      uint64_t v71 = v104;
      Button.init(action:label:)();
      uint64_t v66 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56);
      v66(v71, 0, 1, v26);
    }
    if (sub_100FE189C())
    {
      uint64_t v72 = 1;
      uint64_t v73 = v102;
    }
    else
    {
      uint64_t v74 = v106;
      sub_100FF2DA0(v61, v106, type metadata accessor for CRLSceneRowItemUI_i);
      unint64_t v75 = (*(unsigned __int8 *)(v55 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
      uint64_t v76 = swift_allocObject();
      sub_100FF2E0C(v74, v76 + v75, type metadata accessor for CRLSceneRowItemUI_i);
      sub_1005057FC(&qword_1016A5EF8);
      sub_100523288(&qword_1016A5F00, &qword_1016A5EF8);
      uint64_t v73 = v102;
      Button.init(action:label:)();
      uint64_t v72 = 0;
    }
    v66((char *)v73, v72, 1, v26);
    uint64_t v77 = v106;
    sub_100FF2DA0(v61, v106, type metadata accessor for CRLSceneRowItemUI_i);
    unint64_t v78 = (*(unsigned __int8 *)(v55 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
    uint64_t v79 = swift_allocObject();
    sub_100FF2E0C(v77, v79 + v78, type metadata accessor for CRLSceneRowItemUI_i);
    sub_1005057FC(&qword_1016A5EF8);
    uint64_t v91 = (char *)&protocol conformance descriptor for TupleView<A>;
    sub_100523288(&qword_1016A5F00, &qword_1016A5EF8);
    Button.init(action:label:)();
    sub_100FF2DA0(v61, v77, type metadata accessor for CRLSceneRowItemUI_i);
    uint64_t v80 = swift_allocObject();
    sub_100FF2E0C(v77, v80 + v78, type metadata accessor for CRLSceneRowItemUI_i);
    uint64_t v81 = v105;
    Button.init(action:label:)();
    uint64_t v82 = v92;
    sub_100522E9C((uint64_t)v104, v92, &qword_1016A6258);
    uint64_t v83 = v93;
    sub_100522E9C(v102, v93, &qword_1016A6258);
    uint64_t v84 = v103;
    unint64_t v85 = *(void (**)(char *, char *, uint64_t))(v103 + 16);
    uint64_t v86 = v96;
    v85(v96, v107, v26);
    uint64_t v87 = v95;
    v85(v95, v81, v26);
    uint64_t v88 = v94;
    sub_100522E9C(v82, v94, &qword_1016A6258);
    uint64_t v89 = (int *)sub_1005057FC(&qword_1016A6268);
    sub_100522E9C(v83, v88 + v89[12], &qword_1016A6258);
    v85((char *)(v88 + v89[16]), v86, v26);
    v85((char *)(v88 + v89[20]), v87, v26);
    uint64_t v90 = *(void (**)(char *, uint64_t))(v84 + 8);
    v90(v87, v26);
    v90(v86, v26);
    sub_100522F00(v83, &qword_1016A6258);
    sub_100522F00(v82, &qword_1016A6258);
    sub_100522E9C(v88, v99, &qword_1016A6250);
    swift_storeEnumTagMultiPayload();
    sub_100523288(&qword_1016A6238, &qword_1016A6240);
    sub_100523288(&qword_1016A6248, &qword_1016A6250);
    _ConditionalContent<>.init(storage:)();
    sub_100522F00(v88, &qword_1016A6250);
    v90(v105, v26);
    v90(v107, v26);
    sub_100522F00(v102, &qword_1016A6258);
    return sub_100522F00((uint64_t)v104, &qword_1016A6258);
  }
}

uint64_t sub_100FEA484@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = Image.init(systemName:)();
  if (qword_10166F668 != -1) {
    swift_once();
  }
  sub_10052E310();
  swift_bridgeObjectRetain();
  uint64_t v3 = Text.init<A>(_:)();
  uint64_t v5 = v4;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v7 = v6 & 1;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v6 & 1;
  *(void *)(a1 + 32) = v8;
  swift_retain();
  sub_10073F0E0(v3, v5, v7);
  swift_bridgeObjectRetain();
  sub_1006A7D28(v3, v5, v7);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100FEA5A0(id *a1)
{
  type metadata accessor for CRLSceneRowItemUI_i(0);
  sub_1005057FC(&qword_101695310);
  State.wrappedValue.setter();
  id v2 = *a1;
  sub_1005057FC(&qword_1016A61F8);
  return Binding.wrappedValue.setter();
}

uint64_t sub_100FEA658@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = Image.init(systemName:)();
  if (qword_10166F638 != -1) {
    swift_once();
  }
  sub_10052E310();
  swift_bridgeObjectRetain();
  uint64_t v3 = Text.init<A>(_:)();
  uint64_t v5 = v4;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v7 = v6 & 1;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v6 & 1;
  *(void *)(a1 + 32) = v8;
  swift_retain();
  sub_10073F0E0(v3, v5, v7);
  swift_bridgeObjectRetain();
  sub_1006A7D28(v3, v5, v7);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100FEA76C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = Image.init(systemName:)();
  if (qword_10166F640 != -1) {
    swift_once();
  }
  sub_10052E310();
  swift_bridgeObjectRetain();
  uint64_t v3 = Text.init<A>(_:)();
  uint64_t v5 = v4;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v7 = v6 & 1;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v6 & 1;
  *(void *)(a1 + 32) = v8;
  swift_retain();
  sub_10073F0E0(v3, v5, v7);
  swift_bridgeObjectRetain();
  sub_1006A7D28(v3, v5, v7);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100FEA888@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = Image.init(systemName:)();
  if (qword_10166F658 != -1) {
    swift_once();
  }
  sub_10052E310();
  swift_bridgeObjectRetain();
  uint64_t v3 = Text.init<A>(_:)();
  uint64_t v5 = v4;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v7 = v6 & 1;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v6 & 1;
  *(void *)(a1 + 32) = v8;
  swift_retain();
  sub_10073F0E0(v3, v5, v7);
  swift_bridgeObjectRetain();
  sub_1006A7D28(v3, v5, v7);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100FEA9A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v175 = a2;
  uint64_t v177 = 0x4052C00000000000;
  uint64_t v163 = sub_1005057FC(&qword_1016A64B0);
  __chkstk_darwin(v163, v3);
  uint64_t v167 = (uint64_t)&v137 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_1005057FC(&qword_1016A64B8);
  __chkstk_darwin(v157, v5);
  uint64_t v166 = (char *)&v137 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = type metadata accessor for SeparatorShapeStyle();
  uint64_t v164 = *(void *)(v165 - 8);
  __chkstk_darwin(v165, v7);
  uint64_t v161 = (char *)&v137 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = type metadata accessor for Image.ResizingMode();
  uint64_t v154 = *(void *)(v155 - 8);
  __chkstk_darwin(v155, v9);
  uint64_t v153 = (char *)&v137 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_1005057FC(&qword_1016A64C0);
  __chkstk_darwin(v159, v11);
  unint64_t v158 = (char *)&v137 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_1016A64C8);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v160 = (char *)&v137 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = sub_1005057FC(&qword_1016A64D0);
  __chkstk_darwin(v174, v16);
  uint64_t v156 = (uint64_t)&v137 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v162 = (uint64_t)&v137 - v20;
  uint64_t v172 = sub_1005057FC(&qword_1016A64D8);
  __chkstk_darwin(v172, v21);
  uint64_t v173 = (uint64_t)&v137 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = type metadata accessor for ControlSize();
  uint64_t v150 = *(void *)(v151 - 8);
  __chkstk_darwin(v151, v23);
  uint64_t v149 = (char *)&v137 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_1005057FC(&qword_1016A64E0);
  uint64_t v146 = *(void *)(v148 - 8);
  __chkstk_darwin(v148, v25);
  uint64_t v144 = (char *)&v137 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_1005057FC(&qword_1016A64E8);
  __chkstk_darwin(v145, v27);
  uint64_t v143 = (char *)&v137 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = sub_1005057FC(&qword_1016A64F0);
  __chkstk_darwin(v169, v29);
  uint64_t v142 = (char *)&v137 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31, v32);
  uint64_t v147 = (uint64_t)&v137 - v33;
  uint64_t v34 = sub_1005057FC(&qword_1016A64F8);
  __chkstk_darwin(v34 - 8, v35);
  uint64_t v171 = (uint64_t)&v137 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37, v38);
  uint64_t v170 = (char *)&v137 - v39;
  uint64_t v40 = type metadata accessor for DynamicTypeSize();
  v180 = *(void **)(v40 - 8);
  __chkstk_darwin(v40, v41);
  uint64_t v43 = (char *)&v137 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44, v45);
  uint64_t v47 = (char *)&v137 - v46;
  __chkstk_darwin(v48, v49);
  uint64_t v51 = (char *)&v137 - v50;
  __chkstk_darwin(v52, v53);
  uint64_t v178 = (char *)&v137 - v54;
  uint64_t v168 = static Color.clear.getter();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v56 = &unk_10117D000;
  uint64_t v176 = a1;
  char v179 = v47;
  if (!Strong) {
    goto LABEL_6;
  }
  uint64_t v139 = Strong;
  unint64_t v140 = a1 + 8;
  uint64_t v141 = v43;
  type metadata accessor for CRLSceneRowItemUI_i(0);
  uint64_t v57 = v180;
  sub_100E03F74((uint64_t)v178);
  sub_1005057FC(&qword_1016755E8);
  uint64_t v58 = v57[9];
  unint64_t v59 = (*((unsigned __int8 *)v57 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v57 + 80);
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_10117DF40;
  unint64_t v61 = v60 + v59;
  uint64_t v62 = (void (*)(void))v57[13];
  ((void (*)(unint64_t, void, uint64_t))v62)(v60 + v59, enum case for DynamicTypeSize.accessibility3(_:), v40);
  unint64_t v63 = v61 + v58;
  ((void (*)(unint64_t, void, uint64_t))v62)(v61 + v58, enum case for DynamicTypeSize.accessibility4(_:), v40);
  unint64_t v137 = v61 + 2 * v58;
  v62();
  uint64_t v138 = (void (*)(char *, unint64_t, uint64_t))v57[2];
  v138(v51, v61, v40);
  sub_100FEF54C((unint64_t *)&qword_1016755F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  LOBYTE(v58) = dispatch thunk of static Equatable.== infix(_:_:)();
  id v64 = (void (*)(char *, uint64_t))v57[1];
  swift_bridgeObjectRetain();
  unint64_t v152 = v64;
  v64(v51, v40);
  if ((v58 & 1) == 0)
  {
    v138(v51, v63, v40);
    char v65 = dispatch thunk of static Equatable.== infix(_:_:)();
    v152(v51, v40);
    if ((v65 & 1) == 0)
    {
      v138(v51, v137, v40);
      uint64_t v67 = (uint64_t)v178;
      char v68 = dispatch thunk of static Equatable.== infix(_:_:)();
      unint64_t v69 = v51;
      uint64_t v70 = (void (*)(uint64_t, uint64_t))v152;
      v152(v69, v40);
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      swift_unknownObjectRelease();
      v70(v67, v40);
      uint64_t v66 = 0x4052C00000000000;
      a1 = v176;
      uint64_t v47 = v179;
      uint64_t v43 = v141;
      uint64_t v56 = &unk_10117D000;
      if (v68) {
        goto LABEL_7;
      }
LABEL_6:
      uint64_t v66 = 0x4049000000000000;
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  v152(v178, v40);
  uint64_t v66 = 0x4052C00000000000;
  a1 = v176;
  uint64_t v47 = v179;
  uint64_t v43 = v141;
  uint64_t v56 = (_OWORD *)&unk_10117D000;
LABEL_7:
  uint64_t v71 = (void (*)(char *, uint64_t))swift_unknownObjectWeakLoadStrong();
  if (!v71) {
    goto LABEL_12;
  }
  unint64_t v152 = v71;
  uint64_t v178 = (char *)v66;
  type metadata accessor for CRLSceneRowItemUI_i(0);
  sub_100E03F74((uint64_t)v47);
  sub_1005057FC(&qword_1016755E8);
  uint64_t v72 = v180;
  uint64_t v73 = v180[9];
  unint64_t v74 = (*((unsigned __int8 *)v180 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v180 + 80);
  uint64_t v75 = swift_allocObject();
  *(_OWORD *)(v75 + 16) = v56[244];
  unint64_t v76 = v75 + v74;
  uint64_t v77 = (void (*)(void))v72[13];
  ((void (*)(unint64_t, void, uint64_t))v77)(v75 + v74, enum case for DynamicTypeSize.accessibility3(_:), v40);
  unint64_t v78 = v76 + v73;
  ((void (*)(unint64_t, void, uint64_t))v77)(v76 + v73, enum case for DynamicTypeSize.accessibility4(_:), v40);
  unint64_t v140 = v76 + 2 * v73;
  v77();
  uint64_t v79 = (void (*)(char *, unint64_t, uint64_t))v72[2];
  uint64_t v141 = (char *)v76;
  v79(v43, v76, v40);
  sub_100FEF54C((unint64_t *)&qword_1016755F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  LOBYTE(v73) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v80 = (void (*)(char *, uint64_t))v72[1];
  swift_bridgeObjectRetain();
  v180 = v72 + 1;
  v80(v43, v40);
  if ((v73 & 1) != 0
    || (v79(v43, v78, v40), char v81 = dispatch thunk of static Equatable.== infix(_:_:)(), v80(v43, v40), (v81 & 1) != 0))
  {
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    swift_unknownObjectRelease();
    v80(v179, v40);
    a1 = v176;
    goto LABEL_13;
  }
  v79(v43, v140, v40);
  uint64_t v82 = v80;
  uint64_t v83 = v179;
  char v84 = dispatch thunk of static Equatable.== infix(_:_:)();
  v82(v43, v40);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  v82(v83, v40);
  a1 = v176;
  if ((v84 & 1) == 0) {
LABEL_12:
  }
    uint64_t v177 = 0x4049000000000000;
LABEL_13:
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v85 = v181;
  char v86 = v182;
  v180 = v183;
  LODWORD(v179) = v184;
  uint64_t v178 = (char *)v185;
  uint64_t v177 = v186;
  long long v187 = *(_OWORD *)(a1 + *(int *)(type metadata accessor for CRLSceneRowItemUI_i(0) + 48));
  sub_1005057FC(&qword_1016A6200);
  State.wrappedValue.getter();
  if (*(double *)&v192 == 0.0)
  {
    uint64_t v120 = v144;
    ProgressView<>.init<>()();
    uint64_t v121 = v150;
    char v122 = v149;
    uint64_t v123 = v151;
    (*(void (**)(char *, void, uint64_t))(v150 + 104))(v149, enum case for ControlSize.regular(_:), v151);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v125 = (uint64_t)v143;
    uint64_t v126 = (uint64_t *)&v143[*(int *)(v145 + 36)];
    uint64_t v127 = sub_1005057FC(&qword_10168A5C0);
    (*(void (**)(char *, char *, uint64_t))(v121 + 16))((char *)v126 + *(int *)(v127 + 28), v122, v123);
    *uint64_t v126 = KeyPath;
    uint64_t v128 = v146;
    uint64_t v129 = v148;
    (*(void (**)(uint64_t, char *, uint64_t))(v146 + 16))(v125, v120, v148);
    (*(void (**)(char *, uint64_t))(v121 + 8))(v122, v123);
    (*(void (**)(char *, uint64_t))(v128 + 8))(v120, v129);
    sub_100FF4988();
    uint64_t v130 = (uint64_t)v142;
    View.accessibilityHidden(_:)();
    sub_100522F00(v125, &qword_1016A64E8);
    uint64_t v115 = &qword_1016A64F0;
    uint64_t v131 = v147;
    sub_10051B3EC(v130, v147, &qword_1016A64F0);
    sub_100522E9C(v131, v173, &qword_1016A64F0);
    swift_storeEnumTagMultiPayload();
    sub_100FF4A4C();
    sub_100FF4D44();
    uint64_t v118 = (uint64_t)v170;
    _ConditionalContent<>.init(storage:)();
    uint64_t v119 = v131;
  }
  else
  {
    uint64_t v87 = (void (*)(char *, uint64_t))v192;
    unint64_t v152 = v87;
    id v88 = [v87 UIImage];
    Image.init(uiImage:)();

    uint64_t v89 = v154;
    uint64_t v90 = v153;
    uint64_t v91 = v155;
    (*(void (**)(char *, void, uint64_t))(v154 + 104))(v153, enum case for Image.ResizingMode.stretch(_:), v155);
    uint64_t v92 = Image.resizable(capInsets:resizingMode:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v90, v91);
    sub_100FE1C08();
    sub_100FE1C08();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v155 = v187;
    LODWORD(v154) = BYTE8(v187);
    uint64_t v153 = v188;
    LODWORD(v151) = v189;
    uint64_t v150 = v190;
    uint64_t v149 = v191;
    uint64_t v176 = v85;
    uint64_t v93 = v161;
    SeparatorShapeStyle.init()();
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
    uint64_t v95 = v193;
    uint64_t v94 = v194;
    uint64_t v96 = v195;
    uint64_t v97 = v196;
    double v98 = *(double *)&v192;
    uint64_t v99 = v157;
    uint64_t v100 = (uint64_t)v166;
    uint64_t v101 = v164;
    uint64_t v102 = v165;
    (*(void (**)(char *, char *, uint64_t))(v164 + 16))(&v166[*(int *)(v157 + 52)], v93, v165);
    *(double *)uint64_t v100 = v98 * 0.5;
    *(double *)(v100 + 8) = v98;
    *(void *)(v100 + 16) = v95;
    *(void *)(v100 + 24) = v94;
    *(void *)(v100 + 32) = v96;
    *(void *)(v100 + 40) = v97;
    *(_WORD *)(v100 + *(int *)(v99 + 56)) = 256;
    uint64_t v103 = static Alignment.center.getter();
    uint64_t v105 = v104;
    uint64_t v106 = v167;
    sub_100522E9C(v100, v167, &qword_1016A64B8);
    uint64_t v107 = (uint64_t *)(v106 + *(int *)(v163 + 36));
    *uint64_t v107 = v103;
    v107[1] = v105;
    uint64_t v108 = (uint64_t)v158;
    sub_100522E9C(v106, (uint64_t)&v158[*(int *)(v159 + 36)], &qword_1016A64B0);
    *(void *)uint64_t v108 = v92;
    *(void *)(v108 + 8) = 0;
    *(_WORD *)(v108 + 16) = 1;
    *(void *)(v108 + 24) = v155;
    *(unsigned char *)(v108 + 32) = v154;
    *(void *)(v108 + 40) = v153;
    *(unsigned char *)(v108 + 48) = v151;
    uint64_t v109 = v149;
    *(void *)(v108 + 56) = v150;
    *(void *)(v108 + 64) = v109;
    swift_retain();
    sub_100522F00(v106, &qword_1016A64B0);
    sub_100522F00(v100, &qword_1016A64B8);
    uint64_t v110 = v93;
    uint64_t v85 = v176;
    (*(void (**)(char *, uint64_t))(v101 + 8))(v110, v102);
    swift_release();
    sub_100FF4B98();
    uint64_t v111 = (uint64_t)v160;
    View.accessibilityHidden(_:)();
    sub_100522F00(v108, &qword_1016A64C0);
    uint64_t v112 = static Color.white.getter();
    LOBYTE(v108) = static Edge.Set.all.getter();
    uint64_t v113 = v156;
    sub_100522E9C(v111, v156, &qword_1016A64C8);
    uint64_t v114 = v113 + *(int *)(v174 + 36);
    *(void *)uint64_t v114 = v112;
    *(unsigned char *)(v114 + 8) = v108;
    sub_100522F00(v111, &qword_1016A64C8);
    uint64_t v115 = &qword_1016A64D0;
    uint64_t v116 = v113;
    uint64_t v117 = v162;
    sub_10051B3EC(v116, v162, &qword_1016A64D0);
    sub_100522E9C(v117, v173, &qword_1016A64D0);
    swift_storeEnumTagMultiPayload();
    sub_100FF4A4C();
    sub_100FF4D44();
    uint64_t v118 = (uint64_t)v170;
    _ConditionalContent<>.init(storage:)();

    uint64_t v119 = v117;
  }
  sub_100522F00(v119, v115);
  uint64_t v132 = v171;
  sub_100522E9C(v118, v171, &qword_1016A64F8);
  uint64_t v133 = v175;
  uint64_t *v175 = v168;
  *((_WORD *)v133 + 4) = 256;
  v133[2] = v85;
  *((unsigned char *)v133 + 24) = v86;
  v133[4] = (uint64_t)v180;
  *((unsigned char *)v133 + 40) = (_BYTE)v179;
  uint64_t v134 = v177;
  v133[6] = (uint64_t)v178;
  v133[7] = v134;
  uint64_t v135 = sub_1005057FC(&qword_1016A6558);
  sub_100522E9C(v132, (uint64_t)v133 + *(int *)(v135 + 48), &qword_1016A64F8);
  swift_retain();
  sub_100522F00(v118, &qword_1016A64F8);
  sub_100522F00(v132, &qword_1016A64F8);
  return swift_release();
}

uint64_t sub_100FEBEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  type metadata accessor for MainActor();
  v5[7] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[8] = v7;
  v5[9] = v6;
  return _swift_task_switch(sub_100FEBF60, v7, v6);
}

uint64_t sub_100FEBF60()
{
  uint64_t v1 = **(void **)(v0 + 40);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100FEC000;
  return sub_100E67750(v1, 0);
}

uint64_t sub_100FEC000(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 64);
  return _swift_task_switch(sub_100FEC128, v4, v3);
}

uint64_t sub_100FEC128()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 40);
  swift_release();
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v2 + *(int *)(type metadata accessor for CRLSceneRowItemUI_i(0) + 48));
  *(void *)(v0 + 32) = v1;
  sub_1005057FC(&qword_1016A6200);
  State.wrappedValue.setter();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100FEC1D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for CRLSceneRowItemUI_i(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5 - 8, v8);
  uint64_t v9 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v14 = result;
    uint64_t v15 = *(void *)(a1 + 16);
    uint64_t v16 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v12, 1, 1, v16);
    sub_100FF2DA0(a1, (uint64_t)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLSceneRowItemUI_i);
    type metadata accessor for MainActor();
    swift_unknownObjectRetain();
    uint64_t v17 = static MainActor.shared.getter();
    unint64_t v18 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v17;
    *(void *)(v19 + 24) = &protocol witness table for MainActor;
    sub_100FF2E0C((uint64_t)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, type metadata accessor for CRLSceneRowItemUI_i);
    uint64_t v20 = (uint64_t *)(v19 + ((v7 + v18 + 7) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v20 = v14;
    v20[1] = v15;
    sub_1005912D0((uint64_t)v12, a3, v19);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100FEC3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  type metadata accessor for MainActor();
  v5[7] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[8] = v7;
  v5[9] = v6;
  return _swift_task_switch(sub_100FEC46C, v7, v6);
}

uint64_t sub_100FEC46C()
{
  uint64_t v1 = **(void **)(v0 + 40);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100FEC50C;
  return sub_100E67750(v1, 1);
}

uint64_t sub_100FEC50C(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 64);
  return _swift_task_switch(sub_100FF6848, v4, v3);
}

uint64_t sub_100FEC634(uint64_t a1)
{
  v1[5] = a1;
  type metadata accessor for MainActor();
  v1[6] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[7] = v3;
  v1[8] = v2;
  return _swift_task_switch(sub_100FEC6CC, v3, v2);
}

uint64_t sub_100FEC6CC()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 72) = Strong;
  if (Strong)
  {
    uint64_t v2 = **(void **)(v0 + 40);
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100FEC7B8;
    return sub_100E67750(v2, 0);
  }
  else
  {
    swift_release();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_100FEC7B8(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  return _swift_task_switch(sub_100FEC8E0, v4, v3);
}

uint64_t sub_100FEC8E0()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 40);
  swift_release();
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v2 + *(int *)(type metadata accessor for CRLSceneRowItemUI_i(0) + 48));
  *(void *)(v0 + 32) = v1;
  sub_1005057FC(&qword_1016A6200);
  State.wrappedValue.setter();
  swift_unknownObjectRelease();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100FEC990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v118 = a2;
  uint64_t v3 = sub_1005057FC(&qword_1016A6288);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v114 = (char *)v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_1016A6290);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v125 = (uint64_t)v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v127 = (uint64_t)v109 - v11;
  __chkstk_darwin(v12, v13);
  uint64_t v116 = (uint64_t)v109 - v14;
  uint64_t v126 = type metadata accessor for Divider();
  uint64_t v122 = *(void *)(v126 - 8);
  __chkstk_darwin(v126, v15);
  uint64_t v132 = (char *)v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v113 = (char *)v109 - v19;
  __chkstk_darwin(v20, v21);
  uint64_t v115 = (char *)v109 - v22;
  __chkstk_darwin(v23, v24);
  uint64_t v133 = (char *)v109 - v25;
  __chkstk_darwin(v26, v27);
  uint64_t v119 = (char *)v109 - v28;
  uint64_t v29 = type metadata accessor for CRLSceneRowItemUI_i(0);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(void *)(v30 + 64);
  __chkstk_darwin(v29 - 8, v32);
  uint64_t v33 = (char *)v109 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1005057FC(&qword_1016A6298);
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v120 = v34;
  uint64_t v121 = v35;
  __chkstk_darwin(v34, v36);
  uint64_t v131 = (char *)v109 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38, v39);
  uint64_t v129 = (char *)v109 - v40;
  __chkstk_darwin(v41, v42);
  uint64_t v128 = (char *)v109 - v43;
  __chkstk_darwin(v44, v45);
  uint64_t v130 = (char *)v109 - v46;
  __chkstk_darwin(v47, v48);
  uint64_t v50 = (char *)v109 - v49;
  uint64_t v51 = sub_1005057FC(&qword_1016A6368);
  __chkstk_darwin(v51 - 8, v52);
  uint64_t v124 = (char *)v109 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v54, v55);
  uint64_t v57 = (char *)v109 - v56;
  uint64_t v58 = *(void **)(a1 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  id v59 = v58;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  uint64_t v123 = v57;
  uint64_t v117 = v30;
  if (v135)
  {
    uint64_t v60 = sub_1005057FC(&qword_1016A6378);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v57, 1, 1, v60);
  }
  else
  {
    sub_100FF2DA0(a1, (uint64_t)v109 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLSceneRowItemUI_i);
    unint64_t v61 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v62 = swift_allocObject();
    sub_100FF2E0C((uint64_t)v109 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0), v62 + v61, type metadata accessor for CRLSceneRowItemUI_i);
    sub_1005057FC(&qword_1016A62A0);
    sub_100523288(&qword_1016A62A8, &qword_1016A62A0);
    uint64_t v112 = v50;
    Button.init(action:label:)();
    Divider.init()();
    char v63 = sub_100FE189C();
    uint64_t v111 = a1;
    uint64_t v110 = (char *)v109 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    v109[1] = v31;
    if (v63)
    {
      uint64_t v64 = 1;
      uint64_t v65 = v116;
    }
    else
    {
      sub_100FF2DA0(a1, (uint64_t)v109 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLSceneRowItemUI_i);
      uint64_t v66 = swift_allocObject();
      sub_100FF2E0C((uint64_t)v109 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0), v66 + v61, type metadata accessor for CRLSceneRowItemUI_i);
      uint64_t v65 = v116;
      Button.init(action:label:)();
      uint64_t v64 = 0;
    }
    uint64_t v67 = v120;
    uint64_t v68 = v121;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v121 + 56))(v65, v64, 1, v120);
    unint64_t v69 = v133;
    Divider.init()();
    uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
    uint64_t v71 = v130;
    v70(v130, v112, v67);
    uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v122 + 16);
    uint64_t v73 = v126;
    v72(v115, v119, v126);
    uint64_t v74 = v127;
    sub_100522E9C(v65, v127, &qword_1016A6290);
    uint64_t v75 = v113;
    v72(v113, v69, v73);
    uint64_t v76 = (uint64_t)v124;
    v70(v124, v71, v67);
    uint64_t v77 = (int *)sub_1005057FC(&qword_1016A6370);
    unint64_t v78 = v115;
    v72((char *)(v76 + v77[12]), v115, v73);
    sub_100522E9C(v74, v76 + v77[16], &qword_1016A6290);
    v72((char *)(v76 + v77[20]), v75, v73);
    uint64_t v79 = *(void (**)(char *, uint64_t))(v122 + 8);
    v79(v133, v73);
    sub_100522F00(v116, &qword_1016A6290);
    v79(v119, v73);
    uint64_t v80 = *(void (**)(char *, uint64_t))(v121 + 8);
    v80(v112, v67);
    v79(v75, v73);
    sub_100522F00(v74, &qword_1016A6290);
    v79(v78, v73);
    v80(v130, v67);
    uint64_t v81 = sub_1005057FC(&qword_1016A6378);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v76, 0, 1, v81);
    sub_10051B3EC(v76, (uint64_t)v123, &qword_1016A6368);
    a1 = v111;
    uint64_t v33 = v110;
  }
  sub_100FF2DA0(a1, (uint64_t)v33, type metadata accessor for CRLSceneRowItemUI_i);
  unint64_t v82 = (*(unsigned __int8 *)(v117 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80);
  uint64_t v83 = swift_allocObject();
  sub_100FF2E0C((uint64_t)v33, v83 + v82, type metadata accessor for CRLSceneRowItemUI_i);
  sub_1005057FC(&qword_1016A62A0);
  sub_100523288(&qword_1016A62A8, &qword_1016A62A0);
  Button.init(action:label:)();
  sub_100FF2DA0(a1, (uint64_t)v33, type metadata accessor for CRLSceneRowItemUI_i);
  uint64_t v84 = swift_allocObject();
  sub_100FF2E0C((uint64_t)v33, v84 + v82, type metadata accessor for CRLSceneRowItemUI_i);
  Button.init(action:label:)();
  Divider.init()();
  uint64_t v85 = (uint64_t)v33;
  char v86 = *(void **)(a1 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  id v87 = v86;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v134)
  {
    uint64_t v88 = 1;
  }
  else
  {
    uint64_t v89 = v114;
    static ButtonRole.destructive.getter();
    uint64_t v90 = type metadata accessor for ButtonRole();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v89, 0, 1, v90);
    sub_100FF2DA0(a1, v85, type metadata accessor for CRLSceneRowItemUI_i);
    uint64_t v91 = swift_allocObject();
    sub_100FF2E0C(v85, v91 + v82, type metadata accessor for CRLSceneRowItemUI_i);
    Button.init(role:action:label:)();
    uint64_t v88 = 0;
  }
  uint64_t v92 = v120;
  uint64_t v93 = v121;
  uint64_t v94 = v125;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v121 + 56))(v125, v88, 1, v120);
  uint64_t v95 = (uint64_t)v124;
  sub_100522E9C((uint64_t)v123, (uint64_t)v124, &qword_1016A6368);
  uint64_t v96 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
  uint64_t v97 = v130;
  v96(v130, v128, v92);
  v96(v131, v129, v92);
  uint64_t v98 = v122;
  uint64_t v99 = *(void (**)(char *, char *, uint64_t))(v122 + 16);
  v99(v133, v132, v126);
  sub_100522E9C(v94, v127, &qword_1016A6290);
  uint64_t v100 = v118;
  sub_100522E9C(v95, v118, &qword_1016A6368);
  uint64_t v101 = (int *)sub_1005057FC(&qword_1016A6380);
  v96((char *)(v100 + v101[12]), v97, v92);
  v96((char *)(v100 + v101[16]), v131, v92);
  uint64_t v102 = v133;
  uint64_t v103 = v126;
  v99((char *)(v100 + v101[20]), v133, v126);
  uint64_t v104 = v100 + v101[24];
  uint64_t v105 = v127;
  sub_100522E9C(v127, v104, &qword_1016A6290);
  sub_100522F00(v125, &qword_1016A6290);
  uint64_t v106 = *(void (**)(char *, uint64_t))(v98 + 8);
  v106(v132, v103);
  uint64_t v107 = *(void (**)(char *, uint64_t))(v93 + 8);
  v107(v129, v92);
  v107(v128, v92);
  sub_100522F00((uint64_t)v123, &qword_1016A6368);
  sub_100522F00(v105, &qword_1016A6290);
  v106(v102, v103);
  v107(v131, v92);
  v107(v130, v92);
  return sub_100522F00((uint64_t)v124, &qword_1016A6368);
}

uint64_t sub_100FED70C@<X0>(uint64_t a1@<X8>)
{
  if (qword_10166F638 != -1) {
    swift_once();
  }
  sub_10052E310();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t v9 = Image.init(systemName:)();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v9;
  sub_10073F0E0(v2, v4, v8);
  swift_bridgeObjectRetain();
  sub_1006A7D28(v2, v4, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100FED814(void **a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_100E6AE00(*a1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100FED86C@<X0>(uint64_t a1@<X8>)
{
  if (qword_10166F640 != -1) {
    swift_once();
  }
  sub_10052E310();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t v9 = Image.init(systemName:)();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v9;
  sub_10073F0E0(v2, v4, v8);
  swift_bridgeObjectRetain();
  sub_1006A7D28(v2, v4, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100FED97C(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v5 - 8, v6);
  char v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v10 = result;
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_101177E70;
    uint64_t v12 = *a1;
    *(void *)(v11 + 32) = *a1;
    uint64_t v20 = v11;
    specialized Array._endMutation()();
    uint64_t v13 = v20;
    uint64_t v14 = *(void **)(v10 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
    id v15 = v12;
    [v14 endEditing];
    uint64_t v16 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
    type metadata accessor for MainActor();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v17 = static MainActor.shared.getter();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v17;
    *(void *)(v18 + 24) = &protocol witness table for MainActor;
    *(void *)(v18 + 32) = v10;
    *(unsigned char *)(v18 + 40) = 1;
    *(void *)(v18 + 48) = v13;
    sub_1005912D0((uint64_t)v8, a3, v18);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_100FEDB38@<X0>(uint64_t a1@<X8>)
{
  if (qword_10166F658 != -1) {
    swift_once();
  }
  sub_10052E310();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t v9 = Image.init(systemName:)();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v9;
  sub_10073F0E0(v2, v4, v8);
  swift_bridgeObjectRetain();
  sub_1006A7D28(v2, v4, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100FEDC44(void **a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_101177E70;
    uint64_t v4 = *a1;
    *(void *)(v3 + 32) = *a1;
    uint64_t v6 = v3;
    specialized Array._endMutation()();
    id v5 = v4;
    sub_100E6BC04(v6);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100FEDD00@<X0>(uint64_t a1@<X8>)
{
  if (qword_10166F668 != -1) {
    swift_once();
  }
  sub_10052E310();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t v9 = Image.init(systemName:)();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v9;
  sub_10073F0E0(v2, v4, v8);
  swift_bridgeObjectRetain();
  sub_1006A7D28(v2, v4, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100FEDE10(void **a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = *a1;
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_101177E70;
    *(void *)(inited + 32) = v3;
    unint64_t v6 = inited;
    specialized Array._endMutation()();
    id v5 = v3;
    sub_100E6B0B8(v6);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100FEDEA8@<X0>(uint64_t a1@<X8>)
{
  if (qword_10166F648 != -1) {
    swift_once();
  }
  sub_10052E310();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t v9 = Image.init(systemName:)();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v9;
  sub_10073F0E0(v2, v4, v8);
  swift_bridgeObjectRetain();
  sub_1006A7D28(v2, v4, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100FEDFB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1005057FC(qword_101680848);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = Image.init(systemName:)();
  uint64_t v7 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  uint64_t v8 = static Font.system(size:weight:design:)();
  sub_100522F00((uint64_t)v5, qword_101680848);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = static Color.accentColor.getter();
  *a1 = v6;
  a1[1] = KeyPath;
  a1[2] = v8;
  a1[3] = result;
  return result;
}

uint64_t sub_100FEE0D8(void *a1)
{
  uint64_t v42 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v45 = *(void *)(v42 - 8);
  __chkstk_darwin(v42, v2);
  uint64_t v41 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v40 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLSceneRowItemUI_i(0);
  uint64_t v8 = v7 - 8;
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v38 + 64);
  __chkstk_darwin(v7, v10);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v39 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  id v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = (char *)a1 + *(int *)(v8 + 72);
  char v21 = *v20;
  uint64_t v22 = *((void *)v20 + 1);
  LOBYTE(v20) = v20[16];
  LOBYTE(aBlock) = v21;
  *((void *)&aBlock + 1) = v22;
  LOBYTE(v47) = (_BYTE)v20;
  LOBYTE(v51) = 1;
  sub_1005057FC(&qword_1016A6438);
  FocusState.wrappedValue.setter();
  uint64_t v23 = (uint64_t *)(*a1 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_name);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  uint64_t v26 = (char *)a1 + *(int *)(v8 + 60);
  long long v27 = *(_OWORD *)v26;
  uint64_t v28 = (uint64_t (*)(uint64_t))*((void *)v26 + 2);
  long long aBlock = v27;
  uint64_t v47 = v28;
  uint64_t v51 = v25;
  uint64_t v52 = v24;
  swift_bridgeObjectRetain();
  sub_1005057FC(&qword_101684970);
  State.wrappedValue.setter();
  sub_100656064();
  uint64_t v29 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v12 + 8);
  v30(v15, v11);
  sub_100FF2DA0((uint64_t)a1, (uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLSceneRowItemUI_i);
  unint64_t v31 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v32 = swift_allocObject();
  sub_100FF2E0C((uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v32 + v31, type metadata accessor for CRLSceneRowItemUI_i);
  uint64_t v49 = sub_100FF4104;
  uint64_t v50 = v32;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = *(void *)"";
  uint64_t v47 = sub_100679958;
  uint64_t v48 = &unk_101536FF8;
  uint64_t v33 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v34 = v40;
  static DispatchQoS.unspecified.getter();
  *(void *)&long long aBlock = _swiftEmptyArrayStorage;
  sub_100FEF54C((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  uint64_t v35 = v41;
  uint64_t v36 = v42;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v33);

  (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v36);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v34, v44);
  return ((uint64_t (*)(char *, uint64_t))v30)(v19, v39);
}

uint64_t sub_100FEE5E0()
{
  return AccessibilityFocusState.wrappedValue.setter();
}

uint64_t sub_100FEE638(void **a1)
{
  sub_100FE9140();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = *a1;
    type metadata accessor for CRLSceneRowItemUI_i(0);
    sub_1005057FC(&qword_101684970);
    State.wrappedValue.getter();
    sub_100E6ABA4(v3, v4, v5);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100FEE6DC(char **a1)
{
  uint64_t v2 = (int *)type metadata accessor for CRLSceneRowItemUI_i(0);
  __chkstk_darwin(v2, v3);
  unint64_t v5 = v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  uint64_t v6 = type metadata accessor for EditMode();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  uint64_t v11 = sub_1005057FC(&qword_10169D6D0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  sub_100E03F0C((uint64_t)v14);
  uint64_t v15 = sub_1005057FC(&qword_1016A5E28);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15) == 1)
  {
    sub_100522F00((uint64_t)v14, &qword_10169D6D0);
    sub_100FF2DA0((uint64_t)a1, (uint64_t)v5, type metadata accessor for CRLSceneRowItemUI_i);
    goto LABEL_4;
  }
  Binding.wrappedValue.getter();
  sub_100522F00((uint64_t)v14, &qword_1016A5E28);
  char v16 = EditMode.isEditing.getter();
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
  sub_100FF2DA0((uint64_t)a1, (uint64_t)v5, type metadata accessor for CRLSceneRowItemUI_i);
  if ((v16 & 1) == 0)
  {
LABEL_4:
    uint64_t v17 = &v5[v2[11]];
    long long v18 = *(_OWORD *)v17;
    uint64_t v19 = *((void *)v17 + 2);
    *(_OWORD *)uint64_t v40 = v18;
    *(void *)&v40[16] = v19;
    sub_1005057FC(&qword_1016A61F8);
    Binding.wrappedValue.getter();
    if (v41)
    {

      goto LABEL_6;
    }
    sub_100FF38E8((uint64_t)v5, type metadata accessor for CRLSceneRowItemUI_i);
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_100E6A650(*a1);
      swift_unknownObjectRelease();
    }
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_101177E70;
    uint64_t v29 = *a1;
    *(void *)(inited + 32) = *a1;
    *(void *)uint64_t v40 = inited;
    specialized Array._endMutation()();
    unint64_t v30 = *(void *)v40;
    if (*(void *)v40 >> 62)
    {
      uint64_t v35 = v29;
      swift_bridgeObjectRetain();
      uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v36) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v31 = *(void *)((*(void *)v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v32 = v29;
      if (v31)
      {
LABEL_11:
        sub_10050BF28(v30);
        uint64_t v34 = v33;
LABEL_14:
        swift_bridgeObjectRelease();
        uint64_t v37 = (char *)a1 + v2[10];
        *(void *)uint64_t v40 = *(void *)v37;
        *(_OWORD *)&v40[8] = *(_OWORD *)(v37 + 8);
        uint64_t v41 = v34;
        sub_1005057FC(&qword_1016A61E8);
        return Binding.wrappedValue.setter();
      }
    }
    uint64_t v34 = (char *)&_swiftEmptySetSingleton;
    goto LABEL_14;
  }
LABEL_6:
  sub_100FF38E8((uint64_t)v5, type metadata accessor for CRLSceneRowItemUI_i);
  uint64_t v20 = (char *)a1 + v2[15];
  char v21 = *v20;
  uint64_t v22 = *((void *)v20 + 1);
  v40[0] = v21;
  *(void *)&v40[8] = v22;
  LOBYTE(v41) = 1;
  sub_1005057FC(&qword_101695310);
  State.wrappedValue.setter();
  uint64_t v23 = *a1;
  uint64_t v24 = (char *)a1 + v2[11];
  long long v25 = *(_OWORD *)v24;
  uint64_t v26 = *((void *)v24 + 2);
  *(_OWORD *)uint64_t v40 = v25;
  *(void *)&v40[16] = v26;
  uint64_t v41 = v23;
  long long v27 = v23;
  sub_1005057FC(&qword_1016A61F8);
  return Binding.wrappedValue.setter();
}

uint64_t sub_100FEEB04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = type metadata accessor for HStack();
  uint64_t v33 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v32 = (char *)&v32 - v11;
  uint64_t v12 = type metadata accessor for VStack();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  char v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v32 - v19;
  uint64_t v21 = type metadata accessor for _ConditionalContent();
  uint64_t v35 = *(void *)(v21 - 8);
  uint64_t v36 = v21;
  __chkstk_darwin(v21, v22);
  uint64_t v34 = (char *)&v32 - v23;
  sub_100FF5AA0(v2, (uint64_t)v43);
  sub_100FF5AA0(v43, (uint64_t)&v44);
  uint64_t v38 = v3;
  uint64_t v39 = v4;
  uint64_t v40 = v2;
  if (v45)
  {
    HStack.init(alignment:spacing:content:)();
    swift_getWitnessTable();
    uint64_t v24 = v32;
    sub_10087606C(v8);
    long long v25 = *(void (**)(char *, uint64_t))(v33 + 8);
    v25(v8, v5);
    sub_10087606C(v24);
    swift_getWitnessTable();
    uint64_t v26 = v34;
    sub_100FD65BC((uint64_t)v8, v12, v5);
    v25(v8, v5);
    v25(v24, v5);
  }
  else
  {
    VStack.init(alignment:spacing:content:)();
    swift_getWitnessTable();
    sub_10087606C(v16);
    long long v27 = *(void (**)(char *, uint64_t))(v13 + 8);
    v27(v16, v12);
    sub_10087606C(v20);
    swift_getWitnessTable();
    uint64_t v26 = v34;
    sub_100FD64C4((uint64_t)v16, v12);
    v27(v16, v12);
    v27(v20, v12);
  }
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v41 = WitnessTable;
  uint64_t v42 = v29;
  uint64_t v30 = v36;
  swift_getWitnessTable();
  sub_10087606C(v26);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v26, v30);
}

uint64_t sub_100FEEFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  uint64_t v4 = __chkstk_darwin(a1, a2);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v4, v7);
  uint64_t v10 = (char *)&v14 - v9;
  (*(void (**)(uint64_t))(v8 + 32))(v11);
  sub_10087606C(v6);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v6, a2);
  sub_10087606C(v10);
  return ((uint64_t (*)(char *, uint64_t))v12)(v10, a2);
}

uint64_t sub_100FEF100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100FEEB04(a1, a2);
}

uint64_t sub_100FEF144@<X0>(uint64_t a1@<X8>)
{
  return sub_100FDE38C(*(void *)(v1 + 16), a1);
}

uint64_t sub_100FEF14C()
{
  return EnvironmentValues.editMode.getter();
}

uint64_t sub_100FEF170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100FEFB20(a1, a2, a3, a4, &qword_10169D6D0, (uint64_t (*)(char *))&EnvironmentValues.editMode.setter);
}

uint64_t sub_100FEF1A8()
{
  return sub_100FF610C(type metadata accessor for CRLCompactScenesListUI_i, (uint64_t (*)(unint64_t))sub_100FE0E74);
}

uint64_t sub_100FEF1D4@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100FEF258(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_100FEF2D0()
{
  uint64_t v1 = (int *)(type metadata accessor for CRLCompactScenesListUI_i(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_unknownObjectWeakDestroy();

  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = v6 + v1[10];
  uint64_t v8 = type metadata accessor for EditMode();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  sub_1005057FC(&qword_1016A5C48);
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100FEF410()
{
  return sub_100FEFBF4(type metadata accessor for CRLCompactScenesListUI_i, sub_100FE0FC8);
}

uint64_t sub_100FEF43C@<X0>(uint64_t a1@<X8>)
{
  return sub_100FDEF7C(*(void *)(v1 + 16), a1);
}

unint64_t sub_100FEF444()
{
  unint64_t result = qword_1016A5E68;
  if (!qword_1016A5E68)
  {
    sub_100522D34(&qword_1016A5E60);
    sub_100523288(&qword_10167A5A0, &qword_10167A598);
    type metadata accessor for EditButton();
    sub_100FEF54C(&qword_1016A5E70, (void (*)(uint64_t))&type metadata accessor for EditButton);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5E68);
  }
  return result;
}

uint64_t sub_100FEF54C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100FEF594@<X0>(uint64_t a1@<X8>)
{
  return sub_100FDF65C(*(void *)(v1 + 16), a1);
}

unint64_t sub_100FEF59C()
{
  unint64_t result = qword_1016A5E90;
  if (!qword_1016A5E90)
  {
    sub_100522D34(&qword_1016A5E88);
    sub_100523288(&qword_10167A5A0, &qword_10167A598);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5E90);
  }
  return result;
}

uint64_t sub_100FEF63C@<X0>(uint64_t a1@<X8>)
{
  return sub_100FDFB18(*(void *)(v1 + 16), a1);
}

uint64_t sub_100FEF648()
{
  return sub_100FEF674(type metadata accessor for CRLCompactScenesListUI_i, (uint64_t (*)(unint64_t))sub_1009CCA24);
}

uint64_t sub_100FEF674(uint64_t (*a1)(void), uint64_t (*a2)(unint64_t))
{
  uint64_t v4 = *(void *)(a1(0) - 8);
  return a2(v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
}

uint64_t sub_100FEF6E0@<X0>(char *a1@<X8>)
{
  return sub_100FE080C(*(void *)(v1 + 16), a1);
}

uint64_t sub_100FEF6E8()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_100FEF70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100FEF788(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

uint64_t sub_100FEF738()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_100FEF75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100FEF788(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for ControlSize, (uint64_t (*)(char *))&EnvironmentValues.controlSize.setter);
}

uint64_t sub_100FEF788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(char *))
{
  uint64_t v8 = a5(0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v14 - v10;
  (*(void (**)(char *, uint64_t))(v12 + 16))((char *)&v14 - v10, a1);
  return a6(v11);
}

uint64_t sub_100FEF858@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.menuIndicatorVisibility.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100FEF884()
{
  return EnvironmentValues.menuIndicatorVisibility.setter();
}

unint64_t sub_100FEF8AC()
{
  unint64_t result = qword_1016A5F38;
  if (!qword_1016A5F38)
  {
    sub_100522D34(&qword_1016A5ED8);
    sub_100FF3EB8(&qword_1016A5F40, &qword_1016A5ED0, (void (*)(void))sub_100FEF978);
    sub_100523288(&qword_101695368, &qword_101695370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5F38);
  }
  return result;
}

unint64_t sub_100FEF978()
{
  unint64_t result = qword_1016A5F48;
  if (!qword_1016A5F48)
  {
    sub_100522D34(&qword_1016A5EC8);
    sub_100522D34(&qword_1016A5EB8);
    type metadata accessor for BorderlessButtonMenuStyle();
    sub_100523288(&qword_1016A5F28, &qword_1016A5EB8);
    sub_100FEF54C(&qword_1016A5F30, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonMenuStyle);
    swift_getOpaqueTypeConformance2();
    sub_100523288(&qword_1016A5F50, &qword_1016A5F58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5F48);
  }
  return result;
}

uint64_t sub_100FEFAC4()
{
  return sub_100FEF674(type metadata accessor for CRLCompactScenesListUI_i, (uint64_t (*)(unint64_t))sub_100FE0C3C);
}

uint64_t sub_100FEFAF4()
{
  return sub_100FEF674(type metadata accessor for CRLCompactScenesListUI_i, (uint64_t (*)(unint64_t))sub_100FE0C88);
}

uint64_t sub_100FEFB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(char *))
{
  uint64_t v9 = sub_1005057FC(a5);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100522E9C(a1, (uint64_t)v12, a5);
  return a6(v12);
}

uint64_t sub_100FEFBC8()
{
  return sub_100FEFBF4(type metadata accessor for CRLCompactScenesListUI_i, (uint64_t (*)(uint64_t))sub_100FDF8F0);
}

uint64_t sub_100FEFBF4(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a2(v4);
}

uint64_t sub_100FEFC74()
{
  return sub_100FEFBF4(type metadata accessor for CRLCompactScenesListUI_i, (uint64_t (*)(uint64_t))sub_100FDF600);
}

double sub_100FEFCA0@<D0>(uint64_t a1@<X8>)
{
  return sub_100FDD970(*(void *)(v1 + 16), a1);
}

uint64_t sub_100FEFCA8@<X0>(uint64_t a1@<X8>)
{
  return sub_100FDDB0C(*(void *)(v1 + 16), a1);
}

unint64_t sub_100FEFCB0()
{
  unint64_t result = qword_1016A5FA8;
  if (!qword_1016A5FA8)
  {
    sub_100522D34(&qword_1016A5F98);
    sub_100FF3EB8(&qword_1016A5FB0, &qword_1016A5FB8, (void (*)(void))sub_100FEFD50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5FA8);
  }
  return result;
}

unint64_t sub_100FEFD50()
{
  unint64_t result = qword_1016A5FC0;
  if (!qword_1016A5FC0)
  {
    sub_100522D34(&qword_1016A5FC8);
    sub_100522D34(&qword_10168A580);
    type metadata accessor for BorderedProminentButtonStyle();
    sub_100523288(&qword_10168A5B0, &qword_10168A580);
    sub_100FEF54C(&qword_10168A5B8, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100523288(&qword_1016A5FD0, &qword_10168A5C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A5FC0);
  }
  return result;
}

uint64_t sub_100FEFE9C()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_100FEFEC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100FEF788(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for ControlSize, (uint64_t (*)(char *))&EnvironmentValues.controlSize.setter);
}

uint64_t sub_100FEFF04(uint64_t a1)
{
  return sub_100FF6480(a1, type metadata accessor for CRLCompactScenesListUI_i, (uint64_t (*)(uint64_t, uint64_t))sub_100FDD108);
}

uint64_t sub_100FEFF34(uint64_t a1, uint64_t a2)
{
  return sub_100FF6548(a1, a2, type metadata accessor for CRLCompactScenesListUI_i, sub_100FDD39C);
}

uint64_t sub_100FEFF60(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v2 + 16))(a1, *a2);
}

uint64_t sub_100FEFF90()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLCompactScenesListUI_i(0) - 8);
  v3[2] = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_100FD609C(sub_100FF0024, (uint64_t)v3);
}

void sub_100FF0024(unint64_t *a1)
{
  sub_100FDD4BC(a1, *(void *)(v1 + 16));
}

uint64_t sub_100FF0040()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100FF0064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100FEF788(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_100FF00A4()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_100FF00C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100FEF788(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

char *sub_100FF0108(char *a1, char **a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
  }
  else
  {
    uint64_t v8 = v5;
    swift_unknownObjectWeakCopyInit();
    uint64_t v9 = a2[3];
    *((void *)a1 + 2) = a2[2];
    *((void *)a1 + 3) = v9;
    uint64_t v10 = a2[4];
    *((void *)a1 + 4) = v10;
    uint64_t v11 = a3[7];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = (char **)((char *)a2 + v11);
    uint64_t v14 = v10;
    sub_1005057FC(&qword_10169D6C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_1005057FC(&qword_1016A5E28);
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      {
        uint64_t v17 = sub_1005057FC(&qword_10169D6D0);
        memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        uint64_t v18 = v13[1];
        *(void *)uint64_t v12 = *v13;
        *((void *)v12 + 1) = v18;
        uint64_t v19 = *(int *)(v15 + 32);
        uint64_t v67 = (char *)v13 + v19;
        uint64_t v68 = &v12[v19];
        uint64_t v20 = type metadata accessor for EditMode();
        uint64_t v66 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
        swift_retain();
        swift_retain();
        v66(v68, v67, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      }
    }
    else
    {
      *(void *)uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = a3[8];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = (char **)((char *)a2 + v21);
    sub_1005057FC(&qword_101684750);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = type metadata accessor for ColorScheme();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      *(void *)uint64_t v22 = *v23;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = a3[9];
    uint64_t v26 = &a1[v25];
    long long v27 = (char **)((char *)a2 + v25);
    sub_1005057FC(&qword_10169D6D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    }
    else
    {
      *(void *)uint64_t v26 = *v27;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = a3[10];
    uint64_t v30 = a3[11];
    uint64_t v31 = &a1[v29];
    uint64_t v32 = (char **)((char *)a2 + v29);
    uint64_t v33 = v32[1];
    *(void *)uint64_t v31 = *v32;
    *((void *)v31 + 1) = v33;
    *((void *)v31 + 2) = v32[2];
    uint64_t v34 = &a1[v30];
    uint64_t v35 = (char **)((char *)a2 + v30);
    uint64_t v64 = v35[1];
    *(void *)uint64_t v34 = *v35;
    *((void *)v34 + 1) = v64;
    unint64_t v69 = (void *)v35[2];
    *((void *)v34 + 2) = v69;
    uint64_t v36 = a3[12];
    uint64_t v37 = a3[13];
    uint64_t v38 = &a1[v36];
    uint64_t v39 = (uint64_t)a2 + v36;
    char v63 = *(void **)v39;
    uint64_t v65 = *(void *)(v39 + 8);
    *(void *)uint64_t v38 = *(void *)v39;
    *((void *)v38 + 1) = v65;
    uint64_t v40 = &a1[v37];
    uint64_t v41 = (char **)((char *)a2 + v37);
    uint64_t v42 = v41[1];
    *(void *)uint64_t v40 = *v41;
    *((void *)v40 + 1) = v42;
    *((void *)v40 + 2) = v41[2];
    uint64_t v43 = a3[14];
    uint64_t v44 = a3[15];
    char v45 = &a1[v43];
    uint64_t v46 = (char *)a2 + v43;
    *char v45 = *v46;
    *((void *)v45 + 1) = *((void *)v46 + 1);
    uint64_t v47 = &a1[v44];
    uint64_t v48 = (char *)a2 + v44;
    *uint64_t v47 = *v48;
    *((void *)v47 + 1) = *((void *)v48 + 1);
    uint64_t v49 = a3[16];
    uint64_t v50 = a3[17];
    uint64_t v51 = &a1[v49];
    uint64_t v52 = (char *)a2 + v49;
    char *v51 = *v52;
    *((void *)v51 + 1) = *((void *)v52 + 1);
    uint64_t v53 = (char *)a2 + v50;
    uint64_t v54 = &a1[v50];
    v51[16] = v52[16];
    uint64_t v55 = type metadata accessor for AccessibilityTechnologies();
    uint64_t v56 = *(void *)(v55 - 8);
    uint64_t v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    id v57 = v69;
    id v58 = v63;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (v62(v53, 1, v55))
    {
      uint64_t v59 = sub_1005057FC(&qword_10168EEE8);
      memcpy(v54, v53, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v54, v53, v55);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v54, 0, 1, v55);
    }
    uint64_t v60 = (int *)sub_1005057FC(&qword_10168EEF0);
    v54[v60[9]] = v53[v60[9]];
    *(void *)&v54[v60[10]] = *(void *)&v53[v60[10]];
    v54[v60[11]] = v53[v60[11]];
  }
  swift_retain();
  return a1;
}

uint64_t sub_100FF06D0(id *a1, int *a2)
{
  swift_unknownObjectWeakDestroy();
  int v4 = (char *)a1 + a2[7];
  sub_1005057FC(&qword_10169D6C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1005057FC(&qword_1016A5E28);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
    {
      swift_release();
      swift_release();
      uint64_t v6 = &v4[*(int *)(v5 + 32)];
      uint64_t v7 = type metadata accessor for EditMode();
      (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = (char *)a1 + a2[8];
  sub_1005057FC(&qword_101684750);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = (char *)a1 + a2[9];
  sub_1005057FC(&qword_10169D6D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v12 = (id *)((char *)a1 + a2[11]);
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v13 = (char *)a1 + a2[17];
  uint64_t v14 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v15 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
  }
  sub_1005057FC(&qword_10168EEF0);

  return swift_release();
}

void *sub_100FF09F8(void *a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  *a1 = *(void *)a2;
  id v7 = v6;
  swift_unknownObjectWeakCopyInit();
  uint64_t v8 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v8;
  uint64_t v9 = *(void **)(a2 + 32);
  a1[4] = v9;
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  id v13 = v9;
  sub_1005057FC(&qword_10169D6C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_1005057FC(&qword_1016A5E28);
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
    {
      uint64_t v16 = sub_1005057FC(&qword_10169D6D0);
      memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v17 = v12[1];
      *uint64_t v11 = *v12;
      v11[1] = v17;
      uint64_t v18 = *(int *)(v14 + 32);
      uint64_t v66 = (char *)v12 + v18;
      uint64_t v67 = (char *)v11 + v18;
      uint64_t v19 = type metadata accessor for EditMode();
      uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      swift_retain();
      swift_retain();
      v65(v67, v66, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    }
  }
  else
  {
    *uint64_t v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  sub_1005057FC(&qword_101684750);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  else
  {
    *uint64_t v21 = *v22;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = a3[9];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  sub_1005057FC(&qword_10169D6D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  else
  {
    *uint64_t v25 = *v26;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = a3[10];
  uint64_t v29 = a3[11];
  uint64_t v30 = (void *)((char *)a1 + v28);
  uint64_t v31 = (void *)(a2 + v28);
  uint64_t v32 = v31[1];
  *uint64_t v30 = *v31;
  v30[1] = v32;
  v30[2] = v31[2];
  uint64_t v33 = (void *)((char *)a1 + v29);
  uint64_t v34 = (void *)(a2 + v29);
  uint64_t v63 = v34[1];
  void *v33 = *v34;
  v33[1] = v63;
  uint64_t v68 = (void *)v34[2];
  v33[2] = v68;
  uint64_t v35 = a3[12];
  uint64_t v36 = a3[13];
  uint64_t v37 = (void *)((char *)a1 + v35);
  uint64_t v38 = a2 + v35;
  uint64_t v62 = *(void **)v38;
  uint64_t v64 = *(void *)(v38 + 8);
  void *v37 = *(void *)v38;
  v37[1] = v64;
  uint64_t v39 = (void *)((char *)a1 + v36);
  uint64_t v40 = (void *)(a2 + v36);
  uint64_t v41 = v40[1];
  *uint64_t v39 = *v40;
  v39[1] = v41;
  v39[2] = v40[2];
  uint64_t v42 = a3[14];
  uint64_t v43 = a3[15];
  uint64_t v44 = (char *)a1 + v42;
  char v45 = (char *)(a2 + v42);
  *uint64_t v44 = *v45;
  *((void *)v44 + 1) = *((void *)v45 + 1);
  uint64_t v46 = (char *)a1 + v43;
  uint64_t v47 = (char *)(a2 + v43);
  *uint64_t v46 = *v47;
  *((void *)v46 + 1) = *((void *)v47 + 1);
  uint64_t v48 = a3[16];
  uint64_t v49 = a3[17];
  uint64_t v50 = (char *)a1 + v48;
  uint64_t v51 = (char *)(a2 + v48);
  *uint64_t v50 = *v51;
  *((void *)v50 + 1) = *((void *)v51 + 1);
  uint64_t v52 = (char *)(a2 + v49);
  uint64_t v53 = (char *)a1 + v49;
  v50[16] = v51[16];
  uint64_t v54 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v55 = *(void *)(v54 - 8);
  unint64_t v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  id v56 = v68;
  id v57 = v62;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v61(v52, 1, v54))
  {
    uint64_t v58 = sub_1005057FC(&qword_10168EEE8);
    memcpy(v53, v52, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v53, v52, v54);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v53, 0, 1, v54);
  }
  uint64_t v59 = (int *)sub_1005057FC(&qword_10168EEF0);
  v53[v59[9]] = v52[v59[9]];
  *(void *)&v53[v59[10]] = *(void *)&v52[v59[10]];
  v53[v59[11]] = v52[v59[11]];
  swift_retain();
  return a1;
}

uint64_t sub_100FF0F7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  id v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  swift_unknownObjectWeakCopyAssign();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v9 = *(void **)(a2 + 32);
  uint64_t v10 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v9;
  id v11 = v9;

  if (a1 != a2)
  {
    uint64_t v12 = a3[7];
    id v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    sub_100522F00(a1 + v12, &qword_10169D6C8);
    sub_1005057FC(&qword_10169D6C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_1005057FC(&qword_1016A5E28);
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = sub_1005057FC(&qword_10169D6D0);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        *id v13 = *v14;
        v13[1] = v14[1];
        uint64_t v18 = *(int *)(v15 + 32);
        uint64_t v66 = (char *)v14 + v18;
        uint64_t v67 = (char *)v13 + v18;
        uint64_t v19 = type metadata accessor for EditMode();
        uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
        swift_retain();
        swift_retain();
        v65(v67, v66, v19);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
    }
    else
    {
      *id v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = a3[8];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (void *)(a2 + v20);
    sub_100522F00(a1 + v20, &qword_101684750);
    sub_1005057FC(&qword_101684750);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *uint64_t v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = a3[9];
    uint64_t v25 = (void *)(a1 + v24);
    uint64_t v26 = (void *)(a2 + v24);
    sub_100522F00(a1 + v24, &qword_10169D6D8);
    sub_1005057FC(&qword_10169D6D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *uint64_t v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v28 = a3[10];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  *(void *)(a1 + v28) = *(void *)(a2 + v28);
  swift_retain();
  swift_release();
  *(void *)(v29 + 8) = *(void *)(v30 + 8);
  swift_retain();
  swift_release();
  *(void *)(v29 + 16) = *(void *)(v30 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(void *)(a1 + v31) = *(void *)(a2 + v31);
  swift_retain();
  swift_release();
  *(void *)(v32 + 8) = *(void *)(v33 + 8);
  swift_retain();
  swift_release();
  uint64_t v34 = *(void **)(v32 + 16);
  uint64_t v35 = *(void **)(v33 + 16);
  *(void *)(v32 + 16) = v35;
  id v36 = v35;

  uint64_t v37 = a3[12];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = a2 + v37;
  uint64_t v40 = *(void **)(a1 + v37);
  uint64_t v41 = *(void **)(a2 + v37);
  *uint64_t v38 = v41;
  id v42 = v41;

  v38[1] = *(void *)(v39 + 8);
  swift_retain();
  swift_release();
  uint64_t v43 = a3[13];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = a2 + v43;
  *uint64_t v44 = *(void *)(a2 + v43);
  v44[1] = *(void *)(a2 + v43 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44[2] = *(void *)(v45 + 16);
  swift_retain();
  swift_release();
  uint64_t v46 = a3[14];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  *(unsigned char *)uint64_t v47 = *(unsigned char *)v48;
  *(void *)(v47 + 8) = *(void *)(v48 + 8);
  swift_retain();
  swift_release();
  uint64_t v49 = a3[15];
  uint64_t v50 = a1 + v49;
  uint64_t v51 = a2 + v49;
  *(unsigned char *)uint64_t v50 = *(unsigned char *)v51;
  *(void *)(v50 + 8) = *(void *)(v51 + 8);
  swift_retain();
  swift_release();
  uint64_t v52 = a3[16];
  uint64_t v53 = a1 + v52;
  uint64_t v54 = a2 + v52;
  *(unsigned char *)uint64_t v53 = *(unsigned char *)(a2 + v52);
  *(void *)(v53 + 8) = *(void *)(a2 + v52 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(v53 + 16) = *(unsigned char *)(v54 + 16);
  uint64_t v55 = a3[17];
  id v56 = (char *)(a1 + v55);
  id v57 = (char *)(a2 + v55);
  uint64_t v58 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
  LODWORD(v53) = v60(v56, 1, v58);
  int v61 = v60(v57, 1, v58);
  if (!v53)
  {
    if (!v61)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 24))(v56, v57, v58);
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v59 + 8))(v56, v58);
    goto LABEL_19;
  }
  if (v61)
  {
LABEL_19:
    uint64_t v62 = sub_1005057FC(&qword_10168EEE8);
    memcpy(v56, v57, *(void *)(*(void *)(v62 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
LABEL_20:
  uint64_t v63 = (int *)sub_1005057FC(&qword_10168EEF0);
  v56[v63[9]] = v57[v63[9]];
  *(void *)&v56[v63[10]] = *(void *)&v57[v63[10]];
  swift_retain();
  swift_release();
  v56[v63[11]] = v57[v63[11]];
  return a1;
}

uint64_t sub_100FF1620(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectWeakTakeInit();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = a3[7];
  id v7 = (void *)(a1 + v6);
  id v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1005057FC(&qword_10169D6C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1005057FC(&qword_1016A5E28);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      uint64_t v12 = sub_1005057FC(&qword_10169D6D0);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v13 = v8[1];
      *id v7 = *v8;
      v7[1] = v13;
      uint64_t v14 = *(int *)(v10 + 32);
      uint64_t v15 = (char *)v7 + v14;
      uint64_t v16 = (char *)v8 + v14;
      uint64_t v17 = type metadata accessor for EditMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (const void *)(a2 + v18);
  uint64_t v21 = sub_1005057FC(&qword_101684750);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  uint64_t v23 = a3[9];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (const void *)(a2 + v23);
  uint64_t v26 = sub_1005057FC(&qword_10169D6D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 32))(v24, v25, v27);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  uint64_t v28 = a3[10];
  uint64_t v29 = a3[11];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(void *)(v30 + 16) = *(void *)(v31 + 16);
  uint64_t v32 = a1 + v29;
  uint64_t v33 = a2 + v29;
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *(void *)(v32 + 16) = *(void *)(v33 + 16);
  uint64_t v34 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  *(void *)(v35 + 16) = *(void *)(v36 + 16);
  uint64_t v37 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  *(_OWORD *)(a1 + v37) = *(_OWORD *)(a2 + v37);
  uint64_t v38 = a3[16];
  uint64_t v39 = a3[17];
  uint64_t v40 = a1 + v38;
  uint64_t v41 = a2 + v38;
  *(unsigned char *)(v40 + 16) = *(unsigned char *)(v41 + 16);
  id v42 = (char *)(a1 + v39);
  uint64_t v43 = (char *)(a2 + v39);
  *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
  uint64_t v44 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v45 = *(void *)(v44 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    uint64_t v46 = sub_1005057FC(&qword_10168EEE8);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  uint64_t v47 = (int *)sub_1005057FC(&qword_10168EEF0);
  v42[v47[9]] = v43[v47[9]];
  *(void *)&v42[v47[10]] = *(void *)&v43[v47[10]];
  v42[v47[11]] = v43[v47[11]];
  return a1;
}

uint64_t sub_100FF1ACC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  swift_unknownObjectWeakTakeAssign();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  id v7 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  if (a1 != a2)
  {
    uint64_t v8 = a3[7];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (void *)(a2 + v8);
    sub_100522F00(a1 + v8, &qword_10169D6C8);
    uint64_t v11 = sub_1005057FC(&qword_10169D6C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1005057FC(&qword_1016A5E28);
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        uint64_t v14 = sub_1005057FC(&qword_10169D6D0);
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        uint64_t v15 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v15;
        uint64_t v16 = *(int *)(v12 + 32);
        uint64_t v17 = (char *)v9 + v16;
        uint64_t v18 = (char *)v10 + v16;
        uint64_t v19 = type metadata accessor for EditMode();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v20 = a3[8];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (const void *)(a2 + v20);
    sub_100522F00(a1 + v20, &qword_101684750);
    uint64_t v23 = sub_1005057FC(&qword_101684750);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    uint64_t v25 = a3[9];
    uint64_t v26 = (void *)(a1 + v25);
    uint64_t v27 = (const void *)(a2 + v25);
    sub_100522F00(a1 + v25, &qword_10169D6D8);
    uint64_t v28 = sub_1005057FC(&qword_10169D6D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 32))(v26, v27, v29);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
  }
  uint64_t v30 = a3[10];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  *(void *)(a1 + v30) = *(void *)(a2 + v30);
  swift_release();
  *(void *)(v31 + 8) = *(void *)(v32 + 8);
  swift_release();
  *(void *)(v31 + 16) = *(void *)(v32 + 16);
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[11];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  *(void *)(a1 + v33) = *(void *)(a2 + v33);
  swift_release();
  *(void *)(v34 + 8) = *(void *)(v35 + 8);
  swift_release();
  uint64_t v36 = *(void **)(v34 + 16);
  *(void *)(v34 + 16) = *(void *)(v35 + 16);

  uint64_t v37 = a3[12];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  uint64_t v40 = *(void **)(a1 + v37);
  *uint64_t v38 = *v39;

  v38[1] = v39[1];
  swift_release();
  uint64_t v41 = a3[13];
  id v42 = (void *)(a1 + v41);
  uint64_t v43 = a2 + v41;
  uint64_t v44 = *(void *)(a2 + v41 + 8);
  void *v42 = *(void *)(a2 + v41);
  v42[1] = v44;
  swift_bridgeObjectRelease();
  v42[2] = *(void *)(v43 + 16);
  swift_release();
  uint64_t v45 = a3[14];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  *(unsigned char *)uint64_t v46 = *(unsigned char *)v47;
  *(void *)(v46 + 8) = *(void *)(v47 + 8);
  swift_release();
  uint64_t v48 = a3[15];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  *(unsigned char *)uint64_t v49 = *(unsigned char *)v50;
  *(void *)(v49 + 8) = *(void *)(v50 + 8);
  swift_release();
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  *(unsigned char *)uint64_t v52 = *(unsigned char *)(a2 + v51);
  *(void *)(v52 + 8) = *(void *)(a2 + v51 + 8);
  swift_release();
  *(unsigned char *)(v52 + 16) = *(unsigned char *)(v53 + 16);
  uint64_t v54 = a3[17];
  uint64_t v55 = (char *)(a1 + v54);
  id v56 = (char *)(a2 + v54);
  uint64_t v57 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v58 = *(void *)(v57 - 8);
  uint64_t v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48);
  LODWORD(v53) = v59(v55, 1, v57);
  int v60 = v59(v56, 1, v57);
  if (!v53)
  {
    if (!v60)
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 40))(v55, v56, v57);
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(v55, v57);
    goto LABEL_19;
  }
  if (v60)
  {
LABEL_19:
    uint64_t v61 = sub_1005057FC(&qword_10168EEE8);
    memcpy(v55, v56, *(void *)(*(void *)(v61 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v55, v56, v57);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
LABEL_20:
  uint64_t v62 = (int *)sub_1005057FC(&qword_10168EEF0);
  v55[v62[9]] = v56[v62[9]];
  *(void *)&v55[v62[10]] = *(void *)&v56[v62[10]];
  swift_release();
  v55[v62[11]] = v56[v62[11]];
  return a1;
}

uint64_t sub_100FF20F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100FF2104);
}

uint64_t sub_100FF2104(char *a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_1005057FC(&qword_1016A5FF8);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[7];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    return v14(&a1[v11], a2, v9);
  }
  uint64_t v12 = sub_1005057FC(&qword_101684770);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[8];
    goto LABEL_11;
  }
  uint64_t v13 = sub_1005057FC(&qword_1016A5FF0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[9];
    goto LABEL_11;
  }
  uint64_t v15 = sub_1005057FC(&qword_10168EEF0);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = &a1[a3[17]];

  return v16(v18, a2, v17);
}

uint64_t sub_100FF22D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100FF22EC);
}

char *sub_100FF22EC(char *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)unint64_t result = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_1005057FC(&qword_1016A5FF8);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[7];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (char *)v14(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = sub_1005057FC(&qword_101684770);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[8];
    goto LABEL_9;
  }
  uint64_t v13 = sub_1005057FC(&qword_1016A5FF0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[9];
    goto LABEL_9;
  }
  uint64_t v15 = sub_1005057FC(&qword_10168EEF0);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = &v5[a4[17]];

  return (char *)v16(v18, a2, a2, v17);
}

void sub_100FF24C0()
{
  sub_100FF26A8();
  if (v0 <= 0x3F)
  {
    sub_100FF2704(319, &qword_1016847E0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_100FF2704(319, (unint64_t *)&unk_1016A6080, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v2 <= 0x3F)
      {
        sub_100ABC080();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_100FF26A8()
{
  if (!qword_1016A6078)
  {
    sub_100522D34(&qword_10169D6D0);
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1016A6078);
    }
  }
}

void sub_100FF2704(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t destroy for CRLScenesListWrapperUI_i(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();

  return swift_release();
}

uint64_t initializeWithCopy for CRLScenesListWrapperUI_i(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_unknownObjectWeakCopyInit();
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(v4 + 8) = *(void *)(a2 + 8);
  *(void *)(v4 + 16) = v5;
  uint64_t v6 = *(void **)(a2 + 24);
  *(void *)(v4 + 24) = v6;
  *(unsigned char *)(v4 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(v4 + 40) = *(void *)(a2 + 40);
  id v7 = v6;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CRLScenesListWrapperUI_i(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_unknownObjectWeakCopyAssign();
  v4[1] = *(void *)(a2 + 8);
  v4[2] = *(void *)(a2 + 16);
  uint64_t v5 = *(void **)(a2 + 24);
  uint64_t v6 = (void *)v4[3];
  v4[3] = v5;
  id v7 = v5;

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for CRLScenesListWrapperUI_i(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_unknownObjectWeakTakeInit();
  *(void *)(v3 + 8) = *(void *)(a2 + 8);
  __n128 result = *(__n128 *)(a2 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(__n128 *)(v3 + 16) = result;
  *(_OWORD *)(v3 + 32) = v5;
  return result;
}

uint64_t assignWithTake for CRLScenesListWrapperUI_i(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_unknownObjectWeakTakeAssign();
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a2 + 8);
  long long v5 = *(void **)(v4 + 24);
  *(void *)(v4 + 24) = *(void *)(a2 + 24);

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLScenesListWrapperUI_i(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  if ((*(void *)(a1 + 8) & 0xF000000000000007) != 0) {
    int v2 = *(_DWORD *)a1 & 0x7FFFFFFF;
  }
  else {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLScenesListWrapperUI_i(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      *(void *)(result + 8) = 1;
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLScenesListWrapperUI_i()
{
  return &type metadata for CRLScenesListWrapperUI_i;
}

uint64_t sub_100FF29B4()
{
  return sub_100523288(&qword_1016A60E0, &qword_1016A60E8);
}

uint64_t sub_100FF29F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100FF2A0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100FF2A28@<X0>(uint64_t a1@<X8>)
{
  return sub_100FE7D6C(*(void *)(v1 + 16), a1);
}

unint64_t sub_100FF2A30()
{
  unint64_t result = qword_1016A6170;
  if (!qword_1016A6170)
  {
    sub_100522D34(&qword_1016A6108);
    sub_100FF2AD0();
    sub_100523288(&qword_10167A5F0, &qword_10167A5F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6170);
  }
  return result;
}

unint64_t sub_100FF2AD0()
{
  unint64_t result = qword_1016A6178;
  if (!qword_1016A6178)
  {
    sub_100522D34(&qword_1016A6100);
    sub_100FF2B4C();
    sub_100FF2C10();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6178);
  }
  return result;
}

unint64_t sub_100FF2B4C()
{
  unint64_t result = qword_1016A6180;
  if (!qword_1016A6180)
  {
    sub_100522D34(&qword_1016A60F8);
    sub_100523288(&qword_1016A6188, &qword_1016A60F0);
    sub_100523288(&qword_1016A6190, &qword_1016A6198);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6180);
  }
  return result;
}

unint64_t sub_100FF2C10()
{
  unint64_t result = qword_1016A61A0;
  if (!qword_1016A61A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A61A0);
  }
  return result;
}

unint64_t sub_100FF2C64()
{
  unint64_t result = qword_1016A61A8;
  if (!qword_1016A61A8)
  {
    sub_100522D34(&qword_1016A6168);
    sub_100FF2CD8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A61A8);
  }
  return result;
}

unint64_t sub_100FF2CD8()
{
  unint64_t result = qword_1016A61B0;
  if (!qword_1016A61B0)
  {
    sub_100522D34(&qword_1016A61B8);
    sub_100523288(&qword_1016A61C0, &qword_1016A61C8);
    sub_100523288(&qword_1016A61D0, &qword_1016A61D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A61B0);
  }
  return result;
}

uint64_t sub_100FF2DA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100FF2E0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100FF2E74()
{
  return sub_100FEFBF4(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(uint64_t))sub_100FE8F34);
}

unint64_t sub_100FF2EA0()
{
  unint64_t result = qword_1016A61E0;
  if (!qword_1016A61E0)
  {
    sub_100522D34(&qword_10169FB90);
    sub_100FEF54C(&qword_10169A0C8, (void (*)(uint64_t))type metadata accessor for CRLSceneInfo);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A61E0);
  }
  return result;
}

uint64_t sub_100FF2F48()
{
  uint64_t v1 = (int *)type metadata accessor for CRLSceneRowItemUI_i(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;

  swift_unknownObjectWeakDestroy();
  uint64_t v6 = v0 + v3 + v1[7];
  sub_1005057FC(&qword_10169D6C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1005057FC(&qword_1016A5E28);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
    {
      swift_release();
      swift_release();
      uint64_t v8 = v6 + *(int *)(v7 + 32);
      uint64_t v9 = type metadata accessor for EditMode();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v5 + v1[8];
  sub_1005057FC(&qword_101684750);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  uint64_t v12 = v5 + v1[9];
  sub_1005057FC(&qword_10169D6D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v14 = v5 + v1[11];
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v15 = v5 + v1[17];
  uint64_t v16 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v17 = *(void *)(v16 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  sub_1005057FC(&qword_10168EEF0);
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_100FF32F8()
{
}

uint64_t sub_100FF3358()
{
  return sub_100FEFBF4(type metadata accessor for CRLSceneRowItemUI_i, sub_100FE9254);
}

uint64_t sub_100FF3388()
{
  return sub_100FEFBF4(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(uint64_t))sub_100FE9648);
}

uint64_t sub_100FF33B8()
{
  return sub_100FEFBF4(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(uint64_t))sub_100FE96BC);
}

uint64_t sub_100FF33E4@<X0>(uint64_t a1@<X8>)
{
  return sub_100FE97E8(*(void ***)(v1 + 16), a1);
}

unint64_t sub_100FF33EC()
{
  unint64_t result = qword_1016A6228;
  if (!qword_1016A6228)
  {
    sub_100522D34(&qword_1016A6148);
    sub_100522D34(&qword_1016A6138);
    sub_100522D34(&qword_1016A6130);
    sub_100522D34(&qword_10169FB90);
    sub_100522D34(&qword_1016A6128);
    sub_100522D34(&qword_1016A6120);
    sub_100522D34(&qword_1016A6118);
    sub_100522D34(&qword_10169FB88);
    sub_100522D34(&qword_1016A6110);
    sub_100522D34(&qword_1016A6108);
    sub_100522D34(&qword_1016A6168);
    sub_100FF2A30();
    sub_100FF2C64();
    swift_getOpaqueTypeConformance2();
    sub_100FF2EA0();
    swift_getOpaqueTypeConformance2();
    sub_100523288(&qword_1016A61F0, &qword_10169FB88);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100FEF54C(&qword_10168EEE0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6228);
  }
  return result;
}

unint64_t sub_100FF3688()
{
  unint64_t result = qword_1016A6230;
  if (!qword_1016A6230)
  {
    sub_100522D34(&qword_1016A6220);
    sub_100523288(&qword_1016A6238, &qword_1016A6240);
    sub_100523288(&qword_1016A6248, &qword_1016A6250);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6230);
  }
  return result;
}

uint64_t sub_100FF374C()
{
  return sub_100FF610C(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(unint64_t))sub_100FEA5A0);
}

uint64_t sub_100FF377C()
{
  return sub_100FEF674(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(unint64_t))sub_100FED814);
}

uint64_t sub_100FF37AC()
{
  return sub_100FF37CC((uint64_t)&unk_101536C20, (uint64_t)&unk_1016A6278);
}

uint64_t sub_100FF37CC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for CRLSceneRowItemUI_i(0) - 8);
  return sub_100FED97C((void **)(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))), a1, a2);
}

uint64_t sub_100FF3844()
{
  return sub_100FEF674(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(unint64_t))sub_100FEDC44);
}

uint64_t sub_100FF3874()
{
  return sub_100FF37CC((uint64_t)&unk_101536BF8, (uint64_t)&unk_10169FA50);
}

uint64_t sub_100FF38A4()
{
  return sub_100FEFBF4(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(uint64_t))sub_100FE95D0);
}

uint64_t sub_100FF38D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100FF38E0()
{
  return swift_release();
}

uint64_t sub_100FF38E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100FF3954()
{
  return sub_100FF37CC((uint64_t)&unk_101536DD8, (uint64_t)&unk_1016A62C8);
}

uint64_t sub_100FF397C()
{
  return sub_100FEF674(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(unint64_t))sub_100FEDE10);
}

uint64_t sub_100FF39AC()
{
  return sub_100FF37CC((uint64_t)&unk_101536DB0, (uint64_t)&unk_1016A62C0);
}

uint64_t sub_100FF39DC@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for CRLSceneRowItemUI_i(0);

  return sub_100FE5CC8(a1);
}

uint64_t sub_100FF3A60()
{
  return sub_100FEFBF4(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(uint64_t))sub_100FE7918);
}

unint64_t sub_100FF3A8C()
{
  unint64_t result = qword_1016A6300;
  if (!qword_1016A6300)
  {
    sub_100522D34(&qword_1016A62F8);
    sub_100523288(&qword_1016A6308, &qword_1016A6310);
    sub_100523288(&qword_1016A6318, &qword_1016A6320);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6300);
  }
  return result;
}

uint64_t sub_100FF3B50@<X0>(uint64_t a1@<X8>)
{
  return sub_100FEC990(*(void *)(v1 + 16), a1);
}

unint64_t sub_100FF3B58()
{
  unint64_t result = qword_1016A6340;
  if (!qword_1016A6340)
  {
    sub_100522D34(&qword_1016A6330);
    sub_100FF3BF8();
    sub_100523288(&qword_101695368, &qword_101695370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6340);
  }
  return result;
}

unint64_t sub_100FF3BF8()
{
  unint64_t result = qword_1016A6348;
  if (!qword_1016A6348)
  {
    sub_100522D34(&qword_1016A6350);
    sub_100523288(&qword_101680820, &qword_101680828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6348);
  }
  return result;
}

uint64_t sub_100FF3CAC()
{
  return sub_100FF37CC((uint64_t)&unk_101536F18, (uint64_t)&unk_1016A6388);
}

uint64_t sub_100FF3CE4()
{
  return sub_100FEFBF4(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(uint64_t))sub_100FEE6DC);
}

unint64_t sub_100FF3D10()
{
  unint64_t result = qword_1016A63F8;
  if (!qword_1016A63F8)
  {
    sub_100522D34(&qword_1016A63F0);
    sub_100523288(&qword_1016A6400, &qword_1016A6408);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A63F8);
  }
  return result;
}

unint64_t sub_100FF3DB0()
{
  unint64_t result = qword_1016A6410;
  if (!qword_1016A6410)
  {
    sub_100522D34(&qword_1016A63E8);
    sub_100522D34(&qword_1016A63D8);
    sub_100FF3EB8(&qword_1016A6418, &qword_1016A63D8, (void (*)(void))sub_100FF3F34);
    swift_getOpaqueTypeConformance2();
    sub_100523288(&qword_1016A6428, &qword_1016A6430);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6410);
  }
  return result;
}

uint64_t sub_100FF3EB8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100FF3F34()
{
  unint64_t result = qword_1016A6420;
  if (!qword_1016A6420)
  {
    sub_100522D34(&qword_1016A63D0);
    sub_100522D34(&qword_1016A63C0);
    sub_100522D34(&qword_101684968);
    sub_100523288(&qword_101684978, &qword_101684968);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6420);
  }
  return result;
}

uint64_t sub_100FF4048()
{
  return sub_100FF610C(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(unint64_t))sub_100FEE638);
}

uint64_t sub_100FF4078()
{
  return sub_100FEFBF4(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(uint64_t))sub_100FEE0D8);
}

uint64_t sub_100FF40A8()
{
  return EnvironmentValues.writingToolsBehavior.getter();
}

uint64_t sub_100FF40CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100FEFB20(a1, a2, a3, a4, &qword_1016A63B8, (uint64_t (*)(char *))&EnvironmentValues.writingToolsBehavior.setter);
}

uint64_t sub_100FF4104()
{
  return sub_100FEFBF4(type metadata accessor for CRLSceneRowItemUI_i, (uint64_t (*)(uint64_t))sub_100FEE5E0);
}

uint64_t sub_100FF413C()
{
  return sub_100FF415C((uint64_t)&unk_1015370D0, (uint64_t)&unk_1016A64A8);
}

uint64_t sub_100FF415C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for CRLSceneRowItemUI_i(0) - 8);
  return sub_100FEC1D0(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a1, a2);
}

unint64_t sub_100FF41D0()
{
  unint64_t result = qword_1016A6468;
  if (!qword_1016A6468)
  {
    sub_100522D34(&qword_1016A6448);
    sub_100523288(&qword_1016A6470, &qword_1016A6440);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6468);
  }
  return result;
}

uint64_t sub_100FF4274()
{
  return sub_100FF415C((uint64_t)&unk_1015370A8, (uint64_t)&unk_1016A6498);
}

uint64_t sub_100FF4298()
{
  uint64_t v2 = *(void *)(type metadata accessor for CRLSceneRowItemUI_i(0) - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100528488;
  return sub_100FEC634(v3);
}

uint64_t sub_100FF4368(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLSceneRowItemUI_i(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_100528D08;
  return sub_100FEC3D4(a1, v6, v7, v8, v9);
}

uint64_t sub_100FF4498()
{
  uint64_t v1 = (int *)type metadata accessor for CRLSceneRowItemUI_i(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_unknownObjectRelease();
  uint64_t v5 = v0 + v3;

  swift_unknownObjectWeakDestroy();
  uint64_t v6 = v0 + v3 + v1[7];
  sub_1005057FC(&qword_10169D6C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1005057FC(&qword_1016A5E28);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
    {
      swift_release();
      swift_release();
      uint64_t v8 = v6 + *(int *)(v7 + 32);
      uint64_t v9 = type metadata accessor for EditMode();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v5 + v1[8];
  sub_1005057FC(&qword_101684750);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  uint64_t v12 = v5 + v1[9];
  sub_1005057FC(&qword_10169D6D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v14 = v5 + v1[11];
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v15 = v5 + v1[17];
  uint64_t v16 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v17 = *(void *)(v16 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  sub_1005057FC(&qword_10168EEF0);
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_100FF485C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLSceneRowItemUI_i(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_100528D08;
  return sub_100FEBEC8(a1, v6, v7, v8, v9);
}

unint64_t sub_100FF4988()
{
  unint64_t result = qword_1016A6500;
  if (!qword_1016A6500)
  {
    sub_100522D34(&qword_1016A64E8);
    sub_100523288(&qword_1016A6508, &qword_1016A64E0);
    sub_100523288(&qword_1016A5FD0, &qword_10168A5C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6500);
  }
  return result;
}

unint64_t sub_100FF4A4C()
{
  unint64_t result = qword_1016A6510;
  if (!qword_1016A6510)
  {
    sub_100522D34(&qword_1016A64D0);
    sub_100FF4AEC();
    sub_100523288(&qword_10168A600, &qword_10168A608);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6510);
  }
  return result;
}

unint64_t sub_100FF4AEC()
{
  unint64_t result = qword_1016A6518;
  if (!qword_1016A6518)
  {
    sub_100522D34(&qword_1016A64C8);
    sub_100FF4B98();
    sub_100FEF54C(&qword_10168EEE0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6518);
  }
  return result;
}

unint64_t sub_100FF4B98()
{
  unint64_t result = qword_1016A6520;
  if (!qword_1016A6520)
  {
    sub_100522D34(&qword_1016A64C0);
    sub_100FF4C38();
    sub_100523288(&qword_1016A6548, &qword_1016A64B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6520);
  }
  return result;
}

unint64_t sub_100FF4C38()
{
  unint64_t result = qword_1016A6528;
  if (!qword_1016A6528)
  {
    sub_100522D34(&qword_1016A6530);
    sub_100FF4CD4(&qword_1016A6538, &qword_1016A6540);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6528);
  }
  return result;
}

uint64_t sub_100FF4CD4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100FF4D44()
{
  unint64_t result = qword_1016A6550;
  if (!qword_1016A6550)
  {
    sub_100522D34(&qword_1016A64F0);
    sub_100FF4988();
    sub_100FEF54C(&qword_10168EEE0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6550);
  }
  return result;
}

uint64_t sub_100FF4DF8@<X0>(uint64_t a1@<X8>)
{
  return sub_100FD6704(*(void *)(v1 + 16), a1);
}

uint64_t type metadata accessor for CRLScenesListUI_i(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A6660);
}

uint64_t sub_100FF4E20()
{
  return swift_release();
}

uint64_t sub_100FF4E28(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  swift_retain();
  return a1;
}

uint64_t sub_100FF4E78(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  uint64_t v4 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100FF4ED4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t sub_100FF4F28(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100FF4F70(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for HVStack()
{
  return sub_100568E70();
}

uint64_t *sub_100FF4FD4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    swift_unknownObjectWeakCopyInit();
    uint64_t v7 = a2[2];
    v4[1] = a2[1];
    v4[2] = v7;
    uint64_t v9 = (void *)a2[3];
    uint64_t v8 = a2[4];
    v4[3] = (uint64_t)v9;
    v4[4] = v8;
    uint64_t v10 = a3[7];
    uint64_t v11 = (char *)v4 + v10;
    uint64_t v12 = (char *)a2 + v10;
    v4[5] = a2[5];
    uint64_t v13 = type metadata accessor for EditMode();
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    id v14 = v9;
    swift_bridgeObjectRetain();
    swift_retain();
    v28(v11, v12, v13);
    uint64_t v15 = sub_1005057FC(&qword_1016A5C48);
    *(void *)&v11[*(int *)(v15 + 28)] = *(void *)&v12[*(int *)(v15 + 28)];
    uint64_t v16 = a3[8];
    uint64_t v17 = a3[9];
    uint64_t v18 = (uint64_t *)((char *)v4 + v16);
    uint64_t v19 = (char *)a2 + v16;
    uint64_t v21 = *(void **)v19;
    uint64_t v20 = *((void *)v19 + 1);
    void *v18 = *(void *)v19;
    v18[1] = v20;
    uint64_t v22 = (char *)v4 + v17;
    uint64_t v23 = (char *)a2 + v17;
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)uint64_t v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    v22[16] = v23[16];
    swift_retain();
    id v25 = v21;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_100FF5164(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakDestroy();

  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for EditMode();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_1005057FC(&qword_1016A5C48);
  swift_release();

  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_100FF5240(uint64_t a1, void *a2, int *a3)
{
  uint64_t v6 = (void *)swift_unknownObjectWeakCopyInit();
  uint64_t v7 = a2[2];
  v6[1] = a2[1];
  _OWORD v6[2] = v7;
  uint64_t v9 = (void *)a2[3];
  uint64_t v8 = a2[4];
  v6[3] = v9;
  v6[4] = v8;
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)v6 + v10;
  uint64_t v12 = (char *)a2 + v10;
  void v6[5] = a2[5];
  uint64_t v13 = type metadata accessor for EditMode();
  id v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  id v15 = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  v14(v11, v12, v13);
  uint64_t v16 = sub_1005057FC(&qword_1016A5C48);
  *(void *)&v11[*(int *)(v16 + 28)] = *(void *)&v12[*(int *)(v16 + 28)];
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = (void *)(a1 + v17);
  uint64_t v20 = (char *)a2 + v17;
  uint64_t v22 = *(void **)v20;
  uint64_t v21 = *((void *)v20 + 1);
  *uint64_t v19 = *(void *)v20;
  v19[1] = v21;
  uint64_t v23 = a1 + v18;
  uint64_t v24 = (char *)a2 + v18;
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = *(void *)v24;
  *(void *)(v23 + 8) = v25;
  *(unsigned char *)(v23 + 16) = v24[16];
  swift_retain();
  id v26 = v22;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100FF537C(uint64_t a1, void *a2, int *a3)
{
  uint64_t v6 = (void *)swift_unknownObjectWeakCopyAssign();
  v6[1] = a2[1];
  _OWORD v6[2] = a2[2];
  uint64_t v7 = (void *)a2[3];
  uint64_t v8 = (void *)v6[3];
  v6[3] = v7;
  id v9 = v7;

  *(void *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = a2[5];
  swift_retain();
  swift_release();
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for EditMode();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = sub_1005057FC(&qword_1016A5C48);
  *(void *)(v11 + *(int *)(v14 + 28)) = *(void *)&v12[*(int *)(v14 + 28)];
  swift_retain();
  swift_release();
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void **)(a1 + v15);
  uint64_t v19 = *(void **)((char *)a2 + v15);
  *uint64_t v16 = v19;
  id v20 = v19;

  v16[1] = *((void *)v17 + 1);
  swift_retain();
  swift_release();
  uint64_t v21 = a3[9];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  *(void *)(a1 + v21) = *(void *)((char *)a2 + v21);
  swift_retain();
  swift_release();
  *(void *)(v22 + 8) = *((void *)v23 + 1);
  swift_retain();
  swift_release();
  *(unsigned char *)(v22 + 16) = v23[16];
  return a1;
}

uint64_t sub_100FF54FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = swift_unknownObjectWeakTakeInit();
  *(void *)(v6 + 8) = *(void *)(a2 + 8);
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v6 + 32) = v7;
  uint64_t v8 = a3[7];
  uint64_t v9 = v6 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for EditMode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = sub_1005057FC(&qword_1016A5C48);
  *(void *)(v9 + *(int *)(v12 + 28)) = *(void *)(v10 + *(int *)(v12 + 28));
  uint64_t v13 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(unsigned char *)(v14 + 16) = *(unsigned char *)(v15 + 16);
  return a1;
}

uint64_t sub_100FF55D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = swift_unknownObjectWeakTakeAssign();
  *(_OWORD *)(v6 + 8) = *(_OWORD *)(a2 + 8);
  long long v7 = *(void **)(v6 + 24);
  *(void *)(v6 + 24) = *(void *)(a2 + 24);

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for EditMode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = sub_1005057FC(&qword_1016A5C48);
  *(void *)(v9 + *(int *)(v12 + 28)) = *(void *)(v10 + *(int *)(v12 + 28));
  swift_release();
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = *(void **)(a1 + v13);
  void *v14 = *v15;

  v14[1] = v15[1];
  swift_release();
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)(a1 + v17) = *(void *)v19;
  swift_release();
  *(void *)(v18 + 8) = *(void *)(v19 + 8);
  swift_release();
  *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
  return a1;
}

uint64_t sub_100FF5710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100FF5724);
}

uint64_t sub_100FF5724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    if ((*(void *)(a1 + 8) & 0xF000000000000007) != 0) {
      return (*(_DWORD *)a1 & 0x7FFFFFFFu) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v7 = sub_1005057FC(&qword_1016A5C48);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
    uint64_t v9 = v7;
    uint64_t v10 = a1 + *(int *)(a3 + 28);
    return v8(v10, a2, v9);
  }
}

uint64_t sub_100FF57D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100FF57EC);
}

void *sub_100FF57EC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
    result[1] = 1;
  }
  else
  {
    uint64_t v7 = sub_1005057FC(&qword_1016A5C48);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100FF589C()
{
  sub_100FF2704(319, (unint64_t *)&unk_1016A5CB8, (uint64_t (*)(uint64_t))&type metadata accessor for EditMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100FF5984()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100FF5A04()
{
  return sub_100523288(&qword_1016A66A8, &qword_1016A66B0);
}

uint64_t sub_100FF5A40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100FF5A5C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100FF5AA0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  *(unsigned char *)(a2 + 8) = *((unsigned char *)a1 + 8);
  *(void *)a2 = v2;
  return a2;
}

uint64_t sub_100FF5AB8()
{
  return sub_100FEEFC8(*(void *)(v0 + 32), *(void *)(v0 + 16));
}

uint64_t sub_100FF5ADC()
{
  return sub_100FEEFC8(*(void *)(v0 + 32), *(void *)(v0 + 16));
}

uint64_t sub_100FF5B00@<X0>(uint64_t a1@<X8>)
{
  return sub_100FD82E8(*(void *)(v1 + 16), a1);
}

unsigned __int8 *sub_100FF5B0C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  type metadata accessor for CRLScenesListUI_i(0);

  return sub_100FD9374(a1, a2);
}

uint64_t sub_100FF5B8C@<X0>(uint64_t a1@<X8>)
{
  return sub_100FD93EC(*(void *)(v1 + 16), a1);
}

unint64_t sub_100FF5B94()
{
  unint64_t result = qword_1016A6728;
  if (!qword_1016A6728)
  {
    sub_100522D34(&qword_1016A6720);
    sub_100523288(&qword_1016A6730, &qword_1016A6738);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6728);
  }
  return result;
}

uint64_t sub_100FF5C30()
{
  uint64_t v1 = (int *)(type metadata accessor for CRLScenesListUI_i(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_unknownObjectWeakDestroy();

  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = v6 + v1[9];
  uint64_t v8 = type metadata accessor for EditMode();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  sub_1005057FC(&qword_1016A5C48);
  swift_release();

  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100FF5D84()
{
  return sub_100FEFBF4(type metadata accessor for CRLScenesListUI_i, sub_100FDB6F4);
}

unint64_t sub_100FF5DB0()
{
  unint64_t result = qword_1016A6748;
  if (!qword_1016A6748)
  {
    sub_100522D34(&qword_1016A66F0);
    sub_100FF5E50();
    sub_100523288(&qword_1016A5D78, &qword_1016A5D80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6748);
  }
  return result;
}

unint64_t sub_100FF5E50()
{
  unint64_t result = qword_1016A6750;
  if (!qword_1016A6750)
  {
    sub_100522D34(&qword_1016A66E8);
    sub_100522D34(&qword_1016A66D8);
    sub_100522D34(&qword_1016A6718);
    sub_100522D34(&qword_1016A66D0);
    sub_100522D34(&qword_1016A66C8);
    sub_100522D34(&qword_1016A66C0);
    sub_100522D34(&qword_1016A66B8);
    sub_100522D34(&qword_1016A5D58);
    sub_100523288(&qword_1016A5D50, &qword_1016A5D58);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10052E310();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100522D34(&qword_1016A6720);
    sub_100FF5B94();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100523288(&qword_1016A6758, &qword_1016A6740);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6750);
  }
  return result;
}

uint64_t sub_100FF60DC()
{
  return sub_100FF610C(type metadata accessor for CRLScenesListUI_i, (uint64_t (*)(unint64_t))sub_100FDB768);
}

uint64_t sub_100FF610C(uint64_t (*a1)(void), uint64_t (*a2)(unint64_t))
{
  uint64_t v4 = *(void *)(a1(0) - 8);
  return a2(v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
}

unint64_t sub_100FF6178()
{
  unint64_t result = qword_1016A6760;
  if (!qword_1016A6760)
  {
    sub_100522D34(&qword_1016A6700);
    sub_100522D34(&qword_1016A66F0);
    sub_100522D34(&qword_10169FB88);
    sub_100FF5DB0();
    sub_100523288(&qword_1016A61F0, &qword_10169FB88);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6760);
  }
  return result;
}

uint64_t sub_100FF627C()
{
  return sub_100FEFBF4(type metadata accessor for CRLScenesListUI_i, sub_100FDB8BC);
}

uint64_t sub_100FF62B0()
{
  return sub_100FDB9C0(*(void *)(v0 + 16));
}

uint64_t sub_100FF62D0()
{
  return sub_100FEFBF4(type metadata accessor for CRLScenesListUI_i, sub_100FDB564);
}

uint64_t sub_100FF62FC@<X0>(uint64_t a1@<X8>)
{
  return sub_100FD9E78(*(void *)(v1 + 16), a1);
}

unint64_t sub_100FF6304()
{
  unint64_t result = qword_1016A6798;
  if (!qword_1016A6798)
  {
    sub_100522D34(&qword_1016A5EE0);
    sub_100FEF8AC();
    sub_100FEF54C(&qword_10168EEE0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6798);
  }
  return result;
}

uint64_t sub_100FF63B0@<X0>(uint64_t a1@<X8>)
{
  return sub_100FDA888(*(void *)(v1 + 16), a1);
}

uint64_t sub_100FF63BC()
{
  return sub_100FEFBF4(type metadata accessor for CRLScenesListUI_i, (uint64_t (*)(uint64_t))sub_100FDAF0C);
}

uint64_t sub_100FF63E8@<X0>(char *a1@<X8>)
{
  return sub_100FDA454(*(void *)(v1 + 16), a1);
}

uint64_t sub_100FF63F4()
{
  return sub_100FEF674(type metadata accessor for CRLScenesListUI_i, (uint64_t (*)(unint64_t))sub_100FE0C3C);
}

uint64_t sub_100FF6424()
{
  return sub_100FEF674(type metadata accessor for CRLScenesListUI_i, (uint64_t (*)(unint64_t))sub_100FE0C88);
}

uint64_t sub_100FF6454(uint64_t a1)
{
  return sub_100FF6480(a1, type metadata accessor for CRLScenesListUI_i, (uint64_t (*)(uint64_t, uint64_t))sub_100FD8980);
}

uint64_t sub_100FF6480(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a3(a1, v6);
}

uint64_t sub_100FF651C(uint64_t a1, uint64_t a2)
{
  return sub_100FF6548(a1, a2, type metadata accessor for CRLScenesListUI_i, sub_100FD8E9C);
}

uint64_t sub_100FF6548(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(a3(0) - 8);
  uint64_t v8 = v4 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return a4(a1, a2, v8);
}

uint64_t sub_100FF65E0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100FF661C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for CRLScenesListUI_i(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100FD8FBC(a1, v4);
}

void sub_100FF668C(uint64_t *a1)
{
  sub_100FD9058(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for HVStackKind()
{
  return &type metadata for HVStackKind;
}

uint64_t sub_100FF66BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_100FF6788()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100FF6868()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_100FF688C(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101678470);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v11 - v8;
  sub_100BC9224(a1, (uint64_t)&v11 - v8);
  sub_100BC9224((uint64_t)v9, (uint64_t)v5);
  IntentParameter.wrappedValue.setter();
  return sub_10065ABCC((uint64_t)v9);
}

uint64_t sub_100FF6950(uint64_t a1)
{
  uint64_t v35 = sub_1005057FC(&qword_1016A6960);
  uint64_t v37 = *(void *)(v35 - 8);
  __chkstk_darwin(v35, v2);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_1016A6968);
  __chkstk_darwin(v5, v6);
  unint64_t v7 = sub_100E7D82C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._countAndFlagsBits = 0x20747265736E49;
  v8._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  uint64_t v34 = sub_101008D5C(&qword_10167B928, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0x20796D206E6F20;
  v9._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  uint64_t v36 = sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0x6472616F6220;
  v10._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v32 = v7;
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v37 + 8);
  v37 += 8;
  uint64_t v11 = v35;
  v33(v4, v35);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._object = (void *)0x800000010129D6E0;
  v12._countAndFlagsBits = 0xD000000000000023;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  uint64_t v31 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 8250;
  v13._object = (void *)0xE200000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v15 = v33;
  v33(v4, v11);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._countAndFlagsBits = 0x2065687420646441;
  v16._object = (void *)0xED00002074786574;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0x206F746E6920;
  v17._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0x6472616F6220;
  v18._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v19 = v35;
  v15(v4, v35);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._countAndFlagsBits = 0x206574697257;
  v20._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 0x20796D206E6F20;
  v21._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._countAndFlagsBits = 0x6472616F6220;
  v22._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v33(v4, v19);
  sub_1005057FC(&qword_1016A6970);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_10117E800;
  uint64_t v25 = v29;
  *(void *)(v24 + 32) = v30;
  *(void *)(v24 + 40) = v25;
  *(void *)(v24 + 48) = v28;
  *(void *)(v24 + 56) = v23;
  uint64_t v26 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_100FF7034(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AttributedString();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v9 = __chkstk_darwin(v7, v8);
  uint64_t v11 = (char *)&v14 - v10;
  Swift::String v12 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v12((char *)&v14 - v10, a1, v2, v9);
  ((void (*)(char *, char *, uint64_t))v12)(v6, v11, v2);
  IntentParameter.wrappedValue.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v11, v2);
}

uint64_t sub_100FF7168(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardEntity();
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  __n128 v9 = (char *)&v11 - v8;
  sub_10057B3EC(a1, (uint64_t)&v11 - v8);
  sub_10057B3EC((uint64_t)v9, (uint64_t)v5);
  IntentParameter.wrappedValue.setter();
  return sub_1005F6324((uint64_t)v9);
}

uint64_t sub_100FF7228()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100E7D82C();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v4, v0);
  swift_getKeyPath();
  sub_101008D5C(&qword_10167B928, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v6(v4, v0);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10117D8C0;
  *(void *)(v8 + 32) = v5;
  *(void *)(v8 + 40) = v7;
  uint64_t v9 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100FF7474(uint64_t a1)
{
  uint64_t v55 = sub_1005057FC(&qword_1016A6960);
  uint64_t v61 = *(void *)(v55 - 8);
  __chkstk_darwin(v55, v2);
  uint64_t v59 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC(&qword_1016A6968);
  __chkstk_darwin(v4, v5);
  unint64_t v6 = sub_100E7D82C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._countAndFlagsBits = 0x20747265736E49;
  v7._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  uint64_t v60 = sub_101008D5C(&qword_10167B928, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0x20796D206E6F20;
  v8._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  uint64_t v57 = sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0x69206472616F6220;
  v9._object = (void *)0xEE002061206F746ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  unint64_t v58 = sub_101008EC8();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  uint64_t v11 = v59;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v53 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  id v56 = *(void (**)(char *, uint64_t))(v61 + 8);
  v61 += 8;
  uint64_t v12 = v55;
  v56(v11, v55);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._object = (void *)0x800000010129D6E0;
  v13._countAndFlagsBits = 0xD000000000000023;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0x206120736120;
  v14._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 32;
  v15._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  Swift::String v17 = v59;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v52 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v18 = v12;
  uint64_t v19 = v56;
  v56(v17, v18);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._countAndFlagsBits = 0x2065687420646441;
  v20._object = (void *)0xED00002074786574;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 0x206F746E6920;
  v21._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  uint64_t v54 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._countAndFlagsBits = 0x61206472616F6220;
  v22._object = (void *)0xEA00000000002073;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  uint64_t v24 = v59;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v51 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v25 = v55;
  v19(v24, v55);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v26._countAndFlagsBits = 0x206574697257;
  v26._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v27._countAndFlagsBits = 0x20796D206E6F20;
  v27._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v28._countAndFlagsBits = 0x69206472616F6220;
  v28._object = (void *)0xEC0000002061206ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  uint64_t v30 = v59;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v48 = v6;
  uint64_t v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v56(v30, v25);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v31._countAndFlagsBits = 0x206574697257;
  v31._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v32._countAndFlagsBits = 0x2061206E6920;
  v32._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v33._countAndFlagsBits = 544108320;
  v33._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v34._countAndFlagsBits = 0x6472616F6220;
  v34._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  uint64_t v35 = v30;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v37 = v55;
  uint64_t v36 = v56;
  v56(v30, v55);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v38._countAndFlagsBits = 0x20686361747441;
  v38._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v39._countAndFlagsBits = 0x2061206E6920;
  v39._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v40._countAndFlagsBits = 544108320;
  v40._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v40);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v41._countAndFlagsBits = 0x6472616F6220;
  v41._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v42 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v36(v35, v37);
  sub_1005057FC(&qword_1016A6970);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_101186E40;
  uint64_t v44 = v52;
  *(void *)(v43 + 32) = v53;
  *(void *)(v43 + 40) = v44;
  uint64_t v45 = v50;
  *(void *)(v43 + 48) = v51;
  *(void *)(v43 + 56) = v45;
  *(void *)(v43 + 64) = v49;
  *(void *)(v43 + 72) = v42;
  uint64_t v46 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v46;
}

uint64_t sub_100FF801C()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100E7D82C();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  unint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v4, v0);
  swift_getKeyPath();
  sub_101008D5C(&qword_10167B928, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v6(v4, v0);
  swift_getKeyPath();
  sub_101008EC8();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v6(v4, v0);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10117DF40;
  *(void *)(v9 + 32) = v5;
  *(void *)(v9 + 40) = v7;
  *(void *)(v9 + 48) = v8;
  uint64_t v10 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100FF82E4()
{
  return sub_10100352C();
}

uint64_t sub_100FF8318(uint64_t a1)
{
  uint64_t v42 = sub_1005057FC(&qword_1016A6938);
  uint64_t v44 = *(void *)(v42 - 8);
  __chkstk_darwin(v42, v2);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_1016A6940);
  __chkstk_darwin(v5, v6);
  sub_10065AB78();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._object = (void *)0x800000010129D790;
  v7._countAndFlagsBits = 0xD00000000000001CLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  unint64_t v40 = sub_1006D8E20();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 544175136;
  v8._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  uint64_t v43 = sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  Swift::String v39 = v4;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v37 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v44 + 8);
  v44 += 8;
  uint64_t v11 = v42;
  v10(v4, v42);
  Swift::String v41 = v10;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 0xD000000000000016;
  v12._object = (void *)0x800000010129D7B0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  uint64_t v38 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 544175136;
  v13._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  Swift::String v15 = v39;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v36 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v10(v15, v11);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._object = (void *)0x800000010129D7D0;
  v16._countAndFlagsBits = 0xD00000000000001CLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 544175136;
  v17._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  uint64_t v19 = v39;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v41(v19, v42);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._countAndFlagsBits = 0xD00000000000001ALL;
  v20._object = (void *)0x800000010129D7F0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 544175136;
  v21._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v23 = v42;
  v41(v19, v42);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v24._countAndFlagsBits = 0x206574697257;
  v24._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v25._countAndFlagsBits = 0xD000000000000018;
  v25._object = (void *)0x800000010129D810;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v26._countAndFlagsBits = 0x6472616F6220;
  v26._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v41(v19, v23);
  sub_1005057FC(&qword_1016A6948);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_10118E4B0;
  uint64_t v29 = v36;
  *(void *)(v28 + 32) = v37;
  *(void *)(v28 + 40) = v29;
  uint64_t v30 = v34;
  *(void *)(v28 + 48) = v35;
  *(void *)(v28 + 56) = v30;
  *(void *)(v28 + 64) = v27;
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_100FF8AEC()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_10065AB78();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v4, v0);
  swift_getKeyPath();
  sub_1006D8E20();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v6(v4, v0);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10117D8C0;
  *(void *)(v8 + 32) = v5;
  *(void *)(v8 + 40) = v7;
  uint64_t v9 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100FF8D04(uint64_t a1)
{
  uint64_t v28 = sub_1005057FC(&qword_1016A6938);
  uint64_t v30 = *(void *)(v28 - 8);
  __chkstk_darwin(v28, v2);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_1016A6940);
  __chkstk_darwin(v5, v6);
  sub_10065AB78();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._object = (void *)0x800000010129D710;
  v7._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  uint64_t v23 = sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  uint64_t v29 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v24 = *(void (**)(char *, uint64_t))(v30 + 8);
  v30 += 8;
  uint64_t v9 = v28;
  v24(v4, v28);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0xD00000000000001BLL;
  v10._object = (void *)0x800000010129D730;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0x6472616F6220;
  v11._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v26 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v12 = v24;
  v24(v4, v9);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0xD000000000000017;
  v13._object = (void *)0x800000010129D750;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0x6472616F6220;
  v14._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v15 = v28;
  v12(v4, v28);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._countAndFlagsBits = 0xD000000000000016;
  v16._object = (void *)0x800000010129D770;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v12(v4, v15);
  sub_1005057FC(&qword_1016A6948);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_10117E800;
  uint64_t v20 = v26;
  *(void *)(v19 + 32) = v27;
  *(void *)(v19 + 40) = v20;
  *(void *)(v19 + 48) = v25;
  *(void *)(v19 + 56) = v18;
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_100FF9244(uint64_t a1)
{
  return sub_100FFA598(a1, (uint64_t)&unk_1011C2818, (void (*)(uint64_t))sub_10065AB78);
}

uint64_t sub_100FF9278(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_1016A6920);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v54 = v2;
  uint64_t v55 = v3;
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_1016A6928);
  __chkstk_darwin(v7, v8);
  unint64_t v9 = sub_100E7D904();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0x20747265736E49;
  v10._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  unint64_t v53 = sub_1006D8E20();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0x20796D206E6F20;
  v11._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  uint64_t v52 = sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0x6472616F6220;
  v12._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v49 = v9;
  uint64_t v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v13 = v54;
  Swift::String v14 = *(void (**)(char *, uint64_t))(v55 + 8);
  v55 += 8;
  uint64_t v51 = v14;
  v14(v6, v54);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._countAndFlagsBits = 0x20747265736E49;
  v15._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  v43[1] = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._object = (void *)0x800000010129D6C0;
  v16._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0x6472616F6220;
  v17._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  uint64_t v50 = v6;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v18 = v13;
  uint64_t v19 = v51;
  v51(v6, v18);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._countAndFlagsBits = 0xD000000000000023;
  v20._object = (void *)0x800000010129D6E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 8250;
  v21._object = (void *)0xE200000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  uint64_t v23 = v50;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v46 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v19(v23, v54);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v24._countAndFlagsBits = 0x2065687420646441;
  v24._object = (void *)0xED00002074786574;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v25._countAndFlagsBits = 0x206F746E6920;
  v25._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v26._countAndFlagsBits = 0x6472616F6220;
  v26._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  uint64_t v27 = v50;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v45 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v28 = v54;
  uint64_t v29 = v51;
  v51(v27, v54);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v30._countAndFlagsBits = 543450177;
  v30._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v31._countAndFlagsBits = 544175136;
  v31._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v32._countAndFlagsBits = 0x6472616F6220;
  v32._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  uint64_t v33 = v50;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v44 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v29(v33, v28);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v34._countAndFlagsBits = 0x206574697257;
  v34._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v35._countAndFlagsBits = 0x20796D206E6F20;
  v35._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v36._countAndFlagsBits = 0x6472616F6220;
  v36._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v37 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v51(v33, v54);
  sub_1005057FC(&qword_1016A6930);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_101186E40;
  uint64_t v39 = v47;
  *(void *)(v38 + 32) = v48;
  *(void *)(v38 + 40) = v39;
  uint64_t v40 = v45;
  *(void *)(v38 + 48) = v46;
  *(void *)(v38 + 56) = v40;
  *(void *)(v38 + 64) = v44;
  *(void *)(v38 + 72) = v37;
  uint64_t v41 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_100FF9BA0(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101678470);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  unint64_t v9 = (char *)&v11 - v8;
  sub_100BC9224(a1, (uint64_t)&v11 - v8);
  sub_100BC9224((uint64_t)v9, (uint64_t)v5);
  IntentParameter.wrappedValue.setter();
  return sub_10065ABCC((uint64_t)v9);
}

uint64_t sub_100FF9C64()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100E7D904();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v4, v0);
  swift_getKeyPath();
  sub_1006D8E20();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v6(v4, v0);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10117D8C0;
  *(void *)(v8 + 32) = v5;
  *(void *)(v8 + 40) = v7;
  uint64_t v9 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100FF9E7C(uint64_t a1)
{
  uint64_t v38 = a1;
  uint64_t v37 = sub_1005057FC(&qword_1016A6920);
  uint64_t v1 = *(void *)(v37 - 8);
  __chkstk_darwin(v37, v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_1016A6928);
  __chkstk_darwin(v5, v6);
  sub_100E7D904();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._countAndFlagsBits = 0xD000000000000016;
  unint64_t v32 = 0xD000000000000016;
  v7._object = (void *)0x800000010129D600;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  uint64_t v39 = sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0x6472616F6220;
  v8._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v10 = v1 + 8;
  uint64_t v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v11 = v37;
  v9(v4, v37);
  Swift::String v35 = v9;
  uint64_t v36 = v10;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._object = (void *)0x800000010129D620;
  v12._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0x6472616F6220;
  v13._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v33 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v9(v4, v11);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._object = (void *)0x800000010129D640;
  v14._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0x6472616F6220;
  v15._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v35(v4, v37);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._countAndFlagsBits = 0xD00000000000001BLL;
  v16._object = (void *)0x800000010129D660;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0x6472616F6220;
  v17._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v18 = v37;
  uint64_t v19 = v35;
  v35(v4, v37);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._object = (void *)0x800000010129D680;
  v20._countAndFlagsBits = v32;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 0x6472616F6220;
  v21._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v19(v4, v18);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v22._countAndFlagsBits = 0xD000000000000019;
  v22._object = (void *)0x800000010129D6A0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v23._countAndFlagsBits = 0x6472616F6220;
  v23._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v24 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v19(v4, v37);
  sub_1005057FC(&qword_1016A6930);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_101186E40;
  uint64_t v26 = v33;
  *(void *)(v25 + 32) = v34;
  *(void *)(v25 + 40) = v26;
  uint64_t v27 = v30;
  *(void *)(v25 + 48) = v31;
  *(void *)(v25 + 56) = v27;
  *(void *)(v25 + 64) = v32;
  *(void *)(v25 + 72) = v24;
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_100FFA564(uint64_t a1)
{
  return sub_100FFA598(a1, (uint64_t)&unk_1011C27C8, (void (*)(uint64_t))sub_100E7D904);
}

uint64_t sub_100FFA598(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  Swift::String v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  uint64_t v9 = swift_release();
  a3(v9);
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v10 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_10117E810;
  *(void *)(v11 + 32) = v10;
  uint64_t v12 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100FFA738(uint64_t a1)
{
  uint64_t v77 = sub_1005057FC(&qword_1016A6908);
  uint64_t v81 = *(void *)(v77 - 8);
  __chkstk_darwin(v77, v2);
  uint64_t v4 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_1016A6910);
  __chkstk_darwin(v5, v6);
  unint64_t v7 = sub_1009E9E30();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._countAndFlagsBits = 543450177;
  v8._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  uint64_t v80 = sub_101008D5C(&qword_1016A6900, (void (*)(uint64_t))&type metadata accessor for URL);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0x20796D206F7420;
  v9._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  uint64_t v79 = sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0x7361766E616320;
  v10._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v75 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v81 + 8);
  v81 += 8;
  unint64_t v78 = v11;
  uint64_t v12 = v77;
  v11(v4, v77);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 543450177;
  v13._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0x6F74206B6E696C20;
  v14._object = (void *)0xEC00000020796D20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0x7361766E616320;
  v15._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v74 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v78(v4, v12);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._countAndFlagsBits = 543450177;
  v16._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  uint64_t v76 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._object = (void *)0x800000010129D5C0;
  v17._countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0x6472616F6220;
  v18._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v73 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v19 = v78;
  v78(v4, v77);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._countAndFlagsBits = 543450177;
  v20._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 0xD000000000000012;
  v21._object = (void *)0x800000010129D5E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._countAndFlagsBits = 0x6472616F6220;
  v22._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  uint64_t v65 = v4;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v72 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v23 = v77;
  v19(v4, v77);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v24._countAndFlagsBits = 0x20747265736E49;
  v24._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v25._countAndFlagsBits = 544175136;
  v25._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v26._countAndFlagsBits = 0x6472616F6220;
  v26._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  uint64_t v27 = v65;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v64 = v7;
  uint64_t v71 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v28 = v78;
  v78(v27, v23);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v29._countAndFlagsBits = 0x20747265736E49;
  v29._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v30._countAndFlagsBits = 0x20796D206F7420;
  v30._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v31._countAndFlagsBits = 0x6472616F6220;
  v31._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v70 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  unint64_t v32 = v27;
  uint64_t v33 = v27;
  uint64_t v34 = v77;
  v28(v32, v77);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v35._countAndFlagsBits = 0x20747265736E49;
  v35._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v36._countAndFlagsBits = 0x20796D206F7420;
  v36._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v37._countAndFlagsBits = 0x7361766E616320;
  v37._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v69 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v78(v33, v34);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v38._countAndFlagsBits = 0x20747265736E49;
  v38._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v39._countAndFlagsBits = 0x206F74206C727520;
  v39._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v40._countAndFlagsBits = 0x6472616F6220;
  v40._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v40);
  uint64_t v41 = v33;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v68 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v42 = v33;
  uint64_t v43 = v77;
  v78(v42, v77);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v44._countAndFlagsBits = 0x20747265736E49;
  v44._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v44);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v45._countAndFlagsBits = 0x6F74206B6E696C20;
  v45._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v45);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v46._countAndFlagsBits = 0x6472616F6220;
  v46._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v67 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v78(v41, v43);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v47._countAndFlagsBits = 544503120;
  v47._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v47);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v48._countAndFlagsBits = 0x20656874206E6920;
  v48._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v48);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v49._countAndFlagsBits = 0x6472616F6220;
  v49._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v49);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v66 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v50 = v77;
  uint64_t v51 = v78;
  v78(v41, v77);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v52._countAndFlagsBits = 0x696C206120747550;
  v52._object = (void *)0xEE00206F74206B6ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v53._countAndFlagsBits = 0x20656874206E6920;
  v53._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v53);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v54._countAndFlagsBits = 0x6472616F6220;
  v54._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v54);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v55 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v51(v41, v50);
  sub_1005057FC(&qword_1016A6918);
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_1011ABAA0;
  uint64_t v57 = v74;
  *(void *)(v56 + 32) = v75;
  *(void *)(v56 + 40) = v57;
  uint64_t v58 = v72;
  *(void *)(v56 + 48) = v73;
  *(void *)(v56 + 56) = v58;
  uint64_t v59 = v70;
  *(void *)(v56 + 64) = v71;
  *(void *)(v56 + 72) = v59;
  uint64_t v60 = v68;
  *(void *)(v56 + 80) = v69;
  *(void *)(v56 + 88) = v60;
  uint64_t v61 = v66;
  *(void *)(v56 + 96) = v67;
  *(void *)(v56 + 104) = v61;
  *(void *)(v56 + 112) = v55;
  uint64_t v62 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v62;
}

uint64_t sub_100FFB6F4()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1009E9E30();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v4, v0);
  swift_getKeyPath();
  sub_101008D5C(&qword_1016A6900, (void (*)(uint64_t))&type metadata accessor for URL);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v6(v4, v0);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10117D8C0;
  *(void *)(v8 + 32) = v5;
  *(void *)(v8 + 40) = v7;
  uint64_t v9 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100FFB93C()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1005057FC(&qword_1016A67C0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117E800;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100FFBA38(uint64_t a1)
{
  uint64_t v59 = a1;
  uint64_t v58 = sub_1005057FC(&qword_1016A68E8);
  uint64_t v62 = *(void *)(v58 - 8);
  __chkstk_darwin(v58, v1);
  uint64_t v3 = (char *)v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_1016A68F0);
  __chkstk_darwin(v9, v10);
  unint64_t v11 = sub_1005F62D0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 0x20747265736E49;
  v12._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  unint64_t v61 = sub_101008BC4();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0x796D206F746E6920;
  v13._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v4);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v14._countAndFlagsBits = 32;
  v14._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  uint64_t v60 = sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v17 = *(void (**)(char *, uint64_t))(v62 + 8);
  uint64_t v56 = v16;
  uint64_t v57 = v17;
  v62 += 8;
  uint64_t v18 = v58;
  v17(v3, v58);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v19._countAndFlagsBits = 0x20747265736E49;
  v19._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v20._countAndFlagsBits = 0x796D206F746E6920;
  v20._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 0x6472616F6220;
  v21._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v55 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v22 = v18;
  uint64_t v23 = v57;
  v57(v3, v22);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v24._countAndFlagsBits = 543450177;
  v24._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v25._countAndFlagsBits = 0x20796D206F7420;
  v25._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v26._countAndFlagsBits = 0x6472616F6220;
  v26._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  v50[1] = v11;
  uint64_t v54 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v27 = v58;
  v23(v3, v58);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v28._countAndFlagsBits = 0x20747265736E49;
  v28._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v29._object = (void *)0x800000010129D560;
  v29._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v53 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v31 = v57;
  v57(v3, v27);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v32._countAndFlagsBits = 544503120;
  v32._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v33._countAndFlagsBits = 544108320;
  v33._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v34._countAndFlagsBits = 0x6472616F6220;
  v34._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v52 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v35 = v58;
  v31(v3, v58);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v36._countAndFlagsBits = 0x206563616C50;
  v36._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v37._countAndFlagsBits = 0x20796D206E6F20;
  v37._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v38._countAndFlagsBits = 0x6472616F6220;
  v38._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v51 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v39 = v57;
  v57(v3, v35);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v40._countAndFlagsBits = 0x20686361747441;
  v40._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v40);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v41._countAndFlagsBits = 0x20796D206E6F20;
  v41._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v42._countAndFlagsBits = 0x6472616F6220;
  v42._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v42);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v43 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v39(v3, v35);
  sub_1005057FC(&qword_1016A68F8);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_1011807B0;
  uint64_t v45 = v55;
  *(void *)(v44 + 32) = v56;
  *(void *)(v44 + 40) = v45;
  uint64_t v46 = v53;
  *(void *)(v44 + 48) = v54;
  *(void *)(v44 + 56) = v46;
  uint64_t v47 = v51;
  *(void *)(v44 + 64) = v52;
  *(void *)(v44 + 72) = v47;
  *(void *)(v44 + 80) = v43;
  uint64_t v48 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v48;
}

uint64_t sub_100FFC574()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_101008BC4();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1005F62D0();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v4, v0);
  swift_getKeyPath();
  sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v6(v4, v0);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10117D8C0;
  *(void *)(v8 + 32) = v5;
  *(void *)(v8 + 40) = v7;
  uint64_t v9 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100FFC78C()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v7 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1005057FC(&qword_1016A67C0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1011ABAB0;
  *(void *)(v8 + 32) = v0;
  *(void *)(v8 + 40) = v1;
  *(void *)(v8 + 48) = v2;
  *(void *)(v8 + 56) = v3;
  *(void *)(v8 + 64) = v4;
  *(void *)(v8 + 72) = v5;
  *(void *)(v8 + 80) = v6;
  *(void *)(v8 + 88) = v7;
  uint64_t v9 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100FFC918(uint64_t a1)
{
  uint64_t v75 = a1;
  uint64_t v1 = sub_1005057FC(&qword_1016A68D0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v80 = v1;
  uint64_t v81 = v2;
  __chkstk_darwin(v1, v3);
  uint64_t v79 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_1016A68D8);
  __chkstk_darwin(v10, v11);
  unint64_t v12 = sub_10075BABC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._object = (void *)0x800000010129D420;
  uint64_t v72 = (void *)0x800000010129D420;
  v13._countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  unint64_t v76 = sub_101008BC4();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0x796D206F746E6920;
  v14._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  LODWORD(v71) = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  uint64_t v70 = *(void (**)(char *))(v6 + 104);
  uint64_t v67 = v5;
  v70(v9);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  Swift::String v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v68 = v6 + 8;
  uint64_t v69 = v15;
  v15(v9, v5);
  v16._countAndFlagsBits = 0x206472616F6220;
  v16._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  uint64_t v77 = sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  uint64_t v18 = v79;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v74 = v12;
  uint64_t v73 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  unint64_t v78 = *(void (**)(char *, uint64_t))(v81 + 8);
  v81 += 8;
  v78(v18, v80);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v19._countAndFlagsBits = 0xD000000000000011;
  v19._object = v72;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v20._countAndFlagsBits = 0x796D206F746E6920;
  v20._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  uint64_t v21 = v67;
  ((void (*)(char *, void, uint64_t))v70)(v9, v71, v67);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v69(v9, v21);
  v22._countAndFlagsBits = 0x63206472616F6220;
  v22._object = (void *)0xEE002064656C6C61;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  Swift::String v24 = v79;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v72 = (void *)static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v25 = v80;
  v78(v24, v80);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v26._countAndFlagsBits = 0x7020747265736E49;
  v26._object = (void *)0xEE0020736F746F68;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v27._countAndFlagsBits = 0x796D206F746E6920;
  v27._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v28._countAndFlagsBits = 0x6472616F6220;
  v28._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  Swift::String v29 = v79;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v71 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v30 = v25;
  Swift::String v31 = v78;
  v78(v29, v30);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v32._countAndFlagsBits = 0x7020796D20646441;
  v32._object = (void *)0xEE0020736F746F68;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v33._countAndFlagsBits = 0x20796D206F7420;
  v33._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v34._countAndFlagsBits = 0x6472616F6220;
  v34._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  uint64_t v35 = v79;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v70 = (void (*)(char *))static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v31(v35, v80);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v36._countAndFlagsBits = 0x746F687020646441;
  v36._object = (void *)0xEB0000000020736FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v37._countAndFlagsBits = 544175136;
  v37._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v38._countAndFlagsBits = 0x6472616F6220;
  v38._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v69 = (void (*)(char *, uint64_t))static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v39 = v35;
  uint64_t v40 = v80;
  v78(v39, v80);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v41._countAndFlagsBits = 543450177;
  v41._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v42._countAndFlagsBits = 544175136;
  v42._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v42);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v43._countAndFlagsBits = 0x6472616F6220;
  v43._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v43);
  uint64_t v44 = v79;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v68 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v45 = v78;
  v78(v44, v40);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v46._countAndFlagsBits = 544503120;
  v46._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v47._countAndFlagsBits = 544108320;
  v47._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v47);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v48._countAndFlagsBits = 0x6472616F6220;
  v48._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v48);
  Swift::String v49 = v79;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v67 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v50 = v80;
  v45(v49, v80);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v51._countAndFlagsBits = 0xD000000000000022;
  v51._object = (void *)0x800000010129D440;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v51);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v52._countAndFlagsBits = 0x20796D206E6F20;
  v52._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v53._countAndFlagsBits = 0x6472616F6220;
  v53._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v53);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v66 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v54 = v78;
  v78(v49, v50);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v55._countAndFlagsBits = 0x20686361747441;
  v55._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v55);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v56._countAndFlagsBits = 0x20796D206F7420;
  v56._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v56);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v57._countAndFlagsBits = 0x6472616F6220;
  v57._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v57);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v58 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v54(v49, v80);
  sub_1005057FC(&qword_1016A68E0);
  uint64_t v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = xmmword_1011A8170;
  uint64_t v60 = v72;
  *(void *)(v59 + 32) = v73;
  *(void *)(v59 + 40) = v60;
  unint64_t v61 = v70;
  *(void *)(v59 + 48) = v71;
  *(void *)(v59 + 56) = v61;
  uint64_t v62 = v68;
  *(void *)(v59 + 64) = v69;
  *(void *)(v59 + 72) = v62;
  uint64_t v63 = v66;
  *(void *)(v59 + 80) = v67;
  *(void *)(v59 + 88) = v63;
  *(void *)(v59 + 96) = v58;
  uint64_t v64 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v64;
}

uint64_t sub_100FFD794()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_101008BC4();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_10075BABC();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v4, v0);
  swift_getKeyPath();
  sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v6(v4, v0);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10117D8C0;
  *(void *)(v8 + 32) = v5;
  *(void *)(v8 + 40) = v7;
  uint64_t v9 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100FFD9AC()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v7 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1005057FC(&qword_1016A67C0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1011ABAB0;
  *(void *)(v8 + 32) = v0;
  *(void *)(v8 + 40) = v1;
  *(void *)(v8 + 48) = v2;
  *(void *)(v8 + 56) = v3;
  *(void *)(v8 + 64) = v4;
  *(void *)(v8 + 72) = v5;
  *(void *)(v8 + 80) = v6;
  *(void *)(v8 + 88) = v7;
  uint64_t v9 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100FFDB40()
{
  uint64_t v0 = sub_1005057FC(&qword_1016A68A0);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v37 = v0;
  uint64_t v38 = v1;
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_1016A68A8);
  __chkstk_darwin(v5, v6);
  unint64_t v35 = sub_1006D8EC4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._countAndFlagsBits = 0x206120646441;
  v7._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  unint64_t v34 = sub_1006D82C4();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0x6E6961746E6F6320;
  v8._object = (void *)0xEC00000020676E69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  v30[1] = sub_1006D8E20();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0x20796D206F7420;
  v9._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  uint64_t v33 = sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0x6472616F6220;
  v10._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v11 = v37;
  unint64_t v12 = *(void (**)(char *, uint64_t))(v38 + 8);
  v38 += 8;
  Swift::String v36 = v12;
  v12(v4, v37);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0x20747265736E49;
  v13._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0x2061206E6920;
  v14._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 544108320;
  v15._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._countAndFlagsBits = 0x6472616F6220;
  v16._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v36(v4, v11);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._countAndFlagsBits = 0x6120746E61772049;
  v17._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0xD000000000000012;
  v18._object = (void *)0x800000010129D370;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._countAndFlagsBits = 0x20796D206E6F20;
  v19._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v20._countAndFlagsBits = 0x7361766E616320;
  v20._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  v30[0] = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v36(v4, v37);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v21._object = (void *)0x800000010129D390;
  v21._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._countAndFlagsBits = 0x2061206E6920;
  v22._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v23._countAndFlagsBits = 0x20656874206F7420;
  v23._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v24._countAndFlagsBits = 0x6472616F6220;
  v24._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v36(v4, v37);
  sub_1005057FC(&qword_1016A68B0);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_10117E800;
  uint64_t v27 = v31;
  *(void *)(v26 + 32) = v32;
  *(void *)(v26 + 40) = v27;
  *(void *)(v26 + 48) = v30[0];
  *(void *)(v26 + 56) = v25;
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_100FFE378()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1006D82C4();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1006D8EC4();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v4, v0);
  swift_getKeyPath();
  sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v6(v4, v0);
  swift_getKeyPath();
  sub_1006D8E20();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v6(v4, v0);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10117DF40;
  *(void *)(v9 + 32) = v5;
  *(void *)(v9 + 40) = v7;
  *(void *)(v9 + 48) = v8;
  uint64_t v10 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100FFE614()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1005057FC(&qword_1016A67C0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1011807B0;
  *(void *)(v7 + 32) = v0;
  *(void *)(v7 + 40) = v1;
  *(void *)(v7 + 48) = v2;
  *(void *)(v7 + 56) = v3;
  *(void *)(v7 + 64) = v4;
  *(void *)(v7 + 72) = v5;
  *(void *)(v7 + 80) = v6;
  uint64_t v8 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_100FFE790(uint64_t a1)
{
  uint64_t v53 = sub_1005057FC(&qword_1016A68A0);
  uint64_t v57 = *(void *)(v53 - 8);
  __chkstk_darwin(v53, v2);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_1016A68A8);
  __chkstk_darwin(v5, v6);
  unint64_t v7 = sub_1006D8EC4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._countAndFlagsBits = 0x206120646441;
  v8._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  unint64_t v54 = sub_1006D82C4();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0x20796D206F7420;
  v9._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  uint64_t v56 = sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0x6472616F6220;
  v10._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v57 + 8);
  v57 += 8;
  Swift::String v55 = v11;
  uint64_t v12 = v53;
  v11(v4, v53);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0x6120747265736E49;
  v13._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 544108320;
  v14._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0x6472616F6220;
  v15._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v55(v4, v12);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._countAndFlagsBits = 0x206120747550;
  v16._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  uint64_t v52 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0x6F20657061687320;
  v17._object = (void *)0xED000020796D206ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0x6472616F6220;
  v18._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v44 = v7;
  uint64_t v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v19 = v53;
  Swift::String v20 = v55;
  v55(v4, v53);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v21._countAndFlagsBits = 0x2061206563616C50;
  v21._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._countAndFlagsBits = 0x20796D206E6F20;
  v22._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v23._countAndFlagsBits = 0x6472616F6220;
  v23._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  Swift::String v51 = v4;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v20(v4, v19);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v24._countAndFlagsBits = 0x6120746E61772049;
  v24._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v25._countAndFlagsBits = 0x6F20657061687320;
  v25._object = (void *)0xED000020796D206ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v26._countAndFlagsBits = 0x6472616F6220;
  v26._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  uint64_t v27 = v51;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v46 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v28 = v53;
  v55(v27, v53);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v29._countAndFlagsBits = 0x6120746E61772049;
  v29._object = (void *)0xED00002077656E20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v30._countAndFlagsBits = 0x6F20657061687320;
  v30._object = (void *)0xED000020796D206ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v31._countAndFlagsBits = 0x6472616F6220;
  v31._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  uint64_t v32 = v51;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v45 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v33 = v55;
  v55(v32, v28);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v34._countAndFlagsBits = 0x6120686361747441;
  v34._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v35._countAndFlagsBits = 0x7420657061687320;
  v35._object = (void *)0xEE0020656874206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v36._countAndFlagsBits = 0x6472616F6220;
  v36._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v37 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v33(v32, v53);
  sub_1005057FC(&qword_1016A68B0);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1011807B0;
  uint64_t v39 = v49;
  *(void *)(v38 + 32) = v50;
  *(void *)(v38 + 40) = v39;
  uint64_t v40 = v47;
  *(void *)(v38 + 48) = v48;
  *(void *)(v38 + 56) = v40;
  uint64_t v41 = v45;
  *(void *)(v38 + 64) = v46;
  *(void *)(v38 + 72) = v41;
  *(void *)(v38 + 80) = v37;
  uint64_t v42 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v42;
}

uint64_t sub_100FFF24C()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1006D82C4();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1006D8EC4();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v4, v0);
  swift_getKeyPath();
  sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v6(v4, v0);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10117D8C0;
  *(void *)(v8 + 32) = v5;
  *(void *)(v8 + 40) = v7;
  uint64_t v9 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100FFF464()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1005057FC(&qword_1016A67C0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_101186E40;
  *(void *)(v6 + 32) = v0;
  *(void *)(v6 + 40) = v1;
  *(void *)(v6 + 48) = v2;
  *(void *)(v6 + 56) = v3;
  *(void *)(v6 + 64) = v4;
  *(void *)(v6 + 72) = v5;
  uint64_t v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_100FFF574(uint64_t a1)
{
  uint64_t v59 = a1;
  uint64_t v1 = sub_1005057FC(&qword_1016A6888);
  uint64_t v56 = *(void *)(v1 - 8);
  uint64_t v57 = v1;
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_1016A6890);
  __chkstk_darwin(v5, v6);
  type metadata accessor for CRLChangeSelectionColorIntent();
  sub_101008D5C(&qword_1016A3028, (void (*)(uint64_t))type metadata accessor for CRLChangeSelectionColorIntent);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._object = (void *)0x800000010129D1F0;
  v7._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  unint64_t v55 = sub_100FCAC34();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  uint64_t v58 = v4;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v53 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v10 = v56 + 8;
  uint64_t v9 = *(void (**)(char *, uint64_t))(v56 + 8);
  uint64_t v11 = v4;
  uint64_t v12 = v57;
  v9(v11, v57);
  unint64_t v54 = v9;
  uint64_t v56 = v10;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0xD000000000000010;
  unint64_t v50 = 0xD000000000000010;
  v13._object = (void *)0x800000010129D210;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  Swift::String v15 = v58;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v52 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v9(v15, v12);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._object = (void *)0x800000010129D230;
  v16._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  Swift::String v18 = v58;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v51 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v19 = v57;
  v54(v18, v57);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._object = (void *)0x800000010129D250;
  v20._countAndFlagsBits = v50;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  Swift::String v22 = v58;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v23 = v54;
  v54(v22, v19);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v24._countAndFlagsBits = 0xD000000000000013;
  v24._object = (void *)0x800000010129D270;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  Swift::String v26 = v58;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v23(v26, v57);
  uint64_t v27 = v23;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v28._countAndFlagsBits = 0xD000000000000014;
  v28._object = (void *)0x800000010129D290;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  Swift::String v30 = v58;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v31 = v57;
  v27(v30, v57);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v32._countAndFlagsBits = 0x742065676E616843;
  v32._object = (void *)0xEF206F7420736968;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  Swift::String v34 = v58;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v35 = v31;
  Swift::String v36 = v54;
  v54(v34, v35);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v37._object = (void *)0x800000010129D2B0;
  v37._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v36(v34, v57);
  sub_1005057FC(&qword_1016A6898);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1011ABAB0;
  uint64_t v41 = v52;
  *(void *)(v40 + 32) = v53;
  *(void *)(v40 + 40) = v41;
  unint64_t v42 = v50;
  *(void *)(v40 + 48) = v51;
  *(void *)(v40 + 56) = v42;
  uint64_t v43 = v48;
  *(void *)(v40 + 64) = v49;
  *(void *)(v40 + 72) = v43;
  *(void *)(v40 + 80) = v47;
  *(void *)(v40 + 88) = v39;
  uint64_t v44 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v44;
}

uint64_t sub_100FFFDE4()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_100FCAC34();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_101008D5C(&qword_1016A3028, (void (*)(uint64_t))type metadata accessor for CRLChangeSelectionColorIntent);
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10117E810;
  *(void *)(v6 + 32) = v5;
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_100FFFF7C()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v7 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1005057FC(&qword_1016A67C0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1011ABAB0;
  *(void *)(v8 + 32) = v0;
  *(void *)(v8 + 40) = v1;
  *(void *)(v8 + 48) = v2;
  *(void *)(v8 + 56) = v3;
  *(void *)(v8 + 64) = v4;
  *(void *)(v8 + 72) = v5;
  *(void *)(v8 + 80) = v6;
  *(void *)(v8 + 88) = v7;
  uint64_t v9 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1010000B8(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_1016A6888);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v63 = v2;
  uint64_t v64 = v3;
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_1016A6890);
  __chkstk_darwin(v7, v8);
  uint64_t v9 = type metadata accessor for CRLChangeSelectionColorIntent();
  uint64_t v10 = sub_101008D5C(&qword_1016A3028, (void (*)(uint64_t))type metadata accessor for CRLChangeSelectionColorIntent);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._object = (void *)0x800000010129D1F0;
  v11._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  unint64_t v60 = sub_100FCAC34();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 544108320;
  v12._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  uint64_t v61 = sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v56 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v14 = *(void (**)(char *, uint64_t))(v64 + 8);
  v64 += 8;
  uint64_t v62 = v14;
  v14(v6, v63);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._countAndFlagsBits = 0xD000000000000010;
  unint64_t v53 = 0xD000000000000010;
  v15._object = (void *)0x800000010129D210;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  uint64_t v58 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._countAndFlagsBits = 544108320;
  v16._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v59 = v9;
  uint64_t v55 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v62(v6, v63);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._object = (void *)0x800000010129D230;
  v18._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._countAndFlagsBits = 544108320;
  v19._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v57 = v10;
  uint64_t v54 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v21 = v63;
  v62(v6, v63);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v22._object = (void *)0x800000010129D250;
  v22._countAndFlagsBits = v53;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v23._countAndFlagsBits = 544108320;
  v23._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v53 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v25 = v62;
  v62(v6, v21);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v26._countAndFlagsBits = 0xD000000000000013;
  v26._object = (void *)0x800000010129D270;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v27._countAndFlagsBits = 544108320;
  v27._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v52 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v25(v6, v63);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v29._countAndFlagsBits = 0xD000000000000014;
  v29._object = (void *)0x800000010129D290;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v30._countAndFlagsBits = 544108320;
  v30._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  uint64_t v49 = v6;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v51 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v32 = v6;
  Swift::String v34 = v62;
  uint64_t v33 = v63;
  v62(v32, v63);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v35._countAndFlagsBits = 0x742065676E616843;
  v35._object = (void *)0xEF206F7420736968;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v36._countAndFlagsBits = 544108320;
  v36._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  Swift::String v38 = v49;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v34(v38, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v39._object = (void *)0x800000010129D2B0;
  v39._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v40._countAndFlagsBits = 544108320;
  v40._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v40);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v41._countAndFlagsBits = 0;
  v41._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v42 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v62(v38, v63);
  sub_1005057FC(&qword_1016A6898);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_1011ABAB0;
  uint64_t v44 = v55;
  *(void *)(v43 + 32) = v56;
  *(void *)(v43 + 40) = v44;
  unint64_t v45 = v53;
  *(void *)(v43 + 48) = v54;
  *(void *)(v43 + 56) = v45;
  uint64_t v46 = v51;
  *(void *)(v43 + 64) = v52;
  *(void *)(v43 + 72) = v46;
  *(void *)(v43 + 80) = v50;
  *(void *)(v43 + 88) = v42;
  uint64_t v47 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v47;
}

uint64_t sub_101000C34()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_100FCAC34();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_101008D5C(&qword_1016A3028, (void (*)(uint64_t))type metadata accessor for CRLChangeSelectionColorIntent);
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v4, v0);
  swift_getKeyPath();
  sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v6(v4, v0);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10117D8C0;
  *(void *)(v8 + 32) = v5;
  *(void *)(v8 + 40) = v7;
  uint64_t v9 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_101000E7C(uint64_t a1)
{
  uint64_t v47 = a1;
  uint64_t v1 = sub_1005057FC(&qword_1016A6870);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_1016A6878);
  __chkstk_darwin(v6, v7);
  uint64_t v8 = type metadata accessor for CRLChangeSelectionFontStyleIntent();
  sub_101008D5C(&qword_101695E20, (void (*)(uint64_t))type metadata accessor for CRLChangeSelectionFontStyleIntent);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0x7478657420746553;
  v9._object = (void *)0xEC000000206F7420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  unint64_t v46 = sub_100A28EC0();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v11 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v42 = v11;
  uint64_t v43 = v12;
  uint64_t v45 = v1;
  v12(v5, v1);
  uint64_t v44 = v2 + 8;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0x78657420656B614DLL;
  v13._object = (void *)0xEA00000000002074;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v36 = v8;
  uint64_t v41 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v15 = v43;
  v43(v5, v1);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._countAndFlagsBits = 0x6E6F6620656B614DLL;
  v16._object = (void *)0xEA00000000002074;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v40 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v15(v5, v45);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._countAndFlagsBits = 0x20796C707041;
  v18._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v20 = v45;
  uint64_t v21 = v43;
  v43(v5, v45);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v23._countAndFlagsBits = 0x7478657420;
  v23._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v38 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v21(v5, v20);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v24._countAndFlagsBits = 0x2065766F6D6552;
  v24._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v37 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v26 = v43;
  v43(v5, v45);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v27._countAndFlagsBits = 0x206574656C6544;
  v27._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v26(v5, v45);
  sub_1005057FC(&qword_1016A6880);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1011807B0;
  uint64_t v31 = v41;
  *(void *)(v30 + 32) = v42;
  *(void *)(v30 + 40) = v31;
  uint64_t v32 = v39;
  *(void *)(v30 + 48) = v40;
  *(void *)(v30 + 56) = v32;
  uint64_t v33 = v37;
  *(void *)(v30 + 64) = v38;
  *(void *)(v30 + 72) = v33;
  *(void *)(v30 + 80) = v29;
  uint64_t v34 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1010015E4()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_100A28EC0();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_101008D5C(&qword_101695E20, (void (*)(uint64_t))type metadata accessor for CRLChangeSelectionFontStyleIntent);
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10117E810;
  *(void *)(v6 + 32) = v5;
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_101001780()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1005057FC(&qword_1016A67C0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117E800;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_101001864(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_1016A6870);
  uint64_t v61 = *(void *)(v2 - 8);
  uint64_t v62 = v2;
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_1016A6878);
  __chkstk_darwin(v6, v7);
  uint64_t v8 = type metadata accessor for CRLChangeSelectionFontStyleIntent();
  uint64_t v9 = sub_101008D5C(&qword_101695E20, (void (*)(uint64_t))type metadata accessor for CRLChangeSelectionFontStyleIntent);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0x7478657420746553;
  v10._object = (void *)0xEC000000206F7420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  unint64_t v56 = sub_100A28EC0();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 544108320;
  v11._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  uint64_t v59 = sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  uint64_t v58 = v5;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v54 = v8;
  uint64_t v53 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v13 = v62;
  unint64_t v60 = *(void (**)(char *, uint64_t))(v61 + 8);
  v61 += 8;
  v60(v5, v62);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0x78657420656B614DLL;
  v14._object = (void *)0xEA00000000002074;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  uint64_t v57 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 544108320;
  v15._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  Swift::String v17 = v58;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v55 = v9;
  uint64_t v52 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v18 = v13;
  Swift::String v19 = v60;
  v60(v17, v18);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._countAndFlagsBits = 0x6E6F6620656B614DLL;
  v20._object = (void *)0xEA00000000002074;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 544108320;
  v21._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  Swift::String v23 = v58;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v51 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v19(v23, v62);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v24._countAndFlagsBits = 0x20796C707041;
  v24._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v25._countAndFlagsBits = 544108320;
  v25._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v60(v23, v62);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v28._countAndFlagsBits = 0x6E6F207478657420;
  v28._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  uint64_t v30 = v58;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v31 = v62;
  uint64_t v32 = v60;
  v60(v30, v62);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v33._countAndFlagsBits = 0x2065766F6D6552;
  v33._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v34._countAndFlagsBits = 544108320;
  v34._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  uint64_t v36 = v58;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v32(v36, v31);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v37._countAndFlagsBits = 0x206574656C6544;
  v37._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v38._countAndFlagsBits = 544108320;
  v38._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v39._countAndFlagsBits = 0;
  v39._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v40 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v60(v36, v62);
  sub_1005057FC(&qword_1016A6880);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_1011807B0;
  uint64_t v42 = v52;
  *(void *)(v41 + 32) = v53;
  *(void *)(v41 + 40) = v42;
  uint64_t v43 = v50;
  *(void *)(v41 + 48) = v51;
  *(void *)(v41 + 56) = v43;
  uint64_t v44 = v48;
  *(void *)(v41 + 64) = v49;
  *(void *)(v41 + 72) = v44;
  *(void *)(v41 + 80) = v40;
  uint64_t v45 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v45;
}

uint64_t sub_10100229C()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_100A28EC0();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_101008D5C(&qword_101695E20, (void (*)(uint64_t))type metadata accessor for CRLChangeSelectionFontStyleIntent);
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v4, v0);
  swift_getKeyPath();
  sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v6(v4, v0);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10117D8C0;
  *(void *)(v8 + 32) = v5;
  *(void *)(v8 + 40) = v7;
  uint64_t v9 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1010024E4(uint64_t a1)
{
  v17[1] = a1;
  uint64_t v19 = sub_1005057FC(&qword_1016A6858);
  uint64_t v1 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v2);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_1016A6868);
  __chkstk_darwin(v5, v6);
  sub_100566B70();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  sub_1008115D0();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0x697320746E6F6620;
  v8._object = (void *)0xEA0000000000657ALL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v10 = v19;
  v9(v4, v19);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0x7478657420;
  v12._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v9(v4, v10);
  sub_1005057FC(&qword_1016A6860);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10117D8C0;
  *(void *)(v14 + 32) = v18;
  *(void *)(v14 + 40) = v13;
  uint64_t v15 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_101002804()
{
  uint64_t v0 = sub_1005057FC(&qword_1016A6858);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100566B70();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v4, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v6(v4, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v6(v4, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v6(v4, v0);
  sub_1005057FC(&qword_1016A6860);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10117E800;
  *(void *)(v10 + 32) = v5;
  *(void *)(v10 + 40) = v7;
  *(void *)(v10 + 48) = v8;
  *(void *)(v10 + 56) = v9;
  uint64_t v11 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_101002A60(uint64_t a1)
{
  return sub_101002C80(a1, 0);
}

uint64_t sub_101002A68()
{
  uint64_t v0 = sub_1005057FC(&qword_1016A6858);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100566B70();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v4, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v6(v4, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v6(v4, v0);
  sub_1005057FC(&qword_1016A6860);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10117DF40;
  *(void *)(v9 + 32) = v5;
  *(void *)(v9 + 40) = v7;
  *(void *)(v9 + 48) = v8;
  uint64_t v10 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_101002C78(uint64_t a1)
{
  return sub_101002C80(a1, 1);
}

uint64_t sub_101002C80(uint64_t a1, char a2)
{
  uint64_t v3 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12[15] = a2;
  swift_getKeyPath();
  sub_1008115D0();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100566B70();
  sub_100568934();
  _AssistantIntent.Value.init<A, B>(_:for:)();
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10117E810;
  *(void *)(v9 + 32) = v8;
  uint64_t v10 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_101002DF0(uint64_t a1)
{
  uint64_t v25 = sub_1005057FC(&qword_1016A6840);
  uint64_t v27 = *(void *)(v25 - 8);
  __chkstk_darwin(v25, v2);
  uint64_t v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_1016A6850);
  __chkstk_darwin(v5, v6);
  sub_1005681D8();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._object = (void *)0x800000010129CFE0;
  v7._countAndFlagsBits = 0xD000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  sub_101008D5C(&qword_1016A6838, (void (*)(uint64_t))&type metadata accessor for ResizeBehavior);
  v23[1] = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v23[0] = *(void *)(v27 + 8);
  uint64_t v26 = v9;
  v27 += 8;
  uint64_t v10 = v25;
  ((void (*)(char *, uint64_t))v23[0])(v4, v25);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0x78657420656B614DLL;
  v11._object = (void *)0xEA00000000002074;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v24 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v13 = v10;
  uint64_t v14 = v10;
  uint64_t v15 = (void (*)(char *, uint64_t))v23[0];
  ((void (*)(char *, uint64_t))v23[0])(v4, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._countAndFlagsBits = 0xD000000000000020;
  v16._object = (void *)0x800000010129D100;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v15(v4, v14);
  sub_1005057FC(&qword_1016A6848);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_10117DF40;
  uint64_t v20 = v24;
  *(void *)(v19 + 32) = v26;
  *(void *)(v19 + 40) = v20;
  *(void *)(v19 + 48) = v18;
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_101003234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v13 = __chkstk_darwin(v11, v12);
  uint64_t v15 = (char *)&v18 - v14;
  Swift::String v16 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16);
  v16((char *)&v18 - v14, a1, v6, v13);
  ((void (*)(char *, char *, uint64_t))v16)(v10, v15, v6);
  IntentParameter.wrappedValue.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v15, v6);
}

uint64_t sub_10100336C()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_101008D5C(&qword_1016A6838, (void (*)(uint64_t))&type metadata accessor for ResizeBehavior);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1005681D8();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10117E810;
  *(void *)(v6 + 32) = v5;
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_101003504()
{
  return sub_10100352C();
}

uint64_t sub_10100352C()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1005057FC(&qword_1016A67C0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10117D8C0;
  *(void *)(v2 + 32) = v0;
  *(void *)(v2 + 40) = v1;
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1010035B0()
{
  uint64_t v0 = sub_1005057FC(&qword_1016A6840);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005681D8();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v4, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v6(v4, v0);
  sub_1005057FC(&qword_1016A6848);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10117D8C0;
  *(void *)(v8 + 32) = v5;
  *(void *)(v8 + 40) = v7;
  uint64_t v9 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_101003764()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_101008D5C(&qword_1016A6838, (void (*)(uint64_t))&type metadata accessor for ResizeBehavior);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1005681D8();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10117E810;
  *(void *)(v6 + 32) = v5;
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1010038FC()
{
  return sub_101007550();
}

uint64_t sub_101003910()
{
  uint64_t v0 = sub_1005057FC(&qword_1016A6840);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005681D8();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v4, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v6(v4, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v6(v4, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v6(v4, v0);
  sub_1005057FC(&qword_1016A6848);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10117E800;
  *(void *)(v10 + 32) = v5;
  *(void *)(v10 + 40) = v7;
  *(void *)(v10 + 48) = v8;
  *(void *)(v10 + 56) = v9;
  uint64_t v11 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_101003B70()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_101008D5C(&qword_1016A6838, (void (*)(uint64_t))&type metadata accessor for ResizeBehavior);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1005681D8();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10117E810;
  *(void *)(v6 + 32) = v5;
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_101003D08()
{
  return sub_101007550();
}

uint64_t sub_101003D20(uint64_t a1)
{
  uint64_t v37 = a1;
  uint64_t v36 = sub_1005057FC(&qword_1016A6820);
  uint64_t v1 = *(void *)(v36 - 8);
  __chkstk_darwin(v36, v2);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_1016A6828);
  __chkstk_darwin(v5, v6);
  sub_100FD46AC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._countAndFlagsBits = 0xD000000000000013;
  v7._object = (void *)0x800000010129CFE0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  unint64_t v35 = sub_100F9ED34();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v10 = v1 + 8;
  uint64_t v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v11 = v36;
  v9(v4, v36);
  uint64_t v33 = v10;
  Swift::String v34 = v9;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._object = (void *)0x800000010129D000;
  v12._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v9(v4, v11);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0x20796C707041;
  v14._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0x697320746E6F6620;
  v15._object = (void *)0xEA0000000000657ALL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v34(v4, v36);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._object = (void *)0x800000010129D020;
  v16._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v18 = v36;
  uint64_t v19 = v34;
  v34(v4, v36);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._countAndFlagsBits = 0x746E6F6620746553;
  v20._object = (void *)0xEE0020657A697320;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v19(v4, v18);
  sub_1005057FC(&qword_1016A6830);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_10118E4B0;
  uint64_t v24 = v31;
  *(void *)(v23 + 32) = v32;
  *(void *)(v23 + 40) = v24;
  uint64_t v25 = v29;
  *(void *)(v23 + 48) = v30;
  *(void *)(v23 + 56) = v25;
  *(void *)(v23 + 64) = v22;
  uint64_t v26 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1010042EC()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_100F9ED34();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100FD46AC();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10117E810;
  *(void *)(v6 + 32) = v5;
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_101004454()
{
  uint64_t v12 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v7 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v8 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1005057FC(&qword_1016A67C0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_101192420;
  *(void *)(v9 + 32) = v12;
  *(void *)(v9 + 40) = v0;
  *(void *)(v9 + 48) = v1;
  *(void *)(v9 + 56) = v2;
  *(void *)(v9 + 64) = v3;
  *(void *)(v9 + 72) = v4;
  *(void *)(v9 + 80) = v5;
  *(void *)(v9 + 88) = v6;
  *(void *)(v9 + 96) = v7;
  *(void *)(v9 + 104) = v8;
  uint64_t v10 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_101004590()
{
  uint64_t v0 = sub_1005057FC(&qword_1016A6808);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  uint64_t v30 = v1;
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_1016A6810);
  __chkstk_darwin(v5, v6);
  sub_100D20154();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  unint64_t v27 = sub_100999050();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 544828704;
  v8._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  uint64_t v26 = sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0x6472616F6220;
  v9._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v10 = v29;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v30 + 8);
  v30 += 8;
  v24(v4, v29);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0x2065687420746553;
  v11._object = (void *)0xEE00206472616F62;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 32;
  v12._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v14 = v24;
  v24(v4, v10);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._countAndFlagsBits = 0x7420746E61772049;
  v15._object = (void *)0xEA0000000000206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._countAndFlagsBits = 544828704;
  v16._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0x6472616F6220;
  v17._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v14(v4, v29);
  sub_1005057FC(&qword_1016A6818);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_10117DF40;
  uint64_t v20 = v25;
  *(void *)(v19 + 32) = v28;
  *(void *)(v19 + 40) = v20;
  *(void *)(v19 + 48) = v18;
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_101004AD4(uint64_t a1)
{
  return sub_100FFA598(a1, (uint64_t)&unk_1011C2520, (void (*)(uint64_t))sub_100D20154);
}

uint64_t sub_101004B08()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v7 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1005057FC(&qword_1016A67C0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1011ABAB0;
  *(void *)(v8 + 32) = v0;
  *(void *)(v8 + 40) = v1;
  *(void *)(v8 + 48) = v2;
  *(void *)(v8 + 56) = v3;
  *(void *)(v8 + 64) = v4;
  *(void *)(v8 + 72) = v5;
  *(void *)(v8 + 80) = v6;
  *(void *)(v8 + 88) = v7;
  uint64_t v9 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_101004CAC()
{
  uint64_t v0 = sub_1005057FC(&qword_1016A6808);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v24 = v0;
  uint64_t v25 = v1;
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_1016A6810);
  __chkstk_darwin(v5, v6);
  sub_100D20154();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._countAndFlagsBits = 543450177;
  v7._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0x6F766166206F7420;
  v8._object = (void *)0xED00007365746972;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v9 = v24;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v25 + 8);
  v25 += 8;
  v21(v4, v24);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0x20656B614DLL;
  v10._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0x726F766166206120;
  v11._object = (void *)0xEB00000000657469;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v12 = v21;
  v21(v4, v9);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0x656874206B72614DLL;
  v13._object = (void *)0xEF206472616F6220;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0x6F76616620736120;
  v14._object = (void *)0xEC00000065746972;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v15 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v12(v4, v24);
  sub_1005057FC(&qword_1016A6818);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10117DF40;
  uint64_t v17 = v22;
  *(void *)(v16 + 32) = v23;
  *(void *)(v16 + 40) = v17;
  *(void *)(v16 + 48) = v15;
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_101005114(uint64_t a1)
{
  return sub_100FFA598(a1, (uint64_t)&unk_1011C2520, (void (*)(uint64_t))sub_100D20154);
}

uint64_t sub_101005148()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9[15] = 0;
  swift_getKeyPath();
  sub_100999050();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100D20154();
  sub_1009991F4();
  _AssistantIntent.Value.init<A, B>(_:for:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v4, v0);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10117E810;
  *(void *)(v6 + 32) = v5;
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1010052B0()
{
  uint64_t v0 = sub_1005057FC(&qword_1016A6808);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_1016A6810);
  __chkstk_darwin(v5, v6);
  sub_100D20154();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._countAndFlagsBits = 0x2065766F6D6552;
  v7._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0x6166206D6F726620;
  v8._object = (void *)0xEF73657469726F76;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  sub_1005057FC(&qword_1016A6818);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10117E810;
  *(void *)(v10 + 32) = v9;
  uint64_t v11 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_101005530()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9[15] = 1;
  swift_getKeyPath();
  sub_100999050();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100D20154();
  sub_1009991F4();
  _AssistantIntent.Value.init<A, B>(_:for:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v4, v0);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10117E810;
  *(void *)(v6 + 32) = v5;
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_10100569C()
{
  uint64_t v0 = sub_1005057FC(&qword_1016A67F0);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v23 = v0;
  uint64_t v24 = v1;
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_1016A67F8);
  __chkstk_darwin(v5, v6);
  sub_1009B6050();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  unint64_t v21 = sub_100B3F8DC();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._object = (void *)0x800000010129CFA0;
  v8._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v10 = v23;
  uint64_t v11 = *(void (**)(char *, uint64_t))(v24 + 8);
  v24 += 8;
  uint64_t v20 = v11;
  v11(v4, v23);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0xD00000000000001CLL;
  v13._object = (void *)0x800000010129CFC0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v15 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v20(v4, v10);
  sub_1005057FC(&qword_1016A6800);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10117D8C0;
  *(void *)(v16 + 32) = v22;
  *(void *)(v16 + 40) = v15;
  uint64_t v17 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_101005AA4(uint64_t a1)
{
  return sub_100FFA598(a1, (uint64_t)&unk_1011C24D0, (void (*)(uint64_t))sub_1009B6050);
}

uint64_t sub_101005AD8(uint64_t a1)
{
  v17[1] = a1;
  uint64_t v19 = sub_1005057FC(&qword_1016A67F0);
  uint64_t v1 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v2);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_1016A67F8);
  __chkstk_darwin(v5, v6);
  sub_1009B6050();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._object = (void *)0x800000010129CF50;
  v7._countAndFlagsBits = 0xD00000000000001CLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v10 = v19;
  v9(v4, v19);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0xD000000000000020;
  v11._object = (void *)0x800000010129CF70;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v9(v4, v10);
  sub_1005057FC(&qword_1016A6800);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10117D8C0;
  *(void *)(v14 + 32) = v18;
  *(void *)(v14 + 40) = v13;
  uint64_t v15 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_101005E30()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9[15] = 0;
  swift_getKeyPath();
  sub_100B3F8DC();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1009B6050();
  sub_1006C2A4C();
  _AssistantIntent.Value.init<A, B>(_:for:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v4, v0);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10117E810;
  *(void *)(v6 + 32) = v5;
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_101005F98(uint64_t a1)
{
  v17[1] = a1;
  uint64_t v19 = sub_1005057FC(&qword_1016A67F0);
  uint64_t v1 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v2);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_1016A67F8);
  __chkstk_darwin(v5, v6);
  sub_1009B6050();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._object = (void *)0x800000010129CEF0;
  v7._countAndFlagsBits = 0xD000000000000026;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v10 = v19;
  v9(v4, v19);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0xD000000000000028;
  v11._object = (void *)0x800000010129CF20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v9(v4, v10);
  sub_1005057FC(&qword_1016A6800);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10117D8C0;
  *(void *)(v14 + 32) = v18;
  *(void *)(v14 + 40) = v13;
  uint64_t v15 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1010062F0()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9[15] = 1;
  swift_getKeyPath();
  sub_100B3F8DC();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1009B6050();
  sub_1006C2A4C();
  _AssistantIntent.Value.init<A, B>(_:for:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v4, v0);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10117E810;
  *(void *)(v6 + 32) = v5;
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_10100645C()
{
  uint64_t v26 = sub_1005057FC(&qword_1016A67D8);
  uint64_t v28 = *(void *)(v26 - 8);
  __chkstk_darwin(v26, v0);
  uint64_t v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1005057FC(&qword_1016A67E0);
  __chkstk_darwin(v3, v4);
  sub_1006C2AA0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  unint64_t v23 = sub_100B3F8DC();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._object = (void *)0x800000010129CEA0;
  v6._countAndFlagsBits = 0xD000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  swift_getKeyPath();
  uint64_t v27 = sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v28 + 8);
  v28 += 8;
  uint64_t v8 = v26;
  v22(v2, v26);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0x6E6F2073746F6420;
  v10._object = (void *)0xEF206472616F6220;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v24 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v12 = v22;
  v22(v2, v8);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0xD000000000000021;
  v14._object = (void *)0x800000010129CEC0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v12(v2, v26);
  sub_1005057FC(&qword_1016A67E8);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_10117DF40;
  uint64_t v18 = v24;
  *(void *)(v17 + 32) = v25;
  *(void *)(v17 + 40) = v18;
  *(void *)(v17 + 48) = v16;
  uint64_t v19 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1010069A4(uint64_t a1)
{
  return sub_100FFA598(a1, (uint64_t)&unk_1011C2480, (void (*)(uint64_t))sub_1006C2AA0);
}

uint64_t sub_1010069D8(uint64_t a1)
{
  uint64_t v23 = sub_1005057FC(&qword_1016A67D8);
  uint64_t v25 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v2);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_1016A67E0);
  __chkstk_darwin(v5, v6);
  sub_1006C2AA0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._object = (void *)0x800000010129CE30;
  v7._countAndFlagsBits = 0xD000000000000017;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  v21[1] = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v21[0] = *(void *)(v25 + 8);
  uint64_t v24 = v9;
  v25 += 8;
  uint64_t v10 = v23;
  ((void (*)(char *, uint64_t))v21[0])(v4, v23);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0xD000000000000024;
  v11._object = (void *)0x800000010129CE50;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0x6E6961676120;
  v12._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v13 = (void (*)(char *, uint64_t))v21[0];
  ((void (*)(char *, uint64_t))v21[0])(v4, v10);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0xD00000000000001ELL;
  v14._object = (void *)0x800000010129CE80;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v13(v4, v10);
  sub_1005057FC(&qword_1016A67E8);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_10117DF40;
  uint64_t v18 = v22;
  *(void *)(v17 + 32) = v24;
  *(void *)(v17 + 40) = v18;
  *(void *)(v17 + 48) = v16;
  uint64_t v19 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_101006E24()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9[15] = 0;
  swift_getKeyPath();
  sub_100B3F8DC();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1006C2AA0();
  sub_1006C2A4C();
  _AssistantIntent.Value.init<A, B>(_:for:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v4, v0);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10117E810;
  *(void *)(v6 + 32) = v5;
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_101006F8C()
{
  uint64_t v0 = sub_1005057FC(&qword_1016A67D8);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v24 = v0;
  uint64_t v25 = v1;
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_1016A67E0);
  __chkstk_darwin(v5, v6);
  sub_1006C2AA0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._countAndFlagsBits = 0xD000000000000021;
  v7._object = (void *)0x800000010129CDB0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  sub_101008D5C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v9 = v24;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v25 + 8);
  v25 += 8;
  v21(v4, v24);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0xD000000000000020;
  v10._object = (void *)0x800000010129CDE0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v12 = v21;
  v21(v4, v9);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._object = (void *)0x800000010129CE10;
  v13._countAndFlagsBits = 0xD00000000000001ALL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v15 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v12(v4, v24);
  sub_1005057FC(&qword_1016A67E8);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10117DF40;
  uint64_t v17 = v22;
  *(void *)(v16 + 32) = v23;
  *(void *)(v16 + 40) = v17;
  *(void *)(v16 + 48) = v15;
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1010073C8()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9[15] = 1;
  swift_getKeyPath();
  sub_100B3F8DC();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1006C2AA0();
  sub_1006C2A4C();
  _AssistantIntent.Value.init<A, B>(_:for:)();
  uint64_t v5 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v4, v0);
  sub_1005057FC(&qword_1016A67D0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10117E810;
  *(void *)(v6 + 32) = v5;
  uint64_t v7 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_101007534()
{
  return sub_101007550();
}

uint64_t sub_101007550()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1005057FC(&qword_1016A67C0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10117E810;
  *(void *)(v1 + 32) = v0;
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1010075BC()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.NegativeAssistantIntentPhrases();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10069A03C();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)();
  uint64_t v5 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  sub_1005057FC(&qword_1016A67B8);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10117E810;
  *(void *)(v6 + 32) = v5;
  uint64_t v7 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

ValueMetadata *type metadata accessor for FreeformAssistantIntentsProvider()
{
  return &type metadata for FreeformAssistantIntentsProvider;
}

uint64_t sub_101007704()
{
  uint64_t v0 = type metadata accessor for CRLChangeSelectionFontStyleIntent();
  __chkstk_darwin(v0, v1);
  uint64_t v3 = (uint64_t *)((char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for CRLChangeSelectionColorIntent();
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (uint64_t *)((char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for _AssistantIntent();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  Swift::String v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_100E7CD20();
  uint64_t v80 = v13;
  uint64_t v81 = v14;
  uint64_t v82 = v15;
  sub_100E7D82C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v78 = static _AssistantIntent.Builder.buildExpression(_:)();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v12, v8);
  uint64_t v79 = sub_100E7CD20();
  uint64_t v80 = v17;
  uint64_t v81 = v18;
  uint64_t v82 = v19;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v77 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_10065943C((uint64_t *)&v79);
  sub_10065AB78();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v76 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_10065943C((uint64_t *)&v79);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v75 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_100E7A7B0((uint64_t *)&v79);
  sub_100E7D904();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v74 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_100E7A7B0((uint64_t *)&v79);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v73 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_1009E7B80((uint64_t *)&v79);
  sub_1009E9E30();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v72 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_1005F48D8((uint64_t *)&v79);
  sub_1005F62D0();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v71 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_100759B3C((uint64_t *)&v79);
  sub_10075BABC();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v70 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_1006D61EC((uint64_t *)&v79);
  sub_1006D8EC4();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v69 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_1006D61EC((uint64_t *)&v79);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v68 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_100F75570(v7);
  sub_101008D5C(&qword_1016A3028, (void (*)(uint64_t))type metadata accessor for CRLChangeSelectionColorIntent);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v67 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_100F75570(v7);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v66 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_100BC06F4(v3);
  sub_101008D5C(&qword_101695E20, (void (*)(uint64_t))type metadata accessor for CRLChangeSelectionFontStyleIntent);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v65 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_100BC06F4(v3);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v64 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_1005657E0((uint64_t *)&v79);
  sub_100566B70();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v63 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_1005657E0((uint64_t *)&v79);
  _AssistantIntent.init<A>(_:phrases:implying:)();
  uint64_t v62 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_1005657E0((uint64_t *)&v79);
  _AssistantIntent.init<A>(_:phrases:implying:)();
  uint64_t v61 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_100566CC4((uint64_t *)&v79);
  sub_1005681D8();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v60 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_100566CC4((uint64_t *)&v79);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v59 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_100566CC4((uint64_t *)&v79);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v58 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_100FD3208((uint64_t *)&v79);
  sub_100FD46AC();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v57 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_100D1E9C0((uint64_t *)&v79);
  sub_100D20154();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v56 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_100D1E9C0((uint64_t *)&v79);
  _AssistantIntent.init<A>(_:phrases:parameterValues:implying:)();
  uint64_t v55 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_100D1E9C0((uint64_t *)&v79);
  _AssistantIntent.init<A>(_:phrases:parameterValues:implying:)();
  uint64_t v54 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  uint64_t v79 = sub_1009B5718();
  uint64_t v80 = v20;
  uint64_t v81 = v21;
  sub_1009B6050();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v53 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  uint64_t v79 = sub_1009B5718();
  uint64_t v80 = v22;
  uint64_t v81 = v23;
  _AssistantIntent.init<A>(_:phrases:parameterValues:implying:)();
  uint64_t v24 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  uint64_t v79 = sub_1009B5718();
  uint64_t v80 = v25;
  uint64_t v81 = v26;
  _AssistantIntent.init<A>(_:phrases:parameterValues:implying:)();
  uint64_t v27 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  uint64_t v79 = sub_1006C2114();
  uint64_t v80 = v28;
  uint64_t v81 = v29;
  sub_1006C2AA0();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v30 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  uint64_t v79 = sub_1006C2114();
  uint64_t v80 = v31;
  uint64_t v81 = v32;
  _AssistantIntent.init<A>(_:phrases:parameterValues:implying:)();
  uint64_t v33 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  uint64_t v79 = sub_1006C2114();
  uint64_t v80 = v34;
  uint64_t v81 = v35;
  _AssistantIntent.init<A>(_:phrases:parameterValues:implying:)();
  uint64_t v36 = static _AssistantIntent.Builder.buildExpression(_:)();
  v16(v12, v8);
  sub_1005057FC(&qword_1016A67C8);
  uint64_t v37 = swift_allocObject();
  uint64_t v38 = v77;
  *(void *)(v37 + 32) = v78;
  *(void *)(v37 + 40) = v38;
  *(_OWORD *)(v37 + 16) = xmmword_1011C23E0;
  uint64_t v39 = v75;
  *(void *)(v37 + 48) = v76;
  *(void *)(v37 + 56) = v39;
  uint64_t v40 = v73;
  *(void *)(v37 + 64) = v74;
  *(void *)(v37 + 72) = v40;
  uint64_t v41 = v71;
  *(void *)(v37 + 80) = v72;
  *(void *)(v37 + 88) = v41;
  uint64_t v42 = v69;
  *(void *)(v37 + 96) = v70;
  *(void *)(v37 + 104) = v42;
  uint64_t v43 = v67;
  *(void *)(v37 + 112) = v68;
  *(void *)(v37 + 120) = v43;
  uint64_t v44 = v65;
  *(void *)(v37 + 128) = v66;
  *(void *)(v37 + 136) = v44;
  uint64_t v45 = v63;
  *(void *)(v37 + 144) = v64;
  *(void *)(v37 + 152) = v45;
  uint64_t v46 = v61;
  *(void *)(v37 + 160) = v62;
  *(void *)(v37 + 168) = v46;
  uint64_t v47 = v59;
  *(void *)(v37 + 176) = v60;
  *(void *)(v37 + 184) = v47;
  uint64_t v48 = v57;
  *(void *)(v37 + 192) = v58;
  *(void *)(v37 + 200) = v48;
  uint64_t v49 = v55;
  *(void *)(v37 + 208) = v56;
  *(void *)(v37 + 216) = v49;
  uint64_t v50 = v53;
  *(void *)(v37 + 224) = v54;
  *(void *)(v37 + 232) = v50;
  *(void *)(v37 + 240) = v24;
  *(void *)(v37 + 248) = v27;
  *(void *)(v37 + 256) = v30;
  *(void *)(v37 + 264) = v33;
  *(void *)(v37 + 272) = v36;
  uint64_t v51 = static _AssistantIntent.Builder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v51;
}

uint64_t sub_1010088B4(uint64_t a1)
{
  return sub_100FF7168(a1);
}

uint64_t sub_1010088D0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_101008910()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_101008948()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_10100896C(uint64_t a1)
{
  return sub_100FF7168(a1);
}

uint64_t sub_10100898C()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1010089B0(uint64_t a1)
{
  return sub_100FF7168(a1);
}

uint64_t sub_1010089D0()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1010089F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_101003234(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for ResizeBehavior);
}

uint64_t sub_101008A20@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_101008A5C()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_101008A9C()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_101008AC0(uint64_t a1)
{
  return sub_100FF7168(a1);
}

uint64_t sub_101008AE0(uint64_t a1)
{
  return sub_100FF7168(a1);
}

uint64_t sub_101008AF8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_101008B34()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_101008B6C()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_101008B94()
{
  return IntentParameter.wrappedValue.getter();
}

unint64_t sub_101008BC4()
{
  unint64_t result = qword_1016A68B8;
  if (!qword_1016A68B8)
  {
    sub_100522D34(&qword_1016A68C0);
    sub_101008D5C(&qword_1016A68C8, (void (*)(uint64_t))&type metadata accessor for IntentFile);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A68B8);
  }
  return result;
}

uint64_t sub_101008C68(uint64_t a1)
{
  return sub_100FF7168(a1);
}

uint64_t sub_101008C84@<X0>(void *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_101008CC4()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_101008D00(uint64_t a1)
{
  return sub_100FF7168(a1);
}

uint64_t sub_101008D18(uint64_t a1)
{
  return sub_100FF7168(a1);
}

uint64_t sub_101008D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_101003234(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for URL);
}

uint64_t sub_101008D5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_101008DA4(uint64_t a1)
{
  return sub_100FF7168(a1);
}

uint64_t sub_101008DBC(uint64_t a1)
{
  return sub_100FF9BA0(a1);
}

uint64_t sub_101008DD4(uint64_t a1)
{
  return sub_100FF7168(a1);
}

uint64_t sub_101008DEC(uint64_t a1)
{
  return sub_100FF9BA0(a1);
}

uint64_t sub_101008E04()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_101008E2C()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_101008E54@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_101008E90()
{
  return IntentParameter.wrappedValue.setter();
}

unint64_t sub_101008EC8()
{
  unint64_t result = qword_1016A6950;
  if (!qword_1016A6950)
  {
    sub_100522D34(&qword_1016A6958);
    sub_100B8EA8C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6950);
  }
  return result;
}

uint64_t sub_101008F6C()
{
  sub_100510028(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_boardIdentifier);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_rootContainerUUID;
  uint64_t v2 = type metadata accessor for UUID();
  char v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_alternateRootContainerUUID, v2);
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData + 8));

  return swift_deallocClassInstance();
}

uint64_t sub_101009060()
{
  return type metadata accessor for CRLBoardSyncRecord(0);
}

uint64_t type metadata accessor for CRLBoardSyncRecord(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A69A0);
}

uint64_t sub_101009088()
{
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for UUID();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_101009174()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions);
}

uint64_t sub_101009190()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_persistenceContext);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1010091E0()
{
  sub_100510028(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_boardIdentifier);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_rootContainerUUID;
  uint64_t v2 = type metadata accessor for UUID();
  char v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_alternateRootContainerUUID, v2);
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData + 8));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_persistenceContext);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_101009304()
{
  return type metadata accessor for CRLBoardSyncLocalChangeRecord(0);
}

uint64_t type metadata accessor for CRLBoardSyncLocalChangeRecord(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A6AB0);
}

uint64_t sub_10100932C()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_101009394()
{
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_boardCRDTData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_boardCRDTData + 8));

  return swift_bridgeObjectRelease();
}

uint64_t sub_1010093D8()
{
  sub_100510028(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_boardIdentifier);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_rootContainerUUID;
  uint64_t v2 = type metadata accessor for UUID();
  char v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_alternateRootContainerUUID, v2);
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData + 8));
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_boardCRDTData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_boardCRDTData + 8));
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1010094F0()
{
  return type metadata accessor for CRLBoardSyncRemoteRecord(0);
}

uint64_t type metadata accessor for CRLBoardSyncRemoteRecord(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A6C18);
}

uint64_t sub_101009518()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_101009578()
{
  sub_100510028(v0 + OBJC_IVAR____TtC8Freeform34CRLBoardSyncRemoteRecordIdentifier_boardIdentifier);

  return swift_deallocClassInstance();
}

uint64_t sub_1010095DC()
{
  return type metadata accessor for CRLBoardSyncRemoteRecordIdentifier(0);
}

uint64_t type metadata accessor for CRLBoardSyncRemoteRecordIdentifier(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A6D78);
}

uint64_t sub_101009604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v18 = v13 + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_boardCRDTData;
  *(_OWORD *)uint64_t v18 = xmmword_101190880;
  *(void *)(v13 + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_assets) = _swiftEmptyDictionarySingleton;
  uint64_t v19 = *(void *)v18;
  unint64_t v20 = *(void *)(v18 + 8);
  *(void *)uint64_t v18 = a9;
  *(void *)(v18 + 8) = a10;
  swift_retain();
  sub_1005FA2A0(a9, a10);
  sub_100514260(v19, v20);
  *(void *)(v13 + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_minRequiredVersionForSync) = a13;
  swift_release();
  sub_100540CFC(a1, v13 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_boardIdentifier);
  uint64_t v21 = v13 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_rootContainerUUID;
  uint64_t v22 = type metadata accessor for UUID();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  v24(v21, a2, v22);
  v24(v13 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_alternateRootContainerUUID, a3, v22);
  *(_OWORD *)(v13 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData) = xmmword_101190880;
  uint64_t v25 = (void *)(v13 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions);
  *uint64_t v25 = a4;
  v25[1] = a5;
  v25[2] = a6;
  *(unsigned char *)(v13 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_tombstoned) = a7;
  *(unsigned char *)(v13 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_hideFromRecentlyDeleted) = a8;
  uint64_t v26 = (void *)(v13 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData);
  uint64_t v27 = *(void *)(v13 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData);
  unint64_t v28 = *(void *)(v13 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData + 8);
  void *v26 = a11;
  v26[1] = a12;
  sub_100514260(v27, v28);
  uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v29(a3, v22);
  v29(a2, v22);
  sub_100510028(a1);
  return v13;
}

uint64_t *sub_101009820(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = (uint64_t)v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Tips.Status();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    id v14 = v6;
    swift_retain();
    if (v13(v10, 1, v11))
    {
      uint64_t v15 = sub_1005057FC(&qword_1016746C8);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v17 = sub_1005057FC(&qword_1016A6E00);
    *(void *)&v9[*(int *)(v17 + 28)] = *(void *)&v10[*(int *)(v17 + 28)];
    uint64_t v18 = a3[7];
    uint64_t v19 = (uint64_t *)((char *)v4 + v18);
    unint64_t v20 = (uint64_t *)((char *)a2 + v18);
    swift_retain();
    sub_1005057FC(&qword_10169C9E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        uint64_t v23 = sub_1005057FC(&qword_10169D500);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = (char *)a2 + a3[9];
    *(void *)(swift_unknownObjectWeakCopyInit() + 8) = *((void *)v24 + 1);
  }
  return v4;
}

uint64_t sub_101009B30(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for Tips.Status();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  sub_1005057FC(&qword_1016A6E00);
  swift_release();
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  sub_1005057FC(&qword_10169C9E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  else
  {
    swift_release();
  }

  return swift_unknownObjectWeakDestroy();
}

void *sub_101009CDC(void *a1, void *a2, int *a3)
{
  uint64_t v5 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Tips.Status();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v5;
  swift_retain();
  if (v12(v9, 1, v10))
  {
    uint64_t v14 = sub_1005057FC(&qword_1016746C8);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v15 = sub_1005057FC(&qword_1016A6E00);
  *(void *)&v8[*(int *)(v15 + 28)] = *(void *)&v9[*(int *)(v15 + 28)];
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  swift_retain();
  sub_1005057FC(&qword_10169C9E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_1005057FC(&qword_10169D500);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  else
  {
    *uint64_t v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = (char *)a2 + a3[9];
  *(void *)(swift_unknownObjectWeakCopyInit() + 8) = *((void *)v22 + 1);
  return a1;
}

void *sub_101009F9C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = (void *)a2[1];
  uint64_t v7 = (void *)a1[1];
  a1[1] = v6;
  id v8 = v6;

  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  uint64_t v9 = a3[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Tips.Status();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_1005057FC(&qword_1016746C8);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = sub_1005057FC(&qword_1016A6E00);
  *(void *)&v10[*(int *)(v18 + 28)] = *(void *)&v11[*(int *)(v18 + 28)];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v19 = a3[7];
    uint64_t v20 = (void *)((char *)a1 + v19);
    uint64_t v21 = (void *)((char *)a2 + v19);
    sub_100522F00((uint64_t)a1 + v19, &qword_10169C9E0);
    sub_1005057FC(&qword_10169C9E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        uint64_t v24 = sub_1005057FC(&qword_10169D500);
        memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
    }
    else
    {
      *uint64_t v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v25 = (char *)a2 + a3[9];
  *(void *)(swift_unknownObjectWeakCopyAssign() + 8) = *((void *)v25 + 1);
  return a1;
}

_OWORD *sub_10100A2F0(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Tips.Status();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_1005057FC(&qword_1016746C8);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = sub_1005057FC(&qword_1016A6E00);
  *(void *)&v8[*(int *)(v13 + 28)] = *(void *)&v9[*(int *)(v13 + 28)];
  uint64_t v14 = a3[7];
  int v15 = (char *)a1 + v14;
  int v16 = (char *)a2 + v14;
  uint64_t v17 = sub_1005057FC(&qword_10169C9E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
    {
      uint64_t v20 = sub_1005057FC(&qword_10169D500);
      memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v15, v16, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  uint64_t v21 = (char *)a2 + a3[9];
  *(void *)(swift_unknownObjectWeakTakeInit() + 8) = *((void *)v21 + 1);
  return a1;
}

void *sub_10100A58C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v6;

  uint64_t v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_release();
  uint64_t v9 = a3[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Tips.Status();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_1005057FC(&qword_1016746C8);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = sub_1005057FC(&qword_1016A6E00);
  *(void *)&v10[*(int *)(v18 + 28)] = *(void *)&v11[*(int *)(v18 + 28)];
  swift_release();
  if (a1 != a2)
  {
    uint64_t v19 = a3[7];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    sub_100522F00((uint64_t)a1 + v19, &qword_10169C9E0);
    uint64_t v22 = sub_1005057FC(&qword_10169C9E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v21, 1, v23))
      {
        uint64_t v25 = sub_1005057FC(&qword_10169D500);
        memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v20, v21, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v20, 0, 1, v23);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
  }
  uint64_t v26 = (char *)a2 + a3[9];
  *(void *)(swift_unknownObjectWeakTakeAssign() + 8) = *((void *)v26 + 1);
  return a1;
}

uint64_t sub_10100A8C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10100A8D8);
}

uint64_t sub_10100A8D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1005057FC(&qword_1016A6E00);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005057FC(&qword_10169C9D8);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10100AA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10100AA20);
}

uint64_t sub_10100AA20(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1005057FC(&qword_1016A6E00);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005057FC(&qword_10169C9D8);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLActiveParticipantDetailView(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_1016A6E60);
}

void sub_10100AB74()
{
  sub_10100ACA8(319, (unint64_t *)&unk_1016A6E70, &qword_1016746C8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
  if (v0 <= 0x3F)
  {
    sub_10100ACA8(319, (unint64_t *)&qword_10169D570, &qword_10169D500, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10100ACA8(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = sub_100522D34(a3);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_10100AD08()
{
  return swift_getOpaqueTypeConformance2();
}

BOOL sub_10100AD24()
{
  uint64_t v1 = type metadata accessor for CRLActiveParticipantDetailView(0);
  __chkstk_darwin(v1 - 8, v2);
  unint64_t v4 = (char *)&v12[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = &type metadata for CRLFeatureFlags;
  unint64_t v5 = sub_1005396A8();
  unint64_t v14 = v5;
  LOBYTE(v12[0]) = 0;
  char v6 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v12);
  if ((v6 & 1) == 0)
  {
    sub_101016E78(v0, (uint64_t)v4, type metadata accessor for CRLActiveParticipantDetailView);
    goto LABEL_7;
  }
  uint64_t v13 = &type metadata for CRLFeatureFlags;
  unint64_t v14 = v5;
  LOBYTE(v12[0]) = 12;
  char v7 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v12);
  sub_101016E78(v0, (uint64_t)v4, type metadata accessor for CRLActiveParticipantDetailView);
  if ((v7 & 1) == 0)
  {
LABEL_7:
    BOOL v9 = 0;
    goto LABEL_8;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (v12[0] >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v12[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  BOOL v9 = v8 != 0;
LABEL_8:
  sub_101016EE0((uint64_t)v4, type metadata accessor for CRLActiveParticipantDetailView);
  return v9;
}

void sub_10100AF00(uint64_t a1@<X8>)
{
  uint64_t v111 = a1;
  uint64_t v109 = sub_1005057FC(&qword_1016A6EB0);
  uint64_t v1 = *(void *)(v109 - 8);
  __chkstk_darwin(v109, v2);
  unint64_t v4 = (char *)v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v110 = (char *)v93 - v7;
  uint64_t v8 = sub_1005057FC(&qword_10167A600);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v105 = (char *)v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v104 = (char *)v93 - v14;
  uint64_t v15 = type metadata accessor for TaskPriority();
  uint64_t v101 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v16);
  uint64_t v100 = (char *)v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for CRLActiveParticipantDetailView(0);
  uint64_t v96 = *(void *)(v18 - 8);
  uint64_t v19 = *(void *)(v96 + 64);
  __chkstk_darwin(v18 - 8, v20);
  uint64_t v97 = (uint64_t)v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1005057FC(&qword_1016A6EB8);
  uint64_t v98 = *(void *)(v21 - 8);
  uint64_t v99 = v21;
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)v93 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_1005057FC(&qword_1016A6EC0);
  __chkstk_darwin(v95, v25);
  uint64_t v103 = (char *)v93 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v28);
  uint64_t v102 = (uint64_t)v93 - v29;
  uint64_t v30 = sub_1005057FC(&qword_1016A6EC8);
  __chkstk_darwin(v30 - 8, v31);
  uint64_t v33 = (char *)v93 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34, v35);
  uint64_t v108 = (uint64_t)v93 - v36;
  id v37 = [self sharedApplication];
  id v38 = [v37 delegate];

  if (v38)
  {
    uint64_t v106 = v4;
    uint64_t v107 = v1;
    type metadata accessor for CRLiOSAppDelegate();
    uint64_t v39 = *(void *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_iCloudStatus);
    swift_retain();
    swift_unknownObjectRelease();
    uint64_t v40 = *(void *)(v39 + 48);
    swift_release();
    if ((v40 & 2) != 0 || ([self loggedInUserHasManagedAppleID] & 1) == 0)
    {
      v93[0] = self;
      id v45 = [v93[0] mainBundle];
      uint64_t v46 = v15;
      NSString v47 = String._bridgeToObjectiveC()();
      NSString v48 = String._bridgeToObjectiveC()();
      id v49 = [v45 localizedStringForKey:v47 value:v48 table:0];

      uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v52 = v51;

      uint64_t v115 = v50;
      uint64_t v116 = v52;
      v93[1] = (id)sub_10052E310();
      uint64_t v53 = Text.init<A>(_:)();
      uint64_t v94 = v8;
      uint64_t v115 = v53;
      uint64_t v116 = v54;
      char v117 = v55 & 1;
      uint64_t v118 = v56;
      __chkstk_darwin(v53, v54);
      uint64_t v57 = (uint64_t)v112;
      v93[-2] = v112;
      sub_1005057FC(&qword_1016A6ED0);
      sub_100523288(&qword_1016A6ED8, &qword_1016A6ED0);
      Section<>.init(header:content:)();
      uint64_t v58 = v97;
      sub_101016E78(v57, v97, type metadata accessor for CRLActiveParticipantDetailView);
      unint64_t v59 = (*(unsigned __int8 *)(v96 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
      uint64_t v60 = swift_allocObject();
      sub_101018BE4(v58, v60 + v59, type metadata accessor for CRLActiveParticipantDetailView);
      uint64_t v61 = v100;
      static TaskPriority.userInitiated.getter();
      uint64_t v62 = (uint64_t)v103;
      uint64_t v63 = &v103[*(int *)(v95 + 36)];
      uint64_t v64 = type metadata accessor for _TaskModifier();
      uint64_t v65 = v101;
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(&v63[*(int *)(v64 + 20)], v61, v46);
      *(void *)uint64_t v63 = &unk_1016A6EE8;
      *((void *)v63 + 1) = v60;
      uint64_t v67 = v98;
      uint64_t v66 = v99;
      (*(void (**)(uint64_t, char *, uint64_t))(v98 + 16))(v62, v24, v99);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v61, v46);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v24, v66);
      uint64_t v68 = v102;
      sub_10051B3EC(v62, v102, &qword_1016A6EC0);
      id v69 = [v93[0] mainBundle];
      NSString v70 = String._bridgeToObjectiveC()();
      NSString v71 = String._bridgeToObjectiveC()();
      id v72 = [v69 localizedStringForKey:v70 value:v71 table:0];

      uint64_t v73 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v75 = v74;

      uint64_t v113 = v73;
      uint64_t v114 = v75;
      type metadata accessor for CRLEditingCoordinator();
      sub_101016290(&qword_10169C9E8, (void (*)(uint64_t))type metadata accessor for CRLEditingCoordinator);
      uint64_t v76 = (void *)ObservedObject.projectedValue.getter();
      swift_getKeyPath();
      ObservedObject.Wrapper.subscript.getter();
      swift_release();

      uint64_t v77 = v104;
      Toggle<>.init<A>(_:isOn:)();
      sub_100522E9C(v68, v62, &qword_1016A6EC0);
      uint64_t v78 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
      uint64_t v79 = v105;
      uint64_t v80 = v94;
      v78(v105, v77, v94);
      sub_100522E9C(v62, (uint64_t)v33, &qword_1016A6EC0);
      uint64_t v81 = sub_1005057FC(&qword_1016A6EF0);
      v78(&v33[*(int *)(v81 + 48)], v79, v80);
      uint64_t v82 = *(void (**)(char *, uint64_t))(v9 + 8);
      v82(v77, v80);
      sub_100522F00(v68, &qword_1016A6EC0);
      v82(v79, v80);
      sub_100522F00(v62, &qword_1016A6EC0);
      uint64_t v83 = sub_1005057FC(&qword_1016A6EF8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v33, 0, 1, v83);
      uint64_t v42 = v108;
      uint64_t v43 = sub_10051B3EC((uint64_t)v33, v108, &qword_1016A6EC8);
    }
    else
    {
      uint64_t v41 = sub_1005057FC(&qword_1016A6EF8);
      uint64_t v42 = v108;
      uint64_t v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v108, 1, 1, v41);
    }
    __chkstk_darwin(v43, v44);
    v93[-2] = v84;
    sub_1005057FC(&qword_1016A6F00);
    sub_100523288(&qword_1016A6F08, &qword_1016A6F00);
    uint64_t v85 = v110;
    Section<>.init(content:)();
    sub_100522E9C(v42, (uint64_t)v33, &qword_1016A6EC8);
    id v87 = v106;
    uint64_t v86 = v107;
    uint64_t v88 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
    uint64_t v89 = v109;
    v88(v106, v85, v109);
    uint64_t v90 = v111;
    sub_100522E9C((uint64_t)v33, v111, &qword_1016A6EC8);
    uint64_t v91 = sub_1005057FC(&qword_1016A6F10);
    v88((char *)(v90 + *(int *)(v91 + 48)), v87, v89);
    uint64_t v92 = *(void (**)(char *, uint64_t))(v86 + 8);
    v92(v85, v89);
    sub_100522F00(v42, &qword_1016A6EC8);
    v92(v87, v89);
    sub_100522F00((uint64_t)v33, &qword_1016A6EC8);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10100BA88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v132 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v129 = *(void *)(v132 - 8);
  __chkstk_darwin(v132, v4);
  uint64_t v116 = (char *)&v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_1005057FC(&qword_1016A6F28);
  __chkstk_darwin(v125, v6);
  uint64_t v130 = (char *)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10169D500);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v117 = (uint64_t)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v128 = (uint64_t)&v114 - v13;
  __chkstk_darwin(v14, v15);
  uint64_t v131 = (uint64_t)&v114 - v16;
  uint64_t v17 = sub_1005057FC(&qword_1016A6F30);
  uint64_t v123 = *(void *)(v17 - 8);
  uint64_t v124 = v17;
  __chkstk_darwin(v17, v18);
  uint64_t v122 = (char *)&v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1005057FC(&qword_1016A6F38);
  uint64_t v119 = *(void *)(v20 - 8);
  uint64_t v120 = v20;
  __chkstk_darwin(v20, v21);
  uint64_t v133 = (char *)&v114 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1005057FC(&qword_1016A6F40);
  uint64_t v134 = *(void *)(v23 - 8);
  uint64_t v135 = v23;
  __chkstk_darwin(v23, v24);
  uint64_t v127 = (char *)&v114 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v27);
  uint64_t v126 = (uint64_t)&v114 - v28;
  uint64_t v29 = type metadata accessor for Tips.Status();
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29, v31);
  uint64_t v118 = (char *)&v114 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1005057FC(&qword_1016A6F48);
  __chkstk_darwin(v33, v34);
  uint64_t v36 = (char *)&v114 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1005057FC(&qword_1016746C8);
  __chkstk_darwin(v37 - 8, v38);
  uint64_t v40 = (char *)&v114 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41, v42);
  uint64_t v44 = (char *)&v114 - v43;
  __chkstk_darwin(v45, v46);
  NSString v48 = (char *)&v114 - v47;
  uint64_t v49 = sub_1005057FC(&qword_1016A6F50);
  __chkstk_darwin(v49 - 8, v50);
  unint64_t v137 = (char *)&v114 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v52, v53);
  id v136 = (char *)&v114 - v54;
  if (sub_10100AD24())
  {
    uint64_t v121 = a2;
    uint64_t v114 = type metadata accessor for CRLActiveParticipantDetailView(0);
    uint64_t v115 = a1;
    sub_1005057FC(&qword_1016A6E00);
    State.wrappedValue.getter();
    (*(void (**)(char *, void, uint64_t))(v30 + 104))(v44, enum case for Tips.Status.available(_:), v29);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v44, 0, 1, v29);
    uint64_t v55 = (uint64_t)&v36[*(int *)(v33 + 48)];
    sub_100522E9C((uint64_t)v48, (uint64_t)v36, &qword_1016746C8);
    sub_100522E9C((uint64_t)v44, v55, &qword_1016746C8);
    uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
    if (v56((uint64_t)v36, 1, v29) == 1)
    {
      sub_100522F00((uint64_t)v44, &qword_1016746C8);
      sub_100522F00((uint64_t)v48, &qword_1016746C8);
      int v57 = v56(v55, 1, v29);
      a2 = v121;
      uint64_t v58 = (uint64_t)v136;
      if (v57 == 1)
      {
        sub_100522F00((uint64_t)v36, &qword_1016746C8);
        goto LABEL_16;
      }
      goto LABEL_8;
    }
    sub_100522E9C((uint64_t)v36, (uint64_t)v40, &qword_1016746C8);
    if (v56(v55, 1, v29) == 1)
    {
      sub_100522F00((uint64_t)v44, &qword_1016746C8);
      sub_100522F00((uint64_t)v48, &qword_1016746C8);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v29);
      a2 = v121;
      uint64_t v58 = (uint64_t)v136;
LABEL_8:
      sub_100522F00((uint64_t)v36, &qword_1016A6F48);
      uint64_t v59 = 1;
      uint64_t v60 = v115;
      uint64_t v61 = (uint64_t)v137;
      goto LABEL_9;
    }
    uint64_t v77 = v118;
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v118, v55, v29);
    sub_101016290(&qword_1016A6F88, (void (*)(uint64_t))&type metadata accessor for Tips.Status);
    char v78 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v79 = *(void (**)(char *, uint64_t))(v30 + 8);
    v79(v77, v29);
    sub_100522F00((uint64_t)v44, &qword_1016746C8);
    sub_100522F00((uint64_t)v48, &qword_1016746C8);
    v79(v40, v29);
    sub_100522F00((uint64_t)v36, &qword_1016746C8);
    a2 = v121;
    uint64_t v58 = (uint64_t)v136;
    uint64_t v61 = (uint64_t)v137;
    if (v78)
    {
LABEL_16:
      sub_100FCF170();
      uint64_t v80 = v122;
      TipView.init(_:arrowEdge:action:)();
      id v81 = [self tertiarySystemGroupedBackgroundColor];
      v141[0] = Color.init(_:)();
      sub_100523288(&qword_1016A6F78, &qword_1016A6F30);
      uint64_t v82 = v124;
      View.tipBackground<A>(_:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v123 + 8))(v80, v82);
      unsigned __int8 v83 = static Edge.Set.top.getter();
      char v84 = static Edge.Set.bottom.getter();
      int v85 = Edge.Set.init(rawValue:)();
      Edge.Set.init(rawValue:)();
      if (Edge.Set.init(rawValue:)() != v83) {
        int v85 = Edge.Set.init(rawValue:)();
      }
      Edge.Set.init(rawValue:)();
      char v86 = Edge.Set.init(rawValue:)();
      uint64_t v60 = v115;
      uint64_t v87 = v129;
      uint64_t v88 = (uint64_t)v130;
      if (v86 == v84) {
        LODWORD(v136) = v85;
      }
      else {
        LODWORD(v136) = Edge.Set.init(rawValue:)();
      }
      uint64_t v90 = v131;
      uint64_t v89 = v132;
      uint64_t v91 = v128;
      sub_100E03FB4(v131);
      (*(void (**)(uint64_t, void, uint64_t))(v87 + 104))(v91, enum case for UserInterfaceSizeClass.compact(_:), v89);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v87 + 56))(v91, 0, 1, v89);
      uint64_t v92 = v88 + *(int *)(v125 + 48);
      sub_100522E9C(v90, v88, &qword_10169D500);
      uint64_t v93 = v132;
      sub_100522E9C(v91, v92, &qword_10169D500);
      uint64_t v94 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 48);
      if (v94(v88, 1, v93) == 1)
      {
        sub_100522F00(v91, &qword_10169D500);
        uint64_t v88 = (uint64_t)v130;
        sub_100522F00(v131, &qword_10169D500);
        int v95 = v94(v92, 1, v93);
        uint64_t v63 = v134;
        uint64_t v62 = v135;
        if (v95 == 1)
        {
          sub_100522F00(v88, &qword_10169D500);
          uint64_t v97 = v119;
          uint64_t v96 = v120;
          uint64_t v61 = (uint64_t)v137;
LABEL_27:
          EdgeInsets.init(_all:)();
          uint64_t v100 = v99;
          uint64_t v102 = v101;
          uint64_t v104 = v103;
          uint64_t v106 = v105;
          uint64_t v107 = (uint64_t)v127;
          uint64_t v108 = v133;
          (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v127, v133, v96);
          uint64_t v109 = v107 + *(int *)(v62 + 36);
          *(unsigned char *)uint64_t v109 = (_BYTE)v136;
          *(void *)(v109 + 8) = v100;
          *(void *)(v109 + 16) = v102;
          *(void *)(v109 + 24) = v104;
          *(void *)(v109 + 32) = v106;
          *(unsigned char *)(v109 + 40) = 0;
          (*(void (**)(char *, uint64_t))(v97 + 8))(v108, v96);
          uint64_t v110 = v126;
          sub_10051B3EC(v107, v126, &qword_1016A6F40);
          sub_10051B3EC(v110, v58, &qword_1016A6F40);
          uint64_t v59 = 0;
          a2 = v121;
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t v98 = v117;
        sub_100522E9C(v88, v117, &qword_10169D500);
        if (v94(v92, 1, v93) != 1)
        {
          uint64_t v111 = v129;
          uint64_t v112 = v116;
          (*(void (**)(char *, uint64_t, uint64_t))(v129 + 32))(v116, v92, v93);
          sub_101016290(&qword_1016A6F80, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
          LODWORD(v125) = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v113 = *(void (**)(char *, uint64_t))(v111 + 8);
          v113(v112, v93);
          sub_100522F00(v128, &qword_10169D500);
          sub_100522F00(v131, &qword_10169D500);
          v113((char *)v98, v93);
          sub_100522F00(v88, &qword_10169D500);
          uint64_t v63 = v134;
          uint64_t v62 = v135;
          uint64_t v97 = v119;
          uint64_t v96 = v120;
          uint64_t v61 = (uint64_t)v137;
          goto LABEL_27;
        }
        sub_100522F00(v128, &qword_10169D500);
        sub_100522F00(v131, &qword_10169D500);
        (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v98, v93);
        uint64_t v63 = v134;
        uint64_t v62 = v135;
      }
      sub_100522F00(v88, &qword_1016A6F28);
      uint64_t v97 = v119;
      uint64_t v96 = v120;
      uint64_t v61 = (uint64_t)v137;
      goto LABEL_27;
    }
    uint64_t v59 = 1;
    uint64_t v60 = v115;
  }
  else
  {
    uint64_t v59 = 1;
    uint64_t v60 = a1;
    uint64_t v58 = (uint64_t)v136;
    uint64_t v61 = (uint64_t)v137;
  }
LABEL_9:
  uint64_t v63 = v134;
  uint64_t v62 = v135;
LABEL_10:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56))(v58, v59, 1, v62);
  v141[3] = &type metadata for CRLFeatureFlags;
  v141[4] = sub_1005396A8();
  LOBYTE(v141[0]) = 12;
  char v64 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v141);
  if ((v64 & 1) != 0 && (swift_retain(), uint64_t v65 = sub_1007099F4(), swift_release(), v65))
  {
    uint64_t v66 = *(void **)(v60 + 8);
    uint64_t v67 = v60 + *(int *)(type metadata accessor for CRLActiveParticipantDetailView(0) + 36);
    swift_unknownObjectWeakLoadStrong();
    uint64_t v68 = *(void *)(v67 + 8);
    swift_retain();
    id v69 = v66;
    NSString v70 = v65;
    sub_10100C958((uint64_t)v69, v68, (uint64_t)v138);
    sub_101016228((uint64_t)v138, (uint64_t)v139);
    char v140 = 0;
    sub_101016150();
    sub_1010161A4();
    _ConditionalContent<>.init(storage:)();

    sub_101016260(v138);
  }
  else
  {
    NSString v71 = *(void **)(v60 + 8);
    uint64_t v72 = v60 + *(int *)(type metadata accessor for CRLActiveParticipantDetailView(0) + 36);
    swift_unknownObjectWeakLoadStrong();
    uint64_t v73 = *(void *)(v72 + 8);
    id v74 = v71;
    swift_retain();
    sub_10100CB3C((uint64_t)v74, v73, (uint64_t)v138);
    sub_101016118((uint64_t)v138, (uint64_t)v139);
    char v140 = 1;
    sub_101016150();
    sub_1010161A4();
    _ConditionalContent<>.init(storage:)();
    sub_1010161F8(v138);
  }
  sub_100522E9C(v58, v61, &qword_1016A6F50);
  sub_100522E9C((uint64_t)v141, (uint64_t)v139, &qword_1016A6F68);
  sub_100522E9C(v61, a2, &qword_1016A6F50);
  uint64_t v75 = sub_1005057FC(&qword_1016A6F70);
  sub_100522E9C((uint64_t)v139, a2 + *(int *)(v75 + 48), &qword_1016A6F68);
  sub_100522F00((uint64_t)v141, &qword_1016A6F68);
  sub_100522F00(v58, &qword_1016A6F50);
  sub_100522F00((uint64_t)v139, &qword_1016A6F68);
  return sub_100522F00(v61, &qword_1016A6F50);
}

void sub_10100C958(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  type metadata accessor for CRLCollaborationParticipantCollection(0);
  sub_101016290(&qword_10167C538, (void (*)(uint64_t))type metadata accessor for CRLCollaborationParticipantCollection);
  *(void *)(a3 + 8) = ObservedObject.init(wrappedValue:)();
  *(void *)(a3 + 16) = v5;
  type metadata accessor for CRLCollaborationParticipant(0);
  sub_101016290(&qword_1016A6F90, (void (*)(uint64_t))type metadata accessor for CRLCollaborationParticipant);
  *(void *)(a3 + 24) = ObservedObject.init(wrappedValue:)();
  *(void *)(a3 + 32) = v6;
  *(void *)(a3 + 48) = a2;
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  State.init(wrappedValue:)();
  *(_OWORD *)(a3 + 56) = v11;
  *(void *)(a3 + 72) = v12;
  id v7 = [self sharedApplication];
  id v8 = [v7 delegate];

  if (v8)
  {
    type metadata accessor for CRLiOSAppDelegate();
    uint64_t v9 = *(void *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_iCloudStatus);
    swift_retain();
    swift_unknownObjectRelease();
    uint64_t v10 = *(void *)(v9 + 48);
    swift_release();
    *(unsigned char *)(a3 + 80) = (v10 & 2) == 0;
  }
  else
  {
    __break(1u);
  }
}

void sub_10100CB3C(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  type metadata accessor for CRLCollaborationParticipantCollection(0);
  sub_101016290(&qword_10167C538, (void (*)(uint64_t))type metadata accessor for CRLCollaborationParticipantCollection);
  *(void *)(a3 + 8) = ObservedObject.init(wrappedValue:)();
  *(void *)(a3 + 16) = v5;
  *(void *)(a3 + 32) = a2;
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  State.init(wrappedValue:)();
  *(_OWORD *)(a3 + 40) = v10;
  *(void *)(a3 + 56) = v11;
  id v6 = [self sharedApplication];
  id v7 = [v6 delegate];

  if (v7)
  {
    type metadata accessor for CRLiOSAppDelegate();
    uint64_t v8 = *(void *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_iCloudStatus);
    swift_retain();
    swift_unknownObjectRelease();
    uint64_t v9 = *(void *)(v8 + 48);
    swift_release();
    *(unsigned char *)(a3 + 64) = (v9 & 2) == 0;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10100CCC8(uint64_t a1)
{
  v1[2] = a1;
  sub_1005057FC(&qword_1016746C8);
  v1[3] = swift_task_alloc();
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  uint64_t v2 = sub_1005057FC(&qword_1016746D0);
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  uint64_t v3 = sub_1005057FC(&qword_1016746D8);
  v1[9] = v3;
  v1[10] = *(void *)(v3 - 8);
  v1[11] = swift_task_alloc();
  v1[12] = type metadata accessor for MainActor();
  v1[13] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[14] = v5;
  v1[15] = v4;
  return _swift_task_switch(sub_10100CE70, v5, v4);
}

uint64_t sub_10100CE70()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  sub_100FCF170();
  Tip.statusUpdates.getter();
  AsyncStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = static MainActor.shared.getter();
  v0[16] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[17] = v5;
  void *v5 = v0;
  v5[1] = sub_10100CF80;
  uint64_t v6 = v0[9];
  uint64_t v7 = v0[5];
  return AsyncStream.Iterator.next(isolation:)(v7, v4, &protocol witness table for MainActor, v6);
}

uint64_t sub_10100CF80()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t v3 = *(void *)(v1 + 112);
  return _swift_task_switch(sub_10100D0C4, v3, v2);
}

uint64_t sub_10100D0C4()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = type metadata accessor for Tips.Status();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v7 = v0[3];
    uint64_t v6 = v0[4];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v6, v1, v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v6, 0, 1, v2);
    type metadata accessor for CRLActiveParticipantDetailView(0);
    sub_100522E9C(v6, v7, &qword_1016746C8);
    sub_1005057FC(&qword_1016A6E00);
    State.wrappedValue.setter();
    sub_100522F00(v6, &qword_1016746C8);
    uint64_t v8 = static MainActor.shared.getter();
    v0[16] = v8;
    uint64_t v9 = (void *)swift_task_alloc();
    v0[17] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_10100CF80;
    uint64_t v10 = v0[9];
    uint64_t v11 = v0[5];
    return AsyncStream.Iterator.next(isolation:)(v11, v8, &protocol witness table for MainActor, v10);
  }
}

uint64_t sub_10100D328(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLActiveParticipantDetailView(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8, v5);
  sub_101016E78(a1, (uint64_t)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLActiveParticipantDetailView);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  sub_101018BE4((uint64_t)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for CRLActiveParticipantDetailView);
  sub_1005057FC(&qword_1016A6F18);
  sub_100523288(&qword_1016A6F20, &qword_1016A6F18);
  return Button.init(action:label:)();
}

uint64_t sub_10100D4AC()
{
  type metadata accessor for CRLActiveParticipantDetailView(0);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10053779C();
    return swift_unknownObjectRelease();
  }
  return result;
}

__n128 sub_10100D50C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static VerticalAlignment.center.getter();
  sub_10100D578((uint64_t)&v9);
  char v3 = v10;
  uint64_t v4 = v11;
  uint64_t v5 = v12;
  char v6 = v13;
  uint64_t v7 = v14;
  __n128 result = v9;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(unsigned char *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = v7;
  return result;
}

uint64_t sub_10100D578@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 localizedStringForKey:v3 value:v4 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10052E310();
  uint64_t v6 = Text.init<A>(_:)();
  uint64_t v8 = v7;
  LOBYTE(v5) = v9 & 1;
  static Color.primary.getter();
  uint64_t v10 = Text.foregroundColor(_:)();
  uint64_t v12 = v11;
  char v14 = v13;
  uint64_t v16 = v15;
  swift_release();
  sub_1006A7D28(v6, v8, (char)v5);
  swift_bridgeObjectRelease();
  uint64_t v17 = Image.init(systemName:)();
  *(void *)a1 = v10;
  *(void *)(a1 + 8) = v12;
  *(unsigned char *)(a1 + 16) = v14 & 1;
  *(void *)(a1 + 24) = v16;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v17;
  sub_10073F0E0(v10, v12, v14 & 1);
  swift_bridgeObjectRetain();
  sub_1006A7D28(v10, v12, v14 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10100D74C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1005057FC(&qword_1016A6FA8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_1016A6FB0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 80) == 1)
  {
    swift_unknownObjectWeakLoadStrong();
    sub_10100DD1C(*(void *)(v1 + 48), v23);
    sub_101016D84(v23, v24);
    char v25 = 0;
    sub_101016C34();
    sub_101016C88();
    _ConditionalContent<>.init(storage:)();
    sub_100522E9C((uint64_t)v26, (uint64_t)v11, &qword_1016A6FF0);
    swift_storeEnumTagMultiPayload();
    sub_1005057FC(&qword_1016A6FF0);
    sub_101016BF8();
    sub_101016CDC();
    _ConditionalContent<>.init(storage:)();
    sub_100522F00((uint64_t)v26, &qword_1016A6FF0);
    return sub_101016DBC((uint64_t)v23);
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    if (v26[0] >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((v26[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v13)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      v24[0] = v26[0];
      sub_101016228(v1, (uint64_t)v26);
      uint64_t v14 = swift_allocObject();
      sub_101016A58((uint64_t)v26, v14 + 16);
      v22[1] = sub_1005057FC((uint64_t *)&unk_10167C2B0);
      type metadata accessor for UUID();
      sub_1005057FC(&qword_1016A6FB8);
      void v22[2] = a1;
      sub_100523288(&qword_1016A6FC0, (uint64_t *)&unk_10167C2B0);
      sub_101016ACC();
      sub_101016290(&qword_1016A6FE8, (void (*)(uint64_t))type metadata accessor for CRLCollaborationParticipant);
      ForEach<>.init(_:content:)();
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v11, v7, v3);
      swift_storeEnumTagMultiPayload();
      sub_1005057FC(&qword_1016A6FF0);
      sub_101016BF8();
      sub_101016CDC();
      _ConditionalContent<>.init(storage:)();
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
    else
    {
      id v15 = [self mainBundle];
      NSString v16 = String._bridgeToObjectiveC()();
      NSString v17 = String._bridgeToObjectiveC()();
      id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;

      v24[0] = v19;
      v24[1] = v21;
      char v25 = 1;
      sub_101016C34();
      sub_101016C88();
      _ConditionalContent<>.init(storage:)();
      sub_100522E9C((uint64_t)v26, (uint64_t)v11, &qword_1016A6FF0);
      swift_storeEnumTagMultiPayload();
      sub_1005057FC(&qword_1016A6FF0);
      sub_101016BF8();
      sub_101016CDC();
      _ConditionalContent<>.init(storage:)();
      return sub_100522F00((uint64_t)v26, &qword_1016A6FF0);
    }
  }
}

void sub_10100DD1C(uint64_t a1@<X1>, void *a2@<X8>)
{
  a2[1] = a1;
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  uint64_t v3 = self;
  id v4 = [v3 mainBundle];
  NSString v5 = String._bridgeToObjectiveC()();
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v4 localizedStringForKey:v5 value:v6 table:0];

  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  a2[2] = v8;
  a2[3] = v10;
  id v11 = [v3 mainBundle];
  NSString v12 = String._bridgeToObjectiveC()();
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v11 localizedStringForKey:v12 value:v13 table:0];

  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  a2[4] = v15;
  a2[5] = v17;
}

uint64_t sub_10100DEC4@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v52 = a3;
  uint64_t v5 = sub_1005057FC(&qword_1016A5FF0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (uint64_t *)((char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1005057FC(&qword_10168F008);
  __chkstk_darwin(v9 - 8, v10);
  NSString v12 = (uint64_t *)((char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for CRLCollaborationParticipantRowView(0);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005057FC(&qword_1016A6FD8);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v50 = v18;
  uint64_t v51 = v19;
  __chkstk_darwin(v18, v20);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *a1;
  uint64_t v24 = *(void **)a2;
  char v25 = *(void **)(*(void *)a2 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
  uint64_t v26 = *(void **)(a2 + 32);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v48 = *(void *)(a2 + 48);
  uint64_t v49 = Strong;
  uint64_t v28 = *(void *)(a2 + 72);
  long long v53 = *(_OWORD *)(a2 + 56);
  uint64_t v54 = v28;
  id v45 = v25;
  id v29 = v24;
  id v30 = v26;
  id v31 = v23;
  sub_1005057FC(&qword_101684970);
  State.projectedValue.getter();
  long long v47 = v55;
  uint64_t v32 = v56;
  uint64_t v46 = v57;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v43 = swift_getKeyPath();
  *NSString v12 = swift_getKeyPath();
  sub_1005057FC(&qword_10168F000);
  swift_storeEnumTagMultiPayload();
  *uint64_t v8 = swift_getKeyPath();
  sub_1005057FC(&qword_10169D6D8);
  swift_storeEnumTagMultiPayload();
  *(void *)uint64_t v17 = v29;
  type metadata accessor for CRLCollaborationParticipant(0);
  sub_101016290(&qword_1016A6F90, (void (*)(uint64_t))type metadata accessor for CRLCollaborationParticipant);
  *((void *)v17 + 1) = ObservedObject.init(wrappedValue:)();
  *((void *)v17 + 2) = v33;
  *((void *)v17 + 3) = ObservedObject.init(wrappedValue:)();
  *((void *)v17 + 4) = v34;
  type metadata accessor for CRLFollowCoordinator();
  sub_101016290(&qword_1016A7018, (void (*)(uint64_t))type metadata accessor for CRLFollowCoordinator);
  uint64_t v35 = v45;
  *((void *)v17 + 5) = ObservedObject.init(wrappedValue:)();
  *((void *)v17 + 6) = v36;
  *((void *)v17 + 8) = v48;
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  LOBYTE(v53) = 0;
  State.init(wrappedValue:)();
  uint64_t v37 = *((void *)&v55 + 1);
  v17[72] = v55;
  *((void *)v17 + 10) = v37;
  *(_OWORD *)(v17 + 88) = v47;
  uint64_t v38 = v46;
  *((void *)v17 + 13) = v32;
  *((void *)v17 + 14) = v38;
  *((void *)v17 + 15) = KeyPath;
  v17[128] = 0;
  *((void *)v17 + 17) = v43;
  v17[144] = 0;
  sub_10051B3EC((uint64_t)v12, (uint64_t)&v17[*(int *)(v14 + 60)], &qword_10168F008);
  sub_10051B3EC((uint64_t)v8, (uint64_t)&v17[*(int *)(v14 + 64)], &qword_1016A5FF0);

  sub_101016E78((uint64_t)v17, (uint64_t)v22, type metadata accessor for CRLCollaborationParticipantRowView);
  uint64_t v39 = v50;
  uint64_t v40 = &v22[*(int *)(v50 + 36)];
  *(_OWORD *)uint64_t v40 = xmmword_101193230;
  *((_OWORD *)v40 + 1) = xmmword_1011C2A10;
  v40[32] = 0;
  sub_101016EE0((uint64_t)v17, type metadata accessor for CRLCollaborationParticipantRowView);
  uint64_t v41 = v52;
  sub_10051B3EC((uint64_t)v22, v52, &qword_1016A6FD8);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v41, 0, 1, v39);
}

uint64_t sub_10100E360@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1005057FC(&qword_1016A7020);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v23[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_1016A7028);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v23[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 64) == 1)
  {
    swift_unknownObjectWeakLoadStrong();
    sub_10100DD1C(*(void *)(v1 + 32), v23);
    sub_101016D84(v23, v24);
    char v25 = 0;
    sub_101016C34();
    sub_101016C88();
    _ConditionalContent<>.init(storage:)();
    sub_100522E9C((uint64_t)v26, (uint64_t)v11, &qword_1016A6FF0);
    swift_storeEnumTagMultiPayload();
    sub_1005057FC(&qword_1016A6FF0);
    sub_101016BF8();
    sub_101017124();
    _ConditionalContent<>.init(storage:)();
    sub_100522F00((uint64_t)v26, &qword_1016A6FF0);
    return sub_101016DBC((uint64_t)v23);
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    if (v26[0] >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((v26[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v13)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      v24[0] = v26[0];
      swift_getKeyPath();
      sub_101016118(v1, (uint64_t)v26);
      uint64_t v14 = swift_allocObject();
      sub_101016FC4((uint64_t)v26, v14 + 16);
      sub_1005057FC((uint64_t *)&unk_10167C2B0);
      sub_1005057FC(&qword_1016A7030);
      uint64_t v22 = a1;
      sub_100523288(&qword_1016A6FC0, (uint64_t *)&unk_10167C2B0);
      sub_101017030();
      ForEach<>.init(_:id:content:)();
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v11, v7, v3);
      swift_storeEnumTagMultiPayload();
      sub_1005057FC(&qword_1016A6FF0);
      sub_101016BF8();
      sub_101017124();
      _ConditionalContent<>.init(storage:)();
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
    else
    {
      id v15 = [self mainBundle];
      NSString v16 = String._bridgeToObjectiveC()();
      NSString v17 = String._bridgeToObjectiveC()();
      id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;

      v24[0] = v19;
      v24[1] = v21;
      char v25 = 1;
      sub_101016C34();
      sub_101016C88();
      _ConditionalContent<>.init(storage:)();
      sub_100522E9C((uint64_t)v26, (uint64_t)v11, &qword_1016A6FF0);
      swift_storeEnumTagMultiPayload();
      sub_1005057FC(&qword_1016A6FF0);
      sub_101016BF8();
      sub_101017124();
      _ConditionalContent<>.init(storage:)();
      return sub_100522F00((uint64_t)v26, &qword_1016A6FF0);
    }
  }
}

uint64_t sub_10100E8F0@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *(void **)a2;
  swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(a2 + 32);
  long long v16 = *(_OWORD *)(a2 + 40);
  id v8 = v6;
  id v9 = v5;
  sub_1005057FC(&qword_101684970);
  State.projectedValue.getter();
  long long v15 = v17;
  uint64_t v10 = v18;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v12 = swift_getKeyPath();
  *(void *)&long long v17 = v8;
  type metadata accessor for CRLCollaborationParticipant(0);
  sub_101016290(&qword_1016A6F90, (void (*)(uint64_t))type metadata accessor for CRLCollaborationParticipant);
  *((void *)&v17 + 1) = ObservedObject.init(wrappedValue:)();
  uint64_t v18 = v13;
  uint64_t v20 = v7;
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  State.init(wrappedValue:)();
  char v21 = v16;
  uint64_t v22 = *((void *)&v16 + 1);
  long long v23 = v15;
  uint64_t v24 = v10;
  uint64_t v25 = v19;
  uint64_t v26 = KeyPath;
  char v27 = 0;
  uint64_t v28 = v12;
  char v29 = 0;
  sub_101017160((uint64_t)&v17, a3);
  *(_OWORD *)(a3 + 120) = xmmword_101193230;
  *(_OWORD *)(a3 + 136) = xmmword_1011C2A10;
  *(unsigned char *)(a3 + 152) = 0;
  return sub_101017198((uint64_t)&v17);
}

uint64_t sub_10100EAA4@<X0>(uint64_t a1@<X8>)
{
  sub_10052E310();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Font.footnote.getter();
  uint64_t v7 = Text.font(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  swift_release();
  sub_1006A7D28(v2, v4, v6);
  swift_bridgeObjectRelease();
  LOBYTE(v2) = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v22 = static Color.secondary.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  *(unsigned char *)(a1 + 32) = v2;
  *(void *)(a1 + 40) = v15;
  *(void *)(a1 + 48) = v17;
  *(void *)(a1 + 56) = v19;
  *(void *)(a1 + 64) = v21;
  *(unsigned char *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = KeyPath;
  *(void *)(a1 + 88) = v22;
  *(void *)(a1 + 96) = result;
  *(void *)(a1 + 104) = 10;
  *(unsigned char *)(a1 + 112) = 0;
  return result;
}

uint64_t sub_10100EBF8@<X0>(uint64_t a1@<X8>)
{
  return sub_10100EAA4(a1);
}

uint64_t sub_10100EC00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v3 - 8, v4);
  char v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  char v10 = (char *)&v33 - v9;
  uint64_t v11 = type metadata accessor for AttributedString();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for AttributeContainer();
  uint64_t v36 = *(void *)(v16 - 8);
  uint64_t v37 = v16;
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  long long v23 = (char *)&v33 - v22;
  uint64_t v38 = v1;
  swift_bridgeObjectRetain();
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  AttributedString.init(stringLiteral:)();
  uint64_t v35 = sub_101016290(&qword_1016A72A8, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  uint64_t v40 = a1;
  AttributedString.append<A>(_:)();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v39 = v12 + 8;
  uint64_t v34 = v24;
  v24(v15, v11);
  AttributeContainer.init()();
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  URL.init(string:)();
  uint64_t v25 = type metadata accessor for URL();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v6, 1, v25);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v10, v6, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v10, 0, 1, v25);
    sub_10101952C();
    AttributeContainer.subscript.setter();
    uint64_t v28 = swift_getKeyPath();
    __chkstk_darwin(v28, v29);
    *(&v33 - 2) = v30;
    swift_getKeyPath();
    uint64_t v42 = static Color.accentColor.getter();
    sub_101019624();
    AttributeContainer.subscript.setter();
    uint64_t v31 = v37;
    uint64_t v32 = v36;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v23, v19, v37);
    swift_bridgeObjectRetain();
    AttributedString.init(_:attributes:)();
    AttributedString.append<A>(_:)();
    v34(v15, v11);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v19, v31);
  }
  return result;
}

uint64_t sub_10100F060@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v74 = a1;
  uint64_t v3 = type metadata accessor for AccessibilityActionKind();
  uint64_t v75 = *(void *)(v3 - 8);
  uint64_t v76 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v73 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_1016A7248);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6, v8);
  uint64_t v68 = (uint64_t *)((char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v67 = type metadata accessor for OpenURLAction();
  uint64_t v10 = *(void *)(v67 - 8);
  __chkstk_darwin(v67, v11);
  uint64_t v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AttributedString();
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005057FC(&qword_1016A7250);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18, v20);
  uint64_t v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1005057FC(&qword_1016A7258) - 8;
  __chkstk_darwin(v66, v23);
  uint64_t v64 = (uint64_t)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1005057FC(&qword_1016A7260) - 8;
  __chkstk_darwin(v71, v25);
  uint64_t v65 = (uint64_t)&v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1005057FC(&qword_1016A7268);
  __chkstk_darwin(v72, v27);
  id v69 = v1;
  uint64_t v70 = (uint64_t)&v62 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10100EC00((uint64_t)v17);
  uint64_t v29 = Text.init(_:)();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  char v35 = v34 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  sub_101016D84(v2, v77);
  uint64_t v36 = swift_allocObject();
  sub_1010191E4((uint64_t)v77, v36 + 16);
  OpenURLAction.init(handler:)();
  uint64_t v37 = v68;
  uint64_t v38 = (char *)v68 + *(int *)(v7 + 36);
  uint64_t v39 = v13;
  uint64_t v40 = v13;
  uint64_t v41 = v67;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v38, v39, v67);
  uint64_t *v37 = KeyPath;
  sub_100522E9C((uint64_t)v37, (uint64_t)&v22[*(int *)(v19 + 44)], &qword_1016A7248);
  *(void *)uint64_t v22 = v29;
  *((void *)v22 + 1) = v31;
  v22[16] = v35;
  *((void *)v22 + 3) = v33;
  sub_10073F0E0(v29, v31, v35);
  swift_bridgeObjectRetain();
  sub_100522F00((uint64_t)v37, &qword_1016A7248);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v40, v41);
  sub_1006A7D28(v29, v31, v35);
  swift_bridgeObjectRelease();
  uint64_t v42 = swift_getKeyPath();
  uint64_t v43 = v64;
  sub_100522E9C((uint64_t)v22, v64, &qword_1016A7250);
  uint64_t v44 = v43 + *(int *)(v66 + 44);
  *(void *)uint64_t v44 = v42;
  *(unsigned char *)(v44 + 8) = 0;
  sub_100522F00((uint64_t)v22, &qword_1016A7250);
  uint64_t v45 = static Font.footnote.getter();
  uint64_t v46 = swift_getKeyPath();
  uint64_t v47 = v65;
  sub_100522E9C(v43, v65, &qword_1016A7258);
  uint64_t v48 = (uint64_t *)(v47 + *(int *)(v71 + 44));
  *uint64_t v48 = v46;
  v48[1] = v45;
  sub_100522F00(v43, &qword_1016A7258);
  LOBYTE(v45) = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  uint64_t v57 = v70;
  sub_100522E9C(v47, v70, &qword_1016A7260);
  uint64_t v58 = v57 + *(int *)(v72 + 36);
  *(unsigned char *)uint64_t v58 = v45;
  *(void *)(v58 + 8) = v50;
  *(void *)(v58 + 16) = v52;
  *(void *)(v58 + 24) = v54;
  *(void *)(v58 + 32) = v56;
  *(unsigned char *)(v58 + 40) = 0;
  sub_100522F00(v47, &qword_1016A7260);
  uint64_t v59 = v73;
  static AccessibilityActionKind.default.getter();
  sub_101016D84(v69, v77);
  uint64_t v60 = swift_allocObject();
  sub_1010191E4((uint64_t)v77, v60 + 16);
  sub_101019294();
  View.accessibilityAction(_:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v59, v76);
  return sub_100522F00(v57, &qword_1016A7268);
}

uint64_t sub_10100F674(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OpenURLAction();
  __n128 v4 = __chkstk_darwin(v2, v3);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  return EnvironmentValues.openURL.setter();
}

uint64_t sub_10100F73C()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    sub_1005374F4();
    uint64_t Strong = swift_unknownObjectRelease();
  }

  return static OpenURLAction.Result.handled.getter(Strong);
}

uint64_t sub_10100F78C()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = *(void **)(result + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController);
    if (v2)
    {
      uint64_t v3 = qword_10166FBE0;
      __n128 v4 = v2;
      if (v3 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v5 = (id)static OS_os_log.shareState;
      uint64_t v6 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v6, (uint64_t)"Dismissing Gelato Interstitial popover", 38, 2, (uint64_t)_swiftEmptyArrayStorage);

      uint64_t v7 = (id *)&v4[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem];
      swift_beginAccess();
      if (*v7) {
        [*v7 dismissPopoverAnimated:1 completion:0];
      }
    }
    sub_100733BF8(v1, (uint64_t)sub_10053762C, 0);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10100F8DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v94 = a1;
  uint64_t v93 = type metadata accessor for AccessibilityTraits();
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93, v3);
  uint64_t v91 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_101687FD0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v85 = (uint64_t)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for PersonNameComponents();
  uint64_t v84 = *(void *)(v83 - 8);
  __chkstk_darwin(v83, v8);
  id v81 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v10 = *(void *)(v87 - 8);
  __chkstk_darwin(v87, v11);
  uint64_t v13 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_1016A7128);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005057FC(&qword_1016A7130);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1005057FC(&qword_1016A7138);
  uint64_t v22 = *(void *)(v82 - 8);
  __chkstk_darwin(v82, v23);
  uint64_t v25 = (char *)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_1005057FC(&qword_1016A7140);
  __chkstk_darwin(v90, v26);
  uint64_t v28 = (char *)&v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29, v30);
  uint64_t v89 = (char *)&v80 - v31;
  __chkstk_darwin(v32, v33);
  uint64_t v88 = (char *)&v80 - v34;
  *(void *)uint64_t v17 = static VerticalAlignment.center.getter();
  *((void *)v17 + 1) = 0;
  v17[16] = 0;
  uint64_t v35 = sub_1005057FC(&qword_1016A7148);
  sub_1010101D0((uint64_t)&v17[*(int *)(v35 + 44)]);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_100522E9C((uint64_t)v17, (uint64_t)v21, &qword_1016A7128);
  uint64_t v36 = &v21[*(int *)(v18 + 36)];
  long long v37 = v104;
  *((_OWORD *)v36 + 4) = v103;
  *((_OWORD *)v36 + 5) = v37;
  *((_OWORD *)v36 + 6) = v105;
  long long v38 = v100;
  *(_OWORD *)uint64_t v36 = v99;
  *((_OWORD *)v36 + 1) = v38;
  long long v39 = v102;
  *((_OWORD *)v36 + 2) = v101;
  *((_OWORD *)v36 + 3) = v39;
  sub_100522F00((uint64_t)v17, &qword_1016A7128);
  static AccessibilityChildBehavior.combine.getter();
  unint64_t v40 = sub_101018AF0();
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v87);
  uint64_t v41 = v83;
  sub_100522F00((uint64_t)v21, &qword_1016A7130);
  uint64_t v97 = sub_101010C64();
  uint64_t v98 = v42;
  uint64_t v95 = v18;
  unint64_t v96 = v40;
  uint64_t v43 = v84;
  swift_getOpaqueTypeConformance2();
  unint64_t v44 = sub_10052E310();
  uint64_t v87 = (uint64_t)v28;
  uint64_t v45 = v82;
  unint64_t v86 = v44;
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v45);
  sub_1005057FC(&qword_101692EF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  id v47 = *(id *)(v2 + 32);
  uint64_t v48 = v85;
  sub_1007014C4(v85);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v48, 1, v41) == 1)
  {
    sub_100522F00(v48, &qword_101687FD0);
LABEL_8:
    uint64_t v53 = sub_100701F80();
    unint64_t v55 = v57;
    goto LABEL_9;
  }
  uint64_t v49 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v81, v48, v41);
  uint64_t v50 = self;
  Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  id v52 = [v50 localizedStringFromPersonNameComponents:isa style:1 options:0];

  uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v55 = v54;

  if ((v55 & 0x2000000000000000) != 0) {
    uint64_t v56 = HIBYTE(v55) & 0xF;
  }
  else {
    uint64_t v56 = v53 & 0xFFFFFFFFFFFFLL;
  }
  (*(void (**)(char *, uint64_t))(v43 + 8))(v49, v41);
  if (!v56)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_9:

  *(void *)(inited + 32) = v53;
  *(void *)(inited + 40) = v55;
  id v58 = *(id *)(v2 + 32);
  uint64_t v59 = sub_100701F80();
  uint64_t v61 = v60;

  *(void *)(inited + 48) = v59;
  *(void *)(inited + 56) = v61;
  id v62 = sub_1010123E0();
  uint64_t v64 = v63;
  *(void *)(inited + 64) = v62;
  *(void *)(inited + 72) = v63;
  swift_bridgeObjectRetain();
  uint64_t v65 = sub_100F61B70(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v67 = *((void *)v65 + 2);
  unint64_t v66 = *((void *)v65 + 3);
  unint64_t v68 = v67 + 1;
  if (v67 >= v66 >> 1) {
    uint64_t v65 = sub_100F61B70((double *)(v66 > 1), v67 + 1, 1, v65);
  }
  *((void *)v65 + 2) = v68;
  id v69 = &v65[2 * v67];
  *((void *)v69 + 4) = v53;
  *((void *)v69 + 5) = v55;
  unint64_t v70 = *((void *)v65 + 3);
  swift_bridgeObjectRetain();
  if (v68 >= v70 >> 1) {
    uint64_t v65 = sub_100F61B70((double *)(v70 > 1), v67 + 2, 1, v65);
  }
  *((void *)v65 + 2) = v67 + 2;
  uint64_t v71 = &v65[2 * v68];
  *((void *)v71 + 4) = v59;
  *((void *)v71 + 5) = v61;
  if (v64)
  {
    unint64_t v72 = *((void *)v65 + 2);
    unint64_t v73 = *((void *)v65 + 3);
    swift_bridgeObjectRetain();
    if (v72 >= v73 >> 1) {
      uint64_t v65 = sub_100F61B70((double *)(v73 > 1), v72 + 1, 1, v65);
    }
    *((void *)v65 + 2) = v72 + 1;
    uint64_t v74 = &v65[2 * v72];
    *((void *)v74 + 4) = v62;
    *((void *)v74 + 5) = v64;
  }
  swift_release();
  uint64_t v75 = (uint64_t)v89;
  uint64_t v76 = v87;
  ModifiedContent<>.accessibilityInputLabels<A>(_:)();
  swift_bridgeObjectRelease();
  sub_100522F00(v76, &qword_1016A7140);
  uint64_t v77 = v91;
  static AccessibilityTraits.isButton.getter();
  uint64_t v78 = (uint64_t)v88;
  ModifiedContent<>.accessibilityRemoveTraits(_:)();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v77, v93);
  sub_100522F00(v75, &qword_1016A7140);
  return sub_10051B3EC(v78, v94, &qword_1016A7140);
}

uint64_t sub_1010101D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1005057FC(&qword_1016A7160);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v23 - v9;
  uint64_t v11 = sub_1005057FC(&qword_1016A7168);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v23 - v17;
  sub_1010103DC((uint64_t)&v23 - v17);
  sub_1010108C0();
  sub_100522E9C((uint64_t)v18, (uint64_t)v14, &qword_1016A7168);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v19(v6, v10, v2);
  sub_100522E9C((uint64_t)v14, a1, &qword_1016A7168);
  uint64_t v20 = sub_1005057FC(&qword_1016A7170);
  v19((char *)(a1 + *(int *)(v20 + 48)), v6, v2);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v3 + 8);
  v21(v10, v2);
  sub_100522F00((uint64_t)v18, &qword_1016A7168);
  v21(v6, v2);
  return sub_100522F00((uint64_t)v14, &qword_1016A7168);
}

uint64_t sub_1010103DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v50 = a1;
  uint64_t v3 = type metadata accessor for CRLCollaborationParticipantRowView(0);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v47 = *(void *)(v49 + 64);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v44 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for BorderlessButtonStyle();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_1016A71B0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC(&qword_1016A71B8);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v45 = v15;
  uint64_t v46 = v16;
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1005057FC(&qword_1016A71C0);
  uint64_t v43 = *(void *)(v48 - 8);
  __chkstk_darwin(v48, v20);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v14 = static VerticalAlignment.center.getter();
  *((void *)v14 + 1) = 0;
  unsigned char v14[16] = 0;
  uint64_t v23 = sub_1005057FC(&qword_1016A71C8);
  sub_101010D6C(v2, (uint64_t)&v14[*(int *)(v23 + 44)]);
  BorderlessButtonStyle.init()();
  uint64_t v24 = sub_100523288(&qword_1016A71D0, &qword_1016A71B0);
  uint64_t v25 = sub_101016290((unint64_t *)&qword_101682C28, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  sub_100522F00((uint64_t)v14, &qword_1016A71B0);
  uint64_t v26 = v44;
  sub_101016E78(v2, v44, type metadata accessor for CRLCollaborationParticipantRowView);
  unint64_t v27 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v28 = swift_allocObject();
  sub_101018BE4(v26, v28 + v27, type metadata accessor for CRLCollaborationParticipantRowView);
  uint64_t v51 = v11;
  uint64_t v52 = v6;
  uint64_t v53 = v24;
  uint64_t v54 = v25;
  swift_getOpaqueTypeConformance2();
  uint64_t v29 = v45;
  View.onTapGesture(count:perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v19, v29);
  LOBYTE(v19) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v38 = v43;
  uint64_t v39 = v50;
  uint64_t v40 = v48;
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 16))(v50, v22, v48);
  uint64_t v41 = v39 + *(int *)(sub_1005057FC(&qword_1016A7168) + 36);
  *(unsigned char *)uint64_t v41 = (_BYTE)v19;
  *(void *)(v41 + 8) = v31;
  *(void *)(v41 + 16) = v33;
  *(void *)(v41 + 24) = v35;
  *(void *)(v41 + 32) = v37;
  *(unsigned char *)(v41 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v22, v40);
}

uint64_t sub_1010108C0()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v5 = [v0 mainBundle];
  NSString v6 = String._bridgeToObjectiveC()();
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v5 localizedStringForKey:v6 value:v7 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = [v0 mainBundle];
  NSString v10 = String._bridgeToObjectiveC()();
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v9 localizedStringForKey:v10 value:v11 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v13 = [v0 mainBundle];
  NSString v14 = String._bridgeToObjectiveC()();
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [v13 localizedStringForKey:v14 value:v15 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1005057FC(&qword_1016A7178);
  sub_100523288(&qword_1016A7180, &qword_1016A7178);
  Menu.init(content:label:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_101010C64()
{
  sub_1005057FC(&qword_101692EF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  id v2 = *(id *)(v0 + 32);
  uint64_t v3 = sub_100701F80();
  uint64_t v5 = v4;

  *(void *)(inited + 32) = v3;
  *(void *)(inited + 40) = v5;
  *(void *)(inited + 48) = sub_1010123E0();
  *(void *)(inited + 56) = v6;
  id v7 = [v2 collaboratorColorName];
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  *(void *)(inited + 64) = v8;
  *(void *)(inited + 72) = v10;
  uint64_t v11 = sub_1009D7100(inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101674580);
  swift_arrayDestroy();
  return v11;
}

uint64_t sub_101010D6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v79 = a2;
  uint64_t v3 = sub_1005057FC(&qword_1016808E0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v76 = &v60[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016808E8);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v75 = &v60[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v78 = sub_1005057FC(&qword_1016A71D8) - 8;
  __chkstk_darwin(v78, v9);
  uint64_t v74 = &v60[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11, v12);
  uint64_t v77 = &v60[-v13];
  uint64_t v14 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = &v60[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = sub_1005057FC(&qword_1016A71E0);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v21);
  uint64_t v23 = &v60[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = sub_1005057FC(&qword_1016A71E8);
  __chkstk_darwin(v24 - 8, v25);
  unint64_t v66 = &v60[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)&double v29 = __chkstk_darwin(v27, v28).n128_u64[0];
  unint64_t v67 = &v60[-v30];
  id v31 = [*(id *)(a1 + 32) collaboratorColorForType:2 v29];
  id v32 = [v31 CGColor];

  uint64_t v86 = Color.init(cgColor:)();
  static AccessibilityChildBehavior.ignore.getter();
  unint64_t v33 = sub_101019094();
  View.accessibilityElement(children:)();
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v18, v14);
  swift_release();
  uint64_t v34 = a1;
  id v35 = [*(id *)(a1 + 32) collaboratorColorName];
  uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v38 = v37;

  uint64_t v86 = v36;
  uint64_t v87 = v38;
  uint64_t v80 = &type metadata for CRLUserColorBar;
  unint64_t v81 = v33;
  swift_getOpaqueTypeConformance2();
  sub_10052E310();
  uint64_t v39 = (uint64_t)v66;
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v23, v19);
  uint64_t v40 = v67;
  sub_10051B3EC(v39, (uint64_t)v67, &qword_1016A71E8);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  unint64_t v73 = v80;
  int v72 = v81;
  uint64_t v71 = v82;
  int v70 = v83;
  uint64_t v69 = v84;
  uint64_t v68 = v85;
  uint64_t v41 = *(void **)(v34 + 32);
  type metadata accessor for CRLCollaborationParticipant(0);
  sub_101016290(&qword_1016A6F90, (void (*)(uint64_t))type metadata accessor for CRLCollaborationParticipant);
  id v42 = v41;
  uint64_t v65 = ObservedObject.init(wrappedValue:)();
  uint64_t v44 = v43;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v64 = v86;
  int v63 = v87;
  uint64_t v62 = v88;
  int v61 = v89;
  uint64_t v45 = v90;
  uint64_t v46 = v91;
  uint64_t v47 = v76;
  sub_1010114B0((uint64_t)v76);
  uint64_t v48 = static Alignment.leading.getter();
  uint64_t v49 = v75;
  sub_1007B5BD4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v75, 0.0, 1, 0.0, 1, v48, v50);
  sub_100522F00((uint64_t)v47, &qword_1016808E0);
  uint64_t v51 = v74;
  sub_100522E9C((uint64_t)v49, (uint64_t)v74, (uint64_t *)&unk_1016808E8);
  v51[*(int *)(v78 + 44)] = 0;
  sub_100522F00((uint64_t)v49, (uint64_t *)&unk_1016808E8);
  uint64_t v52 = v77;
  sub_10051B3EC((uint64_t)v51, (uint64_t)v77, &qword_1016A71D8);
  sub_100522E9C((uint64_t)v40, v39, &qword_1016A71E8);
  sub_100522E9C((uint64_t)v52, (uint64_t)v51, &qword_1016A71D8);
  uint64_t v53 = v79;
  sub_100522E9C(v39, v79, &qword_1016A71E8);
  uint64_t v54 = (int *)sub_1005057FC(&qword_1016A71F8);
  uint64_t v55 = v53 + v54[12];
  *(void *)uint64_t v55 = 0;
  *(unsigned char *)(v55 + 8) = 1;
  *(void *)(v55 + 16) = v73;
  *(unsigned char *)(v55 + 24) = v72;
  *(void *)(v55 + 32) = v71;
  *(unsigned char *)(v55 + 40) = v70;
  *(void *)(v55 + 48) = v69;
  *(void *)(v55 + 56) = v68;
  uint64_t v56 = (uint64_t *)(v53 + v54[16]);
  *uint64_t v56 = v65;
  v56[1] = (uint64_t)v44;
  uint64_t v57 = v53 + v54[20];
  *(void *)uint64_t v57 = 0;
  *(unsigned char *)(v57 + 8) = 1;
  *(void *)(v57 + 16) = v64;
  *(unsigned char *)(v57 + 24) = v63;
  *(void *)(v57 + 32) = v62;
  *(unsigned char *)(v57 + 40) = v61;
  *(void *)(v57 + 48) = v45;
  *(void *)(v57 + 56) = v46;
  sub_100522E9C((uint64_t)v51, v53 + v54[24], &qword_1016A71D8);
  id v58 = v44;
  sub_100522F00((uint64_t)v52, &qword_1016A71D8);
  sub_100522F00((uint64_t)v40, &qword_1016A71E8);
  sub_100522F00((uint64_t)v51, &qword_1016A71D8);

  return sub_100522F00(v39, &qword_1016A71E8);
}

uint64_t sub_1010114B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v56 = sub_1005057FC(&qword_1016A7200);
  __chkstk_darwin(v56, v2);
  uint64_t v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v54 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1005057FC(&qword_1016A7208);
  __chkstk_darwin(v55, v9);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1005057FC(&qword_1016A7210);
  uint64_t v12 = *(void *)(v57 - 8);
  __chkstk_darwin(v57, v13);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v52 - v18;
  id v20 = sub_1010123E0();
  if (v21)
  {
    uint64_t v22 = (uint64_t)v20;
    uint64_t v23 = v21;
    uint64_t v52 = v5;
    uint64_t v53 = v12;
    id v24 = sub_1010123E0();
    if (v25)
    {
      uint64_t v26 = (uint64_t)v24;
      uint64_t v27 = v25;
      *(void *)uint64_t v11 = static HorizontalAlignment.leading.getter();
      *((void *)v11 + 1) = 0;
      v11[16] = 1;
      uint64_t v28 = sub_1005057FC(&qword_1016A7220);
      sub_101011EB8(v1, v22, v23, v26, v27, (uint64_t *)&v11[*(int *)(v28 + 44)]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      static AccessibilityChildBehavior.combine.getter();
      uint64_t v29 = sub_100523288(&qword_1016A7218, &qword_1016A7208);
      uint64_t v30 = v55;
      View.accessibilityElement(children:)();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v8, v52);
      sub_100522F00((uint64_t)v11, &qword_1016A7208);
      uint64_t v31 = v53;
      uint64_t v32 = v57;
      (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v19, v15, v57);
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v4, v19, v32);
      swift_storeEnumTagMultiPayload();
      sub_1005057FC(&qword_1016A63F0);
      uint64_t v59 = v30;
      uint64_t v60 = v29;
      swift_getOpaqueTypeConformance2();
      sub_101019470((unint64_t *)&qword_1016A63F8, &qword_1016A63F0, &qword_1016A6400, &qword_1016A6408);
      _ConditionalContent<>.init(storage:)();
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v19, v32);
    }
    swift_bridgeObjectRelease();
  }
  id v34 = *(id *)(v1 + 32);
  uint64_t v35 = sub_100701F80();
  uint64_t v37 = v36;

  uint64_t v59 = v35;
  uint64_t v60 = v37;
  sub_10052E310();
  uint64_t v38 = Text.init<A>(_:)();
  uint64_t v40 = v39;
  char v42 = v41 & 1;
  static Color.primary.getter();
  uint64_t v43 = Text.foregroundColor(_:)();
  uint64_t v45 = v44;
  char v47 = v46;
  uint64_t v49 = v48;
  swift_release();
  sub_1006A7D28(v38, v40, v42);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)uint64_t v4 = v43;
  *((void *)v4 + 1) = v45;
  v4[16] = v47 & 1;
  *((void *)v4 + 3) = v49;
  *((void *)v4 + 4) = KeyPath;
  *((void *)v4 + 5) = 1;
  v4[48] = 0;
  swift_storeEnumTagMultiPayload();
  sub_1005057FC(&qword_1016A63F0);
  uint64_t v51 = sub_100523288(&qword_1016A7218, &qword_1016A7208);
  uint64_t v59 = v55;
  uint64_t v60 = v51;
  swift_getOpaqueTypeConformance2();
  sub_101019470((unint64_t *)&qword_1016A63F8, &qword_1016A63F0, &qword_1016A6400, &qword_1016A6408);
  return _ConditionalContent<>.init(storage:)();
}

void sub_101011A00()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  char v46 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v41 - v8;
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v10 = (id)static OS_os_log.crlDefault;
  uint64_t v11 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v10, (uint64_t)&_mh_execute_header, v11, (uint64_t)"Navigating to collaborator cursor for user.", 43, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v12 = (void *)v1[4];
  swift_getKeyPath();
  swift_getKeyPath();
  id v13 = v12;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unint64_t v14 = v47;
  if (!(v47 >> 62))
  {
    uint64_t v15 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15) {
      goto LABEL_5;
    }
LABEL_32:

    swift_bridgeObjectRelease_n();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  if (!v15) {
    goto LABEL_32;
  }
LABEL_5:
  unint64_t v45 = v14 & 0xC000000000000001;
  id v41 = v13;
  char v42 = v1;
  if ((v14 & 0xC000000000000001) != 0)
  {
    uint64_t v16 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v16 = (char *)*(id *)(v14 + 32);
  }
  uint64_t v17 = v16;
  unint64_t v44 = v15 - 1;
  if (v15 != 1)
  {
    if (v15 >= 2)
    {
      if (v45 || (unint64_t v28 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10), v28 >= 2) && v44 < v28)
      {
        uint64_t v29 = 0;
        uint64_t v30 = (void (**)(char *, char *, uint64_t))(v3 + 16);
        uint64_t v31 = (void (**)(char *, uint64_t))(v3 + 8);
        unint64_t v43 = v14;
        do
        {
          if (v45) {
            uint64_t v32 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            uint64_t v32 = (char *)*(id *)(v14 + 8 * v29 + 40);
          }
          unint64_t v33 = v32;
          id v34 = &v17[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
          swift_beginAccess();
          uint64_t v35 = *v30;
          (*v30)(v9, v34, v2);
          uint64_t v36 = &v33[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
          swift_beginAccess();
          uint64_t v37 = v46;
          v35(v46, v36, v2);
          char v38 = static Date.< infix(_:_:)();
          uint64_t v39 = *v31;
          (*v31)(v37, v2);
          v39(v9, v2);
          if (v38) {
            uint64_t v40 = v17;
          }
          else {
            uint64_t v40 = v33;
          }
          if (v38) {
            uint64_t v17 = v33;
          }

          ++v29;
          unint64_t v14 = v43;
        }
        while (v44 != v29);
        goto LABEL_9;
      }
LABEL_36:
      __break(1u);
      return;
    }
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
LABEL_9:
  swift_bridgeObjectRelease_n();

  uint64_t v18 = *(char **)(*v42 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_collaboratorCursorCoordinator);
  uint64_t v19 = &v18[OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap];
  swift_beginAccess();
  uint64_t v20 = *(void *)v19;
  if (*(void *)(v20 + 16))
  {
    uint64_t v21 = (uint64_t)&v17[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID];
    uint64_t v22 = v17;
    uint64_t v23 = v18;
    swift_bridgeObjectRetain();
    unint64_t v24 = sub_100955FC8(v21);
    if (v25)
    {
      id v26 = *(id *)(*(void *)(v20 + 56) + 24 * v24 + 16);
      swift_bridgeObjectRelease();
      if (swift_unknownObjectWeakLoadStrong())
      {
        id v27 = v26;
        sub_1005373C0((uint64_t)v22, (uint64_t)v27);

        swift_unknownObjectRelease();
      }
      else
      {
      }
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  else
  {
  }
}

uint64_t sub_101011EB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v71 = a4;
  uint64_t v72 = a5;
  uint64_t v64 = a3;
  uint64_t v63 = a2;
  uint64_t v75 = a6;
  uint64_t v7 = sub_1005057FC(&qword_1016A7228);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v74 = (uint64_t)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  int v70 = (char *)&v59 - v12;
  __chkstk_darwin(v13, v14);
  uint64_t v73 = (uint64_t)&v59 - v15;
  uint64_t v16 = type metadata accessor for DynamicTypeSize();
  uint64_t v60 = v16;
  uint64_t v76 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = *(id *)(a1 + 32);
  uint64_t v21 = sub_100701F80();
  uint64_t v23 = v22;

  uint64_t v79 = v21;
  uint64_t v80 = v23;
  unint64_t v61 = sub_10052E310();
  uint64_t v24 = Text.init<A>(_:)();
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  static Color.primary.getter();
  uint64_t v69 = Text.foregroundColor(_:)();
  uint64_t v67 = v29;
  LOBYTE(v23) = v30;
  uint64_t v68 = v31;
  swift_release();
  int v66 = v23 & 1;
  sub_1006A7D28(v24, v26, v28);
  swift_bridgeObjectRelease();
  type metadata accessor for CRLCollaborationParticipantRowView(0);
  sub_100E03F74((uint64_t)v19);
  LOBYTE(v24) = DynamicTypeSize.isAccessibilitySize.getter();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v76 + 8);
  v76 += 8;
  v32(v19, v16);
  uint64_t v33 = 1;
  if (v24) {
    uint64_t v33 = 2;
  }
  uint64_t v65 = v33;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v79 = v63;
  uint64_t v80 = v64;
  swift_bridgeObjectRetain();
  uint64_t v34 = Text.init<A>(_:)();
  uint64_t v36 = v35;
  char v38 = v37 & 1;
  static Color.secondary.getter();
  uint64_t v63 = Text.foregroundColor(_:)();
  uint64_t v40 = v39;
  char v42 = v41;
  uint64_t v64 = v43;
  swift_release();
  sub_1006A7D28(v34, v36, v38);
  swift_bridgeObjectRelease();
  sub_100E03F74((uint64_t)v19);
  LOBYTE(v34) = DynamicTypeSize.isAccessibilitySize.getter();
  v32(v19, v60);
  uint64_t v44 = swift_getKeyPath();
  uint64_t v45 = static Font.caption.getter();
  uint64_t v46 = swift_getKeyPath();
  uint64_t v47 = v63;
  uint64_t v79 = v63;
  uint64_t v80 = v40;
  char v81 = v42 & 1;
  uint64_t v82 = v64;
  uint64_t v83 = v44;
  BOOL v84 = (v34 & 1) == 0;
  char v85 = v34 & 1;
  uint64_t v86 = v46;
  uint64_t v87 = v45;
  uint64_t v77 = v71;
  uint64_t v78 = v72;
  sub_1005057FC(&qword_1016A7230);
  sub_1010190F8();
  uint64_t v48 = (uint64_t)v70;
  View.accessibilityLabel<A>(_:)();
  sub_1006A7D28(v47, v40, v42 & 1);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v49 = v73;
  sub_10051B3EC(v48, v73, &qword_1016A7228);
  uint64_t v50 = v74;
  sub_100522E9C(v49, v74, &qword_1016A7228);
  uint64_t v51 = v75;
  uint64_t v52 = v69;
  uint64_t v53 = v67;
  *uint64_t v75 = v69;
  v51[1] = v53;
  char v54 = v66;
  *((unsigned char *)v51 + 16) = v66;
  uint64_t v55 = KeyPath;
  v51[3] = v68;
  v51[4] = v55;
  v51[5] = v65;
  *((unsigned char *)v51 + 48) = 0;
  uint64_t v56 = v51;
  uint64_t v57 = sub_1005057FC(&qword_1016A7240);
  sub_100522E9C(v50, (uint64_t)v56 + *(int *)(v57 + 48), &qword_1016A7228);
  sub_10073F0E0(v52, v53, v54);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100522F00(v49, &qword_1016A7228);
  sub_100522F00(v50, &qword_1016A7228);
  sub_1006A7D28(v52, v53, v54);
  swift_release();
  return swift_bridgeObjectRelease();
}

id sub_1010123E0()
{
  uint64_t v1 = &selRef_lineFragmentClosestToPoint_knobTag_;
  id v2 = [self mainBundle];
  uint64_t v3 = &selRef_lineFragmentClosestToPoint_knobTag_;
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v2 localizedStringForKey:v4 value:v5 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = *(void **)(v0 + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  id v8 = v7;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  id v9 = *(id *)(v0 + 32);
  LOBYTE(v6) = sub_1006E51DC(v9, v50);

  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
  {
    uint64_t v17 = _swiftEmptyArrayStorage;
    goto LABEL_5;
  }
  id v10 = [self mainBundle];
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v10 localizedStringForKey:v11 value:v12 table:0];

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  uint64_t v17 = sub_100F61B70(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v19 = *((void *)v17 + 2);
  unint64_t v18 = *((void *)v17 + 3);
  id v20 = (void *)(v19 + 1);
  if (v19 >= v18 >> 1) {
    goto LABEL_27;
  }
  while (1)
  {
    *((void *)v17 + 2) = v20;
    uint64_t v21 = &v17[2 * v19];
    *((void *)v21 + 4) = v14;
    *((void *)v21 + 5) = v16;
LABEL_5:
    if (*((unsigned char *)v9 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_isDocumentOwner) == 1)
    {
      id v22 = [self v1[111]];
      NSString v23 = String._bridgeToObjectiveC()();
      NSString v24 = String._bridgeToObjectiveC()();
      uint64_t v25 = v3;
      id v26 = [v22 v3[71] v23 v24];

      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v29 = v28;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v17 = sub_100F61B70(0, *((void *)v17 + 2) + 1, 1, v17);
      }
      unint64_t v31 = *((void *)v17 + 2);
      unint64_t v30 = *((void *)v17 + 3);
      uint64_t v3 = v25;
      if (v31 >= v30 >> 1) {
        uint64_t v17 = sub_100F61B70((double *)(v30 > 1), v31 + 1, 1, v17);
      }
      *((void *)v17 + 2) = v31 + 1;
      uint64_t v32 = &v17[2 * v31];
      *((void *)v32 + 4) = v27;
      *((void *)v32 + 5) = v29;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    id v33 = v9;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    if (v50 != 1) {
      break;
    }
    id v34 = [self v1[111]];
    NSString v35 = String._bridgeToObjectiveC()();
    NSString v36 = String._bridgeToObjectiveC()();
    id v37 = [v34 v3[71] v35 v36];

    uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v40 = v39;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v17 = sub_100F61B70(0, *((void *)v17 + 2) + 1, 1, v17);
    }
    unint64_t v42 = *((void *)v17 + 2);
    unint64_t v41 = *((void *)v17 + 3);
    if (v42 >= v41 >> 1) {
      uint64_t v17 = sub_100F61B70((double *)(v41 > 1), v42 + 1, 1, v17);
    }
    *((void *)v17 + 2) = v42 + 1;
    uint64_t v43 = &v17[2 * v42];
    *((void *)v43 + 4) = v38;
    *((void *)v43 + 5) = v40;
LABEL_18:
    id v9 = (id)*((void *)v17 + 4);
    uint64_t v14 = *((void *)v17 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v18 = *((void *)v17 + 2);
    if (v18 == 1) {
      goto LABEL_25;
    }
    uint64_t v44 = (char ***)(v17 + 7);
    unint64_t v19 = 1;
    uint64_t v16 = &type metadata for String;
    id v20 = &protocol witness table for String;
    uint64_t v3 = (char **)&protocol witness table for String;
    while (v19 < v18)
    {
      if (v14)
      {
        uint64_t v45 = (uint64_t)*(v44 - 1);
        uint64_t v1 = *v44;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        String.init<A>(_:)();
        String.append<A>(contentsOf:)();
        swift_bridgeObjectRelease();
        LOBYTE(v50) = v45;
        swift_bridgeObjectRetain();
        uint64_t v48 = String.init<A>(_:)();
        uint64_t v49 = v46;
        String.append<A>(contentsOf:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v9 = (id)v48;
        uint64_t v14 = v49;
        unint64_t v18 = *((void *)v17 + 2);
      }
      ++v19;
      v44 += 2;
      if (v19 == v18) {
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_27:
    uint64_t v17 = sub_100F61B70((double *)(v18 > 1), (int64_t)v20, 1, v17);
  }
  if (*((void *)v17 + 2)) {
    goto LABEL_18;
  }
  id v9 = 0;
LABEL_25:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_101012A28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v132 = a8;
  uint64_t v127 = a7;
  uint64_t v126 = a6;
  uint64_t v125 = a5;
  uint64_t v124 = a4;
  uint64_t v135 = a9;
  uint64_t v128 = sub_1005057FC(&qword_1016A7188);
  __chkstk_darwin(v128, v13);
  uint64_t v129 = (char *)&v124 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC(&qword_1016A7190);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v134 = (char *)&v124 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v133 = (uint64_t)&v124 - v20;
  uint64_t v21 = type metadata accessor for CRLCollaborationParticipantRowView(0);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void *)(v22 + 64);
  __chkstk_darwin(v21 - 8, v24);
  uint64_t v25 = (char *)&v124 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v27);
  uint64_t v29 = (char *)&v124 - v28;
  uint64_t v147 = sub_1005057FC((uint64_t *)&unk_10167D8D0);
  uint64_t v149 = *(void *)(v147 - 8);
  __chkstk_darwin(v147, v30);
  uint64_t v142 = (char *)&v124 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32, v33);
  uint64_t v141 = (char *)&v124 - v34;
  __chkstk_darwin(v35, v36);
  uint64_t v38 = (char *)&v124 - v37;
  uint64_t v146 = sub_1005057FC(&qword_1016A7198);
  __chkstk_darwin(v146, v39);
  uint64_t v140 = (uint64_t)&v124 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41, v42);
  uint64_t v44 = (char *)&v124 - v43;
  __chkstk_darwin(v45, v46);
  uint64_t v148 = (uint64_t)&v124 - v47;
  sub_101016E78(a1, (uint64_t)v29, type metadata accessor for CRLCollaborationParticipantRowView);
  uint64_t v48 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v49 = (v48 + 16) & ~v48;
  uint64_t v130 = v49 + v23;
  uint64_t v139 = v48 | 7;
  uint64_t v50 = swift_allocObject();
  uint64_t v131 = v49;
  uint64_t v51 = v50 + v49;
  unint64_t v137 = v29;
  uint64_t v52 = (uint64_t)v29;
  uint64_t v53 = a1;
  sub_101018BE4(v52, v51, type metadata accessor for CRLCollaborationParticipantRowView);
  uint64_t v150 = a2;
  uint64_t v151 = a3;
  uint64_t v54 = sub_1005057FC(&qword_10167D880);
  uint64_t v55 = sub_100523288(&qword_10167D878, &qword_10167D880);
  Button.init(action:label:)();
  uint64_t v56 = *(void **)(a1 + 48);
  swift_getKeyPath();
  swift_getKeyPath();
  id v57 = v56;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  uint64_t v58 = v152;
  if (v152)
  {
    uint64_t v59 = *(void **)(a1 + 32);
    type metadata accessor for CRLCollaborationParticipant(0);
    id v60 = v59;
    id v61 = v58;
    char v62 = static NSObject.== infix(_:_:)();

    sub_101016E78(a1, (uint64_t)v25, type metadata accessor for CRLCollaborationParticipantRowView);
    if (v62)
    {
      char v63 = 1;
      goto LABEL_6;
    }
  }
  else
  {
    sub_101016E78(a1, (uint64_t)v25, type metadata accessor for CRLCollaborationParticipantRowView);
  }
  uint64_t v64 = (void *)*((void *)v25 + 2);
  swift_getKeyPath();
  swift_getKeyPath();
  id v65 = v64;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  uint64_t v66 = (uint64_t)v152;
  id v67 = *((id *)v25 + 4);
  char v63 = sub_1006E51DC(v67, v66);

  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v68 = v149;
  uint64_t v138 = a10;
  sub_101016EE0((uint64_t)v25, type metadata accessor for CRLCollaborationParticipantRowView);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v70 = swift_allocObject();
  *(unsigned char *)(v70 + 16) = v63 & 1;
  uint64_t v71 = v68;
  uint64_t v72 = v68 + 16;
  uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
  uint64_t v74 = v147;
  uint64_t v144 = v73;
  uint64_t v145 = v72;
  v73(v44, v38, v147);
  uint64_t v75 = (uint64_t *)&v44[*(int *)(v146 + 36)];
  *uint64_t v75 = KeyPath;
  v75[1] = (uint64_t)sub_10080FD64;
  v75[2] = v70;
  uint64_t v76 = *(void (**)(char *, uint64_t))(v71 + 8);
  uint64_t v149 = v71 + 8;
  uint64_t v146 = (uint64_t)v76;
  v76(v38, v74);
  sub_10051B3EC((uint64_t)v44, v148, &qword_1016A7198);
  uint64_t v77 = *(void **)(a1 + 48);
  swift_getKeyPath();
  swift_getKeyPath();
  id v78 = v77;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  uint64_t v79 = v152;
  uint64_t v80 = v141;
  uint64_t v143 = v55;
  uint64_t v81 = v54;
  uint64_t v82 = (uint64_t)v137;
  uint64_t v136 = v81;
  if (v152)
  {
    sub_10050BF48(0, (unint64_t *)&qword_101672E50);
    id v83 = *(id *)(v53 + 32);
    char v84 = static NSObject.== infix(_:_:)();

    if (v84)
    {
      sub_101016E78(v53, v82, type metadata accessor for CRLCollaborationParticipantRowView);
      uint64_t v127 = v53;
      uint64_t v85 = swift_allocObject();
      uint64_t v86 = v131;
      uint64_t v87 = sub_101018BE4(v82, v85 + v131, type metadata accessor for CRLCollaborationParticipantRowView);
      __chkstk_darwin(v87, v88);
      uint64_t v89 = v125;
      *(&v124 - 2) = v124;
      *(&v124 - 1) = v89;
      Button.init(action:label:)();
      v144(v129, v80, v74);
      swift_storeEnumTagMultiPayload();
      sub_100523288(&qword_10167D8C8, (uint64_t *)&unk_10167D8D0);
      uint64_t v90 = v134;
      _ConditionalContent<>.init(storage:)();

      uint64_t v91 = v74;
      uint64_t v92 = v86;
      ((void (*)(char *, uint64_t))v146)(v80, v91);
      uint64_t v93 = sub_1005057FC(&qword_1016A71A0);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v90, 0, 1, v93);
      uint64_t v94 = (uint64_t)v90;
      uint64_t v95 = (uint64_t)v90;
      uint64_t v96 = v127;
      goto LABEL_12;
    }
  }
  uint64_t v97 = *(void **)(v53 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  id v98 = v97;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v152 != 1)
  {
    uint64_t v110 = sub_1005057FC(&qword_1016A71A0);
    uint64_t v107 = v133;
    (*(void (**)(void))(*(void *)(v110 - 8) + 56))();
    uint64_t v109 = v132;
    uint64_t v96 = v53;
    uint64_t v94 = (uint64_t)v134;
    uint64_t v108 = v135;
    uint64_t v92 = v131;
    goto LABEL_14;
  }
  sub_101016E78(v53, v82, type metadata accessor for CRLCollaborationParticipantRowView);
  uint64_t v99 = swift_allocObject();
  uint64_t v100 = v131;
  uint64_t v101 = sub_101018BE4(v82, v99 + v131, type metadata accessor for CRLCollaborationParticipantRowView);
  __chkstk_darwin(v101, v102);
  uint64_t v103 = v127;
  *(&v124 - 2) = v126;
  *(&v124 - 1) = v103;
  Button.init(action:label:)();
  v144(v129, v80, v74);
  swift_storeEnumTagMultiPayload();
  sub_100523288(&qword_10167D8C8, (uint64_t *)&unk_10167D8D0);
  long long v104 = v134;
  _ConditionalContent<>.init(storage:)();
  uint64_t v105 = v74;
  uint64_t v92 = v100;
  uint64_t v96 = v53;
  ((void (*)(char *, uint64_t))v146)(v80, v105);
  uint64_t v106 = sub_1005057FC(&qword_1016A71A0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v106 - 8) + 56))(v104, 0, 1, v106);
  uint64_t v94 = (uint64_t)v104;
  uint64_t v95 = (uint64_t)v104;
LABEL_12:
  uint64_t v107 = v133;
  sub_10051B3EC(v95, v133, &qword_1016A7190);
  uint64_t v108 = v135;
  uint64_t v109 = v132;
LABEL_14:
  sub_101016E78(v96, v82, type metadata accessor for CRLCollaborationParticipantRowView);
  uint64_t v111 = swift_allocObject();
  uint64_t v112 = sub_101018BE4(v82, v111 + v92, type metadata accessor for CRLCollaborationParticipantRowView);
  __chkstk_darwin(v112, v113);
  uint64_t v114 = v138;
  *(&v124 - 2) = v109;
  *(&v124 - 1) = v114;
  uint64_t v115 = v80;
  Button.init(action:label:)();
  uint64_t v116 = v140;
  sub_100522E9C(v148, v140, &qword_1016A7198);
  uint64_t v117 = v107;
  sub_100522E9C(v107, v94, &qword_1016A7190);
  uint64_t v118 = v142;
  uint64_t v119 = v147;
  uint64_t v120 = (void (*)(uint64_t, char *, uint64_t))v144;
  v144(v142, v115, v147);
  sub_100522E9C(v116, v108, &qword_1016A7198);
  uint64_t v121 = sub_1005057FC(&qword_1016A71A8);
  sub_100522E9C(v94, v108 + *(int *)(v121 + 48), &qword_1016A7190);
  v120(v108 + *(int *)(v121 + 64), v118, v119);
  uint64_t v122 = (void (*)(char *, uint64_t))v146;
  ((void (*)(char *, uint64_t))v146)(v115, v119);
  sub_100522F00(v117, &qword_1016A7190);
  sub_100522F00(v148, &qword_1016A7198);
  v122(v118, v119);
  sub_100522F00(v94, &qword_1016A7190);
  return sub_100522F00(v116, &qword_1016A7198);
}

void sub_1010137F4()
{
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.crlDefault;
  uint64_t v1 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v0, (uint64_t)&_mh_execute_header, v1, (uint64_t)"Unfollowing user.", 17, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    uint64_t v18 = &type metadata for CRLFeatureFlags;
    unint64_t v4 = sub_1005396A8();
    unint64_t v19 = v4;
    LOBYTE(v17[0]) = 12;
    char v5 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v17);
    if ((v5 & 1) == 0) {
      goto LABEL_16;
    }
    id v6 = *(void **)(*(void *)(v3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                  + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
    uint64_t v18 = &type metadata for CRLFeatureFlags;
    unint64_t v19 = v4;
    LOBYTE(v17[0]) = 12;
    id v7 = v6;
    char v8 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v17);
    if (v8)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (v17[0])
      {

        if (qword_10166FAE0 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v9 = (id)static OS_os_log.crlFollow;
        uint64_t v10 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

        sub_1007ECCE4(0);
      }
    }

    NSString v11 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController);
    if (v11)
    {
      uint64_t v12 = qword_10166FBE0;
      uint64_t v13 = v11;
      if (v12 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v14 = (id)static OS_os_log.shareState;
      uint64_t v15 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v15, (uint64_t)"Dismissing Gelato Interstitial popover", 38, 2, (uint64_t)_swiftEmptyArrayStorage);

      uint64_t v16 = (id *)&v13[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem];
      swift_beginAccess();
      if (*v16) {
        [*v16 dismissPopoverAnimated:1 completion:0];
      }
      swift_unknownObjectRelease();
    }
    else
    {
LABEL_16:
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_101013B2C()
{
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = (id)static OS_os_log.crlDefault;
  uint64_t v2 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v1, (uint64_t)&_mh_execute_header, v2, (uint64_t)"Following user.", 15, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    char v5 = *(void **)(v0 + 32);
    uint64_t v16 = &type metadata for CRLFeatureFlags;
    unint64_t v17 = sub_1005396A8();
    v15[0] = 12;
    id v6 = v5;
    LOBYTE(v5) = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v15);
    if (v5)
    {
      id v7 = objc_retain(*(id *)(*(void *)(v4 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                             + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator));
      sub_1007EDEA4(v6, 0);

      char v8 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController);
      if (v8)
      {
        uint64_t v9 = qword_10166FBE0;
        uint64_t v10 = v8;
        if (v9 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v11 = (id)static OS_os_log.shareState;
        uint64_t v12 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Dismissing Gelato Interstitial popover", 38, 2, (uint64_t)_swiftEmptyArrayStorage);

        uint64_t v13 = (id *)&v10[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem];
        swift_beginAccess();
        if (*v13) {
          [*v13 dismissPopoverAnimated:1 completion:0];
        }
      }
      if (qword_1016702B8 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_1005057FC(&qword_10167A2C0);
      sub_100556B74(v14, (uint64_t)qword_10171CE70);
      Tips.Event.sendDonation<>(_:)();
    }

    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_101013DBC(uint64_t a1)
{
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v2 = (id)static OS_os_log.crlDefault;
  uint64_t v3 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"Showing contact card for user.", 30, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v4 = *(void **)(*(void *)(a1 + 32) + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact);
  if (v4)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v6 = (void *)Strong;
      sub_10050BF48(0, (unint64_t *)&qword_101672600);
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v6;
      id v8 = v4;
      swift_unknownObjectRetain();
      uint64_t v14 = v7;
      uint64_t v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      uint64_t v10 = (void *)swift_allocObject();
      v10[2] = v8;
      v10[3] = v9;
      v10[4] = v6;
      aBlock[4] = sub_101019064;
      aBlock[5] = v10;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100679958;
      aBlock[3] = &unk_1015378D8;
      id v11 = _Block_copy(aBlock);
      id v12 = v8;
      swift_unknownObjectRetain();
      id v13 = v9;
      swift_release();
      [v6 dismissViewControllerAnimated:1 completion:v11];
      _Block_release(v11);

      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_101014008()
{
  return Label<>.init<A>(_:image:)();
}

uint64_t sub_101014080@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ColorSchemeContrast();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  id v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = sub_1005057FC(&qword_10167A398);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  Image.init(systemName:)();
  type metadata accessor for CRLCollaborationParticipantRowView(0);
  sub_100E03A18((uint64_t)v10);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for ColorSchemeContrast.standard(_:), v2);
  char v15 = static ColorSchemeContrast.== infix(_:_:)();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v3 + 8);
  v16(v6, v2);
  v16(v10, v2);
  if (v15) {
    static SymbolRenderingMode.palette.getter();
  }
  else {
    static SymbolRenderingMode.monochrome.getter();
  }
  uint64_t v17 = type metadata accessor for SymbolRenderingMode();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v14, 0, 1, v17);
  uint64_t v18 = Image.symbolRenderingMode(_:)();
  swift_release();
  uint64_t result = sub_100522F00((uint64_t)v14, &qword_10167A398);
  *a1 = v18;
  return result;
}

uint64_t sub_1010142D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = sub_1005057FC(&qword_1016A72D8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_1016A72E0);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v31 - v15;
  uint64_t v17 = sub_1005057FC(&qword_1016A72E8);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)&v31 - v23;
  sub_101014614((uint64_t)&v31 - v23);
  sub_101017160(a1, (uint64_t)v32);
  uint64_t v25 = swift_allocObject();
  sub_1010196E8((uint64_t)v32, v25 + 16);
  sub_1005057FC(&qword_1016A72F0);
  sub_101019774();
  Button.init(action:label:)();
  static Alignment.trailing.getter();
  _FrameLayout.init(width:height:alignment:)();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v12, v7, v3);
  uint64_t v26 = &v12[*(int *)(v9 + 44)];
  long long v27 = v32[1];
  *(_OWORD *)uint64_t v26 = v32[0];
  *((_OWORD *)v26 + 1) = v27;
  *((_OWORD *)v26 + 2) = v32[2];
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  sub_10051B3EC((uint64_t)v12, (uint64_t)v16, &qword_1016A72E0);
  sub_100522E9C((uint64_t)v24, (uint64_t)v20, &qword_1016A72E8);
  sub_100522E9C((uint64_t)v16, (uint64_t)v12, &qword_1016A72E0);
  uint64_t v28 = v31;
  sub_100522E9C((uint64_t)v20, v31, &qword_1016A72E8);
  uint64_t v29 = sub_1005057FC(&qword_1016A7300);
  sub_100522E9C((uint64_t)v12, v28 + *(int *)(v29 + 48), &qword_1016A72E0);
  sub_100522F00((uint64_t)v16, &qword_1016A72E0);
  sub_100522F00((uint64_t)v24, &qword_1016A72E8);
  sub_100522F00((uint64_t)v12, &qword_1016A72E0);
  return sub_100522F00((uint64_t)v20, &qword_1016A72E8);
}

uint64_t sub_101014614@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v38 = a1;
  uint64_t v3 = type metadata accessor for BorderlessButtonStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1005057FC(&qword_1016A7308);
  uint64_t v36 = *(void *)(v34 - 8);
  __chkstk_darwin(v34, v8);
  uint64_t v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1005057FC(&qword_1016A7310);
  uint64_t v35 = *(void *)(v37 - 8);
  __chkstk_darwin(v37, v11);
  uint64_t v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = static VerticalAlignment.center.getter();
  sub_101014A18(v2, (uint64_t)v44);
  v45[328] = 0;
  memcpy(&v45[7], v44, 0x140uLL);
  v43[0] = v14;
  v43[1] = 0;
  LOBYTE(v43[2]) = 0;
  memcpy((char *)&v43[2] + 1, v45, 0x147uLL);
  LOBYTE(v43[43]) = 0;
  BorderlessButtonStyle.init()();
  uint64_t v15 = sub_1005057FC(&qword_1016A7318);
  unint64_t v16 = sub_10101985C();
  uint64_t v17 = sub_101016290((unint64_t *)&qword_101682C28, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  memcpy(v46, v43, 0x159uLL);
  sub_101019920((uint64_t)v46);
  sub_101017160(v33[1], (uint64_t)v43);
  uint64_t v18 = swift_allocObject();
  sub_1010196E8((uint64_t)v43, v18 + 16);
  uint64_t v39 = v15;
  uint64_t v40 = v3;
  unint64_t v41 = v16;
  uint64_t v42 = v17;
  swift_getOpaqueTypeConformance2();
  uint64_t v19 = v34;
  View.onTapGesture(count:perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v19);
  LOBYTE(v14) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v28 = v35;
  uint64_t v30 = v37;
  uint64_t v29 = v38;
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 16))(v38, v13, v37);
  uint64_t v31 = v29 + *(int *)(sub_1005057FC(&qword_1016A72E8) + 36);
  *(unsigned char *)uint64_t v31 = v14;
  *(void *)(v31 + 8) = v21;
  *(void *)(v31 + 16) = v23;
  *(void *)(v31 + 24) = v25;
  *(void *)(v31 + 32) = v27;
  *(unsigned char *)(v31 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v13, v30);
}

void sub_101014A18(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + 16);
  id v4 = [v3 collaboratorColorForType:2];
  id v5 = [v4 CGColor];

  uint64_t v38 = Color.init(cgColor:)();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  type metadata accessor for CRLCollaborationParticipant(0);
  sub_101016290(&qword_1016A6F90, (void (*)(uint64_t))type metadata accessor for CRLCollaborationParticipant);
  id v6 = v3;
  uint64_t v7 = ObservedObject.init(wrappedValue:)();
  uint64_t v36 = v8;
  uint64_t v37 = v7;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  id v9 = v6;
  uint64_t v10 = sub_100701F80();
  uint64_t v12 = v11;

  *(void *)&long long v73 = v10;
  *((void *)&v73 + 1) = v12;
  sub_10052E310();
  uint64_t v13 = Text.init<A>(_:)();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  static Color.primary.getter();
  uint64_t v18 = Text.foregroundColor(_:)();
  uint64_t v20 = v19;
  LOBYTE(v4) = v21;
  swift_release();
  sub_1006A7D28(v13, v15, v17);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  static Alignment.leading.getter();
  sub_1007B5E00(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v73, 0.0, 1, 0.0, 1);
  sub_1006A7D28(v18, v20, v4 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  long long v45 = v82;
  long long v42 = v77;
  long long v43 = v79;
  long long v44 = v80;
  long long v39 = v74;
  long long v40 = v75;
  long long v41 = v76;
  long long v22 = v81;
  long long v23 = v81;
  v59[8] = v81;
  v59[9] = v82;
  v59[4] = v77;
  v59[5] = v78;
  long long v24 = v78;
  long long v25 = v78;
  v59[6] = v79;
  v59[7] = v80;
  long long v26 = v73;
  long long v27 = v73;
  v59[0] = v73;
  v59[1] = v74;
  long long v28 = v76;
  v59[2] = v75;
  v59[3] = v76;
  *(_OWORD *)(a2 + 264) = v80;
  *(_OWORD *)(a2 + 280) = v22;
  *(_OWORD *)(a2 + 296) = v45;
  *(_OWORD *)(a2 + 200) = v41;
  *(_OWORD *)(a2 + 216) = v42;
  *(_OWORD *)(a2 + 232) = v24;
  *(_OWORD *)(a2 + 248) = v43;
  *(_OWORD *)(a2 + 152) = v26;
  *(_OWORD *)(a2 + 168) = v39;
  *(_OWORD *)(a2 + 184) = v40;
  long long v81 = v23;
  long long v82 = v45;
  long long v77 = v42;
  long long v78 = v25;
  long long v79 = v43;
  long long v80 = v44;
  uint64_t v46 = v83;
  uint64_t v60 = v83;
  char v72 = 1;
  char v70 = v48;
  char v68 = v50;
  char v66 = 1;
  char v64 = v54;
  char v62 = v56;
  *(void *)(a2 + 312) = v83;
  char v29 = v72;
  *(_DWORD *)(a2 + 17) = *(_DWORD *)v71;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)&v71[3];
  char v30 = v70;
  *(_DWORD *)(a2 + 33) = *(_DWORD *)v69;
  *(_DWORD *)(a2 + 36) = *(_DWORD *)&v69[3];
  char v31 = v68;
  *(_DWORD *)(a2 + 49) = *(_DWORD *)v67;
  *(_DWORD *)(a2 + 52) = *(_DWORD *)&v67[3];
  char v32 = v66;
  int v33 = *(_DWORD *)v65;
  *(_DWORD *)(a2 + 100) = *(_DWORD *)&v65[3];
  *(_DWORD *)(a2 + 97) = v33;
  LOBYTE(v33) = v64;
  *(_DWORD *)(a2 + 116) = *(_DWORD *)&v63[3];
  *(_DWORD *)(a2 + 113) = *(_DWORD *)v63;
  char v34 = v62;
  *(_DWORD *)(a2 + 132) = *(_DWORD *)&v61[3];
  *(_DWORD *)(a2 + 129) = *(_DWORD *)v61;
  *(void *)a2 = v38;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = v29;
  *(void *)(a2 + 24) = v47;
  *(unsigned char *)(a2 + 32) = v30;
  *(void *)(a2 + 40) = v49;
  *(unsigned char *)(a2 + 48) = v31;
  *(void *)(a2 + 56) = v51;
  *(void *)(a2 + 64) = v52;
  *(void *)(a2 + 72) = v37;
  *(void *)(a2 + 80) = v36;
  *(void *)(a2 + 88) = 0;
  *(unsigned char *)(a2 + 96) = v32;
  *(void *)(a2 + 104) = v53;
  *(unsigned char *)(a2 + 112) = v33;
  *(void *)(a2 + 120) = v55;
  *(unsigned char *)(a2 + 128) = v34;
  *(void *)(a2 + 136) = v57;
  *(void *)(a2 + 144) = v58;
  uint64_t v83 = v46;
  long long v73 = v27;
  long long v74 = v39;
  long long v75 = v40;
  long long v76 = v28;
  swift_retain();
  id v35 = v36;
  sub_101019A44((uint64_t)v59);
  sub_101019A94((uint64_t)&v73);
  swift_release();
}

void sub_101014EDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v46 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  id v9 = (char *)&v41 - v8;
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v10 = (id)static OS_os_log.crlDefault;
  uint64_t v11 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v10, (uint64_t)&_mh_execute_header, v11, (uint64_t)"Navigating to collaborator cursor for user.", 43, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v12 = (void *)v1[2];
  swift_getKeyPath();
  swift_getKeyPath();
  id v13 = v12;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unint64_t v14 = v47;
  if (!(v47 >> 62))
  {
    uint64_t v15 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15) {
      goto LABEL_5;
    }
LABEL_32:

    swift_bridgeObjectRelease_n();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  if (!v15) {
    goto LABEL_32;
  }
LABEL_5:
  unint64_t v45 = v14 & 0xC000000000000001;
  id v41 = v13;
  long long v42 = v1;
  if ((v14 & 0xC000000000000001) != 0)
  {
    char v16 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_35;
    }
    char v16 = (char *)*(id *)(v14 + 32);
  }
  char v17 = v16;
  unint64_t v44 = v15 - 1;
  if (v15 != 1)
  {
    if (v15 >= 2)
    {
      if (v45 || (unint64_t v28 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10), v28 >= 2) && v44 < v28)
      {
        uint64_t v29 = 0;
        char v30 = (void (**)(char *, char *, uint64_t))(v3 + 16);
        char v31 = (void (**)(char *, uint64_t))(v3 + 8);
        unint64_t v43 = v14;
        do
        {
          if (v45) {
            char v32 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            char v32 = (char *)*(id *)(v14 + 8 * v29 + 40);
          }
          int v33 = v32;
          char v34 = &v17[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
          swift_beginAccess();
          id v35 = *v30;
          (*v30)(v9, v34, v2);
          uint64_t v36 = &v33[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
          swift_beginAccess();
          uint64_t v37 = v46;
          v35(v46, v36, v2);
          char v38 = static Date.< infix(_:_:)();
          long long v39 = *v31;
          (*v31)(v37, v2);
          v39(v9, v2);
          if (v38) {
            long long v40 = v17;
          }
          else {
            long long v40 = v33;
          }
          if (v38) {
            char v17 = v33;
          }

          ++v29;
          unint64_t v14 = v43;
        }
        while (v44 != v29);
        goto LABEL_9;
      }
LABEL_36:
      __break(1u);
      return;
    }
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
LABEL_9:
  swift_bridgeObjectRelease_n();

  uint64_t v18 = *(char **)(*v42 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_collaboratorCursorCoordinator);
  uint64_t v19 = &v18[OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap];
  swift_beginAccess();
  uint64_t v20 = *(void *)v19;
  if (*(void *)(v20 + 16))
  {
    uint64_t v21 = (uint64_t)&v17[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID];
    long long v22 = v17;
    long long v23 = v18;
    swift_bridgeObjectRetain();
    unint64_t v24 = sub_100955FC8(v21);
    if (v25)
    {
      id v26 = *(id *)(*(void *)(v20 + 56) + 24 * v24 + 16);
      swift_bridgeObjectRelease();
      if (swift_unknownObjectWeakLoadStrong())
      {
        id v27 = v26;
        sub_1005373C0((uint64_t)v22, (uint64_t)v27);

        swift_unknownObjectRelease();
      }
      else
      {
      }
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  else
  {
  }
}

void sub_101015394(uint64_t a1)
{
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v2 = (id)static OS_os_log.crlDefault;
  uint64_t v3 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"Showing contact card for user.", 30, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v4 = *(void **)(*(void *)(a1 + 16) + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact);
  if (v4)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v6 = (void *)Strong;
      sub_10050BF48(0, (unint64_t *)&qword_101672600);
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v6;
      id v8 = v4;
      swift_unknownObjectRetain();
      uint64_t v14 = v7;
      id v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      id v10 = (void *)swift_allocObject();
      v10[2] = v8;
      v10[3] = v9;
      v10[4] = v6;
      aBlock[4] = sub_10101A2E8;
      aBlock[5] = v10;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100679958;
      aBlock[3] = &unk_101537A30;
      uint64_t v11 = _Block_copy(aBlock);
      id v12 = v8;
      swift_unknownObjectRetain();
      id v13 = v9;
      swift_release();
      [v6 dismissViewControllerAnimated:1 completion:v11];
      _Block_release(v11);

      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1010155E0()
{
  Image.init(systemName:)();
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10052E310();
  View.accessibilityLabel<A>(_:)();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_101015718@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static VerticalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = sub_1005057FC(&qword_1016A72D0);
  return sub_1010142D0(v1, a1 + *(int *)(v3 + 44));
}

id sub_101015760@<X0>(void *a1@<X8>)
{
  NSString v2 = *(void **)(*(void *)(v1 + 8) + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact);
  *a1 = v2;
  return v2;
}

uint64_t sub_10101577C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4, v6);
  id v8 = (long long *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1005057FC(&qword_1016812E0);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9, v11);
  id v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_1016A7390);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (char *)v8 + *(int *)(v5 + 28);
  uint64_t v20 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v21 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v19, v20, v21);
  __asm { FMOV            V0.2D, #2.0 }
  *id v8 = _Q0;
  sub_101016E78((uint64_t)v8, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(void *)&v13[*(int *)(v10 + 60)] = a1;
  *(_WORD *)&v13[*(int *)(v10 + 64)] = 256;
  swift_retain();
  sub_101016EE0((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *((void *)&v31 + 1) = &type metadata for CRLFeatureFlags;
  *(void *)&long long v32 = sub_1005396A8();
  LOBYTE(v30) = 12;
  isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v30);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_100522E9C((uint64_t)v13, (uint64_t)v18, &qword_1016812E0);
  id v27 = &v18[*(int *)(v15 + 44)];
  long long v28 = v31;
  *(_OWORD *)id v27 = v30;
  *((_OWORD *)v27 + 1) = v28;
  *((_OWORD *)v27 + 2) = v32;
  sub_100522F00((uint64_t)v13, &qword_1016812E0);
  return sub_10051B3EC((uint64_t)v18, a2, &qword_1016A7390);
}

uint64_t sub_1010159FC@<X0>(uint64_t a1@<X8>)
{
  return sub_10101577C(*v1, a1);
}

id sub_101015A04(uint64_t a1, void *a2)
{
  id v3 = [objc_allocWithZone((Class)CNAvatarViewController) init];
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_101177E70;
  *(void *)(v4 + 32) = a2;
  specialized Array._endMutation()();
  sub_10050BF48(0, (unint64_t *)&qword_10167C580);
  id v5 = a2;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v3 setContacts:isa];

  return v3;
}

id sub_101015ADC(uint64_t a1)
{
  return sub_101015A04(a1, *v1);
}

uint64_t sub_101015AF0()
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)();
}

uint64_t sub_101015B2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10101A1D4();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_101015B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10101A1D4();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_101015BF4()
{
}

uint64_t sub_101015C1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1005057FC(&qword_1016A73D8);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4, v6);
  id v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v15 + 1) = &type metadata for CRLFeatureFlags;
  unint64_t v9 = sub_1005396A8();
  *(void *)&long long v16 = v9;
  LOBYTE(v14) = 12;
  isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v14);
  *((void *)&v15 + 1) = &type metadata for CRLFeatureFlags;
  *(void *)&long long v16 = v9;
  LOBYTE(v14) = 12;
  isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v14);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v10 = sub_1005057FC(&qword_1016A73E0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, a1, v10);
  uint64_t v11 = &v8[*(int *)(v5 + 44)];
  long long v12 = v15;
  *(_OWORD *)uint64_t v11 = v14;
  *((_OWORD *)v11 + 1) = v12;
  *((_OWORD *)v11 + 2) = v16;
  return sub_10051B3EC((uint64_t)v8, a2, &qword_1016A73D8);
}

uint64_t sub_101015DB0()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t sub_101015DD4@<X0>(uint64_t a1@<X8>)
{
  return sub_10100BA88(*(void *)(v1 + 16), a1);
}

uint64_t sub_101015DE0()
{
  uint64_t v2 = *(void *)(type metadata accessor for CRLActiveParticipantDetailView(0) - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100528488;
  return sub_10100CCC8(v3);
}

uint64_t sub_101015EB4()
{
  return sub_10100D328(*(void *)(v0 + 16));
}

uint64_t sub_101015EC0()
{
  uint64_t v1 = type metadata accessor for CRLActiveParticipantDetailView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);

  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 24);
  uint64_t v6 = type metadata accessor for Tips.Status();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  sub_1005057FC(&qword_1016A6E00);
  swift_release();
  uint64_t v8 = v0 + v3 + *(int *)(v1 + 28);
  sub_1005057FC(&qword_10169C9E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
  }
  else
  {
    swift_release();
  }
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1010160EC()
{
  return sub_101018ED8(type metadata accessor for CRLActiveParticipantDetailView, (uint64_t (*)(uint64_t))sub_10100D4AC);
}

uint64_t sub_101016118(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_101016150()
{
  unint64_t result = qword_1016A6F58;
  if (!qword_1016A6F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6F58);
  }
  return result;
}

unint64_t sub_1010161A4()
{
  unint64_t result = qword_1016A6F60;
  if (!qword_1016A6F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6F60);
  }
  return result;
}

id *sub_1010161F8(id *a1)
{
  return a1;
}

uint64_t sub_101016228(uint64_t a1, uint64_t a2)
{
  return a2;
}

id *sub_101016260(id *a1)
{
  return a1;
}

uint64_t sub_101016290(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for CRLActiveParticipantLegacyList(id *a1)
{
  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for CRLActiveParticipantLegacyList(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  id v6 = v4;
  swift_retain();
  swift_unknownObjectWeakCopyInit();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CRLActiveParticipantLegacyList(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  swift_unknownObjectWeakCopyAssign();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t initializeWithTake for CRLActiveParticipantLegacyList(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectWeakTakeInit();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for CRLActiveParticipantLegacyList(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_release();
  swift_unknownObjectWeakTakeAssign();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLActiveParticipantLegacyList(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLActiveParticipantLegacyList(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLActiveParticipantLegacyList()
{
  return &type metadata for CRLActiveParticipantLegacyList;
}

uint64_t destroy for CRLActiveParticipantList(id *a1)
{
  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for CRLActiveParticipantList(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v7;
  id v8 = v4;
  swift_retain();
  id v9 = v7;
  swift_unknownObjectWeakCopyInit();
  uint64_t v10 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v10;
  uint64_t v11 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CRLActiveParticipantList(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v7 = *(void **)(a2 + 32);
  id v8 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v7;
  id v9 = v7;

  swift_unknownObjectWeakCopyAssign();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t initializeWithTake for CRLActiveParticipantList(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_unknownObjectWeakTakeInit();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t assignWithTake for CRLActiveParticipantList(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_release();
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void **)(a1 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;

  swift_unknownObjectWeakTakeAssign();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLActiveParticipantList(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 81)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLActiveParticipantList(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 81) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLActiveParticipantList()
{
  return &type metadata for CRLActiveParticipantList;
}

uint64_t sub_101016984()
{
  return sub_100523288(&qword_1016A6F98, &qword_1016A6FA0);
}

uint64_t sub_1010169C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1010169DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1010169F8()
{
  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 97, 7);
}

uint64_t sub_101016A58(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  swift_unknownObjectWeakTakeInit();
  *(void *)(a2 + 48) = *(void *)(a1 + 48);
  long long v4 = *(_OWORD *)(a1 + 56);
  *(void *)(a2 + 72) = *(void *)(a1 + 72);
  *(_OWORD *)(a2 + 56) = v4;
  *(unsigned char *)(a2 + 80) = *(unsigned char *)(a1 + 80);
  return a2;
}

uint64_t sub_101016AC4@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10100DEC4(a1, v2 + 16, a2);
}

uint64_t sub_101016ACC()
{
  return sub_101016D18(&qword_1016A6FC8, &qword_1016A6FB8, (void (*)(void))sub_101016B08);
}

unint64_t sub_101016B08()
{
  unint64_t result = qword_1016A6FD0;
  if (!qword_1016A6FD0)
  {
    sub_100522D34(&qword_1016A6FD8);
    sub_101016290(&qword_1016A6FE0, (void (*)(uint64_t))type metadata accessor for CRLCollaborationParticipantRowView);
    sub_100523288(&qword_1016A6190, &qword_1016A6198);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A6FD0);
  }
  return result;
}

uint64_t type metadata accessor for CRLCollaborationParticipantRowView(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A70A8);
}

uint64_t sub_101016BF8()
{
  return sub_1010189A8(&qword_1016A6FF8, &qword_1016A6FF0, (void (*)(void))sub_101016C34, (void (*)(void))sub_101016C88);
}

unint64_t sub_101016C34()
{
  unint64_t result = qword_1016A7000;
  if (!qword_1016A7000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A7000);
  }
  return result;
}

unint64_t sub_101016C88()
{
  unint64_t result = qword_1016A7008;
  if (!qword_1016A7008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A7008);
  }
  return result;
}

uint64_t sub_101016CDC()
{
  return sub_101016D18(&qword_1016A7010, &qword_1016A6FA8, (void (*)(void))sub_101016ACC);
}

uint64_t sub_101016D18(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_101016D84(void *a1, void *a2)
{
  return a2;
}

uint64_t sub_101016DBC(uint64_t a1)
{
  return a1;
}

uint64_t sub_101016DEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.accessibilityVoiceOverEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_101016E1C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.accessibilitySwitchControlEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_101016E4C()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t sub_101016E78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_101016EE0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_101016F40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100701F80();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_101016F6C()
{
  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 81, 7);
}

uint64_t sub_101016FC4(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  swift_unknownObjectWeakTakeInit();
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 40);
  *(void *)(a2 + 56) = *(void *)(a1 + 56);
  *(_OWORD *)(a2 + 40) = v4;
  *(unsigned char *)(a2 + 64) = *(unsigned char *)(a1 + 64);
  return a2;
}

uint64_t sub_101017028@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10100E8F0(a1, v2 + 16, a2);
}

unint64_t sub_101017030()
{
  unint64_t result = qword_1016A7038;
  if (!qword_1016A7038)
  {
    sub_100522D34(&qword_1016A7030);
    sub_1010170D0();
    sub_100523288(&qword_1016A6190, &qword_1016A6198);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A7038);
  }
  return result;
}

unint64_t sub_1010170D0()
{
  unint64_t result = qword_1016A7040;
  if (!qword_1016A7040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A7040);
  }
  return result;
}

uint64_t sub_101017124()
{
  return sub_101016D18(&qword_1016A7048, &qword_1016A7020, (void (*)(void))sub_101017030);
}

uint64_t sub_101017160(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_101017198(uint64_t a1)
{
  return a1;
}

char *sub_1010171C8(char *a1, char **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    id v8 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v8;
    id v9 = a2[4];
    *((void *)a1 + 3) = a2[3];
    *((void *)a1 + 4) = v9;
    uint64_t v10 = a2[6];
    *((void *)a1 + 5) = a2[5];
    *((void *)a1 + 6) = v10;
    uint64_t v11 = v5;
    long long v12 = v8;
    id v13 = v9;
    long long v14 = v10;
    swift_unknownObjectWeakCopyInit();
    *((void *)a1 + 8) = a2[8];
    a1[72] = *((unsigned char *)a2 + 72);
    long long v15 = a2[11];
    *((void *)a1 + 10) = a2[10];
    *((void *)a1 + 11) = v15;
    long long v16 = a2[13];
    *((void *)a1 + 12) = a2[12];
    *((void *)a1 + 13) = v16;
    uint64_t v17 = (uint64_t)a2[15];
    *((void *)a1 + 14) = a2[14];
    LOBYTE(v10) = *((unsigned char *)a2 + 128);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_100E05E50(v17, (char)v10);
    *((void *)a1 + 15) = v17;
    a1[128] = (char)v10;
    uint64_t v18 = (uint64_t)a2[17];
    char v19 = *((unsigned char *)a2 + 144);
    sub_100E05E50(v18, v19);
    *((void *)a1 + 17) = v18;
    a1[144] = v19;
    uint64_t v20 = *(int *)(a3 + 52);
    uint64_t v21 = &a1[v20];
    long long v22 = (char **)((char *)a2 + v20);
    sub_1005057FC(&qword_10168F000);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *(void *)uint64_t v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = *(int *)(a3 + 56);
    char v25 = &a1[v24];
    id v26 = (char **)((char *)a2 + v24);
    sub_1005057FC(&qword_10169D6D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *(void *)char v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_101017438(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100E06018(*(void *)(a1 + 120), *(unsigned char *)(a1 + 128));
  sub_100E06018(*(void *)(a1 + 136), *(unsigned char *)(a1 + 144));
  uint64_t v4 = a1 + *(int *)(a2 + 52);
  sub_1005057FC(&qword_10168F000);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 56);
  sub_1005057FC(&qword_10169D6D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    id v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1010175C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  id v9 = *(void **)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v8;
  uint64_t v11 = *(void **)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = v10;
  long long v12 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v12;
  id v13 = v6;
  id v14 = v9;
  id v15 = v11;
  id v16 = v12;
  swift_unknownObjectWeakCopyInit();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v17 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v17;
  uint64_t v18 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v18;
  uint64_t v19 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  LOBYTE(v12) = *(unsigned char *)(a2 + 128);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100E05E50(v19, (char)v12);
  *(void *)(a1 + 120) = v19;
  *(unsigned char *)(a1 + 128) = (_BYTE)v12;
  uint64_t v20 = *(void *)(a2 + 136);
  char v21 = *(unsigned char *)(a2 + 144);
  sub_100E05E50(v20, v21);
  *(void *)(a1 + 136) = v20;
  *(unsigned char *)(a1 + 144) = v21;
  uint64_t v22 = *(int *)(a3 + 52);
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  sub_1005057FC(&qword_10168F000);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  }
  else
  {
    *uint64_t v23 = *v24;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = *(int *)(a3 + 56);
  uint64_t v27 = (void *)(a1 + v26);
  long long v28 = (void *)(a2 + v26);
  sub_1005057FC(&qword_10169D6D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v29 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  }
  else
  {
    *uint64_t v27 = *v28;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1010177E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  id v9 = *(void **)(a2 + 16);
  uint64_t v10 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v9;
  id v11 = v9;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  long long v12 = *(void **)(a2 + 32);
  id v13 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v12;
  id v14 = v12;

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  id v15 = *(void **)(a2 + 48);
  id v16 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v15;
  id v17 = v15;

  swift_unknownObjectWeakCopyAssign();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 120);
  char v19 = *(unsigned char *)(a2 + 128);
  sub_100E05E50(v18, v19);
  uint64_t v20 = *(void *)(a1 + 120);
  char v21 = *(unsigned char *)(a1 + 128);
  *(void *)(a1 + 120) = v18;
  *(unsigned char *)(a1 + 128) = v19;
  sub_100E06018(v20, v21);
  uint64_t v22 = *(void *)(a2 + 136);
  char v23 = *(unsigned char *)(a2 + 144);
  sub_100E05E50(v22, v23);
  uint64_t v24 = *(void *)(a1 + 136);
  char v25 = *(unsigned char *)(a1 + 144);
  *(void *)(a1 + 136) = v22;
  *(unsigned char *)(a1 + 144) = v23;
  sub_100E06018(v24, v25);
  if (a1 != a2)
  {
    uint64_t v26 = *(int *)(a3 + 52);
    uint64_t v27 = (void *)(a1 + v26);
    long long v28 = (void *)(a2 + v26);
    sub_100522F00(a1 + v26, &qword_10168F000);
    sub_1005057FC(&qword_10168F000);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    }
    else
    {
      *uint64_t v27 = *v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = *(int *)(a3 + 56);
    long long v31 = (void *)(a1 + v30);
    long long v32 = (void *)(a2 + v30);
    sub_100522F00(a1 + v30, &qword_10169D6D8);
    sub_1005057FC(&qword_10169D6D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v33 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
    }
    else
    {
      *long long v31 = *v32;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_101017AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_unknownObjectWeakTakeInit();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  long long v6 = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v7 = *(int *)(a3 + 52);
  id v8 = (void *)(a1 + v7);
  id v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 104) = v6;
  uint64_t v10 = sub_1005057FC(&qword_10168F000);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = *(int *)(a3 + 56);
  id v13 = (void *)(a1 + v12);
  id v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_1005057FC(&qword_10169D6D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  return a1;
}

uint64_t sub_101017C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void *)(a2 + 16);
  id v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;

  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void **)(a1 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v9;

  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v12 = *(void **)(a1 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v11;

  swift_unknownObjectWeakTakeAssign();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  uint64_t v13 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v13;
  swift_bridgeObjectRelease();
  char v14 = *(unsigned char *)(a2 + 128);
  uint64_t v15 = *(void *)(a1 + 120);
  char v16 = *(unsigned char *)(a1 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = v14;
  sub_100E06018(v15, v16);
  char v17 = *(unsigned char *)(a2 + 144);
  uint64_t v18 = *(void *)(a1 + 136);
  char v19 = *(unsigned char *)(a1 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = v17;
  sub_100E06018(v18, v19);
  if (a1 != a2)
  {
    uint64_t v20 = *(int *)(a3 + 52);
    char v21 = (void *)(a1 + v20);
    uint64_t v22 = (const void *)(a2 + v20);
    sub_100522F00(a1 + v20, &qword_10168F000);
    uint64_t v23 = sub_1005057FC(&qword_10168F000);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    uint64_t v25 = *(int *)(a3 + 56);
    uint64_t v26 = (void *)(a1 + v25);
    uint64_t v27 = (const void *)(a2 + v25);
    sub_100522F00(a1 + v25, &qword_10169D6D8);
    uint64_t v28 = sub_1005057FC(&qword_10169D6D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 32))(v26, v27, v29);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_101017F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_101017F14);
}

uint64_t sub_101017F14(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1005057FC(&qword_10168F008);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 52);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005057FC(&qword_1016A5FF0);
      char v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      char v16 = (char *)a1 + *(int *)(a3 + 56);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_101018048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10101805C);
}

void *sub_10101805C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1005057FC(&qword_10168F008);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 52);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005057FC(&qword_1016A5FF0);
      char v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      char v16 = (char *)v5 + *(int *)(a4 + 56);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_101018190()
{
  sub_1010182D8(319, (unint64_t *)&qword_10168F078, (void (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
  if (v0 <= 0x3F)
  {
    sub_1010182D8(319, (unint64_t *)&unk_1016A6080, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1010182D8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t destroy for CRLCollaborationParticipantLegacyRowView(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100E06018(*(void *)(a1 + 88), *(unsigned char *)(a1 + 96));
  uint64_t v2 = *(void *)(a1 + 104);
  char v3 = *(unsigned char *)(a1 + 112);

  return sub_100E06018(v2, v3);
}

uint64_t initializeWithCopy for CRLCollaborationParticipantLegacyRowView(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  unint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  long long v6 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v6;
  id v7 = v4;
  id v8 = v6;
  swift_unknownObjectWeakCopyInit();
  *(void *)(a1 + 32) = *(void *)(v2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(v2 + 40);
  uint64_t v9 = *(void *)(v2 + 56);
  *(void *)(a1 + 48) = *(void *)(v2 + 48);
  *(void *)(a1 + 56) = v9;
  uint64_t v10 = *(void *)(v2 + 72);
  *(void *)(a1 + 64) = *(void *)(v2 + 64);
  *(void *)(a1 + 72) = v10;
  uint64_t v11 = *(void *)(v2 + 88);
  *(void *)(a1 + 80) = *(void *)(v2 + 80);
  char v12 = *(unsigned char *)(v2 + 96);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100E05E50(v11, v12);
  *(void *)(a1 + 88) = v11;
  *(unsigned char *)(a1 + 96) = v12;
  uint64_t v13 = *(void *)(v2 + 104);
  LOBYTE(v2) = *(unsigned char *)(v2 + 112);
  sub_100E05E50(v13, v2);
  *(void *)(a1 + 104) = v13;
  *(unsigned char *)(a1 + 112) = v2;
  return a1;
}

uint64_t assignWithCopy for CRLCollaborationParticipantLegacyRowView(uint64_t a1, void **a2)
{
  uint64_t v2 = a2;
  unint64_t v4 = *a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *a2;
  id v6 = v4;

  *(void *)(a1 + 8) = v2[1];
  id v7 = v2[2];
  id v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  swift_unknownObjectWeakCopyAssign();
  *(void *)(a1 + 32) = v2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)v2 + 40);
  *(void *)(a1 + 48) = v2[6];
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = v2[7];
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = v2[8];
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = v2[9];
  *(void *)(a1 + 80) = v2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t)v2[11];
  char v11 = *((unsigned char *)v2 + 96);
  sub_100E05E50(v10, v11);
  uint64_t v12 = *(void *)(a1 + 88);
  char v13 = *(unsigned char *)(a1 + 96);
  *(void *)(a1 + 88) = v10;
  *(unsigned char *)(a1 + 96) = v11;
  sub_100E06018(v12, v13);
  uint64_t v14 = (uint64_t)v2[13];
  LOBYTE(v2) = *((unsigned char *)v2 + 112);
  sub_100E05E50(v14, (char)v2);
  uint64_t v15 = *(void *)(a1 + 104);
  char v16 = *(unsigned char *)(a1 + 112);
  *(void *)(a1 + 104) = v14;
  *(unsigned char *)(a1 + 112) = (_BYTE)v2;
  sub_100E06018(v15, v16);
  return a1;
}

uint64_t initializeWithTake for CRLCollaborationParticipantLegacyRowView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectWeakTakeInit();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  return a1;
}

uint64_t assignWithTake for CRLCollaborationParticipantLegacyRowView(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  id v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;

  swift_unknownObjectWeakTakeAssign();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  char v8 = *(unsigned char *)(a2 + 96);
  uint64_t v9 = *(void *)(a1 + 88);
  char v10 = *(unsigned char *)(a1 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = v8;
  sub_100E06018(v9, v10);
  char v11 = *(unsigned char *)(a2 + 112);
  uint64_t v12 = *(void *)(a1 + 104);
  char v13 = *(unsigned char *)(a1 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = v11;
  sub_100E06018(v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLCollaborationParticipantLegacyRowView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 113)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLCollaborationParticipantLegacyRowView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 112) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 113) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 113) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCollaborationParticipantLegacyRowView()
{
  return &type metadata for CRLCollaborationParticipantLegacyRowView;
}

ValueMetadata *type metadata accessor for CRLEmptyCollaboratorListView()
{
  return &type metadata for CRLEmptyCollaboratorListView;
}

uint64_t destroy for CRLIneligibleCollaboratorListView()
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CRLIneligibleCollaboratorListView(void *a1, void *a2)
{
  uint64_t v4 = swift_unknownObjectWeakCopyInit();
  uint64_t v5 = a2[2];
  *(void *)(v4 + 8) = a2[1];
  *(void *)(v4 + 16) = v5;
  uint64_t v6 = a2[4];
  a1[3] = a2[3];
  a1[4] = v6;
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CRLIneligibleCollaboratorListView(void *a1, void *a2)
{
  uint64_t v4 = swift_unknownObjectWeakCopyAssign();
  *(void *)(v4 + 8) = a2[1];
  *(void *)(v4 + 16) = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for CRLIneligibleCollaboratorListView(void *a1, uint64_t a2)
{
  *(_OWORD *)(swift_unknownObjectWeakTakeAssign() + 8) = *(_OWORD *)(a2 + 8);
  a1[3] = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CRLIneligibleCollaboratorListView()
{
  return &type metadata for CRLIneligibleCollaboratorListView;
}

uint64_t sub_101018958()
{
  return sub_1010189A8(&qword_1016A7108, &qword_1016A7110, (void (*)(void))sub_101016BF8, (void (*)(void))sub_101016CDC);
}

uint64_t sub_1010189A8(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_101018A30()
{
  return sub_1010189A8(&qword_1016A7118, &qword_1016A7120, (void (*)(void))sub_101016BF8, (void (*)(void))sub_101017124);
}

uint64_t sub_101018A80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_101018A9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_101018AB8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_101018AD4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_101018AF0()
{
  unint64_t result = qword_1016A7150;
  if (!qword_1016A7150)
  {
    sub_100522D34(&qword_1016A7130);
    sub_100523288(&qword_1016A7158, &qword_1016A7128);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A7150);
  }
  return result;
}

uint64_t sub_101018BA0@<X0>(uint64_t a1@<X8>)
{
  return sub_101012A28(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], a1, v1[10]);
}

uint64_t sub_101018BD8@<X0>(uint64_t *a1@<X8>)
{
  return sub_101014080(a1);
}

uint64_t sub_101018BE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_101018C4C()
{
  return sub_101018FA4((uint64_t (*)(void))sub_101011A00);
}

uint64_t sub_101018C64()
{
  return sub_101014008();
}

uint64_t sub_101018CA8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_101018CC4()
{
  uint64_t v1 = type metadata accessor for CRLCollaborationParticipantRowView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;

  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100E06018(*(void *)(v5 + 120), *(unsigned char *)(v5 + 128));
  sub_100E06018(*(void *)(v5 + 136), *(unsigned char *)(v5 + 144));
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 52);
  sub_1005057FC(&qword_10168F000);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v5 + *(int *)(v1 + 56);
  sub_1005057FC(&qword_10169D6D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_101018EAC()
{
  return sub_101018ED8(type metadata accessor for CRLCollaborationParticipantRowView, (uint64_t (*)(uint64_t))sub_101013DBC);
}

uint64_t sub_101018ED8(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a2(v4);
}

uint64_t sub_101018F54()
{
  return sub_101014008();
}

uint64_t sub_101018F8C()
{
  return sub_101018FA4(sub_101013B2C);
}

uint64_t sub_101018FA4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10101900C()
{
  return sub_101018FA4((uint64_t (*)(void))sub_1010137F4);
}

uint64_t sub_101019024()
{
  return sub_101014008();
}

id sub_101019058(int a1)
{
  return sub_1005376DC(a1, *(id *)(v1 + 16));
}

void sub_101019064()
{
  sub_1005376F4(v0[2], v0[3], v0[4]);
}

uint64_t sub_101019070(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_101019080()
{
  return swift_release();
}

unint64_t sub_101019094()
{
  unint64_t result = qword_1016A71F0;
  if (!qword_1016A71F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A71F0);
  }
  return result;
}

unint64_t sub_1010190F8()
{
  unint64_t result = qword_1016A7238;
  if (!qword_1016A7238)
  {
    sub_100522D34(&qword_1016A7230);
    sub_101019470((unint64_t *)&qword_1016A63F8, &qword_1016A63F0, &qword_1016A6400, &qword_1016A6408);
    sub_100523288(&qword_101680820, &qword_101680828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A7238);
  }
  return result;
}

uint64_t sub_1010191B8()
{
  return EnvironmentValues.openURL.getter();
}

uint64_t sub_1010191E4(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 8) = *(void *)(a1 + 8);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  return a2;
}

uint64_t sub_101019230()
{
  return sub_10100F73C();
}

uint64_t sub_101019244()
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10101928C()
{
  return sub_10100F78C();
}

unint64_t sub_101019294()
{
  unint64_t result = qword_1016A7270;
  if (!qword_1016A7270)
  {
    sub_100522D34(&qword_1016A7268);
    sub_101019310();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A7270);
  }
  return result;
}

unint64_t sub_101019310()
{
  unint64_t result = qword_1016A7278;
  if (!qword_1016A7278)
  {
    sub_100522D34(&qword_1016A7260);
    sub_1010193B0();
    sub_100523288(&qword_101680820, &qword_101680828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A7278);
  }
  return result;
}

unint64_t sub_1010193B0()
{
  unint64_t result = qword_1016A7280;
  if (!qword_1016A7280)
  {
    sub_100522D34(&qword_1016A7258);
    sub_101019470(&qword_1016A7288, &qword_1016A7250, &qword_1016A7290, &qword_1016A7248);
    sub_100523288(&qword_1016A7298, &qword_1016A72A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A7280);
  }
  return result;
}

uint64_t sub_101019470(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(a2);
    sub_100523288(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10101950C()
{
}

unint64_t sub_10101952C()
{
  unint64_t result = qword_1016A72B0;
  if (!qword_1016A72B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A72B0);
  }
  return result;
}

void sub_101019580()
{
}

uint64_t sub_1010195A8()
{
  return 8;
}

uint64_t sub_1010195B4()
{
  return swift_release();
}

uint64_t sub_1010195BC(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1010195C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008FAA00(a1, a2, a3, &qword_1016A72C8) & 1;
}

uint64_t sub_1010195EC(uint64_t a1, uint64_t a2)
{
  return sub_10091A364(a1, a2, &qword_1016A72C8);
}

void *sub_1010195F8(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_101019604()
{
}

unint64_t sub_101019624()
{
  unint64_t result = qword_1016A72B8;
  if (!qword_1016A72B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A72B8);
  }
  return result;
}

void sub_101019678()
{
}

uint64_t sub_1010196A0()
{
  return 8;
}

uint64_t sub_1010196AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008FAA00(a1, a2, a3, &qword_1016A72C0) & 1;
}

uint64_t sub_1010196D0(uint64_t a1, uint64_t a2)
{
  return sub_10091A364(a1, a2, &qword_1016A72C0);
}

uint64_t sub_1010196E8(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  swift_unknownObjectWeakTakeInit();
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  long long v4 = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 72) = *(_OWORD *)(a1 + 72);
  *(_OWORD *)(a2 + 56) = v4;
  uint64_t v5 = *(void *)(a1 + 88);
  *(unsigned char *)(a2 + 96) = *(unsigned char *)(a1 + 96);
  *(void *)(a2 + 88) = v5;
  uint64_t v6 = *(void *)(a1 + 104);
  *(unsigned char *)(a2 + 112) = *(unsigned char *)(a1 + 112);
  *(void *)(a2 + 104) = v6;
  return a2;
}

void sub_10101976C()
{
  sub_101015394(v0 + 16);
}

unint64_t sub_101019774()
{
  unint64_t result = qword_1016A72F8;
  if (!qword_1016A72F8)
  {
    sub_100522D34(&qword_1016A72F0);
    sub_101016290(&qword_10168EEE0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A72F8);
  }
  return result;
}

uint64_t sub_101019820()
{
  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_10101985C()
{
  unint64_t result = qword_1016A7320;
  if (!qword_1016A7320)
  {
    sub_100522D34(&qword_1016A7318);
    sub_100523288(&qword_1016A7328, &qword_1016A7330);
    sub_100523288(&qword_1016A6318, &qword_1016A6320);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A7320);
  }
  return result;
}

uint64_t sub_101019920(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 176);
  uint64_t v3 = *(void *)(a1 + 184);
  char v4 = *(unsigned char *)(a1 + 192);

  swift_release();
  sub_1006A7D28(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1010199A0()
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100E06018(*(void *)(v0 + 104), *(unsigned char *)(v0 + 112));
  sub_100E06018(*(void *)(v0 + 120), *(unsigned char *)(v0 + 128));

  return _swift_deallocObject(v0, 129, 7);
}

void sub_101019A20()
{
}

uint64_t sub_101019A44(uint64_t a1)
{
  return a1;
}

uint64_t sub_101019A94(uint64_t a1)
{
  return a1;
}

void *initializeBufferWithCopyOfBuffer for CRLUserAvatar(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  id v4 = v3;
  return a1;
}

void destroy for CRLUserAvatar(uint64_t a1)
{
}

void *assignWithCopy for CRLUserAvatar(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = (void *)a2[1];
  id v4 = (void *)a1[1];
  a1[1] = v3;
  id v5 = v3;

  return a1;
}

void *assignWithTake for CRLUserAvatar(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  id v4 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v3;

  return a1;
}

ValueMetadata *type metadata accessor for CRLUserAvatar()
{
  return &type metadata for CRLUserAvatar;
}

ValueMetadata *type metadata accessor for CRLUserColorBar()
{
  return &type metadata for CRLUserColorBar;
}

unint64_t sub_101019BB4()
{
  unint64_t result = qword_1016A7338;
  if (!qword_1016A7338)
  {
    sub_100522D34(&qword_1016A7140);
    sub_100522D34(&qword_1016A7130);
    sub_101018AF0();
    swift_getOpaqueTypeConformance2();
    sub_101016290(&qword_10168EEE0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A7338);
  }
  return result;
}

unint64_t sub_101019C98()
{
  unint64_t result = qword_1016A7340;
  if (!qword_1016A7340)
  {
    sub_100522D34(&qword_1016A7348);
    sub_101019294();
    sub_101016290(&qword_10168EEE0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A7340);
  }
  return result;
}

unint64_t sub_101019D48()
{
  unint64_t result = qword_1016A7350;
  if (!qword_1016A7350)
  {
    sub_100522D34(&qword_1016A7358);
    sub_101019DE8();
    sub_100523288(&qword_1016A6400, &qword_1016A6408);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A7350);
  }
  return result;
}

unint64_t sub_101019DE8()
{
  unint64_t result = qword_1016A7360;
  if (!qword_1016A7360)
  {
    sub_100522D34(&qword_1016A7368);
    sub_101019E88();
    sub_100523288(&qword_10167A5A8, &qword_10167A5B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A7360);
  }
  return result;
}

unint64_t sub_101019E88()
{
  unint64_t result = qword_1016A7370;
  if (!qword_1016A7370)
  {
    sub_100522D34(&qword_1016A7378);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A7370);
  }
  return result;
}

uint64_t sub_101019EFC()
{
  return sub_100523288(&qword_1016A7380, &qword_1016A7388);
}

uint64_t sub_101019F38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_101019F54()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for CRLAvatarViewModifier()
{
  return &type metadata for CRLAvatarViewModifier;
}

ValueMetadata *type metadata accessor for CRLAvatarViewControllerRepresentable()
{
  return &type metadata for CRLAvatarViewControllerRepresentable;
}

unint64_t sub_101019F94()
{
  unint64_t result = qword_1016A7398;
  if (!qword_1016A7398)
  {
    sub_100522D34(&qword_1016A7390);
    sub_100523288(&qword_1016A73A0, &qword_1016812E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A7398);
  }
  return result;
}

uint64_t sub_10101A034()
{
  return sub_101016D18(&qword_1016A73A8, &qword_1016A73B0, (void (*)(void))sub_10101A084);
}

unint64_t sub_10101A084()
{
  unint64_t result = qword_1016A73B8;
  if (!qword_1016A73B8)
  {
    sub_100522D34(&qword_1016A73C0);
    sub_10101A100();
    sub_10101A154();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A73B8);
  }
  return result;
}

unint64_t sub_10101A100()
{
  unint64_t result = qword_1016A73C8;
  if (!qword_1016A73C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A73C8);
  }
  return result;
}

unint64_t sub_10101A154()
{
  unint64_t result = qword_1016A73D0;
  if (!qword_1016A73D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A73D0);
  }
  return result;
}

void *sub_10101A1A8()
{
  return &protocol witness table for Never;
}

uint64_t sub_10101A1B8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10101A1D4()
{
  unint64_t result = qword_1016A73E8;
  if (!qword_1016A73E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A73E8);
  }
  return result;
}

unint64_t sub_10101A22C()
{
  unint64_t result = qword_1016A73F0;
  if (!qword_1016A73F0)
  {
    sub_100522D34(&qword_1016A73D8);
    sub_100523288(&qword_1016A73F8, &qword_1016A73E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A73F0);
  }
  return result;
}

unint64_t sub_10101A2F4(char a1)
{
  unint64_t result = 0x61447463656A626FLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x52436E6F6D6D6F63;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10101A3C4()
{
  return sub_10101A404(1u, 5);
}

uint64_t sub_10101A3E4()
{
  return sub_10101A404(3u, 7);
}

uint64_t sub_10101A404(unsigned __int8 a1, char a2)
{
  uint64_t v4 = *(void *)(v2 + 40);
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_100956650(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = (uint64_t *)(*(void *)(v4 + 56) + 16 * v5);
    uint64_t v8 = *v7;
    unint64_t v9 = v7[1];
    sub_1005057FC((uint64_t *)&unk_101683E10);
    sub_100510D4C(v8, v9);
    sub_10101A554();
    return CRDT.init(serializedData:)();
  }
  else
  {
    sub_1005F7CE8();
    swift_allocError();
    *char v11 = a2;
    return swift_willThrow();
  }
}

uint64_t sub_10101A4D4(unsigned __int8 *a1, char *a2)
{
  return sub_10094E084(*a1, *a2);
}

Swift::Int sub_10101A4E0()
{
  return sub_100BBAAA0();
}

uint64_t sub_10101A4E8()
{
  return sub_10094FC94();
}

Swift::Int sub_10101A4F0()
{
  return sub_100950498();
}

unint64_t sub_10101A4F8@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10101A878(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_10101A528@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10101A2F4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10101A554()
{
  unint64_t result = qword_10168B238;
  if (!qword_10168B238)
  {
    sub_100522D34((uint64_t *)&unk_101683E10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B238);
  }
  return result;
}

uint64_t destroy for CRLSerializableObjectDataRepresentation()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CRLSerializableObjectDataRepresentation(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CRLSerializableObjectDataRepresentation(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLSerializableObjectDataRepresentation(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CRLSerializableObjectDataRepresentation()
{
  return &type metadata for CRLSerializableObjectDataRepresentation;
}

unsigned char *storeEnumTagSinglePayload for CRLSerializableObjectDataRepresentation.DataDictionaryKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10101A7E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSerializableObjectDataRepresentation.DataDictionaryKey()
{
  return &type metadata for CRLSerializableObjectDataRepresentation.DataDictionaryKey;
}

unint64_t sub_10101A824()
{
  unint64_t result = qword_1016A7400;
  if (!qword_1016A7400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A7400);
  }
  return result;
}

unint64_t sub_10101A878(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1015037C8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

uint64_t sub_10101A8C4(uint64_t a1)
{
  uint64_t v1 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v2 = -1;
  if (v1 < 64) {
    uint64_t v2 = ~(-1 << v1);
  }
  unint64_t v3 = v2 & *(void *)(a1 + 56);
  int64_t v24 = (unint64_t)(v1 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v5 = 0;
  unsigned int v6 = _swiftEmptyArrayStorage;
  if (!v3) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v7 = __clz(__rbit64(v3));
  v3 &= v3 - 1;
  for (unint64_t i = v7 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v10)) + (v5 << 6))
  {
    uint64_t v12 = *(void *)(a1 + 48) + 32 * i;
    id v13 = *(id *)v12;
    uint64_t v14 = *(void **)(v12 + 8);
    uint64_t v15 = *(void *)(v12 + 16);
    unsigned __int8 v16 = *(unsigned char *)(v12 + 24);
    sub_10053BB6C(*(id *)v12, v14, v15, v16);
    char v17 = sub_100B80A34((unint64_t)v13, (unint64_t)v14, v15, v16);
    uint64_t v19 = v18;
    sub_10053BBA0(v13, v14, v15, v16);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100F61B70(0, *((void *)v6 + 2) + 1, 1, v6);
      unsigned int v6 = (double *)result;
    }
    unint64_t v21 = *((void *)v6 + 2);
    unint64_t v20 = *((void *)v6 + 3);
    if (v21 >= v20 >> 1)
    {
      uint64_t result = (uint64_t)sub_100F61B70((double *)(v20 > 1), v21 + 1, 1, v6);
      unsigned int v6 = (double *)result;
    }
    *((void *)v6 + 2) = v21 + 1;
    uint64_t v22 = &v6[2 * v21];
    *((void *)v22 + 4) = v17;
    *((void *)v22 + 5) = v19;
    if (v3) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v9 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v9 >= v24) {
      goto LABEL_27;
    }
    unint64_t v10 = *(void *)(v23 + 8 * v9);
    ++v5;
    if (!v10)
    {
      int64_t v5 = v9 + 1;
      if (v9 + 1 >= v24) {
        goto LABEL_27;
      }
      unint64_t v10 = *(void *)(v23 + 8 * v5);
      if (!v10)
      {
        int64_t v5 = v9 + 2;
        if (v9 + 2 >= v24) {
          goto LABEL_27;
        }
        unint64_t v10 = *(void *)(v23 + 8 * v5);
        if (!v10)
        {
          int64_t v5 = v9 + 3;
          if (v9 + 3 >= v24) {
            goto LABEL_27;
          }
          unint64_t v10 = *(void *)(v23 + 8 * v5);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v3 = (v10 - 1) & v10;
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v24)
  {
LABEL_27:
    swift_release();
    return (uint64_t)v6;
  }
  unint64_t v10 = *(void *)(v23 + 8 * v11);
  if (v10)
  {
    int64_t v5 = v11;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v5 >= v24) {
      goto LABEL_27;
    }
    unint64_t v10 = *(void *)(v23 + 8 * v5);
    ++v11;
    if (v10) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10101AB28()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

id sub_10101AFA4()
{
  id v0 = [self configurationWithPointSize:30.0];
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [self systemImageNamed:v1 withConfiguration:v0];

  return v2;
}

uint64_t sub_10101B180()
{
  id v0 = [self standardUserDefaults];
  sub_100DD54C4();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_10051B3EC((uint64_t)v5, (uint64_t)v6, &qword_101672BF0);
  if (!v7) {
    return sub_100522F00((uint64_t)v6, &qword_101672BF0);
  }
  sub_1005057FC(&qword_10168E270);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    sub_10101B518(v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_10101B2C0()
{
  sub_1005057FC(&qword_101677430);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E800;
  strcpy((char *)v15, "isGridLayout");
  BYTE5(v15[1]) = unk_1016A7415;
  HIWORD(v15[1]) = unk_1016A7416;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  char v2 = *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout);
  *(void *)(inited + 96) = &type metadata for Bool;
  *(unsigned char *)(inited + 72) = v2;
  v15[0] = qword_1016A7418;
  v15[1] = off_1016A7420;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  id v3 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions);
  char v4 = *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions + 2);
  *(void *)(inited + 168) = &type metadata for Bool;
  *(unsigned char *)(inited + 144) = v4;
  v15[0] = qword_1016A7438;
  v15[1] = off_1016A7440;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  unsigned __int8 v5 = v3[1];
  *(void *)(inited + 240) = &type metadata for Bool;
  *(unsigned char *)(inited + 216) = v5;
  v15[0] = qword_1016A7428;
  v15[1] = off_1016A7430;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  uint64_t v6 = *v3;
  *(void *)(inited + 312) = &type metadata for Int;
  *(void *)(inited + 288) = v6;
  unint64_t v7 = sub_100A393A8(inited);
  *((void *)&v13 + 1) = off_1016A7450;
  swift_bridgeObjectRetain_n();
  AnyHashable.init<A>(_:)();
  swift_beginAccess();
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_10101A8C4(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_1016773F0);
  *(void *)&long long v13 = v9;
  sub_100575CE8(&v13, v12);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100972B08(v12, (uint64_t)v15, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)v15);
  return v7;
}

void sub_10101B518(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_10168E130);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v54, "isGridLayout");
  BYTE5(v54[1]) = unk_1016A7415;
  HIWORD(v54[1]) = unk_1016A7416;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v9 = sub_10095647C((uint64_t)v55), (v10 & 1) != 0))
  {
    sub_100522D7C(*(void *)(a1 + 56) + 32 * v9, (uint64_t)&v56);
  }
  else
  {
    long long v56 = 0u;
    long long v57 = 0u;
  }
  sub_10050BFE0((uint64_t)v55);
  if (*((void *)&v57 + 1))
  {
    if (swift_dynamicCast())
    {
      int v11 = LOBYTE(v54[0]);
      int v12 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout);
      *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout) = v54[0];
      if (v11 != v12) {
        sub_100D73158();
      }
    }
  }
  else
  {
    sub_100522F00((uint64_t)&v56, &qword_101672BF0);
  }
  v54[0] = qword_1016A7438;
  v54[1] = off_1016A7440;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v13 = sub_10095647C((uint64_t)v55), (v14 & 1) != 0))
  {
    sub_100522D7C(*(void *)(a1 + 56) + 32 * v13, (uint64_t)&v56);
  }
  else
  {
    long long v56 = 0u;
    long long v57 = 0u;
  }
  sub_10050BFE0((uint64_t)v55);
  if (!*((void *)&v57 + 1)) {
    goto LABEL_31;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_32;
  }
  int v15 = LOBYTE(v54[0]);
  v54[0] = qword_1016A7418;
  v54[1] = off_1016A7420;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v16 = sub_10095647C((uint64_t)v55), (v17 & 1) != 0))
  {
    sub_100522D7C(*(void *)(a1 + 56) + 32 * v16, (uint64_t)&v56);
  }
  else
  {
    long long v56 = 0u;
    long long v57 = 0u;
  }
  sub_10050BFE0((uint64_t)v55);
  if (!*((void *)&v57 + 1)) {
    goto LABEL_31;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_32;
  }
  int v18 = LOBYTE(v54[0]);
  v54[0] = qword_1016A7428;
  v54[1] = off_1016A7430;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v19 = sub_10095647C((uint64_t)v55), (v20 & 1) != 0))
  {
    sub_100522D7C(*(void *)(a1 + 56) + 32 * v19, (uint64_t)&v56);
  }
  else
  {
    long long v56 = 0u;
    long long v57 = 0u;
  }
  sub_10050BFE0((uint64_t)v55);
  if (!*((void *)&v57 + 1))
  {
LABEL_31:
    sub_100522F00((uint64_t)&v56, &qword_101672BF0);
    goto LABEL_32;
  }
  if (swift_dynamicCast())
  {
    int v53 = v18;
    uint64_t v21 = v54[0];
    if (v54[0] <= 2uLL)
    {
      int v52 = v15;
      id v51 = (id)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder);
      uint64_t v22 = sub_100DD7FC4();
      BOOL v23 = sub_100ED604C(v21, (uint64_t)v22);
      swift_bridgeObjectRelease();
      if (v23)
      {
        BOOL v24 = v21;
      }
      else
      {
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117DF40;
        uint64_t v37 = sub_100B80E8C();
        id v48 = v38;
        *(void *)(inited + 56) = &type metadata for String;
        unint64_t v39 = sub_100528BE4();
        *(void *)(inited + 64) = v39;
        unint64_t v49 = v39;
        *(void *)(inited + 32) = v37;
        uint64_t v50 = inited + 32;
        *(void *)(inited + 40) = v48;
        uint64_t v40 = sub_100DD4C48();
        *(void *)(inited + 96) = &type metadata for String;
        *(void *)(inited + 104) = v39;
        *(void *)(inited + 72) = v40;
        *(void *)(inited + 80) = v41;
        id v42 = [self mainBundle];
        id v48 = v42;
        NSString v43 = String._bridgeToObjectiveC()();
        id v51 = String._bridgeToObjectiveC()();
        id v44 = [v42 localizedStringForKey:v43 value:v51 table:0];

        id v51 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v46 = v45;

        unint64_t v47 = v49;
        *(void *)(inited + 136) = &type metadata for String;
        *(void *)(inited + 144) = v47;
        *(void *)(inited + 112) = v51;
        *(void *)(inited + 120) = v46;
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"restoreState(from:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2, 152, (uint64_t)"Tried to restore \"%@\" sort option from cached view state, but it's disallowed in the \"%@\" folder. Using the default sort option \"%@\" instead.", 141, 2u, inited);
        sub_1005598CC(inited, (uint64_t)"restoreState(from:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderGridViewController.swift", 103, 2, 152);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();
        BOOL v24 = 1;
      }
      sub_100D73714(v24, v52, v53);
    }
  }
LABEL_32:
  v54[0] = qword_1016A7448;
  v54[1] = off_1016A7450;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v25 = sub_10095647C((uint64_t)v55), (v26 & 1) != 0))
  {
    sub_100522D7C(*(void *)(a1 + 56) + 32 * v25, (uint64_t)&v56);
  }
  else
  {
    long long v56 = 0u;
    long long v57 = 0u;
  }
  sub_10050BFE0((uint64_t)v55);
  if (*((void *)&v57 + 1))
  {
    sub_1005057FC((uint64_t *)&unk_1016773F0);
    if (swift_dynamicCast())
    {
      uint64_t v27 = v54[0];
      id v28 = sub_100D72460();
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

      uint64_t v29 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_10101F1C8(v29, v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v31 = sub_100CDE624((uint64_t)v30);
      swift_bridgeObjectRelease();
      long long v32 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_collapsedSections);
      swift_beginAccess();
      *long long v32 = v31;
      swift_bridgeObjectRelease();
      if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_shouldSaveViewState) == 1)
      {
        id v33 = [self standardUserDefaults];
        sub_10101B2C0();
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        sub_100DD54C4();
        NSString v35 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v33 setObject:isa forKey:v35];
      }
      sub_100D834D0();
    }
  }
  else
  {
    sub_100522F00((uint64_t)&v56, &qword_101672BF0);
  }
}

uint64_t sub_10101BD7C(void *a1, uint64_t a2, uint64_t a3)
{
  id v36 = a1;
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v35 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_1016A7488);
  __chkstk_darwin(v9, v10);
  int v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101676310);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  char v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v15, v18);
  uint64_t v21 = (char *)&v34 - v20;
  __chkstk_darwin(v19, v22);
  BOOL v24 = (char *)&v34 - v23;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v26 = *(void *)(a2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    id v28 = *(void (**)(uint64_t, uint64_t))(v26 + 24);
    uint64_t v34 = ObjectType;
    v28(ObjectType, v26);
    sub_10101F098(a3, (uint64_t)v21, type metadata accessor for CRLBoardLibraryViewModel.Item);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v21, 0, 1, v5);
    uint64_t v29 = (uint64_t)&v12[*(int *)(v9 + 48)];
    sub_1005FCAC8((uint64_t)v24, (uint64_t)v12);
    sub_1005FCAC8((uint64_t)v21, v29);
    uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (v30((uint64_t)v12, 1, v5) == 1)
    {
      sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101676310);
      sub_100522F00((uint64_t)v24, (uint64_t *)&unk_101676310);
      if (v30(v29, 1, v5) == 1)
      {
        sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101676310);
LABEL_9:
        id v33 = [v36 UIImage];
        (*(void (**)(id, uint64_t, uint64_t))(v26 + 56))(v33, v34, v26);
        return swift_unknownObjectRelease();
      }
    }
    else
    {
      sub_1005FCAC8((uint64_t)v12, (uint64_t)v17);
      if (v30(v29, 1, v5) != 1)
      {
        uint64_t v31 = v35;
        sub_10101F160(v29, v35, type metadata accessor for CRLBoardLibraryViewModel.Item);
        char v32 = sub_100DDCC28((uint64_t)v17, v31);
        sub_10101F100(v31, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101676310);
        sub_100522F00((uint64_t)v24, (uint64_t *)&unk_101676310);
        sub_10101F100((uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101676310);
        if (v32) {
          goto LABEL_9;
        }
        return swift_unknownObjectRelease();
      }
      sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101676310);
      sub_100522F00((uint64_t)v24, (uint64_t *)&unk_101676310);
      sub_10101F100((uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
    }
    sub_100522F00((uint64_t)v12, &qword_1016A7488);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10101C194(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 + 296) = a9;
  *(void *)(v9 + 304) = v16;
  *(void *)(v9 + 288) = a8;
  *(double *)(v9 + 280) = a1;
  *(void *)(v9 + 264) = a6;
  *(void *)(v9 + 272) = a7;
  *(void *)(v9 + 256) = a5;
  type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  *(void *)(v9 + 312) = swift_task_alloc();
  *(void *)(v9 + 320) = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  *(void *)(v9 + 328) = swift_task_alloc();
  sub_1005057FC(&qword_1016770E8);
  *(void *)(v9 + 336) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  *(void *)(v9 + 344) = v10;
  *(void *)(v9 + 352) = *(void *)(v10 - 8);
  *(void *)(v9 + 360) = swift_task_alloc();
  *(void *)(v9 + 368) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  *(void *)(v9 + 376) = v11;
  *(void *)(v9 + 384) = *(void *)(v11 - 8);
  *(void *)(v9 + 392) = swift_task_alloc();
  *(void *)(v9 + 400) = swift_task_alloc();
  *(void *)(v9 + 408) = swift_task_alloc();
  *(void *)(v9 + 416) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v9 + 424) = static MainActor.shared.getter();
  uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v9 + 432) = v13;
  *(void *)(v9 + 440) = v12;
  return _swift_task_switch(sub_10101C3CC, v13, v12);
}

uint64_t sub_10101C3CC()
{
  uint64_t v1 = *((void *)v0 + 32);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *((void *)v0 + 48);
    uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    uint64_t v31 = *((void *)v0 + 44);
    swift_bridgeObjectRetain();
    uint64_t v6 = _swiftEmptyArrayStorage;
    while (1)
    {
      uint64_t v8 = *((void *)v0 + 51);
      uint64_t v7 = *((void *)v0 + 52);
      sub_10101F098(v4, v7, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_10101F098(v7, v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v9 = *((void *)v0 + 51);
        uint64_t v10 = *((void *)v0 + 42);
        uint64_t v11 = *((void *)v0 + 41);
        sub_1005057FC(&qword_101677100);
        swift_bridgeObjectRelease();
        sub_10101F160(v9, v11, type metadata accessor for CRLBoardIdentifier);
        sub_10101F160(v11, v10, type metadata accessor for CRLBoardIdentifier);
      }
      else
      {
        uint64_t v12 = *((void *)v0 + 52);
        uint64_t v13 = *((void *)v0 + 50);
        sub_10101F100(*((void *)v0 + 51), type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_10101F098(v12, v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v15 = *((void *)v0 + 50);
        if (EnumCaseMultiPayload != 1)
        {
          sub_10101F100(v15, type metadata accessor for CRLBoardLibraryViewModel.Item);
          uint64_t v18 = 1;
          goto LABEL_11;
        }
        uint64_t v16 = *((void *)v0 + 42);
        uint64_t v17 = *((void *)v0 + 40);
        sub_10101F160(v15, v17, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        sub_10101F160(v17, v16, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v18 = 0;
LABEL_11:
      uint64_t v19 = *((void *)v0 + 52);
      uint64_t v21 = *((void *)v0 + 42);
      uint64_t v20 = *((void *)v0 + 43);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v21, v18, 1, v20);
      sub_10101F100(v19, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v21, 1, v20) == 1)
      {
        sub_100522F00(*((void *)v0 + 42), &qword_1016770E8);
      }
      else
      {
        uint64_t v23 = *((void *)v0 + 45);
        uint64_t v22 = *((void *)v0 + 46);
        sub_10101F160(*((void *)v0 + 42), v22, type metadata accessor for CRLBoardPreviewImageCache.Item);
        sub_10101F160(v22, v23, type metadata accessor for CRLBoardPreviewImageCache.Item);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v6 = (double *)sub_100F632B8(0, *((void *)v6 + 2) + 1, 1, (unint64_t)v6);
        }
        unint64_t v25 = *((void *)v6 + 2);
        unint64_t v24 = *((void *)v6 + 3);
        if (v25 >= v24 >> 1) {
          uint64_t v6 = (double *)sub_100F632B8(v24 > 1, v25 + 1, 1, (unint64_t)v6);
        }
        uint64_t v26 = *((void *)v0 + 45);
        *((void *)v6 + 2) = v25 + 1;
        sub_10101F160(v26, (uint64_t)v6+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v25, type metadata accessor for CRLBoardPreviewImageCache.Item);
      }
      v4 += v5;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
  }
  uint64_t v6 = _swiftEmptyArrayStorage;
LABEL_19:
  *((void *)v0 + 56) = v6;
  if (*(unsigned char *)(*((void *)v0 + 34) + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout)) {
    uint64_t v27 = 2;
  }
  else {
    uint64_t v27 = 0;
  }
  id v28 = (void *)swift_task_alloc();
  *((void *)v0 + 57) = v28;
  *id v28 = v0;
  v28[1] = sub_10101C81C;
  double v29 = v0[35];
  return sub_1006199F8((uint64_t)v6, v27, 0, 1, v29);
}

uint64_t sub_10101C81C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 464) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = v4[54];
    uint64_t v6 = v4[55];
    uint64_t v7 = sub_10101CA60;
  }
  else
  {
    v4[59] = a1;
    uint64_t v5 = v4[54];
    uint64_t v6 = v4[55];
    uint64_t v7 = sub_10101C968;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_10101C968()
{
  uint64_t v1 = (void *)v0[59];
  uint64_t v2 = (void (*)(void *))v0[36];
  swift_release();
  v2(v1);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10101CA60()
{
  swift_release();
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[49];
  uint64_t v2 = v0[38];
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  sub_10101F098(v2, v1, type metadata accessor for CRLBoardLibraryViewModel.Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v6 = v0[39];
      sub_10101F160(v0[49], v6, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      id v7 = v3;
      uint64_t v23 = sub_100DD4C48();
      uint64_t v9 = v8;
      uint64_t v10 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
    }
    else
    {
      uint64_t v6 = v0[49];
      uint64_t v13 = (uint64_t *)(v6 + *(int *)(sub_1005057FC(&qword_101677100) + 48));
      uint64_t v9 = v13[1];
      uint64_t v23 = *v13;
      id v14 = v3;
      uint64_t v10 = type metadata accessor for CRLBoardIdentifier;
    }
    sub_10101F100(v6, v10);
  }
  else
  {
    id v11 = v3;
    uint64_t v23 = sub_100DD8CAC();
    uint64_t v9 = v12;
  }
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v15 = sub_100528BE4();
  *(void *)(inited + 64) = v15;
  *(void *)(inited + 32) = v23;
  *(void *)(inited + 40) = v9;
  swift_getErrorValue();
  uint64_t v16 = Error.publicDescription.getter(v0[25], v0[26]);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v15;
  *(void *)(inited + 72) = v16;
  *(void *)(inited + 80) = v17;
  swift_getErrorValue();
  uint64_t v18 = Error.fullDescription.getter(v0[28]);
  *(void *)(inited + 136) = &type metadata for String;
  *(void *)(inited + 144) = v15;
  *(void *)(inited + 112) = v18;
  *(void *)(inited + 120) = v19;
  uint64_t v20 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v20, (uint64_t)"Error generating image for folder (%@): %{public}@ <%@>", 55, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_10101CDA8(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 352) = a7;
  *(void *)(v8 + 360) = a8;
  *(double *)(v8 + 344) = a1;
  *(void *)(v8 + 328) = a5;
  *(void *)(v8 + 336) = a6;
  *(void *)(v8 + 368) = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  *(void *)(v8 + 376) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v8 + 384) = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v8 + 392) = v10;
  *(void *)(v8 + 400) = v9;
  return _swift_task_switch(sub_10101CE78, v10, v9);
}

uint64_t sub_10101CE78()
{
  if (qword_10166FA68 != -1) {
    swift_once();
  }
  uint64_t v1 = *((void *)v0 + 47);
  uint64_t v2 = *((void *)v0 + 41);
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.crlBoardPreviewImageCache;
  *((void *)v0 + 51) = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v5 = v3;
  uint64_t v6 = UUID.uuidString.getter();
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v9 = sub_100528BE4();
  *((void *)v0 + 52) = v9;
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  uint64_t v10 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v10, (uint64_t)"About to request image from cache for board UUID: %@", 52, 2, inited);
  swift_setDeallocating();
  *((void *)v0 + 53) = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_10101F098(v2, v1, type metadata accessor for CRLBoardIdentifier);
  swift_storeEnumTagMultiPayload();
  id v11 = (void *)swift_task_alloc();
  *((void *)v0 + 54) = v11;
  *id v11 = v0;
  v11[1] = sub_10101D07C;
  uint64_t v12 = *((void *)v0 + 47);
  double v13 = v0[43];
  return sub_100618E4C(v12, 2, 0, 1, v13);
}

uint64_t sub_10101D07C(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[55] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[47];
  if (v1)
  {
    sub_10101F100(v5, type metadata accessor for CRLBoardPreviewImageCache.Item);
    uint64_t v6 = v4[49];
    uint64_t v7 = v4[50];
    uint64_t v8 = sub_10101D274;
  }
  else
  {
    v4[56] = a1;
    sub_10101F100(v5, type metadata accessor for CRLBoardPreviewImageCache.Item);
    uint64_t v6 = v4[49];
    uint64_t v7 = v4[50];
    uint64_t v8 = sub_10101D1EC;
  }
  return _swift_task_switch(v8, v6, v7);
}

uint64_t sub_10101D1EC()
{
  uint64_t v1 = (void *)v0[56];
  uint64_t v2 = (void (*)(void *))v0[44];
  swift_release();
  v2(v1);

  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10101D274()
{
  uint64_t v1 = v0[52];
  uint64_t v15 = (void (*)(void))v0[44];
  swift_release();
  uint64_t v2 = (void *)static OS_os_log.crlBoardPreviewImageCache;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  id v4 = v2;
  uint64_t v5 = UUID.uuidString.getter();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v6;
  swift_getErrorValue();
  uint64_t v7 = Error.publicDescription.getter(v0[37], v0[38]);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v1;
  *(void *)(inited + 72) = v7;
  *(void *)(inited + 80) = v8;
  swift_getErrorValue();
  uint64_t v9 = Error.fullDescription.getter(v0[34]);
  *(void *)(inited + 136) = &type metadata for String;
  *(void *)(inited + 144) = v1;
  *(void *)(inited + 112) = v9;
  *(void *)(inited + 120) = v10;
  uint64_t v11 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v11, (uint64_t)"Error generating image for board UUID (%@): %{public}@ <%@>", 59, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  id v12 = sub_10061D684();
  v15();

  swift_errorRelease();
  swift_task_dealloc();
  double v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_10101D430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a4;
  v7[5] = type metadata accessor for MainActor();
  v7[6] = static MainActor.shared.getter();
  uint64_t ObjectType = swift_getObjectType();
  v7[2] = a4;
  v7[7] = ObjectType;
  uint64_t v13 = *(void *)(a5 + 16);
  void v7[8] = v13;
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 8) + **(int **)(v13 + 8));
  id v14 = (void *)swift_task_alloc();
  v7[9] = v14;
  void *v14 = v7;
  v14[1] = sub_10101D580;
  return v16(a6, a7, ObjectType, v13);
}

uint64_t sub_10101D580()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10101D6BC, v1, v0);
}

uint64_t sub_10101D6BC()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[4];
  swift_release();
  v0[3] = v3;
  (*(void (**)(uint64_t, uint64_t))(v1 + 16))(v2, v1);
  id v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10101D750(uint64_t a1)
{
  v2[16] = a1;
  v2[17] = v1;
  sub_1005057FC(&qword_101691F20);
  v2[18] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CRLBoardEntity();
  v2[19] = v3;
  v2[20] = *(void *)(v3 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_101676310);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  sub_1005057FC(&qword_101672C30);
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  v2[27] = v4;
  v2[28] = *(void *)(v4 - 8);
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  v2[35] = type metadata accessor for MainActor();
  v2[36] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[37] = v6;
  v2[38] = v5;
  return _swift_task_switch(sub_10101D9A4, v6, v5);
}

uint64_t sub_10101D9A4()
{
  uint64_t v1 = (uint64_t (*)(uint64_t (*)(), uint64_t, uint64_t))[*(id *)(v0 + 136) collectionView];
  if (v1)
  {
    uint64_t v4 = v1;
    id v5 = [v1 visibleCells];

    sub_10101F058();
    unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v7 = sub_10065C3D0(v6);
    *(void *)(v0 + 312) = v7;
    swift_bridgeObjectRelease();
    uint64_t v8 = _swiftEmptyArrayStorage;
    if (v7) {
      uint64_t v9 = v7;
    }
    else {
      uint64_t v9 = _swiftEmptyArrayStorage;
    }
    uint64_t v10 = *((void *)v9 + 2);
    *(void *)(v0 + 320) = v10;
    if (v10)
    {
      uint64_t v35 = *(void *)(v0 + 224);
      uint64_t v11 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
      id v12 = &qword_101672C30;
      while (1)
      {
        unint64_t v36 = (unint64_t)v8;
        uint64_t v13 = v12;
        uint64_t v14 = *(void *)(v0 + 192);
        uint64_t v15 = *v11;
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v15 + 24);
        swift_unknownObjectRetain();
        v17(ObjectType, v15);
        uint64_t v18 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
        int v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v14, 1, v18);
        uint64_t v20 = *(void *)(v0 + 192);
        if (v19 == 1) {
          break;
        }
        if (swift_getEnumCaseMultiPayload() != 2)
        {
          sub_10101F100(v20, type metadata accessor for CRLBoardLibraryViewModel.Item);
          goto LABEL_14;
        }
        uint64_t v21 = *(void *)(v0 + 264);
        uint64_t v22 = *(void *)(v0 + 200);
        sub_1005057FC(&qword_101677100);
        swift_bridgeObjectRelease();
        sub_10101F160(v20, v21, type metadata accessor for CRLBoardIdentifier);
        sub_10101F160(v21, v22, type metadata accessor for CRLBoardIdentifier);
        uint64_t v23 = 0;
LABEL_15:
        id v12 = v13;
        uint64_t v8 = (double *)v36;
        uint64_t v25 = *(void *)(v0 + 208);
        uint64_t v24 = *(void *)(v0 + 216);
        uint64_t v26 = *(void *)(v0 + 200);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56))(v26, v23, 1, v24);
        sub_10051B3EC(v26, v25, v12);
        swift_unknownObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v25, 1, v24) == 1)
        {
          sub_100522F00(*(void *)(v0 + 208), v12);
        }
        else
        {
          uint64_t v27 = *(void *)(v0 + 272);
          uint64_t v28 = *(void *)(v0 + 256);
          sub_10101F160(*(void *)(v0 + 208), v27, type metadata accessor for CRLBoardIdentifier);
          sub_10101F160(v27, v28, type metadata accessor for CRLBoardIdentifier);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = (double *)sub_100F632EC(0, *(void *)(v36 + 16) + 1, 1, v36);
          }
          unint64_t v30 = *((void *)v8 + 2);
          unint64_t v29 = *((void *)v8 + 3);
          if (v30 >= v29 >> 1) {
            uint64_t v8 = (double *)sub_100F632EC(v29 > 1, v30 + 1, 1, (unint64_t)v8);
          }
          uint64_t v31 = *(void *)(v0 + 256);
          *((void *)v8 + 2) = v30 + 1;
          sub_10101F160(v31, (uint64_t)v8+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v30, type metadata accessor for CRLBoardIdentifier);
        }
        v11 += 2;
        if (!--v10)
        {
          swift_bridgeObjectRelease();
          goto LABEL_22;
        }
      }
      sub_100522F00(*(void *)(v0 + 192), (uint64_t *)&unk_101676310);
LABEL_14:
      uint64_t v23 = 1;
      goto LABEL_15;
    }
LABEL_22:
    *(void *)(v0 + 328) = v8;
    *(void *)(v0 + 336) = static MainActor.shared.getter();
    uint64_t v32 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v3 = v33;
    *(void *)(v0 + 344) = v32;
    *(void *)(v0 + 352) = v33;
    uint64_t v1 = sub_10101DDB4;
    uint64_t v2 = v32;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_10101DDB4(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(v3 + 128) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_entityStore);
  *(void *)(v3 + 360) = v4;
  if (v4)
  {
    swift_retain();
    a1 = sub_10101DE3C;
    a2 = v4;
    a3 = 0;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(a1, a2, a3);
}

uint64_t sub_10101DE3C()
{
  uint64_t v1 = v0[45];
  uint64_t v2 = v0[41];
  swift_retain();
  v0[46] = sub_100EB2328(v2, v1);
  v0[47] = 0;
  swift_release();
  swift_release();
  uint64_t v3 = v0[43];
  uint64_t v4 = v0[44];
  return _swift_task_switch(sub_10101DEF0, v3, v4);
}

uint64_t sub_10101DEF0()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 304);
  return _swift_task_switch(sub_10101DF5C, v1, v2);
}

uint64_t sub_10101DF5C()
{
  uint64_t v1 = v0[40];
  uint64_t result = swift_release();
  uint64_t v3 = v0[46];
  if (v1)
  {
    unint64_t v4 = 0;
    if (v0[39]) {
      id v5 = (double *)v0[39];
    }
    else {
      id v5 = _swiftEmptyArrayStorage;
    }
    uint64_t v6 = v5 + 4;
    uint64_t v7 = v0[20];
    id v48 = v6;
    uint64_t v44 = v0[46];
    uint64_t v45 = v7;
    uint64_t v46 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    unint64_t v47 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    do
    {
      uint64_t v8 = (double *)v0[39];
      if (!v8) {
        uint64_t v8 = _swiftEmptyArrayStorage;
      }
      if (v4 >= *((void *)v8 + 2))
      {
        __break(1u);
        return result;
      }
      uint64_t v9 = v0[23];
      unint64_t v50 = v4;
      uint64_t v10 = &v48[2 * v4];
      uint64_t v11 = *(void *)v10;
      uint64_t v12 = *((void *)v10 + 1);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v12 + 24);
      swift_unknownObjectRetain();
      uint64_t v49 = ObjectType;
      v14(ObjectType, v12);
      uint64_t v15 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
      int v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v9, 1, v15);
      uint64_t v17 = v0[23];
      if (v16 == 1)
      {
        swift_unknownObjectRelease();
        uint64_t v18 = v17;
        int v19 = (uint64_t *)&unk_101676310;
        goto LABEL_13;
      }
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        swift_unknownObjectRelease();
        uint64_t result = sub_10101F100(v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
        goto LABEL_7;
      }
      uint64_t v20 = v0[31];
      sub_1005057FC(&qword_101677100);
      swift_bridgeObjectRelease();
      sub_10101F160(v17, v20, type metadata accessor for CRLBoardIdentifier);
      uint64_t v21 = *(void *)(v3 + 16);
      if (!v21)
      {
        swift_bridgeObjectRetain();
        uint64_t v36 = 1;
        goto LABEL_31;
      }
      uint64_t v22 = v0[46] + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
      swift_bridgeObjectRetain();
      uint64_t v51 = *(void *)(v45 + 72);
      while (1)
      {
        uint64_t v24 = v0[30];
        uint64_t v23 = v0[31];
        uint64_t v25 = v0[29];
        uint64_t v26 = v0[21];
        sub_10101F098(v22, v26, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
        char v27 = static UUID.== infix(_:_:)();
        sub_10101F098(v26, v24, type metadata accessor for CRLBoardIdentifier);
        sub_10101F098(v23, v25, type metadata accessor for CRLBoardIdentifier);
        uint64_t v28 = v0[29];
        uint64_t v29 = v0[30];
        if ((v27 & 1) == 0)
        {
          sub_10101F100(v0[29], type metadata accessor for CRLBoardIdentifier);
          sub_10101F100(v29, type metadata accessor for CRLBoardIdentifier);
          goto LABEL_18;
        }
        uint64_t v30 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        uint64_t v31 = *(void *)(v29 + v30);
        uint64_t v32 = *(void *)(v29 + v30 + 8);
        uint64_t v33 = (void *)(v28 + v30);
        if (v31 == *v33 && v32 == v33[1]) {
          break;
        }
        char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_10101F100(v28, type metadata accessor for CRLBoardIdentifier);
        sub_10101F100(v29, type metadata accessor for CRLBoardIdentifier);
        if (v35) {
          goto LABEL_29;
        }
LABEL_18:
        sub_10101F100(v0[21], (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
        v22 += v51;
        if (!--v21)
        {
          uint64_t v36 = 1;
          goto LABEL_30;
        }
      }
      sub_10101F100(v28, type metadata accessor for CRLBoardIdentifier);
      sub_10101F100(v29, type metadata accessor for CRLBoardIdentifier);
LABEL_29:
      sub_10101F160(v0[21], v0[18], (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
      uint64_t v36 = 0;
LABEL_30:
      uint64_t v3 = v44;
LABEL_31:
      uint64_t v38 = v0[18];
      uint64_t v37 = v0[19];
      (*v47)(v38, v36, 1, v37);
      swift_bridgeObjectRelease();
      int v39 = (*v46)(v38, 1, v37);
      uint64_t v40 = v0[31];
      if (v39 == 1)
      {
        uint64_t v41 = v0[18];
        swift_unknownObjectRelease();
        sub_10101F100(v40, type metadata accessor for CRLBoardIdentifier);
        uint64_t v18 = v41;
        int v19 = &qword_101691F20;
LABEL_13:
        uint64_t result = sub_100522F00(v18, v19);
      }
      else
      {
        uint64_t v42 = v0[22];
        sub_10101F160(v0[18], v42, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
        v0[15] = v11;
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 + 8) + 16))(v42, v49);
        sub_10101F100(v42, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
        sub_10101F100(v40, type metadata accessor for CRLBoardIdentifier);
        uint64_t result = swift_unknownObjectRelease();
      }
LABEL_7:
      unint64_t v4 = v50 + 1;
    }
    while (v50 + 1 != v0[40]);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  NSString v43 = (uint64_t (*)(void))v0[1];
  return v43();
}

uint64_t sub_10101E55C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 304);
  return _swift_task_switch(sub_10101E5F4, v1, v2);
}

uint64_t sub_10101E5F4()
{
  swift_release();
  if (qword_10166FA58 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[47];
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlFolderUI;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  v0[14] = v1;
  id v4 = v2;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  uint64_t v5 = String.init<A>(describing:)();
  uint64_t v7 = v6;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  uint64_t v8 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Error annotating folder items: %@", 33, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

void sub_10101E830()
{
  id v1 = [v0 collectionView];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v1 visibleCells];

    sub_10101F058();
    unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v4 >> 62) {
      goto LABEL_20;
    }
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v5)
    {
      uint64_t v6 = 4;
      while (1)
      {
        id v7 = (v4 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : *(id *)(v4 + 8 * v6);
        uint64_t v8 = v7;
        uint64_t v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1)) {
          break;
        }
        swift_getObjectType();
        uint64_t v10 = swift_conformsToProtocol2();
        if (v10) {
          uint64_t v11 = v10;
        }
        else {
          uint64_t v11 = 0;
        }
        if (v10) {
          uint64_t v12 = v8;
        }
        else {
          uint64_t v12 = 0;
        }
        if (!v12)
        {
          swift_bridgeObjectRelease();

          return;
        }
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t))(*(void *)(v11 + 16) + 16))(ObjectType);

        ++v6;
        if (v9 == v5) {
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_20:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
LABEL_17:
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10101E9F0(uint64_t a1)
{
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_100528488;
  return sub_10101D750(a1);
}

void sub_10101EA88()
{
}

unint64_t sub_10101EAAC(char a1)
{
  unint64_t result = 0x656D616E6572;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6572616873;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x734174726F707865;
      break;
    case 4:
      unint64_t result = 0x746163696C707564;
      break;
    case 5:
      unint64_t result = 0x657469726F766166;
      break;
    case 6:
      unint64_t result = 0x69726F7661666E75;
      break;
    case 7:
      unint64_t result = 0x6574656C6564;
      break;
    case 8:
      unint64_t result = 0x7265766F636572;
      break;
    case 9:
      unint64_t result = 1701079400;
      break;
    case 10:
      unint64_t result = 0x796C706572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10101EBFC(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_10101EAAC(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_10101EAAC(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_10101EC88()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_10101EAAC(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_10101ECEC()
{
  sub_10101EAAC(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10101ED40()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_10101EAAC(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_10101EDA0@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_101020350(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_10101EDD0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10101EAAC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_10101EDFC(void *a1@<X8>)
{
  *a1 = &off_101503528;
}

uint64_t sub_10101EE0C()
{
  if ([v0 isEditing])
  {
    [v0 setEditing:0];
    id v1 = [self sharedInstance];
    [v1 setFirstElementForUpcomingScreenChange:v0];

    UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, v0);
    return 1;
  }
  else
  {
    v3.receiver = v0;
    v3.super_class = (Class)type metadata accessor for CRLiOSFolderGridViewController();
    return (uint64_t)[super accessibilityPerformEscape];
  }
}

unsigned char *_s23BoardLibraryLayoutStyleOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10101EFC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s23BoardLibraryLayoutStyleOMa()
{
  return &_s23BoardLibraryLayoutStyleON;
}

unint64_t sub_10101F004()
{
  unint64_t result = qword_1016A7458;
  if (!qword_1016A7458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A7458);
  }
  return result;
}

unint64_t sub_10101F058()
{
  unint64_t result = qword_101676330;
  if (!qword_101676330)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101676330);
  }
  return result;
}

uint64_t sub_10101F098(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10101F100(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10101F160(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

double *sub_10101F1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v58 = *(void *)(a1 + 16);
  if (!v58) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v57 = a1 + 32;
  uint64_t v61 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  uint64_t v56 = a2;
  uint64_t v55 = (void *)(a2 + 56);
  unsigned int v4 = _swiftEmptyArrayStorage;
  while (2)
  {
    uint64_t v5 = v57 + 32 * v3;
    uint64_t v7 = *(void *)v5;
    unint64_t v6 = *(void *)(v5 + 8);
    uint64_t v8 = *(void *)(v5 + 16);
    unsigned int v9 = *(unsigned __int8 *)(v5 + 24);
    ++v3;
    char v62 = v4;
    switch(v9 >> 6)
    {
      case 1u:
        uint64_t v10 = sub_100B810F0(v7);
        unint64_t v11 = v12;
        if (v61) {
          goto LABEL_29;
        }
        goto LABEL_3;
      case 2u:
        if (!v7) {
          goto LABEL_24;
        }
        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v15 = v14;
        int v16 = *(void **)(v7 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
        uint64_t v60 = (void *)v7;
        (id)v7;
        id v17 = [v16 userIdentity];
        id v18 = [v17 userRecordID];

        if (v18)
        {
          id v19 = [v18 recordName];

          uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v22 = v21;

          if (v13 == v20 && v15 == v22)
          {
            swift_bridgeObjectRelease_n();
LABEL_50:
            id v49 = [self mainBundle];
            NSString v50 = String._bridgeToObjectiveC()();
            NSString v51 = String._bridgeToObjectiveC()();
            id v52 = [v49 localizedStringForKey:v50 value:v51 table:0];

            uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v11 = v53;

            uint64_t v7 = (uint64_t)v60;
            sub_10053BBA0(v60, (id)v6, v8, v9);
            sub_10053BBA0(v60, (id)v6, v8, v9);
            if (v61) {
              goto LABEL_29;
            }
            goto LABEL_3;
          }
          char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v24) {
            goto LABEL_50;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        id v31 = [self mainBundle];
        NSString v32 = String._bridgeToObjectiveC()();
        NSString v33 = String._bridgeToObjectiveC()();
        id v34 = [v31 localizedStringForKey:v32 value:v33 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = xmmword_10117E810;
        uint64_t v36 = sub_100701F80();
        uint64_t v38 = v37;
        *(void *)(v35 + 56) = &type metadata for String;
        *(void *)(v35 + 64) = sub_100528BE4();
        *(void *)(v35 + 32) = v36;
        *(void *)(v35 + 40) = v38;
        uint64_t v10 = String.init(format:_:)();
        unint64_t v11 = v39;
        uint64_t v7 = (uint64_t)v60;
        sub_10053BBA0(v60, (id)v6, v8, v9);
        sub_10053BBA0(v60, (id)v6, v8, v9);
        swift_bridgeObjectRelease();
LABEL_28:
        if (!v61) {
          goto LABEL_3;
        }
LABEL_29:
        uint64_t v40 = (void *)v7;
        unsigned __int8 v59 = v9;
        BOOL v41 = *(void *)(v56 + 32) == v10 && *(void *)(v56 + 40) == v11;
        if (v41 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_34;
        }
        if (v61 == 1)
        {
LABEL_48:
          swift_bridgeObjectRelease();
          sub_10053BBA0(v40, (id)v6, v8, v59);
          unsigned int v4 = v62;
        }
        else
        {
          uint64_t v45 = v55;
          uint64_t v46 = 1;
          while (1)
          {
            uint64_t v47 = v46 + 1;
            if (__OFADD__(v46, 1))
            {
              __break(1u);
              JUMPOUT(0x10101F950);
            }
            BOOL v48 = *(v45 - 1) == v10 && *v45 == v11;
            if (v48 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
              break;
            }
            v45 += 2;
            ++v46;
            if (v47 == v61) {
              goto LABEL_48;
            }
          }
LABEL_34:
          swift_bridgeObjectRelease();
          unsigned int v4 = v62;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unsigned int v4 = sub_100F64E80(0, *((void *)v62 + 2) + 1, 1, v62);
          }
          unint64_t v43 = *((void *)v4 + 2);
          unint64_t v42 = *((void *)v4 + 3);
          if (v43 >= v42 >> 1) {
            unsigned int v4 = sub_100F64E80((double *)(v42 > 1), v43 + 1, 1, v4);
          }
          *((void *)v4 + 2) = v43 + 1;
          uint64_t v44 = &v4[4 * v43];
          *((void *)v44 + 4) = v40;
          *((void *)v44 + 5) = v6;
          *((void *)v44 + 6) = v8;
          *((unsigned char *)v44 + 56) = v59;
        }
LABEL_4:
        if (v3 != v58) {
          continue;
        }
        swift_bridgeObjectRelease();
        break;
      case 3u:
        uint64_t v10 = 0;
        unint64_t v11 = 0xE000000000000000;
        if (v8 | v6 | v7 || v9 != 192) {
          goto LABEL_28;
        }
LABEL_24:
        id v25 = [self mainBundle];
        NSString v26 = String._bridgeToObjectiveC()();
        NSString v27 = String._bridgeToObjectiveC()();
        uint64_t v28 = v7;
        id v29 = [v25 localizedStringForKey:v26 value:v27 table:0];

        uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v11 = v30;

        uint64_t v7 = v28;
        if (!v61) {
          goto LABEL_3;
        }
        goto LABEL_29;
      default:
        if (v6)
        {
          sub_10053BB6C((id)v7, (id)v6, v8, v9);
          swift_bridgeObjectRetain();
          uint64_t v10 = v7;
          unint64_t v11 = v6;
          if (!v61) {
            goto LABEL_3;
          }
        }
        else
        {
          uint64_t v10 = 0;
          unint64_t v11 = 0xE000000000000000;
          if (!v61)
          {
LABEL_3:
            swift_bridgeObjectRelease();
            sub_10053BBA0((void *)v7, (id)v6, v8, v9);
            unsigned int v4 = v62;
            goto LABEL_4;
          }
        }
        goto LABEL_29;
    }
    return v4;
  }
}

void sub_10101F960()
{
  uint64_t v0 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v112 = (char *)v107 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v4);
  uint64_t v111 = (char *)v107 - v5;
  __chkstk_darwin(v6, v7);
  uint64_t v110 = (char *)v107 - v8;
  __chkstk_darwin(v9, v10);
  uint64_t v109 = (char *)v107 - v11;
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)v107 - v14;
  __chkstk_darwin(v16, v17);
  id v19 = (char *)v107 - v18;
  sub_1005057FC(&qword_1016A7490);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_101186E40;
  uint64_t v21 = sub_1005057FC(&qword_101670F30);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v108 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  uint64_t v23 = v22 + 56;
  v108(v19, 1, 5, v21);
  uint64_t v24 = v23;
  unint64_t v25 = sub_100DD54C4();
  uint64_t v27 = v26;
  uint64_t v114 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
  sub_10101F100((uint64_t)v19, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  *(void *)(inited + 32) = v25;
  *(void *)(inited + 40) = v27;
  uint64_t v28 = sub_1005057FC(&qword_10168B3D0);
  uint64_t v29 = swift_initStackObject();
  long long v115 = xmmword_10117E800;
  *(_OWORD *)(v29 + 16) = xmmword_10117E800;
  uint64_t v30 = *(void *)&aIsgridlayout_2[8];
  *(void *)(v29 + 32) = *(void *)aIsgridlayout_2;
  *(void *)(v29 + 40) = v30;
  *(unsigned char *)(v29 + 48) = 1;
  uint64_t v31 = qword_1016A7428;
  NSString v32 = off_1016A7430;
  *(void *)(v29 + 72) = &type metadata for Bool;
  *(void *)(v29 + 80) = v31;
  *(void *)(v29 + 88) = v32;
  *(void *)(v29 + 96) = 1;
  uint64_t v33 = qword_1016A7438;
  id v34 = off_1016A7440;
  *(void *)(v29 + 120) = &type metadata for Int;
  *(void *)(v29 + 128) = v33;
  *(void *)(v29 + 136) = v34;
  *(unsigned char *)(v29 + 144) = 0;
  uint64_t v35 = qword_1016A7418;
  uint64_t v36 = off_1016A7420;
  *(void *)(v29 + 168) = &type metadata for Bool;
  *(void *)(v29 + 176) = v35;
  *(void *)(v29 + 184) = v36;
  *(void *)(v29 + 216) = &type metadata for Bool;
  *(unsigned char *)(v29 + 192) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)(inited + 48) = sub_100A39A60(v29);
  uint64_t v113 = v21;
  uint64_t v37 = v24;
  uint64_t v38 = v108;
  v108(v15, 2, 5, v21);
  unint64_t v39 = sub_100DD54C4();
  uint64_t v41 = v40;
  sub_10101F100((uint64_t)v15, v114);
  *(void *)(inited + 56) = v39;
  *(void *)(inited + 64) = v41;
  v107[1] = v28;
  uint64_t v42 = swift_initStackObject();
  *(_OWORD *)(v42 + 16) = v115;
  uint64_t v43 = *(void *)&aIsgridlayout_2[8];
  *(void *)(v42 + 32) = *(void *)aIsgridlayout_2;
  *(void *)(v42 + 40) = v43;
  *(unsigned char *)(v42 + 48) = 1;
  uint64_t v44 = qword_1016A7428;
  uint64_t v45 = off_1016A7430;
  *(void *)(v42 + 72) = &type metadata for Bool;
  *(void *)(v42 + 80) = v44;
  *(void *)(v42 + 88) = v45;
  *(void *)(v42 + 96) = 1;
  uint64_t v46 = qword_1016A7438;
  uint64_t v47 = off_1016A7440;
  *(void *)(v42 + 120) = &type metadata for Int;
  *(void *)(v42 + 128) = v46;
  *(void *)(v42 + 136) = v47;
  *(unsigned char *)(v42 + 144) = 0;
  uint64_t v48 = qword_1016A7418;
  id v49 = off_1016A7420;
  *(void *)(v42 + 168) = &type metadata for Bool;
  *(void *)(v42 + 176) = v48;
  *(void *)(v42 + 184) = v49;
  *(void *)(v42 + 216) = &type metadata for Bool;
  *(unsigned char *)(v42 + 192) = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)(inited + 72) = sub_100A39A60(v42);
  uint64_t v50 = (uint64_t)v109;
  v38(v109, 3, 5, v21);
  uint64_t v51 = v37;
  unint64_t v52 = sub_100DD54C4();
  uint64_t v54 = v53;
  uint64_t v55 = v114;
  sub_10101F100(v50, v114);
  *(void *)(inited + 80) = v52;
  *(void *)(inited + 88) = v54;
  uint64_t v56 = swift_initStackObject();
  *(_OWORD *)(v56 + 16) = v115;
  uint64_t v57 = *(void *)&aIsgridlayout_2[8];
  *(void *)(v56 + 32) = *(void *)aIsgridlayout_2;
  *(void *)(v56 + 40) = v57;
  *(unsigned char *)(v56 + 48) = 1;
  uint64_t v58 = qword_1016A7428;
  unsigned __int8 v59 = off_1016A7430;
  *(void *)(v56 + 72) = &type metadata for Bool;
  *(void *)(v56 + 80) = v58;
  *(void *)(v56 + 88) = v59;
  *(void *)(v56 + 96) = 1;
  uint64_t v60 = qword_1016A7438;
  uint64_t v61 = off_1016A7440;
  *(void *)(v56 + 120) = &type metadata for Int;
  *(void *)(v56 + 128) = v60;
  *(void *)(v56 + 136) = v61;
  *(unsigned char *)(v56 + 144) = 0;
  uint64_t v62 = qword_1016A7418;
  char v63 = off_1016A7420;
  *(void *)(v56 + 168) = &type metadata for Bool;
  *(void *)(v56 + 176) = v62;
  *(void *)(v56 + 184) = v63;
  *(void *)(v56 + 216) = &type metadata for Bool;
  *(unsigned char *)(v56 + 192) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)(inited + 96) = sub_100A39A60(v56);
  uint64_t v64 = (uint64_t)v110;
  uint64_t v65 = v113;
  v38(v110, 4, 5, v113);
  v107[2] = v51;
  unint64_t v66 = sub_100DD54C4();
  uint64_t v68 = v67;
  sub_10101F100(v64, v55);
  *(void *)(inited + 104) = v66;
  *(void *)(inited + 112) = v68;
  uint64_t v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = v115;
  uint64_t v70 = *(void *)&aIsgridlayout_2[8];
  *(void *)(v69 + 32) = *(void *)aIsgridlayout_2;
  *(void *)(v69 + 40) = v70;
  *(unsigned char *)(v69 + 48) = 1;
  uint64_t v71 = qword_1016A7428;
  char v72 = off_1016A7430;
  *(void *)(v69 + 72) = &type metadata for Bool;
  *(void *)(v69 + 80) = v71;
  *(void *)(v69 + 88) = v72;
  *(void *)(v69 + 96) = 2;
  uint64_t v73 = qword_1016A7438;
  long long v74 = off_1016A7440;
  *(void *)(v69 + 120) = &type metadata for Int;
  *(void *)(v69 + 128) = v73;
  *(void *)(v69 + 136) = v74;
  *(unsigned char *)(v69 + 144) = 1;
  uint64_t v75 = qword_1016A7418;
  long long v76 = off_1016A7420;
  *(void *)(v69 + 168) = &type metadata for Bool;
  *(void *)(v69 + 176) = v75;
  *(void *)(v69 + 184) = v76;
  *(void *)(v69 + 216) = &type metadata for Bool;
  *(unsigned char *)(v69 + 192) = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)(inited + 120) = sub_100A39A60(v69);
  uint64_t v77 = (uint64_t)v111;
  v38(v111, 5, 5, v65);
  unint64_t v78 = sub_100DD54C4();
  uint64_t v80 = v79;
  long long v81 = v114;
  sub_10101F100(v77, v114);
  *(void *)(inited + 128) = v78;
  *(void *)(inited + 136) = v80;
  uint64_t v82 = swift_allocObject();
  *(_OWORD *)(v82 + 16) = v115;
  uint64_t v83 = *(void *)&aIsgridlayout_2[8];
  *(void *)(v82 + 32) = *(void *)aIsgridlayout_2;
  *(void *)(v82 + 40) = v83;
  *(unsigned char *)(v82 + 48) = 1;
  uint64_t v84 = qword_1016A7428;
  uint64_t v85 = off_1016A7430;
  *(void *)(v82 + 72) = &type metadata for Bool;
  *(void *)(v82 + 80) = v84;
  *(void *)(v82 + 88) = v85;
  *(void *)(v82 + 96) = 1;
  uint64_t v86 = qword_1016A7438;
  uint64_t v87 = off_1016A7440;
  *(void *)(v82 + 120) = &type metadata for Int;
  *(void *)(v82 + 128) = v86;
  *(void *)(v82 + 136) = v87;
  *(unsigned char *)(v82 + 144) = 0;
  uint64_t v88 = qword_1016A7418;
  uint64_t v89 = off_1016A7420;
  *(void *)(v82 + 168) = &type metadata for Bool;
  *(void *)(v82 + 176) = v88;
  *(void *)(v82 + 184) = v89;
  *(void *)(v82 + 216) = &type metadata for Bool;
  *(unsigned char *)(v82 + 192) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)(inited + 144) = sub_100A39A60(v82);
  uint64_t v91 = (uint64_t)v112;
  uint64_t v90 = v113;
  uint64_t v92 = &v112[*(int *)(v113 + 48)];
  UUID.init()();
  *(void *)uint64_t v92 = 0;
  *((void *)v92 + 1) = 0xE000000000000000;
  v38((char *)v91, 0, 5, v90);
  unint64_t v93 = sub_100DD54C4();
  uint64_t v95 = v94;
  sub_10101F100(v91, v81);
  *(void *)(inited + 152) = v93;
  *(void *)(inited + 160) = v95;
  uint64_t v96 = swift_allocObject();
  *(_OWORD *)(v96 + 16) = v115;
  uint64_t v97 = *(void *)&aIsgridlayout_2[8];
  *(void *)(v96 + 32) = *(void *)aIsgridlayout_2;
  *(void *)(v96 + 40) = v97;
  *(unsigned char *)(v96 + 48) = 1;
  uint64_t v98 = qword_1016A7428;
  uint64_t v99 = off_1016A7430;
  *(void *)(v96 + 72) = &type metadata for Bool;
  *(void *)(v96 + 80) = v98;
  *(void *)(v96 + 88) = v99;
  *(void *)(v96 + 96) = 1;
  uint64_t v100 = qword_1016A7438;
  uint64_t v101 = off_1016A7440;
  *(void *)(v96 + 120) = &type metadata for Int;
  *(void *)(v96 + 128) = v100;
  *(void *)(v96 + 136) = v101;
  *(unsigned char *)(v96 + 144) = 0;
  uint64_t v102 = qword_1016A7418;
  uint64_t v103 = off_1016A7420;
  *(void *)(v96 + 168) = &type metadata for Bool;
  *(void *)(v96 + 176) = v102;
  *(void *)(v96 + 184) = v103;
  *(void *)(v96 + 216) = &type metadata for Bool;
  *(unsigned char *)(v96 + 192) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)(inited + 168) = sub_100A39A60(v96);
  unint64_t v104 = sub_100A3AC0C(inited);
  id v105 = [self standardUserDefaults];
  sub_100ED356C(v104);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v105 registerDefaults:isa];
}

unsigned char *_s19AccessibilityActionOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x101020260);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *_s19AccessibilityActionOMa()
{
  return &_s19AccessibilityActionON;
}

unint64_t sub_10102029C()
{
  unint64_t result = qword_1016A7498;
  if (!qword_1016A7498)
  {
    sub_100522D34(&qword_1016A74A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A7498);
  }
  return result;
}

unint64_t sub_1010202FC()
{
  unint64_t result = qword_1016A74A8;
  if (!qword_1016A74A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A74A8);
  }
  return result;
}

unint64_t sub_101020350(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101505250, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xB) {
    return 11;
  }
  else {
    return v3;
  }
}

uint64_t sub_10102039C(uint64_t a1, uint64_t a2, int a3)
{
  int v17 = a3;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform23CRLCommandSetSceneTitle_sceneTitle);
  unint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform23CRLCommandSetSceneTitle_sceneTitle + 8);
  uint64_t v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v12 = v10 & 0xFFFFFFFFFFFFLL;
  }
  if (!v12)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetSceneTitle.swift", 95, 2, 18, (uint64_t)"Scene's title shouldn't be empty string.", 40, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetSceneTitle.swift", 95, 2, 18);
  }
  uint64_t result = sub_10103405C(a1, (uint64_t)&off_10152A280);
  if (!v4)
  {
    uint64_t v14 = v16;
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v9, *(void *)(v3 + OBJC_IVAR____TtC8Freeform23CRLCommandSetSceneTitle_sceneInfo)+ OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID, v6);
    swift_retain();
    sub_101049F14((uint64_t)v9, v10, v11);
    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v6);
    return sub_101023724(a1, (uint64_t)&off_10152A280, v17);
  }
  return result;
}

uint64_t sub_101020638()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_101020690()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetSceneTitle();
  [super dealloc];
}

uint64_t type metadata accessor for CRLCommandSetSceneTitle()
{
  return self;
}

uint64_t sub_10102074C()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC8Freeform23CRLCommandSetSceneTitle_actionString);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_10102078C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (uint64_t *)&v3[OBJC_IVAR____TtC8Freeform23CRLCommandSetSceneTitle_actionString];
  uint64_t v8 = self;
  uint64_t v9 = v3;
  id v10 = [v8 mainBundle];
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v10 localizedStringForKey:v11 value:v12 table:v13];

  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  *uint64_t v7 = v15;
  v7[1] = v17;
  *(void *)&v9[OBJC_IVAR____TtC8Freeform23CRLCommandSetSceneTitle_sceneInfo] = a1;
  uint64_t v18 = &v9[OBJC_IVAR____TtC8Freeform23CRLCommandSetSceneTitle_sceneTitle];
  *(void *)uint64_t v18 = a2;
  *((void *)v18 + 1) = a3;
  id v19 = a1;

  v21.receiver = v9;
  v21.super_class = (Class)type metadata accessor for CRLCommandSetSceneTitle();
  return [super init];
}

id sub_101020940()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLAnalyticsSharePlayJoined();
  [super dealloc];
}

uint64_t type metadata accessor for CRLAnalyticsSharePlayJoined()
{
  return self;
}

uint64_t type metadata accessor for CRLAnalyticsSharePlaySessionInvalidation()
{
  return self;
}

id sub_101020D40()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLAnalyticsSpatialPreview();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLAnalyticsSpatialPreview()
{
  return self;
}

void sub_101020D9C(void *a1, char a2)
{
  uint64_t v4 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = sub_100A39814((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v9 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xC8))();
  char v11 = v10;
  v12._countAndFlagsBits = sub_100DD2424(v9, v10 & 1);
  uint64_t v26 = 0x657079546D657469;
  unint64_t v27 = 0xE800000000000000;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0 && v9 == 4)
  {
    type metadata accessor for CRLMovieItem();
    if (swift_dynamicCastClass())
    {
      NSString v13 = a1;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_retain();
      sub_1005057FC(&qword_1016A4070);
      CRRegister.wrappedValue.getter();
      int v14 = v7[*(int *)(v4 + 36)];
      swift_endAccess();
      sub_100515888((uint64_t)v7);
      swift_release();
      if (v14) {
        uint64_t v15 = 0x6F69647541;
      }
      else {
        uint64_t v15 = 0x6569766F4DLL;
      }
      uint64_t v26 = 0x657079546D657469;
      unint64_t v27 = 0xE800000000000000;
      unint64_t v16 = 0xE500000000000000;
      String.append(_:)(*(Swift::String *)&v15);
      swift_bridgeObjectRelease();
    }
  }
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v26 = v8;
  sub_100973904((uint64_t)v17, 0x54746E65746E6F63, 0xEB00000000657079, isUniquelyReferenced_nonNull_native);
  uint64_t v19 = v26;
  swift_bridgeObjectRelease();
  id v20 = [objc_allocWithZone((Class)NSNumber) initWithBool:a2 & 1];
  char v21 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v26 = v19;
  sub_100973904((uint64_t)v20, 0xD00000000000001FLL, 0x800000010129DF10, v21);
  swift_bridgeObjectRelease();
  uint64_t v22 = self;
  NSString v23 = String._bridgeToObjectiveC()();
  sub_10057BCD8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v22 sendEventInDomain:v23 lazily:1 eventPayload:isa];
}

id sub_101021164()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLAnalyticsSharePlayEnded();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLAnalyticsSharePlayEnded()
{
  return self;
}

id sub_101021210()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLPasteboardSourceContext();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLPasteboardSourceContext()
{
  return self;
}

uint64_t sub_1010212B4()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v25 = (uint64_t)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRLProto_Data(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  unint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  Swift::String v12 = (long long *)((char *)&v24 - v11);
  uint64_t v13 = type metadata accessor for CRLProto_EncryptedRealTimeMessage(0);
  __chkstk_darwin(v13, v14);
  unint64_t v16 = (void *)((char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  UnknownStorage.init()();
  uint64_t v27 = v13;
  uint64_t v17 = (uint64_t)v16 + *(int *)(v13 + 24);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v18(v17, 1, 1, v4);
  *unint64_t v16 = v0[2];
  long long v24 = xmmword_101180360;
  *Swift::String v12 = xmmword_101180360;
  UnknownStorage.init()();
  sub_1008A9D98(v17);
  sub_1005CC5B8((uint64_t)v12, v17);
  uint64_t v26 = v18;
  v18(v17, 0, 1, v4);
  uint64_t v19 = v25;
  uint64_t v21 = v0[3];
  unint64_t v20 = v0[4];
  sub_1005CC4F0(v17, v25);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v19, 1, v4) == 1)
  {
    *(_OWORD *)unint64_t v8 = v24;
    sub_100510D4C(v21, v20);
    UnknownStorage.init()();
    sub_1008A9D98(v19);
  }
  else
  {
    sub_1005CC5B8(v19, (uint64_t)v8);
    sub_100510D4C(v21, v20);
  }
  sub_100510084(*(void *)v8, *((void *)v8 + 1));
  *(void *)unint64_t v8 = v21;
  *((void *)v8 + 1) = v20;
  sub_1008A9D98(v17);
  sub_1005CC5B8((uint64_t)v8, v17);
  v26(v17, 0, 1, v4);
  sub_1005CC498();
  uint64_t v22 = Message.serializedData(partial:)();
  sub_1005CC558((uint64_t)v16, type metadata accessor for CRLProto_EncryptedRealTimeMessage);
  return v22;
}

uint64_t sub_1010215D0()
{
  if (*v0) {
    return 0xD000000000000015;
  }
  else {
    return 0x6E6F6973726576;
  }
}

uint64_t sub_101021610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10102203C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_101021638(uint64_t a1)
{
  unint64_t v2 = sub_101021AF4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_101021674(uint64_t a1)
{
  unint64_t v2 = sub_101021AF4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t type metadata accessor for CRLEncryptedRealTimeMessage()
{
  return self;
}

uint64_t sub_1010216D4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_1016A7700);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_101021AF4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v12) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    long long v12 = *(_OWORD *)(v3 + 24);
    v11[15] = 1;
    sub_10060D344();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_10102184C(void *a1)
{
  uint64_t v4 = sub_1005057FC(&qword_1016A76F0);
  uint64_t v11 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_101021AF4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v11;
    LOBYTE(v12) = 0;
    *(void *)(v1 + 16) = KeyedDecodingContainer.decode(_:forKey:)();
    char v13 = 1;
    sub_10060D184();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v4);
    *(_OWORD *)(v1 + 24) = v12;
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return v1;
}

uint64_t sub_101021A4C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_10102184C(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_101021AA4(void *a1)
{
  return sub_1010216D4(a1);
}

uint64_t sub_101021AC8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(*(void *)a1 + 16) == *(void *)(*(void *)a2 + 16)) {
    return sub_1008D44A8(*(void *)(*(void *)a1 + 24), *(void *)(*(void *)a1 + 32), *(void *)(*(void *)a2 + 24), *(void *)(*(void *)a2 + 32));
  }
  else {
    return 0;
  }
}

unint64_t sub_101021AF4()
{
  unint64_t result = qword_1016A76F8;
  if (!qword_1016A76F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A76F8);
  }
  return result;
}

void *sub_101021B48(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLProto_Data(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  long long v12 = (uint64_t *)((char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for BinaryDecodingOptions();
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v15 = type metadata accessor for CRLProto_EncryptedRealTimeMessage(0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (uint64_t *)((char *)v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = 0;
  memset(v23, 0, sizeof(v23));
  sub_100510D4C(a1, a2);
  BinaryDecodingOptions.init()();
  sub_1005CC498();
  uint64_t v19 = v25;
  Message.init(serializedData:extensions:partial:options:)();
  if (v19) {
    return (void *)sub_100510084(a1, a2);
  }
  uint64_t v25 = *v18;
  sub_1005CC4F0((uint64_t)v18 + *(int *)(v15 + 24), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    *(_OWORD *)long long v12 = xmmword_101180360;
    UnknownStorage.init()();
    sub_1008A9D98((uint64_t)v7);
  }
  else
  {
    sub_1005CC5B8((uint64_t)v7, (uint64_t)v12);
  }
  sub_100510084(a1, a2);
  sub_1005CC558((uint64_t)v18, type metadata accessor for CRLProto_EncryptedRealTimeMessage);
  uint64_t v21 = *v12;
  unint64_t v22 = v12[1];
  sub_100510D4C(*v12, v22);
  sub_1005CC558((uint64_t)v12, type metadata accessor for CRLProto_Data);
  type metadata accessor for CRLEncryptedRealTimeMessage();
  unint64_t result = (void *)swift_allocObject();
  result[2] = v25;
  result[3] = v21;
  result[4] = v22;
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLEncryptedRealTimeMessage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x101021EFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLEncryptedRealTimeMessage.CodingKeys()
{
  return &type metadata for CRLEncryptedRealTimeMessage.CodingKeys;
}

unint64_t sub_101021F38()
{
  unint64_t result = qword_1016A7708;
  if (!qword_1016A7708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A7708);
  }
  return result;
}

unint64_t sub_101021F90()
{
  unint64_t result = qword_1016A7710;
  if (!qword_1016A7710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A7710);
  }
  return result;
}

unint64_t sub_101021FE8()
{
  unint64_t result = qword_1016A7718;
  if (!qword_1016A7718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A7718);
  }
  return result;
}

uint64_t sub_10102203C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000010127AF90)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BOOL sub_10102212C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_10102219C(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for UUID, (uint64_t *)&unk_101674520);
}

BOOL sub_101022164(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_10102219C(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for IndexPath, (uint64_t *)&unk_10169B4A0);
}

BOOL sub_10102219C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t *a5)
{
  uint64_t v7 = v5;
  uint64_t v43 = a1;
  uint64_t v44 = a4(0);
  uint64_t v9 = *(void *)(v44 - 8);
  __chkstk_darwin(v44, v10);
  long long v12 = (char *)v34 - v11;
  uint64_t v13 = sub_1005057FC(a5);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a3 + 16);
  if (v17)
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v18 = v9 + 16;
    uint64_t v42 = v19;
    uint64_t v20 = a3 + ((*(unsigned __int8 *)(v18 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 64));
    uint64_t v21 = *(void *)(v18 + 56);
    unint64_t v39 = v12;
    uint64_t v40 = (uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 32);
    uint64_t v36 = v21;
    uint64_t v37 = (void (**)(char *))(v18 + 16);
    uint64_t v38 = (void (**)(char *, uint64_t))(v18 - 8);
    void v34[2] = a3;
    swift_bridgeObjectRetain();
    uint64_t v41 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 40);
    v34[1] = (v18 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      uint64_t v22 = v44;
      uint64_t v23 = v18;
      v42(v16, v20, v44);
      uint64_t v24 = *v41;
      (*v41)(v16, 0, 1, v22);
      int v25 = (*v40)(v16, 1, v22);
      BOOL v26 = v25 != 1;
      if (v25 == 1) {
        break;
      }
      uint64_t v35 = v24;
      uint64_t v27 = v16;
      uint64_t v28 = v39;
      uint64_t v29 = v27;
      (*v37)(v39);
      char v30 = v43(v28);
      if (v7)
      {
        (*v38)(v28, v22);
        swift_bridgeObjectRelease();
        return v26;
      }
      char v31 = v30;
      (*v38)(v28, v22);
      if (v31) {
        break;
      }
      v20 += v36;
      --v17;
      uint64_t v7 = 0;
      uint64_t v18 = v23;
      uint64_t v16 = v29;
      if (!v17)
      {
        v35(v29, 1, 1, v44);
        goto LABEL_9;
      }
    }
  }
  else
  {
    NSString v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    swift_bridgeObjectRetain();
    v32(v16, 1, 1, v44);
LABEL_9:
    BOOL v26 = 0;
  }
  swift_bridgeObjectRelease();
  return v26;
}

void *sub_10102247C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = __CocoaSet.count.getter();
    if ((v2 & 0xC000000000000001) != 0) {
      goto LABEL_3;
    }
LABEL_9:
    if (v4 > *(void *)(v2 + 16) >> 3) {
      goto LABEL_10;
    }
LABEL_13:
    sub_1010295FC(a1);
    return (void *)v2;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if ((a2 & 0xC000000000000001) == 0) {
    goto LABEL_9;
  }
LABEL_3:
  if (v2 < 0) {
    uint64_t v5 = v2;
  }
  else {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFFF8;
  }
  if (v4 <= __CocoaSet.count.getter() / 8) {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = __CocoaSet.count.getter();
  Swift::Int v7 = sub_100CBC850(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v2 = v7;
LABEL_10:

  return sub_10102B0D8(a1, v2);
}

void *sub_101022584(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = __CocoaSet.count.getter();
    if ((v2 & 0xC000000000000001) != 0) {
      goto LABEL_3;
    }
LABEL_9:
    if (v4 > *(void *)(v2 + 16) >> 3) {
      goto LABEL_10;
    }
LABEL_13:
    sub_10102A700(a1, (void (*)(void))sub_10053BBC0, (unint64_t *)&qword_101674208, (void (*)(uint64_t))sub_10053BBC0, sub_100D17A0C);
    return (void *)v2;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if ((a2 & 0xC000000000000001) == 0) {
    goto LABEL_9;
  }
LABEL_3:
  if (v2 < 0) {
    uint64_t v5 = v2;
  }
  else {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFFF8;
  }
  if (v4 <= __CocoaSet.count.getter() / 8) {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = __CocoaSet.count.getter();
  Swift::Int v7 = sub_100CBD3D0(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v2 = v7;
LABEL_10:

  return sub_10102CBBC(a1, v2);
}

void *sub_1010226D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = __CocoaSet.count.getter();
    if ((v2 & 0xC000000000000001) != 0) {
      goto LABEL_3;
    }
LABEL_9:
    if (v4 > *(void *)(v2 + 16) >> 3) {
      goto LABEL_10;
    }
LABEL_13:
    sub_10102A700(a1, (void (*)(void))type metadata accessor for CRLSceneInfo, &qword_10169FA90, (void (*)(uint64_t))type metadata accessor for CRLSceneInfo, sub_100D18DE0);
    return (void *)v2;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if ((a2 & 0xC000000000000001) == 0) {
    goto LABEL_9;
  }
LABEL_3:
  if (v2 < 0) {
    uint64_t v5 = v2;
  }
  else {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFFF8;
  }
  if (v4 <= __CocoaSet.count.getter() / 8) {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = __CocoaSet.count.getter();
  Swift::Int v7 = sub_100CBD598(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v2 = v7;
LABEL_10:

  return sub_10102E4B4(a1, v2);
}

void *sub_10102281C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = __CocoaSet.count.getter();
    if ((v2 & 0xC000000000000001) != 0) {
      goto LABEL_3;
    }
LABEL_9:
    if (v4 > *(void *)(v2 + 16) >> 3) {
      goto LABEL_10;
    }
LABEL_13:
    sub_10102A700(a1, (void (*)(void))type metadata accessor for CRLCollaborationParticipant, (unint64_t *)&unk_10167C500, (void (*)(uint64_t))type metadata accessor for CRLCollaborationParticipant, sub_100D16BE8);
    return (void *)v2;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if ((a2 & 0xC000000000000001) == 0) {
    goto LABEL_9;
  }
LABEL_3:
  if (v2 < 0) {
    uint64_t v5 = v2;
  }
  else {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFFF8;
  }
  if (v4 <= __CocoaSet.count.getter() / 8) {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = __CocoaSet.count.getter();
  Swift::Int v7 = sub_100CBCD54(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v2 = v7;
LABEL_10:

  return sub_10102EA48(a1, v2);
}

uint64_t sub_101022968(uint64_t a1)
{
  uint64_t v32 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v32 - 8);
  __chkstk_darwin(v32, v3);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v7 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v7 = *(void *)(a1 + 16);
  }
  uint64_t v8 = _swiftEmptyArrayStorage;
  if (!v7)
  {
LABEL_23:
    uint64_t v28 = sub_100CDCB64((uint64_t)v8);
    swift_bridgeObjectRelease();
    return v28;
  }
  uint64_t v37 = _swiftEmptyArrayStorage;
  sub_1006BB544(0, v7 & ~(v7 >> 63), 0);
  if (v6)
  {
    uint64_t result = __CocoaSet.startIndex.getter();
    unsigned __int8 v11 = 1;
  }
  else
  {
    uint64_t result = sub_1006678A4(a1);
    unsigned __int8 v11 = v12 & 1;
  }
  unint64_t v34 = result;
  uint64_t v35 = v10;
  unsigned __int8 v36 = v11;
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v13 = a1 & 0xFFFFFFFFFFFFFF8;
    if (a1 < 0) {
      uint64_t v13 = a1;
    }
    uint64_t v30 = v2;
    uint64_t v31 = v13;
    uint64_t v29 = v2 + 32;
    do
    {
      while (1)
      {
        uint64_t v22 = *(void *)(sub_1006670B0(v34, v35, v36, a1) + 24);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v22 + 32))(ObjectType, v22);
        swift_release();
        uint64_t v24 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB544(0, *((void *)v24 + 2) + 1, 1);
          uint64_t v24 = v37;
        }
        unint64_t v26 = *((void *)v24 + 2);
        unint64_t v25 = *((void *)v24 + 3);
        if (v26 >= v25 >> 1)
        {
          sub_1006BB544(v25 > 1, v26 + 1, 1);
          uint64_t v24 = v37;
        }
        *((void *)v24 + 2) = v26 + 1;
        uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))((unint64_t)v24+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v26, v5, v32);
        uint64_t v37 = v24;
        if (v6) {
          break;
        }
        uint64_t v14 = v34;
        uint64_t v15 = v35;
        char v16 = v36;
        uint64_t v17 = sub_100666C8C(v34, v35, v36, a1);
        uint64_t v19 = v18;
        char v21 = v20;
        sub_10056A4C4(v14, v15, v16);
        unint64_t v34 = v17;
        uint64_t v35 = v19;
        unint64_t v6 = 0;
        uint64_t v2 = v30;
        unsigned __int8 v36 = v21 & 1;
        if (!--v7) {
          goto LABEL_22;
        }
      }
      if ((v36 & 1) == 0) {
        goto LABEL_25;
      }
      if (__CocoaSet.Index.handleBitPattern.getter()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      sub_1005057FC(&qword_10167F6D0);
      uint64_t v27 = (void (*)(unsigned char *, void))Set.Index._asCocoa.modify();
      __CocoaSet.formIndex(after:isUnique:)();
      v27(v33, 0);
      --v7;
    }
    while (v7);
LABEL_22:
    sub_10056A4C4(v34, v35, v36);
    uint64_t v8 = v37;
    goto LABEL_23;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_101022CC0(uint64_t a1)
{
  uint64_t v42 = type metadata accessor for UUID();
  __chkstk_darwin(v42, v2);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v37 = v3;
  uint64_t v38 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  uint64_t v36 = v3 + 16;
  int64_t v39 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v40 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v41 = a1;
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  unsigned __int8 v11 = &_swiftEmptyDictionarySingleton;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      int64_t v43 = v10;
      unint64_t v14 = v13 | (v10 << 6);
    }
    else
    {
      int64_t v15 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_36;
      }
      if (v15 >= v39)
      {
LABEL_33:
        swift_release();
        return (uint64_t)v11;
      }
      unint64_t v16 = *(void *)(v38 + 8 * v15);
      int64_t v17 = v10 + 1;
      if (!v16)
      {
        int64_t v17 = v10 + 2;
        if (v10 + 2 >= v39) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v38 + 8 * v17);
        if (!v16)
        {
          int64_t v17 = v10 + 3;
          if (v10 + 3 >= v39) {
            goto LABEL_33;
          }
          unint64_t v16 = *(void *)(v38 + 8 * v17);
          if (!v16)
          {
            uint64_t v18 = v10 + 4;
            if (v10 + 4 >= v39) {
              goto LABEL_33;
            }
            unint64_t v16 = *(void *)(v38 + 8 * v18);
            if (!v16)
            {
              while (1)
              {
                int64_t v17 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_37;
                }
                if (v17 >= v39) {
                  goto LABEL_33;
                }
                unint64_t v16 = *(void *)(v38 + 8 * v17);
                ++v18;
                if (v16) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v10 + 4;
          }
        }
      }
LABEL_21:
      unint64_t v9 = (v16 - 1) & v16;
      int64_t v43 = v17;
      unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    }
    uint64_t v19 = *(void *)(*(void *)(v41 + 48) + 8 * v14);
    long long v44 = *(_OWORD *)(*(void *)(v41 + 56) + 16 * v14);
    uint64_t v20 = *(void *)(v19 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v20 + 32);
    swift_retain();
    swift_unknownObjectRetain();
    v22(ObjectType, v20);
    swift_unknownObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v45 = v11;
    unint64_t v25 = sub_100955FC8((uint64_t)v5);
    uint64_t v26 = v11[2];
    BOOL v27 = (v24 & 1) == 0;
    uint64_t v28 = v26 + v27;
    if (__OFADD__(v26, v27)) {
      break;
    }
    char v29 = v24;
    if (v11[3] >= v28)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        unsigned __int8 v11 = v45;
        if (v24) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_10097BB14();
        unsigned __int8 v11 = v45;
        if (v29) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_10095DFBC(v28, isUniquelyReferenced_nonNull_native);
      unint64_t v30 = sub_100955FC8((uint64_t)v5);
      if ((v29 & 1) != (v31 & 1)) {
        goto LABEL_38;
      }
      unint64_t v25 = v30;
      unsigned __int8 v11 = v45;
      if (v29)
      {
LABEL_4:
        uint64_t v12 = v11[7];
        swift_unknownObjectRelease();
        *(_OWORD *)(v12 + 16 * v25) = v44;
        goto LABEL_5;
      }
    }
    v11[(v25 >> 6) + 8] |= 1 << v25;
    (*(void (**)(unint64_t, char *, uint64_t))(v37 + 16))(v11[6] + *(void *)(v37 + 72) * v25, v5, v42);
    *(_OWORD *)(v11[7] + 16 * v25) = v44;
    uint64_t v32 = v11[2];
    BOOL v33 = __OFADD__(v32, 1);
    uint64_t v34 = v32 + 1;
    if (v33) {
      goto LABEL_35;
    }
    v11[2] = v34;
LABEL_5:
    swift_bridgeObjectRelease();
    (*v40)(v5, v42);
    swift_release();
    swift_unknownObjectRelease();
    int64_t v10 = v43;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void *sub_10102309C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return &_swiftEmptySetSingleton;
  }
  uint64_t v2 = swift_bridgeObjectRetain() + 56;
  do
  {
    uint64_t v3 = *(void *)(v2 - 24);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10057CB20(v3);
    uint64_t v4 = swift_bridgeObjectRetain();
    sub_10057CB20(v4);
    uint64_t v5 = swift_bridgeObjectRetain();
    sub_10057CB20(v5);
    uint64_t v6 = swift_bridgeObjectRetain();
    sub_10057CB20(v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 += 32;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return &_swiftEmptySetSingleton;
}

uint64_t type metadata accessor for CRLTransactableHashableWrapper()
{
  return self;
}

Swift::Int sub_1010231D4()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  Hasher.init(_seed:)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(ObjectType, v7);
  sub_10103567C((unint64_t *)&qword_1016770E0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return Hasher._finalize()();
}

uint64_t sub_101023324()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(*(void *)v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(ObjectType, v6);
  sub_10103567C((unint64_t *)&qword_1016770E0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

Swift::Int sub_101023460()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)();
  uint64_t v6 = *(void *)(*(void *)v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(ObjectType, v6);
  sub_10103567C((unint64_t *)&qword_1016770E0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return Hasher._finalize()();
}

uint64_t sub_1010235B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v20 - v11;
  uint64_t v13 = *a2;
  uint64_t v14 = *(void *)(*(void *)a1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(ObjectType, v14);
  uint64_t v16 = *(void *)(v13 + 24);
  uint64_t v17 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v16 + 32))(v17, v16);
  LOBYTE(a2) = static UUID.== infix(_:_:)();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v8, v4);
  v18(v12, v4);
  return a2 & 1;
}

uint64_t sub_101023724(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5 = v4;
  int v8 = a3;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t result = __chkstk_darwin(v9 - 8, v10);
  uint64_t v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v8 == 2)
  {
    if ((*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoable) & 1) == 0) {
      return result;
    }
    goto LABEL_11;
  }
  if (v8)
  {
LABEL_11:
    *(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableAffectedItemSetNeedsUpdate) = 1;
    return result;
  }
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoable) == 1)
  {
    type metadata accessor for CRLTransactableHashableWrapper();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a1;
    *(void *)(v15 + 24) = a2;
    uint64_t v16 = (uint64_t *)(v3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableModifications);
    swift_beginAccess();
    uint64_t v17 = *v16;
    uint64_t v18 = *(void *)(*v16 + 16);
    swift_unknownObjectRetain();
    if (v18)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_1009561F4(v15);
      if ((v20 & 1) == 0)
      {
        swift_release_n();
        return swift_bridgeObjectRelease();
      }
      char v21 = (uint64_t *)(*(void *)(v17 + 56) + 16 * v19);
      uint64_t v22 = *v21;
      v35[0] = v21[1];
      swift_unknownObjectRetain();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(ObjectType, a2);
      uint64_t v25 = v24;
      uint64_t v26 = swift_getObjectType();
      BOOL v27 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56);
      v35[1] = v22;
      uint64_t v28 = v27(v22, v35[0], v26, v25);
      type metadata accessor for CRLInertOwner();
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = 0x774F207472656E49;
      *(void *)(v29 + 24) = 0xEB0000000072656ELL;
      sub_10103567C(&qword_10167F6B8, v30, (void (*)(uint64_t))type metadata accessor for CRLInertOwner);
      swift_unknownObjectRetain();
      UUID.init()();
      type metadata accessor for CRLTransactionContext(0);
      uint64_t v31 = swift_allocObject();
      uint64_t v32 = sub_100794064(v29, 0, 1, (uint64_t)v13, 1, v31);
      swift_release();
      uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 72))(v28, v32, v26, v25);
      if (v5)
      {
        swift_release();
        swift_release();
        swift_release();
        swift_unknownObjectRelease();
        return swift_unknownObjectRelease();
      }
      (*(void (**)(uint64_t))(*(void *)v32 + 720))(v33);
      swift_release();
      swift_beginAccess();
      swift_retain();
      swift_unknownObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = *v16;
      *uint64_t v16 = 0x8000000000000000;
      sub_100971F40(v23, v25, v15, isUniquelyReferenced_nonNull_native);
      *uint64_t v16 = v36;
      swift_release();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_101023B18()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v228 = (char *)v224 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  id v250 = (char *)v224 - v7;
  __chkstk_darwin(v8, v9);
  uint64_t v227 = (char *)v224 - v10;
  __chkstk_darwin(v11, v12);
  v254 = (char *)v224 - v13;
  __chkstk_darwin(v14, v15);
  unint64_t v17 = (unint64_t)v224 - v16;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v239 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v19);
  uint64_t v225 = (char *)v224 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  uint64_t v249 = (char *)v224 - v23;
  __chkstk_darwin(v24, v25);
  v255 = (char *)v224 - v26;
  __chkstk_darwin(v27, v28);
  v226 = (char *)v224 - v29;
  __chkstk_darwin(v30, v31);
  uint64_t v251 = (char *)v224 - v32;
  __chkstk_darwin(v33, v34);
  v256 = (char *)v224 - v35;
  __chkstk_darwin(v36, v37);
  v259 = (char *)v224 - v38;
  if (qword_10166FBD0 != -1) {
LABEL_198:
  }
    swift_once();
  swift_beginAccess();
  int64_t v39 = (void *)static OS_os_log.boardItemLifecycle;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  long long v229 = xmmword_10117E810;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  unint64_t v41 = v1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner;
  uint64_t v42 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner);
  swift_getObjectType();
  uint64_t v248 = v1;
  uint64_t v265 = v42;
  id v43 = v39;
  uint64_t v44 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v46 = v45;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v44;
  *(void *)(inited + 40) = v46;
  uint64_t v1 = v248;
  uint64_t v47 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v43, (uint64_t)&_mh_execute_header, v47, (uint64_t)"Calling _ensureNoOrphans() on owner: [%{public}@]", 49, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v48 = *(void *)(v41 + 8);
  unint64_t v244 = v41;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t))(v48 + 56);
  swift_unknownObjectRetain();
  LOBYTE(v48) = v50(ObjectType, v48);
  swift_unknownObjectRelease();
  uint64_t v261 = v18;
  if ((v48 & 1) == 0) {
    goto LABEL_40;
  }
  swift_beginAccess();
  uint64_t v51 = swift_bridgeObjectRetain();
  uint64_t v52 = sub_100C312D8(v51);
  uint64_t v53 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects);
  swift_beginAccess();
  uint64_t v54 = *v53;
  swift_bridgeObjectRetain();
  uint64_t v55 = sub_100ED8914(v52, v54);
  uint64_t v56 = v55;
  if ((v55 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLTransactableHashableWrapper();
    sub_10103567C((unint64_t *)&qword_10169A0A0, v57, (void (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper);
    Set.Iterator.init(_cocoa:)();
    uint64_t v56 = v266;
    v252 = v267;
    uint64_t v58 = v268;
    unsigned __int8 v59 = v269;
    unint64_t v60 = v270;
  }
  else
  {
    unsigned __int8 v59 = 0;
    uint64_t v61 = -1 << *(unsigned char *)(v55 + 32);
    uint64_t v62 = *(void *)(v55 + 56);
    v252 = (void *)(v55 + 56);
    uint64_t v63 = ~v61;
    uint64_t v64 = -v61;
    if (v64 < 64) {
      uint64_t v65 = ~(-1 << v64);
    }
    else {
      uint64_t v65 = -1;
    }
    unint64_t v60 = v65 & v62;
    uint64_t v58 = v63;
  }
  uint64_t v238 = v58;
  v246 = (char *)(v56 & 0x7FFFFFFFFFFFFFFFLL);
  int64_t v247 = (unint64_t)(v58 + 64) >> 6;
  v257 = (unsigned int (**)(unint64_t, uint64_t, uint64_t))(v239 + 48);
  v241 = (void (**)(char *, uint64_t))(v239 + 8);
  v242 = (void (**)(char *, unint64_t, uint64_t))(v239 + 32);
  uint64_t v245 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v243 = (char *)v17;
  v258 = (unsigned int (**)(unint64_t, uint64_t, uint64_t))v56;
  while (v56 < 0)
  {
    uint64_t v68 = __CocoaSet.Iterator.next()();
    if (!v68) {
      goto LABEL_39;
    }
    unint64_t v264 = v68;
    type metadata accessor for CRLTransactableHashableWrapper();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v69 = v265;
    swift_unknownObjectRelease();
    uint64_t v67 = v59;
    uint64_t v18 = v60;
    if (!v69) {
      goto LABEL_39;
    }
LABEL_32:
    type metadata accessor for CRLBoardItem(0);
    long long v74 = (void *)swift_dynamicCastClass();
    if (v74)
    {
      uint64_t v75 = v74;
      v260 = (void (**)(char *, uint64_t))v18;
      v262 = v67;
      long long v76 = *(void (**)(uint64_t))((swift_isaMask & *v74) + 0xB8);
      uint64_t v77 = swift_unknownObjectRetain();
      v76(v77);
      uint64_t v18 = v261;
      if ((*v257)(v17, 1, v261) == 1)
      {
        swift_release();
        swift_unknownObjectRelease();
        sub_100522F00(v17, (uint64_t *)&unk_101674520);
        unsigned __int8 v59 = v262;
        unint64_t v60 = (unint64_t)v260;
        uint64_t v56 = (uint64_t)v258;
      }
      else
      {
        unint64_t v78 = v259;
        (*v242)(v259, v17, v18);
        uint64_t v79 = *(void *)(v244 + 8);
        uint64_t v80 = swift_getObjectType();
        uint64_t v253 = *(void *)(v79 + 16);
        swift_unknownObjectRetain();
        uint64_t v81 = ((uint64_t (*)(char *, uint64_t, uint64_t))v253)(v78, v80, v79);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        if (v81)
        {
          (*v241)(v259, v18);
          swift_release();
          swift_unknownObjectRelease();
          unsigned __int8 v59 = v262;
          unint64_t v60 = (unint64_t)v260;
          uint64_t v1 = v248;
        }
        else
        {
          swift_unknownObjectRetain();
          uint64_t v1 = v248;
          sub_101031278(v75, 1uLL, 1, v248);
          swift_release();
          swift_unknownObjectRelease_n();
          (*v241)(v259, v18);
          unsigned __int8 v59 = v262;
          unint64_t v60 = (unint64_t)v260;
        }
        unint64_t v17 = (unint64_t)v243;
        uint64_t v56 = (uint64_t)v258;
      }
    }
    else
    {
      swift_release();
      unsigned __int8 v59 = v67;
      unint64_t v60 = v18;
    }
  }
  if (v60)
  {
    uint64_t v18 = (v60 - 1) & v60;
    unint64_t v66 = __clz(__rbit64(v60)) | ((void)v59 << 6);
    uint64_t v67 = v59;
    goto LABEL_31;
  }
  int64_t v70 = (int64_t)v59 + 1;
  if (__OFADD__(v59, 1)) {
    goto LABEL_197;
  }
  if (v70 >= v247) {
    goto LABEL_39;
  }
  unint64_t v71 = v252[v70];
  uint64_t v67 = (char **)((char *)v59 + 1);
  if (v71) {
    goto LABEL_30;
  }
  uint64_t v67 = (char **)((char *)v59 + 2);
  if ((uint64_t)v59 + 2 >= v247) {
    goto LABEL_39;
  }
  unint64_t v71 = v252[(void)v67];
  if (v71) {
    goto LABEL_30;
  }
  uint64_t v67 = (char **)((char *)v59 + 3);
  if ((uint64_t)v59 + 3 >= v247) {
    goto LABEL_39;
  }
  unint64_t v71 = v252[(void)v67];
  if (v71) {
    goto LABEL_30;
  }
  uint64_t v67 = (char **)((char *)v59 + 4);
  if ((uint64_t)v59 + 4 >= v247) {
    goto LABEL_39;
  }
  unint64_t v71 = v252[(void)v67];
  if (v71)
  {
LABEL_30:
    uint64_t v18 = (v71 - 1) & v71;
    unint64_t v66 = __clz(__rbit64(v71)) + ((void)v67 << 6);
LABEL_31:
    uint64_t v73 = *(void *)(*(void *)(v56 + 48) + 8 * v66);
    swift_retain();
    if (!v73) {
      goto LABEL_39;
    }
    goto LABEL_32;
  }
  uint64_t v72 = (uint64_t)v59 + 5;
  while (v247 != v72)
  {
    unint64_t v71 = v252[v72++];
    if (v71)
    {
      uint64_t v67 = (char **)(v72 - 1);
      goto LABEL_30;
    }
  }
LABEL_39:
  sub_10052E1EC();
  uint64_t v18 = v261;
LABEL_40:
  uint64_t v82 = (unint64_t *)(v1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects);
  swift_beginAccess();
  unint64_t v83 = *v82;
  if ((*v82 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLTransactableHashableWrapper();
    sub_10103567C((unint64_t *)&qword_10169A0A0, v84, (void (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper);
    Set.Iterator.init(_cocoa:)();
    unint64_t v83 = v271;
    uint64_t v238 = v272;
    uint64_t v86 = v273;
    unint64_t v85 = (unint64_t)v274;
    unint64_t v87 = v275;
  }
  else
  {
    uint64_t v88 = -1 << *(unsigned char *)(v83 + 32);
    uint64_t v89 = *(void *)(v83 + 56);
    uint64_t v238 = v83 + 56;
    uint64_t v86 = ~v88;
    uint64_t v90 = -v88;
    if (v90 < 64) {
      uint64_t v91 = ~(-1 << v90);
    }
    else {
      uint64_t v91 = -1;
    }
    unint64_t v87 = v91 & v89;
    swift_bridgeObjectRetain();
    unint64_t v85 = 0;
  }
  uint64_t v235 = v83 & 0x7FFFFFFFFFFFFFFFLL;
  v224[1] = v86;
  v237 = (char *)((unint64_t)(v86 + 64) >> 6);
  v262 = (char **)(v239 + 56);
  v258 = (unsigned int (**)(unint64_t, uint64_t, uint64_t))(v239 + 48);
  v259 = (char *)(v239 + 16);
  v257 = (unsigned int (**)(unint64_t, uint64_t, uint64_t))(v239 + 32);
  v260 = (void (**)(char *, uint64_t))(v239 + 8);
  uint64_t v233 = (char *)&type metadata for Swift.AnyObject + 8;
  unint64_t v234 = v83;
  while (2)
  {
    unint64_t v244 = (unint64_t)v262 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    if ((v83 & 0x8000000000000000) == 0)
    {
      if (v87)
      {
        uint64_t v92 = (v87 - 1) & v87;
        unint64_t v93 = __clz(__rbit64(v87)) | (v85 << 6);
        unint64_t v17 = v85;
        int64_t v94 = v85;
      }
      else
      {
        int64_t v94 = v85 + 1;
        if (__OFADD__(v85, 1))
        {
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
          goto LABEL_198;
        }
        if (v94 >= (uint64_t)v237) {
          goto LABEL_114;
        }
        unint64_t v99 = *(void *)(v238 + 8 * v94);
        if (!v99)
        {
          int64_t v100 = v85 + 2;
          if ((uint64_t)(v85 + 2) >= (uint64_t)v237) {
            goto LABEL_114;
          }
          unint64_t v99 = *(void *)(v238 + 8 * v100);
          if (v99) {
            goto LABEL_61;
          }
          int64_t v100 = v85 + 3;
          if ((uint64_t)(v85 + 3) >= (uint64_t)v237) {
            goto LABEL_114;
          }
          unint64_t v99 = *(void *)(v238 + 8 * v100);
          if (v99)
          {
LABEL_61:
            int64_t v94 = v100;
          }
          else
          {
            int64_t v94 = v85 + 4;
            if ((uint64_t)(v85 + 4) >= (uint64_t)v237) {
              goto LABEL_114;
            }
            unint64_t v99 = *(void *)(v238 + 8 * v94);
            if (!v99)
            {
              unint64_t v152 = (char *)(v85 + 5);
              do
              {
                if (v237 == v152) {
                  goto LABEL_114;
                }
                unint64_t v99 = *(void *)(v238 + 8 * (void)v152++);
              }
              while (!v99);
              int64_t v94 = (int64_t)(v152 - 1);
            }
          }
        }
        unint64_t v17 = v85;
        uint64_t v92 = (v99 - 1) & v99;
        unint64_t v93 = __clz(__rbit64(v99)) + (v94 << 6);
      }
      uint64_t v97 = v1;
      unint64_t v96 = v83;
      uint64_t v98 = *(double **)(*(void *)(v83 + 48) + 8 * v93);
      swift_retain();
      if (!v98) {
        goto LABEL_113;
      }
LABEL_64:
      v246 = (char *)v94;
      int64_t v247 = (int64_t)v98;
      v242 = (void (**)(char *, unint64_t, uint64_t))v87;
      uint64_t v101 = (char *)*((void *)v98 + 2);
      type metadata accessor for CRLBoardItem(0);
      uint64_t v102 = swift_dynamicCastClass();
      if (!v102)
      {
        type metadata accessor for CRLBoard(0);
        uint64_t v126 = swift_dynamicCastClass();
        unint64_t v83 = v96;
        if (v126)
        {
          uint64_t v127 = *(void **)(v126 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
          swift_unknownObjectRetain();
          id v128 = v127;
          unint64_t v17 = v92;
          sub_101026BAC(v128, 0);
          swift_release();
          uint64_t v1 = v97;
          swift_unknownObjectRelease();

          unint64_t v85 = (unint64_t)v246;
          unint64_t v87 = v92;
        }
        else
        {
          swift_release();
          unint64_t v85 = (unint64_t)v246;
          unint64_t v87 = v92;
          uint64_t v1 = v97;
        }
        continue;
      }
      uint64_t v103 = (void *)v102;
      uint64_t v104 = v97;
      type metadata accessor for CRLContainerItem(0);
      id v105 = (void *)swift_dynamicCastClass();
      uint64_t v245 = v101;
      swift_unknownObjectRetain_n();
      if (v105) {
        sub_101026BAC(v105, 0);
      }
      id v106 = [v103 parentContainerItem];
      if (!v106)
      {
        swift_release();
        swift_unknownObjectRelease_n();
        unint64_t v85 = (unint64_t)v246;
        unint64_t v87 = v92;
        uint64_t v1 = v97;
        unint64_t v83 = v96;
        continue;
      }
      uint64_t v107 = v106;
      v241 = (void (**)(char *, uint64_t))v92;
      unint64_t v232 = v17;
      uint64_t v108 = *(void (**)(void))((swift_isaMask & *v103) + 0x88);
      swift_unknownObjectRetain();
      uint64_t v109 = v107;
      v108();
      uint64_t v110 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs;
      uint64_t v243 = v109;
      uint64_t v111 = *(double **)&v109[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs];
      if (!v111)
      {
        uint64_t v112 = v243;
        sub_100846AB0();
        uint64_t v111 = *(double **)&v112[v110];
      }
      if (v111) {
        uint64_t v113 = v111;
      }
      else {
        uint64_t v113 = _swiftEmptyArrayStorage;
      }
      uint64_t v114 = *((void *)v113 + 2);
      uint64_t v115 = v18;
      if (!v114)
      {
        uint64_t v1 = v104;
        uint64_t v129 = *v262;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v17 = (unint64_t)v254;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v129)(v254, 1, 1, v18);
LABEL_82:
        swift_bridgeObjectRelease_n();
        goto LABEL_112;
      }
      unint64_t v116 = *(unsigned __int8 *)(v239 + 80);
      v230 = (void (*)(uint64_t, uint64_t))v116;
      uint64_t v231 = (v116 + 32) & ~v116;
      uint64_t v117 = (char *)v113 + v231;
      uint64_t v253 = *(void *)(v239 + 72);
      uint64_t v118 = *(void (**)(unint64_t, char *, uint64_t))(v239 + 16);
      swift_bridgeObjectRetain();
      uint64_t v236 = (uint64_t)v113;
      swift_bridgeObjectRetain();
      unint64_t v17 = (unint64_t)v254;
      while (1)
      {
        v118(v17, v117, v115);
        v252 = *v262;
        ((void (*)(unint64_t, void, uint64_t, uint64_t))v252)(v17, 0, 1, v115);
        uint64_t v119 = *v258;
        if ((*v258)(v17, 1, v115) == 1)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v1 = v248;
          goto LABEL_112;
        }
        uint64_t v120 = *v257;
        uint64_t v121 = v115;
        uint64_t v122 = v251;
        (*v257)((unint64_t)v251, v17, v121);
        sub_10103567C((unint64_t *)&qword_10167BDC0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v123 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v124 = v121;
        uint64_t v125 = *v260;
        (*v260)(v122, v124);
        if (v123) {
          break;
        }
        unint64_t v17 = (unint64_t)v254;
        v117 += v253;
        --v114;
        uint64_t v115 = v261;
        if (!v114)
        {
          uint64_t v1 = v248;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v252)(v254, 1, 1, v261);
          goto LABEL_82;
        }
      }
      v224[0] = v125;
      swift_bridgeObjectRelease_n();
      sub_1005057FC(&qword_10167AD08);
      uint64_t v130 = v231;
      uint64_t v131 = swift_allocObject();
      *(_OWORD *)(v131 + 16) = v229;
      unint64_t v132 = v131 + v130;
      uint64_t v133 = v261;
      v118(v131 + v130, v256, v261);
      uint64_t v134 = v240;
      sub_10103405C((uint64_t)v243, (uint64_t)&off_101518040);
      uint64_t v240 = v134;
      if (!v134)
      {
        unint64_t v264 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v135 = OBJC_IVAR____TtC8Freeform16CRLContainerItem_items;
        uint64_t v253 = v131;
        swift_bridgeObjectRetain();
        uint64_t v136 = v227;
        unint64_t v244 = v132;
        v118((unint64_t)v227, (char *)v132, v133);
        unint64_t v17 = (unint64_t)v252;
        ((void (*)(char *, void, uint64_t, uint64_t))v252)(v136, 0, 1, v133);
        unsigned int v137 = v119((unint64_t)v136, 1, v133);
        uint64_t v1 = v248;
        uint64_t v138 = (uint64_t)v226;
        if (v137 == 1) {
          goto LABEL_95;
        }
        v120((unint64_t)v226, (uint64_t)v136, v261);
        uint64_t v139 = *(void *)&v243[v135];
        if (*(void *)(v139 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v140 = sub_100955FC8(v138);
          if (v141)
          {
            id v142 = *(id *)(*(void *)(v139 + 56) + 8 * v140);
            swift_bridgeObjectRelease();
            ((void (*)(uint64_t, uint64_t))v224[0])(v138, v261);
            id v143 = v142;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v264 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v264 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();

            uint64_t v144 = v261;
LABEL_94:
            ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v136, 1, 1, v144);
LABEL_95:
            uint64_t v145 = v253;
            swift_bridgeObjectRelease();
            uint64_t v146 = v240;
            uint64_t result = sub_10084C770(v145);
            if (!v146)
            {
              unint64_t v148 = v264;
              if (v264 >> 62)
              {
                swift_bridgeObjectRetain();
                uint64_t v149 = _CocoaArrayWrapper.endIndex.getter();
                uint64_t result = swift_bridgeObjectRelease();
                if (v149)
                {
LABEL_98:
                  if (v149 < 1)
                  {
                    __break(1u);
LABEL_200:
                    __break(1u);
                    return result;
                  }
                  for (uint64_t i = 0; i != v149; ++i)
                  {
                    if ((v148 & 0xC000000000000001) != 0) {
                      uint64_t v151 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                    }
                    else {
                      uint64_t v151 = *(id *)(v148 + 8 * i + 32);
                    }
                    unint64_t v17 = (unint64_t)v151;
                    sub_101031278(v151, 0, 0, v1);
                  }
                }
              }
              else
              {
                uint64_t v149 = *(void *)((v264 & 0xFFFFFFFFFFFFFF8) + 0x10);
                if (v149) {
                  goto LABEL_98;
                }
              }
              swift_bridgeObjectRelease();
              sub_101023724((uint64_t)v243, (uint64_t)&off_101518040, 2u);
              uint64_t v240 = 0;
              swift_setDeallocating();
              uint64_t v115 = v261;
              swift_arrayDestroy();
              swift_deallocClassInstance();
LABEL_112:
              unint64_t v83 = v234;
              uint64_t v18 = v115;
              (*v260)(v256, v115);
              swift_release();
              swift_unknownObjectRelease_n();
              id v153 = v243;

              unint64_t v85 = (unint64_t)v246;
              unint64_t v87 = (unint64_t)v241;
              continue;
            }
            uint64_t v240 = v146;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_191:
            ((void (*)(char *, uint64_t))v224[0])(v256, v261);
            swift_release();
            swift_unknownObjectRelease_n();
            id v222 = v243;

            return sub_10052E1EC();
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v144 = v261;
        ((void (*)(uint64_t, uint64_t))v224[0])(v138, v261);
        goto LABEL_94;
      }
      swift_bridgeObjectRelease();
      goto LABEL_191;
    }
    break;
  }
  unint64_t v17 = v85;
  uint64_t v95 = __CocoaSet.Iterator.next()();
  if (!v95) {
    goto LABEL_114;
  }
  unint64_t v96 = v83;
  uint64_t v97 = v1;
  unint64_t v281 = v95;
  type metadata accessor for CRLTransactableHashableWrapper();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v98 = (double *)v264;
  swift_unknownObjectRelease();
  int64_t v94 = v17;
  uint64_t v92 = v87;
  if (v98) {
    goto LABEL_64;
  }
LABEL_113:
  uint64_t v1 = v97;
LABEL_114:
  sub_10052E1EC();
  uint64_t v154 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedNewlyCreatedObjects);
  swift_beginAccess();
  uint64_t v18 = *v154;
  if ((*v154 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLTransactableHashableWrapper();
    sub_10103567C((unint64_t *)&qword_10169A0A0, v155, (void (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper);
    Set.Iterator.init(_cocoa:)();
    uint64_t v18 = v276;
    uint64_t v243 = v277;
    uint64_t v156 = v278;
    uint64_t v157 = v279;
    unint64_t v17 = v280;
  }
  else
  {
    uint64_t v158 = -1 << *(unsigned char *)(v18 + 32);
    uint64_t v159 = *(void *)(v18 + 56);
    uint64_t v243 = (char *)(v18 + 56);
    uint64_t v160 = ~v158;
    uint64_t v161 = -v158;
    if (v161 < 64) {
      uint64_t v162 = ~(-1 << v161);
    }
    else {
      uint64_t v162 = -1;
    }
    unint64_t v17 = v162 & v159;
    swift_bridgeObjectRetain();
    uint64_t v156 = v160;
    uint64_t v157 = 0;
  }
  uint64_t v238 = v18 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v231 = v156;
  v242 = (void (**)(char *, unint64_t, uint64_t))((unint64_t)(v156 + 64) >> 6);
  uint64_t v236 = v18;
  v237 = (char *)&type metadata for Swift.AnyObject + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        if (v18 < 0)
        {
          uint64_t v166 = __CocoaSet.Iterator.next()();
          if (!v166) {
            return sub_10052E1EC();
          }
          uint64_t v263 = v166;
          type metadata accessor for CRLTransactableHashableWrapper();
          swift_unknownObjectRetain();
          swift_dynamicCast();
          uint64_t v167 = (double *)v281;
          swift_unknownObjectRelease();
          uint64_t v165 = v157;
          uint64_t v163 = v17;
          if (!v167) {
            return sub_10052E1EC();
          }
        }
        else
        {
          if (v17)
          {
            uint64_t v163 = (v17 - 1) & v17;
            unint64_t v164 = __clz(__rbit64(v17)) | (v157 << 6);
            uint64_t v165 = v157;
          }
          else
          {
            uint64_t v165 = v157 + 1;
            if (__OFADD__(v157, 1)) {
              goto LABEL_196;
            }
            if (v165 >= (uint64_t)v242) {
              return sub_10052E1EC();
            }
            unint64_t v168 = *(void *)&v243[8 * v165];
            if (!v168)
            {
              uint64_t v169 = v157 + 2;
              if (v157 + 2 >= (uint64_t)v242) {
                return sub_10052E1EC();
              }
              unint64_t v168 = *(void *)&v243[8 * v169];
              if (v168) {
                goto LABEL_135;
              }
              uint64_t v169 = v157 + 3;
              if (v157 + 3 >= (uint64_t)v242) {
                return sub_10052E1EC();
              }
              unint64_t v168 = *(void *)&v243[8 * v169];
              if (v168)
              {
LABEL_135:
                uint64_t v165 = v169;
              }
              else
              {
                uint64_t v165 = v157 + 4;
                if (v157 + 4 >= (uint64_t)v242) {
                  return sub_10052E1EC();
                }
                unint64_t v168 = *(void *)&v243[8 * v165];
                if (!v168)
                {
                  uint64_t v220 = v157 + 5;
                  do
                  {
                    if (v242 == (void (**)(char *, unint64_t, uint64_t))v220) {
                      return sub_10052E1EC();
                    }
                    unint64_t v168 = *(void *)&v243[8 * v220++];
                  }
                  while (!v168);
                  uint64_t v165 = v220 - 1;
                }
              }
            }
            uint64_t v163 = (v168 - 1) & v168;
            unint64_t v164 = __clz(__rbit64(v168)) + (v165 << 6);
          }
          uint64_t v167 = *(double **)(*(void *)(v18 + 48) + 8 * v164);
          swift_retain();
          if (!v167) {
            return sub_10052E1EC();
          }
        }
        uint64_t v170 = v1;
        v252 = (void *)v165;
        uint64_t v171 = (char *)*((void *)v167 + 2);
        type metadata accessor for CRLBoardItem(0);
        uint64_t v172 = swift_dynamicCastClass();
        if (v172) {
          break;
        }
        type metadata accessor for CRLBoard(0);
        uint64_t v197 = swift_dynamicCastClass();
        if (v197)
        {
          uint64_t v198 = *(void **)(v197 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
          swift_unknownObjectRetain();
          id v199 = v198;
          sub_101026BAC(v199, 1);
          swift_release();
          uint64_t v1 = v170;
          swift_unknownObjectRelease();

          uint64_t v157 = (uint64_t)v252;
          unint64_t v17 = v163;
        }
        else
        {
          swift_release();
          uint64_t v157 = (uint64_t)v252;
          unint64_t v17 = v163;
          uint64_t v1 = v170;
        }
      }
      uint64_t v173 = (void *)v172;
      int64_t v247 = (int64_t)v167;
      uint64_t v174 = v170;
      type metadata accessor for CRLContainerItem(0);
      uint64_t v175 = (void *)swift_dynamicCastClass();
      uint64_t v251 = v171;
      swift_unknownObjectRetain_n();
      if (v175) {
        sub_101026BAC(v175, 1);
      }
      id v176 = [v173 parentContainerItem];
      if (v176) {
        break;
      }
      swift_release();
      swift_unknownObjectRelease_n();
      uint64_t v157 = (uint64_t)v252;
      unint64_t v17 = v163;
      uint64_t v1 = v170;
    }
    uint64_t v177 = v176;
    uint64_t v245 = (char *)v163;
    unint64_t v234 = v17;
    uint64_t v235 = v157;
    uint64_t v178 = *(void (**)(void))((swift_isaMask & *v173) + 0x88);
    swift_unknownObjectRetain();
    char v179 = v177;
    v178();
    uint64_t v180 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs;
    v246 = v179;
    uint64_t v181 = *(double **)&v179[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs];
    if (!v181)
    {
      char v182 = v246;
      sub_100846AB0();
      uint64_t v181 = *(double **)&v182[v180];
    }
    uint64_t v183 = v181 ? v181 : _swiftEmptyArrayStorage;
    uint64_t v184 = *((void *)v183 + 2);
    uint64_t v185 = v250;
    if (v184) {
      break;
    }
    uint64_t v1 = v174;
    uint64_t v196 = *v262;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_156:
    uint64_t v189 = v261;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v196)(v185, 1, 1, v261);
    swift_bridgeObjectRelease_n();
LABEL_187:
    (*v260)(v255, v189);
    swift_release();
    swift_unknownObjectRelease_n();
    id v221 = v246;

    uint64_t v157 = (uint64_t)v252;
    unint64_t v17 = (unint64_t)v245;
  }
  unint64_t v186 = *(unsigned __int8 *)(v239 + 80);
  unint64_t v232 = v186;
  uint64_t v233 = (char *)((v186 + 32) & ~v186);
  long long v187 = &v233[(void)v183];
  v256 = *(char **)(v239 + 72);
  v188 = *(void (**)(char *, char *, uint64_t))(v239 + 16);
  swift_bridgeObjectRetain();
  v241 = (void (**)(char *, uint64_t))v183;
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v189 = v261;
    v188(v185, v187, v261);
    uint64_t v190 = *v262;
    ((void (*)(char *, void, uint64_t, uint64_t))*v262)(v185, 0, 1, v189);
    uint64_t v191 = *v258;
    if ((*v258)((unint64_t)v185, 1, v189) == 1)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_186;
    }
    uint64_t v253 = (uint64_t)v191;
    v254 = v190;
    id v192 = *v257;
    uint64_t v193 = v249;
    (*v257)((unint64_t)v249, (uint64_t)v185, v189);
    sub_10103567C((unint64_t *)&qword_10167BDC0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    char v194 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v195 = *v260;
    (*v260)(v193, v189);
    if (v194) {
      break;
    }
    long long v187 = &v256[(void)v187];
    --v184;
    uint64_t v185 = v250;
    if (!v184)
    {
      uint64_t v1 = v248;
      uint64_t v18 = v236;
      uint64_t v196 = v254;
      goto LABEL_156;
    }
  }
  v230 = (void (*)(uint64_t, uint64_t))v195;
  swift_bridgeObjectRelease_n();
  sub_1005057FC(&qword_10167AD08);
  uint64_t v200 = v233;
  uint64_t v201 = swift_allocObject();
  *(_OWORD *)(v201 + 16) = v229;
  v202 = &v200[v201];
  uint64_t v203 = v261;
  v188(&v200[v201], v255, v261);
  uint64_t v204 = v240;
  sub_10103405C((uint64_t)v246, (uint64_t)&off_101518040);
  uint64_t v240 = v204;
  if (v204)
  {
    swift_bridgeObjectRelease();
    goto LABEL_194;
  }
  unint64_t v281 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v205 = OBJC_IVAR____TtC8Freeform16CRLContainerItem_items;
  swift_bridgeObjectRetain();
  uint64_t v206 = v228;
  v188(v228, v202, v203);
  ((void (*)(char *, void, uint64_t, uint64_t))v254)(v206, 0, 1, v203);
  int v207 = ((uint64_t (*)(char *, uint64_t, uint64_t))v253)(v206, 1, v203);
  uint64_t v208 = (uint64_t)v225;
  if (v207 == 1) {
    goto LABEL_169;
  }
  v192((unint64_t)v225, (uint64_t)v228, v203);
  uint64_t v209 = *(void *)&v246[v205];
  if (!*(void *)(v209 + 16))
  {
LABEL_167:
    v230(v208, v203);
    goto LABEL_168;
  }
  swift_bridgeObjectRetain();
  unint64_t v210 = sub_100955FC8(v208);
  if ((v211 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_167;
  }
  id v212 = *(id *)(*(void *)(v209 + 56) + 8 * v210);
  swift_bridgeObjectRelease();
  v230(v208, v203);
  id v213 = v212;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v281 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v281 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  uint64_t v203 = v261;
LABEL_168:
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v254)(v228, 1, 1, v203);
LABEL_169:
  swift_bridgeObjectRelease();
  uint64_t v214 = v240;
  uint64_t result = sub_10084C770(v201);
  if (!v214)
  {
    unint64_t v215 = v281;
    if (v281 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v216 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v216)
      {
LABEL_172:
        if (v216 < 1) {
          goto LABEL_200;
        }
        for (uint64_t j = 0; j != v216; ++j)
        {
          if ((v215 & 0xC000000000000001) != 0) {
            uint64_t v218 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            uint64_t v218 = *(id *)(v215 + 8 * j + 32);
          }
          v219 = v218;
          sub_101031278(v218, 0, 0, v248);
        }
      }
    }
    else
    {
      uint64_t v216 = *(void *)((v281 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v216) {
        goto LABEL_172;
      }
    }
    swift_bridgeObjectRelease();
    sub_101023724((uint64_t)v246, (uint64_t)&off_101518040, 2u);
    uint64_t v240 = 0;
    swift_setDeallocating();
    uint64_t v189 = v261;
    swift_arrayDestroy();
    swift_deallocClassInstance();
LABEL_186:
    uint64_t v1 = v248;
    uint64_t v18 = v236;
    goto LABEL_187;
  }
  uint64_t v240 = v214;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_194:
  v230((uint64_t)v255, v203);
  swift_release();
  swift_unknownObjectRelease_n();
  id v223 = v246;

  return sub_10052E1EC();
}

void *sub_101025890()
{
  sub_101023B18();
  if (!v1)
  {
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoable) == 1)
    {
      type metadata accessor for CRLUndoingAction();
      uint64_t v2 = (void *)swift_allocObject();
      v2[2] = _swiftEmptyDictionarySingleton;
      v2[3] = &_swiftEmptySetSingleton;
      v2[4] = &_swiftEmptySetSingleton;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_dirtiesOwner) == 1)
    {
      uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 40);
      swift_unknownObjectRetain();
      v5(v0, ObjectType, v3);
      swift_unknownObjectRelease();
    }
    uint64_t v6 = sub_1010259B8((uint64_t)v2, 1);
    uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext__observableDelta);
    *(void *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext__observableDelta) = v6;

    *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active) = 0;
  }
  return v2;
}

uint64_t sub_1010259B8(uint64_t a1, int a2)
{
  int v149 = a2;
  uint64_t v164 = type metadata accessor for UUID();
  uint64_t v139 = *(void *)(v164 - 8);
  uint64_t v5 = __chkstk_darwin(v164, v4);
  uint64_t v7 = (char *)&v135 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v5, v8);
  uint64_t v155 = (char *)&v135 - v10;
  __chkstk_darwin(v9, v11);
  uint64_t v162 = (char *)&v135 - v12;
  uint64_t v135 = (char *)[objc_allocWithZone((Class)type metadata accessor for CRLObservableDelta()) init];
  uint64_t v13 = v2;
  if (a1)
  {
    swift_beginAccess();
    swift_retain();
    uint64_t v14 = swift_bridgeObjectRetain();
    Swift::Int v15 = sub_101035088(v14, v2);
    uint64_t v148 = 0;
    swift_release();
    *(void *)(a1 + 32) = v15;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v148 = 0;
  }
  uint64_t v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableCreatedObjects);
  swift_beginAccess();
  id v142 = v16;
  uint64_t v17 = *v16;
  if ((v17 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLTransactableHashableWrapper();
    sub_10103567C((unint64_t *)&qword_10169A0A0, v18, (void (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper);
    Set.Iterator.init(_cocoa:)();
    uint64_t v17 = v169[6];
    uint64_t v165 = v169[7];
    uint64_t v19 = v169[8];
    uint64_t v20 = v169[9];
    unint64_t v21 = v169[10];
  }
  else
  {
    uint64_t v22 = -1 << *(unsigned char *)(v17 + 32);
    uint64_t v23 = *(void *)(v17 + 56);
    uint64_t v165 = v17 + 56;
    uint64_t v24 = ~v22;
    uint64_t v25 = -v22;
    if (v25 < 64) {
      uint64_t v26 = ~(-1 << v25);
    }
    else {
      uint64_t v26 = -1;
    }
    unint64_t v21 = v26 & v23;
    swift_bridgeObjectRetain();
    uint64_t v19 = v24;
    uint64_t v20 = 0;
  }
  uint64_t v161 = v17 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v159 = (void (*)(uint64_t, uint64_t))v19;
  uint64_t v163 = (void (**)(char *, uint64_t))((unint64_t)(v19 + 64) >> 6);
  uint64_t v166 = a1 + 24;
  uint64_t v160 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v151 = v13;
  uint64_t v145 = a1;
  id v143 = v7;
  while (v17 < 0)
  {
    uint64_t v30 = __CocoaSet.Iterator.next()();
    if (!v30) {
      goto LABEL_39;
    }
    v169[0] = v30;
    type metadata accessor for CRLTransactableHashableWrapper();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v31 = v167;
    swift_unknownObjectRelease();
    uint64_t v29 = v20;
    uint64_t v27 = v21;
    if (!v31)
    {
LABEL_37:
      uint64_t v13 = v151;
LABEL_38:
      uint64_t v7 = v143;
      goto LABEL_39;
    }
LABEL_29:
    uint64_t v34 = *(void *)(v31 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 48);
    swift_unknownObjectRetain();
    uint64_t v37 = v36(ObjectType, v34);
    a1 = v145;
    uint64_t v39 = v37;
    if (v145)
    {
      uint64_t v40 = v38;
      type metadata accessor for CRLTransactableHashableWrapper();
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = v39;
      *(void *)(v41 + 24) = v40;
      swift_beginAccess();
      swift_unknownObjectRetain();
      sub_100CB4EEC(v169, v41);
      swift_endAccess();
      swift_release();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_release();
    }
    else
    {
      swift_release();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    uint64_t v20 = v29;
    unint64_t v21 = v27;
    uint64_t v13 = v151;
    uint64_t v7 = v143;
  }
  if (v21)
  {
    uint64_t v27 = (v21 - 1) & v21;
    unint64_t v28 = __clz(__rbit64(v21)) | (v20 << 6);
    uint64_t v29 = v20;
    goto LABEL_28;
  }
  uint64_t v29 = v20 + 1;
  if (__OFADD__(v20, 1)) {
    goto LABEL_102;
  }
  if (v29 >= (uint64_t)v163) {
    goto LABEL_38;
  }
  unint64_t v32 = *(void *)(v165 + 8 * v29);
  if (v32)
  {
LABEL_27:
    uint64_t v27 = (v32 - 1) & v32;
    unint64_t v28 = __clz(__rbit64(v32)) + (v29 << 6);
LABEL_28:
    uint64_t v31 = *(void *)(*(void *)(v17 + 48) + 8 * v28);
    swift_retain();
    if (!v31) {
      goto LABEL_37;
    }
    goto LABEL_29;
  }
  uint64_t v33 = v20 + 2;
  if (v20 + 2 >= (uint64_t)v163) {
    goto LABEL_38;
  }
  unint64_t v32 = *(void *)(v165 + 8 * v33);
  if (v32) {
    goto LABEL_26;
  }
  uint64_t v33 = v20 + 3;
  if (v20 + 3 >= (uint64_t)v163) {
    goto LABEL_38;
  }
  unint64_t v32 = *(void *)(v165 + 8 * v33);
  if (v32)
  {
LABEL_26:
    uint64_t v29 = v33;
    goto LABEL_27;
  }
  uint64_t v29 = v20 + 4;
  if (v20 + 4 >= (uint64_t)v163) {
    goto LABEL_38;
  }
  unint64_t v32 = *(void *)(v165 + 8 * v29);
  if (v32) {
    goto LABEL_27;
  }
  uint64_t v42 = v20 + 5;
  uint64_t v7 = v143;
  while (v163 != (void (**)(char *, uint64_t))v42)
  {
    unint64_t v32 = *(void *)(v165 + 8 * v42++);
    if (v32)
    {
      uint64_t v29 = v42 - 1;
      goto LABEL_27;
    }
  }
LABEL_39:
  sub_10052E1EC();
  uint64_t v43 = v13 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_modifications;
  swift_beginAccess();
  uint64_t v44 = *(void *)v43;
  uint64_t v45 = *(void *)(*(void *)v43 + 64);
  uint64_t v144 = *(void *)v43 + 64;
  uint64_t v46 = 1 << *(unsigned char *)(v44 + 32);
  if (v46 < 64) {
    uint64_t v47 = ~(-1 << v46);
  }
  else {
    uint64_t v47 = -1;
  }
  unint64_t v48 = v47 & v45;
  id v49 = (uint64_t *)(v13 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects);
  uint64_t v50 = v13 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableModifications;
  unint64_t v152 = &v135[OBJC_IVAR____TtC8Freeform18CRLObservableDelta_observableDeltas];
  uint64_t v150 = v44;
  swift_bridgeObjectRetain();
  uint64_t v147 = v49;
  swift_beginAccess();
  uint64_t v138 = (uint64_t *)v50;
  swift_beginAccess();
  int64_t v51 = 0;
  int64_t v146 = (unint64_t)(v46 + 63) >> 6;
  uint64_t v163 = (void (**)(char *, uint64_t))(v139 + 8);
  uint64_t v136 = (void *)(a1 + 16);
  uint64_t v137 = v139 + 16;
  uint64_t v52 = v13;
  if (!v48) {
    goto LABEL_44;
  }
  while (2)
  {
    while (2)
    {
      unint64_t v53 = __clz(__rbit64(v48));
      v48 &= v48 - 1;
      unint64_t v54 = v53 | (v51 << 6);
LABEL_55:
      uint64_t v58 = *(void *)(*(void *)(v150 + 48) + 8 * v54);
      unsigned __int8 v59 = (uint64_t *)(*(void *)(v150 + 56) + 16 * v54);
      uint64_t v60 = *v59;
      uint64_t v154 = v59[1];
      uint64_t v62 = *(void *)(v58 + 16);
      uint64_t v61 = *(void *)(v58 + 24);
      uint64_t v157 = v60;
      uint64_t v165 = v61;
      if (v149)
      {
        uint64_t v63 = swift_getObjectType();
        swift_retain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        uint64_t v64 = v148;
        sub_100FC13CC(v52, v63, v61);
        if (v64) {
          goto LABEL_103;
        }
        uint64_t v148 = 0;
        uint64_t v60 = v157;
      }
      else
      {
        swift_retain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
      }
      uint64_t v65 = *v147;
      uint64_t v166 = v62;
      if ((v65 & 0xC000000000000001) == 0)
      {
        if (*(void *)(v65 + 16))
        {
          uint64_t v140 = v58;
          unint64_t v153 = v48;
          int64_t v141 = v51;
          Hasher.init(_seed:)();
          uint64_t v67 = swift_getObjectType();
          uint64_t v68 = v165;
          uint64_t v69 = (char *)(v165 + 32);
          int64_t v70 = *(void (**)(uint64_t, uint64_t))(v165 + 32);
          swift_bridgeObjectRetain();
          unint64_t v71 = v162;
          uint64_t v161 = v67;
          uint64_t v160 = v69;
          uint64_t v159 = v70;
          v70(v67, v68);
          sub_10103567C((unint64_t *)&qword_1016770E0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v72 = v164;
          dispatch thunk of Hashable.hash(into:)();
          uint64_t v73 = *v163;
          (*v163)(v71, v72);
          Swift::Int v74 = Hasher._finalize()();
          uint64_t v75 = -1 << *(unsigned char *)(v65 + 32);
          unint64_t v76 = v74 & ~v75;
          uint64_t v158 = v65 + 56;
          if ((*(void *)(v65 + 56 + ((v76 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v76))
          {
            uint64_t v156 = ~v75;
            while (1)
            {
              uint64_t v77 = *(void *)(*(void *)(*(void *)(v65 + 48) + 8 * v76) + 24);
              uint64_t v78 = swift_getObjectType();
              uint64_t v79 = *(void (**)(uint64_t, uint64_t))(v77 + 32);
              swift_retain();
              uint64_t v80 = v162;
              v79(v78, v77);
              uint64_t v81 = v155;
              v159(v161, v165);
              char v82 = static UUID.== infix(_:_:)();
              unint64_t v83 = v81;
              uint64_t v84 = v164;
              v73(v83, v164);
              v73(v80, v84);
              swift_release();
              if (v82) {
                break;
              }
              unint64_t v76 = (v76 + 1) & v156;
              if (((*(void *)(v158 + ((v76 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v76) & 1) == 0) {
                goto LABEL_69;
              }
            }
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v52 = v151;
            a1 = v145;
            uint64_t v7 = v143;
            int64_t v51 = v141;
            unint64_t v48 = v153;
            goto LABEL_62;
          }
LABEL_69:
          swift_bridgeObjectRelease();
          a1 = v145;
          uint64_t v7 = v143;
          int64_t v51 = v141;
          unint64_t v48 = v153;
          uint64_t v58 = v140;
          uint64_t v60 = v157;
        }
LABEL_70:
        uint64_t v85 = *v142;
        swift_bridgeObjectRetain();
        char v86 = sub_1006E4038(v58, v85);
        swift_bridgeObjectRelease();
        if (v86) {
          goto LABEL_83;
        }
        uint64_t v87 = *v138;
        if (*(void *)(*v138 + 16))
        {
          swift_retain();
          swift_bridgeObjectRetain();
          unint64_t v88 = sub_1009561F4(v58);
          if (v89)
          {
            uint64_t v90 = (uint64_t *)(*(void *)(v87 + 56) + 16 * v88);
            uint64_t v91 = *v90;
            uint64_t v92 = v90[1];
            swift_unknownObjectRetain();
            swift_release();
            swift_bridgeObjectRelease();
            if (a1)
            {
              uint64_t v93 = swift_getObjectType();
              uint64_t v94 = v165;
              uint64_t v95 = (uint64_t)v162;
              (*(void (**)(uint64_t, uint64_t))(v165 + 32))(v93, v165);
              uint64_t v96 = v93;
              a1 = v145;
              uint64_t v97 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56))(v91, v92, v96, v94);
              uint64_t v98 = v136;
              swift_beginAccess();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              unint64_t v168 = (void *)*v98;
              void *v98 = 0x8000000000000000;
              sub_100972580(v97, v95, isUniquelyReferenced_nonNull_native);
              void *v98 = v168;
              uint64_t v60 = v157;
              swift_bridgeObjectRelease();
              (*v163)((char *)v95, v164);
              swift_endAccess();
            }
            swift_unknownObjectRelease();
            goto LABEL_83;
          }
          swift_release();
          swift_bridgeObjectRelease();
        }
        if (a1)
        {
          uint64_t v100 = swift_getObjectType();
          uint64_t v101 = a1;
          uint64_t v102 = v165;
          uint64_t v103 = (uint64_t)v162;
          (*(void (**)(uint64_t, uint64_t))(v165 + 32))(v100, v165);
          uint64_t v104 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v102 + 56);
          uint64_t v105 = v102;
          a1 = v101;
          uint64_t v106 = v104(v60, v154, v100, v105);
          uint64_t v107 = v136;
          swift_beginAccess();
          char v108 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v168 = (void *)*v107;
          *uint64_t v107 = 0x8000000000000000;
          sub_100972580(v106, v103, v108);
          *uint64_t v107 = v168;
          uint64_t v60 = v157;
          swift_bridgeObjectRelease();
          (*v163)((char *)v103, v164);
          swift_endAccess();
        }
LABEL_83:
        unint64_t v153 = v48;
        uint64_t v109 = a1;
        int64_t v110 = v51;
        uint64_t v111 = swift_getObjectType();
        uint64_t v112 = v165;
        (*(void (**)(uint64_t, uint64_t))(v165 + 32))(v111, v165);
        uint64_t v113 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v112 + 64))(v60, v154, v111, v112);
        uint64_t v114 = v152;
        swift_beginAccess();
        int v115 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v116 = (uint64_t)v7;
        int v117 = v115;
        unint64_t v168 = *(void **)v114;
        uint64_t v118 = v168;
        *(void *)uint64_t v114 = 0x8000000000000000;
        uint64_t v119 = v116;
        unint64_t v121 = sub_100955FC8(v116);
        uint64_t v122 = v118[2];
        BOOL v123 = (v120 & 1) == 0;
        uint64_t v124 = v122 + v123;
        if (__OFADD__(v122, v123))
        {
          __break(1u);
LABEL_99:
          __break(1u);
LABEL_100:
          __break(1u);
          goto LABEL_101;
        }
        char v125 = v120;
        if (v118[3] >= v124)
        {
          if ((v117 & 1) == 0) {
            sub_10097C6CC();
          }
          uint64_t v7 = (char *)v119;
          id v128 = v168;
          if ((v125 & 1) == 0)
          {
LABEL_87:
            v128[(v121 >> 6) + 8] |= 1 << v121;
            (*(void (**)(unint64_t, char *, uint64_t))(v139 + 16))(v128[6] + *(void *)(v139 + 72) * v121, v7, v164);
            *(void *)(v128[7] + 8 * v121) = v113;
            uint64_t v129 = v128[2];
            BOOL v55 = __OFADD__(v129, 1);
            uint64_t v130 = v129 + 1;
            if (v55) {
              goto LABEL_100;
            }
            v128[2] = v130;
            goto LABEL_93;
          }
        }
        else
        {
          sub_10095F754(v124, v117);
          uint64_t v7 = (char *)v119;
          unint64_t v126 = sub_100955FC8(v119);
          if ((v125 & 1) != (v127 & 1)) {
            goto LABEL_104;
          }
          unint64_t v121 = v126;
          id v128 = v168;
          if ((v125 & 1) == 0) {
            goto LABEL_87;
          }
        }
        uint64_t v131 = v128[7];
        swift_release();
        *(void *)(v131 + 8 * v121) = v113;
LABEL_93:
        *(void *)unint64_t v152 = v128;
        swift_bridgeObjectRelease();
        (*v163)(v7, v164);
        swift_endAccess();
        swift_release();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        int64_t v51 = v110;
        a1 = v109;
        uint64_t v52 = v151;
        unint64_t v48 = v153;
        if (v153) {
          continue;
        }
        goto LABEL_44;
      }
      break;
    }
    swift_retain();
    swift_bridgeObjectRetain();
    char v66 = __CocoaSet.contains(_:)();
    swift_bridgeObjectRelease();
    swift_release();
    if ((v66 & 1) == 0) {
      goto LABEL_70;
    }
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
LABEL_62:
    swift_release();
    if (v48) {
      continue;
    }
    break;
  }
LABEL_44:
  BOOL v55 = __OFADD__(v51++, 1);
  if (v55) {
    goto LABEL_99;
  }
  if (v51 >= v146)
  {
LABEL_96:
    swift_release();
    return (uint64_t)v135;
  }
  unint64_t v56 = *(void *)(v144 + 8 * v51);
  if (v56)
  {
LABEL_54:
    unint64_t v48 = (v56 - 1) & v56;
    unint64_t v54 = __clz(__rbit64(v56)) + (v51 << 6);
    goto LABEL_55;
  }
  int64_t v57 = v51 + 1;
  if (v51 + 1 >= v146) {
    goto LABEL_96;
  }
  unint64_t v56 = *(void *)(v144 + 8 * v57);
  if (v56) {
    goto LABEL_53;
  }
  int64_t v57 = v51 + 2;
  if (v51 + 2 >= v146) {
    goto LABEL_96;
  }
  unint64_t v56 = *(void *)(v144 + 8 * v57);
  if (v56) {
    goto LABEL_53;
  }
  int64_t v57 = v51 + 3;
  if (v51 + 3 >= v146) {
    goto LABEL_96;
  }
  unint64_t v56 = *(void *)(v144 + 8 * v57);
  if (v56)
  {
LABEL_53:
    int64_t v51 = v57;
    goto LABEL_54;
  }
  while (1)
  {
    int64_t v51 = v57 + 1;
    if (__OFADD__(v57, 1)) {
      break;
    }
    if (v51 >= v146) {
      goto LABEL_96;
    }
    unint64_t v56 = *(void *)(v144 + 8 * v51);
    ++v57;
    if (v56) {
      goto LABEL_54;
    }
  }
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  swift_errorRelease();
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_createObservableDelta(populating:shouldCloseTransaction:)", 58, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 474, (uint64_t)"Transactable failed to provide a snapshot in an undoable transaction context", 76, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Transactable failed to provide a snapshot in an undoable transaction context");
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_createObservableDelta(populating:shouldCloseTransaction:)", 58, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 474);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v133, v134);
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
LABEL_104:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_101026BAC(void *a1, int a2)
{
  uint64_t v3 = v2;
  int v113 = a2;
  uint64_t v111 = sub_1005057FC((uint64_t *)&unk_10168A0C0);
  __chkstk_darwin(v111, v5);
  uint64_t v110 = (uint64_t)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v102 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v101 = (char *)&v100 - v13;
  __chkstk_darwin(v14, v15);
  unint64_t v126 = (char *)&v100 - v16;
  uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v104 = (char *)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v105 = (uint64_t)&v100 - v22;
  __chkstk_darwin(v23, v24);
  uint64_t v116 = (uint64_t)&v100 - v25;
  __chkstk_darwin(v26, v27);
  uint64_t v29 = (char *)&v100 - v28;
  __chkstk_darwin(v30, v31);
  char v120 = (char *)&v100 - v32;
  uint64_t v33 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v124 = *(void *)(v33 - 8);
  uint64_t v125 = v33;
  __chkstk_darwin(v33, v34);
  BOOL v123 = (void (**)(uint64_t, uint64_t))((char *)&v100 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v36 - 8, v37);
  uint64_t v122 = (void (*)(char *, char *, uint64_t))((char *)&v100 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v119 = sub_1005057FC(&qword_101683E70);
  uint64_t v100 = *(void *)(v119 - 8);
  __chkstk_darwin(v119, v39);
  uint64_t v118 = (char *)&v100 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166FBD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v41 = (void *)static OS_os_log.boardItemLifecycle;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v43 = v41;
  uint64_t v44 = a1;
  id v45 = [v44 description];
  uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v48 = v47;

  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v46;
  *(void *)(inited + 40) = v48;
  uint64_t v49 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v43, (uint64_t)&_mh_execute_header, v49, (uint64_t)"Calling _recursivelyDeleteChildren() on parent: [%{public}@]", 60, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v109 = v44;
  uint64_t v108 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  type metadata accessor for CRLContainerItemData(0);
  uint64_t v50 = *(void *)swift_dynamicCastClassUnconditional();
  uint64_t v51 = (uint64_t)v122;
  (*(void (**)(void))(v50 + 680))();
  uint64_t v52 = v123;
  uint64_t v53 = v124;
  uint64_t v54 = v125;
  (*(void (**)(void (**)(uint64_t, uint64_t), uint64_t, uint64_t))(v124 + 16))(v123, v51, v125);
  sub_10103561C(v51, type metadata accessor for CRLContainerItemCRDTData);
  BOOL v55 = v118;
  CROrderedSet.makeIterator()();
  (*(void (**)(void, uint64_t))(v53 + 8))(v52, v54);
  uint64_t v56 = OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner;
  uint64_t v57 = v119;
  uint64_t v58 = v120;
  unsigned __int8 v59 = v55;
  CROrderedSet.Iterator.next()();
  uint64_t v60 = v8 + 48;
  uint64_t v124 = *(void *)(v8 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v124)(v58, 1, v7) != 1)
  {
    uint64_t v121 = v3 + v56;
    uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v61 = v8 + 32;
    uint64_t v122 = v62;
    uint64_t v107 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 24);
    BOOL v123 = (void (**)(uint64_t, uint64_t))(v61 - 24);
    uint64_t v106 = v3;
    uint64_t v112 = v61;
    uint64_t v125 = v60;
    while (1)
    {
      uint64_t v63 = (uint64_t)v29;
      uint64_t v64 = v126;
      v122(v126, v58, v7);
      uint64_t v65 = *(void *)(v121 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v67 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 16);
      swift_unknownObjectRetain();
      uint64_t v68 = v64;
      uint64_t v29 = (char *)v63;
      uint64_t v69 = v67(v68, ObjectType, v65);
      uint64_t v71 = v70;
      swift_unknownObjectRelease();
      if (!v69) {
        goto LABEL_23;
      }
      type metadata accessor for CRLBoardItem(0);
      uint64_t v72 = (void *)swift_dynamicCastClass();
      if (!v72) {
        goto LABEL_20;
      }
      uint64_t v117 = v71;
      uint64_t v73 = *(void (**)(uint64_t))((swift_isaMask & *v72) + 0xB8);
      uint64_t v74 = (swift_isaMask & *v72) + 184;
      uint64_t v75 = swift_unknownObjectRetain();
      int v115 = v73;
      uint64_t v114 = v74;
      v73(v75);
      unint64_t v76 = *(void (**)(uint64_t))(**(void **)&v109[v108] + 256);
      uint64_t v77 = swift_retain();
      uint64_t v78 = v116;
      v76(v77);
      uint64_t v29 = (char *)v63;
      swift_release();
      (*v107)(v78, 0, 1, v7);
      uint64_t v79 = v110;
      uint64_t v80 = v110 + *(int *)(v111 + 48);
      sub_1005107BC(v63, v110);
      sub_1005107BC(v78, v80);
      uint64_t v81 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v124;
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v124)(v79, 1, v7) == 1) {
        break;
      }
      uint64_t v82 = v105;
      sub_1005107BC(v79, v105);
      if (v81(v80, 1, v7) == 1)
      {
        sub_100522F00(v116, (uint64_t *)&unk_101674520);
        sub_100522F00(v63, (uint64_t *)&unk_101674520);
        (*v123)(v82, v7);
LABEL_12:
        uint64_t v83 = sub_100522F00(v79, (uint64_t *)&unk_10168A0C0);
        goto LABEL_13;
      }
      uint64_t v92 = v101;
      v122(v101, (char *)v80, v7);
      sub_10103567C((unint64_t *)&qword_10167BDC0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      int v103 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v93 = *v123;
      uint64_t v94 = v92;
      uint64_t v29 = (char *)v63;
      (*v123)((uint64_t)v94, v7);
      sub_100522F00(v116, (uint64_t *)&unk_101674520);
      sub_100522F00(v63, (uint64_t *)&unk_101674520);
      v93(v105, v7);
      uint64_t v83 = sub_100522F00(v79, (uint64_t *)&unk_101674520);
      if (v103) {
        goto LABEL_18;
      }
LABEL_13:
      uint64_t v84 = (uint64_t)v104;
      v115(v83);
      if (v81(v84, 1, v7) == 1)
      {
        swift_unknownObjectRelease();
        sub_100522F00(v84, (uint64_t *)&unk_101674520);
LABEL_19:
        uint64_t v3 = v106;
        uint64_t v71 = v117;
LABEL_20:
        uint64_t v95 = swift_getObjectType();
        uint64_t v96 = v113 & 1;
        sub_101032C58(v69, v113 & 1, 1, v3, v95, v71);
        type metadata accessor for CRLContainerItem(0);
        uint64_t v97 = swift_dynamicCastClass();
        if (v97)
        {
          uint64_t v98 = v97;
          swift_unknownObjectRetain();
          sub_101026BAC(v98, v96);
          swift_unknownObjectRelease();
        }
        swift_unknownObjectRelease();
LABEL_23:
        (*v123)((uint64_t)v126, v7);
        goto LABEL_24;
      }
      uint64_t v85 = v102;
      v122(v102, (char *)v84, v7);
      uint64_t v86 = *(void *)(v121 + 8);
      uint64_t v87 = swift_getObjectType();
      unint64_t v88 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 16);
      swift_unknownObjectRetain();
      uint64_t v89 = v88(v85, v87, v86);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v90 = *v123;
      uint64_t v91 = v85;
      uint64_t v29 = (char *)v63;
      (*v123)((uint64_t)v91, v7);
      swift_unknownObjectRelease();
      uint64_t v3 = v106;
      uint64_t v71 = v117;
      if (!v89) {
        goto LABEL_20;
      }
      v90((uint64_t)v126, v7);
      swift_unknownObjectRelease();
LABEL_24:
      uint64_t v57 = v119;
      uint64_t v58 = v120;
      unsigned __int8 v59 = v118;
      CROrderedSet.Iterator.next()();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v124)(v58, 1, v7) == 1) {
        return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v59, v57);
      }
    }
    sub_100522F00(v78, (uint64_t *)&unk_101674520);
    sub_100522F00(v63, (uint64_t *)&unk_101674520);
    if (v81(v80, 1, v7) == 1)
    {
      sub_100522F00(v79, (uint64_t *)&unk_101674520);
LABEL_18:
      swift_unknownObjectRelease();
      goto LABEL_19;
    }
    goto LABEL_12;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v59, v57);
}

uint64_t sub_1010277E4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_101027918()
{
  sub_1010277E4();

  return swift_deallocClassInstance();
}

uint64_t sub_101027970()
{
  return type metadata accessor for CRLTransactionContext(0);
}

uint64_t type metadata accessor for CRLTransactionContext(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A7818);
}

uint64_t sub_101027998()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_101027A6C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v197 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v195 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v219 = v1;
  uint64_t v196 = a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_id;
  if (static UUID.== infix(_:_:)())
  {
    uint64_t v198 = v3;
    id v199 = v6;
    uint64_t v195 = type metadata accessor for CRLWatermarkTransactionContext(0);
    if (swift_dynamicCastClass())
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"stepTo(_:)", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 576, (uint64_t)"Cannot call stepTo on another watermark", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Cannot call stepTo on another watermark");
      uint64_t v192 = 576;
      goto LABEL_139;
    }
    uint64_t v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects);
    swift_beginAccess();
    char v211 = v7;
    uint64_t v8 = *v7;
    uint64_t v9 = v219;
    uint64_t v10 = &v219[OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects];
    swift_beginAccess();
    unint64_t v210 = (uint64_t *)v10;
    swift_bridgeObjectRetain();
    uint64_t v11 = swift_bridgeObjectRetain();
    unint64_t v218 = (unint64_t)sub_10102247C(v11, v8);
    swift_bridgeObjectRelease();
    uint64_t v12 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects);
    swift_beginAccess();
    uint64_t v209 = v12;
    uint64_t v13 = *v12;
    uint64_t v14 = &v9[OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects];
    swift_beginAccess();
    uint64_t v208 = (uint64_t *)v14;
    swift_bridgeObjectRetain();
    uint64_t v15 = swift_bridgeObjectRetain();
    unint64_t v217 = (unint64_t)sub_10102247C(v15, v13);
    swift_bridgeObjectRelease();
    uint64_t v16 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedNewlyCreatedObjects);
    swift_beginAccess();
    int v207 = v16;
    uint64_t v17 = *v16;
    uint64_t v18 = &v9[OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedNewlyCreatedObjects];
    swift_beginAccess();
    uint64_t v216 = v18;
    swift_bridgeObjectRetain();
    uint64_t v19 = swift_bridgeObjectRetain();
    unint64_t v215 = sub_10102247C(v19, v17);
    swift_bridgeObjectRelease();
    uint64_t v20 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjectOriginalInstances);
    swift_beginAccess();
    uint64_t v206 = v20;
    uint64_t v21 = *v20;
    uint64_t v22 = &v9[OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjectOriginalInstances];
    swift_beginAccess();
    uint64_t v205 = (uint64_t *)v22;
    swift_bridgeObjectRetain();
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v214 = sub_10102247C(v23, v21);
    swift_bridgeObjectRelease();
    uint64_t v225 = a1;
    uint64_t v24 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedDeletedObjectIds);
    swift_beginAccess();
    uint64_t v204 = v24;
    uint64_t v25 = *v24;
    uint64_t v26 = (uint64_t *)&v9[OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedDeletedObjectIds];
    swift_beginAccess();
    uint64_t v203 = v26;
    uint64_t v27 = *v26;
    if (*(void *)(v27 + 16) <= *(void *)(v25 + 16) >> 3)
    {
      v231[0] = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10102A368(v27, (uint64_t (*)(void))&type metadata accessor for UUID, (uint64_t *)&unk_101674520, (void (*)(char *))sub_100D16510);
      swift_bridgeObjectRelease();
      id v213 = (void *)v231[0];
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = swift_bridgeObjectRetain();
      id v213 = sub_10102AA0C(v28, v25);
      swift_bridgeObjectRelease();
    }
    uint64_t v29 = (uint64_t *)(v225 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedCreatedObjectIds);
    swift_beginAccess();
    v202 = v29;
    uint64_t v30 = *v29;
    uint64_t v31 = (uint64_t *)&v219[OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedCreatedObjectIds];
    swift_beginAccess();
    uint64_t v201 = v31;
    uint64_t v32 = *v31;
    if (*(void *)(v32 + 16) <= *(void *)(v30 + 16) >> 3)
    {
      v231[0] = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10102A368(v32, (uint64_t (*)(void))&type metadata accessor for UUID, (uint64_t *)&unk_101674520, (void (*)(char *))sub_100D16510);
      swift_bridgeObjectRelease();
      id v212 = (void *)v231[0];
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v33 = swift_bridgeObjectRetain();
      id v212 = sub_10102AA0C(v33, v30);
      swift_bridgeObjectRelease();
    }
    uint64_t v34 = v225;
    uint64_t v35 = (uint64_t *)(v225 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_modifications);
    swift_beginAccess();
    uint64_t v36 = *v35;
    uint64_t v37 = *(void *)(*v35 + 64);
    uint64_t v221 = *v35 + 64;
    uint64_t v38 = 1 << *(unsigned char *)(v36 + 32);
    uint64_t v39 = -1;
    if (v38 < 64) {
      uint64_t v39 = ~(-1 << v38);
    }
    unint64_t v40 = v39 & v37;
    uint64_t v41 = &v219[OBJC_IVAR____TtC8Freeform21CRLTransactionContext_modifications];
    uint64_t v223 = v36;
    swift_bridgeObjectRetain();
    v226 = v41;
    swift_beginAccess();
    int64_t v228 = 0;
    unint64_t v42 = v38 + 63;
    uint64_t v43 = v34;
    int64_t v222 = v42 >> 6;
    uint64_t v220 = &_swiftEmptyDictionarySingleton;
    if (v40) {
      goto LABEL_14;
    }
LABEL_15:
    int64_t v46 = v228 + 1;
    if (__OFADD__(v228, 1))
    {
      __break(1u);
      goto LABEL_125;
    }
    if (v46 < v222)
    {
      unint64_t v47 = *(void *)(v221 + 8 * v46);
      ++v228;
      if (v47) {
        goto LABEL_28;
      }
      int64_t v228 = v46 + 1;
      if (v46 + 1 >= v222) {
        goto LABEL_58;
      }
      unint64_t v47 = *(void *)(v221 + 8 * v228);
      if (v47) {
        goto LABEL_28;
      }
      int64_t v228 = v46 + 2;
      if (v46 + 2 >= v222) {
        goto LABEL_58;
      }
      unint64_t v47 = *(void *)(v221 + 8 * v228);
      if (v47)
      {
LABEL_28:
        unint64_t v40 = (v47 - 1) & v47;
        for (unint64_t i = __clz(__rbit64(v47)) + (v228 << 6); ; unint64_t i = v44 | (v228 << 6))
        {
          uint64_t v49 = *(void *)(*(void *)(v223 + 48) + 8 * i);
          long long v227 = *(_OWORD *)(*(void *)(v223 + 56) + 16 * i);
          uint64_t v50 = *(void *)(v49 + 24);
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v52 = *(uint64_t (**)(uint64_t, uint64_t))(v50 + 48);
          swift_retain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          uint64_t v53 = v52(ObjectType, v50);
          uint64_t v224 = v54;
          swift_unknownObjectRelease();
          uint64_t v55 = *(void *)v226;
          if (!*(void *)(*(void *)v226 + 16)) {
            goto LABEL_34;
          }
          swift_retain();
          swift_bridgeObjectRetain();
          unint64_t v56 = sub_1009561F4(v49);
          if ((v57 & 1) == 0) {
            break;
          }
          *(void *)&long long v227 = v40;
          uint64_t v58 = (uint64_t *)(*(void *)(v55 + 56) + 16 * v56);
          uint64_t v59 = *v58;
          uint64_t v60 = v58[1];
          swift_unknownObjectRetain();
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v61 = swift_getObjectType();
          uint64_t v232 = swift_getObjectType();
          v231[0] = v53;
          uint64_t v62 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v60 + 128);
          swift_unknownObjectRetain();
          char v63 = v62(v231, v61, v60);
          sub_100522F00((uint64_t)v231, &qword_101672BF0);
          if (v63)
          {
            swift_unknownObjectRelease();
            swift_release();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            uint64_t v43 = v225;
            unint64_t v40 = v227;
            if (!(void)v227) {
              goto LABEL_15;
            }
            goto LABEL_14;
          }
          swift_retain();
          swift_unknownObjectRetain();
          uint64_t v64 = v220;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v231[0] = v64;
          sub_100971F40(v59, v60, v49, isUniquelyReferenced_nonNull_native);
          uint64_t v220 = (void *)v231[0];
          swift_release();
          swift_bridgeObjectRelease();
          char v66 = v226;
          swift_beginAccess();
          swift_retain();
          swift_unknownObjectRetain();
          char v67 = swift_isUniquelyReferenced_nonNull_native();
          v230 = *(void **)v66;
          *(void *)char v66 = 0x8000000000000000;
          sub_100971F40(v53, v224, v49, v67);
          *(void *)char v66 = v230;
          swift_release();
          swift_bridgeObjectRelease();
          swift_endAccess();
          swift_unknownObjectRelease();
          unint64_t v40 = v227;
LABEL_56:
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_release();
          uint64_t v43 = v225;
          if (!v40) {
            goto LABEL_15;
          }
LABEL_14:
          unint64_t v44 = __clz(__rbit64(v40));
          v40 &= v40 - 1;
        }
        swift_release();
        swift_bridgeObjectRelease();
LABEL_34:
        swift_retain();
        swift_unknownObjectRetain();
        uint64_t v68 = v220;
        int v69 = swift_isUniquelyReferenced_nonNull_native();
        v231[0] = v68;
        unint64_t v71 = sub_1009561F4(v49);
        uint64_t v72 = v68[2];
        BOOL v73 = (v70 & 1) == 0;
        uint64_t v74 = v72 + v73;
        if (__OFADD__(v72, v73)) {
          goto LABEL_128;
        }
        char v75 = v70;
        if (v68[3] >= v74)
        {
          if ((v69 & 1) == 0) {
            sub_10097BDBC();
          }
        }
        else
        {
          sub_10095E3E8(v74, v69);
          unint64_t v76 = sub_1009561F4(v49);
          if ((v75 & 1) != (v77 & 1)) {
            goto LABEL_136;
          }
          unint64_t v71 = v76;
        }
        uint64_t v78 = (void *)v231[0];
        uint64_t v220 = (void *)v231[0];
        if (v75)
        {
          uint64_t v79 = *(void *)(v231[0] + 56);
          swift_unknownObjectRelease();
          *(_OWORD *)(v79 + 16 * v71) = v227;
          uint64_t v80 = v49;
        }
        else
        {
          *(void *)(v231[0] + 8 * (v71 >> 6) + 64) |= 1 << v71;
          *(void *)(v78[6] + 8 * v71) = v49;
          *(_OWORD *)(v78[7] + 16 * v71) = v227;
          uint64_t v81 = v78[2];
          BOOL v82 = __OFADD__(v81, 1);
          uint64_t v83 = v81 + 1;
          if (v82) {
            goto LABEL_132;
          }
          uint64_t v80 = v49;
          v78[2] = v83;
          swift_retain();
        }
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v84 = v226;
        swift_beginAccess();
        swift_retain();
        swift_unknownObjectRetain();
        int v85 = swift_isUniquelyReferenced_nonNull_native();
        v230 = *(void **)v84;
        uint64_t v86 = v230;
        *(void *)uint64_t v84 = 0x8000000000000000;
        unint64_t v88 = sub_1009561F4(v80);
        uint64_t v89 = v86[2];
        BOOL v90 = (v87 & 1) == 0;
        uint64_t v91 = v89 + v90;
        if (__OFADD__(v89, v90)) {
          goto LABEL_129;
        }
        char v92 = v87;
        if (v86[3] < v91)
        {
          sub_10095E3E8(v91, v85);
          unint64_t v93 = sub_1009561F4(v49);
          if ((v92 & 1) != (v94 & 1)) {
            goto LABEL_136;
          }
          unint64_t v88 = v93;
          uint64_t v95 = v230;
          if ((v92 & 1) == 0) {
            goto LABEL_53;
          }
LABEL_51:
          uint64_t v96 = (uint64_t *)(v95[7] + 16 * v88);
          swift_unknownObjectRelease();
          uint64_t v97 = v224;
          *uint64_t v96 = v53;
          v96[1] = v97;
LABEL_55:
          *(void *)v226 = v95;
          swift_release();
          swift_bridgeObjectRelease();
          swift_endAccess();
          goto LABEL_56;
        }
        if (v85)
        {
          uint64_t v95 = v230;
          if (v87) {
            goto LABEL_51;
          }
        }
        else
        {
          sub_10097BDBC();
          uint64_t v95 = v230;
          if (v92) {
            goto LABEL_51;
          }
        }
LABEL_53:
        v95[(v88 >> 6) + 8] |= 1 << v88;
        *(void *)(v95[6] + 8 * v88) = v49;
        uint64_t v98 = (uint64_t *)(v95[7] + 16 * v88);
        uint64_t v99 = v224;
        uint64_t *v98 = v53;
        v98[1] = v99;
        uint64_t v100 = v95[2];
        BOOL v82 = __OFADD__(v100, 1);
        uint64_t v101 = v100 + 1;
        if (v82) {
          goto LABEL_133;
        }
        v95[2] = v101;
        swift_retain();
        goto LABEL_55;
      }
      int64_t v48 = v46 + 3;
      if (v48 < v222)
      {
        unint64_t v47 = *(void *)(v221 + 8 * v48);
        if (v47)
        {
          int64_t v228 = v48;
          goto LABEL_28;
        }
        while (1)
        {
          int64_t v228 = v48 + 1;
          if (__OFADD__(v48, 1)) {
            goto LABEL_126;
          }
          if (v228 >= v222) {
            break;
          }
          unint64_t v47 = *(void *)(v221 + 8 * v228);
          ++v48;
          if (v47) {
            goto LABEL_28;
          }
        }
      }
    }
LABEL_58:
    swift_release();
    uint64_t v102 = (uint64_t *)(v43 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableModifications);
    swift_beginAccess();
    uint64_t v200 = v102;
    uint64_t v103 = *v102;
    uint64_t v104 = *(void *)(*v102 + 64);
    uint64_t v221 = *v102 + 64;
    uint64_t v105 = 1 << *(unsigned char *)(v103 + 32);
    uint64_t v106 = -1;
    if (v105 < 64) {
      uint64_t v106 = ~(-1 << v105);
    }
    unint64_t v107 = v106 & v104;
    uint64_t v108 = &v219[OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableModifications];
    uint64_t v224 = v103;
    swift_bridgeObjectRetain();
    v226 = v108;
    swift_beginAccess();
    int64_t v228 = 0;
    int64_t v222 = (unint64_t)(v105 + 63) >> 6;
    v219 = (char *)&_swiftEmptyDictionarySingleton;
    if (v107) {
      goto LABEL_83;
    }
LABEL_65:
    int64_t v110 = v228 + 1;
    if (!__OFADD__(v228, 1))
    {
      if (v110 >= v222) {
        goto LABEL_107;
      }
      unint64_t v111 = *(void *)(v221 + 8 * v110);
      ++v228;
      if (!v111)
      {
        int64_t v228 = v110 + 1;
        if (v110 + 1 >= v222) {
          goto LABEL_107;
        }
        unint64_t v111 = *(void *)(v221 + 8 * v228);
        if (!v111)
        {
          int64_t v228 = v110 + 2;
          if (v110 + 2 >= v222) {
            goto LABEL_107;
          }
          unint64_t v111 = *(void *)(v221 + 8 * v228);
          if (!v111)
          {
            int64_t v112 = v110 + 3;
            if (v112 < v222)
            {
              unint64_t v111 = *(void *)(v221 + 8 * v112);
              if (!v111)
              {
                while (1)
                {
                  int64_t v228 = v112 + 1;
                  if (__OFADD__(v112, 1)) {
                    goto LABEL_127;
                  }
                  if (v228 >= v222) {
                    goto LABEL_107;
                  }
                  unint64_t v111 = *(void *)(v221 + 8 * v228);
                  ++v112;
                  if (v111) {
                    goto LABEL_78;
                  }
                }
              }
              int64_t v228 = v112;
              goto LABEL_78;
            }
LABEL_107:
            swift_release();
            uint64_t *v210 = *v211;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *uint64_t v208 = *v209;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)uint64_t v216 = *v207;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *uint64_t v205 = *v206;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *uint64_t v203 = *v204;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *uint64_t v201 = *v202;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v173 = *v200;
            uint64_t v174 = v226;
            swift_beginAccess();
            *(void *)uint64_t v174 = v173;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if (!v220[2])
            {
              if ((v218 & 0xC000000000000001) != 0)
              {
                if (__CocoaSet.count.getter()) {
                  goto LABEL_118;
                }
              }
              else if (*(void *)(v218 + 16))
              {
                goto LABEL_118;
              }
              if ((v217 & 0xC000000000000001) != 0)
              {
                if (!__CocoaSet.count.getter())
                {
LABEL_116:
                  if ((*(void *)v216 & 0xC000000000000001) != 0)
                  {
                    swift_bridgeObjectRetain();
                    uint64_t v175 = __CocoaSet.count.getter();
                    swift_bridgeObjectRelease();
                    if (v175) {
                      goto LABEL_118;
                    }
                  }
                  else if (*(void *)(*(void *)v216 + 16))
                  {
                    goto LABEL_118;
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  return 0;
                }
              }
              else if (!*(void *)(v217 + 16))
              {
                goto LABEL_116;
              }
            }
LABEL_118:
            uint64_t v176 = swift_allocObject();
            char v177 = *(unsigned char *)(v225 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_trackChanges);
            swift_retain();
            if ((v177 & 1) == 0)
            {
              sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(from:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 560, (uint64_t)"Should not be trying to watermark a transaction that doesnt want to be tracked.", 79, 2u, (uint64_t)_swiftEmptyArrayStorage);
              sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(from:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 560);
            }
            uint64_t v178 = *(void *)(v225 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner);
            uint64_t v179 = *(void *)(v225 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner + 8);
            uint64_t v180 = (uint64_t)v199;
            (*(void (**)(char *, uint64_t, uint64_t))(v197 + 16))(v199, v196, v198);
            swift_unknownObjectRetain();
            swift_release();
            uint64_t v181 = swift_getObjectType();
            uint64_t v182 = sub_1010338AC(v178, 0, 1, v180, 1, v176, v181, v179);
            *(unsigned char *)(v182 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active) = 0;
            uint64_t v183 = (void *)(v182 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_modifications);
            swift_beginAccess();
            *uint64_t v183 = v220;
            swift_bridgeObjectRelease();
            uint64_t v184 = (unint64_t *)(v182 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects);
            swift_beginAccess();
            *uint64_t v184 = v218;
            swift_bridgeObjectRelease();
            uint64_t v185 = (unint64_t *)(v182 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects);
            swift_beginAccess();
            *uint64_t v185 = v217;
            swift_bridgeObjectRelease();
            unint64_t v186 = (void *)(v182 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedNewlyCreatedObjects);
            swift_beginAccess();
            *unint64_t v186 = v215;
            swift_bridgeObjectRelease();
            long long v187 = (void *)(v182 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjectOriginalInstances);
            swift_beginAccess();
            *long long v187 = v214;
            swift_bridgeObjectRelease();
            v188 = (void *)(v182 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableModifications);
            swift_beginAccess();
            void *v188 = v219;
            swift_bridgeObjectRelease();
            uint64_t v189 = (void *)(v182 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedDeletedObjectIds);
            swift_beginAccess();
            *uint64_t v189 = v213;
            swift_bridgeObjectRelease();
            uint64_t v190 = (void *)(v182 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedCreatedObjectIds);
            swift_beginAccess();
            *uint64_t v190 = v212;
            swift_bridgeObjectRelease();
            return v182;
          }
        }
      }
LABEL_78:
      unint64_t v107 = (v111 - 1) & v111;
      for (unint64_t j = __clz(__rbit64(v111)) + (v228 << 6); ; unint64_t j = v134 | (v228 << 6))
      {
        uint64_t v114 = *(void *)(*(void *)(v224 + 48) + 8 * j);
        long long v227 = *(_OWORD *)(*(void *)(v224 + 56) + 16 * j);
        uint64_t v115 = *(void *)(v114 + 24);
        uint64_t v116 = swift_getObjectType();
        uint64_t v117 = *(uint64_t (**)(uint64_t, uint64_t))(v115 + 48);
        swift_retain();
        uint64_t v118 = v227;
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        uint64_t v119 = v116;
        uint64_t v120 = v114;
        uint64_t v121 = v117(v119, v115);
        uint64_t v123 = v122;
        swift_unknownObjectRelease();
        uint64_t v124 = *(void *)v226;
        if (!*(void *)(*(void *)v226 + 16)) {
          goto LABEL_85;
        }
        swift_retain();
        swift_bridgeObjectRetain();
        unint64_t v125 = sub_1009561F4(v120);
        if ((v126 & 1) == 0) {
          break;
        }
        uint64_t v223 = v123;
        *(void *)&long long v227 = v107;
        char v127 = (uint64_t *)(*(void *)(v124 + 56) + 16 * v125);
        uint64_t v129 = *v127;
        uint64_t v128 = v127[1];
        swift_unknownObjectRetain();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v130 = swift_getObjectType();
        uint64_t v232 = swift_getObjectType();
        v231[0] = v121;
        uint64_t v131 = v120;
        unint64_t v132 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v128 + 128);
        swift_unknownObjectRetain();
        char v133 = v132(v231, v130, v128);
        sub_100522F00((uint64_t)v231, &qword_101672BF0);
        if ((v133 & 1) == 0)
        {
          swift_retain();
          swift_unknownObjectRetain();
          uint64_t v169 = v219;
          char v170 = swift_isUniquelyReferenced_nonNull_native();
          v231[0] = v169;
          sub_100971F40(v129, v128, v131, v170);
          v219 = (char *)v231[0];
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v171 = v226;
          swift_beginAccess();
          swift_retain();
          swift_unknownObjectRetain();
          char v172 = swift_isUniquelyReferenced_nonNull_native();
          long long v229 = *(void **)v171;
          *(void *)uint64_t v171 = 0x8000000000000000;
          sub_100971F40(v121, v223, v131, v172);
          *(void *)uint64_t v171 = v229;
          swift_release();
          swift_bridgeObjectRelease();
          swift_endAccess();
          swift_unknownObjectRelease();
          unint64_t v107 = v227;
LABEL_64:
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_release();
          if (!v107) {
            goto LABEL_65;
          }
          goto LABEL_83;
        }
        swift_unknownObjectRelease();
        swift_release();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        unint64_t v107 = v227;
        if (!(void)v227) {
          goto LABEL_65;
        }
LABEL_83:
        unint64_t v134 = __clz(__rbit64(v107));
        v107 &= v107 - 1;
      }
      swift_release();
      swift_bridgeObjectRelease();
LABEL_85:
      uint64_t v135 = v121;
      swift_retain();
      uint64_t v223 = v118;
      swift_unknownObjectRetain();
      uint64_t v136 = v219;
      int v137 = swift_isUniquelyReferenced_nonNull_native();
      v231[0] = v136;
      unint64_t v139 = sub_1009561F4(v120);
      uint64_t v140 = *((void *)v136 + 2);
      BOOL v141 = (v138 & 1) == 0;
      uint64_t v142 = v140 + v141;
      if (__OFADD__(v140, v141)) {
        goto LABEL_130;
      }
      char v143 = v138;
      if (*((void *)v136 + 3) >= v142)
      {
        if ((v137 & 1) == 0) {
          sub_10097BDBC();
        }
      }
      else
      {
        sub_10095E3E8(v142, v137);
        unint64_t v144 = sub_1009561F4(v120);
        if ((v143 & 1) != (v145 & 1)) {
          goto LABEL_136;
        }
        unint64_t v139 = v144;
      }
      int64_t v146 = (void *)v231[0];
      v219 = (char *)v231[0];
      if (v143)
      {
        uint64_t v147 = v123;
        uint64_t v148 = *(void *)(v231[0] + 56);
        swift_unknownObjectRelease();
        *(_OWORD *)(v148 + 16 * v139) = v227;
      }
      else
      {
        *(void *)(v231[0] + 8 * (v139 >> 6) + 64) |= 1 << v139;
        *(void *)(v146[6] + 8 * v139) = v120;
        *(_OWORD *)(v146[7] + 16 * v139) = v227;
        uint64_t v149 = v146[2];
        BOOL v82 = __OFADD__(v149, 1);
        uint64_t v150 = v149 + 1;
        if (v82) {
          goto LABEL_134;
        }
        uint64_t v147 = v123;
        v146[2] = v150;
        swift_retain();
      }
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v151 = v120;
      unint64_t v152 = v226;
      swift_beginAccess();
      swift_retain();
      swift_unknownObjectRetain();
      int v153 = swift_isUniquelyReferenced_nonNull_native();
      long long v229 = *(void **)v152;
      uint64_t v154 = v229;
      *(void *)unint64_t v152 = 0x8000000000000000;
      uint64_t v155 = v151;
      unint64_t v157 = sub_1009561F4(v151);
      uint64_t v158 = v154[2];
      BOOL v159 = (v156 & 1) == 0;
      uint64_t v160 = v158 + v159;
      if (__OFADD__(v158, v159)) {
        goto LABEL_131;
      }
      char v161 = v156;
      if (v154[3] < v160)
      {
        sub_10095E3E8(v160, v153);
        unint64_t v162 = sub_1009561F4(v151);
        if ((v161 & 1) != (v163 & 1)) {
          goto LABEL_136;
        }
        unint64_t v157 = v162;
        uint64_t v164 = v147;
        uint64_t v165 = v229;
        if ((v161 & 1) == 0) {
          goto LABEL_102;
        }
LABEL_62:
        uint64_t v109 = (uint64_t *)(v165[7] + 16 * v157);
        swift_unknownObjectRelease();
        *uint64_t v109 = v135;
        v109[1] = v164;
LABEL_63:
        *(void *)v226 = v165;
        swift_release();
        swift_bridgeObjectRelease();
        swift_endAccess();
        goto LABEL_64;
      }
      uint64_t v164 = v147;
      if (v153)
      {
        uint64_t v165 = v229;
        if (v156) {
          goto LABEL_62;
        }
      }
      else
      {
        sub_10097BDBC();
        uint64_t v165 = v229;
        if (v161) {
          goto LABEL_62;
        }
      }
LABEL_102:
      v165[(v157 >> 6) + 8] |= 1 << v157;
      *(void *)(v165[6] + 8 * v157) = v155;
      uint64_t v166 = (uint64_t *)(v165[7] + 16 * v157);
      uint64_t *v166 = v135;
      v166[1] = v164;
      uint64_t v167 = v165[2];
      BOOL v82 = __OFADD__(v167, 1);
      uint64_t v168 = v167 + 1;
      if (v82) {
        goto LABEL_135;
      }
      v165[2] = v168;
      swift_retain();
      goto LABEL_63;
    }
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    type metadata accessor for CRLTransactableHashableWrapper();
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"stepTo(_:)", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 572, (uint64_t)"Cannot call stepTo on a different context than the one it was created with.", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Cannot call stepTo on a different context than the one it was created with.");
  uint64_t v192 = 572;
LABEL_139:
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"stepTo(_:)", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, v192);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v193, v194);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1010292B4()
{
}

uint64_t sub_101029310()
{
  return type metadata accessor for CRLWatermarkTransactionContext(0);
}

uint64_t type metadata accessor for CRLWatermarkTransactionContext(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A7B98);
}

uint64_t sub_101029338()
{
  return swift_updateClassMetadata2();
}

uint64_t type metadata accessor for CRLInertOwner()
{
  return self;
}

ValueMetadata *type metadata accessor for CRLTransactionChangeSummary()
{
  return &type metadata for CRLTransactionChangeSummary;
}

uint64_t sub_1010293A4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1010293D8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_10103567C(&qword_1016A7FE0, a2, (void (*)(uint64_t))type metadata accessor for CRLInertOwner);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_101029430(uint64_t a1, uint64_t a2)
{
  return sub_10103567C(&qword_1016A7FE8, a2, (void (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper);
}

uint64_t sub_101029478(uint64_t a1, uint64_t a2)
{
  return sub_101029538(a1, a2, (void (*)(void))&type metadata accessor for UUID, (unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID) & 1;
}

uint64_t sub_1010294D8(uint64_t a1, uint64_t a2)
{
  return sub_101029538(a1, a2, (void (*)(void))&type metadata accessor for IndexPath, &qword_10169A040, (void (*)(uint64_t))&type metadata accessor for IndexPath) & 1;
}

uint64_t sub_101029538(uint64_t a1, uint64_t a2, void (*a3)(void), unint64_t *a4, void (*a5)(uint64_t))
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t sub_1010295C8(uint64_t a1)
{
  return sub_10102A368(a1, (uint64_t (*)(void))&type metadata accessor for UUID, (uint64_t *)&unk_101674520, (void (*)(char *))sub_100D16510);
}

uint64_t sub_1010295FC(uint64_t a1)
{
  if ((*(void *)v1 & 0xC000000000000001) != 0)
  {
    uint64_t result = __CocoaSet.count.getter();
    if (!result) {
      return result;
    }
LABEL_5:
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      __CocoaSet.makeIterator()();
      type metadata accessor for CRLTransactableHashableWrapper();
      sub_10103567C((unint64_t *)&qword_10169A0A0, v4, (void (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper);
      uint64_t result = Set.Iterator.init(_cocoa:)();
      a1 = v21;
      uint64_t v19 = v22;
      uint64_t v5 = v23;
      uint64_t v6 = v24;
      unint64_t v7 = v25;
    }
    else
    {
      uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
      uint64_t v19 = a1 + 56;
      uint64_t v5 = ~v8;
      uint64_t v9 = -v8;
      if (v9 < 64) {
        uint64_t v10 = ~(-1 << v9);
      }
      else {
        uint64_t v10 = -1;
      }
      unint64_t v7 = v10 & *(void *)(a1 + 56);
      uint64_t result = swift_bridgeObjectRetain();
      uint64_t v6 = 0;
    }
    int64_t v11 = (unint64_t)(v5 + 64) >> 6;
    if (a1 < 0) {
      goto LABEL_14;
    }
    while (1)
    {
      if (v7)
      {
        uint64_t v12 = (v7 - 1) & v7;
        unint64_t v13 = __clz(__rbit64(v7)) | (v6 << 6);
        uint64_t v14 = v6;
      }
      else
      {
        int64_t v16 = v6 + 1;
        if (__OFADD__(v6, 1))
        {
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          return sub_10052E1EC();
        }
        unint64_t v17 = *(void *)(v19 + 8 * v16);
        uint64_t v14 = v6 + 1;
        if (!v17)
        {
          uint64_t v14 = v6 + 2;
          if (v6 + 2 >= v11) {
            return sub_10052E1EC();
          }
          unint64_t v17 = *(void *)(v19 + 8 * v14);
          if (!v17)
          {
            uint64_t v14 = v6 + 3;
            if (v6 + 3 >= v11) {
              return sub_10052E1EC();
            }
            unint64_t v17 = *(void *)(v19 + 8 * v14);
            if (!v17)
            {
              uint64_t v14 = v6 + 4;
              if (v6 + 4 >= v11) {
                return sub_10052E1EC();
              }
              unint64_t v17 = *(void *)(v19 + 8 * v14);
              if (!v17)
              {
                uint64_t v14 = v6 + 5;
                if (v6 + 5 >= v11) {
                  return sub_10052E1EC();
                }
                unint64_t v17 = *(void *)(v19 + 8 * v14);
                if (!v17)
                {
                  uint64_t v18 = v6 + 6;
                  while (v11 != v18)
                  {
                    unint64_t v17 = *(void *)(v19 + 8 * v18++);
                    if (v17)
                    {
                      uint64_t v14 = v18 - 1;
                      goto LABEL_32;
                    }
                  }
                  return sub_10052E1EC();
                }
              }
            }
          }
        }
LABEL_32:
        uint64_t v12 = (v17 - 1) & v17;
        unint64_t v13 = __clz(__rbit64(v17)) + (v14 << 6);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 48) + 8 * v13);
      swift_retain();
      if (!v15) {
        return sub_10052E1EC();
      }
      while (1)
      {
        sub_100D16184(v15);
        swift_release();
        uint64_t result = swift_release();
        uint64_t v6 = v14;
        unint64_t v7 = v12;
        if ((a1 & 0x8000000000000000) == 0) {
          break;
        }
LABEL_14:
        if (__CocoaSet.Iterator.next()())
        {
          type metadata accessor for CRLTransactableHashableWrapper();
          swift_unknownObjectRetain();
          swift_dynamicCast();
          uint64_t v15 = v20;
          swift_unknownObjectRelease();
          uint64_t v14 = v6;
          uint64_t v12 = v7;
          if (v20) {
            continue;
          }
        }
        return sub_10052E1EC();
      }
    }
  }
  uint64_t result = *(void *)(*(void *)v1 + 16);
  if (result) {
    goto LABEL_5;
  }
  return result;
}

uint64_t sub_1010298F0(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    int64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_100D167F0(v12, v13);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

void sub_101029A98(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v3 - 8, v4);
  unint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8, v9);
  int64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  unint64_t v15 = (char *)&v27 - v14;
  if (!*(void *)(*(void *)v1 + 16)) {
    return;
  }
  uint64_t v16 = a1 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(a1 + 56);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v21 = 0;
  while (1)
  {
    if (v19)
    {
      unint64_t v22 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v23 = v22 | (v21 << 6);
      goto LABEL_6;
    }
    int64_t v24 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v20) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v16 + 8 * v24);
    ++v21;
    if (!v25)
    {
      int64_t v21 = v24 + 1;
      if (v24 + 1 >= v20) {
        goto LABEL_24;
      }
      unint64_t v25 = *(void *)(v16 + 8 * v21);
      if (!v25)
      {
        int64_t v21 = v24 + 2;
        if (v24 + 2 >= v20) {
          goto LABEL_24;
        }
        unint64_t v25 = *(void *)(v16 + 8 * v21);
        if (!v25)
        {
          int64_t v21 = v24 + 3;
          if (v24 + 3 >= v20) {
            goto LABEL_24;
          }
          unint64_t v25 = *(void *)(v16 + 8 * v21);
          if (!v25) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v21 << 6);
LABEL_6:
    sub_100540CFC(*(void *)(a1 + 48) + *(void *)(v8 + 72) * v23, (uint64_t)v15);
    sub_1005394E4((uint64_t)v15, (uint64_t)v11);
    sub_100D16DEC((uint64_t)v11, (uint64_t)v6);
    sub_100522F00((uint64_t)v6, &qword_101672C30);
    sub_10103561C((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
  }
  int64_t v26 = v24 + 4;
  if (v26 >= v20)
  {
LABEL_24:
    swift_release();
    return;
  }
  unint64_t v25 = *(void *)(v16 + 8 * v26);
  if (v25)
  {
    int64_t v21 = v26;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v21 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v21 >= v20) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v16 + 8 * v21);
    ++v26;
    if (v25) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_101029D28(uint64_t a1)
{
  if ((*(void *)v1 & 0xC000000000000001) != 0)
  {
    uint64_t result = __CocoaSet.count.getter();
    if (!result) {
      return result;
    }
LABEL_5:
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      __CocoaSet.makeIterator()();
      type metadata accessor for CalculateExpression();
      sub_10103567C((unint64_t *)&unk_10167BEE0, 255, (void (*)(uint64_t))&type metadata accessor for CalculateExpression);
      uint64_t result = Set.Iterator.init(_cocoa:)();
      a1 = v20;
      uint64_t v18 = v21;
      uint64_t v4 = v22;
      uint64_t v5 = v23;
      unint64_t v6 = v24;
    }
    else
    {
      uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
      uint64_t v18 = a1 + 56;
      uint64_t v4 = ~v7;
      uint64_t v8 = -v7;
      if (v8 < 64) {
        uint64_t v9 = ~(-1 << v8);
      }
      else {
        uint64_t v9 = -1;
      }
      unint64_t v6 = v9 & *(void *)(a1 + 56);
      uint64_t result = swift_bridgeObjectRetain();
      uint64_t v5 = 0;
    }
    int64_t v10 = (unint64_t)(v4 + 64) >> 6;
    if (a1 < 0) {
      goto LABEL_14;
    }
    while (1)
    {
      if (v6)
      {
        uint64_t v11 = (v6 - 1) & v6;
        unint64_t v12 = __clz(__rbit64(v6)) | (v5 << 6);
        uint64_t v13 = v5;
      }
      else
      {
        int64_t v14 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
          __break(1u);
          return result;
        }
        if (v14 >= v10) {
          return sub_10052E1EC();
        }
        unint64_t v15 = *(void *)(v18 + 8 * v14);
        uint64_t v13 = v5 + 1;
        if (!v15)
        {
          uint64_t v13 = v5 + 2;
          if (v5 + 2 >= v10) {
            return sub_10052E1EC();
          }
          unint64_t v15 = *(void *)(v18 + 8 * v13);
          if (!v15)
          {
            uint64_t v13 = v5 + 3;
            if (v5 + 3 >= v10) {
              return sub_10052E1EC();
            }
            unint64_t v15 = *(void *)(v18 + 8 * v13);
            if (!v15)
            {
              uint64_t v13 = v5 + 4;
              if (v5 + 4 >= v10) {
                return sub_10052E1EC();
              }
              unint64_t v15 = *(void *)(v18 + 8 * v13);
              if (!v15)
              {
                uint64_t v13 = v5 + 5;
                if (v5 + 5 >= v10) {
                  return sub_10052E1EC();
                }
                unint64_t v15 = *(void *)(v18 + 8 * v13);
                if (!v15)
                {
                  uint64_t v16 = v5 + 6;
                  while (v10 != v16)
                  {
                    unint64_t v15 = *(void *)(v18 + 8 * v16++);
                    if (v15)
                    {
                      uint64_t v13 = v16 - 1;
                      goto LABEL_32;
                    }
                  }
                  return sub_10052E1EC();
                }
              }
            }
          }
        }
LABEL_32:
        uint64_t v11 = (v15 - 1) & v15;
        unint64_t v12 = __clz(__rbit64(v15)) + (v13 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 48) + 8 * v12);
      swift_retain();
      if (!v17) {
        return sub_10052E1EC();
      }
      while (1)
      {
        sub_100D17414();
        swift_release();
        uint64_t result = swift_release();
        uint64_t v5 = v13;
        unint64_t v6 = v11;
        if ((a1 & 0x8000000000000000) == 0) {
          break;
        }
LABEL_14:
        if (__CocoaSet.Iterator.next()())
        {
          type metadata accessor for CalculateExpression();
          swift_unknownObjectRetain();
          swift_dynamicCast();
          swift_unknownObjectRelease();
          uint64_t v13 = v5;
          uint64_t v11 = v6;
          if (v19) {
            continue;
          }
        }
        return sub_10052E1EC();
      }
    }
  }
  uint64_t result = *(void *)(*(void *)v1 + 16);
  if (result) {
    goto LABEL_5;
  }
  return result;
}

void sub_10102A028(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101676160);
  __chkstk_darwin(v3 - 8, v4);
  unint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UTType();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  unint64_t v15 = (char *)&v27 - v14;
  if (!*(void *)(*(void *)v1 + 16)) {
    return;
  }
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v27 = a1 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  uint64_t v30 = v8 + 16;
  int64_t v28 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v29 = v8 + 32;
  uint64_t v20 = a1;
  swift_bridgeObjectRetain();
  int64_t v21 = 0;
  while (1)
  {
    if (v19)
    {
      unint64_t v22 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v23 = v22 | (v21 << 6);
      goto LABEL_6;
    }
    int64_t v24 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v28) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v27 + 8 * v24);
    ++v21;
    if (!v25)
    {
      int64_t v21 = v24 + 1;
      if (v24 + 1 >= v28) {
        goto LABEL_24;
      }
      unint64_t v25 = *(void *)(v27 + 8 * v21);
      if (!v25)
      {
        int64_t v21 = v24 + 2;
        if (v24 + 2 >= v28) {
          goto LABEL_24;
        }
        unint64_t v25 = *(void *)(v27 + 8 * v21);
        if (!v25)
        {
          int64_t v21 = v24 + 3;
          if (v24 + 3 >= v28) {
            goto LABEL_24;
          }
          unint64_t v25 = *(void *)(v27 + 8 * v21);
          if (!v25) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v21 << 6);
LABEL_6:
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v15, *(void *)(v20 + 48) + *(void *)(v8 + 72) * v23, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v15, v7);
    sub_100D17C1C((uint64_t)v11, (uint64_t)v6);
    sub_100522F00((uint64_t)v6, (uint64_t *)&unk_101676160);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  int64_t v26 = v24 + 4;
  if (v26 >= v28)
  {
LABEL_24:
    swift_release();
    return;
  }
  unint64_t v25 = *(void *)(v27 + 8 * v26);
  if (v25)
  {
    int64_t v21 = v26;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v21 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v21 >= v28) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v27 + 8 * v21);
    ++v26;
    if (v25) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_10102A334(uint64_t a1)
{
  return sub_10102A368(a1, (uint64_t (*)(void))&type metadata accessor for IndexPath, (uint64_t *)&unk_10169B4A0, (void (*)(char *))sub_100D18B00);
}

uint64_t sub_10102A368(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, void (*a4)(char *))
{
  uint64_t v34 = a4;
  uint64_t v7 = a2(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v33 = a3;
  uint64_t v12 = sub_1005057FC(a3);
  uint64_t v14 = __chkstk_darwin(v12 - 8, v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v14, v17);
  uint64_t v20 = (char *)&v31 - v19;
  if (!*(void *)(*(void *)v4 + 16)) {
    return result;
  }
  uint64_t v21 = *(void *)(a1 + 56);
  uint64_t v31 = a1 + 56;
  uint64_t v22 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & v21;
  int64_t v32 = (unint64_t)(v22 + 63) >> 6;
  uint64_t v36 = v8 + 16;
  uint64_t v37 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v35 = v8 + 48;
  uint64_t v38 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v25 = 0;
  if (!v24) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v26 = __clz(__rbit64(v24));
  v24 &= v24 - 1;
  for (unint64_t i = v26 | (v25 << 6); ; unint64_t i = __clz(__rbit64(v29)) + (v25 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v20, *(void *)(v38 + 48) + *(void *)(v8 + 72) * i, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v20, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v20, 1, v7) == 1) {
      return swift_release();
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v20, v7);
    v34(v11);
    sub_100522F00((uint64_t)v16, v33);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    if (v24) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v28 = v25 + 1;
    if (__OFADD__(v25, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v28 >= v32) {
      goto LABEL_25;
    }
    unint64_t v29 = *(void *)(v31 + 8 * v28);
    ++v25;
    if (!v29)
    {
      int64_t v25 = v28 + 1;
      if (v28 + 1 >= v32) {
        goto LABEL_25;
      }
      unint64_t v29 = *(void *)(v31 + 8 * v25);
      if (!v29)
      {
        int64_t v25 = v28 + 2;
        if (v28 + 2 >= v32) {
          goto LABEL_25;
        }
        unint64_t v29 = *(void *)(v31 + 8 * v25);
        if (!v29)
        {
          int64_t v25 = v28 + 3;
          if (v28 + 3 >= v32) {
            goto LABEL_25;
          }
          unint64_t v29 = *(void *)(v31 + 8 * v25);
          if (!v29) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v24 = (v29 - 1) & v29;
  }
  int64_t v30 = v28 + 4;
  if (v30 >= v32)
  {
LABEL_25:
    (*v37)(v20, 1, 1, v7);
    return swift_release();
  }
  unint64_t v29 = *(void *)(v31 + 8 * v30);
  if (v29)
  {
    int64_t v25 = v30;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v25 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v25 >= v32) {
      goto LABEL_25;
    }
    unint64_t v29 = *(void *)(v31 + 8 * v25);
    ++v30;
    if (v29) {
      goto LABEL_21;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void sub_10102A700(uint64_t a1, void (*a2)(void), unint64_t *a3, void (*a4)(uint64_t), uint64_t (*a5)(id))
{
  if ((*(void *)v5 & 0xC000000000000001) != 0)
  {
    if (!__CocoaSet.count.getter()) {
      return;
    }
LABEL_5:
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      __CocoaSet.makeIterator()();
      a2(0);
      sub_10103567C(a3, 255, a4);
      Set.Iterator.init(_cocoa:)();
      a1 = v28;
      uint64_t v26 = v29;
      uint64_t v10 = v30;
      uint64_t v11 = v31;
      unint64_t v12 = v32;
    }
    else
    {
      uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
      uint64_t v26 = a1 + 56;
      uint64_t v10 = ~v13;
      uint64_t v14 = -v13;
      if (v14 < 64) {
        uint64_t v15 = ~(-1 << v14);
      }
      else {
        uint64_t v15 = -1;
      }
      unint64_t v12 = v15 & *(void *)(a1 + 56);
      swift_bridgeObjectRetain();
      uint64_t v11 = 0;
    }
    int64_t v16 = (unint64_t)(v10 + 64) >> 6;
    if (a1 < 0) {
      goto LABEL_14;
    }
    while (1)
    {
      if (v12)
      {
        uint64_t v17 = (v12 - 1) & v12;
        unint64_t v18 = __clz(__rbit64(v12)) | (v11 << 6);
        uint64_t v19 = v11;
      }
      else
      {
        int64_t v21 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
          return;
        }
        if (v21 >= v16) {
          goto LABEL_36;
        }
        unint64_t v22 = *(void *)(v26 + 8 * v21);
        uint64_t v19 = v11 + 1;
        if (!v22)
        {
          uint64_t v19 = v11 + 2;
          if (v11 + 2 >= v16) {
            goto LABEL_36;
          }
          unint64_t v22 = *(void *)(v26 + 8 * v19);
          if (!v22)
          {
            uint64_t v19 = v11 + 3;
            if (v11 + 3 >= v16) {
              goto LABEL_36;
            }
            unint64_t v22 = *(void *)(v26 + 8 * v19);
            if (!v22)
            {
              uint64_t v19 = v11 + 4;
              if (v11 + 4 >= v16) {
                goto LABEL_36;
              }
              unint64_t v22 = *(void *)(v26 + 8 * v19);
              if (!v22)
              {
                uint64_t v19 = v11 + 5;
                if (v11 + 5 >= v16) {
                  goto LABEL_36;
                }
                unint64_t v22 = *(void *)(v26 + 8 * v19);
                if (!v22)
                {
                  uint64_t v23 = v11 + 6;
                  while (v16 != v23)
                  {
                    unint64_t v22 = *(void *)(v26 + 8 * v23++);
                    if (v22)
                    {
                      uint64_t v19 = v23 - 1;
                      goto LABEL_32;
                    }
                  }
LABEL_36:
                  sub_10052E1EC();
                  return;
                }
              }
            }
          }
        }
LABEL_32:
        uint64_t v17 = (v22 - 1) & v22;
        unint64_t v18 = __clz(__rbit64(v22)) + (v19 << 6);
      }
      id v20 = *(id *)(*(void *)(a1 + 48) + 8 * v18);
      if (!v20) {
        goto LABEL_36;
      }
      while (1)
      {
        unint64_t v24 = (void *)a5(v20);

        uint64_t v11 = v19;
        unint64_t v12 = v17;
        if ((a1 & 0x8000000000000000) == 0) {
          break;
        }
LABEL_14:
        if (__CocoaSet.Iterator.next()())
        {
          a2(0);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v20 = v27;
          swift_unknownObjectRelease();
          uint64_t v19 = v11;
          uint64_t v17 = v12;
          if (v27) {
            continue;
          }
        }
        goto LABEL_36;
      }
    }
  }
  if (*(void *)(*(void *)v5 + 16)) {
    goto LABEL_5;
  }
}

void *sub_10102AA0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v14);
  char v63 = (char *)&v53 - v15;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  uint64_t v16 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v17 = ~v16;
  uint64_t v18 = a1 + 56;
  uint64_t v19 = -v16;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & *(void *)(a1 + 56);
  uint64_t v64 = a1;
  uint64_t v65 = a1 + 56;
  uint64_t v58 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v59 = v7;
  uint64_t v66 = v17;
  uint64_t v67 = 0;
  unint64_t v68 = v21;
  char v57 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  uint64_t v55 = (void (**)(char *, uint64_t, uint64_t))(v9 + 32);
  uint64_t v61 = v9 + 16;
  uint64_t v62 = (char *)(a2 + 56);
  unint64_t v22 = (void (**)(char *, uint64_t))(v9 + 8);
  swift_bridgeObjectRetain();
  int64_t v23 = 0;
  uint64_t v60 = v9;
  uint64_t v56 = a2;
  uint64_t v54 = 0;
  if (!v21) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v24 = (v21 - 1) & v21;
  unint64_t v25 = __clz(__rbit64(v21)) | (v23 << 6);
  int64_t v26 = v23;
LABEL_7:
  unint64_t v27 = *(void *)(a1 + 48) + *(void *)(v9 + 72) * v25;
  uint64_t v28 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
  uint64_t v29 = (uint64_t)v59;
  v28(v59, v27, v8);
  uint64_t v30 = 0;
  while (1)
  {
    (*v58)(v29, v30, 1, v8);
    uint64_t v64 = a1;
    uint64_t v65 = v18;
    uint64_t v66 = v17;
    uint64_t v67 = v26;
    unint64_t v68 = v24;
    if ((*v57)(v29, 1, v8) == 1)
    {
      sub_10052E1EC();
      sub_100522F00(v29, (uint64_t *)&unk_101674520);
      return (void *)v56;
    }
    (*v55)(v63, v29, v8);
    uint64_t v34 = v56;
    sub_10103567C((unint64_t *)&qword_1016770E0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v35 = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v36 = -1 << *(unsigned char *)(v34 + 32);
    unint64_t v37 = v35 & ~v36;
    if ((*(void *)&v62[(v37 >> 3) & 0xFFFFFFFFFFFFFF8] >> v37)) {
      break;
    }
    uint64_t v43 = *v22;
    uint64_t v9 = v60;
LABEL_35:
    v43(v63, v8);
    int64_t v23 = v67;
    unint64_t v21 = v68;
    a1 = v64;
    uint64_t v18 = v65;
    uint64_t v17 = v66;
    uint64_t v54 = v67;
    if (v68) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v26 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      __break(1u);
    }
    int64_t v31 = (unint64_t)(v17 + 64) >> 6;
    if (v26 >= v31) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v18 + 8 * v26);
    if (v32) {
      goto LABEL_11;
    }
    v23 += 2;
    if (v26 + 1 >= v31) {
      goto LABEL_37;
    }
    unint64_t v32 = *(void *)(v18 + 8 * v23);
    if (v32) {
      goto LABEL_14;
    }
    if (v26 + 2 >= v31) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v18 + 8 * (v26 + 2));
    if (v32)
    {
      v26 += 2;
      goto LABEL_11;
    }
    int64_t v23 = v26 + 3;
    if (v26 + 3 < v31)
    {
      unint64_t v32 = *(void *)(v18 + 8 * v23);
      if (v32)
      {
LABEL_14:
        int64_t v26 = v23;
LABEL_11:
        uint64_t v24 = (v32 - 1) & v32;
        unint64_t v25 = __clz(__rbit64(v32)) + (v26 << 6);
        goto LABEL_7;
      }
      v26 += 4;
      if (v26 >= v31)
      {
LABEL_26:
        uint64_t v24 = 0;
        uint64_t v30 = 1;
        int64_t v26 = v23;
        goto LABEL_27;
      }
      unint64_t v32 = *(void *)(v18 + 8 * v26);
      if (v32) {
        goto LABEL_11;
      }
      int64_t v26 = v31 - 1;
      uint64_t v33 = v54 + 6;
      while (v31 != v33)
      {
        unint64_t v32 = *(void *)(v18 + 8 * v33++);
        if (v32)
        {
          int64_t v26 = v33 - 1;
          goto LABEL_11;
        }
      }
LABEL_37:
      uint64_t v24 = 0;
      uint64_t v30 = 1;
      goto LABEL_27;
    }
    uint64_t v24 = 0;
    uint64_t v30 = 1;
    v26 += 2;
LABEL_27:
    uint64_t v29 = (uint64_t)v59;
  }
  uint64_t v54 = (unint64_t)v22 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v38 = v34;
  uint64_t v39 = ~v36;
  uint64_t v40 = *(void *)(v60 + 72);
  uint64_t v41 = *(void (**)(char *, unint64_t, uint64_t))(v60 + 16);
  while (1)
  {
    v41(v13, *(void *)(v38 + 48) + v40 * v37, v8);
    sub_10103567C((unint64_t *)&qword_10167BDC0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    char v42 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v43 = *v22;
    (*v22)(v13, v8);
    if (v42) {
      break;
    }
    unint64_t v37 = (v37 + 1) & v39;
    if (((*(void *)&v62[(v37 >> 3) & 0xFFFFFFFFFFFFFF8] >> v37) & 1) == 0)
    {
      uint64_t v9 = v60;
      goto LABEL_35;
    }
  }
  uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v43)(v63, v8);
  char v46 = *(unsigned char *)(v38 + 32);
  unint64_t v47 = (unint64_t)((1 << v46) + 63) >> 6;
  size_t v48 = 8 * v47;
  if ((v46 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe, v45);
    memcpy((char *)&v53 - ((v48 + 15) & 0x3FFFFFFFFFFFFFF0), v62, v48);
    uint64_t v49 = sub_10102EFDC((unint64_t *)((char *)&v53 - ((v48 + 15) & 0x3FFFFFFFFFFFFFF0)), v47, v38, v37, &v64);
    swift_release();
    sub_10052E1EC();
    return v49;
  }
  else
  {
    uint64_t v51 = (void *)swift_slowAlloc();
    memcpy(v51, v62, v48);
    uint64_t v52 = sub_10102EFDC((unint64_t *)v51, v47, v38, v37, &v64);
    swift_release();
    sub_10052E1EC();
    swift_slowDealloc();
    return v52;
  }
}

void *sub_10102B0D8(uint64_t a1, uint64_t a2)
{
  uint64_t v59 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v59 - 8);
  uint64_t v6 = __chkstk_darwin(v59, v5);
  uint64_t v54 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v58 = (char *)v52 - v9;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLTransactableHashableWrapper();
    sub_10103567C((unint64_t *)&qword_10169A0A0, v10, (void (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper);
    Set.Iterator.init(_cocoa:)();
    a1 = v67;
    uint64_t v11 = v68;
    uint64_t v12 = v69;
    int64_t v13 = v70;
    unint64_t v14 = v71;
  }
  else
  {
    uint64_t v15 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v11 = a1 + 56;
    uint64_t v12 = ~v15;
    uint64_t v16 = -v15;
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v14 = v17 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v13 = 0;
  }
  uint64_t v62 = a1;
  uint64_t v63 = v11;
  uint64_t v64 = v12;
  int64_t v65 = v13;
  unint64_t v66 = v14;
  char v57 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v56 = (char *)(a2 + 56);
  v52[1] = (char *)&type metadata for Swift.AnyObject + 8;
  while (1)
  {
    if ((a1 & 0x8000000000000000) == 0)
    {
      if (v14)
      {
        uint64_t v18 = (v14 - 1) & v14;
        unint64_t v19 = __clz(__rbit64(v14)) | (v13 << 6);
LABEL_14:
        uint64_t v20 = *(void *)(*(void *)(a1 + 48) + 8 * v19);
        swift_retain();
        goto LABEL_15;
      }
      int64_t v39 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        __break(1u);
      }
      int64_t v40 = (unint64_t)(v12 + 64) >> 6;
      if (v39 >= v40)
      {
        uint64_t v20 = 0;
        uint64_t v18 = 0;
        goto LABEL_15;
      }
      unint64_t v41 = *(void *)(v63 + 8 * v39);
      if (v41)
      {
LABEL_27:
        uint64_t v18 = (v41 - 1) & v41;
        unint64_t v19 = __clz(__rbit64(v41)) + (v39 << 6);
        int64_t v13 = v39;
        goto LABEL_14;
      }
      int64_t v42 = v13 + 2;
      if (v13 + 2 >= v40) {
        goto LABEL_43;
      }
      unint64_t v41 = *(void *)(v63 + 8 * v42);
      if (v41)
      {
LABEL_31:
        int64_t v39 = v42;
        goto LABEL_27;
      }
      if (v13 + 3 < v40)
      {
        unint64_t v41 = *(void *)(v63 + 8 * (v13 + 3));
        if (v41)
        {
          int64_t v39 = v13 + 3;
          goto LABEL_27;
        }
        int64_t v42 = v13 + 4;
        if (v13 + 4 >= v40)
        {
          uint64_t v20 = 0;
          uint64_t v18 = 0;
          v13 += 3;
LABEL_15:
          int64_t v65 = v13;
          unint64_t v66 = v18;
          if (!v20) {
            goto LABEL_52;
          }
          goto LABEL_19;
        }
        unint64_t v41 = *(void *)(v63 + 8 * v42);
        if (v41) {
          goto LABEL_31;
        }
        int64_t v39 = v13 + 5;
        if (v13 + 5 < v40)
        {
          unint64_t v41 = *(void *)(v63 + 8 * v39);
          if (v41) {
            goto LABEL_27;
          }
          int64_t v39 = v40 - 1;
          int64_t v43 = v13 + 6;
          while (v40 != v43)
          {
            unint64_t v41 = *(void *)(v63 + 8 * v43++);
            if (v41)
            {
              int64_t v39 = v43 - 1;
              goto LABEL_27;
            }
          }
LABEL_43:
          uint64_t v20 = 0;
          uint64_t v18 = 0;
          int64_t v13 = v39;
          goto LABEL_15;
        }
      }
      uint64_t v20 = 0;
      uint64_t v18 = 0;
      int64_t v13 = v42;
      goto LABEL_15;
    }
    uint64_t v21 = __CocoaSet.Iterator.next()();
    if (!v21
      || (uint64_t v60 = v21,
          type metadata accessor for CRLTransactableHashableWrapper(),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          uint64_t v20 = v61,
          swift_unknownObjectRelease(),
          !v20))
    {
LABEL_52:
      sub_10052E1EC();
      return (void *)a2;
    }
LABEL_19:
    Hasher.init(_seed:)();
    uint64_t v22 = *(void *)(v20 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v24 = v58;
    (*(void (**)(uint64_t, uint64_t))(v22 + 32))(ObjectType, v22);
    sub_10103567C((unint64_t *)&qword_1016770E0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v25 = v59;
    dispatch thunk of Hashable.hash(into:)();
    uint64_t v55 = *v57;
    v55(v24, v25);
    Swift::Int v26 = Hasher._finalize()();
    uint64_t v27 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v28 = v26 & ~v27;
    if ((*(void *)&v56[(v28 >> 3) & 0xFFFFFFFFFFFFFF8] >> v28)) {
      break;
    }
LABEL_10:
    swift_release();
    a1 = v62;
    uint64_t v12 = v64;
    int64_t v13 = v65;
    unint64_t v14 = v66;
  }
  uint64_t v53 = ~v27;
  while (1)
  {
    uint64_t v29 = a2;
    uint64_t v30 = *(void *)(*(void *)(*(void *)(a2 + 48) + 8 * v28) + 24);
    uint64_t v31 = swift_getObjectType();
    unint64_t v32 = *(void (**)(uint64_t, uint64_t))(v30 + 32);
    swift_retain();
    uint64_t v33 = v58;
    v32(v31, v30);
    uint64_t v34 = *(void *)(v20 + 24);
    uint64_t v35 = swift_getObjectType();
    uint64_t v36 = v54;
    (*(void (**)(uint64_t, uint64_t))(v34 + 32))(v35, v34);
    LOBYTE(v34) = static UUID.== infix(_:_:)();
    uint64_t v37 = v59;
    uint64_t v38 = v55;
    v55(v36, v59);
    v38(v33, v37);
    swift_release();
    if (v34) {
      break;
    }
    unint64_t v28 = (v28 + 1) & v53;
    a2 = v29;
    if (((*(void *)&v56[(v28 >> 3) & 0xFFFFFFFFFFFFFF8] >> v28) & 1) == 0) {
      goto LABEL_10;
    }
  }
  uint64_t isStackAllocationSafe = swift_release();
  char v46 = *(unsigned char *)(v29 + 32);
  unint64_t v47 = (unint64_t)((1 << v46) + 63) >> 6;
  size_t v48 = 8 * v47;
  if ((v46 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe, v45);
    memcpy((char *)v52 - ((v48 + 15) & 0x3FFFFFFFFFFFFFF0), v56, v48);
    uint64_t v49 = sub_10102F540((void *)((char *)v52 - ((v48 + 15) & 0x3FFFFFFFFFFFFFF0)), v47, v29, v28, &v62);
    swift_release();
    sub_10052E1EC();
  }
  else
  {
    uint64_t v50 = (void *)swift_slowAlloc();
    memcpy(v50, v56, v48);
    uint64_t v49 = sub_10102F540((unint64_t *)v50, v47, v29, v28, &v62);
    swift_release();
    sub_10052E1EC();
    swift_slowDealloc();
  }
  return v49;
}

unint64_t *sub_10102B858(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v38 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v36 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v37 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v37) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v38 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v37) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v38 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v37) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v38 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v37) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v38 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v37)
                {
LABEL_47:
                  sub_10052E1EC();
                  return (unint64_t *)v2;
                }
                unint64_t v13 = *(void *)(v38 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v37) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v38 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      Swift::Int v19 = Hasher._finalize()();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    int64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v39 = a1;
      uint64_t v40 = v38;
      uint64_t v41 = v36;
      int64_t v42 = v9;
      unint64_t v43 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        Swift::Int v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
      uint64_t v39 = a1;
      uint64_t v40 = v38;
      uint64_t v41 = v36;
      int64_t v42 = v9;
      unint64_t v43 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v30 = *(unsigned char *)(v2 + 32);
    unint64_t v31 = (unint64_t)((1 << v30) + 63) >> 6;
    size_t v32 = 8 * v31;
    if ((v30 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe, v29);
      memcpy((char *)&v36 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v32);
      uint64_t v33 = sub_101030678((unint64_t *)((char *)&v36 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0)), v31, v2, v21, &v39);
      swift_release();
      sub_10052E1EC();
    }
    else
    {
      uint64_t v34 = (void *)swift_slowAlloc();
      memcpy(v34, (const void *)(v2 + 56), v32);
      uint64_t v33 = sub_101030678((unint64_t *)v34, v31, v2, v21, &v39);
      swift_release();
      sub_10052E1EC();
      swift_slowDealloc();
    }
    return v33;
  }
  else
  {
    swift_release();
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

void *sub_10102BCC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v4 - 8, v5);
  unint64_t v7 = (char *)v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v8 = *(void *)(v74 - 8);
  __chkstk_darwin(v74, v9);
  unint64_t v11 = (char *)v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  int64_t v15 = (char *)v69 - v14;
  __chkstk_darwin(v16, v17);
  Swift::Int v19 = (char *)v69 - v18;
  __chkstk_darwin(v20, v21);
  int64_t v23 = (char *)v69 - v22;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  BOOL v73 = v7;
  uint64_t v24 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v25 = ~v24;
  uint64_t v27 = a1 + 56;
  uint64_t v26 = *(void *)(a1 + 56);
  uint64_t v28 = -v24;
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  else {
    uint64_t v29 = -1;
  }
  unint64_t v30 = v29 & v26;
  uint64_t v79 = a1;
  uint64_t v80 = a1 + 56;
  uint64_t v81 = v25;
  int64_t v82 = 0;
  unint64_t v83 = v29 & v26;
  uint64_t v72 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  unint64_t v71 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  uint64_t v78 = (char *)(a2 + 56);
  swift_bridgeObjectRetain();
  int64_t v31 = 0;
  uint64_t v32 = a1;
  uint64_t v33 = v25;
  uint64_t v77 = a2;
  for (i = v8; ; uint64_t v8 = i)
  {
    v69[1] = v30;
    int64_t v70 = v31;
    if (v30)
    {
      uint64_t v34 = v27;
      uint64_t v35 = v32;
      uint64_t v76 = (v30 - 1) & v30;
      unint64_t v36 = __clz(__rbit64(v30)) | (v31 << 6);
      int64_t v37 = v31;
      uint64_t v38 = (uint64_t)v73;
LABEL_9:
      sub_100540CFC(*(void *)(v35 + 48) + *(void *)(v8 + 72) * v36, v38);
      uint64_t v39 = 0;
      goto LABEL_29;
    }
    int64_t v37 = v31 + 1;
    uint64_t v38 = (uint64_t)v73;
    if (__OFADD__(v31, 1)) {
      __break(1u);
    }
    int64_t v40 = (unint64_t)(v33 + 64) >> 6;
    if (v37 >= v40)
    {
LABEL_28:
      uint64_t v34 = v27;
      uint64_t v35 = v32;
      uint64_t v76 = 0;
      uint64_t v39 = 1;
      int64_t v37 = v31;
      goto LABEL_29;
    }
    unint64_t v41 = *(void *)(v27 + 8 * v37);
    if (v41) {
      goto LABEL_13;
    }
    v31 += 2;
    if (v37 + 1 >= v40) {
      goto LABEL_41;
    }
    unint64_t v41 = *(void *)(v27 + 8 * v31);
    if (v41) {
      goto LABEL_16;
    }
    if (v37 + 2 >= v40) {
      goto LABEL_28;
    }
    unint64_t v41 = *(void *)(v27 + 8 * (v37 + 2));
    if (v41)
    {
      v37 += 2;
      uint64_t v8 = i;
      goto LABEL_13;
    }
    int64_t v31 = v37 + 3;
    if (v37 + 3 < v40)
    {
      unint64_t v41 = *(void *)(v27 + 8 * v31);
      if (v41)
      {
LABEL_16:
        int64_t v37 = v31;
        uint64_t v8 = i;
LABEL_13:
        uint64_t v34 = v27;
        uint64_t v35 = v32;
        uint64_t v76 = (v41 - 1) & v41;
        unint64_t v36 = __clz(__rbit64(v41)) + (v37 << 6);
        goto LABEL_9;
      }
      v37 += 4;
      if (v37 >= v40) {
        goto LABEL_28;
      }
      unint64_t v41 = *(void *)(v27 + 8 * v37);
      uint64_t v8 = i;
      if (v41) {
        goto LABEL_13;
      }
      int64_t v37 = v40 - 1;
      uint64_t v42 = v70 + 6;
      while (v40 != v42)
      {
        unint64_t v41 = *(void *)(v27 + 8 * v42++);
        if (v41)
        {
          int64_t v37 = v42 - 1;
          goto LABEL_13;
        }
      }
LABEL_41:
      uint64_t v34 = v27;
      uint64_t v35 = v32;
      uint64_t v76 = 0;
      uint64_t v39 = 1;
      goto LABEL_29;
    }
    uint64_t v34 = v27;
    uint64_t v35 = v32;
    uint64_t v76 = 0;
    uint64_t v39 = 1;
    v37 += 2;
LABEL_29:
    uint64_t v43 = v74;
    (*v72)(v38, v39, 1, v74);
    uint64_t v79 = v35;
    uint64_t v80 = v34;
    uint64_t v81 = v33;
    int64_t v82 = v37;
    unint64_t v83 = v76;
    if ((*v71)(v38, 1, v43) == 1)
    {
      sub_10052E1EC();
      sub_100522F00(v38, &qword_101672C30);
      return (void *)v77;
    }
    sub_1005394E4(v38, (uint64_t)v23);
    uint64_t v44 = v77;
    Hasher.init(_seed:)();
    type metadata accessor for UUID();
    sub_10103567C((unint64_t *)&qword_1016770E0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    dispatch thunk of Hashable.hash(into:)();
    uint64_t v45 = type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v46 = Hasher._finalize()();
    uint64_t v47 = -1 << *(unsigned char *)(v44 + 32);
    unint64_t v48 = v46 & ~v47;
    if ((*(void *)&v78[(v48 >> 3) & 0xFFFFFFFFFFFFFF8] >> v48)) {
      break;
    }
LABEL_6:
    sub_10103561C((uint64_t)v23, type metadata accessor for CRLBoardIdentifier);
    int64_t v31 = v82;
    unint64_t v30 = v83;
    uint64_t v32 = v79;
    uint64_t v27 = v80;
    uint64_t v33 = v81;
  }
  uint64_t v49 = ~v47;
  uint64_t v50 = *(void *)(i + 72);
  while (1)
  {
    sub_100540CFC(*(void *)(v44 + 48) + v50 * v48, (uint64_t)v19);
    char v51 = static UUID.== infix(_:_:)();
    sub_100540CFC((uint64_t)v19, (uint64_t)v15);
    sub_100540CFC((uint64_t)v23, (uint64_t)v11);
    if ((v51 & 1) == 0)
    {
      sub_10103561C((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
      sub_10103561C((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
      sub_10103561C((uint64_t)v19, type metadata accessor for CRLBoardIdentifier);
      goto LABEL_33;
    }
    uint64_t v52 = *(int *)(v45 + 20);
    uint64_t v53 = *(void *)&v15[v52];
    uint64_t v54 = *(void *)&v15[v52 + 8];
    uint64_t v55 = &v11[v52];
    if (v53 == *(void *)v55 && v54 == *((void *)v55 + 1)) {
      break;
    }
    char v57 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_10103561C((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
    sub_10103561C((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
    uint64_t v44 = v77;
    sub_10103561C((uint64_t)v19, type metadata accessor for CRLBoardIdentifier);
    if (v57) {
      goto LABEL_45;
    }
LABEL_33:
    unint64_t v48 = (v48 + 1) & v49;
    if (((*(void *)&v78[(v48 >> 3) & 0xFFFFFFFFFFFFFF8] >> v48) & 1) == 0) {
      goto LABEL_6;
    }
  }
  sub_10103561C((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
  sub_10103561C((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
  sub_10103561C((uint64_t)v19, type metadata accessor for CRLBoardIdentifier);
LABEL_45:
  uint64_t isStackAllocationSafe = sub_10103561C((uint64_t)v23, type metadata accessor for CRLBoardIdentifier);
  char v61 = *(unsigned char *)(v44 + 32);
  unint64_t v62 = (unint64_t)((1 << v61) + 63) >> 6;
  size_t v63 = 8 * v62;
  if ((v61 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe, v60);
    memcpy((char *)v69 - ((v63 + 15) & 0x3FFFFFFFFFFFFFF0), v78, v63);
    sub_101030004((void *)((char *)v69 - ((v63 + 15) & 0x3FFFFFFFFFFFFFF0)), v62, v77, v48, &v79);
    uint64_t v65 = v64;
    swift_release();
    sub_10052E1EC();
    return (void *)v65;
  }
  else
  {
    unint64_t v66 = (void *)swift_slowAlloc();
    memcpy(v66, v78, v63);
    sub_101030004((unint64_t *)v66, v62, v77, v48, &v79);
    uint64_t v68 = v67;
    swift_release();
    sub_10052E1EC();
    swift_slowDealloc();
    return (void *)v68;
  }
}

void *sub_10102C4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v4 - 8, v5);
  unint64_t v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v14);
  size_t v63 = (char *)&v53 - v15;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  uint64_t v16 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v17 = ~v16;
  uint64_t v18 = a1 + 64;
  uint64_t v19 = -v16;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & *(void *)(a1 + 64);
  uint64_t v64 = a1;
  uint64_t v65 = a1 + 64;
  uint64_t v58 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v59 = v7;
  uint64_t v66 = v17;
  uint64_t v67 = 0;
  unint64_t v68 = v21;
  char v57 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  uint64_t v55 = (void (**)(char *, uint64_t, uint64_t))(v9 + 32);
  uint64_t v61 = v9 + 16;
  unint64_t v62 = (char *)(a2 + 56);
  uint64_t v22 = (void (**)(char *, uint64_t))(v9 + 8);
  swift_bridgeObjectRetain();
  int64_t v23 = 0;
  uint64_t v60 = v9;
  uint64_t v56 = a2;
  uint64_t v54 = 0;
  if (!v21) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v24 = (v21 - 1) & v21;
  unint64_t v25 = __clz(__rbit64(v21)) | (v23 << 6);
  int64_t v26 = v23;
LABEL_7:
  unint64_t v27 = *(void *)(a1 + 48) + *(void *)(v9 + 72) * v25;
  uint64_t v28 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
  uint64_t v29 = (uint64_t)v59;
  v28(v59, v27, v8);
  uint64_t v30 = 0;
  while (1)
  {
    (*v58)(v29, v30, 1, v8);
    uint64_t v64 = a1;
    uint64_t v65 = v18;
    uint64_t v66 = v17;
    uint64_t v67 = v26;
    unint64_t v68 = v24;
    if ((*v57)(v29, 1, v8) == 1)
    {
      sub_10052E1EC();
      sub_100522F00(v29, (uint64_t *)&unk_101674520);
      return (void *)v56;
    }
    (*v55)(v63, v29, v8);
    uint64_t v34 = v56;
    sub_10103567C((unint64_t *)&qword_1016770E0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v35 = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v36 = -1 << *(unsigned char *)(v34 + 32);
    unint64_t v37 = v35 & ~v36;
    if ((*(void *)&v62[(v37 >> 3) & 0xFFFFFFFFFFFFFF8] >> v37)) {
      break;
    }
    uint64_t v43 = *v22;
    uint64_t v9 = v60;
LABEL_35:
    v43(v63, v8);
    int64_t v23 = v67;
    unint64_t v21 = v68;
    a1 = v64;
    uint64_t v18 = v65;
    uint64_t v17 = v66;
    uint64_t v54 = v67;
    if (v68) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v26 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      __break(1u);
    }
    int64_t v31 = (unint64_t)(v17 + 64) >> 6;
    if (v26 >= v31) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v18 + 8 * v26);
    if (v32) {
      goto LABEL_11;
    }
    v23 += 2;
    if (v26 + 1 >= v31) {
      goto LABEL_37;
    }
    unint64_t v32 = *(void *)(v18 + 8 * v23);
    if (v32) {
      goto LABEL_14;
    }
    if (v26 + 2 >= v31) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v18 + 8 * (v26 + 2));
    if (v32)
    {
      v26 += 2;
      goto LABEL_11;
    }
    int64_t v23 = v26 + 3;
    if (v26 + 3 < v31)
    {
      unint64_t v32 = *(void *)(v18 + 8 * v23);
      if (v32)
      {
LABEL_14:
        int64_t v26 = v23;
LABEL_11:
        uint64_t v24 = (v32 - 1) & v32;
        unint64_t v25 = __clz(__rbit64(v32)) + (v26 << 6);
        goto LABEL_7;
      }
      v26 += 4;
      if (v26 >= v31)
      {
LABEL_26:
        uint64_t v24 = 0;
        uint64_t v30 = 1;
        int64_t v26 = v23;
        goto LABEL_27;
      }
      unint64_t v32 = *(void *)(v18 + 8 * v26);
      if (v32) {
        goto LABEL_11;
      }
      int64_t v26 = v31 - 1;
      uint64_t v33 = v54 + 6;
      while (v31 != v33)
      {
        unint64_t v32 = *(void *)(v18 + 8 * v33++);
        if (v32)
        {
          int64_t v26 = v33 - 1;
          goto LABEL_11;
        }
      }
LABEL_37:
      uint64_t v24 = 0;
      uint64_t v30 = 1;
      goto LABEL_27;
    }
    uint64_t v24 = 0;
    uint64_t v30 = 1;
    v26 += 2;
LABEL_27:
    uint64_t v29 = (uint64_t)v59;
  }
  uint64_t v54 = (unint64_t)v22 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v38 = v34;
  uint64_t v39 = ~v36;
  uint64_t v40 = *(void *)(v60 + 72);
  unint64_t v41 = *(void (**)(char *, unint64_t, uint64_t))(v60 + 16);
  while (1)
  {
    v41(v13, *(void *)(v38 + 48) + v40 * v37, v8);
    sub_10103567C((unint64_t *)&qword_10167BDC0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    char v42 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v43 = *v22;
    (*v22)(v13, v8);
    if (v42) {
      break;
    }
    unint64_t v37 = (v37 + 1) & v39;
    if (((*(void *)&v62[(v37 >> 3) & 0xFFFFFFFFFFFFFF8] >> v37) & 1) == 0)
    {
      uint64_t v9 = v60;
      goto LABEL_35;
    }
  }
  uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v43)(v63, v8);
  char v46 = *(unsigned char *)(v38 + 32);
  unint64_t v47 = (unint64_t)((1 << v46) + 63) >> 6;
  size_t v48 = 8 * v47;
  if ((v46 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe, v45);
    memcpy((char *)&v53 - ((v48 + 15) & 0x3FFFFFFFFFFFFFF0), v62, v48);
    uint64_t v49 = sub_10102FA78((unint64_t *)((char *)&v53 - ((v48 + 15) & 0x3FFFFFFFFFFFFFF0)), v47, v38, v37, &v64);
    swift_release();
    sub_10052E1EC();
    return v49;
  }
  else
  {
    char v51 = (void *)swift_slowAlloc();
    memcpy(v51, v62, v48);
    uint64_t v52 = sub_10102FA78((unint64_t *)v51, v47, v38, v37, &v64);
    swift_release();
    sub_10052E1EC();
    swift_slowDealloc();
    return v52;
  }
}

void *sub_10102CBBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10053BBC0();
    sub_10103567C((unint64_t *)&qword_101674208, 255, (void (*)(uint64_t))sub_10053BBC0);
    Set.Iterator.init(_cocoa:)();
    uint64_t v3 = v47;
    uint64_t v4 = v48;
    uint64_t v6 = v49;
    int64_t v5 = v50;
    unint64_t v7 = v51;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v4 = a1 + 56;
    uint64_t v6 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v5 = 0;
  }
  uint64_t v42 = v3;
  uint64_t v43 = v4;
  uint64_t v44 = v6;
  int64_t v45 = v5;
  unint64_t v46 = v7;
  uint64_t v11 = v2 + 56;
  while (1)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v7)
      {
        uint64_t v12 = (v7 - 1) & v7;
        unint64_t v13 = __clz(__rbit64(v7)) | (v5 << 6);
LABEL_14:
        uint64_t v14 = *(void **)(*(void *)(v3 + 48) + 8 * v13);
        id v15 = v14;
        goto LABEL_15;
      }
      int64_t v25 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        __break(1u);
      }
      int64_t v26 = (unint64_t)(v6 + 64) >> 6;
      if (v25 >= v26)
      {
        uint64_t v14 = 0;
        uint64_t v12 = 0;
        goto LABEL_15;
      }
      unint64_t v27 = *(void *)(v43 + 8 * v25);
      if (v27)
      {
LABEL_28:
        uint64_t v12 = (v27 - 1) & v27;
        unint64_t v13 = __clz(__rbit64(v27)) + (v25 << 6);
        int64_t v5 = v25;
        goto LABEL_14;
      }
      int64_t v28 = v5 + 2;
      if (v5 + 2 >= v26) {
        goto LABEL_44;
      }
      unint64_t v27 = *(void *)(v43 + 8 * v28);
      if (v27)
      {
LABEL_32:
        int64_t v25 = v28;
        goto LABEL_28;
      }
      if (v5 + 3 < v26)
      {
        unint64_t v27 = *(void *)(v43 + 8 * (v5 + 3));
        if (v27)
        {
          int64_t v25 = v5 + 3;
          goto LABEL_28;
        }
        int64_t v28 = v5 + 4;
        if (v5 + 4 >= v26)
        {
          uint64_t v14 = 0;
          uint64_t v12 = 0;
          v5 += 3;
LABEL_15:
          int64_t v45 = v5;
          unint64_t v46 = v12;
          if (!v14) {
            goto LABEL_53;
          }
          goto LABEL_19;
        }
        unint64_t v27 = *(void *)(v43 + 8 * v28);
        if (v27) {
          goto LABEL_32;
        }
        int64_t v25 = v5 + 5;
        if (v5 + 5 < v26)
        {
          unint64_t v27 = *(void *)(v43 + 8 * v25);
          if (v27) {
            goto LABEL_28;
          }
          int64_t v25 = v26 - 1;
          int64_t v29 = v5 + 6;
          while (v26 != v29)
          {
            unint64_t v27 = *(void *)(v43 + 8 * v29++);
            if (v27)
            {
              int64_t v25 = v29 - 1;
              goto LABEL_28;
            }
          }
LABEL_44:
          uint64_t v14 = 0;
          uint64_t v12 = 0;
          int64_t v5 = v25;
          goto LABEL_15;
        }
      }
      uint64_t v14 = 0;
      uint64_t v12 = 0;
      int64_t v5 = v28;
      goto LABEL_15;
    }
    uint64_t v16 = __CocoaSet.Iterator.next()();
    if (!v16
      || (uint64_t v40 = v16,
          sub_10053BBC0(),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          uint64_t v14 = v41,
          swift_unknownObjectRelease(),
          !v41))
    {
LABEL_53:
      sub_10052E1EC();
      return (void *)v2;
    }
LABEL_19:
    Swift::Int v17 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
    uint64_t v18 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v19 = v17 & ~v18;
    if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
      goto LABEL_10;
    }
    sub_10053BBC0();
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
    char v21 = static NSObject.== infix(_:_:)();

    if (v21) {
      break;
    }
    uint64_t v22 = ~v18;
    while (1)
    {
      unint64_t v19 = (v19 + 1) & v22;
      if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        break;
      }
      id v23 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
      char v24 = static NSObject.== infix(_:_:)();

      if (v24) {
        goto LABEL_47;
      }
    }
LABEL_10:

    uint64_t v3 = v42;
    uint64_t v6 = v44;
    int64_t v5 = v45;
    unint64_t v7 = v46;
  }
LABEL_47:

  char v32 = *(unsigned char *)(v2 + 32);
  unint64_t v33 = (unint64_t)((1 << v32) + 63) >> 6;
  size_t v34 = 8 * v33;
  if ((v32 & 0x3Fu) < 0xE
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe, v31);
    memcpy((char *)&v40 - ((v34 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v34);
    sub_101030EBC((uint64_t)&v40 - ((v34 + 15) & 0x3FFFFFFFFFFFFFF0), v33, v2, v19, &v42, (void (*)(void))sub_10053BBC0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10052C730);
    uint64_t v36 = v35;
    swift_release();
    sub_10052E1EC();
  }
  else
  {
    unint64_t v37 = (void *)swift_slowAlloc();
    memcpy(v37, (const void *)(v2 + 56), v34);
    sub_101030EBC((uint64_t)v37, v33, v2, v19, &v42, (void (*)(void))sub_10053BBC0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10052C730);
    uint64_t v36 = v38;
    swift_release();
    sub_10052E1EC();
    swift_slowDealloc();
  }
  return (void *)v36;
}

void *sub_10102D150(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v4 - 8, v5);
  unint64_t v7 = (char *)v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v8 = *(void *)(v74 - 8);
  __chkstk_darwin(v74, v9);
  uint64_t v11 = (char *)v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  id v15 = (char *)v69 - v14;
  __chkstk_darwin(v16, v17);
  unint64_t v19 = (char *)v69 - v18;
  __chkstk_darwin(v20, v21);
  id v23 = (char *)v69 - v22;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  BOOL v73 = v7;
  uint64_t v24 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v25 = ~v24;
  uint64_t v27 = a1 + 64;
  uint64_t v26 = *(void *)(a1 + 64);
  uint64_t v28 = -v24;
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  else {
    uint64_t v29 = -1;
  }
  unint64_t v30 = v29 & v26;
  uint64_t v79 = a1;
  uint64_t v80 = a1 + 64;
  uint64_t v81 = v25;
  int64_t v82 = 0;
  unint64_t v83 = v29 & v26;
  uint64_t v72 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  unint64_t v71 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  uint64_t v78 = (char *)(a2 + 56);
  swift_bridgeObjectRetain();
  int64_t v31 = 0;
  uint64_t v32 = a1;
  uint64_t v33 = v25;
  uint64_t v77 = a2;
  for (i = v8; ; uint64_t v8 = i)
  {
    v69[1] = v30;
    int64_t v70 = v31;
    if (v30)
    {
      uint64_t v34 = v27;
      uint64_t v35 = v32;
      uint64_t v76 = (v30 - 1) & v30;
      unint64_t v36 = __clz(__rbit64(v30)) | (v31 << 6);
      int64_t v37 = v31;
      uint64_t v38 = (uint64_t)v73;
LABEL_9:
      sub_100540CFC(*(void *)(v35 + 48) + *(void *)(v8 + 72) * v36, v38);
      uint64_t v39 = 0;
      goto LABEL_29;
    }
    int64_t v37 = v31 + 1;
    uint64_t v38 = (uint64_t)v73;
    if (__OFADD__(v31, 1)) {
      __break(1u);
    }
    int64_t v40 = (unint64_t)(v33 + 64) >> 6;
    if (v37 >= v40)
    {
LABEL_28:
      uint64_t v34 = v27;
      uint64_t v35 = v32;
      uint64_t v76 = 0;
      uint64_t v39 = 1;
      int64_t v37 = v31;
      goto LABEL_29;
    }
    unint64_t v41 = *(void *)(v27 + 8 * v37);
    if (v41) {
      goto LABEL_13;
    }
    v31 += 2;
    if (v37 + 1 >= v40) {
      goto LABEL_41;
    }
    unint64_t v41 = *(void *)(v27 + 8 * v31);
    if (v41) {
      goto LABEL_16;
    }
    if (v37 + 2 >= v40) {
      goto LABEL_28;
    }
    unint64_t v41 = *(void *)(v27 + 8 * (v37 + 2));
    if (v41)
    {
      v37 += 2;
      uint64_t v8 = i;
      goto LABEL_13;
    }
    int64_t v31 = v37 + 3;
    if (v37 + 3 < v40)
    {
      unint64_t v41 = *(void *)(v27 + 8 * v31);
      if (v41)
      {
LABEL_16:
        int64_t v37 = v31;
        uint64_t v8 = i;
LABEL_13:
        uint64_t v34 = v27;
        uint64_t v35 = v32;
        uint64_t v76 = (v41 - 1) & v41;
        unint64_t v36 = __clz(__rbit64(v41)) + (v37 << 6);
        goto LABEL_9;
      }
      v37 += 4;
      if (v37 >= v40) {
        goto LABEL_28;
      }
      unint64_t v41 = *(void *)(v27 + 8 * v37);
      uint64_t v8 = i;
      if (v41) {
        goto LABEL_13;
      }
      int64_t v37 = v40 - 1;
      uint64_t v42 = v70 + 6;
      while (v40 != v42)
      {
        unint64_t v41 = *(void *)(v27 + 8 * v42++);
        if (v41)
        {
          int64_t v37 = v42 - 1;
          goto LABEL_13;
        }
      }
LABEL_41:
      uint64_t v34 = v27;
      uint64_t v35 = v32;
      uint64_t v76 = 0;
      uint64_t v39 = 1;
      goto LABEL_29;
    }
    uint64_t v34 = v27;
    uint64_t v35 = v32;
    uint64_t v76 = 0;
    uint64_t v39 = 1;
    v37 += 2;
LABEL_29:
    uint64_t v43 = v74;
    (*v72)(v38, v39, 1, v74);
    uint64_t v79 = v35;
    uint64_t v80 = v34;
    uint64_t v81 = v33;
    int64_t v82 = v37;
    unint64_t v83 = v76;
    if ((*v71)(v38, 1, v43) == 1)
    {
      sub_10052E1EC();
      sub_100522F00(v38, &qword_101672C30);
      return (void *)v77;
    }
    sub_1005394E4(v38, (uint64_t)v23);
    uint64_t v44 = v77;
    Hasher.init(_seed:)();
    type metadata accessor for UUID();
    sub_10103567C((unint64_t *)&qword_1016770E0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    dispatch thunk of Hashable.hash(into:)();
    uint64_t v45 = type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v46 = Hasher._finalize()();
    uint64_t v47 = -1 << *(unsigned char *)(v44 + 32);
    unint64_t v48 = v46 & ~v47;
    if ((*(void *)&v78[(v48 >> 3) & 0xFFFFFFFFFFFFFF8] >> v48)) {
      break;
    }
LABEL_6:
    sub_10103561C((uint64_t)v23, type metadata accessor for CRLBoardIdentifier);
    int64_t v31 = v82;
    unint64_t v30 = v83;
    uint64_t v32 = v79;
    uint64_t v27 = v80;
    uint64_t v33 = v81;
  }
  uint64_t v49 = ~v47;
  uint64_t v50 = *(void *)(i + 72);
  while (1)
  {
    sub_100540CFC(*(void *)(v44 + 48) + v50 * v48, (uint64_t)v19);
    char v51 = static UUID.== infix(_:_:)();
    sub_100540CFC((uint64_t)v19, (uint64_t)v15);
    sub_100540CFC((uint64_t)v23, (uint64_t)v11);
    if ((v51 & 1) == 0)
    {
      sub_10103561C((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
      sub_10103561C((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
      sub_10103561C((uint64_t)v19, type metadata accessor for CRLBoardIdentifier);
      goto LABEL_33;
    }
    uint64_t v52 = *(int *)(v45 + 20);
    uint64_t v53 = *(void *)&v15[v52];
    uint64_t v54 = *(void *)&v15[v52 + 8];
    uint64_t v55 = &v11[v52];
    if (v53 == *(void *)v55 && v54 == *((void *)v55 + 1)) {
      break;
    }
    char v57 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_10103561C((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
    sub_10103561C((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
    uint64_t v44 = v77;
    sub_10103561C((uint64_t)v19, type metadata accessor for CRLBoardIdentifier);
    if (v57) {
      goto LABEL_45;
    }
LABEL_33:
    unint64_t v48 = (v48 + 1) & v49;
    if (((*(void *)&v78[(v48 >> 3) & 0xFFFFFFFFFFFFFF8] >> v48) & 1) == 0) {
      goto LABEL_6;
    }
  }
  sub_10103561C((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
  sub_10103561C((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
  sub_10103561C((uint64_t)v19, type metadata accessor for CRLBoardIdentifier);
LABEL_45:
  uint64_t isStackAllocationSafe = sub_10103561C((uint64_t)v23, type metadata accessor for CRLBoardIdentifier);
  char v61 = *(unsigned char *)(v44 + 32);
  unint64_t v62 = (unint64_t)((1 << v61) + 63) >> 6;
  size_t v63 = 8 * v62;
  if ((v61 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe, v60);
    memcpy((char *)v69 - ((v63 + 15) & 0x3FFFFFFFFFFFFFF0), v78, v63);
    sub_101030004((void *)((char *)v69 - ((v63 + 15) & 0x3FFFFFFFFFFFFFF0)), v62, v77, v48, &v79);
    uint64_t v65 = v64;
    swift_release();
    sub_10052E1EC();
    return (void *)v65;
  }
  else
  {
    uint64_t v66 = (void *)swift_slowAlloc();
    memcpy(v66, v78, v63);
    sub_101030004((unint64_t *)v66, v62, v77, v48, &v79);
    uint64_t v68 = v67;
    swift_release();
    sub_10052E1EC();
    swift_slowDealloc();
    return (void *)v68;
  }
}

unint64_t *sub_10102D978(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 64);
    uint64_t v38 = a1 + 64;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v36 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v37 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v37) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v38 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v37) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v38 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v37) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v38 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v37) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v38 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v37)
                {
LABEL_47:
                  sub_10052E1EC();
                  return (unint64_t *)v2;
                }
                unint64_t v13 = *(void *)(v38 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v37) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v38 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      Swift::Int v19 = Hasher._finalize()();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    id v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v39 = a1;
      uint64_t v40 = v38;
      uint64_t v41 = v36;
      int64_t v42 = v9;
      unint64_t v43 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        uint64_t v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
      uint64_t v39 = a1;
      uint64_t v40 = v38;
      uint64_t v41 = v36;
      int64_t v42 = v9;
      unint64_t v43 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v30 = *(unsigned char *)(v2 + 32);
    unint64_t v31 = (unint64_t)((1 << v30) + 63) >> 6;
    size_t v32 = 8 * v31;
    if ((v30 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe, v29);
      memcpy((char *)&v36 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v32);
      uint64_t v33 = sub_101030678((unint64_t *)((char *)&v36 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0)), v31, v2, v21, &v39);
      swift_release();
      sub_10052E1EC();
    }
    else
    {
      uint64_t v34 = (void *)swift_slowAlloc();
      memcpy(v34, (const void *)(v2 + 56), v32);
      uint64_t v33 = sub_101030678((unint64_t *)v34, v31, v2, v21, &v39);
      swift_release();
      sub_10052E1EC();
      swift_slowDealloc();
    }
    return v33;
  }
  else
  {
    swift_release();
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

void *sub_10102DDE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_10169B4A0);
  __chkstk_darwin(v4 - 8, v5);
  unint64_t v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  unint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v14);
  size_t v63 = (char *)&v53 - v15;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  uint64_t v16 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v17 = ~v16;
  uint64_t v18 = a1 + 56;
  uint64_t v19 = -v16;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & *(void *)(a1 + 56);
  uint64_t v64 = a1;
  uint64_t v65 = a1 + 56;
  uint64_t v58 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v59 = v7;
  uint64_t v66 = v17;
  uint64_t v67 = 0;
  unint64_t v68 = v21;
  char v57 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  uint64_t v55 = (void (**)(char *, uint64_t, uint64_t))(v9 + 32);
  uint64_t v61 = v9 + 16;
  unint64_t v62 = (char *)(a2 + 56);
  uint64_t v22 = (void (**)(char *, uint64_t))(v9 + 8);
  swift_bridgeObjectRetain();
  int64_t v23 = 0;
  uint64_t v60 = v9;
  uint64_t v56 = a2;
  uint64_t v54 = 0;
  if (!v21) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v24 = (v21 - 1) & v21;
  unint64_t v25 = __clz(__rbit64(v21)) | (v23 << 6);
  int64_t v26 = v23;
LABEL_7:
  unint64_t v27 = *(void *)(a1 + 48) + *(void *)(v9 + 72) * v25;
  uint64_t v28 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
  uint64_t v29 = (uint64_t)v59;
  v28(v59, v27, v8);
  uint64_t v30 = 0;
  while (1)
  {
    (*v58)(v29, v30, 1, v8);
    uint64_t v64 = a1;
    uint64_t v65 = v18;
    uint64_t v66 = v17;
    uint64_t v67 = v26;
    unint64_t v68 = v24;
    if ((*v57)(v29, 1, v8) == 1)
    {
      sub_10052E1EC();
      sub_100522F00(v29, (uint64_t *)&unk_10169B4A0);
      return (void *)v56;
    }
    (*v55)(v63, v29, v8);
    uint64_t v34 = v56;
    sub_10103567C(&qword_101672918, 255, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t v35 = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v36 = -1 << *(unsigned char *)(v34 + 32);
    unint64_t v37 = v35 & ~v36;
    if ((*(void *)&v62[(v37 >> 3) & 0xFFFFFFFFFFFFFF8] >> v37)) {
      break;
    }
    unint64_t v43 = *v22;
    uint64_t v9 = v60;
LABEL_35:
    v43(v63, v8);
    int64_t v23 = v67;
    unint64_t v21 = v68;
    a1 = v64;
    uint64_t v18 = v65;
    uint64_t v17 = v66;
    uint64_t v54 = v67;
    if (v68) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v26 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      __break(1u);
    }
    int64_t v31 = (unint64_t)(v17 + 64) >> 6;
    if (v26 >= v31) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v18 + 8 * v26);
    if (v32) {
      goto LABEL_11;
    }
    v23 += 2;
    if (v26 + 1 >= v31) {
      goto LABEL_37;
    }
    unint64_t v32 = *(void *)(v18 + 8 * v23);
    if (v32) {
      goto LABEL_14;
    }
    if (v26 + 2 >= v31) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v18 + 8 * (v26 + 2));
    if (v32)
    {
      v26 += 2;
      goto LABEL_11;
    }
    int64_t v23 = v26 + 3;
    if (v26 + 3 < v31)
    {
      unint64_t v32 = *(void *)(v18 + 8 * v23);
      if (v32)
      {
LABEL_14:
        int64_t v26 = v23;
LABEL_11:
        uint64_t v24 = (v32 - 1) & v32;
        unint64_t v25 = __clz(__rbit64(v32)) + (v26 << 6);
        goto LABEL_7;
      }
      v26 += 4;
      if (v26 >= v31)
      {
LABEL_26:
        uint64_t v24 = 0;
        uint64_t v30 = 1;
        int64_t v26 = v23;
        goto LABEL_27;
      }
      unint64_t v32 = *(void *)(v18 + 8 * v26);
      if (v32) {
        goto LABEL_11;
      }
      int64_t v26 = v31 - 1;
      uint64_t v33 = v54 + 6;
      while (v31 != v33)
      {
        unint64_t v32 = *(void *)(v18 + 8 * v33++);
        if (v32)
        {
          int64_t v26 = v33 - 1;
          goto LABEL_11;
        }
      }
LABEL_37:
      uint64_t v24 = 0;
      uint64_t v30 = 1;
      goto LABEL_27;
    }
    uint64_t v24 = 0;
    uint64_t v30 = 1;
    v26 += 2;
LABEL_27:
    uint64_t v29 = (uint64_t)v59;
  }
  uint64_t v54 = (unint64_t)v22 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v38 = v34;
  uint64_t v39 = ~v36;
  uint64_t v40 = *(void *)(v60 + 72);
  uint64_t v41 = *(void (**)(char *, unint64_t, uint64_t))(v60 + 16);
  while (1)
  {
    v41(v13, *(void *)(v38 + 48) + v40 * v37, v8);
    sub_10103567C(&qword_10169A040, 255, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    char v42 = dispatch thunk of static Equatable.== infix(_:_:)();
    unint64_t v43 = *v22;
    (*v22)(v13, v8);
    if (v42) {
      break;
    }
    unint64_t v37 = (v37 + 1) & v39;
    if (((*(void *)&v62[(v37 >> 3) & 0xFFFFFFFFFFFFFF8] >> v37) & 1) == 0)
    {
      uint64_t v9 = v60;
      goto LABEL_35;
    }
  }
  uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v43)(v63, v8);
  char v46 = *(unsigned char *)(v38 + 32);
  unint64_t v47 = (unint64_t)((1 << v46) + 63) >> 6;
  size_t v48 = 8 * v47;
  if ((v46 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe, v45);
    memcpy((char *)&v53 - ((v48 + 15) & 0x3FFFFFFFFFFFFFF0), v62, v48);
    uint64_t v49 = sub_101030958((unint64_t *)((char *)&v53 - ((v48 + 15) & 0x3FFFFFFFFFFFFFF0)), v47, v38, v37, &v64);
    swift_release();
    sub_10052E1EC();
    return v49;
  }
  else
  {
    char v51 = (void *)swift_slowAlloc();
    memcpy(v51, v62, v48);
    uint64_t v52 = sub_101030958((unint64_t *)v51, v47, v38, v37, &v64);
    swift_release();
    sub_10052E1EC();
    swift_slowDealloc();
    return v52;
  }
}

void *sub_10102E4B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLSceneInfo();
    sub_10103567C(&qword_10169FA90, 255, (void (*)(uint64_t))type metadata accessor for CRLSceneInfo);
    Set.Iterator.init(_cocoa:)();
    uint64_t v3 = v47;
    uint64_t v4 = v48;
    uint64_t v6 = v49;
    int64_t v5 = v50;
    unint64_t v7 = v51;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v4 = a1 + 56;
    uint64_t v6 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v5 = 0;
  }
  uint64_t v42 = v3;
  uint64_t v43 = v4;
  uint64_t v44 = v6;
  int64_t v45 = v5;
  unint64_t v46 = v7;
  uint64_t v11 = v2 + 56;
  while (1)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v7)
      {
        uint64_t v12 = (v7 - 1) & v7;
        unint64_t v13 = __clz(__rbit64(v7)) | (v5 << 6);
LABEL_14:
        uint64_t v14 = *(void **)(*(void *)(v3 + 48) + 8 * v13);
        id v15 = v14;
        goto LABEL_15;
      }
      int64_t v25 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        __break(1u);
      }
      int64_t v26 = (unint64_t)(v6 + 64) >> 6;
      if (v25 >= v26)
      {
        uint64_t v14 = 0;
        uint64_t v12 = 0;
        goto LABEL_15;
      }
      unint64_t v27 = *(void *)(v43 + 8 * v25);
      if (v27)
      {
LABEL_28:
        uint64_t v12 = (v27 - 1) & v27;
        unint64_t v13 = __clz(__rbit64(v27)) + (v25 << 6);
        int64_t v5 = v25;
        goto LABEL_14;
      }
      int64_t v28 = v5 + 2;
      if (v5 + 2 >= v26) {
        goto LABEL_44;
      }
      unint64_t v27 = *(void *)(v43 + 8 * v28);
      if (v27)
      {
LABEL_32:
        int64_t v25 = v28;
        goto LABEL_28;
      }
      if (v5 + 3 < v26)
      {
        unint64_t v27 = *(void *)(v43 + 8 * (v5 + 3));
        if (v27)
        {
          int64_t v25 = v5 + 3;
          goto LABEL_28;
        }
        int64_t v28 = v5 + 4;
        if (v5 + 4 >= v26)
        {
          uint64_t v14 = 0;
          uint64_t v12 = 0;
          v5 += 3;
LABEL_15:
          int64_t v45 = v5;
          unint64_t v46 = v12;
          if (!v14) {
            goto LABEL_53;
          }
          goto LABEL_19;
        }
        unint64_t v27 = *(void *)(v43 + 8 * v28);
        if (v27) {
          goto LABEL_32;
        }
        int64_t v25 = v5 + 5;
        if (v5 + 5 < v26)
        {
          unint64_t v27 = *(void *)(v43 + 8 * v25);
          if (v27) {
            goto LABEL_28;
          }
          int64_t v25 = v26 - 1;
          int64_t v29 = v5 + 6;
          while (v26 != v29)
          {
            unint64_t v27 = *(void *)(v43 + 8 * v29++);
            if (v27)
            {
              int64_t v25 = v29 - 1;
              goto LABEL_28;
            }
          }
LABEL_44:
          uint64_t v14 = 0;
          uint64_t v12 = 0;
          int64_t v5 = v25;
          goto LABEL_15;
        }
      }
      uint64_t v14 = 0;
      uint64_t v12 = 0;
      int64_t v5 = v28;
      goto LABEL_15;
    }
    uint64_t v16 = __CocoaSet.Iterator.next()();
    if (!v16
      || (uint64_t v40 = v16,
          type metadata accessor for CRLSceneInfo(),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          uint64_t v14 = v41,
          swift_unknownObjectRelease(),
          !v41))
    {
LABEL_53:
      sub_10052E1EC();
      return (void *)v2;
    }
LABEL_19:
    Swift::Int v17 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
    uint64_t v18 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v19 = v17 & ~v18;
    if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
      goto LABEL_10;
    }
    type metadata accessor for CRLSceneInfo();
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
    char v21 = static NSObject.== infix(_:_:)();

    if (v21) {
      break;
    }
    uint64_t v22 = ~v18;
    while (1)
    {
      unint64_t v19 = (v19 + 1) & v22;
      if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        break;
      }
      id v23 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
      char v24 = static NSObject.== infix(_:_:)();

      if (v24) {
        goto LABEL_47;
      }
    }
LABEL_10:

    uint64_t v3 = v42;
    uint64_t v6 = v44;
    int64_t v5 = v45;
    unint64_t v7 = v46;
  }
LABEL_47:

  char v32 = *(unsigned char *)(v2 + 32);
  unint64_t v33 = (unint64_t)((1 << v32) + 63) >> 6;
  size_t v34 = 8 * v33;
  if ((v32 & 0x3Fu) < 0xE
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe, v31);
    memcpy((char *)&v40 - ((v34 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v34);
    sub_101030EBC((uint64_t)&v40 - ((v34 + 15) & 0x3FFFFFFFFFFFFFF0), v33, v2, v19, &v42, (void (*)(void))type metadata accessor for CRLSceneInfo, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10052CF68);
    uint64_t v36 = v35;
    swift_release();
    sub_10052E1EC();
  }
  else
  {
    unint64_t v37 = (void *)swift_slowAlloc();
    memcpy(v37, (const void *)(v2 + 56), v34);
    sub_101030EBC((uint64_t)v37, v33, v2, v19, &v42, (void (*)(void))type metadata accessor for CRLSceneInfo, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10052CF68);
    uint64_t v36 = v38;
    swift_release();
    sub_10052E1EC();
    swift_slowDealloc();
  }
  return (void *)v36;
}

void *sub_10102EA48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLCollaborationParticipant(0);
    sub_10103567C((unint64_t *)&unk_10167C500, 255, (void (*)(uint64_t))type metadata accessor for CRLCollaborationParticipant);
    Set.Iterator.init(_cocoa:)();
    uint64_t v3 = v47;
    uint64_t v4 = v48;
    uint64_t v6 = v49;
    int64_t v5 = v50;
    unint64_t v7 = v51;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v4 = a1 + 56;
    uint64_t v6 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v5 = 0;
  }
  uint64_t v42 = v3;
  uint64_t v43 = v4;
  uint64_t v44 = v6;
  int64_t v45 = v5;
  unint64_t v46 = v7;
  uint64_t v11 = v2 + 56;
  while (1)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v7)
      {
        uint64_t v12 = (v7 - 1) & v7;
        unint64_t v13 = __clz(__rbit64(v7)) | (v5 << 6);
LABEL_14:
        uint64_t v14 = *(void **)(*(void *)(v3 + 48) + 8 * v13);
        id v15 = v14;
        goto LABEL_15;
      }
      int64_t v25 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        __break(1u);
      }
      int64_t v26 = (unint64_t)(v6 + 64) >> 6;
      if (v25 >= v26)
      {
        uint64_t v14 = 0;
        uint64_t v12 = 0;
        goto LABEL_15;
      }
      unint64_t v27 = *(void *)(v43 + 8 * v25);
      if (v27)
      {
LABEL_28:
        uint64_t v12 = (v27 - 1) & v27;
        unint64_t v13 = __clz(__rbit64(v27)) + (v25 << 6);
        int64_t v5 = v25;
        goto LABEL_14;
      }
      int64_t v28 = v5 + 2;
      if (v5 + 2 >= v26) {
        goto LABEL_44;
      }
      unint64_t v27 = *(void *)(v43 + 8 * v28);
      if (v27)
      {
LABEL_32:
        int64_t v25 = v28;
        goto LABEL_28;
      }
      if (v5 + 3 < v26)
      {
        unint64_t v27 = *(void *)(v43 + 8 * (v5 + 3));
        if (v27)
        {
          int64_t v25 = v5 + 3;
          goto LABEL_28;
        }
        int64_t v28 = v5 + 4;
        if (v5 + 4 >= v26)
        {
          uint64_t v14 = 0;
          uint64_t v12 = 0;
          v5 += 3;
LABEL_15:
          int64_t v45 = v5;
          unint64_t v46 = v12;
          if (!v14) {
            goto LABEL_53;
          }
          goto LABEL_19;
        }
        unint64_t v27 = *(void *)(v43 + 8 * v28);
        if (v27) {
          goto LABEL_32;
        }
        int64_t v25 = v5 + 5;
        if (v5 + 5 < v26)
        {
          unint64_t v27 = *(void *)(v43 + 8 * v25);
          if (v27) {
            goto LABEL_28;
          }
          int64_t v25 = v26 - 1;
          int64_t v29 = v5 + 6;
          while (v26 != v29)
          {
            unint64_t v27 = *(void *)(v43 + 8 * v29++);
            if (v27)
            {
              int64_t v25 = v29 - 1;
              goto LABEL_28;
            }
          }
LABEL_44:
          uint64_t v14 = 0;
          uint64_t v12 = 0;
          int64_t v5 = v25;
          goto LABEL_15;
        }
      }
      uint64_t v14 = 0;
      uint64_t v12 = 0;
      int64_t v5 = v28;
      goto LABEL_15;
    }
    uint64_t v16 = __CocoaSet.Iterator.next()();
    if (!v16
      || (uint64_t v40 = v16,
          type metadata accessor for CRLCollaborationParticipant(0),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          uint64_t v14 = v41,
          swift_unknownObjectRelease(),
          !v41))
    {
LABEL_53:
      sub_10052E1EC();
      return (void *)v2;
    }
LABEL_19:
    Swift::Int v17 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
    uint64_t v18 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v19 = v17 & ~v18;
    if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
      goto LABEL_10;
    }
    type metadata accessor for CRLCollaborationParticipant(0);
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
    char v21 = static NSObject.== infix(_:_:)();

    if (v21) {
      break;
    }
    uint64_t v22 = ~v18;
    while (1)
    {
      unint64_t v19 = (v19 + 1) & v22;
      if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        break;
      }
      id v23 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
      char v24 = static NSObject.== infix(_:_:)();

      if (v24) {
        goto LABEL_47;
      }
    }
LABEL_10:

    uint64_t v3 = v42;
    uint64_t v6 = v44;
    int64_t v5 = v45;
    unint64_t v7 = v46;
  }
LABEL_47:

  char v32 = *(unsigned char *)(v2 + 32);
  unint64_t v33 = (unint64_t)((1 << v32) + 63) >> 6;
  size_t v34 = 8 * v33;
  if ((v32 & 0x3Fu) < 0xE
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe, v31);
    memcpy((char *)&v40 - ((v34 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v34);
    sub_101030EBC((uint64_t)&v40 - ((v34 + 15) & 0x3FFFFFFFFFFFFFF0), v33, v2, v19, &v42, (void (*)(void))type metadata accessor for CRLCollaborationParticipant, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10052D1F8);
    uint64_t v36 = v35;
    swift_release();
    sub_10052E1EC();
  }
  else
  {
    unint64_t v37 = (void *)swift_slowAlloc();
    memcpy(v37, (const void *)(v2 + 56), v34);
    sub_101030EBC((uint64_t)v37, v33, v2, v19, &v42, (void (*)(void))type metadata accessor for CRLCollaborationParticipant, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10052D1F8);
    uint64_t v36 = v38;
    swift_release();
    sub_10052E1EC();
    swift_slowDealloc();
  }
  return (void *)v36;
}

void *sub_10102EFDC(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v52 = a2;
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v15 = __chkstk_darwin(v13, v14);
  Swift::Int v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (void *)__chkstk_darwin(v15, v18);
  uint64_t v66 = (char *)&v51 - v20;
  uint64_t v21 = *(void *)(a3 + 16);
  uint64_t v22 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v23 = *(unint64_t *)((char *)a1 + v22);
  uint64_t v54 = a1;
  uint64_t v55 = v24;
  *(unint64_t *)((char *)a1 + v22) = v23 & ((-1 << a4) - 1);
  uint64_t v25 = v24;
  uint64_t v26 = v21 - 1;
  uint64_t v64 = v24 + 16;
  uint64_t v65 = a3;
  uint64_t v59 = (unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  uint64_t v60 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  char v57 = a5;
  uint64_t v58 = (void (**)(char *, char *, uint64_t))(v24 + 32);
  uint64_t v63 = a3 + 56;
  unint64_t v27 = (void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v56 = v12;
  while (2)
  {
    uint64_t v53 = v26;
    do
    {
      while (1)
      {
        uint64_t v29 = *a5;
        uint64_t v30 = a5[1];
        uint64_t v31 = a5[2];
        int64_t v32 = a5[3];
        unint64_t v33 = a5[4];
        uint64_t v62 = v31;
        if (v33)
        {
          uint64_t v61 = (v33 - 1) & v33;
          unint64_t v34 = __clz(__rbit64(v33)) | (v32 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t))(v25 + 16))(v12, *(void *)(v29 + 48) + *(void *)(v25 + 72) * v34, v13);
          uint64_t v35 = 0;
          goto LABEL_8;
        }
        int64_t v44 = v32 + 1;
        if (__OFADD__(v32, 1))
        {
          __break(1u);
          goto LABEL_42;
        }
        int64_t v45 = (unint64_t)(v31 + 64) >> 6;
        if (v44 >= v45)
        {
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          goto LABEL_8;
        }
        unint64_t v46 = *(void *)(v30 + 8 * v44);
        if (v46) {
          goto LABEL_17;
        }
        if (v32 + 2 >= v45) {
          goto LABEL_34;
        }
        unint64_t v46 = *(void *)(v30 + 8 * (v32 + 2));
        if (v46)
        {
          int64_t v44 = v32 + 2;
LABEL_17:
          uint64_t v61 = (v46 - 1) & v46;
          unint64_t v34 = __clz(__rbit64(v46)) + (v44 << 6);
          int64_t v32 = v44;
          goto LABEL_7;
        }
        if (v32 + 3 >= v45)
        {
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          v32 += 2;
          goto LABEL_8;
        }
        unint64_t v46 = *(void *)(v30 + 8 * (v32 + 3));
        if (v46)
        {
          int64_t v44 = v32 + 3;
          goto LABEL_17;
        }
        int64_t v44 = v32 + 4;
        if (v32 + 4 < v45)
        {
          unint64_t v46 = *(void *)(v30 + 8 * v44);
          if (v46) {
            goto LABEL_17;
          }
          int64_t v44 = v45 - 1;
          int64_t v49 = v32 + 5;
          while (v45 != v49)
          {
            unint64_t v46 = *(void *)(v30 + 8 * v49++);
            if (v46)
            {
              int64_t v44 = v49 - 1;
              goto LABEL_17;
            }
          }
LABEL_34:
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          int64_t v32 = v44;
          goto LABEL_8;
        }
        uint64_t v61 = 0;
        uint64_t v35 = 1;
        v32 += 3;
LABEL_8:
        (*v60)(v12, v35, 1, v13);
        *a5 = v29;
        a5[1] = v30;
        a5[2] = v62;
        a5[3] = v32;
        a5[4] = v61;
        if ((*v59)(v12, 1, v13) == 1)
        {
          sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101674520);
          uint64_t v50 = v65;
          swift_retain();
          return (void *)sub_10052B840(v54, v52, v53, v50);
        }
        (*v58)(v66, v12, v13);
        uint64_t v36 = v65;
        sub_10103567C((unint64_t *)&qword_1016770E0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v37 = dispatch thunk of Hashable._rawHashValue(seed:)();
        uint64_t v38 = -1 << *(unsigned char *)(v36 + 32);
        unint64_t v39 = v37 & ~v38;
        if ((*(void *)(v63 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39)) {
          break;
        }
        int64_t v28 = *v27;
LABEL_4:
        uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v28)(v66, v13);
      }
      uint64_t v62 = (unint64_t)v27 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v40 = ~v38;
      uint64_t v41 = *(void *)(v25 + 72);
      uint64_t v42 = *(void (**)(char *, unint64_t, uint64_t))(v25 + 16);
      while (1)
      {
        v42(v17, *(void *)(v65 + 48) + v41 * v39, v13);
        sub_10103567C((unint64_t *)&qword_10167BDC0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v43 = dispatch thunk of static Equatable.== infix(_:_:)();
        int64_t v28 = *v27;
        (*v27)(v17, v13);
        if (v43) {
          break;
        }
        unint64_t v39 = (v39 + 1) & v40;
        if (((*(void *)(v63 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
        {
          uint64_t v12 = v56;
          a5 = v57;
          uint64_t v25 = v55;
          goto LABEL_4;
        }
      }
      uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v28)(v66, v13);
      uint64_t v47 = (v39 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v25 = v55;
      uint64_t v48 = *(unint64_t *)((char *)v54 + v47);
      *(unint64_t *)((char *)v54 + v47) = v48 & ~(1 << v39);
      uint64_t v12 = v56;
      a5 = v57;
    }
    while ((v48 & (1 << v39)) == 0);
    uint64_t v26 = v53 - 1;
    if (__OFSUB__(v53, 1))
    {
LABEL_42:
      __break(1u);
      return result;
    }
    if (v53 != 1) {
      continue;
    }
    return &_swiftEmptySetSingleton;
  }
}

void *sub_10102F540(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v55 = a2;
  uint64_t v65 = type metadata accessor for UUID();
  uint64_t v10 = __chkstk_darwin(v65, v9);
  uint64_t v60 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (void *)__chkstk_darwin(v10, v12);
  uint64_t v64 = (char *)&v54 - v14;
  uint64_t v15 = *(void *)(a3 + 16);
  uint64_t v16 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v17 = *(unint64_t *)((char *)a1 + v16);
  char v57 = a1;
  *(unint64_t *)((char *)a1 + v16) = v17 & ((-1 << a4) - 1);
  uint64_t v18 = v15 - 1;
  uint64_t v66 = a3;
  uint64_t v62 = a3 + 56;
  uint64_t v63 = (void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v58 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v59 = a5;
  uint64_t v20 = v64;
  while (2)
  {
    uint64_t v56 = v18;
    do
    {
      while (1)
      {
        if ((*a5 & 0x8000000000000000) == 0)
        {
          int64_t v22 = a5[3];
          unint64_t v21 = a5[4];
          if (v21)
          {
            uint64_t v23 = (v21 - 1) & v21;
            unint64_t v24 = __clz(__rbit64(v21)) | (v22 << 6);
LABEL_7:
            uint64_t v25 = *(void *)(*(void *)(*a5 + 48) + 8 * v24);
            swift_retain();
            goto LABEL_8;
          }
          int64_t v47 = v22 + 1;
          if (__OFADD__(v22, 1))
          {
            __break(1u);
            goto LABEL_46;
          }
          int64_t v48 = (unint64_t)(a5[2] + 64) >> 6;
          if (v47 >= v48)
          {
            uint64_t v25 = 0;
            uint64_t v23 = 0;
            goto LABEL_8;
          }
          uint64_t v49 = a5[1];
          unint64_t v50 = *(void *)(v49 + 8 * v47);
          if (v50)
          {
LABEL_22:
            uint64_t v23 = (v50 - 1) & v50;
            unint64_t v24 = __clz(__rbit64(v50)) + (v47 << 6);
            int64_t v22 = v47;
            goto LABEL_7;
          }
          int64_t v51 = v22 + 2;
          if (v22 + 2 >= v48) {
            goto LABEL_38;
          }
          unint64_t v50 = *(void *)(v49 + 8 * v51);
          if (v50)
          {
LABEL_26:
            int64_t v47 = v51;
            goto LABEL_22;
          }
          if (v22 + 3 < v48)
          {
            unint64_t v50 = *(void *)(v49 + 8 * (v22 + 3));
            if (v50)
            {
              int64_t v47 = v22 + 3;
              goto LABEL_22;
            }
            int64_t v51 = v22 + 4;
            if (v22 + 4 >= v48)
            {
              uint64_t v25 = 0;
              uint64_t v23 = 0;
              v22 += 3;
LABEL_8:
              a5[3] = v22;
              a5[4] = v23;
              if (!v25) {
                goto LABEL_44;
              }
              goto LABEL_12;
            }
            unint64_t v50 = *(void *)(v49 + 8 * v51);
            if (v50) {
              goto LABEL_26;
            }
            int64_t v47 = v22 + 5;
            if (v22 + 5 < v48)
            {
              unint64_t v50 = *(void *)(v49 + 8 * v47);
              if (v50) {
                goto LABEL_22;
              }
              int64_t v47 = v48 - 1;
              int64_t v52 = v22 + 6;
              while (v48 != v52)
              {
                unint64_t v50 = *(void *)(v49 + 8 * v52++);
                if (v50)
                {
                  int64_t v47 = v52 - 1;
                  goto LABEL_22;
                }
              }
LABEL_38:
              uint64_t v25 = 0;
              uint64_t v23 = 0;
              int64_t v22 = v47;
              goto LABEL_8;
            }
          }
          uint64_t v25 = 0;
          uint64_t v23 = 0;
          int64_t v22 = v51;
          goto LABEL_8;
        }
        uint64_t v26 = __CocoaSet.Iterator.next()();
        if (!v26
          || (uint64_t v68 = v26,
              type metadata accessor for CRLTransactableHashableWrapper(),
              swift_unknownObjectRetain(),
              swift_dynamicCast(),
              uint64_t v25 = v67,
              swift_unknownObjectRelease(),
              !v25))
        {
LABEL_44:
          uint64_t v53 = v66;
          swift_retain();
          return (void *)sub_10052B490(v57, v55, v56, v53);
        }
LABEL_12:
        uint64_t v27 = v66;
        Hasher.init(_seed:)();
        uint64_t v28 = *(void *)(v25 + 24);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v30 = v64;
        (*(void (**)(uint64_t, uint64_t))(v28 + 32))(ObjectType, v28);
        sub_10103567C((unint64_t *)&qword_1016770E0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v31 = v65;
        dispatch thunk of Hashable.hash(into:)();
        int64_t v32 = *v63;
        (*v63)(v30, v31);
        Swift::Int v33 = Hasher._finalize()();
        uint64_t v34 = -1 << *(unsigned char *)(v27 + 32);
        unint64_t v35 = v33 & ~v34;
        if ((*(void *)(v62 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35)) {
          break;
        }
LABEL_3:
        uint64_t result = (void *)swift_release();
        a5 = v59;
      }
      uint64_t v61 = ~v34;
      while (1)
      {
        uint64_t v36 = *(void *)(*(void *)(*(void *)(v66 + 48) + 8 * v35) + 24);
        uint64_t v37 = swift_getObjectType();
        uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v36 + 32);
        swift_retain();
        v38(v37, v36);
        uint64_t v39 = *(void *)(v25 + 24);
        uint64_t v40 = swift_getObjectType();
        uint64_t v41 = v60;
        (*(void (**)(uint64_t, uint64_t))(v39 + 32))(v40, v39);
        char v42 = static UUID.== infix(_:_:)();
        char v43 = v41;
        uint64_t v44 = v65;
        v32(v43, v65);
        v32(v20, v44);
        swift_release();
        if (v42) {
          break;
        }
        unint64_t v35 = (v35 + 1) & v61;
        if (((*(void *)(v62 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35) & 1) == 0) {
          goto LABEL_3;
        }
      }
      uint64_t result = (void *)swift_release();
      uint64_t v45 = (v35 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v46 = *(unint64_t *)((char *)v57 + v45);
      *(unint64_t *)((char *)v57 + v45) = v46 & ~(1 << v35);
      a5 = v59;
    }
    while ((v46 & (1 << v35)) == 0);
    uint64_t v18 = v56 - 1;
    if (__OFSUB__(v56, 1))
    {
LABEL_46:
      __break(1u);
      return result;
    }
    if (v56 != 1) {
      continue;
    }
    return &_swiftEmptySetSingleton;
  }
}

void *sub_10102FA78(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v55 = a2;
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v15 = __chkstk_darwin(v13, v14);
  uint64_t v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (void *)__chkstk_darwin(v15, v18);
  uint64_t v68 = (char *)&v55 - v20;
  uint64_t v21 = *(void *)(a3 + 16);
  uint64_t v22 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v23 = *(unint64_t *)((char *)a1 + v22);
  char v57 = a1;
  uint64_t v58 = v12;
  *(unint64_t *)((char *)a1 + v22) = v23 & ((-1 << a4) - 1);
  uint64_t v25 = v24;
  uint64_t v26 = v21 - 1;
  uint64_t v66 = v24 + 16;
  uint64_t v67 = a3;
  uint64_t v61 = (unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  uint64_t v62 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  uint64_t v59 = a5;
  uint64_t v60 = (void (**)(char *, char *, uint64_t))(v24 + 32);
  uint64_t v65 = a3 + 56;
  uint64_t v27 = (void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v63 = v24;
  while (2)
  {
    uint64_t v56 = v26;
    do
    {
      while (1)
      {
        uint64_t v29 = *a5;
        uint64_t v30 = a5[1];
        uint64_t v32 = a5[2];
        int64_t v31 = a5[3];
        unint64_t v33 = a5[4];
        if (v33)
        {
          uint64_t v64 = (v33 - 1) & v33;
          unint64_t v34 = __clz(__rbit64(v33)) | (v31 << 6);
LABEL_7:
          unint64_t v35 = *(void *)(v29 + 48) + *(void *)(v25 + 72) * v34;
          uint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v25 + 16);
          uint64_t v37 = v29;
          v36(v12, v35, v13);
          uint64_t v38 = 0;
          goto LABEL_8;
        }
        int64_t v47 = v31 + 1;
        if (__OFADD__(v31, 1))
        {
          __break(1u);
          goto LABEL_44;
        }
        int64_t v48 = (unint64_t)(v32 + 64) >> 6;
        if (v47 >= v48)
        {
          uint64_t v64 = 0;
          uint64_t v38 = 1;
          uint64_t v37 = v29;
          goto LABEL_8;
        }
        unint64_t v49 = *(void *)(v30 + 8 * v47);
        if (v49) {
          goto LABEL_17;
        }
        int64_t v52 = v31 + 2;
        if (v31 + 2 >= v48) {
          goto LABEL_35;
        }
        unint64_t v49 = *(void *)(v30 + 8 * v52);
        if (v49) {
          goto LABEL_23;
        }
        if (v31 + 3 >= v48) {
          goto LABEL_36;
        }
        unint64_t v49 = *(void *)(v30 + 8 * (v31 + 3));
        if (v49)
        {
          int64_t v47 = v31 + 3;
          goto LABEL_17;
        }
        int64_t v52 = v31 + 4;
        if (v31 + 4 < v48)
        {
          unint64_t v49 = *(void *)(v30 + 8 * v52);
          if (v49)
          {
LABEL_23:
            int64_t v47 = v52;
LABEL_17:
            uint64_t v64 = (v49 - 1) & v49;
            unint64_t v34 = __clz(__rbit64(v49)) + (v47 << 6);
            int64_t v31 = v47;
            goto LABEL_7;
          }
          int64_t v47 = v31 + 5;
          if (v31 + 5 < v48)
          {
            unint64_t v49 = *(void *)(v30 + 8 * v47);
            if (v49) {
              goto LABEL_17;
            }
            int64_t v47 = v48 - 1;
            int64_t v53 = v31 + 6;
            while (v48 != v53)
            {
              unint64_t v49 = *(void *)(v30 + 8 * v53++);
              if (v49)
              {
                int64_t v47 = v53 - 1;
                goto LABEL_17;
              }
            }
LABEL_35:
            uint64_t v64 = 0;
            uint64_t v38 = 1;
            int64_t v31 = v47;
            uint64_t v37 = v29;
            goto LABEL_8;
          }
LABEL_36:
          uint64_t v64 = 0;
          uint64_t v38 = 1;
          int64_t v31 = v52;
          uint64_t v37 = v29;
          goto LABEL_8;
        }
        uint64_t v64 = 0;
        uint64_t v38 = 1;
        v31 += 3;
        uint64_t v37 = v29;
LABEL_8:
        (*v62)(v12, v38, 1, v13);
        *a5 = v37;
        a5[1] = v30;
        a5[2] = v32;
        a5[3] = v31;
        a5[4] = v64;
        if ((*v61)(v12, 1, v13) == 1)
        {
          sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101674520);
          uint64_t v54 = v67;
          swift_retain();
          return (void *)sub_10052B840(v57, v55, v56, v54);
        }
        (*v60)(v68, v12, v13);
        uint64_t v39 = v67;
        sub_10103567C((unint64_t *)&qword_1016770E0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v40 = dispatch thunk of Hashable._rawHashValue(seed:)();
        uint64_t v41 = -1 << *(unsigned char *)(v39 + 32);
        unint64_t v42 = v40 & ~v41;
        if ((*(void *)(v65 + ((v42 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v42)) {
          break;
        }
        uint64_t v28 = *v27;
        uint64_t v25 = v63;
LABEL_4:
        uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v28)(v68, v13);
      }
      uint64_t v64 = (unint64_t)v27 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v43 = ~v41;
      uint64_t v44 = *(void *)(v63 + 72);
      uint64_t v45 = *(void (**)(char *, unint64_t, uint64_t))(v63 + 16);
      while (1)
      {
        v45(v17, *(void *)(v67 + 48) + v44 * v42, v13);
        sub_10103567C((unint64_t *)&qword_10167BDC0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v46 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v28 = *v27;
        (*v27)(v17, v13);
        if (v46) {
          break;
        }
        unint64_t v42 = (v42 + 1) & v43;
        if (((*(void *)(v65 + ((v42 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v42) & 1) == 0)
        {
          uint64_t v12 = v58;
          a5 = v59;
          uint64_t v25 = v63;
          goto LABEL_4;
        }
      }
      uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v28)(v68, v13);
      uint64_t v50 = (v42 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v12 = v58;
      uint64_t v51 = *(unint64_t *)((char *)v57 + v50);
      *(unint64_t *)((char *)v57 + v50) = v51 & ~(1 << v42);
      a5 = v59;
      uint64_t v25 = v63;
    }
    while ((v51 & (1 << v42)) == 0);
    uint64_t v26 = v56 - 1;
    if (__OFSUB__(v56, 1))
    {
LABEL_44:
      __break(1u);
      return result;
    }
    if (v56 != 1) {
      continue;
    }
    return &_swiftEmptySetSingleton;
  }
}

void sub_101030004(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v74 = a5;
  uint64_t v65 = a2;
  uint64_t v8 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v68 = (uint64_t)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v71, v11);
  uint64_t v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v64 - v16;
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v64 - v20;
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v64 - v24;
  uint64_t v26 = *(void *)(a3 + 16);
  uint64_t v27 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v28 = *(unint64_t *)((char *)a1 + v27);
  uint64_t v67 = a1;
  *(unint64_t *)((char *)a1 + v27) = v28 & ((-1 << a4) - 1);
  uint64_t v29 = v26 - 1;
  uint64_t v72 = v30;
  uint64_t v69 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
  int64_t v70 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56);
  uint64_t v77 = a3;
  uint64_t v76 = a3 + 56;
  do
  {
    uint64_t v66 = v29;
    do
    {
      while (1)
      {
        uint64_t v32 = *v74;
        uint64_t v31 = v74[1];
        uint64_t v33 = v74[2];
        int64_t v34 = v74[3];
        unint64_t v35 = v74[4];
        uint64_t v75 = v31;
        uint64_t v73 = v33;
        if (v35)
        {
          uint64_t v36 = (v35 - 1) & v35;
          unint64_t v37 = __clz(__rbit64(v35)) | (v34 << 6);
LABEL_6:
          uint64_t v38 = v68;
          sub_100540CFC(*(void *)(v32 + 48) + *(void *)(v72 + 72) * v37, v68);
          uint64_t v39 = 0;
          goto LABEL_7;
        }
        int64_t v56 = v34 + 1;
        if (__OFADD__(v34, 1))
        {
          __break(1u);
LABEL_49:
          __break(1u);
          return;
        }
        int64_t v57 = (unint64_t)(v33 + 64) >> 6;
        if (v56 >= v57)
        {
          uint64_t v36 = 0;
          uint64_t v39 = 1;
          uint64_t v38 = v68;
          goto LABEL_7;
        }
        unint64_t v58 = *(void *)(v31 + 8 * v56);
        if (v58) {
          goto LABEL_22;
        }
        int64_t v61 = v34 + 2;
        if (v34 + 2 >= v57) {
          goto LABEL_41;
        }
        unint64_t v58 = *(void *)(v31 + 8 * v61);
        if (v58) {
          goto LABEL_29;
        }
        if (v34 + 3 >= v57) {
          goto LABEL_42;
        }
        unint64_t v58 = *(void *)(v31 + 8 * (v34 + 3));
        if (v58)
        {
          int64_t v56 = v34 + 3;
          goto LABEL_22;
        }
        int64_t v61 = v34 + 4;
        if (v34 + 4 < v57)
        {
          unint64_t v58 = *(void *)(v31 + 8 * v61);
          if (v58)
          {
LABEL_29:
            int64_t v56 = v61;
LABEL_22:
            uint64_t v36 = (v58 - 1) & v58;
            unint64_t v37 = __clz(__rbit64(v58)) + (v56 << 6);
            int64_t v34 = v56;
            goto LABEL_6;
          }
          int64_t v56 = v34 + 5;
          if (v34 + 5 < v57)
          {
            unint64_t v58 = *(void *)(v31 + 8 * v56);
            if (v58) {
              goto LABEL_22;
            }
            int64_t v56 = v57 - 1;
            int64_t v62 = v34 + 6;
            while (v57 != v62)
            {
              unint64_t v58 = *(void *)(v31 + 8 * v62++);
              if (v58)
              {
                int64_t v56 = v62 - 1;
                goto LABEL_22;
              }
            }
LABEL_41:
            uint64_t v36 = 0;
            uint64_t v39 = 1;
            int64_t v34 = v56;
            uint64_t v38 = v68;
            goto LABEL_7;
          }
LABEL_42:
          uint64_t v36 = 0;
          uint64_t v39 = 1;
          int64_t v34 = v61;
          uint64_t v38 = v68;
          goto LABEL_7;
        }
        uint64_t v36 = 0;
        uint64_t v39 = 1;
        v34 += 3;
        uint64_t v38 = v68;
LABEL_7:
        uint64_t v40 = v71;
        (*v70)(v38, v39, 1, v71);
        uint64_t v41 = v74;
        uint64_t v42 = v75;
        *uint64_t v74 = v32;
        v41[1] = v42;
        v41[2] = v73;
        v41[3] = v34;
        void v41[4] = v36;
        if ((*v69)(v38, 1, v40) == 1)
        {
          sub_100522F00(v38, &qword_101672C30);
          uint64_t v63 = v77;
          swift_retain();
          sub_10052BE70(v67, v65, v66, v63);
          return;
        }
        sub_1005394E4(v38, (uint64_t)v25);
        uint64_t v43 = v77;
        Hasher.init(_seed:)();
        type metadata accessor for UUID();
        sub_10103567C((unint64_t *)&qword_1016770E0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
        dispatch thunk of Hashable.hash(into:)();
        uint64_t v75 = type metadata accessor for CRLBoardIdentifierStorage(0);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        Swift::Int v44 = Hasher._finalize()();
        uint64_t v45 = -1 << *(unsigned char *)(v43 + 32);
        unint64_t v46 = v44 & ~v45;
        if ((*(void *)(v76 + ((v46 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v46)) {
          break;
        }
LABEL_3:
        sub_10103561C((uint64_t)v25, type metadata accessor for CRLBoardIdentifier);
      }
      uint64_t v47 = ~v45;
      uint64_t v48 = *(void *)(v72 + 72);
      while (1)
      {
        sub_100540CFC(*(void *)(v77 + 48) + v48 * v46, (uint64_t)v21);
        char v49 = static UUID.== infix(_:_:)();
        sub_100540CFC((uint64_t)v21, (uint64_t)v17);
        sub_100540CFC((uint64_t)v25, (uint64_t)v13);
        if ((v49 & 1) == 0)
        {
          sub_10103561C((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
          sub_10103561C((uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
          sub_10103561C((uint64_t)v21, type metadata accessor for CRLBoardIdentifier);
          goto LABEL_11;
        }
        uint64_t v50 = *(int *)(v75 + 20);
        uint64_t v51 = *(void *)&v17[v50];
        uint64_t v52 = *(void *)&v17[v50 + 8];
        int64_t v53 = &v13[v50];
        if (v51 == *(void *)v53 && v52 == *((void *)v53 + 1)) {
          break;
        }
        char v55 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_10103561C((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
        sub_10103561C((uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
        sub_10103561C((uint64_t)v21, type metadata accessor for CRLBoardIdentifier);
        if (v55) {
          goto LABEL_25;
        }
LABEL_11:
        unint64_t v46 = (v46 + 1) & v47;
        if (((*(void *)(v76 + ((v46 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v46) & 1) == 0) {
          goto LABEL_3;
        }
      }
      sub_10103561C((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
      sub_10103561C((uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
      sub_10103561C((uint64_t)v21, type metadata accessor for CRLBoardIdentifier);
LABEL_25:
      sub_10103561C((uint64_t)v25, type metadata accessor for CRLBoardIdentifier);
      uint64_t v59 = (v46 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v60 = *(unint64_t *)((char *)v67 + v59);
      *(unint64_t *)((char *)v67 + v59) = v60 & ~(1 << v46);
    }
    while ((v60 & (1 << v46)) == 0);
    uint64_t v29 = v66 - 1;
    if (__OFSUB__(v66, 1)) {
      goto LABEL_49;
    }
  }
  while (v66 != 1);
}

unint64_t *sub_101030678(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v38 = result;
  *(unint64_t *)((char *)result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v39 = a3 + 56;
  while (2)
  {
    uint64_t v37 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
        }
        else
        {
          int64_t v13 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_45;
          }
          int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
          int64_t v15 = a5[3];
          if (v13 >= v14) {
            goto LABEL_43;
          }
          uint64_t v16 = a5[1];
          unint64_t v17 = *(void *)(v16 + 8 * v13);
          if (!v17)
          {
            int64_t v15 = v9 + 1;
            if (v9 + 2 >= v14) {
              goto LABEL_43;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 2));
            if (v17)
            {
              int64_t v13 = v9 + 2;
            }
            else
            {
              int64_t v15 = v9 + 2;
              if (v9 + 3 >= v14) {
                goto LABEL_43;
              }
              unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
              if (v17)
              {
                int64_t v13 = v9 + 3;
              }
              else
              {
                int64_t v13 = v9 + 4;
                int64_t v15 = v9 + 3;
                if (v9 + 4 >= v14) {
                  goto LABEL_43;
                }
                unint64_t v17 = *(void *)(v16 + 8 * v13);
                if (!v17)
                {
                  int64_t v15 = v14 - 1;
                  int64_t v18 = v9 + 5;
                  while (v14 != v18)
                  {
                    unint64_t v17 = *(void *)(v16 + 8 * v18++);
                    if (v17)
                    {
                      int64_t v13 = v18 - 1;
                      goto LABEL_21;
                    }
                  }
LABEL_43:
                  a5[3] = v15;
                  a5[4] = 0;
                  swift_retain();
                  return (unint64_t *)sub_10052BBCC(v38, a2, v37, a3);
                }
              }
            }
          }
LABEL_21:
          uint64_t v11 = (v17 - 1) & v17;
          unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
          int64_t v9 = v13;
        }
        uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v22 = Hasher._finalize()();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v39 + 8 * (v24 >> 6))) != 0) {
          break;
        }
LABEL_3:
        uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
      }
      uint64_t v27 = *(void *)(a3 + 48);
      uint64_t v28 = (void *)(v27 + 16 * v24);
      BOOL v29 = *v28 == v21 && v28[1] == v20;
      if (!v29 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v39 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          int64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_29;
          }
        }
        goto LABEL_3;
      }
      uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
LABEL_29:
      unint64_t v30 = v38[v25];
      v38[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v37 - 1;
    if (__OFSUB__(v37, 1))
    {
LABEL_45:
      __break(1u);
      return result;
    }
    if (v37 != 1) {
      continue;
    }
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

void *sub_101030958(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v52 = a2;
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_10169B4A0);
  __chkstk_darwin(v9 - 8, v10);
  unint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for IndexPath();
  uint64_t v15 = __chkstk_darwin(v13, v14);
  unint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (void *)__chkstk_darwin(v15, v18);
  uint64_t v66 = (char *)&v51 - v20;
  uint64_t v21 = *(void *)(a3 + 16);
  uint64_t v22 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v23 = *(unint64_t *)((char *)a1 + v22);
  uint64_t v54 = a1;
  uint64_t v55 = v24;
  *(unint64_t *)((char *)a1 + v22) = v23 & ((-1 << a4) - 1);
  uint64_t v25 = v24;
  uint64_t v26 = v21 - 1;
  uint64_t v64 = v24 + 16;
  uint64_t v65 = a3;
  uint64_t v59 = (unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  uint64_t v60 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  int64_t v57 = a5;
  unint64_t v58 = (void (**)(char *, char *, uint64_t))(v24 + 32);
  uint64_t v63 = a3 + 56;
  uint64_t v27 = (void (**)(char *, uint64_t))(v24 + 8);
  int64_t v56 = v12;
  while (2)
  {
    uint64_t v53 = v26;
    do
    {
      while (1)
      {
        uint64_t v29 = *a5;
        uint64_t v30 = a5[1];
        uint64_t v31 = a5[2];
        int64_t v32 = a5[3];
        unint64_t v33 = a5[4];
        uint64_t v62 = v31;
        if (v33)
        {
          uint64_t v61 = (v33 - 1) & v33;
          unint64_t v34 = __clz(__rbit64(v33)) | (v32 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t))(v25 + 16))(v12, *(void *)(v29 + 48) + *(void *)(v25 + 72) * v34, v13);
          uint64_t v35 = 0;
          goto LABEL_8;
        }
        int64_t v44 = v32 + 1;
        if (__OFADD__(v32, 1))
        {
          __break(1u);
          goto LABEL_42;
        }
        int64_t v45 = (unint64_t)(v31 + 64) >> 6;
        if (v44 >= v45)
        {
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          goto LABEL_8;
        }
        unint64_t v46 = *(void *)(v30 + 8 * v44);
        if (v46) {
          goto LABEL_17;
        }
        if (v32 + 2 >= v45) {
          goto LABEL_34;
        }
        unint64_t v46 = *(void *)(v30 + 8 * (v32 + 2));
        if (v46)
        {
          int64_t v44 = v32 + 2;
LABEL_17:
          uint64_t v61 = (v46 - 1) & v46;
          unint64_t v34 = __clz(__rbit64(v46)) + (v44 << 6);
          int64_t v32 = v44;
          goto LABEL_7;
        }
        if (v32 + 3 >= v45)
        {
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          v32 += 2;
          goto LABEL_8;
        }
        unint64_t v46 = *(void *)(v30 + 8 * (v32 + 3));
        if (v46)
        {
          int64_t v44 = v32 + 3;
          goto LABEL_17;
        }
        int64_t v44 = v32 + 4;
        if (v32 + 4 < v45)
        {
          unint64_t v46 = *(void *)(v30 + 8 * v44);
          if (v46) {
            goto LABEL_17;
          }
          int64_t v44 = v45 - 1;
          int64_t v49 = v32 + 5;
          while (v45 != v49)
          {
            unint64_t v46 = *(void *)(v30 + 8 * v49++);
            if (v46)
            {
              int64_t v44 = v49 - 1;
              goto LABEL_17;
            }
          }
LABEL_34:
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          int64_t v32 = v44;
          goto LABEL_8;
        }
        uint64_t v61 = 0;
        uint64_t v35 = 1;
        v32 += 3;
LABEL_8:
        (*v60)(v12, v35, 1, v13);
        *a5 = v29;
        a5[1] = v30;
        a5[2] = v62;
        a5[3] = v32;
        a5[4] = v61;
        if ((*v59)(v12, 1, v13) == 1)
        {
          sub_100522F00((uint64_t)v12, (uint64_t *)&unk_10169B4A0);
          uint64_t v50 = v65;
          swift_retain();
          return (void *)sub_10052CBDC(v54, v52, v53, v50);
        }
        (*v58)(v66, v12, v13);
        uint64_t v36 = v65;
        sub_10103567C(&qword_101672918, 255, (void (*)(uint64_t))&type metadata accessor for IndexPath);
        uint64_t v37 = dispatch thunk of Hashable._rawHashValue(seed:)();
        uint64_t v38 = -1 << *(unsigned char *)(v36 + 32);
        unint64_t v39 = v37 & ~v38;
        if ((*(void *)(v63 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39)) {
          break;
        }
        uint64_t v28 = *v27;
LABEL_4:
        uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v28)(v66, v13);
      }
      uint64_t v62 = (unint64_t)v27 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v40 = ~v38;
      uint64_t v41 = *(void *)(v25 + 72);
      uint64_t v42 = *(void (**)(char *, unint64_t, uint64_t))(v25 + 16);
      while (1)
      {
        v42(v17, *(void *)(v65 + 48) + v41 * v39, v13);
        sub_10103567C(&qword_10169A040, 255, (void (*)(uint64_t))&type metadata accessor for IndexPath);
        char v43 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v28 = *v27;
        (*v27)(v17, v13);
        if (v43) {
          break;
        }
        unint64_t v39 = (v39 + 1) & v40;
        if (((*(void *)(v63 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
        {
          unint64_t v12 = v56;
          a5 = v57;
          uint64_t v25 = v55;
          goto LABEL_4;
        }
      }
      uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v28)(v66, v13);
      uint64_t v47 = (v39 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v25 = v55;
      uint64_t v48 = *(unint64_t *)((char *)v54 + v47);
      *(unint64_t *)((char *)v54 + v47) = v48 & ~(1 << v39);
      unint64_t v12 = v56;
      a5 = v57;
    }
    while ((v48 & (1 << v39)) == 0);
    uint64_t v26 = v53 - 1;
    if (__OFSUB__(v53, 1))
    {
LABEL_42:
      __break(1u);
      return result;
    }
    if (v53 != 1) {
      continue;
    }
    return &_swiftEmptySetSingleton;
  }
}

void sub_101030EBC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, void (*a6)(void), void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = a5;
  uint64_t v9 = *(void *)(a3 + 16);
  *(void *)(a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v10 = v9 - 1;
  uint64_t v42 = a3 + 56;
  while (2)
  {
    uint64_t v38 = v10;
    do
    {
      while (1)
      {
        if ((*v7 & 0x8000000000000000) == 0)
        {
          int64_t v12 = v7[3];
          unint64_t v11 = v7[4];
          if (v11)
          {
            uint64_t v13 = (v11 - 1) & v11;
            unint64_t v14 = __clz(__rbit64(v11)) | (v12 << 6);
LABEL_7:
            uint64_t v15 = *(void **)(*(void *)(*v7 + 48) + 8 * v14);
            id v16 = v15;
            goto LABEL_8;
          }
          int64_t v29 = v12 + 1;
          if (__OFADD__(v12, 1))
          {
            __break(1u);
            goto LABEL_49;
          }
          int64_t v30 = (unint64_t)(v7[2] + 64) >> 6;
          if (v29 >= v30)
          {
            uint64_t v15 = 0;
            uint64_t v13 = 0;
            goto LABEL_8;
          }
          uint64_t v31 = v7[1];
          unint64_t v32 = *(void *)(v31 + 8 * v29);
          if (v32)
          {
LABEL_22:
            uint64_t v13 = (v32 - 1) & v32;
            unint64_t v14 = __clz(__rbit64(v32)) + (v29 << 6);
            int64_t v12 = v29;
            goto LABEL_7;
          }
          int64_t v34 = v12 + 2;
          if (v12 + 2 >= v30) {
            goto LABEL_41;
          }
          unint64_t v32 = *(void *)(v31 + 8 * v34);
          if (v32)
          {
LABEL_29:
            int64_t v29 = v34;
            goto LABEL_22;
          }
          if (v12 + 3 < v30)
          {
            unint64_t v32 = *(void *)(v31 + 8 * (v12 + 3));
            if (v32)
            {
              int64_t v29 = v12 + 3;
              goto LABEL_22;
            }
            int64_t v34 = v12 + 4;
            if (v12 + 4 >= v30)
            {
              uint64_t v15 = 0;
              uint64_t v13 = 0;
              v12 += 3;
LABEL_8:
              v7[3] = v12;
              v7[4] = v13;
              if (!v15) {
                goto LABEL_47;
              }
              goto LABEL_12;
            }
            unint64_t v32 = *(void *)(v31 + 8 * v34);
            if (v32) {
              goto LABEL_29;
            }
            int64_t v29 = v12 + 5;
            if (v12 + 5 < v30)
            {
              unint64_t v32 = *(void *)(v31 + 8 * v29);
              if (v32) {
                goto LABEL_22;
              }
              int64_t v29 = v30 - 1;
              int64_t v35 = v12 + 6;
              while (v30 != v35)
              {
                unint64_t v32 = *(void *)(v31 + 8 * v35++);
                if (v32)
                {
                  int64_t v29 = v35 - 1;
                  goto LABEL_22;
                }
              }
LABEL_41:
              uint64_t v15 = 0;
              uint64_t v13 = 0;
              int64_t v12 = v29;
              goto LABEL_8;
            }
          }
          uint64_t v15 = 0;
          uint64_t v13 = 0;
          int64_t v12 = v34;
          goto LABEL_8;
        }
        if (!__CocoaSet.Iterator.next()()
          || (a6(0), swift_unknownObjectRetain(), swift_dynamicCast(), uint64_t v15 = v43, swift_unknownObjectRelease(), !v43))
        {
LABEL_47:
          swift_retain();
          a7(a1, a2, v38, a3);
          return;
        }
LABEL_12:
        Swift::Int v17 = NSObject._rawHashValue(seed:)(*(void *)(a3 + 40));
        uint64_t v18 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v19 = v17 & ~v18;
        unint64_t v20 = v19 >> 6;
        uint64_t v21 = 1 << v19;
        if (((1 << v19) & *(void *)(v42 + 8 * (v19 >> 6))) == 0) {
          goto LABEL_3;
        }
        a6(0);
        id v22 = *(id *)(*(void *)(a3 + 48) + 8 * v19);
        char v23 = static NSObject.== infix(_:_:)();

        if (v23) {
          break;
        }
        uint64_t v24 = ~v18;
        for (unint64_t i = v19 + 1; ; unint64_t i = v26 + 1)
        {
          unint64_t v26 = i & v24;
          if (((*(void *)(v42 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
            break;
          }
          id v27 = *(id *)(*(void *)(a3 + 48) + 8 * v26);
          char v28 = static NSObject.== infix(_:_:)();

          if (v28)
          {

            unint64_t v20 = v26 >> 6;
            uint64_t v21 = 1 << v26;
            goto LABEL_25;
          }
        }
LABEL_3:

        uint64_t v7 = a5;
      }

LABEL_25:
      uint64_t v7 = a5;
      uint64_t v33 = *(void *)(a1 + 8 * v20);
      *(void *)(a1 + 8 * v20) = v33 & ~v21;
    }
    while ((v21 & v33) == 0);
    uint64_t v10 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_49:
      __break(1u);
      return;
    }
    if (v38 != 1) {
      continue;
    }
    break;
  }
}

uint64_t sub_101031240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for CRLTransactableHashableWrapper();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a4;
  return result;
}

uint64_t sub_101031278(void *a1, unint64_t a2, int a3, uint64_t a4)
{
  LODWORD(v114) = a3;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(unint64_t **)(v7 - 8);
  uint64_t v10 = __chkstk_darwin(v7, v9);
  uint64_t v109 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10, v12);
  uint64_t v15 = (char *)&v104 - v14;
  uint64_t v17 = __chkstk_darwin(v13, v16);
  unint64_t v19 = (char *)&v104 - v18;
  uint64_t v21 = __chkstk_darwin(v17, v20);
  char v23 = (char *)&v104 - v22;
  __chkstk_darwin(v21, v24);
  unint64_t v111 = (uint64_t *)((char *)&v104 - v25);
  uint64_t v26 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v28 = __chkstk_darwin(v26 - 8, v27);
  uint64_t v108 = (char *)&v104 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28, v30);
  unint64_t v32 = (char *)&v104 - v31;
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active) != 1)
  {
    __break(1u);
LABEL_46:
    a2 = sub_100F617D8(0, *(void *)(a2 + 16) + 1, 1, a2);
    *uint64_t v8 = a2;
    goto LABEL_41;
  }
  uint64_t v106 = v19;
  unint64_t v107 = v23;
  int64_t v110 = v15;
  int v113 = v8;
  *(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableAffectedItemSetNeedsUpdate) = 1;
  type metadata accessor for CRLTransactableHashableWrapper();
  uint64_t v33 = swift_allocObject();
  uint64_t v115 = v7;
  uint64_t v34 = v33;
  *(void *)(v33 + 16) = a1;
  *(void *)(v33 + 24) = &off_101518040;
  uint64_t v112 = v33;
  if (a2)
  {
    int64_t v35 = (uint64_t *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects);
    swift_beginAccess();
    uint64_t v36 = *v35;
    uint64_t v37 = a1;
    uint64_t v105 = a1;
    swift_bridgeObjectRetain();
    uint64_t v38 = v34;
    char v39 = sub_1006E4038(v34, v36);
    swift_bridgeObjectRelease();
    if (v39)
    {
      swift_beginAccess();
      sub_100D16184(v38);
      swift_endAccess();
      swift_release();
      swift_beginAccess();
      sub_100D16184(v38);
      swift_endAccess();
      swift_release();
      swift_beginAccess();
      sub_10095AF80(v38);
      swift_endAccess();
      swift_unknownObjectRelease();
      swift_beginAccess();
      swift_retain();
      sub_100CB4EEC(v116, v38);
      swift_endAccess();
      swift_release();
      swift_beginAccess();
      swift_retain();
      sub_100CB4EEC(v116, v38);
      swift_endAccess();
      uint64_t v40 = swift_release();
      if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState) == 1)
      {
        uint64_t v41 = (uint64_t (*)(void, void))v111;
        (*(void (**)(uint64_t))((swift_isaMask & *v105) + 0x88))(v40);
        swift_beginAccess();
        sub_100D16510((uint64_t)v41, (uint64_t)v32);
        ((void (*)(uint64_t (*)(void, void), uint64_t))v113[1])(v41, v115);
        sub_100522F00((uint64_t)v32, (uint64_t *)&unk_101674520);
        swift_endAccess();
      }
      uint64_t v42 = 1;
      char v43 = v37;
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v37 = a1;
    swift_unknownObjectRetain();
    uint64_t v38 = v34;
  }
  swift_beginAccess();
  uint64_t v44 = sub_10095AF80(v38);
  uint64_t v46 = v45;
  uint64_t v47 = swift_endAccess();
  uint64_t v48 = v38;
  if (v44)
  {
    uint64_t v49 = swift_allocObject();
    *(void *)(v49 + 16) = v44;
    *(void *)(v49 + 24) = v46;
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_100CB4EEC(v116, v49);
    swift_endAccess();
    swift_unknownObjectRelease();
    swift_release();
    char v43 = v37;
  }
  else
  {
    char v43 = v37;
    uint64_t v50 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v37) + 0x300))(v47);
    uint64_t v52 = v51;
    uint64_t v53 = swift_allocObject();
    *(void *)(v53 + 16) = v50;
    *(void *)(v53 + 24) = v52;
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_100CB4EEC(v116, v53);
    swift_endAccess();
    swift_unknownObjectRelease();
    swift_release();
  }
  swift_beginAccess();
  swift_retain();
  sub_100CB4EEC(v116, v48);
  swift_endAccess();
  uint64_t v54 = swift_release();
  if ((a2 & 1) == 0 && (v114 & 1) == 0)
  {
    uint64_t v55 = (uint64_t *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects);
    swift_beginAccess();
    uint64_t v56 = *v55;
    swift_bridgeObjectRetain();
    char v57 = sub_1006E4038(v48, v56);
    uint64_t v54 = swift_bridgeObjectRelease();
    if (v57)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"objectDeleted(_:allowDeletingNewlyCreated:deletedAsOrphan:)", 59, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 359, (uint64_t)"A deleted object should not be listed as a created object", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"objectDeleted(_:allowDeletingNewlyCreated:deletedAsOrphan:)", 59, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 359);
    }
  }
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState) == 1)
  {
    unint64_t v58 = v109;
    (*(void (**)(uint64_t))((swift_isaMask & *v43) + 0x88))(v54);
    swift_beginAccess();
    uint64_t v59 = (uint64_t (*)(void, void))v111;
    sub_100CB4BC8((uint64_t)v111, v58);
    ((void (*)(uint64_t (*)(void, void), uint64_t))v113[1])(v59, v115);
    swift_endAccess();
  }
  uint64_t v42 = 0;
LABEL_18:
  uint64_t v60 = (uint64_t *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner);
  uint64_t v61 = *(void *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v63 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v61 + 32);
  swift_unknownObjectRetain();
  v63(v43, &off_101518040, v42, ObjectType, v61);
  swift_unknownObjectRelease();
  if ((v114 & 1) == 0) {
    return swift_release();
  }
  type metadata accessor for CRLBoardItem(0);
  uint64_t v64 = (void *)swift_dynamicCastClass();
  if (v64)
  {
    uint64_t v65 = v64;
    uint64_t v66 = *(void (**)(uint64_t))((swift_isaMask & *v64) + 0xB8);
    uint64_t v67 = swift_unknownObjectRetain();
    id v68 = v108;
    v66(v67);
    uint64_t v69 = v113;
    uint64_t v70 = v115;
    if (((unsigned int (*)(id, uint64_t, uint64_t))v113[6])(v68, 1, v115) == 1)
    {

      uint64_t v64 = (void *)sub_100522F00((uint64_t)v68, (uint64_t *)&unk_101674520);
    }
    else
    {
      uint64_t v114 = v43;
      ((void (*)(char *, id, uint64_t))v69[4])(v107, v68, v70);
      uint64_t v71 = v69;
      if (qword_10166FBD0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v72 = (void *)static OS_os_log.boardItemLifecycle;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1011807B0;
      uint64_t v74 = *(void (**)(void))((swift_isaMask & *v65) + 0x88);
      uint64_t v108 = v72;
      uint64_t v75 = v106;
      v74();
      uint64_t v76 = UUID.uuidString.getter();
      uint64_t v78 = v77;
      uint64_t v79 = (uint64_t *)v71[1];
      uint64_t v109 = (char *)(v71 + 1);
      unint64_t v111 = v79;
      ((void (*)(char *, uint64_t))v79)(v75, v115);
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v80 = sub_100528BE4();
      *(void *)(inited + 64) = v80;
      *(void *)(inited + 32) = v76;
      uint64_t v106 = (char *)(inited + 32);
      *(void *)(inited + 40) = v78;
      char v43 = v114;
      swift_unknownObjectRetain();
      id v81 = [v65 description];
      uint64_t v82 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v84 = v83;

      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v80;
      *(void *)(inited + 72) = v82;
      *(void *)(inited + 80) = v84;
      int v85 = v107;
      uint64_t v86 = UUID.uuidString.getter();
      *(void *)(inited + 136) = &type metadata for String;
      *(void *)(inited + 144) = v80;
      *(void *)(inited + 112) = v86;
      *(void *)(inited + 120) = v87;
      uint64_t v88 = 1702195828;
      if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_trackChanges)) {
        uint64_t v89 = 1702195828;
      }
      else {
        uint64_t v89 = 0x65736C6166;
      }
      if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_trackChanges)) {
        unint64_t v90 = 0xE400000000000000;
      }
      else {
        unint64_t v90 = 0xE500000000000000;
      }
      *(void *)(inited + 176) = &type metadata for String;
      *(void *)(inited + 184) = v80;
      *(void *)(inited + 152) = v89;
      *(void *)(inited + 160) = v90;
      if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoable)) {
        uint64_t v91 = 1702195828;
      }
      else {
        uint64_t v91 = 0x65736C6166;
      }
      if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoable)) {
        unint64_t v92 = 0xE400000000000000;
      }
      else {
        unint64_t v92 = 0xE500000000000000;
      }
      *(void *)(inited + 216) = &type metadata for String;
      *(void *)(inited + 224) = v80;
      *(void *)(inited + 192) = v91;
      *(void *)(inited + 200) = v92;
      if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState))
      {
        unint64_t v93 = 0xE400000000000000;
      }
      else
      {
        uint64_t v88 = 0x65736C6166;
        unint64_t v93 = 0xE500000000000000;
      }
      *(void *)(inited + 256) = &type metadata for String;
      *(void *)(inited + 264) = v80;
      *(void *)(inited + 232) = v88;
      *(void *)(inited + 240) = v93;
      uint64_t v94 = *v60;
      swift_getObjectType();
      v116[0] = v94;
      uint64_t v95 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(inited + 296) = &type metadata for String;
      *(void *)(inited + 304) = v80;
      *(void *)(inited + 272) = v95;
      *(void *)(inited + 280) = v96;
      uint64_t v97 = static os_log_type_t.default.getter();
      id v98 = v108;
      sub_100BAC898((uint64_t)v108, (uint64_t)&_mh_execute_header, v97, (uint64_t)"⭕ deleting orphan [%{public}@%{public}@] with parent [%{public}@] during transaction that is tracked: [%{public}@], undoable: [%{public}@], marking: [%{public}@] for owner: [%{public}@]", 187, 0, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      uint64_t v64 = (void *)((uint64_t (*)(char *, uint64_t))v111)(v85, v115);
    }
  }
  unint64_t v19 = v110;
  (*(void (**)(void *))((swift_isaMask & *v43) + 0x88))(v64);
  uint64_t v8 = (unint64_t *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedOrphans);
  swift_beginAccess();
  a2 = *v8;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v8 = a2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_46;
  }
LABEL_41:
  uint64_t v100 = v115;
  unint64_t v102 = *(void *)(a2 + 16);
  unint64_t v101 = *(void *)(a2 + 24);
  if (v102 >= v101 >> 1)
  {
    a2 = sub_100F617D8(v101 > 1, v102 + 1, 1, a2);
    *uint64_t v8 = a2;
  }
  *(void *)(a2 + 16) = v102 + 1;
  ((void (*)(unint64_t, char *, uint64_t))v113[4])(a2+ ((*((unsigned __int8 *)v113 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v113 + 80))+ v113[9] * v102, v19, v100);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_101031F00(char *a1, unint64_t a2, int a3, uint64_t a4)
{
  LODWORD(v117) = a3;
  uint64_t v116 = type metadata accessor for UUID();
  uint64_t v7 = *(unint64_t **)(v116 - 8);
  uint64_t v9 = __chkstk_darwin(v116, v8);
  unint64_t v111 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v14 = (char *)&v107 - v13;
  uint64_t v16 = __chkstk_darwin(v12, v15);
  uint64_t v18 = (char *)&v107 - v17;
  uint64_t v20 = __chkstk_darwin(v16, v19);
  uint64_t v22 = (char *)&v107 - v21;
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v107 - v24;
  uint64_t v26 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v28 = __chkstk_darwin(v26 - 8, v27);
  int64_t v110 = (char *)&v107 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28, v30);
  unint64_t v32 = (char *)&v107 - v31;
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active) != 1)
  {
    __break(1u);
LABEL_46:
    a2 = sub_100F617D8(0, *(void *)(a2 + 16) + 1, 1, a2);
    *uint64_t v7 = a2;
    goto LABEL_41;
  }
  uint64_t v112 = v25;
  int v113 = v14;
  uint64_t v108 = v18;
  uint64_t v109 = v22;
  *(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableAffectedItemSetNeedsUpdate) = 1;
  type metadata accessor for CRLTransactableHashableWrapper();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = a1;
  *(void *)(v33 + 24) = &off_101518040;
  uint64_t v114 = v33;
  uint64_t v115 = v7;
  uint64_t v118 = a1;
  if (a2)
  {
    uint64_t v34 = (uint64_t *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects);
    swift_beginAccess();
    uint64_t v35 = *v34;
    unint64_t v107 = a1;
    swift_bridgeObjectRetain();
    uint64_t v36 = v33;
    char v37 = sub_1006E4038(v33, v35);
    swift_bridgeObjectRelease();
    if (v37)
    {
      swift_beginAccess();
      sub_100D16184(v36);
      swift_endAccess();
      swift_release();
      swift_beginAccess();
      sub_100D16184(v36);
      swift_endAccess();
      swift_release();
      swift_beginAccess();
      sub_10095AF80(v36);
      swift_endAccess();
      swift_unknownObjectRelease();
      swift_beginAccess();
      swift_retain();
      sub_100CB4EEC(v119, v36);
      swift_endAccess();
      swift_release();
      swift_beginAccess();
      swift_retain();
      sub_100CB4EEC(v119, v36);
      swift_endAccess();
      swift_release();
      if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState) == 1)
      {
        uint64_t v38 = *(void (**)(uint64_t))(**(void **)&v107[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                             + 256);
        uint64_t v39 = swift_retain();
        uint64_t v40 = (uint64_t)v112;
        v38(v39);
        swift_release();
        swift_beginAccess();
        sub_100D16510(v40, (uint64_t)v32);
        ((void (*)(uint64_t, uint64_t))v115[1])(v40, v116);
        sub_100522F00((uint64_t)v32, (uint64_t *)&unk_101674520);
        swift_endAccess();
      }
      uint64_t v41 = 1;
      uint64_t v42 = v118;
      goto LABEL_18;
    }
  }
  else
  {
    swift_unknownObjectRetain();
    uint64_t v36 = v33;
  }
  swift_beginAccess();
  uint64_t v43 = sub_10095AF80(v36);
  uint64_t v45 = v44;
  swift_endAccess();
  if (v43)
  {
    uint64_t v46 = v36;
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 16) = v43;
    *(void *)(v47 + 24) = v45;
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_100CB4EEC(v119, v47);
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v48 = v118;
    swift_retain();
    uint64_t v49 = sub_100606584(0);
    swift_release();
    uint64_t v50 = *(void **)&v48[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store];
    uint64_t v51 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLFreehandDrawingShapeItem());
    *(void *)&v51[OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokes] = 0;
    *(void *)&v51[OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace] = 0;
    *(void *)&v51[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke] = 0;
    *(void *)&v51[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v50;
    *(void *)&v51[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v49;
    uint64_t v52 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
    v120.receiver = v51;
    v120.super_class = v52;
    id v53 = v50;
    uint64_t v46 = v114;
    id v54 = [super init];
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = v54;
    *(void *)(v55 + 24) = &off_101518040;
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_100CB4EEC(v119, v55);
    swift_endAccess();
  }
  swift_release();
  swift_beginAccess();
  swift_retain();
  sub_100CB4EEC(v119, v46);
  swift_endAccess();
  swift_release();
  uint64_t v56 = v116;
  uint64_t v42 = v118;
  if ((a2 & 1) == 0 && (v117 & 1) == 0)
  {
    char v57 = (uint64_t *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects);
    swift_beginAccess();
    uint64_t v58 = *v57;
    swift_bridgeObjectRetain();
    char v59 = sub_1006E4038(v46, v58);
    swift_bridgeObjectRelease();
    if (v59)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"objectDeleted(_:allowDeletingNewlyCreated:deletedAsOrphan:)", 59, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 359, (uint64_t)"A deleted object should not be listed as a created object", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
      uint64_t v42 = v118;
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"objectDeleted(_:allowDeletingNewlyCreated:deletedAsOrphan:)", 59, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 359);
    }
  }
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState) == 1)
  {
    uint64_t v60 = *(void (**)(uint64_t))(**(void **)&v42[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                         + 256);
    uint64_t v61 = swift_retain();
    uint64_t v62 = v111;
    v60(v61);
    swift_release();
    swift_beginAccess();
    uint64_t v63 = (uint64_t)v112;
    sub_100CB4BC8((uint64_t)v112, v62);
    ((void (*)(uint64_t, uint64_t))v115[1])(v63, v56);
    swift_endAccess();
  }
  uint64_t v41 = 0;
LABEL_18:
  uint64_t v64 = (uint64_t *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner);
  uint64_t v65 = *(void *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v67 = *(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v65 + 32);
  swift_unknownObjectRetain();
  v67(v42, &off_101518040, v41, ObjectType, v65);
  swift_unknownObjectRelease();
  if ((v117 & 1) == 0) {
    return swift_release();
  }
  type metadata accessor for CRLBoardItem(0);
  id v68 = (void *)swift_dynamicCastClass();
  unint64_t v32 = (char *)v116;
  if (v68)
  {
    uint64_t v69 = v68;
    uint64_t v70 = *(void (**)(uint64_t))((swift_isaMask & *v68) + 0xB8);
    uint64_t v71 = swift_unknownObjectRetain();
    uint64_t v72 = (uint64_t)v110;
    v70(v71);
    uint64_t v73 = v115;
    if (((unsigned int (*)(uint64_t, uint64_t, char *))v115[6])(v72, 1, v32) == 1)
    {

      sub_100522F00(v72, (uint64_t *)&unk_101674520);
    }
    else
    {
      ((void (*)(char *, uint64_t, char *))v73[4])(v109, v72, v32);
      if (qword_10166FBD0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v74 = (void *)static OS_os_log.boardItemLifecycle;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1011807B0;
      uint64_t v76 = *(void (**)(void))((swift_isaMask & *v69) + 0x88);
      unint64_t v111 = v74;
      uint64_t v77 = v108;
      v76();
      uint64_t v78 = UUID.uuidString.getter();
      uint64_t v80 = v79;
      id v81 = (void (*)(char *, char *))v115[1];
      uint64_t v112 = (char *)(v115 + 1);
      uint64_t v117 = v81;
      v81(v77, v32);
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v82 = sub_100528BE4();
      *(void *)(inited + 64) = v82;
      *(void *)(inited + 32) = v78;
      int64_t v110 = (char *)(inited + 32);
      *(void *)(inited + 40) = v80;
      uint64_t v42 = v118;
      swift_unknownObjectRetain();
      id v83 = [v69 description];
      uint64_t v84 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v86 = v85;

      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v82;
      *(void *)(inited + 72) = v84;
      *(void *)(inited + 80) = v86;
      uint64_t v87 = v109;
      uint64_t v88 = UUID.uuidString.getter();
      *(void *)(inited + 136) = &type metadata for String;
      *(void *)(inited + 144) = v82;
      *(void *)(inited + 112) = v88;
      *(void *)(inited + 120) = v89;
      uint64_t v90 = 1702195828;
      if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_trackChanges)) {
        uint64_t v91 = 1702195828;
      }
      else {
        uint64_t v91 = 0x65736C6166;
      }
      if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_trackChanges)) {
        unint64_t v92 = 0xE400000000000000;
      }
      else {
        unint64_t v92 = 0xE500000000000000;
      }
      *(void *)(inited + 176) = &type metadata for String;
      *(void *)(inited + 184) = v82;
      *(void *)(inited + 152) = v91;
      *(void *)(inited + 160) = v92;
      if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoable)) {
        uint64_t v93 = 1702195828;
      }
      else {
        uint64_t v93 = 0x65736C6166;
      }
      if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoable)) {
        unint64_t v94 = 0xE400000000000000;
      }
      else {
        unint64_t v94 = 0xE500000000000000;
      }
      *(void *)(inited + 216) = &type metadata for String;
      *(void *)(inited + 224) = v82;
      *(void *)(inited + 192) = v93;
      *(void *)(inited + 200) = v94;
      if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState))
      {
        unint64_t v95 = 0xE400000000000000;
      }
      else
      {
        uint64_t v90 = 0x65736C6166;
        unint64_t v95 = 0xE500000000000000;
      }
      *(void *)(inited + 256) = &type metadata for String;
      *(void *)(inited + 264) = v82;
      *(void *)(inited + 232) = v90;
      *(void *)(inited + 240) = v95;
      uint64_t v96 = *v64;
      swift_getObjectType();
      v119[0] = v96;
      uint64_t v97 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(inited + 296) = &type metadata for String;
      *(void *)(inited + 304) = v82;
      unint64_t v32 = (char *)v116;
      *(void *)(inited + 272) = v97;
      *(void *)(inited + 280) = v98;
      uint64_t v99 = static os_log_type_t.default.getter();
      uint64_t v100 = v111;
      sub_100BAC898((uint64_t)v111, (uint64_t)&_mh_execute_header, v99, (uint64_t)"⭕ deleting orphan [%{public}@%{public}@] with parent [%{public}@] during transaction that is tracked: [%{public}@], undoable: [%{public}@], marking: [%{public}@] for owner: [%{public}@]", 187, 0, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      v117(v87, v32);
    }
  }
  unint64_t v101 = *(void (**)(uint64_t))(**(void **)&v42[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  uint64_t v102 = swift_retain();
  uint64_t v22 = v113;
  v101(v102);
  swift_release();
  uint64_t v7 = (unint64_t *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedOrphans);
  swift_beginAccess();
  a2 = *v7;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v7 = a2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_46;
  }
LABEL_41:
  unint64_t v105 = *(void *)(a2 + 16);
  unint64_t v104 = *(void *)(a2 + 24);
  if (v105 >= v104 >> 1)
  {
    a2 = sub_100F617D8(v104 > 1, v105 + 1, 1, a2);
    *uint64_t v7 = a2;
  }
  *(void *)(a2 + 16) = v105 + 1;
  ((void (*)(unint64_t, char *, char *))v115[4])(a2+ ((*((unsigned __int8 *)v115 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v115 + 80))+ v115[9] * v105, v22, v32);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_101032C58(uint64_t a1, char a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v113 = a5;
  LODWORD(v116) = a3;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void **)(v10 - 8);
  uint64_t v13 = __chkstk_darwin(v10, v12);
  int64_t v110 = (char *)&v105 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13, v15);
  uint64_t v18 = (char *)&v105 - v17;
  uint64_t v20 = __chkstk_darwin(v16, v19);
  uint64_t v22 = (char *)&v105 - v21;
  uint64_t v24 = __chkstk_darwin(v20, v23);
  uint64_t v26 = (char *)&v105 - v25;
  __chkstk_darwin(v24, v27);
  uint64_t v112 = (uint64_t)&v105 - v28;
  uint64_t v29 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v31 = __chkstk_darwin(v29 - 8, v30);
  uint64_t v109 = (void (*)(char *, char *))((char *)&v105 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v31, v33);
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active) != 1)
  {
    __break(1u);
LABEL_46:
    uint64_t v18 = (char *)sub_100F617D8(0, *((void *)v18 + 2) + 1, 1, (unint64_t)v18);
    *uint64_t v11 = v18;
    goto LABEL_41;
  }
  uint64_t v106 = (uint64_t)&v105 - v34;
  unint64_t v107 = v22;
  uint64_t v108 = v26;
  uint64_t v114 = v11;
  *(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableAffectedItemSetNeedsUpdate) = 1;
  type metadata accessor for CRLTransactableHashableWrapper();
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = a1;
  *(void *)(v35 + 24) = a6;
  uint64_t v117 = v35;
  uint64_t v118 = (char *)v10;
  uint64_t v115 = a4;
  char v36 = a2;
  unint64_t v111 = v18;
  if (a2)
  {
    char v37 = (uint64_t *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects);
    swift_beginAccess();
    uint64_t v38 = a1;
    uint64_t v39 = a6;
    uint64_t v40 = *v37;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    char v41 = sub_1006E4038(v35, v40);
    a6 = v39;
    a1 = v38;
    a4 = v115;
    swift_bridgeObjectRelease();
    if (v41)
    {
      swift_beginAccess();
      sub_100D16184(v35);
      swift_endAccess();
      swift_release();
      swift_beginAccess();
      sub_100D16184(v35);
      swift_endAccess();
      swift_release();
      swift_beginAccess();
      sub_10095AF80(v35);
      swift_endAccess();
      swift_unknownObjectRelease();
      swift_beginAccess();
      swift_retain();
      sub_100CB4EEC(v119, v35);
      swift_endAccess();
      swift_release();
      swift_beginAccess();
      swift_retain();
      sub_100CB4EEC(v119, v35);
      swift_endAccess();
      swift_release();
      if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState) == 1)
      {
        uint64_t v42 = v112;
        (*(void (**)(uint64_t, uint64_t))(a6 + 32))(v113, a6);
        swift_beginAccess();
        uint64_t v43 = v106;
        sub_100D16510(v42, v106);
        ((void (*)(uint64_t, char *))v114[1])(v42, v118);
        sub_100522F00(v43, (uint64_t *)&unk_101674520);
        swift_endAccess();
      }
      uint64_t v44 = 1;
      goto LABEL_18;
    }
  }
  else
  {
    swift_unknownObjectRetain();
  }
  swift_beginAccess();
  uint64_t v45 = sub_10095AF80(v35);
  uint64_t v47 = v46;
  swift_endAccess();
  if (v45)
  {
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = v45;
    *(void *)(v48 + 24) = v47;
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_100CB4EEC(v119, v48);
  }
  else
  {
    uint64_t v49 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 48))(v113, a6);
    uint64_t v51 = v50;
    uint64_t v52 = swift_allocObject();
    *(void *)(v52 + 16) = v49;
    *(void *)(v52 + 24) = v51;
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_100CB4EEC(v119, v52);
  }
  swift_endAccess();
  swift_unknownObjectRelease();
  swift_release();
  swift_beginAccess();
  uint64_t v53 = v117;
  swift_retain();
  sub_100CB4EEC(v119, v53);
  swift_endAccess();
  swift_release();
  id v54 = v118;
  if ((v36 & 1) == 0 && (v116 & 1) == 0)
  {
    uint64_t v55 = (uint64_t *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects);
    swift_beginAccess();
    uint64_t v56 = *v55;
    swift_bridgeObjectRetain();
    char v57 = sub_1006E4038(v53, v56);
    swift_bridgeObjectRelease();
    if (v57)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"objectDeleted(_:allowDeletingNewlyCreated:deletedAsOrphan:)", 59, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 359, (uint64_t)"A deleted object should not be listed as a created object", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
      a4 = v115;
      id v54 = v118;
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"objectDeleted(_:allowDeletingNewlyCreated:deletedAsOrphan:)", 59, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 359);
    }
  }
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState) == 1)
  {
    uint64_t v58 = v110;
    (*(void (**)(uint64_t, uint64_t))(a6 + 32))(v113, a6);
    swift_beginAccess();
    uint64_t v59 = v112;
    sub_100CB4BC8(v112, v58);
    ((void (*)(uint64_t, char *))v114[1])(v59, v54);
    swift_endAccess();
  }
  uint64_t v44 = 0;
LABEL_18:
  uint64_t v60 = a4;
  uint64_t v61 = a1;
  uint64_t v62 = (uint64_t *)(v60 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner);
  uint64_t v63 = *(void *)(v60 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v65 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 32);
  swift_unknownObjectRetain();
  uint64_t v112 = a6;
  v65(v61, a6, v44, ObjectType, v63);
  swift_unknownObjectRelease();
  if ((v116 & 1) == 0) {
    return swift_release();
  }
  type metadata accessor for CRLBoardItem(0);
  uint64_t v66 = (void *)swift_dynamicCastClass();
  uint64_t v22 = v118;
  uint64_t v67 = v115;
  if (v66)
  {
    id v68 = v66;
    uint64_t v69 = *(void (**)(uint64_t))((swift_isaMask & *v66) + 0xB8);
    uint64_t v70 = swift_unknownObjectRetain();
    uint64_t v71 = v22;
    uint64_t v72 = (uint64_t)v109;
    v69(v70);
    uint64_t v73 = v114;
    if (((unsigned int (*)(uint64_t, uint64_t, char *))v114[6])(v72, 1, v71) == 1)
    {
      swift_unknownObjectRelease();
      sub_100522F00(v72, (uint64_t *)&unk_101674520);
      uint64_t v22 = v71;
      uint64_t v67 = v115;
    }
    else
    {
      ((void (*)(char *, uint64_t, char *))v73[4])(v108, v72, v71);
      if (qword_10166FBD0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v74 = (void *)static OS_os_log.boardItemLifecycle;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1011807B0;
      uint64_t v76 = *(void (**)(void))((swift_isaMask & *v68) + 0x88);
      int64_t v110 = v74;
      uint64_t v77 = v107;
      v76();
      uint64_t v78 = UUID.uuidString.getter();
      uint64_t v80 = v79;
      uint64_t v109 = (void (*)(char *, char *))v114[1];
      uint64_t v116 = v114 + 1;
      v109(v77, v118);
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v81 = sub_100528BE4();
      *(void *)(inited + 64) = v81;
      *(void *)(inited + 32) = v78;
      unint64_t v107 = (char *)(inited + 32);
      *(void *)(inited + 40) = v80;
      swift_unknownObjectRetain();
      id v82 = [v68 description];
      uint64_t v83 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v85 = v84;
      swift_unknownObjectRelease();

      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v81;
      *(void *)(inited + 72) = v83;
      *(void *)(inited + 80) = v85;
      uint64_t v86 = v108;
      uint64_t v87 = UUID.uuidString.getter();
      *(void *)(inited + 136) = &type metadata for String;
      *(void *)(inited + 144) = v81;
      *(void *)(inited + 112) = v87;
      *(void *)(inited + 120) = v88;
      uint64_t v89 = v115;
      uint64_t v90 = 1702195828;
      if (*(unsigned char *)(v115 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_trackChanges)) {
        uint64_t v91 = 1702195828;
      }
      else {
        uint64_t v91 = 0x65736C6166;
      }
      if (*(unsigned char *)(v115 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_trackChanges)) {
        unint64_t v92 = 0xE400000000000000;
      }
      else {
        unint64_t v92 = 0xE500000000000000;
      }
      *(void *)(inited + 176) = &type metadata for String;
      *(void *)(inited + 184) = v81;
      *(void *)(inited + 152) = v91;
      *(void *)(inited + 160) = v92;
      if (*(unsigned char *)(v89 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoable)) {
        uint64_t v93 = 1702195828;
      }
      else {
        uint64_t v93 = 0x65736C6166;
      }
      if (*(unsigned char *)(v89 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoable)) {
        unint64_t v94 = 0xE400000000000000;
      }
      else {
        unint64_t v94 = 0xE500000000000000;
      }
      *(void *)(inited + 216) = &type metadata for String;
      *(void *)(inited + 224) = v81;
      *(void *)(inited + 192) = v93;
      *(void *)(inited + 200) = v94;
      if (*(unsigned char *)(v89 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState))
      {
        unint64_t v95 = 0xE400000000000000;
      }
      else
      {
        uint64_t v90 = 0x65736C6166;
        unint64_t v95 = 0xE500000000000000;
      }
      *(void *)(inited + 256) = &type metadata for String;
      *(void *)(inited + 264) = v81;
      *(void *)(inited + 232) = v90;
      *(void *)(inited + 240) = v95;
      uint64_t v96 = *v62;
      swift_getObjectType();
      v119[0] = v96;
      uint64_t v97 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(inited + 296) = &type metadata for String;
      *(void *)(inited + 304) = v81;
      uint64_t v67 = v89;
      *(void *)(inited + 272) = v97;
      *(void *)(inited + 280) = v98;
      uint64_t v99 = static os_log_type_t.default.getter();
      uint64_t v100 = v110;
      sub_100BAC898((uint64_t)v110, (uint64_t)&_mh_execute_header, v99, (uint64_t)"⭕ deleting orphan [%{public}@%{public}@] with parent [%{public}@] during transaction that is tracked: [%{public}@], undoable: [%{public}@], marking: [%{public}@] for owner: [%{public}@]", 187, 0, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
      swift_unknownObjectRelease();

      uint64_t v22 = v118;
      v109(v86, v118);
    }
  }
  a6 = (uint64_t)v111;
  (*(void (**)(uint64_t))(v112 + 32))(v113);
  uint64_t v11 = (void *)(v67 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedOrphans);
  swift_beginAccess();
  uint64_t v18 = (char *)*v11;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v11 = v18;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_46;
  }
LABEL_41:
  unint64_t v103 = *((void *)v18 + 2);
  unint64_t v102 = *((void *)v18 + 3);
  if (v103 >= v102 >> 1)
  {
    uint64_t v18 = (char *)sub_100F617D8(v102 > 1, v103 + 1, 1, (unint64_t)v18);
    *uint64_t v11 = v18;
  }
  *((void *)v18 + 2) = v103 + 1;
  ((void (*)(char *, uint64_t, char *))v114[4])(&v18[((*((unsigned __int8 *)v114 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v114 + 80))+ v114[9] * v103], a6, v22);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1010338AC(uint64_t a1, char a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_modifications) = &_swiftEmptyDictionarySingleton;
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableModifications) = &_swiftEmptyDictionarySingleton;
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects) = &_swiftEmptySetSingleton;
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableCreatedObjects) = &_swiftEmptySetSingleton;
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects) = &_swiftEmptySetSingleton;
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedNewlyCreatedObjects) = &_swiftEmptySetSingleton;
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjectOriginalInstances) = &_swiftEmptySetSingleton;
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedOrphans) = _swiftEmptyArrayStorage;
  *(unsigned char *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState) = 0;
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedDeletedObjectIds) = &_swiftEmptySetSingleton;
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedCreatedObjectIds) = &_swiftEmptySetSingleton;
  *(unsigned char *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active) = 1;
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext__observableDelta) = 0;
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_affectedItemUUIDSetForUndoableItems) = &_swiftEmptySetSingleton;
  *(unsigned char *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableAffectedItemSetNeedsUpdate) = 0;
  uint64_t v15 = a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_id;
  uint64_t v16 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, a4, v16);
  uint64_t v17 = (void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner);
  *uint64_t v17 = a1;
  v17[1] = a8;
  *(unsigned char *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoable) = a2;
  *(unsigned char *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_trackChanges) = a3;
  *(unsigned char *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_dirtiesOwner) = a5;
  return a6;
}

uint64_t sub_101033A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v15 = __chkstk_darwin(v13, v14);
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v15, v18);
  if (*(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active) != 1)
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v49 = v21;
  uint64_t v50 = v19;
  uint64_t v48 = a4;
  uint64_t v46 = (uint64_t)&v45 - v20;
  if (a2 == 2)
  {
    if ((*(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoable) & 1) == 0)
    {
LABEL_4:
      int v22 = 0;
      goto LABEL_7;
    }
  }
  else if ((a2 & 1) == 0)
  {
    goto LABEL_4;
  }
  int v22 = 1;
  *(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableAffectedItemSetNeedsUpdate) = 1;
LABEL_7:
  type metadata accessor for CRLTransactableHashableWrapper();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a5;
  swift_beginAccess();
  swift_unknownObjectRetain();
  swift_retain();
  sub_100CB4EEC(v51, v7);
  swift_endAccess();
  swift_release();
  if (v22)
  {
    swift_beginAccess();
    swift_retain();
    sub_100CB4EEC(v51, v7);
    swift_endAccess();
    swift_release();
  }
  uint64_t v47 = v17;
  type metadata accessor for CRLContainerItem(0);
  uint64_t v23 = swift_dynamicCastClass();
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (!v23)
  {
    type metadata accessor for CRLBoard(0);
    uint64_t v32 = swift_dynamicCastClass();
    if (v32)
    {
      uint64_t v33 = v32;
      uint64_t v34 = *(void **)(v32 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
      swift_unknownObjectRetain();
      id v35 = v34;
      sub_100EBA390((unint64_t)v35, a2, a3);

      id v36 = *(id *)(v33 + OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer);
      sub_100EBA390((unint64_t)v36, a2, a3);
      swift_unknownObjectRelease();
    }
    goto LABEL_29;
  }
  uint64_t v24 = v23;
  uint64_t v25 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  uint64_t v26 = *(double **)(v23 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  swift_unknownObjectRetain();
  if (!v26)
  {
    sub_100846AB0();
    uint64_t v26 = *(double **)(v24 + v25);
  }
  if (v26) {
    unint64_t v5 = (unint64_t)v26;
  }
  else {
    unint64_t v5 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (v5 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v27) {
      goto LABEL_17;
    }
LABEL_28:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  uint64_t v27 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v27) {
    goto LABEL_28;
  }
LABEL_17:
  if (v27 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v27; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v30 = *(id *)(v5 + 8 * i + 32);
    }
    uint64_t v31 = v30;
    sub_100EB9DD8((unint64_t)v30, a2, a3);
  }
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = _swiftEmptyArrayStorage;
LABEL_29:
  char v37 = (uint64_t *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects);
  swift_beginAccess();
  uint64_t v38 = *v37;
  swift_bridgeObjectRetain();
  char v39 = sub_1006E4038(v7, v38);
  swift_bridgeObjectRelease();
  if (v39)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"objectCreated(_:undoableModification:)", 38, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 308, (uint64_t)"A created object should not be listed as a deleted object", 57, 2u, (uint64_t)v6);
    sub_1005598CC((uint64_t)v6, (uint64_t)"objectCreated(_:undoableModification:)", 38, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 308);
  }
  uint64_t v40 = *(void *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 24);
  swift_unknownObjectRetain();
  v42(a1, a5, ObjectType, v40);
  swift_unknownObjectRelease();
  if (*(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState) == 1)
  {
    uint64_t v43 = v47;
    (*(void (**)(uint64_t, uint64_t))(a5 + 32))(v48, a5);
    swift_beginAccess();
    uint64_t v44 = v46;
    sub_100CB4BC8(v46, v43);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v44, v50);
    swift_endAccess();
  }
  return swift_release();
}

uint64_t sub_101033F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for UUID();
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectRetain();
  UUID.init()();
  type metadata accessor for CRLTransactionContext(0);
  uint64_t v11 = swift_allocObject();
  return sub_1010338AC(a1, 0, 0, (uint64_t)v10, 0, v11, a3, a4);
}

uint64_t sub_10103405C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2;
  uint64_t v8 = type metadata accessor for UUID();
  __chkstk_darwin(v8, v9);
  uint64_t v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active) == 1)
  {
    uint64_t v60 = v10;
    type metadata accessor for CRLTransactableHashableWrapper();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a1;
    *(void *)(v13 + 24) = a2;
    uint64_t v61 = a2;
    uint64_t v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedNewlyCreatedObjects);
    swift_beginAccess();
    uint64_t v15 = *v14;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    char v16 = sub_1006E4038(v13, v15);
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0
      || (uint64_t v17 = (uint64_t *)(v5 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects),
          swift_beginAccess(),
          uint64_t v18 = *v17,
          swift_bridgeObjectRetain(),
          char v19 = sub_1006E4038(v13, v18),
          swift_bridgeObjectRelease(),
          (v19 & 1) != 0))
    {
      a2 = v61;
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8))(ObjectType, v61))
      {
        if (static UUID.== infix(_:_:)())
        {
          swift_release();
          return swift_release();
        }
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"willModify(_:undoableModification:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 220, (uint64_t)"Trying to modify a deleted object %@ that has a different transactionContext set on it already.", 95, 2u, (uint64_t)&_swiftEmptyArrayStorage);
        sub_100586FD4((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"Trying to modify a deleted object %@ that has a different transactionContext set on it already.");
        uint64_t v52 = &_swiftEmptyArrayStorage;
        uint64_t v53 = 220;
        goto LABEL_35;
      }
      if (qword_10166F9C8 == -1) {
        goto LABEL_9;
      }
      goto LABEL_30;
    }
    uint64_t v23 = v5 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_modifications;
    swift_beginAccess();
    uint64_t v59 = v23;
    if (*(void *)(*(void *)v23 + 16)
      && (swift_retain(),
          swift_bridgeObjectRetain(),
          sub_1009561F4(v13),
          char v25 = v24,
          swift_release(),
          swift_bridgeObjectRelease(),
          (v25 & 1) != 0))
    {
      uint64_t v26 = v61;
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8))(ObjectType, v61))
      {
        char v27 = static UUID.== infix(_:_:)();
        uint64_t v28 = (uint64_t *)v59;
        if (v27)
        {
          swift_release();
          goto LABEL_19;
        }
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"willModify(_:undoableModification:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 237, (uint64_t)"Trying to store a different copy of a CRLTransactable with the same UUID", 72, 2u, (uint64_t)&_swiftEmptyArrayStorage);
        sub_100586FD4((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"Trying to store a different copy of a CRLTransactable with the same UUID");
        uint64_t v52 = &_swiftEmptyArrayStorage;
        uint64_t v53 = 237;
      }
      else
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"willModify(_:undoableModification:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 239, (uint64_t)"Object already exists in modifiedObjects but does not have a transactionContext set", 83, 2u, (uint64_t)&_swiftEmptyArrayStorage);
        sub_100586FD4((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"Object already exists in modifiedObjects but does not have a transactionContext set");
        uint64_t v52 = &_swiftEmptyArrayStorage;
        uint64_t v53 = 239;
      }
    }
    else
    {
      uint64_t v58 = v3;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      uint64_t v26 = v61;
      (*(void (**)(uint64_t, uint64_t))(v61 + 32))(ObjectType, v61);
      uint64_t v30 = UUID.uuidString.getter();
      uint64_t v57 = v31;
      (*(void (**)(char *, uint64_t))(v60 + 8))(v12, v8);
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v32 = sub_100528BE4();
      *(void *)(inited + 32) = v30;
      *(void *)(inited + 64) = v32;
      *(void *)(inited + 40) = v57;
      uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(ObjectType, v26);
      swift_release();
      if (!v33)
      {
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();
        uint64_t v34 = v58;
        uint64_t v35 = sub_100FC12DC(v5, ObjectType, v26);
        if (v34) {
          return swift_release();
        }
        uint64_t v37 = v35;
        uint64_t v38 = v36;
        uint64_t v28 = (uint64_t *)v59;
        swift_beginAccess();
        swift_retain();
        swift_unknownObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v62 = *v28;
        *uint64_t v28 = 0x8000000000000000;
        sub_100971F40(v37, v38, v13, isUniquelyReferenced_nonNull_native);
        *uint64_t v28 = v62;
        swift_release();
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_unknownObjectRelease();
LABEL_19:
        uint64_t v40 = *v28;
        uint64_t v41 = *(void *)(*v28 + 16);
        swift_retain();
        if (v41)
        {
          swift_retain();
          swift_bridgeObjectRetain();
          unint64_t v42 = sub_1009561F4(v13);
          if (v43)
          {
            uint64_t v44 = (uint64_t *)(*(void *)(v40 + 56) + 16 * v42);
            uint64_t v45 = *v44;
            uint64_t v46 = v44[1];
            swift_unknownObjectRetain();
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v47 = (uint64_t *)(v5 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableModifications);
            swift_beginAccess();
            if (v45)
            {
              char v48 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v62 = *v47;
              *uint64_t v47 = 0x8000000000000000;
              sub_100971F40(v45, v46, v13, v48);
              *uint64_t v47 = v62;
              swift_release();
              swift_bridgeObjectRelease();
              uint64_t v26 = v61;
LABEL_26:
              swift_endAccess();
              uint64_t v49 = *(void *)(v5 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner + 8);
              uint64_t v50 = swift_getObjectType();
              uint64_t v51 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 24);
              swift_unknownObjectRetain();
              v51(a1, v26, v50, v49);
              swift_release();
              return swift_unknownObjectRelease();
            }
            uint64_t v26 = v61;
LABEL_25:
            sub_10095AF80(v13);
            swift_release();
            swift_unknownObjectRelease();
            goto LABEL_26;
          }
          swift_release();
          swift_bridgeObjectRelease();
        }
        swift_beginAccess();
        goto LABEL_25;
      }
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"willModify(_:undoableModification:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 230, (uint64_t)"First time we are seeing this transactable %@, it should not already have a transactionContext set", 98, 2u, inited);
      sub_100586FD4(inited, (uint64_t)"First time we are seeing this transactable %@, it should not already have a transactionContext set");
      uint64_t v52 = (void *)inited;
      uint64_t v53 = 230;
    }
LABEL_35:
    sub_1005871AC((uint64_t)v52, (uint64_t)"willModify(_:undoableModification:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, v53);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v54, v55);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  __break(1u);
LABEL_30:
  swift_once();
LABEL_9:
  swift_beginAccess();
  id v21 = (id)static OS_os_log.crlDefault;
  uint64_t v22 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v21, (uint64_t)&_mh_execute_header, v22, (uint64_t)"Trying to modify a deleted object with no transactionContext set.", 65, 2, (uint64_t)&_swiftEmptyArrayStorage);

  sub_100FC12DC(v5, ObjectType, a2);
  uint64_t result = swift_release();
  if (!v3) {
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_101034A10(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v44 = a2;
  uint64_t v45 = a1;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v57 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  uint64_t v60 = (char *)&v43 - v12;
  uint64_t v50 = a3;
  uint64_t v13 = *(void *)(a3 + 56);
  uint64_t v46 = a3 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a3 + 32);
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v13;
  uint64_t v49 = (uint64_t *)(a4 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedDeletedObjectIds);
  uint64_t result = swift_beginAccess();
  uint64_t v51 = 0;
  int64_t v18 = 0;
  int64_t v47 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v48 = v7;
  uint64_t v56 = v7 + 16;
  uint64_t v58 = (void (**)(char *, uint64_t))(v7 + 8);
  while (1)
  {
    if (v16)
    {
      uint64_t v54 = (v16 - 1) & v16;
      int64_t v55 = v18;
      unint64_t v19 = __clz(__rbit64(v16)) | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v20 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v20 >= v47) {
      goto LABEL_30;
    }
    unint64_t v21 = *(void *)(v46 + 8 * v20);
    int64_t v22 = v18 + 1;
    if (!v21)
    {
      int64_t v22 = v18 + 2;
      if (v18 + 2 >= v47) {
        goto LABEL_30;
      }
      unint64_t v21 = *(void *)(v46 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = v18 + 3;
        if (v18 + 3 >= v47) {
          goto LABEL_30;
        }
        unint64_t v21 = *(void *)(v46 + 8 * v22);
        if (!v21) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v54 = (v21 - 1) & v21;
    int64_t v55 = v22;
    unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
LABEL_22:
    uint64_t v24 = *(void *)(v50 + 48);
    unint64_t v52 = v19;
    uint64_t v25 = *(void *)(v24 + 8 * v19);
    uint64_t v26 = *v49;
    uint64_t v27 = *(void *)(v25 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v27 + 32);
    uint64_t v53 = v25;
    swift_retain();
    swift_bridgeObjectRetain();
    v29(ObjectType, v27);
    uint64_t v59 = v26;
    if (*(void *)(v26 + 16)
      && (uint64_t v30 = v59,
          sub_10103567C((unint64_t *)&qword_1016770E0, 255, (void (*)(uint64_t))&type metadata accessor for UUID), uint64_t v31 = dispatch thunk of Hashable._rawHashValue(seed:)(), v32 = -1 << *(unsigned char *)(v30 + 32), v33 = v31 & ~v32, v34 = v30 + 56, ((*(void *)(v30 + 56 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v33) & 1) != 0))
    {
      uint64_t v35 = ~v32;
      uint64_t v36 = *(void *)(v48 + 72);
      uint64_t v37 = *(void (**)(char *, unint64_t, uint64_t))(v48 + 16);
      while (1)
      {
        uint64_t v38 = v57;
        v37(v57, *(void *)(v59 + 48) + v36 * v33, v6);
        sub_10103567C((unint64_t *)&qword_10167BDC0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v39 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v40 = *v58;
        (*v58)(v38, v6);
        if (v39) {
          break;
        }
        unint64_t v33 = (v33 + 1) & v35;
        if (((*(void *)(v34 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v33) & 1) == 0) {
          goto LABEL_27;
        }
      }
      swift_bridgeObjectRelease();
      v40(v60, v6);
      uint64_t result = swift_release();
      unint64_t v16 = v54;
      int64_t v18 = v55;
    }
    else
    {
LABEL_27:
      swift_bridgeObjectRelease();
      (*v58)(v60, v6);
      uint64_t result = swift_release();
      *(unint64_t *)((char *)v45 + ((v52 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v52;
      BOOL v41 = __OFADD__(v51++, 1);
      unint64_t v16 = v54;
      int64_t v18 = v55;
      if (v41)
      {
        __break(1u);
LABEL_30:
        uint64_t v42 = v50;
        swift_retain();
        return sub_10052B490(v45, v44, v51, v42);
      }
    }
  }
  uint64_t v23 = v18 + 4;
  if (v18 + 4 >= v47) {
    goto LABEL_30;
  }
  unint64_t v21 = *(void *)(v46 + 8 * v23);
  if (v21)
  {
    int64_t v22 = v18 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v22 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v22 >= v47) {
      goto LABEL_30;
    }
    unint64_t v21 = *(void *)(v46 + 8 * v22);
    ++v23;
    if (v21) {
      goto LABEL_21;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_101034EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  char v6 = *(unsigned char *)(a1 + 32);
  unsigned int v7 = v6 & 0x3F;
  unint64_t v8 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v9 = 8 * v8;
  uint64_t isStackAllocationSafe = swift_retain_n();
  if (v7 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, v11);
    bzero((char *)&v15 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    swift_retain();
    uint64_t v12 = sub_101034A10((unint64_t *)((char *)&v15 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a1, a2);
    swift_release();
    swift_release();
    if (v3) {
      swift_willThrow();
    }
    swift_release_n();
  }
  else
  {
    uint64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, v9);
    swift_retain();
    uint64_t v12 = sub_101034A10((unint64_t *)v13, v8, a1, a2);
    swift_release();
    swift_release();
    swift_slowDealloc();
    swift_release_n();
  }
  return v12;
}

Swift::Int sub_101035088(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v55 = type metadata accessor for UUID();
  uint64_t v46 = *(void *)(v55 - 8);
  uint64_t v7 = __chkstk_darwin(v55, v6);
  uint64_t v53 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v9);
  uint64_t v56 = (char *)v45 - v10;
  if ((a1 & 0xC000000000000001) != 0)
  {
    void v45[2] = v2;
    uint64_t v3 = &_swiftEmptySetSingleton;
    uint64_t v59 = &_swiftEmptySetSingleton;
    swift_retain();
    uint64_t v11 = __CocoaSet.makeIterator()();
    v45[1] = a2;
    uint64_t v49 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedDeletedObjectIds);
    swift_beginAccess();
    uint64_t v50 = v11;
    uint64_t v12 = __CocoaSet.Iterator.next()();
    if (v12)
    {
      uint64_t v13 = v12;
      uint64_t v48 = type metadata accessor for CRLTransactableHashableWrapper();
      uint64_t v51 = v46 + 16;
      uint64_t v54 = (void (**)(char *, uint64_t))(v46 + 8);
      int64_t v47 = (char *)&type metadata for Swift.AnyObject + 8;
      uint64_t v14 = v53;
      uint64_t v15 = v55;
      do
      {
        uint64_t v57 = v13;
        swift_dynamicCast();
        uint64_t v26 = *v49;
        uint64_t v27 = *(void *)(v58 + 24);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v27 + 32);
        swift_bridgeObjectRetain();
        v29(ObjectType, v27);
        if (*(void *)(v26 + 16)
          && (sub_10103567C((unint64_t *)&qword_1016770E0, 255, (void (*)(uint64_t))&type metadata accessor for UUID), uint64_t v30 = dispatch thunk of Hashable._rawHashValue(seed:)(), v31 = -1 << *(unsigned char *)(v26 + 32), v32 = v30 & ~v31, ((*(void *)(v26 + 56 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32) & 1) != 0))
        {
          uint64_t v52 = ~v31;
          uint64_t v33 = *(void *)(v46 + 72);
          uint64_t v34 = *(void (**)(char *, unint64_t, uint64_t))(v46 + 16);
          while (1)
          {
            v34(v14, *(void *)(v26 + 48) + v33 * v32, v15);
            sub_10103567C((unint64_t *)&qword_10167BDC0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
            char v35 = dispatch thunk of static Equatable.== infix(_:_:)();
            uint64_t v36 = *v54;
            (*v54)(v14, v15);
            if (v35) {
              break;
            }
            unint64_t v32 = (v32 + 1) & v52;
            if (((*(void *)(v26 + 56 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32) & 1) == 0) {
              goto LABEL_13;
            }
          }
          swift_bridgeObjectRelease();
          v36(v56, v55);
          swift_release();
        }
        else
        {
LABEL_13:
          swift_bridgeObjectRelease();
          uint64_t v37 = *v54;
          (*v54)(v56, v55);
          uint64_t v38 = v58;
          char v39 = v59;
          if (v59[3] <= v59[2])
          {
            sub_100CBD9B4();
            char v39 = v59;
          }
          Hasher.init(_seed:)();
          uint64_t v16 = *(void *)(v38 + 24);
          uint64_t v17 = swift_getObjectType();
          int64_t v18 = v53;
          (*(void (**)(uint64_t, uint64_t))(v16 + 32))(v17, v16);
          sub_10103567C((unint64_t *)&qword_1016770E0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v19 = v55;
          dispatch thunk of Hashable.hash(into:)();
          v37(v18, v19);
          Swift::Int result = Hasher._finalize()();
          unint64_t v21 = v39 + 7;
          uint64_t v22 = -1 << *((unsigned char *)v39 + 32);
          unint64_t v23 = result & ~v22;
          unint64_t v24 = v23 >> 6;
          if (((-1 << v23) & ~v39[(v23 >> 6) + 7]) != 0)
          {
            unint64_t v25 = __clz(__rbit64((-1 << v23) & ~v39[(v23 >> 6) + 7])) | v23 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            char v40 = 0;
            unint64_t v41 = (unint64_t)(63 - v22) >> 6;
            do
            {
              if (++v24 == v41 && (v40 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              BOOL v42 = v24 == v41;
              if (v24 == v41) {
                unint64_t v24 = 0;
              }
              v40 |= v42;
              uint64_t v43 = v21[v24];
            }
            while (v43 == -1);
            unint64_t v25 = __clz(__rbit64(~v43)) + (v24 << 6);
          }
          *(void *)((char *)v21 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
          *(void *)(v39[6] + 8 * v25) = v38;
          ++v39[2];
        }
        uint64_t v13 = __CocoaSet.Iterator.next()();
      }
      while (v13);
      uint64_t v3 = v59;
    }
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v44 = sub_101034EBC(a1, a2);
    if (!v2) {
      return v44;
    }
  }
  return (Swift::Int)v3;
}

uint64_t sub_10103561C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10103567C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1010356C4()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform29CRLiOSPencilHoveredRepManager_repsModel);
  swift_beginAccess();
  if ((unint64_t)*v1 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v2) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
    {
LABEL_13:
      swift_endAccess();
      return (id)(v2 != 0);
    }
  }
  uint64_t v11 = v2;
  uint64_t v3 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  if (!v4)
  {
LABEL_12:
    swift_bridgeObjectRelease_n();
    *uint64_t v1 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v2 = v11;
    goto LABEL_13;
  }
LABEL_5:
  uint64_t v5 = 4;
  while (1)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v6 = *(id *)(v3 + 8 * v5);
    }
    uint64_t v7 = v6;
    uint64_t v8 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
      goto LABEL_15;
    }
    id result = [v6 styledLayout];
    if (!result) {
      break;
    }
    uint64_t v10 = result;
    [result dynamicOpacityChangeDidEnd];

    ++v5;
    if (v8 == v4) {
      goto LABEL_12;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_101035868()
{
  uint64_t v1 = *v0;
  if ((unint64_t)*v0 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      if (!v2)
      {
LABEL_11:
        swift_bridgeObjectRelease_n();
        *uint64_t v0 = (uint64_t)_swiftEmptyArrayStorage;
        return 1;
      }
      goto LABEL_4;
    }
    return 0;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain();
LABEL_4:
  uint64_t v3 = 4;
  while (1)
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v4 = *(id *)(v1 + 8 * v3);
    }
    uint64_t v5 = v4;
    uint64_t v6 = v3 - 3;
    if (__OFADD__(v3 - 4, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    uint64_t result = (uint64_t)[v4 styledLayout];
    if (!result) {
      break;
    }
    uint64_t v8 = (void *)result;
    [(id)result dynamicOpacityChangeDidEnd];

    ++v3;
    if (v6 == v2) {
      goto LABEL_11;
    }
  }
  __break(1u);
  return result;
}

id sub_101035A00()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSPencilHoveredRepManager();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSPencilHoveredRepManager()
{
  return self;
}

ValueMetadata *type metadata accessor for CRLiOSPencilHoveredRepManager.RepsModel()
{
  return &type metadata for CRLiOSPencilHoveredRepManager.RepsModel;
}

uint64_t sub_101035A78(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (__CocoaSet.count.getter()) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v3 = &_swiftEmptySetSingleton;
    if (v2) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v8 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v30 = v1 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    uint64_t v6 = 0;
    goto LABEL_11;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1005057FC(&qword_101671308);
  uint64_t v3 = (void *)static _SetStorage.allocate(capacity:)();
  if (!v2) {
    goto LABEL_7;
  }
LABEL_4:
  swift_bridgeObjectRetain();
  swift_retain();
  __CocoaSet.makeIterator()();
  type metadata accessor for CRLBoardItem(0);
  sub_101048308((unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
  uint64_t result = Set.Iterator.init(_cocoa:)();
  uint64_t v1 = v34;
  uint64_t v30 = v35;
  uint64_t v5 = v36;
  uint64_t v6 = v37;
  unint64_t v7 = v38;
LABEL_11:
  int64_t v29 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v11 = (char *)(v3 + 7);
  while (v1 < 0)
  {
    uint64_t v16 = __CocoaSet.Iterator.next()();
    if (!v16) {
      goto LABEL_45;
    }
    *(void *)&long long v31 = v16;
    type metadata accessor for CRLBoardItem(0);
    swift_dynamicCast();
LABEL_36:
    type metadata accessor for CRLBoardItem(0);
    swift_dynamicCast();
    uint64_t result = AnyHashable._rawHashValue(seed:)(v3[5]);
    uint64_t v22 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)&v11[8 * (v23 >> 6)]) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)&v11[8 * (v23 >> 6)])) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)&v11[8 * v24];
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)&v11[(v12 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v12;
    uint64_t v13 = v3[6] + 40 * v12;
    *(_OWORD *)uint64_t v13 = v31;
    *(_OWORD *)(v13 + 16) = v32;
    *(void *)(v13 + 32) = v33;
    ++v3[2];
  }
  if (v7)
  {
    unint64_t v14 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v15 = v14 | (v6 << 6);
LABEL_35:
    id v21 = *(id *)(*(void *)(v1 + 48) + 8 * v15);
    goto LABEL_36;
  }
  int64_t v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v29) {
      goto LABEL_45;
    }
    unint64_t v18 = *(void *)(v30 + 8 * v17);
    uint64_t v19 = v6 + 1;
    if (!v18)
    {
      uint64_t v19 = v6 + 2;
      if (v6 + 2 >= v29) {
        goto LABEL_45;
      }
      unint64_t v18 = *(void *)(v30 + 8 * v19);
      if (!v18)
      {
        uint64_t v19 = v6 + 3;
        if (v6 + 3 >= v29) {
          goto LABEL_45;
        }
        unint64_t v18 = *(void *)(v30 + 8 * v19);
        if (!v18)
        {
          uint64_t v19 = v6 + 4;
          if (v6 + 4 >= v29) {
            goto LABEL_45;
          }
          unint64_t v18 = *(void *)(v30 + 8 * v19);
          if (!v18)
          {
            uint64_t v19 = v6 + 5;
            if (v6 + 5 >= v29) {
              goto LABEL_45;
            }
            unint64_t v18 = *(void *)(v30 + 8 * v19);
            if (!v18)
            {
              uint64_t v20 = v6 + 6;
              while (v29 != v20)
              {
                unint64_t v18 = *(void *)(v30 + 8 * v20++);
                if (v18)
                {
                  uint64_t v19 = v20 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_10052E1EC();
              return (uint64_t)v3;
            }
          }
        }
      }
    }
LABEL_34:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v19 << 6);
    uint64_t v6 = v19;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_101035E90(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (__CocoaSet.count.getter()) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v3 = &_swiftEmptySetSingleton;
    if (v2) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v8 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v29 = v1 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    uint64_t v6 = 0;
    goto LABEL_11;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1005057FC(&qword_101671328);
  uint64_t v3 = (void *)static _SetStorage.allocate(capacity:)();
  if (!v2) {
    goto LABEL_7;
  }
LABEL_4:
  swift_bridgeObjectRetain();
  swift_retain();
  __CocoaSet.makeIterator()();
  type metadata accessor for CRLGroupItem();
  sub_101048308(&qword_101688628, (void (*)(uint64_t))type metadata accessor for CRLGroupItem);
  uint64_t result = Set.Iterator.init(_cocoa:)();
  uint64_t v1 = v31;
  uint64_t v29 = v32;
  uint64_t v5 = v33;
  uint64_t v6 = v34;
  unint64_t v7 = v35;
LABEL_11:
  int64_t v11 = (unint64_t)(v5 + 64) >> 6;
  unint64_t v12 = (char *)(v3 + 7);
  while (v1 < 0)
  {
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_45;
    }
    type metadata accessor for CRLGroupItem();
    swift_dynamicCast();
    uint64_t v16 = v30;
LABEL_36:
    uint64_t result = NSObject._rawHashValue(seed:)(v3[5]);
    uint64_t v22 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)&v12[8 * (v23 >> 6)]) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)&v12[8 * (v23 >> 6)])) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)&v12[8 * v24];
      }
      while (v28 == -1);
      unint64_t v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)&v12[(v13 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v13;
    *(void *)(v3[6] + 8 * v13) = v16;
    ++v3[2];
  }
  if (v7)
  {
    unint64_t v14 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v15 = v14 | (v6 << 6);
LABEL_35:
    uint64_t v16 = *(void **)(*(void *)(v1 + 48) + 8 * v15);
    uint64_t v30 = v16;
    id v21 = v16;
    goto LABEL_36;
  }
  int64_t v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v11) {
      goto LABEL_45;
    }
    unint64_t v18 = *(void *)(v29 + 8 * v17);
    uint64_t v19 = v6 + 1;
    if (!v18)
    {
      uint64_t v19 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_45;
      }
      unint64_t v18 = *(void *)(v29 + 8 * v19);
      if (!v18)
      {
        uint64_t v19 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_45;
        }
        unint64_t v18 = *(void *)(v29 + 8 * v19);
        if (!v18)
        {
          uint64_t v19 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_45;
          }
          unint64_t v18 = *(void *)(v29 + 8 * v19);
          if (!v18)
          {
            uint64_t v19 = v6 + 5;
            if (v6 + 5 >= v11) {
              goto LABEL_45;
            }
            unint64_t v18 = *(void *)(v29 + 8 * v19);
            if (!v18)
            {
              uint64_t v20 = v6 + 6;
              while (v11 != v20)
              {
                unint64_t v18 = *(void *)(v29 + 8 * v20++);
                if (v18)
                {
                  uint64_t v19 = v20 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_10052E1EC();
              return (uint64_t)v3;
            }
          }
        }
      }
    }
LABEL_34:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v19 << 6);
    uint64_t v6 = v19;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

void sub_10103622C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
}

void sub_10103626C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
}

void sub_1010362AC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, void (*a5)(void, uint64_t), void (*a6)(uint64_t), uint64_t (*a7)(void))
{
  uint64_t v45 = a5;
  uint64_t v46 = a7;
  uint64_t v49 = a6;
  uint64_t v50 = a3;
  uint64_t v8 = v7;
  uint64_t v51 = a4;
  int v47 = a2;
  uint64_t v48 = a1;
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  unint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v14, v15);
  int64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for CRLWPStorageCRDTData(0);
  __n128 v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  unint64_t v24 = *(char **)(*(void *)(v7 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v24) {
    goto LABEL_14;
  }
  uint64_t v25 = *(void *)&v24[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v25)
  {
LABEL_15:
    __break(1u);
    return;
  }
  (*(void (**)(__n128))(*(void *)v25 + 760))(v20);
  sub_1005D3C94((uint64_t)&v17[*(int *)(v14 + 20)], (uint64_t)v22);
  unint64_t v26 = v24;
  sub_10104835C((uint64_t)v17, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v22, v9);
  sub_10104835C((uint64_t)v22, type metadata accessor for CRLWPStorageCRDTData);
  BOOL v27 = (void *)CRAttributedString.attributedString.getter();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  uint64_t v28 = (uint64_t)[v27 length];

  if (v28 < 1) {
    goto LABEL_10;
  }
  if (__OFSUB__(v51, v50))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v51 == v50)
  {
    uint64_t v29 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle;
    uint64_t v30 = *(void **)(v8 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle);
    uint64_t v31 = v48;
    if (v30
      || (id v32 = [objc_allocWithZone((Class)type metadata accessor for CRLWPCharacterStyle()) init],
          uint64_t v33 = *(void **)(v8 + v29),
          *(void *)(v8 + v29) = v32,
          v33,
          (uint64_t v30 = *(void **)(v8 + v29)) != 0))
    {
      id v34 = v30;
      swift_retain();
      v45(v47 & 1, v31);
    }
    v49(v31);
    return;
  }
LABEL_10:
  id v35 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v8
                                                              + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionPath"));
  id v36 = [objc_allocWithZone((Class)CRLCommandSelectionBehavior) initWithCommitSelectionPath:v35 forwardSelectionPath:v35 reverseSelectionPath:v35];
  uint64_t v37 = *(void **)(v8 + v23);
  uint64_t v38 = v48;
  swift_retain();
  id v39 = v37;
  char v40 = (unsigned char *)v46();

  swift_release();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v42 = [Strong commandController];

  if (v42)
  {
    id v43 = v36;
    sub_10078BED8(v40, 0, v36, 4, 0);
  }
  v49(v38);
}

void sub_1010366F4(uint64_t a1, Swift::Int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v42 = a3;
  uint64_t v43 = a4;
  Swift::Int v41 = a2;
  uint64_t v44 = a1;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLWPStorageCRDTData(0);
  __n128 v17 = __chkstk_darwin(v15 - 8, v16);
  uint64_t v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  uint64_t v21 = *(char **)(*(void *)(v4 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v21) {
    goto LABEL_14;
  }
  uint64_t v22 = *(void *)&v21[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v22)
  {
LABEL_15:
    __break(1u);
    return;
  }
  (*(void (**)(__n128))(*(void *)v22 + 760))(v17);
  sub_1005D3C94((uint64_t)&v14[*(int *)(v11 + 20)], (uint64_t)v19);
  uint64_t v23 = v21;
  sub_10104835C((uint64_t)v14, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v19, v6);
  sub_10104835C((uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
  unint64_t v24 = (void *)CRAttributedString.attributedString.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t v25 = (uint64_t)[v24 length];

  uint64_t v27 = v43;
  uint64_t v26 = v44;
  uint64_t v28 = v42;
  if (v25 < 1) {
    goto LABEL_10;
  }
  if (__OFSUB__(v43, v42))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v43 == v42)
  {
    uint64_t v29 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle;
    uint64_t v30 = *(void *)(v5 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle);
    if (v30
      || (id v31 = [objc_allocWithZone((Class)type metadata accessor for CRLWPCharacterStyle()) init],
          id v32 = *(void **)(v5 + v29),
          *(void *)(v5 + v29) = v31,
          v32,
          (uint64_t v30 = *(void *)(v5 + v29)) != 0))
    {
      uint64_t v33 = v30 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline;
      *(void *)uint64_t v33 = v41;
      *(unsigned char *)(v33 + 8) = 0;
    }
    sub_100836848(v26);
    return;
  }
LABEL_10:
  id v34 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v5
                                                              + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionPath", v41));
  id v35 = [objc_allocWithZone((Class)CRLCommandSelectionBehavior) initWithCommitSelectionPath:v34 forwardSelectionPath:v34 reverseSelectionPath:v34];
  id v36 = (char *)*(id *)(v5 + v20);
  swift_retain();
  uint64_t v37 = (unsigned char *)sub_10083CFF8(v36, v28, v27, v26, v41);

  swift_release();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v39 = [Strong commandController];

  if (v39)
  {
    id v40 = v35;
    sub_10078BED8(v37, 0, v35, 4, 0);
  }
  sub_100836848(v26);
}

void sub_101036B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v43 = a2;
  uint64_t v46 = a1;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLWPStorageCRDTData(0);
  __n128 v17 = __chkstk_darwin(v15 - 8, v16);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  uint64_t v21 = *(char **)(*(void *)(v4 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v21) {
    goto LABEL_14;
  }
  uint64_t v22 = *(void *)&v21[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v22)
  {
LABEL_15:
    __break(1u);
    return;
  }
  (*(void (**)(__n128))(*(void *)v22 + 760))(v17);
  sub_1005D3C94((uint64_t)&v14[*(int *)(v11 + 20)], (uint64_t)v19);
  uint64_t v23 = v21;
  sub_10104835C((uint64_t)v14, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v19, v6);
  sub_10104835C((uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
  unint64_t v24 = (void *)CRAttributedString.attributedString.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t v25 = (uint64_t)[v24 length];

  uint64_t v27 = v45;
  uint64_t v26 = v46;
  uint64_t v28 = v44;
  if (v25 < 1) {
    goto LABEL_10;
  }
  if (__OFSUB__(v45, v44))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v45 == v44)
  {
    uint64_t v29 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle;
    uint64_t v30 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle);
    if (v30
      || (id v31 = objc_allocWithZone((Class)type metadata accessor for CRLWPCharacterStyle()),
          id v32 = objc_msgSend(v31, "init", v43),
          uint64_t v33 = *(void **)(v5 + v29),
          *(void *)(v5 + v29) = v32,
          v33,
          (uint64_t v30 = *(void **)(v5 + v29)) != 0))
    {
      id v34 = v30;
      swift_retain();
      sub_10103854C(v43, 0);
    }
    sub_100836854(v26);
    return;
  }
LABEL_10:
  id v35 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v5
                                                              + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionPath", v43));
  id v36 = [objc_allocWithZone((Class)CRLCommandSelectionBehavior) initWithCommitSelectionPath:v35 forwardSelectionPath:v35 reverseSelectionPath:v35];
  uint64_t v37 = *(void **)(v5 + v20);
  swift_retain();
  uint64_t v38 = v37;
  id v39 = (unsigned char *)sub_10083D1E8(v38, v28, v27, v26, v43);

  swift_release();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v41 = [Strong commandController];

  if (v41)
  {
    id v42 = v36;
    sub_10078BED8(v39, 0, v36, 4, 0);
  }
  sub_100836854(v26);
}

void sub_101036F20(uint64_t a1, uint64_t a2, uint64_t a3, float a4)
{
  uint64_t v5 = v4;
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t v45 = a1;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CRLWPStorageCRDTData(0);
  __n128 v18 = __chkstk_darwin(v16 - 8, v17);
  uint64_t v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  uint64_t v22 = *(char **)(*(void *)(v4 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v22) {
    goto LABEL_14;
  }
  uint64_t v23 = *(void *)&v22[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v23)
  {
LABEL_15:
    __break(1u);
    return;
  }
  (*(void (**)(__n128))(*(void *)v23 + 760))(v18);
  sub_1005D3C94((uint64_t)&v15[*(int *)(v12 + 20)], (uint64_t)v20);
  unint64_t v24 = v22;
  sub_10104835C((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v20, v7);
  sub_10104835C((uint64_t)v20, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v25 = (void *)CRAttributedString.attributedString.getter();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  uint64_t v26 = (uint64_t)[v25 length];

  uint64_t v27 = v44;
  uint64_t v28 = v45;
  uint64_t v29 = v43;
  if (v26 < 1) {
    goto LABEL_10;
  }
  if (__OFSUB__(v44, v43))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v44 == v43)
  {
    uint64_t v30 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle;
    id v31 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle);
    if (v31
      || (id v32 = [objc_allocWithZone((Class)type metadata accessor for CRLWPCharacterStyle()) init],
          uint64_t v33 = *(void **)(v5 + v30),
          *(void *)(v5 + v30) = v32,
          v33,
          (id v31 = *(void **)(v5 + v30)) != 0))
    {
      id v34 = v31;
      swift_retain();
      char v46 = 0;
      sub_10103860C(LODWORD(a4));
    }
    sub_100836860(v28);
    return;
  }
LABEL_10:
  id v35 = [*(id *)(v5 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController) selectionPath:v43, v44, v45];
  id v36 = [objc_allocWithZone((Class)CRLCommandSelectionBehavior) initWithCommitSelectionPath:v35 forwardSelectionPath:v35 reverseSelectionPath:v35];
  uint64_t v37 = *(void **)(v5 + v21);
  swift_retain();
  uint64_t v38 = v37;
  id v39 = (unsigned char *)sub_10083D3E0(v38, v29, v27, v28, a4);

  swift_release();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v41 = [Strong commandController];

  if (v41)
  {
    id v42 = v36;
    sub_10078BED8(v39, 0, v36, 4, 0);
  }
  sub_100836860(v28);
}

void sub_101037348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v37 = a1;
  uint64_t v38 = a5;
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for CRLWPStorageCRDTData(0);
  __n128 v19 = __chkstk_darwin(v17 - 8, v18);
  uint64_t v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(char **)(*(void *)(v5 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v22) {
    goto LABEL_12;
  }
  uint64_t v23 = *(void *)&v22[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v23)
  {
LABEL_13:
    __break(1u);
    return;
  }
  (*(void (**)(__n128))(*(void *)v23 + 760))(v19);
  sub_1005D3C94((uint64_t)&v16[*(int *)(v13 + 20)], (uint64_t)v21);
  unint64_t v24 = v22;
  sub_10104835C((uint64_t)v16, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v21, v8);
  sub_10104835C((uint64_t)v21, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v25 = (void *)CRAttributedString.attributedString.getter();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  uint64_t v26 = (uint64_t)[v25 length];

  if (v26 < 1)
  {
LABEL_10:
    sub_1010379AC(v37, v35, v36, a4, v38);
    return;
  }
  if (__OFSUB__(v38, a4))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v38 != a4) {
    goto LABEL_10;
  }
  uint64_t v27 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle;
  uint64_t v28 = *(void **)(v6 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle);
  uint64_t v29 = v37;
  if (v28
    || (id v30 = objc_allocWithZone((Class)type metadata accessor for CRLWPCharacterStyle()),
        id v31 = objc_msgSend(v30, "init", v35),
        id v32 = *(void **)(v6 + v27),
        *(void *)(v6 + v27) = v31,
        v32,
        (uint64_t v28 = *(void **)(v6 + v27)) != 0))
  {
    uint64_t v33 = v36;
    swift_bridgeObjectRetain();
    id v34 = v28;
    swift_retain();
    sub_10103870C(v35, v33);
  }
  sub_100836878(v29);
}

void sub_101037680(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v36 = a1;
  uint64_t v37 = a4;
  uint64_t v35 = a2;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CRLWPStorageCRDTData(0);
  __n128 v18 = __chkstk_darwin(v16 - 8, v17);
  uint64_t v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(char **)(*(void *)(v4 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v21) {
    goto LABEL_12;
  }
  uint64_t v22 = *(void *)&v21[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v22)
  {
LABEL_13:
    __break(1u);
    return;
  }
  (*(void (**)(__n128))(*(void *)v22 + 760))(v18);
  sub_1005D3C94((uint64_t)&v15[*(int *)(v12 + 20)], (uint64_t)v20);
  uint64_t v23 = v21;
  sub_10104835C((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v20, v7);
  sub_10104835C((uint64_t)v20, type metadata accessor for CRLWPStorageCRDTData);
  unint64_t v24 = (void *)CRAttributedString.attributedString.getter();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  uint64_t v25 = (uint64_t)[v24 length];

  if (v25 < 1)
  {
LABEL_10:
    sub_101037CF0(v36, v35, a3, v37);
    return;
  }
  if (__OFSUB__(v37, a3))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v37 != a3) {
    goto LABEL_10;
  }
  uint64_t v26 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle;
  uint64_t v27 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_insertionStyle);
  uint64_t v28 = v36;
  if (v27
    || (id v29 = [objc_allocWithZone((Class)type metadata accessor for CRLWPCharacterStyle()) init],
        id v30 = *(void **)(v5 + v26),
        *(void *)(v5 + v26) = v29,
        v30,
        (uint64_t v27 = *(void **)(v5 + v26)) != 0))
  {
    id v31 = v35;
    id v32 = v35;
    id v33 = v27;
    swift_retain();
    sub_1010388B0(v31);
  }
  sub_100836884(v28);
}

void sub_1010379AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  uint64_t v33 = a2;
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101683740);
  __chkstk_darwin(v8, v9);
  uint64_t v34 = (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v13 = __chkstk_darwin(v11, v12).n128_u64[0];
  uint64_t v15 = (uint64_t *)((char *)&v30 - v14);
  id v16 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v5
                                                              + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionPath", v13));
  id v17 = objc_allocWithZone((Class)CRLCommandSelectionBehavior);
  id v37 = v16;
  id v32 = [v17 initWithCommitSelectionPath:v16 forwardSelectionPath:v16 reverseSelectionPath:v16];
  __n128 v18 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape);
  *uint64_t v15 = &_swiftEmptySetSingleton;
  sub_1005D3BF8();
  swift_bridgeObjectRetain();
  id v31 = v18;
  swift_retain();
  CRAttributedString.Attributes.init()();
  id v42 = &type metadata for CRLWPCharacterScope;
  uint64_t v43 = &type metadata for CRLWPFontNameAttribute;
  unint64_t v19 = sub_10083E550();
  unint64_t v44 = v19;
  uint64_t v45 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100CB8180(v46, 0x656D614E746E6F66, 0xE800000000000000);
  swift_bridgeObjectRelease();
  uint64_t v38 = &type metadata for CRLWPCharacterScope;
  id v39 = &type metadata for CRLWPFontNameAttribute;
  unint64_t v40 = v19;
  uint64_t v41 = KeyPath;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  v46[0] = sub_100B149FC(v33, a3);
  v46[1] = v21;
  char v47 = 0;
  sub_1005057FC((uint64_t *)&unk_1016836C0);
  sub_10091307C();
  CRAttributedString.Attributes.subscript.setter();
  swift_bridgeObjectRelease();
  uint64_t v22 = v32;
  swift_release();
  uint64_t v23 = v34;
  sub_100522E9C((uint64_t)v15, v34, (uint64_t *)&unk_101683740);
  id v24 = objc_allocWithZone((Class)sub_1005057FC((uint64_t *)&unk_101687BF0));
  uint64_t v25 = v31;
  uint64_t v26 = (unsigned char *)sub_10083C824(v31, v35, v36, v23);
  sub_100522F00((uint64_t)v15, (uint64_t *)&unk_101683740);

  swift_release();
  swift_bridgeObjectRelease();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v28 = [Strong commandController];

  if (v28)
  {
    id v29 = v22;
    sub_10078BED8(v26, 0, v22, 4, 0);
  }
  sub_100836878(a1);
}

void sub_101037CF0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101683740);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8, v10);
  uint64_t v38 = (uint64_t)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v14 = __chkstk_darwin(v12, v13).n128_u64[0];
  id v16 = (void *)((char *)v35 - v15);
  id v17 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v5
                                                              + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionPath", v14));
  id v18 = objc_allocWithZone((Class)CRLCommandSelectionBehavior);
  id v41 = v17;
  id v37 = [v18 initWithCommitSelectionPath:v17 forwardSelectionPath:v17 reverseSelectionPath:v17];
  unint64_t v19 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape);
  *id v16 = &_swiftEmptySetSingleton;
  v35[1] = (char *)v16 + *(int *)(v9 + 44);
  sub_1005D3BF8();
  id v20 = a2;
  uint64_t v36 = v19;
  swift_retain();
  CRAttributedString.Attributes.init()();
  char v46 = &type metadata for CRLWPCharacterScope;
  char v47 = &type metadata for CRLWPCharacterFillAttribute;
  unint64_t v21 = sub_10083E34C();
  unint64_t v48 = v21;
  uint64_t v49 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  id v23 = v20;
  swift_retain();
  sub_100CB8180(&v59, 0x6574636172616863, 0xED00006C6C694672);
  swift_bridgeObjectRelease();
  id v42 = &type metadata for CRLWPCharacterScope;
  uint64_t v43 = &type metadata for CRLWPCharacterFillAttribute;
  unint64_t v44 = v21;
  uint64_t v45 = KeyPath;
  swift_getKeyPath();
  id v24 = v23;
  swift_retain();
  sub_100F91F6C(v24, (uint64_t)&v59);
  uint64_t v25 = &_mh_execute_header;
  if (!v62) {
    uint64_t v25 = 0;
  }
  Swift::Int v50 = v59;
  uint64_t v51 = v60;
  unint64_t v52 = (unint64_t)v25 | v61;
  long long v53 = v63;
  long long v54 = v64;
  long long v55 = v65;
  long long v56 = v66;
  uint64_t v57 = v67;
  long long v58 = v68;
  sub_1005057FC((uint64_t *)&unk_1016836C0);
  sub_100913244();
  CRAttributedString.Attributes.subscript.setter();

  swift_release();
  uint64_t v26 = v38;
  sub_100522E9C((uint64_t)v16, v38, (uint64_t *)&unk_101683740);
  id v27 = objc_allocWithZone((Class)sub_1005057FC((uint64_t *)&unk_101687BF0));
  id v28 = v36;
  id v29 = (unsigned char *)sub_10083C824(v36, v39, v40, v26);
  uint64_t v30 = (uint64_t)v16;
  id v31 = v37;
  sub_100522F00(v30, (uint64_t *)&unk_101683740);

  swift_release();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v33 = [Strong commandController];

  if (v33)
  {
    id v34 = v31;
    sub_10078BED8(v29, 0, v31, 4, 0);
  }
  sub_100836884(a1);
}

void sub_101038090(char a1)
{
  if (_stringCompareWithSmolCheck(_:_:expecting:)())
  {
    swift_release();
    uint64_t v3 = &OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline;
LABEL_5:
    uint64_t v4 = v1 + *v3;
    *(void *)uint64_t v4 = 0;
    *(unsigned char *)(v4 + 8) = 1;
    return;
  }
  if (_stringCompareWithSmolCheck(_:_:expecting:)())
  {
    swift_release();
    uint64_t v3 = &OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough;
    goto LABEL_5;
  }
  if (_stringCompareWithSmolCheck(_:_:expecting:)())
  {
    swift_release();
    uint64_t v5 = v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize;
    *(_DWORD *)uint64_t v5 = 0;
    *(unsigned char *)(v5 + 4) = 1;
  }
  else if (_stringCompareWithSmolCheck(_:_:expecting:)())
  {
    uint64_t v6 = (void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName);
    *uint64_t v6 = 0;
    v6[1] = 0;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else if (_stringCompareWithSmolCheck(_:_:expecting:)())
  {
    id v7 = *(id *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill);
    *(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill) = 0;
    swift_release();
  }
  else
  {
    swift_release();
    *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_bold) = a1;
  }
}

void sub_1010382C8(char a1)
{
  if (_stringCompareWithSmolCheck(_:_:expecting:)())
  {
    swift_release();
    uint64_t v3 = &OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline;
LABEL_5:
    uint64_t v4 = v1 + *v3;
    *(void *)uint64_t v4 = 0;
    *(unsigned char *)(v4 + 8) = 1;
    return;
  }
  if (_stringCompareWithSmolCheck(_:_:expecting:)())
  {
    swift_release();
    uint64_t v3 = &OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough;
    goto LABEL_5;
  }
  if (_stringCompareWithSmolCheck(_:_:expecting:)())
  {
    swift_release();
    uint64_t v5 = v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize;
    *(_DWORD *)uint64_t v5 = 0;
    *(unsigned char *)(v5 + 4) = 1;
  }
  else if (_stringCompareWithSmolCheck(_:_:expecting:)())
  {
    uint64_t v6 = (void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName);
    *uint64_t v6 = 0;
    v6[1] = 0;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else if (_stringCompareWithSmolCheck(_:_:expecting:)())
  {
    id v9 = *(id *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill);
    *(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill) = 0;
    swift_release();
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_release();
    if (v7) {
      uint64_t v8 = &OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_bold;
    }
    else {
      uint64_t v8 = &OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_italic;
    }
    *(unsigned char *)(v1 + *v8) = a1;
  }
}

uint64_t sub_10103854C(uint64_t a1, char a2)
{
  char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t result = swift_release();
  if (v5)
  {
    uint64_t v7 = v2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline;
    *(void *)(v2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline) = 0;
    char v8 = 1;
  }
  else
  {
    uint64_t v7 = v2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough;
    *(void *)(v2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough) = a1;
    char v8 = a2 & 1;
  }
  *(unsigned char *)(v7 + 8) = v8;
  return result;
}

uint64_t sub_10103860C(uint64_t a1)
{
  if (_stringCompareWithSmolCheck(_:_:expecting:)())
  {
    uint64_t result = swift_release();
    uint64_t v4 = &OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline;
LABEL_5:
    uint64_t v6 = v1 + *v4;
    *(void *)uint64_t v6 = 0;
    *(unsigned char *)(v6 + 8) = 1;
    return result;
  }
  char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t result = swift_release();
  if (v5)
  {
    uint64_t v4 = &OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough;
    goto LABEL_5;
  }
  uint64_t v7 = v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize;
  *(_DWORD *)uint64_t v7 = a1;
  *(unsigned char *)(v7 + 4) = BYTE4(a1) & 1;
  return result;
}

uint64_t sub_10103870C(uint64_t a1, uint64_t a2)
{
  if (_stringCompareWithSmolCheck(_:_:expecting:)())
  {
    uint64_t result = swift_release();
    if (a2) {
      uint64_t result = swift_bridgeObjectRelease();
    }
    uint64_t v6 = &OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline;
LABEL_9:
    uint64_t v7 = v2 + *v6;
    *(void *)uint64_t v7 = 0;
    *(unsigned char *)(v7 + 8) = 1;
    return result;
  }
  if (_stringCompareWithSmolCheck(_:_:expecting:)())
  {
    uint64_t result = swift_release();
    if (a2) {
      uint64_t result = swift_bridgeObjectRelease();
    }
    uint64_t v6 = &OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough;
    goto LABEL_9;
  }
  if (_stringCompareWithSmolCheck(_:_:expecting:)())
  {
    uint64_t result = swift_release();
    if (a2) {
      uint64_t result = swift_bridgeObjectRelease();
    }
    uint64_t v8 = v2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize;
    *(_DWORD *)uint64_t v8 = 0;
    *(unsigned char *)(v8 + 4) = 1;
  }
  else
  {
    id v9 = (void *)(v2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName);
    *id v9 = a1;
    v9[1] = a2;
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1010388B0(void *a1)
{
  if (_stringCompareWithSmolCheck(_:_:expecting:)())
  {
    swift_release();
    if (a1) {

    }
    uint64_t v2 = &OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline;
LABEL_9:
    uint64_t v3 = v1 + *v2;
    *(void *)uint64_t v3 = 0;
    *(unsigned char *)(v3 + 8) = 1;
    return;
  }
  if (_stringCompareWithSmolCheck(_:_:expecting:)())
  {
    swift_release();
    if (a1) {

    }
    uint64_t v2 = &OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough;
    goto LABEL_9;
  }
  if (_stringCompareWithSmolCheck(_:_:expecting:)())
  {
    swift_release();
    if (a1) {

    }
    uint64_t v4 = v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize;
    *(_DWORD *)uint64_t v4 = 0;
    *(unsigned char *)(v4 + 4) = 1;
  }
  else
  {
    if (_stringCompareWithSmolCheck(_:_:expecting:)())
    {
      char v5 = (void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName);
      void *v5 = 0;
      v5[1] = 0;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v6 = a1;
    }
    else
    {
      id v7 = *(id *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill);
      *(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill) = a1;
      swift_release();
      uint64_t v6 = v7;
    }
  }
}

uint64_t sub_101038AE8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v2, v3);
  char v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for CRLWPShapeItemData(0);
  uint64_t v6 = *(void *)swift_dynamicCastClassUnconditional();
  (*(void (**)(void))(v6 + 760))();
  type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_101689310);
  CRRegister.wrappedValue.getter();
  char v7 = v9[15];
  sub_10104835C((uint64_t)v5, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t result = swift_release();
  *a1 = v7;
  return result;
}

uint64_t sub_101038C40()
{
  return sub_10098B368();
}

uint64_t sub_101038C68(uint64_t a1, char *a2, char *a3, char *a4)
{
  unint64_t v103 = a4;
  uint64_t v97 = a3;
  uint64_t v112 = a1;
  uint64_t v108 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v92 = *(void *)(v108 - 8);
  __chkstk_darwin(v108, v5);
  unint64_t v107 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1005057FC(&qword_1016879D0);
  uint64_t v7 = *(void *)(v102 - 8);
  __chkstk_darwin(v102, v8);
  unint64_t v101 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_1016879C8);
  __chkstk_darwin(v10 - 8, v11);
  int64_t v110 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_1005057FC(&qword_1016879E0);
  uint64_t v94 = *(void *)(v111 - 8);
  uint64_t v14 = __chkstk_darwin(v111, v13);
  uint64_t v93 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v16);
  uint64_t v109 = (char *)&v91 - v17;
  uint64_t v18 = sub_1005057FC(&qword_101687AE0);
  uint64_t v105 = *(void *)(v18 - 8);
  uint64_t v106 = v18;
  __chkstk_darwin(v18, v19);
  unint64_t v104 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v21, v22);
  id v24 = (char *)&v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v96, v25);
  id v27 = (char *)&v91 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v31 = __chkstk_darwin(v28, v30);
  unint64_t v95 = (char *)&v91 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v31, v33);
  uint64_t v36 = (char *)&v91 - v35;
  uint64_t v100 = a2;
  uint64_t v37 = *(void *)&a2[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v37) {
    goto LABEL_31;
  }
  uint64_t v38 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  (*(void (**)(uint64_t))(*(void *)v37 + 760))(result);
  uint64_t v39 = v21;
  sub_1005D3C94((uint64_t)&v24[*(int *)(v21 + 20)], (uint64_t)v27);
  sub_10104835C((uint64_t)v24, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v98 = v29;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  v40(v36, v27, v28);
  sub_10104835C((uint64_t)v27, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v116 = &_swiftEmptySetSingleton;
  uint64_t v99 = v28;
  uint64_t result = CRAttributedString.count.getter();
  id v41 = v100;
  if (result)
  {
    uint64_t result = sub_1009044F8((uint64_t)v97, (uint64_t)v103);
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100904750(v97, v103);
      if (__OFSUB__(v59, result))
      {
        __break(1u);
      }
      else
      {
        uint64_t result = [v41 textRangeForParagraphsInCharRange:result, v59 - result];
        BOOL v61 = __OFADD__(result, v60);
        uint64_t v62 = result + v60;
        if (!v61)
        {
          if (v62 >= result)
          {
            long long v63 = v104;
            uint64_t v97 = v36;
            CRAttributedString.subscript.getter();
            long long v64 = v93;
            uint64_t v65 = v106;
            CRAttributedString.Substring.runs.getter();
            (*(void (**)(char *, uint64_t))(v105 + 8))(v63, v65);
            (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v109, v64, v111);
            long long v66 = v110;
            CRAttributedString.Runs.next()();
            uint64_t v67 = v102;
            uint64_t v105 = *(void *)(v7 + 48);
            uint64_t v106 = v7 + 48;
            if (((unsigned int (*)(char *, uint64_t, uint64_t))v105)(v66, 1, v102) != 1)
            {
              uint64_t v74 = *(char **)(v7 + 32);
              uint64_t v73 = v7 + 32;
              unint64_t v104 = v74;
              unint64_t v103 = (char *)(v92 + 8);
              uint64_t v75 = (void (**)(char *, uint64_t))(v73 - 24);
              uint64_t v76 = &_swiftEmptyArrayStorage;
              uint64_t v77 = v101;
              do
              {
                uint64_t v78 = v66;
                uint64_t v79 = v73;
                ((void (*)(char *, char *, uint64_t))v104)(v77, v78, v67);
                uint64_t v80 = v107;
                uint64_t v81 = CRAttributedString.Runs.Run.attributes.getter();
                __chkstk_darwin(v81, v82);
                *(&v91 - 4) = (uint64_t)&type metadata for CRLWPListStartAttribute;
                unint64_t v83 = sub_10083BD04();
                uint64_t v84 = v112;
                *(&v91 - 3) = v83;
                *(&v91 - 2) = v84;
                swift_getKeyPath();
                sub_10083BD58();
                swift_retain();
                uint64_t v85 = v108;
                CRAttributedString.Attributes.subscript.getter();
                swift_release();
                (*(void (**)(char *, uint64_t))v103)(v80, v85);
                Swift::UInt v86 = v114;
                char v87 = v115;
                if (sub_1006E4330(v114, v115, (uint64_t)v116))
                {
                  (*v75)(v77, v67);
                  uint64_t v73 = v79;
                  long long v66 = v110;
                }
                else
                {
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v76 = sub_100F61C80(0, v76[2] + 1, 1, v76);
                  }
                  uint64_t v73 = v79;
                  unint64_t v89 = v76[2];
                  unint64_t v88 = v76[3];
                  long long v66 = v110;
                  if (v89 >= v88 >> 1) {
                    uint64_t v76 = sub_100F61C80((void *)(v88 > 1), v89 + 1, 1, v76);
                  }
                  v76[2] = v89 + 1;
                  uint64_t v90 = &v76[2 * v89];
                  v90[4] = v86;
                  *((unsigned char *)v90 + 40) = v87;
                  sub_100CB5370((uint64_t)v113, v86, v87);
                  uint64_t v77 = v101;
                  uint64_t v67 = v102;
                  (*v75)(v101, v102);
                }
                CRAttributedString.Runs.next()();
              }
              while (((unsigned int (*)(char *, uint64_t, uint64_t))v105)(v66, 1, v67) != 1);
            }
            (*(void (**)(char *, uint64_t))(v94 + 8))(v109, v111);
            uint64_t v44 = v99;
            long long v58 = v100;
            uint64_t v56 = v98;
            uint64_t v36 = v97;
            goto LABEL_13;
          }
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  uint64_t v42 = *(void *)&v41[v38];
  if (!v42)
  {
LABEL_32:
    __break(1u);
    return result;
  }
  (*(void (**)(void))(*(void *)v42 + 760))();
  sub_1005D3C94((uint64_t)&v24[*(int *)(v39 + 20)], (uint64_t)v27);
  sub_10104835C((uint64_t)v24, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v43 = v95;
  uint64_t v44 = v99;
  v40(v95, &v27[*(int *)(v96 + 20)], v99);
  sub_10104835C((uint64_t)v27, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v45 = v104;
  uint64_t v46 = CRAttributedString.subscript.getter();
  __chkstk_darwin(v46, v47);
  *(&v91 - 4) = (uint64_t)&type metadata for CRLWPListStartAttribute;
  unint64_t v48 = sub_10083BD04();
  uint64_t v49 = v112;
  *(&v91 - 3) = v48;
  *(&v91 - 2) = v49;
  swift_getKeyPath();
  sub_10083BD58();
  swift_retain();
  uint64_t v50 = v106;
  CRAttributedString.Substring.subscript.getter();
  swift_release();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v45, v50);
  Swift::UInt v51 = v114;
  char v52 = v115;
  long long v53 = sub_100F61C80(0, 1, 1, &_swiftEmptyArrayStorage);
  unint64_t v55 = v53[2];
  unint64_t v54 = v53[3];
  if (v55 >= v54 >> 1) {
    long long v53 = sub_100F61C80((void *)(v54 > 1), v55 + 1, 1, v53);
  }
  uint64_t v56 = v98;
  v53[2] = v55 + 1;
  uint64_t v57 = &v53[2 * v55];
  v57[4] = v51;
  *((unsigned char *)v57 + 40) = v52;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v43, v44);
  long long v58 = v100;
LABEL_13:
  long long v68 = v58;
  uint64_t v69 = swift_bridgeObjectRetain();
  uint64_t v70 = sub_101047B64(v69);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v71 = v70[2];
  if (v71 == 1)
  {
    uint64_t v72 = v70[4];
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v36, v44);
    return v72;
  }
  else if (v71)
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v36, v44);
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v36, v44);
    return 1;
  }
  return (uint64_t)v70;
}

uint64_t sub_1010397A0(uint64_t a1, char *a2, char *a3, char *a4)
{
  uint64_t v105 = a4;
  uint64_t v98 = a3;
  uint64_t v114 = a1;
  uint64_t v110 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v93 = *(void *)(v110 - 8);
  __chkstk_darwin(v110, v5);
  uint64_t v109 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_1005057FC(&qword_1016879D0);
  uint64_t v7 = *(void *)(v104 - 8);
  __chkstk_darwin(v104, v8);
  unint64_t v103 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_1016879C8);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v112 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_1005057FC(&qword_1016879E0);
  uint64_t v95 = *(void *)(v113 - 8);
  uint64_t v14 = __chkstk_darwin(v113, v13);
  uint64_t v94 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v16);
  uint64_t v111 = (char *)&v93 - v17;
  uint64_t v18 = sub_1005057FC(&qword_101687AE0);
  uint64_t v107 = *(void *)(v18 - 8);
  uint64_t v108 = v18;
  __chkstk_darwin(v18, v19);
  uint64_t v106 = (char *)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v21, v22);
  id v24 = (char *)&v93 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v97, v25);
  id v27 = (char *)&v93 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v31 = __chkstk_darwin(v28, v30);
  uint64_t v96 = (char *)&v93 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v31, v33);
  uint64_t v36 = (char *)&v93 - v35;
  uint64_t v102 = a2;
  uint64_t v37 = *(void *)&a2[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v37) {
    goto LABEL_31;
  }
  uint64_t v38 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  (*(void (**)(uint64_t))(*(void *)v37 + 760))(result);
  uint64_t v39 = v21;
  sub_1005D3C94((uint64_t)&v24[*(int *)(v21 + 20)], (uint64_t)v27);
  sub_10104835C((uint64_t)v24, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v99 = v29;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  v40(v36, v27, v28);
  sub_10104835C((uint64_t)v27, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v118 = &_swiftEmptySetSingleton;
  uint64_t v101 = v28;
  uint64_t v100 = v36;
  uint64_t result = CRAttributedString.count.getter();
  id v41 = v102;
  if (result)
  {
    uint64_t result = sub_1009044F8((uint64_t)v98, (uint64_t)v105);
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100904750(v98, v105);
      if (__OFSUB__(v59, result))
      {
        __break(1u);
      }
      else
      {
        uint64_t result = [v41 textRangeForParagraphsInCharRange:result, v59 - result];
        BOOL v61 = __OFADD__(result, v60);
        uint64_t v62 = result + v60;
        if (!v61)
        {
          if (v62 >= result)
          {
            long long v63 = v106;
            CRAttributedString.subscript.getter();
            long long v64 = v94;
            uint64_t v65 = v108;
            CRAttributedString.Substring.runs.getter();
            (*(void (**)(char *, uint64_t))(v107 + 8))(v63, v65);
            (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v111, v64, v113);
            long long v66 = v112;
            CRAttributedString.Runs.next()();
            uint64_t v67 = v104;
            uint64_t v107 = *(void *)(v7 + 48);
            uint64_t v108 = v7 + 48;
            if (((unsigned int (*)(char *, uint64_t, uint64_t))v107)(v66, 1, v104) != 1)
            {
              uint64_t v75 = *(char **)(v7 + 32);
              uint64_t v74 = v7 + 32;
              uint64_t v106 = v75;
              uint64_t v105 = (char *)(v93 + 8);
              uint64_t v76 = (void (**)(char *, uint64_t))(v74 - 24);
              uint64_t v77 = &_swiftEmptyArrayStorage;
              uint64_t v78 = v103;
              do
              {
                uint64_t v79 = v66;
                uint64_t v80 = v74;
                ((void (*)(char *, char *, uint64_t))v106)(v78, v79, v67);
                uint64_t v81 = v109;
                uint64_t v82 = CRAttributedString.Runs.Run.attributes.getter();
                __chkstk_darwin(v82, v83);
                *(&v93 - 4) = (uint64_t)&type metadata for CRLWPListStyleTypeAttribute;
                unint64_t v84 = sub_10083E1BC();
                uint64_t v85 = v114;
                *(&v93 - 3) = v84;
                *(&v93 - 2) = v85;
                swift_getKeyPath();
                sub_10083E210();
                swift_retain();
                uint64_t v86 = v110;
                CRAttributedString.Attributes.subscript.getter();
                swift_release();
                (*(void (**)(char *, uint64_t))v105)(v81, v86);
                uint64_t v87 = (uint64_t)v118;
                uint64_t v88 = v116;
                unsigned __int8 v89 = v117;
                swift_bridgeObjectRetain();
                LOBYTE(v86) = sub_1006E4428(v88, v89, v87);
                swift_bridgeObjectRelease();
                if (v86)
                {
                  (*v76)(v78, v67);
                  uint64_t v74 = v80;
                  long long v66 = v112;
                }
                else
                {
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v77 = sub_100F61C8C(0, v77[2] + 1, 1, v77);
                  }
                  uint64_t v74 = v80;
                  unint64_t v91 = v77[2];
                  unint64_t v90 = v77[3];
                  long long v66 = v112;
                  if (v91 >= v90 >> 1) {
                    uint64_t v77 = sub_100F61C8C((void *)(v90 > 1), v91 + 1, 1, v77);
                  }
                  v77[2] = v91 + 1;
                  uint64_t v92 = &v77[2 * v91];
                  v92[4] = v88;
                  *((unsigned char *)v92 + 40) = v89;
                  sub_100CB54E0((uint64_t)v115, v88, v89);
                  uint64_t v78 = v103;
                  uint64_t v67 = v104;
                  (*v76)(v103, v104);
                }
                CRAttributedString.Runs.next()();
              }
              while (((unsigned int (*)(char *, uint64_t, uint64_t))v107)(v66, 1, v67) != 1);
            }
            (*(void (**)(char *, uint64_t))(v95 + 8))(v111, v113);
            uint64_t v45 = v101;
            uint64_t v43 = v102;
            uint64_t v57 = v99;
            goto LABEL_13;
          }
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  uint64_t v42 = *(void *)&v41[v38];
  if (!v42)
  {
LABEL_32:
    __break(1u);
    return result;
  }
  uint64_t v43 = v41;
  (*(void (**)(void))(*(void *)v42 + 760))();
  sub_1005D3C94((uint64_t)&v24[*(int *)(v39 + 20)], (uint64_t)v27);
  sub_10104835C((uint64_t)v24, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v44 = v96;
  uint64_t v45 = v101;
  v40(v96, &v27[*(int *)(v97 + 20)], v101);
  sub_10104835C((uint64_t)v27, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v46 = v106;
  uint64_t v47 = CRAttributedString.subscript.getter();
  __chkstk_darwin(v47, v48);
  *(&v93 - 4) = (uint64_t)&type metadata for CRLWPListStyleTypeAttribute;
  unint64_t v49 = sub_10083E1BC();
  uint64_t v50 = v114;
  *(&v93 - 3) = v49;
  *(&v93 - 2) = v50;
  swift_getKeyPath();
  sub_10083E210();
  swift_retain();
  uint64_t v51 = v108;
  CRAttributedString.Substring.subscript.getter();
  swift_release();
  (*(void (**)(char *, uint64_t))(v107 + 8))(v46, v51);
  uint64_t v52 = v116;
  unsigned __int8 v53 = v117;
  unint64_t v54 = sub_100F61C8C(0, 1, 1, &_swiftEmptyArrayStorage);
  unint64_t v56 = v54[2];
  unint64_t v55 = v54[3];
  if (v56 >= v55 >> 1) {
    unint64_t v54 = sub_100F61C8C((void *)(v55 > 1), v56 + 1, 1, v54);
  }
  uint64_t v57 = v99;
  void v54[2] = v56 + 1;
  long long v58 = &v54[2 * v56];
  v58[4] = v52;
  *((unsigned char *)v58 + 40) = v53;
  (*(void (**)(char *, uint64_t))(v57 + 8))(v44, v45);
LABEL_13:
  long long v68 = v43;
  uint64_t v69 = swift_bridgeObjectRetain();
  uint64_t v70 = sub_101047A78(v69);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v71 = v70[2];
  if (v71 == 1)
  {
    uint64_t v73 = *((unsigned __int8 *)v70 + 32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v100, v45);
    return v73;
  }
  else
  {
    uint64_t v72 = v100;
    if (v71)
    {
      (*(void (**)(char *, uint64_t))(v57 + 8))(v100, v45);
    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v72, v45);
      return 0;
    }
  }
  return (uint64_t)v70;
}

uint64_t sub_10103A300(uint64_t a1, char *a2, char *a3, char *a4)
{
  uint64_t v98 = a3;
  uint64_t v99 = a4;
  uint64_t v111 = a1;
  uint64_t v108 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v90 = *(void *)(v108 - 8);
  __chkstk_darwin(v108, v5);
  uint64_t v107 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_1005057FC(&qword_1016879D0);
  uint64_t v7 = *(void *)(v101 - 8);
  __chkstk_darwin(v101, v8);
  uint64_t v100 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_1016879C8);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_1005057FC(&qword_1016879E0);
  uint64_t v92 = *(void *)(v110 - 8);
  uint64_t v15 = __chkstk_darwin(v110, v14);
  unint64_t v91 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v17);
  uint64_t v109 = (char *)&v90 - v18;
  uint64_t v19 = sub_1005057FC(&qword_101687AE0);
  uint64_t v104 = *(void *)(v19 - 8);
  uint64_t v105 = (unsigned int (*)(void, void, void))v19;
  __chkstk_darwin(v19, v20);
  unint64_t v103 = (void (**)(char *, uint64_t))((char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v93, v26);
  uint64_t v28 = (char *)&v90 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v32 = __chkstk_darwin(v29, v31);
  uint64_t v106 = (char *)&v90 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v32, v34);
  uint64_t v37 = (char *)&v90 - v36;
  uint64_t v97 = a2;
  uint64_t v102 = (void (**)(char *, uint64_t))OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v38 = *(void *)&a2[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v38) {
    goto LABEL_32;
  }
  (*(void (**)(uint64_t))(*(void *)v38 + 760))(result);
  uint64_t v39 = v22;
  sub_1005D3C94((uint64_t)&v25[*(int *)(v22 + 20)], (uint64_t)v28);
  sub_10104835C((uint64_t)v25, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v94 = v30;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  v40(v37, v28, v29);
  sub_10104835C((uint64_t)v28, type metadata accessor for CRLWPStorageCRDTData);
  char v115 = &_swiftEmptySetSingleton;
  uint64_t v96 = v29;
  uint64_t v95 = v37;
  uint64_t result = CRAttributedString.count.getter();
  id v41 = v97;
  if (result)
  {
    uint64_t result = sub_1009044F8((uint64_t)v98, (uint64_t)v99);
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100904750(v98, v99);
      if (__OFSUB__(v58, result))
      {
        __break(1u);
      }
      else
      {
        uint64_t result = [v41 textRangeForParagraphsInCharRange:result, v58 - result];
        BOOL v60 = __OFADD__(result, v59);
        uint64_t v61 = result + v59;
        if (!v60)
        {
          if (v61 >= result)
          {
            uint64_t v62 = (char *)v103;
            CRAttributedString.subscript.getter();
            long long v63 = v91;
            long long v64 = v105;
            CRAttributedString.Substring.runs.getter();
            (*(void (**)(char *, unsigned int (*)(void, void, void)))(v104 + 8))(v62, v64);
            (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v109, v63, v110);
            CRAttributedString.Runs.next()();
            uint64_t v65 = v101;
            uint64_t v105 = *(unsigned int (**)(void, void, void))(v7 + 48);
            uint64_t v106 = (char *)(v7 + 48);
            if (v105(v13, 1, v101) != 1)
            {
              uint64_t v72 = *(void *)(v7 + 32);
              uint64_t v71 = v7 + 32;
              uint64_t v104 = v72;
              uint64_t v102 = (void (**)(char *, uint64_t))(v71 - 24);
              unint64_t v103 = (void (**)(char *, uint64_t))(v90 + 8);
              uint64_t v73 = &_swiftEmptyArrayStorage;
              uint64_t v74 = v100;
              do
              {
                uint64_t v75 = v13;
                uint64_t v76 = v13;
                uint64_t v77 = v71;
                ((void (*)(char *, char *, uint64_t))v104)(v74, v76, v65);
                uint64_t v78 = v107;
                uint64_t v79 = CRAttributedString.Runs.Run.attributes.getter();
                __chkstk_darwin(v79, v80);
                *(&v90 - 4) = (uint64_t)&type metadata for CRLWPWritingDirectionAttribute;
                unint64_t v81 = sub_1008429AC();
                uint64_t v82 = v111;
                *(&v90 - 3) = v81;
                *(&v90 - 2) = v82;
                swift_getKeyPath();
                sub_100842A00();
                swift_retain();
                uint64_t v83 = v108;
                CRAttributedString.Attributes.subscript.getter();
                swift_release();
                (*v103)(v78, v83);
                uint64_t v84 = (uint64_t)v115;
                uint64_t v85 = v113;
                unsigned __int8 v86 = v114;
                swift_bridgeObjectRetain();
                LOBYTE(v83) = sub_1006E45B0(v85, v86, v84);
                swift_bridgeObjectRelease();
                if (v83)
                {
                  (*v102)(v74, v65);
                  uint64_t v71 = v77;
                  uint64_t v13 = v75;
                }
                else
                {
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v73 = sub_100F61DA4(0, v73[2] + 1, 1, v73);
                  }
                  uint64_t v71 = v77;
                  unint64_t v88 = v73[2];
                  unint64_t v87 = v73[3];
                  uint64_t v13 = v75;
                  if (v88 >= v87 >> 1) {
                    uint64_t v73 = sub_100F61DA4((void *)(v87 > 1), v88 + 1, 1, v73);
                  }
                  v73[2] = v88 + 1;
                  unsigned __int8 v89 = &v73[2 * v88];
                  v89[4] = v85;
                  *((unsigned char *)v89 + 40) = v86;
                  sub_100CB56F0((uint64_t)v112, v85, v86);
                  uint64_t v65 = v101;
                  uint64_t v74 = v100;
                  (*v102)(v100, v101);
                }
                CRAttributedString.Runs.next()();
              }
              while (v105(v13, 1, v65) != 1);
            }
            (*(void (**)(char *, uint64_t))(v92 + 8))(v109, v110);
            uint64_t v43 = v97;
            uint64_t v44 = v96;
            uint64_t v56 = v94;
            goto LABEL_13;
          }
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
  }
  uint64_t v42 = *(uint64_t *)((char *)v102 + (void)v41);
  if (!v42)
  {
LABEL_33:
    __break(1u);
    return result;
  }
  uint64_t v43 = v41;
  (*(void (**)(void))(*(void *)v42 + 760))();
  sub_1005D3C94((uint64_t)&v25[*(int *)(v39 + 20)], (uint64_t)v28);
  sub_10104835C((uint64_t)v25, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v44 = v96;
  v40(v106, &v28[*(int *)(v93 + 20)], v96);
  sub_10104835C((uint64_t)v28, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v45 = (char *)v103;
  uint64_t v46 = CRAttributedString.subscript.getter();
  __chkstk_darwin(v46, v47);
  *(&v90 - 4) = (uint64_t)&type metadata for CRLWPWritingDirectionAttribute;
  unint64_t v48 = sub_1008429AC();
  uint64_t v49 = v111;
  *(&v90 - 3) = v48;
  *(&v90 - 2) = v49;
  swift_getKeyPath();
  sub_100842A00();
  swift_retain();
  uint64_t v50 = v105;
  CRAttributedString.Substring.subscript.getter();
  swift_release();
  (*(void (**)(char *, unsigned int (*)(void, void, void)))(v104 + 8))(v45, v50);
  uint64_t v51 = v113;
  unsigned __int8 v52 = v114;
  unsigned __int8 v53 = sub_100F61DA4(0, 1, 1, &_swiftEmptyArrayStorage);
  unint64_t v55 = v53[2];
  unint64_t v54 = v53[3];
  if (v55 >= v54 >> 1) {
    unsigned __int8 v53 = sub_100F61DA4((void *)(v54 > 1), v55 + 1, 1, v53);
  }
  uint64_t v56 = v94;
  v53[2] = v55 + 1;
  uint64_t v57 = &v53[2 * v55];
  v57[4] = v51;
  *((unsigned char *)v57 + 40) = v52;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v106, v44);
LABEL_13:
  long long v66 = v43;
  uint64_t v67 = swift_bridgeObjectRetain();
  uint64_t v68 = sub_1010475E0(v67, v66);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v69 = *(void *)(v68 + 16);
  if (v69 == 1)
  {
    uint64_t v70 = *(void *)(v68 + 32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v95, v44);
    return v70;
  }
  else
  {
    if (!v69)
    {
      swift_bridgeObjectRelease();
      uint64_t v68 = sub_100915FA8(v66);
    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v95, v44);
  }
  return v68;
}

uint64_t sub_10103AE6C(uint64_t a1, char *a2, char *a3, char *a4)
{
  uint64_t v98 = a3;
  uint64_t v99 = a4;
  uint64_t v111 = a1;
  uint64_t v108 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v90 = *(void *)(v108 - 8);
  __chkstk_darwin(v108, v5);
  uint64_t v107 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_1005057FC(&qword_1016879D0);
  uint64_t v7 = *(void *)(v101 - 8);
  __chkstk_darwin(v101, v8);
  uint64_t v100 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_1016879C8);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_1005057FC(&qword_1016879E0);
  uint64_t v92 = *(void *)(v110 - 8);
  uint64_t v15 = __chkstk_darwin(v110, v14);
  unint64_t v91 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v17);
  uint64_t v109 = (char *)&v90 - v18;
  uint64_t v19 = sub_1005057FC(&qword_101687AE0);
  uint64_t v104 = *(void *)(v19 - 8);
  uint64_t v105 = (unsigned int (*)(void, void, void))v19;
  __chkstk_darwin(v19, v20);
  unint64_t v103 = (void (**)(char *, uint64_t))((char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v93, v26);
  uint64_t v28 = (char *)&v90 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v32 = __chkstk_darwin(v29, v31);
  uint64_t v106 = (char *)&v90 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v32, v34);
  uint64_t v37 = (char *)&v90 - v36;
  uint64_t v97 = a2;
  uint64_t v102 = (void (**)(char *, uint64_t))OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v38 = *(void *)&a2[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v38) {
    goto LABEL_32;
  }
  (*(void (**)(uint64_t))(*(void *)v38 + 760))(result);
  uint64_t v39 = v22;
  sub_1005D3C94((uint64_t)&v25[*(int *)(v22 + 20)], (uint64_t)v28);
  sub_10104835C((uint64_t)v25, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v94 = v30;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  v40(v37, v28, v29);
  sub_10104835C((uint64_t)v28, type metadata accessor for CRLWPStorageCRDTData);
  char v115 = &_swiftEmptySetSingleton;
  uint64_t v96 = v29;
  uint64_t v95 = v37;
  uint64_t result = CRAttributedString.count.getter();
  id v41 = v97;
  if (result)
  {
    uint64_t result = sub_1009044F8((uint64_t)v98, (uint64_t)v99);
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100904750(v98, v99);
      if (__OFSUB__(v58, result))
      {
        __break(1u);
      }
      else
      {
        uint64_t result = [v41 textRangeForParagraphsInCharRange:result, v58 - result];
        BOOL v60 = __OFADD__(result, v59);
        uint64_t v61 = result + v59;
        if (!v60)
        {
          if (v61 >= result)
          {
            uint64_t v62 = (char *)v103;
            CRAttributedString.subscript.getter();
            long long v63 = v91;
            long long v64 = v105;
            CRAttributedString.Substring.runs.getter();
            (*(void (**)(char *, unsigned int (*)(void, void, void)))(v104 + 8))(v62, v64);
            (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v109, v63, v110);
            CRAttributedString.Runs.next()();
            uint64_t v65 = v101;
            uint64_t v105 = *(unsigned int (**)(void, void, void))(v7 + 48);
            uint64_t v106 = (char *)(v7 + 48);
            if (v105(v13, 1, v101) != 1)
            {
              uint64_t v72 = *(void *)(v7 + 32);
              uint64_t v71 = v7 + 32;
              uint64_t v104 = v72;
              uint64_t v102 = (void (**)(char *, uint64_t))(v71 - 24);
              unint64_t v103 = (void (**)(char *, uint64_t))(v90 + 8);
              uint64_t v73 = &_swiftEmptyArrayStorage;
              uint64_t v74 = v100;
              do
              {
                uint64_t v75 = v13;
                uint64_t v76 = v13;
                uint64_t v77 = v71;
                ((void (*)(char *, char *, uint64_t))v104)(v74, v76, v65);
                uint64_t v78 = v107;
                uint64_t v79 = CRAttributedString.Runs.Run.attributes.getter();
                __chkstk_darwin(v79, v80);
                *(&v90 - 4) = (uint64_t)&type metadata for CRLWPParagraphAlignmentAttribute;
                unint64_t v81 = sub_1005F2218();
                uint64_t v82 = v111;
                *(&v90 - 3) = v81;
                *(&v90 - 2) = v82;
                swift_getKeyPath();
                sub_100842B0C();
                swift_retain();
                uint64_t v83 = v108;
                CRAttributedString.Attributes.subscript.getter();
                swift_release();
                (*v103)(v78, v83);
                uint64_t v84 = (uint64_t)v115;
                uint64_t v85 = v113;
                unsigned __int8 v86 = v114;
                swift_bridgeObjectRetain();
                LOBYTE(v83) = sub_1006E4770(v85, v86, v84);
                swift_bridgeObjectRelease();
                if (v83)
                {
                  (*v102)(v74, v65);
                  uint64_t v71 = v77;
                  uint64_t v13 = v75;
                }
                else
                {
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v73 = sub_100F61DB0(0, v73[2] + 1, 1, v73);
                  }
                  uint64_t v71 = v77;
                  unint64_t v88 = v73[2];
                  unint64_t v87 = v73[3];
                  uint64_t v13 = v75;
                  if (v88 >= v87 >> 1) {
                    uint64_t v73 = sub_100F61DB0((void *)(v87 > 1), v88 + 1, 1, v73);
                  }
                  v73[2] = v88 + 1;
                  unsigned __int8 v89 = &v73[2 * v88];
                  v89[4] = v85;
                  *((unsigned char *)v89 + 40) = v86;
                  sub_100CB5934((uint64_t)v112, v85, v86);
                  uint64_t v65 = v101;
                  uint64_t v74 = v100;
                  (*v102)(v100, v101);
                }
                CRAttributedString.Runs.next()();
              }
              while (v105(v13, 1, v65) != 1);
            }
            (*(void (**)(char *, uint64_t))(v92 + 8))(v109, v110);
            uint64_t v43 = v97;
            uint64_t v44 = v96;
            uint64_t v56 = v94;
            goto LABEL_13;
          }
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
  }
  uint64_t v42 = *(uint64_t *)((char *)v102 + (void)v41);
  if (!v42)
  {
LABEL_33:
    __break(1u);
    return result;
  }
  uint64_t v43 = v41;
  (*(void (**)(void))(*(void *)v42 + 760))();
  sub_1005D3C94((uint64_t)&v25[*(int *)(v39 + 20)], (uint64_t)v28);
  sub_10104835C((uint64_t)v25, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v44 = v96;
  v40(v106, &v28[*(int *)(v93 + 20)], v96);
  sub_10104835C((uint64_t)v28, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v45 = (char *)v103;
  uint64_t v46 = CRAttributedString.subscript.getter();
  __chkstk_darwin(v46, v47);
  *(&v90 - 4) = (uint64_t)&type metadata for CRLWPParagraphAlignmentAttribute;
  unint64_t v48 = sub_1005F2218();
  uint64_t v49 = v111;
  *(&v90 - 3) = v48;
  *(&v90 - 2) = v49;
  swift_getKeyPath();
  sub_100842B0C();
  swift_retain();
  uint64_t v50 = v105;
  CRAttributedString.Substring.subscript.getter();
  swift_release();
  (*(void (**)(char *, unsigned int (*)(void, void, void)))(v104 + 8))(v45, v50);
  uint64_t v51 = v113;
  unsigned __int8 v52 = v114;
  unsigned __int8 v53 = sub_100F61DB0(0, 1, 1, &_swiftEmptyArrayStorage);
  unint64_t v55 = v53[2];
  unint64_t v54 = v53[3];
  if (v55 >= v54 >> 1) {
    unsigned __int8 v53 = sub_100F61DB0((void *)(v54 > 1), v55 + 1, 1, v53);
  }
  uint64_t v56 = v94;
  v53[2] = v55 + 1;
  uint64_t v57 = &v53[2 * v55];
  v57[4] = v51;
  *((unsigned char *)v57 + 40) = v52;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v106, v44);
LABEL_13:
  long long v66 = v43;
  uint64_t v67 = swift_bridgeObjectRetain();
  uint64_t v68 = sub_101047144(v67, v66);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v69 = *(void *)(v68 + 16);
  if (v69 == 1)
  {
    uint64_t v70 = *(void *)(v68 + 32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v95, v44);
    return v70;
  }
  else
  {
    if (!v69)
    {
      swift_bridgeObjectRelease();
      uint64_t v68 = sub_100915C0C(v66);
    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v95, v44);
  }
  return v68;
}

uint64_t sub_10103B9D8(uint64_t a1, char *a2, char *a3, char *a4)
{
  uint64_t v185 = a3;
  unint64_t v186 = a4;
  uint64_t v203 = a1;
  uint64_t v199 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v227 = *(void *)(v199 - 8);
  __chkstk_darwin(v199, v5);
  uint64_t v198 = (char *)&v180 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_1016879D0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v190 = v7;
  uint64_t v191 = v8;
  __chkstk_darwin(v7, v9);
  uint64_t v189 = (char *)&v180 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_1016879C8);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v200 = (char *)&v180 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v202 = sub_1005057FC(&qword_1016879E0);
  uint64_t v181 = *(void *)(v202 - 8);
  uint64_t v15 = __chkstk_darwin(v202, v14);
  uint64_t v228 = (uint64_t)&v180 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v17);
  uint64_t v201 = (char *)&v180 - v18;
  uint64_t v19 = sub_1005057FC(&qword_101687AE0);
  uint64_t v232 = *(void *)(v19 - 8);
  uint64_t v233 = v19;
  __chkstk_darwin(v19, v20);
  uint64_t v231 = (uint64_t)&v180 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v180 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v230 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v230, v26);
  uint64_t v28 = (char *)&v180 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v32 = __chkstk_darwin(v29, v31);
  uint64_t v229 = (uint64_t)&v180 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v32, v34);
  uint64_t v234 = (uint64_t)&v180 - v36;
  uint64_t result = __chkstk_darwin(v35, v37);
  uint64_t v40 = (char *)&v180 - v39;
  uint64_t v41 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v197 = a2;
  uint64_t v42 = *(void *)&a2[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v42)
  {
LABEL_103:
    __break(1u);
    goto LABEL_104;
  }
  (*(void (**)(uint64_t))(*(void *)v42 + 760))(result);
  sub_1005D3C94((uint64_t)&v25[*(int *)(v22 + 20)], (uint64_t)v28);
  sub_10104835C((uint64_t)v25, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v187 = v30;
  uint64_t v45 = *(void (**)(uint64_t, char *, uint64_t))(v30 + 16);
  uint64_t v44 = (void (*)(uint64_t, uint64_t))(v30 + 16);
  uint64_t v43 = v45;
  v45((uint64_t)v40, v28, v29);
  sub_10104835C((uint64_t)v28, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v266 = &_swiftEmptySetSingleton;
  uint64_t v188 = v29;
  uint64_t v183 = v40;
  uint64_t result = CRAttributedString.count.getter();
  uint64_t v46 = v197;
  if (!result || (uint64_t result = sub_1009044F8((uint64_t)v185, (uint64_t)v186), (result & 1) != 0))
  {
    uint64_t v47 = *(void *)&v46[v41];
    if (!v47)
    {
LABEL_104:
      __break(1u);
      goto LABEL_105;
    }
    (*(void (**)(void))(*(void *)v47 + 760))();
    sub_1005D3C94((uint64_t)&v25[*(int *)(v22 + 20)], (uint64_t)v28);
    sub_10104835C((uint64_t)v25, type metadata accessor for CRLWPShapeItemCRDTData);
    v43(v234, &v28[*(int *)(v230 + 20)], v188);
    sub_10104835C((uint64_t)v28, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v48 = v231;
    uint64_t v49 = CRAttributedString.subscript.getter();
    __chkstk_darwin(v49, v50);
    sub_10083E34C();
    swift_getKeyPath();
    sub_100913244();
    swift_retain();
    uint64_t v51 = v233;
    CRAttributedString.Substring.subscript.getter();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v232 + 8))(v48, v51);
    uint64_t v52 = v242;
    uint64_t v53 = v243;
    uint64_t v54 = v244;
    uint64_t v55 = v245;
    uint64_t v56 = v246;
    uint64_t v57 = v247;
    uint64_t v58 = v248;
    uint64_t v232 = v236;
    uint64_t v233 = v235;
    uint64_t v230 = v238;
    uint64_t v231 = v237;
    uint64_t v228 = v240;
    uint64_t v229 = v239;
    uint64_t v227 = v241;
    sub_10051B2E8(v235, v236, v237, v238, v239, v240, v241, v242, v243, v244, v245, v246, v247);
    uint64_t v59 = sub_100F61DBC(0, 1, 1, &_swiftEmptyArrayStorage);
    unint64_t v61 = v59[2];
    unint64_t v60 = v59[3];
    uint64_t v62 = v59;
    if (v61 >= v60 >> 1) {
      uint64_t v62 = sub_100F61DBC((void *)(v60 > 1), v61 + 1, 1, v59);
    }
    v62[2] = v61 + 1;
    long long v63 = &v62[14 * v61];
    uint64_t v65 = v232;
    uint64_t v64 = v233;
    v63[4] = v233;
    v63[5] = v65;
    uint64_t v67 = v230;
    uint64_t v66 = v231;
    void v63[6] = v231;
    unsigned char v63[7] = v67;
    uint64_t v69 = v228;
    uint64_t v68 = v229;
    v63[8] = v229;
    v63[9] = v69;
    uint64_t v70 = v227;
    v63[10] = v227;
    v63[11] = v52;
    v63[12] = v53;
    v63[13] = v54;
    v63[14] = v55;
    v63[15] = v56;
    v63[16] = v57;
    v63[17] = v58;
    sub_10051ABBC(v64, v65, v66, v67, v68, v69, v70, v52, v53, v54, v55, v56, v57);
    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v187 + 8);
    v44(v234, v188);
    uint64_t v71 = v197;
LABEL_18:
    unint64_t v87 = v71;
    uint64_t v88 = swift_bridgeObjectRetain();
    unint64_t v89 = (unint64_t)sub_101046658(v88, v87);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v89 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v172 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v172)
      {
        swift_bridgeObjectRetain();
        uint64_t v173 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t result = swift_bridgeObjectRelease();
        if (v173 >= 2) {
          goto LABEL_21;
        }
        goto LABEL_94;
      }
    }
    else
    {
      uint64_t v90 = *(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v90)
      {
        if (v90 >= 2)
        {
LABEL_21:
          unint64_t v91 = v89;
LABEL_99:
          v44((uint64_t)v183, v188);
          return v91;
        }
LABEL_94:
        if ((v89 & 0xC000000000000001) == 0)
        {
          if (*(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v174 = *(id *)(v89 + 32);
LABEL_97:
            unint64_t v91 = (unint64_t)v174;
            swift_bridgeObjectRelease();
            goto LABEL_99;
          }
          __break(1u);
          goto LABEL_103;
        }
LABEL_101:
        id v174 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_97;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v91 = (unint64_t)sub_100915524(v87);
    goto LABEL_99;
  }
  uint64_t result = (uint64_t)sub_100904750(v185, v186);
  uint64_t v234 = v72;
  uint64_t v73 = *(void *)&v46[v41];
  if (v73)
  {
    uint64_t v74 = result;
    uint64_t v71 = v46;
    (*(void (**)(void))(*(void *)v73 + 760))();
    sub_1005D3C94((uint64_t)&v25[*(int *)(v22 + 20)], (uint64_t)v28);
    sub_10104835C((uint64_t)v25, type metadata accessor for CRLWPShapeItemCRDTData);
    uint64_t v75 = v229;
    uint64_t v76 = v188;
    v43(v229, v28, v188);
    sub_10104835C((uint64_t)v28, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v77 = CRAttributedString.count.getter();
    uint64_t v78 = *(void (**)(uint64_t, uint64_t))(v187 + 8);
    v78(v75, v76);
    if (v77 >= (v74 & ~(v74 >> 63))) {
      uint64_t v79 = v74 & ~(v74 >> 63);
    }
    else {
      uint64_t v79 = v77;
    }
    if (v77 >= (v234 & ~(v234 >> 63))) {
      uint64_t v80 = v234 & ~(v234 >> 63);
    }
    else {
      uint64_t v80 = v77;
    }
    if (v80 < v79)
    {
      __break(1u);
      goto LABEL_101;
    }
    uint64_t v180 = v78;
    uint64_t v81 = v231;
    CRAttributedString.subscript.getter();
    uint64_t v82 = v228;
    uint64_t v83 = v233;
    CRAttributedString.Substring.runs.getter();
    (*(void (**)(uint64_t, uint64_t))(v232 + 8))(v81, v83);
    (*(void (**)(char *, uint64_t, uint64_t))(v181 + 32))(v201, v82, v202);
    uint64_t v84 = v200;
    CRAttributedString.Runs.next()();
    uint64_t v85 = v190;
    uint64_t v86 = v191;
    uint64_t v195 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v191 + 48);
    uint64_t v196 = v191 + 48;
    if (v195(v84, 1, v190) == 1)
    {
LABEL_17:
      (*(void (**)(char *, uint64_t))(v181 + 8))(v201, v202);
      uint64_t v44 = v180;
      goto LABEL_18;
    }
    uint64_t v93 = *(void (**)(char *, char *, uint64_t))(v86 + 32);
    uint64_t v92 = v86 + 32;
    CKRecordID v193 = (void (**)(char *, uint64_t))(v227 + 8);
    Swift::String v194 = v93;
    uint64_t v192 = (void (**)(char *, uint64_t))(v92 - 24);
    uint64_t v94 = &_swiftEmptyArrayStorage;
    uint64_t v191 = v92;
    uint64_t v95 = v189;
    while (2)
    {
      uint64_t v205 = v94;
      v194(v95, v84, v85);
      uint64_t v96 = v198;
      uint64_t v97 = CRAttributedString.Runs.Run.attributes.getter();
      __chkstk_darwin(v97, v98);
      sub_10083E34C();
      swift_getKeyPath();
      sub_100913244();
      swift_retain();
      uint64_t v99 = v199;
      CRAttributedString.Attributes.subscript.getter();
      swift_release();
      (*v193)(v96, v99);
      uint64_t v100 = v266;
      sub_10051B3EC((uint64_t)v265, (uint64_t)v267, &qword_101686E98);
      if (!v100[2]) {
        goto LABEL_86;
      }
      uint64_t v101 = v265[0];
      uint64_t v102 = v265[1];
      uint64_t v103 = v265[2];
      uint64_t v104 = v265[3];
      uint64_t v105 = v265[4];
      uint64_t v106 = v265[5];
      uint64_t v214 = v265[6];
      uint64_t v211 = v265[8];
      uint64_t v212 = v265[7];
      uint64_t v208 = v265[9];
      uint64_t v210 = v265[10];
      uint64_t v107 = v265[11];
      uint64_t v108 = v265[12];
      uint64_t v206 = v265[13];
      Hasher.init(_seed:)();
      sub_10051B3EC((uint64_t)v267, (uint64_t)v280, &qword_101686E98);
      uint64_t v213 = v106;
      uint64_t v215 = v107;
      uint64_t v216 = v108;
      uint64_t v221 = v102;
      uint64_t v222 = v101;
      uint64_t v217 = v103;
      uint64_t v207 = v104;
      uint64_t v209 = v105;
      if (v280[12])
      {
        Hasher._combine(_:)(1u);
        int v268 = v103;
        char v269 = BYTE4(v103) & 1;
        uint64_t v270 = v104;
        uint64_t v271 = v105;
        uint64_t v272 = v213;
        uint64_t v273 = v214;
        uint64_t v274 = v212;
        uint64_t v275 = v211;
        uint64_t v276 = v208;
        uint64_t v277 = v210;
        uint64_t v278 = v107;
        uint64_t v279 = v108;
        uint64_t v263 = v101;
        char v264 = v102 & 1;
        swift_bridgeObjectRetain();
        sub_10091A53C(v267, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051B2E8);
        sub_1005057FC(&qword_101687C08);
        CRExtensible.hash(into:)();
        sub_1007B037C();
        sub_10091A53C(v267, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051ABBC);
      }
      else
      {
        Hasher._combine(_:)(0);
        swift_bridgeObjectRetain();
      }
      Swift::Int v109 = Hasher._finalize()();
      uint64_t v110 = -1 << *((unsigned char *)v100 + 32);
      unint64_t v111 = v109 & ~v110;
      uint64_t v220 = (char *)(v100 + 7);
      if (((*(void *)((char *)v100 + ((v111 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v111) & 1) == 0)
      {
LABEL_85:
        swift_bridgeObjectRelease();
        uint64_t v71 = v197;
        uint64_t v85 = v190;
        uint64_t v95 = v189;
LABEL_86:
        sub_10091A53C(v267, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051B2E8);
        uint64_t v94 = v205;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v94 = sub_100F61DBC(0, v94[2] + 1, 1, v94);
        }
        uint64_t v84 = v200;
        unint64_t v171 = v94[2];
        unint64_t v170 = v94[3];
        if (v171 >= v170 >> 1) {
          uint64_t v94 = sub_100F61DBC((void *)(v170 > 1), v171 + 1, 1, v94);
        }
        v94[2] = v171 + 1;
        sub_10051B3EC((uint64_t)v267, (uint64_t)&v94[14 * v171 + 4], &qword_101686E98);
        sub_10091A53C(v267, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051B2E8);
        sub_100CB5B78(&v235, v267);
        sub_10051ABBC(v235, v236, v237, v238, v239, v240, v241, v242, v243, v244, v245, v246, v247);
        sub_10091A53C(v267, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051ABBC);
        (*v192)(v95, v85);
        goto LABEL_24;
      }
      uint64_t v218 = ~v110;
      float v112 = *(float *)&v217;
      uint64_t v113 = v213;
      float v114 = *((float *)&v209 + 1);
      float v115 = *(float *)&v212;
      uint64_t v116 = v211;
      float v117 = *((float *)&v212 + 1);
      float v182 = *(float *)&v210;
      v219 = v100;
      while (1)
      {
        uint64_t v124 = (uint64_t *)(v100[6] + 112 * v111);
        uint64_t v126 = *v124;
        uint64_t v125 = v124[1];
        uint64_t v128 = v124[2];
        uint64_t v127 = v124[3];
        uint64_t v129 = v124[4];
        uint64_t v130 = v124[5];
        uint64_t v131 = v124[6];
        uint64_t v133 = v124[8];
        uint64_t v132 = v124[9];
        uint64_t v229 = v124[7];
        uint64_t v230 = v132;
        uint64_t v134 = v124[10];
        uint64_t v232 = v124[11];
        uint64_t v233 = v134;
        uint64_t v135 = v124[12];
        uint64_t v234 = v124[13];
        uint64_t v231 = v135;
        uint64_t v227 = v111;
        uint64_t v228 = v131;
        if (!v135) {
          break;
        }
        sub_10051B3EC((uint64_t)v267, (uint64_t)v281, &qword_101686E98);
        if (!v281[12]) {
          goto LABEL_32;
        }
        uint64_t v235 = v126;
        LOBYTE(v236) = v125 & 1;
        uint64_t v263 = v222;
        char v264 = v221 & 1;
        sub_10091A53C(v267, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051B2E8);
        uint64_t v136 = v230;
        uint64_t v137 = v131;
        uint64_t v138 = v229;
        sub_10051B2E8(v126, v125, v128, v127, v129, v130, v137, v229, v133, v230, v233, v232, v231);
        sub_1008EE6D8();
        if (static CRExtensible.== infix(_:_:)())
        {
          uint64_t v139 = v127;
          uint64_t v140 = v129;
          uint64_t v226 = v130;
          if ((v128 & 0x100000000) != 0)
          {
            uint64_t v144 = v216;
            uint64_t v145 = v215;
            uint64_t v123 = v227;
            uint64_t v141 = v228;
            uint64_t v146 = v129;
            uint64_t v143 = v139;
            if ((v217 & 0x100000000) == 0) {
              goto LABEL_43;
            }
          }
          else
          {
            uint64_t v123 = v227;
            uint64_t v141 = v228;
            uint64_t v142 = v226;
            uint64_t v143 = v139;
            if ((v217 & 0x100000000) != 0)
            {
              uint64_t v155 = v125;
              uint64_t v148 = v228;
              sub_10091A53C(v267, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051ABBC);
              uint64_t v179 = v231;
              uint64_t v178 = v232;
              uint64_t v177 = v233;
              uint64_t v175 = v133;
              uint64_t v176 = v230;
              uint64_t v150 = v126;
              uint64_t v156 = v155;
              uint64_t v157 = v128;
              uint64_t v158 = v139;
              uint64_t v159 = v129;
              uint64_t v160 = v142;
              goto LABEL_64;
            }
            uint64_t v145 = v215;
            uint64_t v144 = v216;
            uint64_t v146 = v129;
            if (*(float *)&v128 != v112) {
              goto LABEL_43;
            }
          }
          uint64_t v204 = v133;
          if (v141)
          {
            if (!v214) {
              goto LABEL_61;
            }
            uint64_t v184 = v125;
            uint64_t v235 = v143;
            LOBYTE(v236) = v146 & 1;
            uint64_t v263 = v207;
            char v264 = v209 & 1;
            uint64_t v148 = v141;
            uint64_t v151 = v143;
            unint64_t v225 = sub_1007B1504();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((static CRExtensible.== infix(_:_:)() & 1) == 0 || *((float *)&v146 + 1) != v114)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_10091A53C(v267, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051ABBC);
              uint64_t v179 = v231;
              uint64_t v178 = v232;
              uint64_t v177 = v233;
              uint64_t v176 = v230;
              uint64_t v175 = v204;
              uint64_t v150 = v126;
              uint64_t v156 = v184;
              uint64_t v157 = v128;
              uint64_t v158 = v151;
LABEL_63:
              uint64_t v159 = v146;
              uint64_t v160 = v226;
LABEL_64:
              uint64_t v161 = v148;
              goto LABEL_65;
            }
            if (*(float *)&v226 != *(float *)&v113)
            {
              uint64_t v168 = v226;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_10091A53C(v267, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051ABBC);
              uint64_t v179 = v231;
              uint64_t v178 = v232;
              uint64_t v177 = v233;
              uint64_t v176 = v230;
              uint64_t v175 = v204;
              uint64_t v150 = v126;
              uint64_t v156 = v184;
              uint64_t v157 = v128;
              uint64_t v158 = v151;
              uint64_t v159 = v146;
              uint64_t v160 = v168;
              goto LABEL_64;
            }
            if (*((float *)&v226 + 1) != *((float *)&v113 + 1))
            {
              uint64_t v169 = v226;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_10091A53C(v267, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051ABBC);
              uint64_t v179 = v231;
              uint64_t v178 = v232;
              uint64_t v177 = v233;
              uint64_t v176 = v230;
              uint64_t v175 = v204;
              uint64_t v150 = v126;
              uint64_t v156 = v184;
              uint64_t v157 = v128;
              uint64_t v158 = v151;
              uint64_t v159 = v146;
              uint64_t v160 = v169;
              goto LABEL_64;
            }
            LODWORD(v225) = sub_100ED60AC(v148, v214);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v141 = v148;
            uint64_t v145 = v215;
            uint64_t v144 = v216;
            uint64_t v125 = v184;
            uint64_t v143 = v151;
            if ((v225 & 1) == 0) {
              goto LABEL_61;
            }
          }
          else if (v214)
          {
LABEL_61:
            uint64_t v147 = v125;
            uint64_t v148 = v141;
            uint64_t v149 = v143;
            sub_10091A53C(v267, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051ABBC);
            uint64_t v179 = v231;
            uint64_t v178 = v232;
            uint64_t v177 = v233;
            uint64_t v176 = v230;
            uint64_t v175 = v204;
            uint64_t v150 = v126;
            goto LABEL_62;
          }
          if (v230)
          {
            uint64_t v133 = v204;
            if (!v208) {
              goto LABEL_43;
            }
            unint64_t v225 = v128;
            uint64_t v152 = v229;
            if (*(float *)&v229 != v115 || *((float *)&v229 + 1) != v117 || *(float *)&v204 != *(float *)&v116)
            {
              sub_10091A53C(v267, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051ABBC);
              sub_10051ABBC(v126, v125, v225, v139, v140, v226, v228, v152, v133, v230, v233, v232, v231);
              goto LABEL_33;
            }
            if (*((float *)&v204 + 1) != *((float *)&v116 + 1))
            {
              sub_10091A53C(v267, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051ABBC);
              uint64_t v179 = v231;
              uint64_t v178 = v232;
              uint64_t v177 = v233;
              uint64_t v175 = v133;
              uint64_t v176 = v230;
              uint64_t v150 = v126;
              uint64_t v156 = v125;
              uint64_t v157 = v225;
              uint64_t v158 = v139;
              uint64_t v159 = v140;
LABEL_83:
              uint64_t v160 = v226;
              uint64_t v161 = v228;
LABEL_65:
              sub_10051ABBC(v150, v156, v157, v158, v159, v160, v161, v229, v175, v176, v177, v178, v179);
              goto LABEL_33;
            }
            uint64_t v153 = v230;
            swift_bridgeObjectRetain();
            uint64_t v154 = v208;
            swift_bridgeObjectRetain();
            LODWORD(v184) = sub_100ED60AC(v153, v154);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v145 = v215;
            uint64_t v144 = v216;
            uint64_t v141 = v228;
            uint64_t v146 = v140;
            uint64_t v143 = v139;
            uint64_t v128 = v225;
            if ((v184 & 1) == 0) {
              goto LABEL_43;
            }
          }
          else
          {
            uint64_t v133 = v204;
            if (v208)
            {
LABEL_43:
              uint64_t v147 = v125;
              uint64_t v148 = v141;
              uint64_t v149 = v143;
              sub_10091A53C(v267, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051ABBC);
              uint64_t v179 = v231;
              uint64_t v178 = v232;
              uint64_t v177 = v233;
              uint64_t v175 = v133;
              uint64_t v176 = v230;
              uint64_t v150 = v126;
LABEL_62:
              uint64_t v156 = v147;
              uint64_t v157 = v128;
              uint64_t v158 = v149;
              goto LABEL_63;
            }
          }
          uint64_t v223 = v143;
          uint64_t v224 = v146;
          uint64_t v162 = v232;
          if (v232)
          {
            uint64_t v163 = v230;
            uint64_t v164 = v231;
            uint64_t v165 = v233;
            if (!v145) {
              goto LABEL_81;
            }
            if (*(float *)&v233 != v182) {
              goto LABEL_81;
            }
            uint64_t v166 = v145;
            swift_bridgeObjectRetain();
            uint64_t v167 = swift_bridgeObjectRetain();
            LODWORD(v225) = sub_100ED60AC(v167, v166);
            swift_bridgeObjectRelease();
            uint64_t v163 = v230;
            swift_bridgeObjectRelease();
            uint64_t v144 = v216;
            if ((v225 & 1) == 0)
            {
LABEL_81:
              sub_10091A53C(v267, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051ABBC);
              uint64_t v179 = v164;
              uint64_t v178 = v162;
              goto LABEL_82;
            }
          }
          else
          {
            uint64_t v163 = v230;
            uint64_t v164 = v231;
            uint64_t v165 = v233;
            if (v145)
            {
              sub_10091A53C(v267, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051ABBC);
              uint64_t v179 = v164;
              uint64_t v178 = 0;
LABEL_82:
              uint64_t v176 = v163;
              uint64_t v177 = v165;
              uint64_t v175 = v133;
              uint64_t v150 = v126;
              uint64_t v156 = v125;
              uint64_t v157 = v128;
              uint64_t v158 = v223;
              uint64_t v159 = v224;
              goto LABEL_83;
            }
          }
          if ((sub_100ED60AC(v164, v144) & 1) == 0) {
            goto LABEL_81;
          }
          LODWORD(v233) = sub_100ED60AC(v234, v206);
          sub_10091A53C(v267, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051ABBC);
          sub_10051ABBC(v126, v125, v128, v223, v224, v226, v228, v229, v133, v163, v165, v162, v164);
          if (v233)
          {
            swift_bridgeObjectRelease();
            sub_10091A53C(v267, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051ABBC);
            goto LABEL_91;
          }
        }
        else
        {
          sub_10091A53C(v267, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051ABBC);
          sub_10051ABBC(v126, v125, v128, v127, v129, v130, v228, v138, v133, v136, v233, v232, v231);
          uint64_t v123 = v227;
        }
LABEL_33:
        uint64_t v100 = v219;
        unint64_t v111 = (v123 + 1) & v218;
        if (((*(void *)&v220[(v111 >> 3) & 0xFFFFFFFFFFFFFF8] >> v111) & 1) == 0) {
          goto LABEL_85;
        }
      }
      sub_10051B3EC((uint64_t)v267, (uint64_t)v282, &qword_101686E98);
      if (!v282[12])
      {
        swift_bridgeObjectRelease();
LABEL_91:
        uint64_t v95 = v189;
        uint64_t v85 = v190;
        (*v192)(v189, v190);
        uint64_t v71 = v197;
        uint64_t v84 = v200;
        uint64_t v94 = v205;
LABEL_24:
        CRAttributedString.Runs.next()();
        if (v195(v84, 1, v85) == 1) {
          goto LABEL_17;
        }
        continue;
      }
      break;
    }
LABEL_32:
    uint64_t v235 = v126;
    uint64_t v236 = v125;
    uint64_t v237 = v128;
    uint64_t v238 = v127;
    uint64_t v239 = v129;
    uint64_t v240 = v130;
    uint64_t v241 = v131;
    uint64_t v224 = v129;
    unint64_t v225 = v128;
    uint64_t v223 = v127;
    uint64_t v226 = v130;
    uint64_t v118 = v229;
    uint64_t v119 = v230;
    uint64_t v242 = v229;
    uint64_t v243 = v133;
    uint64_t v244 = v230;
    uint64_t v121 = v232;
    uint64_t v120 = v233;
    uint64_t v245 = v233;
    uint64_t v246 = v232;
    uint64_t v122 = v231;
    uint64_t v247 = v231;
    uint64_t v248 = v234;
    uint64_t v249 = v222;
    uint64_t v250 = v221;
    uint64_t v251 = v217;
    uint64_t v252 = v207;
    uint64_t v253 = v209;
    uint64_t v254 = v213;
    uint64_t v255 = v214;
    uint64_t v256 = v212;
    uint64_t v257 = v211;
    uint64_t v258 = v208;
    uint64_t v259 = v210;
    uint64_t v260 = v215;
    uint64_t v261 = v216;
    uint64_t v262 = v206;
    sub_10091A53C(v267, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051B2E8);
    uint64_t v123 = v227;
    sub_10051B2E8(v126, v125, v225, v223, v224, v226, v228, v118, v133, v119, v120, v121, v122);
    sub_1008EE60C((uint64_t)&v235);
    goto LABEL_33;
  }
LABEL_105:
  __break(1u);
  return result;
}

uint64_t sub_10103D3BC(void (*a1)(char *, uint64_t), char *a2, char *a3, char *a4)
{
  return sub_10103D524(a1, a2, a3, a4, (void (*)(char *, uint64_t))&type metadata for CRLWPStrikethroughAttribute, (uint64_t (*)(uint64_t))sub_10083E3AC, (void (*)(void))sub_100843158, (uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))sub_100F61EE8, (uint64_t (*)(uint64_t, char *, char *, char *, char *))sub_1010461C8, sub_100915190, (uint64_t)sub_1006E4930, (char *)sub_100CB6688);
}

uint64_t sub_10103D470(void (*a1)(char *, uint64_t), char *a2, char *a3, char *a4)
{
  return sub_10103D524(a1, a2, a3, a4, (void (*)(char *, uint64_t))&type metadata for CRLWPUnderlineAttribute, (uint64_t (*)(uint64_t))sub_10083E400, (void (*)(void))sub_1008431AC, (uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))sub_100F61EF4, (uint64_t (*)(uint64_t, char *, char *, char *, char *))sub_101045D30, sub_100914E00, (uint64_t)sub_1006E4AF0, (char *)sub_100CB68CC);
}

uint64_t sub_10103D524(void (*a1)(char *, uint64_t), char *a2, char *a3, char *a4, void (*a5)(char *, uint64_t), uint64_t (*a6)(uint64_t), void (*a7)(void), uint64_t (*a8)(BOOL, unint64_t, uint64_t, uint64_t), uint64_t (*a9)(uint64_t, char *, char *, char *, char *), uint64_t (*a10)(char *), uint64_t a11, char *a12)
{
  float v112 = a8;
  uint64_t v135 = a7;
  uint64_t v132 = a5;
  uint64_t v133 = a6;
  uint64_t v119 = a4;
  uint64_t v118 = a3;
  uint64_t v134 = (void (*)(char *, uint64_t))a1;
  uint64_t v129 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v109 = *(void *)(v129 - 8);
  __chkstk_darwin(v129, v13);
  uint64_t v128 = (char *)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_1005057FC(&qword_1016879D0);
  uint64_t v15 = *(void *)(v121 - 8);
  __chkstk_darwin(v121, v16);
  uint64_t v120 = (char *)&v108 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005057FC(&qword_1016879C8);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v21 = (char *)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_1005057FC(&qword_1016879E0);
  uint64_t v111 = *(void *)(v131 - 8);
  uint64_t v23 = __chkstk_darwin(v131, v22);
  uint64_t v110 = (char *)&v108 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v25);
  uint64_t v130 = (char *)&v108 - v26;
  uint64_t v27 = sub_1005057FC(&qword_101687AE0);
  uint64_t v125 = *(void *)(v27 - 8);
  uint64_t v126 = (unsigned int (*)(void, void, void))v27;
  __chkstk_darwin(v27, v28);
  uint64_t v124 = (char *)&v108 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v30, v31);
  uint64_t v33 = (char *)&v108 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v122, v34);
  uint64_t v36 = (char *)&v108 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v40 = __chkstk_darwin(v37, v39);
  float v117 = (char *)&v108 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v40, v42);
  uint64_t v123 = (uint64_t)&v108 - v44;
  uint64_t result = __chkstk_darwin(v43, v45);
  uint64_t v48 = (char *)&v108 - v47;
  uint64_t v49 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v116 = a2;
  uint64_t v50 = *(void *)&a2[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v50)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  (*(void (**)(uint64_t))(*(void *)v50 + 760))(result);
  uint64_t v127 = v30;
  sub_1005D3C94((uint64_t)&v33[*(int *)(v30 + 20)], (uint64_t)v36);
  sub_10104835C((uint64_t)v33, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v114 = v38;
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
  v51(v48, v36, v37);
  sub_10104835C((uint64_t)v36, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v140 = &_swiftEmptySetSingleton;
  uint64_t v115 = v37;
  uint64_t v113 = v48;
  uint64_t result = CRAttributedString.count.getter();
  uint64_t v52 = v116;
  if (result)
  {
    uint64_t result = sub_1009044F8((uint64_t)v118, (uint64_t)v119);
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100904750(v118, v119);
      uint64_t v123 = result;
      uint64_t v73 = *(void *)&v52[v49];
      if (!v73)
      {
LABEL_37:
        __break(1u);
        return result;
      }
      uint64_t v74 = v72;
      (*(void (**)(void))(*(void *)v73 + 760))();
      sub_1005D3C94((uint64_t)&v33[*(int *)(v127 + 20)], (uint64_t)v36);
      sub_10104835C((uint64_t)v33, type metadata accessor for CRLWPShapeItemCRDTData);
      uint64_t v75 = v117;
      uint64_t v76 = v115;
      v51(v117, v36, v115);
      sub_10104835C((uint64_t)v36, type metadata accessor for CRLWPStorageCRDTData);
      uint64_t v77 = CRAttributedString.count.getter();
      uint64_t v108 = *(void (**)(char *, uint64_t))(v114 + 8);
      v108(v75, v76);
      if (v77 >= (v123 & ~(v123 >> 63))) {
        uint64_t result = v123 & ~(v123 >> 63);
      }
      else {
        uint64_t result = v77;
      }
      if (v77 >= (v74 & ~(v74 >> 63))) {
        uint64_t v78 = v74 & ~(v74 >> 63);
      }
      else {
        uint64_t v78 = v77;
      }
      if (v78 >= result)
      {
        uint64_t v79 = v124;
        CRAttributedString.subscript.getter();
        uint64_t v80 = v110;
        uint64_t v81 = v126;
        CRAttributedString.Substring.runs.getter();
        (*(void (**)(char *, unsigned int (*)(void, void, void)))(v125 + 8))(v79, v81);
        (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v130, v80, v131);
        CRAttributedString.Runs.next()();
        uint64_t v82 = v121;
        uint64_t v126 = *(unsigned int (**)(void, void, void))(v15 + 48);
        uint64_t v127 = v15 + 48;
        if (v126(v21, 1, v121) != 1)
        {
          float v117 = a12;
          unint64_t v89 = *(char **)(v15 + 32);
          uint64_t v88 = v15 + 32;
          uint64_t v124 = v89;
          uint64_t v125 = a11;
          uint64_t v122 = v88 - 24;
          uint64_t v123 = v109 + 8;
          uint64_t v90 = &_swiftEmptyArrayStorage;
          unint64_t v91 = v120;
          do
          {
            uint64_t v92 = v21;
            uint64_t v93 = v21;
            uint64_t v94 = v88;
            ((void (*)(char *, char *, uint64_t))v124)(v91, v93, v82);
            uint64_t v95 = v128;
            uint64_t v96 = CRAttributedString.Runs.Run.attributes.getter();
            uint64_t v98 = __chkstk_darwin(v96, v97);
            *(&v108 - 4) = v132;
            uint64_t v99 = v133(v98);
            uint64_t v100 = v134;
            *(&v108 - 3) = (void (*)(char *, uint64_t))v99;
            *(&v108 - 2) = v100;
            swift_getKeyPath();
            v135();
            swift_retain();
            uint64_t v101 = v129;
            CRAttributedString.Attributes.subscript.getter();
            swift_release();
            (*(void (**)(char *, uint64_t))v123)(v95, v101);
            uint64_t v102 = v140;
            uint64_t v103 = v137;
            uint64_t v104 = v138;
            swift_bridgeObjectRetain();
            LOBYTE(v100) = ((uint64_t (*)(uint64_t, uint64_t, void *))v125)(v103, v104, v102);
            swift_bridgeObjectRelease();
            if (v100)
            {
              (*(void (**)(char *, uint64_t))v122)(v91, v82);
              uint64_t v88 = v94;
              uint64_t v21 = v92;
            }
            else
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v90 = (void *)v112(0, v90[2] + 1, 1, (uint64_t)v90);
              }
              uint64_t v88 = v94;
              unint64_t v106 = v90[2];
              unint64_t v105 = v90[3];
              uint64_t v21 = v92;
              if (v106 >= v105 >> 1) {
                uint64_t v90 = (void *)v112(v105 > 1, v106 + 1, 1, (uint64_t)v90);
              }
              v90[2] = v106 + 1;
              uint64_t v107 = &v90[2 * v106];
              v107[4] = v103;
              *((unsigned char *)v107 + 40) = v104;
              ((void (*)(char *, uint64_t, uint64_t))v117)(v136, v103, v104);
              unint64_t v91 = v120;
              uint64_t v82 = v121;
              (*(void (**)(char *, uint64_t))v122)(v120, v121);
            }
            CRAttributedString.Runs.next()();
          }
          while (v126(v21, 1, v82) != 1);
        }
        (*(void (**)(char *, uint64_t))(v111 + 8))(v130, v131);
        uint64_t v52 = v116;
        uint64_t v55 = v115;
        uint64_t v71 = (void (*)(uint64_t, uint64_t))v108;
        goto LABEL_18;
      }
      __break(1u);
      goto LABEL_35;
    }
  }
  uint64_t v53 = *(void *)&v52[v49];
  if (!v53)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  (*(void (**)(void))(*(void *)v53 + 760))();
  sub_1005D3C94((uint64_t)&v33[*(int *)(v127 + 20)], (uint64_t)v36);
  sub_10104835C((uint64_t)v33, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v54 = v123;
  uint64_t v55 = v115;
  v51((char *)v123, &v36[*(int *)(v122 + 20)], v115);
  sub_10104835C((uint64_t)v36, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v56 = v124;
  uint64_t v57 = CRAttributedString.subscript.getter();
  uint64_t v59 = __chkstk_darwin(v57, v58);
  *(&v108 - 4) = v132;
  uint64_t v60 = v133(v59);
  unint64_t v61 = v134;
  *(&v108 - 3) = (void (*)(char *, uint64_t))v60;
  *(&v108 - 2) = v61;
  swift_getKeyPath();
  v135();
  swift_retain();
  uint64_t v62 = v126;
  CRAttributedString.Substring.subscript.getter();
  swift_release();
  (*(void (**)(char *, unsigned int (*)(void, void, void)))(v125 + 8))(v56, v62);
  uint64_t v63 = v137;
  unsigned __int8 v64 = v138;
  uint64_t v65 = v112;
  uint64_t v66 = v112(0, 1uLL, 1, (uint64_t)&_swiftEmptyArrayStorage);
  unint64_t v68 = *(void *)(v66 + 16);
  unint64_t v67 = *(void *)(v66 + 24);
  if (v68 >= v67 >> 1) {
    uint64_t v66 = v65(v67 > 1, v68 + 1, 1, v66);
  }
  uint64_t v69 = v114;
  *(void *)(v66 + 16) = v68 + 1;
  uint64_t v70 = v66 + 16 * v68;
  *(void *)(v70 + 32) = v63;
  *(unsigned char *)(v70 + 40) = v64;
  uint64_t v71 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
  v71(v54, v55);
LABEL_18:
  uint64_t v83 = v52;
  uint64_t v84 = swift_bridgeObjectRetain();
  uint64_t v85 = a9(v84, v83, v118, v119, v139);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v86 = *(void *)(v85 + 16);
  if (v86 == 1)
  {
    uint64_t v87 = *(void *)(v85 + 32);
    swift_bridgeObjectRelease();
    v71((uint64_t)v113, v55);
    return v87;
  }
  else
  {
    if (!v86)
    {
      swift_bridgeObjectRelease();
      uint64_t v85 = a10(v83);
    }
    v71((uint64_t)v113, v55);
  }
  return v85;
}

uint64_t sub_10103E254(uint64_t a1, char *a2, char *a3, char *a4)
{
  return sub_10103E344(a1, a2, a3, a4, (uint64_t)&type metadata for CRLWPFontItalicAttribute, (uint64_t (*)(uint64_t))sub_10083E454, (void (*)(void))sub_100843200, (uint64_t (*)(uint64_t, char *, char *))sub_1010459DC, (uint64_t (*)(char *))sub_100914B64);
}

uint64_t sub_10103E2CC(uint64_t a1, char *a2, char *a3, char *a4)
{
  return sub_10103E344(a1, a2, a3, a4, (uint64_t)&type metadata for CRLWPFontBoldAttribute, (uint64_t (*)(uint64_t))sub_10083E4A8, (void (*)(void))sub_100843254, (uint64_t (*)(uint64_t, char *, char *))sub_101045688, (uint64_t (*)(char *))sub_1009148C8);
}

uint64_t sub_10103E344(uint64_t a1, char *a2, char *a3, char *a4, uint64_t a5, uint64_t (*a6)(uint64_t), void (*a7)(void), uint64_t (*a8)(uint64_t, char *, char *), uint64_t (*a9)(char *))
{
  uint64_t v110 = a8;
  uint64_t v128 = a7;
  uint64_t v125 = a5;
  uint64_t v126 = a6;
  uint64_t v116 = (uint64_t)a4;
  uint64_t v108 = (uint64_t)a3;
  uint64_t v127 = a1;
  uint64_t v122 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v102 = *(void *)(v122 - 8);
  __chkstk_darwin(v122, v10);
  uint64_t v121 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_1005057FC(&qword_1016879D0);
  uint64_t v12 = *(void *)(v115 - 8);
  __chkstk_darwin(v115, v13);
  uint64_t v114 = (char *)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC(&qword_1016879C8);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (char *)&v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_1005057FC(&qword_1016879E0);
  uint64_t v105 = *(void *)(v124 - 8);
  uint64_t v20 = __chkstk_darwin(v124, v19);
  uint64_t v103 = (char *)&v102 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v22);
  uint64_t v123 = (char *)&v102 - v23;
  uint64_t v24 = sub_1005057FC(&qword_101687AE0);
  uint64_t v118 = *(void *)(v24 - 8);
  uint64_t v119 = (unsigned int (*)(void, void, void))v24;
  __chkstk_darwin(v24, v25);
  float v117 = (void (**)(char *, uint64_t))((char *)&v102 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v102 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v106, v31);
  uint64_t v33 = (char *)&v102 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v37 = __chkstk_darwin(v34, v36);
  uint64_t v104 = (char *)&v102 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __chkstk_darwin(v37, v39);
  uint64_t v107 = (void (*)(char *, char *, uint64_t))((char *)&v102 - v41);
  uint64_t result = __chkstk_darwin(v40, v42);
  uint64_t v45 = (char *)&v102 - v44;
  uint64_t v46 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v113 = a2;
  uint64_t v47 = *(void *)&a2[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v47)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  (*(void (**)(uint64_t))(*(void *)v47 + 760))(result);
  uint64_t v120 = v27;
  sub_1005D3C94((uint64_t)&v30[*(int *)(v27 + 20)], (uint64_t)v33);
  sub_10104835C((uint64_t)v30, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v111 = v35;
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  v48(v45, v33, v34);
  sub_10104835C((uint64_t)v33, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v132 = &_swiftEmptySetSingleton;
  uint64_t v112 = v34;
  uint64_t result = CRAttributedString.count.getter();
  uint64_t v49 = v113;
  uint64_t v109 = v45;
  if (result)
  {
    uint64_t result = sub_1009044F8(v108, v116);
    if ((result & 1) == 0)
    {
      uint64_t v107 = v48;
      uint64_t result = (uint64_t)sub_100904750((char *)v108, (char *)v116);
      uint64_t v108 = result;
      uint64_t v116 = (uint64_t)v67;
      uint64_t v68 = *(void *)&v49[v46];
      if (!v68)
      {
LABEL_36:
        __break(1u);
        return result;
      }
      (*(void (**)(void))(*(void *)v68 + 760))();
      sub_1005D3C94((uint64_t)&v30[*(int *)(v120 + 20)], (uint64_t)v33);
      sub_10104835C((uint64_t)v30, type metadata accessor for CRLWPShapeItemCRDTData);
      uint64_t v69 = v104;
      uint64_t v70 = v112;
      v107(v104, v33, v112);
      sub_10104835C((uint64_t)v33, type metadata accessor for CRLWPStorageCRDTData);
      uint64_t v71 = CRAttributedString.count.getter();
      uint64_t v72 = *(void (**)(char *, uint64_t))(v111 + 8);
      v72(v69, v70);
      if (v71 >= (v108 & ~(v108 >> 63))) {
        uint64_t result = v108 & ~(v108 >> 63);
      }
      else {
        uint64_t result = v71;
      }
      if (v71 >= (v116 & ~(v116 >> 63))) {
        int64_t v73 = v116 & ~(v116 >> 63);
      }
      else {
        int64_t v73 = v71;
      }
      if (v73 >= result)
      {
        uint64_t v108 = (uint64_t)v72;
        uint64_t v74 = (char *)v117;
        CRAttributedString.subscript.getter();
        uint64_t v75 = v103;
        uint64_t v76 = v119;
        CRAttributedString.Substring.runs.getter();
        (*(void (**)(char *, unsigned int (*)(void, void, void)))(v118 + 8))(v74, v76);
        (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v123, v75, v124);
        CRAttributedString.Runs.next()();
        uint64_t v77 = v115;
        uint64_t v119 = *(unsigned int (**)(void, void, void))(v12 + 48);
        uint64_t v120 = v12 + 48;
        if (v119(v18, 1, v115) != 1)
        {
          uint64_t v85 = *(void *)(v12 + 32);
          uint64_t v84 = v12 + 32;
          uint64_t v118 = v85;
          uint64_t v116 = v84 - 24;
          float v117 = (void (**)(char *, uint64_t))(v102 + 8);
          uint64_t v86 = &_swiftEmptyArrayStorage;
          uint64_t v87 = v114;
          do
          {
            uint64_t v88 = v18;
            unint64_t v89 = v18;
            uint64_t v90 = v84;
            ((void (*)(char *, char *, uint64_t))v118)(v87, v89, v77);
            unint64_t v91 = v121;
            uint64_t v92 = CRAttributedString.Runs.Run.attributes.getter();
            uint64_t v94 = __chkstk_darwin(v92, v93);
            *(&v102 - 4) = v125;
            uint64_t v95 = v126(v94);
            uint64_t v96 = v87;
            uint64_t v97 = v127;
            *(&v102 - 3) = v95;
            *(&v102 - 2) = v97;
            swift_getKeyPath();
            v128();
            swift_retain();
            uint64_t v98 = v122;
            CRAttributedString.Attributes.subscript.getter();
            swift_release();
            (*v117)(v91, v98);
            Swift::Int v99 = v130;
            if (sub_1006E4CB0(v130, (uint64_t)v132))
            {
              (*(void (**)(char *, uint64_t))v116)(v96, v77);
              uint64_t v84 = v90;
              uint64_t v87 = v96;
              uint64_t v18 = v88;
            }
            else
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v86 = sub_100F61F00(0, v86[2] + 1, 1, v86);
              }
              uint64_t v84 = v90;
              uint64_t v87 = v114;
              unint64_t v101 = v86[2];
              unint64_t v100 = v86[3];
              uint64_t v18 = v88;
              if (v101 >= v100 >> 1) {
                uint64_t v86 = sub_100F61F00((void *)(v100 > 1), v101 + 1, 1, v86);
              }
              v86[2] = v101 + 1;
              *((unsigned char *)v86 + v101 + 32) = v99;
              sub_100CB6B10(&v129, v99);
              uint64_t v77 = v115;
              (*(void (**)(char *, uint64_t))v116)(v87, v115);
            }
            CRAttributedString.Runs.next()();
          }
          while (v119(v18, 1, v77) != 1);
        }
        (*(void (**)(char *, uint64_t))(v105 + 8))(v123, v124);
        unsigned __int8 v64 = v110;
        uint64_t v52 = v112;
        uint64_t v49 = v113;
        uint64_t v66 = (void (*)(char *, uint64_t))v108;
        goto LABEL_18;
      }
      __break(1u);
      goto LABEL_34;
    }
  }
  uint64_t v50 = *(void *)&v49[v46];
  if (!v50)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  (*(void (**)(void))(*(void *)v50 + 760))();
  sub_1005D3C94((uint64_t)&v30[*(int *)(v120 + 20)], (uint64_t)v33);
  sub_10104835C((uint64_t)v30, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v51 = (char *)v107;
  uint64_t v52 = v112;
  v48((char *)v107, &v33[*(int *)(v106 + 20)], v112);
  sub_10104835C((uint64_t)v33, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v53 = (char *)v117;
  uint64_t v54 = CRAttributedString.subscript.getter();
  uint64_t v56 = __chkstk_darwin(v54, v55);
  *(&v102 - 4) = v125;
  uint64_t v57 = v126(v56);
  uint64_t v58 = v127;
  *(&v102 - 3) = v57;
  *(&v102 - 2) = v58;
  swift_getKeyPath();
  v128();
  swift_retain();
  uint64_t v59 = v119;
  CRAttributedString.Substring.subscript.getter();
  swift_release();
  (*(void (**)(char *, unsigned int (*)(void, void, void)))(v118 + 8))(v53, v59);
  unsigned __int8 v60 = v130;
  unint64_t v61 = sub_100F61F00(0, 1, 1, &_swiftEmptyArrayStorage);
  unint64_t v63 = v61[2];
  unint64_t v62 = v61[3];
  unsigned __int8 v64 = v110;
  if (v63 >= v62 >> 1) {
    unint64_t v61 = sub_100F61F00((void *)(v62 > 1), v63 + 1, 1, v61);
  }
  uint64_t v65 = v111;
  v61[2] = v63 + 1;
  *((unsigned char *)v61 + v63 + 32) = v60;
  uint64_t v66 = *(void (**)(char *, uint64_t))(v65 + 8);
  v66(v51, v52);
LABEL_18:
  uint64_t v78 = v49;
  uint64_t v79 = swift_bridgeObjectRetain();
  uint64_t v80 = v64(v79, v78, v131);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v81 = *(void *)(v80 + 16);
  if (v81 == 1)
  {
    uint64_t v83 = *(unsigned __int8 *)(v80 + 32);
    swift_bridgeObjectRelease();
    v66(v109, v52);
    return v83;
  }
  else
  {
    uint64_t v82 = v109;
    if (v81)
    {
      v66(v109, v52);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v80 = a9(v78) & 1;
      v66(v82, v52);
    }
  }
  return v80;
}

uint64_t sub_10103EFE4(uint64_t a1, char *a2, char *a3, char *a4)
{
  uint64_t v113 = (uint64_t)a4;
  uint64_t v106 = (uint64_t)a3;
  uint64_t v122 = a1;
  uint64_t v118 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v100 = *(void *)(v118 - 8);
  __chkstk_darwin(v118, v5);
  float v117 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_1005057FC(&qword_1016879D0);
  uint64_t v7 = *(void *)(v112 - 8);
  __chkstk_darwin(v112, v8);
  uint64_t v111 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_1016879C8);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v119 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_1005057FC(&qword_1016879E0);
  uint64_t v103 = *(void *)(v121 - 8);
  uint64_t v14 = __chkstk_darwin(v121, v13);
  unint64_t v101 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v16);
  uint64_t v120 = (char *)&v99 - v17;
  uint64_t v18 = sub_1005057FC(&qword_101687AE0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v115 = (unsigned int (*)(void, void, void))v18;
  uint64_t v116 = v19;
  __chkstk_darwin(v18, v20);
  uint64_t v114 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v104, v26);
  uint64_t v28 = (char *)&v99 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v32 = __chkstk_darwin(v29, v31);
  uint64_t v102 = (char *)&v99 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v32, v34);
  uint64_t v105 = (char *)&v99 - v36;
  uint64_t result = __chkstk_darwin(v35, v37);
  uint64_t v40 = (char *)&v99 - v39;
  uint64_t v41 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v110 = a2;
  uint64_t v42 = *(void *)&a2[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v42)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  (*(void (**)(uint64_t))(*(void *)v42 + 760))(result);
  uint64_t v43 = v22;
  sub_1005D3C94((uint64_t)&v25[*(int *)(v22 + 20)], (uint64_t)v28);
  sub_10104835C((uint64_t)v25, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v108 = v30;
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  v44(v40, v28, v29);
  sub_10104835C((uint64_t)v28, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v126 = &_swiftEmptySetSingleton;
  uint64_t v109 = v29;
  uint64_t v107 = v40;
  uint64_t result = CRAttributedString.count.getter();
  uint64_t v45 = v110;
  if (!result || (uint64_t result = sub_1009044F8(v106, v113), (result & 1) != 0))
  {
    uint64_t v46 = *(void *)&v45[v41];
    if (v46)
    {
      (*(void (**)(void))(*(void *)v46 + 760))();
      sub_1005D3C94((uint64_t)&v25[*(int *)(v43 + 20)], (uint64_t)v28);
      sub_10104835C((uint64_t)v25, type metadata accessor for CRLWPShapeItemCRDTData);
      uint64_t v47 = v105;
      uint64_t v48 = v109;
      v44(v105, &v28[*(int *)(v104 + 20)], v109);
      sub_10104835C((uint64_t)v28, type metadata accessor for CRLWPStorageCRDTData);
      uint64_t v49 = v114;
      uint64_t v50 = CRAttributedString.subscript.getter();
      __chkstk_darwin(v50, v51);
      *(&v99 - 4) = (uint64_t)&type metadata for CRLWPFontSizeAttribute;
      unint64_t v52 = sub_10083E4FC();
      uint64_t v53 = v122;
      *(&v99 - 3) = v52;
      *(&v99 - 2) = v53;
      swift_getKeyPath();
      sub_10083E5B0();
      swift_retain();
      uint64_t v54 = v115;
      CRAttributedString.Substring.subscript.getter();
      swift_release();
      (*(void (**)(char *, unsigned int (*)(void, void, void)))(v116 + 8))(v49, v54);
      unsigned int v55 = v124;
      unsigned __int8 v56 = v125;
      uint64_t v57 = sub_100F61FFC(0, 1, 1, &_swiftEmptyArrayStorage);
      unint64_t v59 = v57[2];
      unint64_t v58 = v57[3];
      if (v59 >= v58 >> 1) {
        uint64_t v57 = sub_100F61FFC((void *)(v58 > 1), v59 + 1, 1, v57);
      }
      uint64_t v60 = v108;
      v57[2] = v59 + 1;
      unint64_t v61 = &v57[v59];
      *((_DWORD *)v61 + 8) = v55;
      *((unsigned char *)v61 + 36) = v56;
      unint64_t v62 = *(void (**)(char *, uint64_t))(v60 + 8);
      v62(v47, v48);
      goto LABEL_18;
    }
    goto LABEL_36;
  }
  unint64_t v63 = v44;
  uint64_t result = (uint64_t)sub_100904750((char *)v106, (char *)v113);
  uint64_t v106 = result;
  uint64_t v113 = (uint64_t)v64;
  uint64_t v65 = *(void *)&v45[v41];
  if (v65)
  {
    (*(void (**)(void))(*(void *)v65 + 760))();
    sub_1005D3C94((uint64_t)&v25[*(int *)(v43 + 20)], (uint64_t)v28);
    sub_10104835C((uint64_t)v25, type metadata accessor for CRLWPShapeItemCRDTData);
    uint64_t v66 = v102;
    uint64_t v67 = v109;
    v63(v102, v28, v109);
    sub_10104835C((uint64_t)v28, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v68 = CRAttributedString.count.getter();
    uint64_t v105 = *(char **)(v108 + 8);
    ((void (*)(char *, uint64_t))v105)(v66, v67);
    if (v68 >= (v106 & ~(v106 >> 63))) {
      uint64_t result = v106 & ~(v106 >> 63);
    }
    else {
      uint64_t result = v68;
    }
    if (v68 >= (v113 & ~(v113 >> 63))) {
      int64_t v69 = v113 & ~(v113 >> 63);
    }
    else {
      int64_t v69 = v68;
    }
    if (v69 >= result)
    {
      uint64_t v70 = v114;
      CRAttributedString.subscript.getter();
      uint64_t v71 = v101;
      uint64_t v72 = v115;
      CRAttributedString.Substring.runs.getter();
      (*(void (**)(char *, unsigned int (*)(void, void, void)))(v116 + 8))(v70, v72);
      (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v120, v71, v121);
      int64_t v73 = v119;
      CRAttributedString.Runs.next()();
      uint64_t v74 = v112;
      uint64_t v115 = *(unsigned int (**)(void, void, void))(v7 + 48);
      uint64_t v116 = v7 + 48;
      if (v115(v73, 1, v112) != 1)
      {
        uint64_t v83 = *(char **)(v7 + 32);
        uint64_t v82 = v7 + 32;
        uint64_t v114 = v83;
        uint64_t v113 = v100 + 8;
        uint64_t v84 = (void (**)(char *, uint64_t))(v82 - 24);
        uint64_t v85 = &_swiftEmptyArrayStorage;
        uint64_t v86 = v111;
        do
        {
          uint64_t v87 = v82;
          ((void (*)(char *, char *, uint64_t))v114)(v86, v73, v74);
          uint64_t v88 = v117;
          uint64_t v89 = CRAttributedString.Runs.Run.attributes.getter();
          __chkstk_darwin(v89, v90);
          *(&v99 - 4) = (uint64_t)&type metadata for CRLWPFontSizeAttribute;
          unint64_t v91 = sub_10083E4FC();
          uint64_t v92 = v122;
          *(&v99 - 3) = v91;
          *(&v99 - 2) = v92;
          swift_getKeyPath();
          sub_10083E5B0();
          swift_retain();
          uint64_t v93 = v118;
          CRAttributedString.Attributes.subscript.getter();
          swift_release();
          (*(void (**)(char *, uint64_t))v113)(v88, v93);
          uint64_t v94 = v124;
          unsigned __int8 v95 = v125;
          v123[0] = v125;
          if (sub_1006E4DC0(v124 | ((unint64_t)v125 << 32), (uint64_t)v126))
          {
            (*v84)(v86, v74);
            uint64_t v82 = v87;
          }
          else
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v85 = sub_100F61FFC(0, v85[2] + 1, 1, v85);
            }
            uint64_t v82 = v87;
            unint64_t v97 = v85[2];
            unint64_t v96 = v85[3];
            if (v97 >= v96 >> 1) {
              uint64_t v85 = sub_100F61FFC((void *)(v96 > 1), v97 + 1, 1, v85);
            }
            v85[2] = v97 + 1;
            uint64_t v98 = &v85[v97];
            *((_DWORD *)v98 + 8) = v94;
            *((unsigned char *)v98 + 36) = v95;
            v123[0] = v95;
            sub_100CB6C74((uint64_t)v123, v94 | ((unint64_t)v95 << 32));
            uint64_t v86 = v111;
            uint64_t v74 = v112;
            (*v84)(v111, v112);
          }
          int64_t v73 = v119;
          CRAttributedString.Runs.next()();
        }
        while (v115(v73, 1, v74) != 1);
      }
      (*(void (**)(char *, uint64_t))(v103 + 8))(v120, v121);
      uint64_t v48 = v109;
      uint64_t v45 = v110;
      unint64_t v62 = (void (*)(char *, uint64_t))v105;
LABEL_18:
      uint64_t v75 = v45;
      uint64_t v76 = swift_bridgeObjectRetain();
      uint64_t v77 = sub_101045334(v76, (uint64_t)v75);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v78 = *(void *)(v77 + 16);
      if (v78 == 1)
      {
        unsigned int v80 = *(_DWORD *)(v77 + 32);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v78)
        {
          v62(v107, v48);
          unsigned int v80 = v77;
          unint64_t v81 = v77 & 0xFFFFFFFF00000000;
          return v81 | v80;
        }
        swift_bridgeObjectRelease();
        sub_100914624((uint64_t)v75);
        unsigned int v80 = v79;
      }
      v62(v107, v48);
      unint64_t v81 = 0;
      return v81 | v80;
    }
    __break(1u);
    goto LABEL_35;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10103FC38(uint64_t a1, char *a2, char *a3, char *a4)
{
  uint64_t v111 = a4;
  uint64_t v110 = a3;
  uint64_t v123 = a1;
  uint64_t v119 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v101 = *(void *)(v119 - 8);
  __chkstk_darwin(v119, v5);
  uint64_t v118 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_1005057FC(&qword_1016879D0);
  uint64_t v103 = *(void *)(v113 - 8);
  __chkstk_darwin(v113, v7);
  uint64_t v112 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_1016879C8);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v120 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_1005057FC(&qword_1016879E0);
  uint64_t v105 = *(void *)(v122 - 8);
  uint64_t v13 = __chkstk_darwin(v122, v12);
  uint64_t v102 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v15);
  uint64_t v121 = (char *)&v100 - v16;
  uint64_t v17 = sub_1005057FC(&qword_101687AE0);
  uint64_t v115 = *(void *)(v17 - 8);
  uint64_t v116 = (unsigned int (*)(void, void, void))v17;
  __chkstk_darwin(v17, v18);
  uint64_t v114 = (void (**)(char *, uint64_t))((char *)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v24, v25);
  uint64_t v27 = (char *)&v100 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v31 = __chkstk_darwin(v28, v30);
  uint64_t v104 = (char *)&v100 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v31, v33);
  uint64_t v117 = (uint64_t)&v100 - v35;
  uint64_t result = __chkstk_darwin(v34, v36);
  uint64_t v39 = (char *)&v100 - v38;
  uint64_t v40 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v109 = a2;
  uint64_t v41 = *(void *)&a2[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v41)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  (*(void (**)(uint64_t))(*(void *)v41 + 760))(result);
  uint64_t v42 = v20;
  sub_1005D3C94((uint64_t)&v23[*(int *)(v20 + 20)], (uint64_t)v27);
  sub_10104835C((uint64_t)v23, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v107 = v29;
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  v43(v39, v27, v28);
  sub_10104835C((uint64_t)v27, type metadata accessor for CRLWPStorageCRDTData);
  char v129 = &_swiftEmptySetSingleton;
  uint64_t v108 = v28;
  uint64_t v106 = v39;
  uint64_t result = CRAttributedString.count.getter();
  uint64_t v44 = v109;
  if (result)
  {
    uint64_t result = sub_1009044F8((uint64_t)v110, (uint64_t)v111);
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100904750(v110, v111);
      uint64_t v117 = result;
      uint64_t v63 = *(void *)&v44[v40];
      if (!v63)
      {
LABEL_37:
        __break(1u);
        return result;
      }
      uint64_t v64 = v62;
      (*(void (**)(void))(*(void *)v63 + 760))();
      sub_1005D3C94((uint64_t)&v23[*(int *)(v42 + 20)], (uint64_t)v27);
      sub_10104835C((uint64_t)v23, type metadata accessor for CRLWPShapeItemCRDTData);
      uint64_t v65 = v104;
      uint64_t v66 = v108;
      v43(v104, v27, v108);
      sub_10104835C((uint64_t)v27, type metadata accessor for CRLWPStorageCRDTData);
      uint64_t v67 = CRAttributedString.count.getter();
      uint64_t v68 = *(void (**)(char *, uint64_t))(v107 + 8);
      v68(v65, v66);
      if (v67 >= (v117 & ~(v117 >> 63))) {
        uint64_t result = v117 & ~(v117 >> 63);
      }
      else {
        uint64_t result = v67;
      }
      if (v67 >= (v64 & ~(v64 >> 63))) {
        uint64_t v69 = v64 & ~(v64 >> 63);
      }
      else {
        uint64_t v69 = v67;
      }
      if (v69 >= result)
      {
        uint64_t v104 = (char *)v68;
        uint64_t v70 = (char *)v114;
        CRAttributedString.subscript.getter();
        uint64_t v71 = v102;
        uint64_t v72 = v116;
        CRAttributedString.Substring.runs.getter();
        (*(void (**)(char *, unsigned int (*)(void, void, void)))(v115 + 8))(v70, v72);
        (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v121, v71, v122);
        int64_t v73 = v120;
        CRAttributedString.Runs.next()();
        uint64_t v74 = v103;
        uint64_t v75 = v113;
        uint64_t v116 = *(unsigned int (**)(void, void, void))(v103 + 48);
        uint64_t v117 = v103 + 48;
        if (v116(v73, 1, v113) != 1)
        {
          uint64_t v82 = *(void *)(v74 + 32);
          uint64_t v81 = v74 + 32;
          uint64_t v115 = v82;
          uint64_t v114 = (void (**)(char *, uint64_t))(v101 + 8);
          uint64_t v83 = &_swiftEmptyArrayStorage;
          uint64_t v84 = (void (**)(char *, uint64_t))(v81 - 24);
          uint64_t v85 = v112;
          do
          {
            uint64_t v86 = v81;
            ((void (*)(char *, char *, uint64_t))v115)(v85, v73, v75);
            uint64_t v87 = v118;
            uint64_t v88 = CRAttributedString.Runs.Run.attributes.getter();
            __chkstk_darwin(v88, v89);
            *(&v100 - 4) = (uint64_t)&type metadata for CRLWPFontNameAttribute;
            unint64_t v90 = sub_10083E550();
            uint64_t v91 = v123;
            *(&v100 - 3) = v90;
            *(&v100 - 2) = v91;
            swift_getKeyPath();
            sub_10091307C();
            swift_retain();
            uint64_t v92 = v119;
            CRAttributedString.Attributes.subscript.getter();
            swift_release();
            (*v114)(v87, v92);
            uint64_t v93 = (uint64_t)v129;
            uint64_t v95 = v126;
            unint64_t v94 = v127;
            unsigned __int8 v96 = v128;
            swift_bridgeObjectRetain();
            LOBYTE(v87) = sub_1006E4EC4(v95, v94, v96, v93);
            swift_bridgeObjectRelease();
            if (v87)
            {
              sub_10051AC88(v95, v94, v96);
              (*v84)(v85, v75);
            }
            else
            {
              sub_10051B3B0(v95, v94, v96);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v83 = sub_100F6210C(0, v83[2] + 1, 1, v83);
              }
              unint64_t v98 = v83[2];
              unint64_t v97 = v83[3];
              if (v98 >= v97 >> 1) {
                uint64_t v83 = sub_100F6210C((void *)(v97 > 1), v98 + 1, 1, v83);
              }
              v83[2] = v98 + 1;
              uint64_t v99 = &v83[3 * v98];
              v99[4] = v95;
              v99[5] = v94;
              *((unsigned char *)v99 + 48) = v96;
              sub_10051B3B0(v95, v94, v96);
              sub_100CB6DE8((uint64_t)v124, v95, v94, v96);
              sub_10051AC88(v124[0], v124[1], v125);
              sub_10051AC88(v95, v94, v96);
              uint64_t v85 = v112;
              uint64_t v75 = v113;
              (*v84)(v112, v113);
            }
            int64_t v73 = v120;
            CRAttributedString.Runs.next()();
            uint64_t v81 = v86;
          }
          while (v116(v73, 1, v75) != 1);
        }
        (*(void (**)(char *, uint64_t))(v105 + 8))(v121, v122);
        uint64_t v44 = v109;
        uint64_t v46 = v108;
        unint64_t v61 = (void (*)(uint64_t, uint64_t))v104;
        goto LABEL_18;
      }
      __break(1u);
      goto LABEL_35;
    }
  }
  uint64_t v45 = *(void *)&v44[v40];
  if (!v45)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  (*(void (**)(void))(*(void *)v45 + 760))();
  sub_1005D3C94((uint64_t)&v23[*(int *)(v42 + 20)], (uint64_t)v27);
  sub_10104835C((uint64_t)v23, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v46 = v108;
  v43((char *)v117, &v27[*(int *)(v24 + 20)], v108);
  sub_10104835C((uint64_t)v27, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v47 = (char *)v114;
  uint64_t v48 = CRAttributedString.subscript.getter();
  __chkstk_darwin(v48, v49);
  *(&v100 - 4) = (uint64_t)&type metadata for CRLWPFontNameAttribute;
  unint64_t v50 = sub_10083E550();
  uint64_t v51 = v123;
  *(&v100 - 3) = v50;
  *(&v100 - 2) = v51;
  swift_getKeyPath();
  sub_10091307C();
  swift_retain();
  unint64_t v52 = v116;
  CRAttributedString.Substring.subscript.getter();
  swift_release();
  (*(void (**)(char *, unsigned int (*)(void, void, void)))(v115 + 8))(v47, v52);
  uint64_t v53 = v126;
  unint64_t v54 = v127;
  unsigned __int8 v55 = v128;
  sub_10051B3B0(v126, v127, v128);
  unsigned __int8 v56 = sub_100F6210C(0, 1, 1, &_swiftEmptyArrayStorage);
  unint64_t v58 = v56[2];
  unint64_t v57 = v56[3];
  if (v58 >= v57 >> 1) {
    unsigned __int8 v56 = sub_100F6210C((void *)(v57 > 1), v58 + 1, 1, v56);
  }
  uint64_t v59 = v107;
  v56[2] = v58 + 1;
  uint64_t v60 = &v56[3 * v58];
  unsigned char v60[4] = v53;
  v60[5] = v54;
  *((unsigned char *)v60 + 48) = v55;
  sub_10051AC88(v53, v54, v55);
  unint64_t v61 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
  v61(v117, v46);
LABEL_18:
  uint64_t v76 = v44;
  uint64_t v77 = swift_bridgeObjectRetain();
  uint64_t v78 = (uint64_t)sub_101044B80(v77, v76);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v79 = *(void *)(v78 + 16);
  if (v79 == 1)
  {
    uint64_t v80 = *(void *)(v78 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v61((uint64_t)v106, v46);
    return v80;
  }
  else
  {
    if (!v79)
    {
      swift_bridgeObjectRelease();
      uint64_t v78 = sub_10091420C(v76);
    }
    v61((uint64_t)v106, v46);
  }
  return v78;
}

uint64_t sub_10104093C(uint64_t a1, char *a2, char *a3, char *a4)
{
  uint64_t v103 = a4;
  unint64_t v97 = a3;
  uint64_t v112 = a1;
  uint64_t v108 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v92 = *(void *)(v108 - 8);
  __chkstk_darwin(v108, v5);
  uint64_t v107 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1005057FC(&qword_1016879D0);
  uint64_t v7 = *(void *)(v102 - 8);
  __chkstk_darwin(v102, v8);
  uint64_t v101 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_1016879C8);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v110 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_1005057FC(&qword_1016879E0);
  uint64_t v94 = *(void *)(v111 - 8);
  uint64_t v14 = __chkstk_darwin(v111, v13);
  uint64_t v93 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v16);
  uint64_t v109 = (char *)&v91 - v17;
  uint64_t v18 = sub_1005057FC(&qword_101687AE0);
  uint64_t v105 = *(void *)(v18 - 8);
  uint64_t v106 = v18;
  __chkstk_darwin(v18, v19);
  uint64_t v104 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)&v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v96, v25);
  uint64_t v27 = (char *)&v91 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v31 = __chkstk_darwin(v28, v30);
  uint64_t v95 = (char *)&v91 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v31, v33);
  uint64_t v36 = (char *)&v91 - v35;
  uint64_t v100 = a2;
  uint64_t v37 = *(void *)&a2[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v37) {
    goto LABEL_31;
  }
  uint64_t v38 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  (*(void (**)(uint64_t))(*(void *)v37 + 760))(result);
  uint64_t v39 = v21;
  sub_1005D3C94((uint64_t)&v24[*(int *)(v21 + 20)], (uint64_t)v27);
  sub_10104835C((uint64_t)v24, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v98 = v29;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  v40(v36, v27, v28);
  sub_10104835C((uint64_t)v27, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v116 = &_swiftEmptySetSingleton;
  uint64_t v99 = v28;
  uint64_t result = CRAttributedString.count.getter();
  uint64_t v41 = v100;
  if (result)
  {
    uint64_t result = sub_1009044F8((uint64_t)v97, (uint64_t)v103);
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100904750(v97, v103);
      if (__OFSUB__(v59, result))
      {
        __break(1u);
      }
      else
      {
        uint64_t result = [v41 textRangeForParagraphsInCharRange:result, v59 - result];
        BOOL v61 = __OFADD__(result, v60);
        uint64_t v62 = result + v60;
        if (!v61)
        {
          if (v62 >= result)
          {
            uint64_t v63 = v104;
            unint64_t v97 = v36;
            CRAttributedString.subscript.getter();
            uint64_t v64 = v93;
            uint64_t v65 = v106;
            CRAttributedString.Substring.runs.getter();
            (*(void (**)(char *, uint64_t))(v105 + 8))(v63, v65);
            (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v109, v64, v111);
            uint64_t v66 = v110;
            CRAttributedString.Runs.next()();
            uint64_t v67 = v102;
            uint64_t v105 = *(void *)(v7 + 48);
            uint64_t v106 = v7 + 48;
            if (((unsigned int (*)(char *, uint64_t, uint64_t))v105)(v66, 1, v102) != 1)
            {
              uint64_t v74 = *(char **)(v7 + 32);
              uint64_t v73 = v7 + 32;
              uint64_t v104 = v74;
              uint64_t v103 = (char *)(v92 + 8);
              uint64_t v75 = (void (**)(char *, uint64_t))(v73 - 24);
              uint64_t v76 = _swiftEmptyArrayStorage;
              uint64_t v77 = v101;
              do
              {
                uint64_t v78 = v66;
                uint64_t v79 = v73;
                ((void (*)(char *, char *, uint64_t))v104)(v77, v78, v67);
                uint64_t v80 = v107;
                uint64_t v81 = CRAttributedString.Runs.Run.attributes.getter();
                __chkstk_darwin(v81, v82);
                *(&v91 - 4) = (uint64_t)&type metadata for CRLWPParagraphLevelAttribute;
                unint64_t v83 = sub_10083BC5C();
                uint64_t v84 = v112;
                *(&v91 - 3) = v83;
                *(&v91 - 2) = v84;
                swift_getKeyPath();
                sub_10083BCB0();
                swift_retain();
                uint64_t v85 = v108;
                CRAttributedString.Attributes.subscript.getter();
                swift_release();
                (*(void (**)(char *, uint64_t))v103)(v80, v85);
                Swift::UInt v86 = v114;
                char v87 = v115;
                if (sub_1006E4330(v114, v115, (uint64_t)v116))
                {
                  (*v75)(v77, v67);
                  uint64_t v73 = v79;
                  uint64_t v66 = v110;
                }
                else
                {
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v76 = (double *)sub_100F61C80(0, *((void *)v76 + 2) + 1, 1, v76);
                  }
                  uint64_t v73 = v79;
                  unint64_t v89 = *((void *)v76 + 2);
                  unint64_t v88 = *((void *)v76 + 3);
                  uint64_t v66 = v110;
                  if (v89 >= v88 >> 1) {
                    uint64_t v76 = (double *)sub_100F61C80((void *)(v88 > 1), v89 + 1, 1, v76);
                  }
                  *((void *)v76 + 2) = v89 + 1;
                  unint64_t v90 = &v76[2 * v89];
                  *((void *)v90 + 4) = v86;
                  *((unsigned char *)v90 + 40) = v87;
                  sub_100CB5370((uint64_t)v113, v86, v87);
                  uint64_t v77 = v101;
                  uint64_t v67 = v102;
                  (*v75)(v101, v102);
                }
                CRAttributedString.Runs.next()();
              }
              while (((unsigned int (*)(char *, uint64_t, uint64_t))v105)(v66, 1, v67) != 1);
            }
            (*(void (**)(char *, uint64_t))(v94 + 8))(v109, v111);
            uint64_t v44 = v99;
            unint64_t v58 = v100;
            uint64_t v56 = v98;
            uint64_t v36 = v97;
            goto LABEL_13;
          }
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  uint64_t v42 = *(void *)&v41[v38];
  if (!v42)
  {
LABEL_32:
    __break(1u);
    return result;
  }
  (*(void (**)(void))(*(void *)v42 + 760))();
  sub_1005D3C94((uint64_t)&v24[*(int *)(v39 + 20)], (uint64_t)v27);
  sub_10104835C((uint64_t)v24, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v43 = v95;
  uint64_t v44 = v99;
  v40(v95, &v27[*(int *)(v96 + 20)], v99);
  sub_10104835C((uint64_t)v27, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v45 = v104;
  uint64_t v46 = CRAttributedString.subscript.getter();
  __chkstk_darwin(v46, v47);
  *(&v91 - 4) = (uint64_t)&type metadata for CRLWPParagraphLevelAttribute;
  unint64_t v48 = sub_10083BC5C();
  uint64_t v49 = v112;
  *(&v91 - 3) = v48;
  *(&v91 - 2) = v49;
  swift_getKeyPath();
  sub_10083BCB0();
  swift_retain();
  uint64_t v50 = v106;
  CRAttributedString.Substring.subscript.getter();
  swift_release();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v45, v50);
  Swift::UInt v51 = v114;
  char v52 = v115;
  uint64_t v53 = sub_100F61C80(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v55 = v53[2];
  unint64_t v54 = v53[3];
  if (v55 >= v54 >> 1) {
    uint64_t v53 = sub_100F61C80((void *)(v54 > 1), v55 + 1, 1, v53);
  }
  uint64_t v56 = v98;
  v53[2] = v55 + 1;
  unint64_t v57 = &v53[2 * v55];
  v57[4] = v51;
  *((unsigned char *)v57 + 40) = v52;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v43, v44);
  unint64_t v58 = v100;
LABEL_13:
  uint64_t v68 = v58;
  uint64_t v69 = swift_bridgeObjectRetain();
  uint64_t v70 = sub_1010480A0(v69);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v71 = *((void *)v70 + 2);
  if (v71 == 1)
  {
    uint64_t v72 = *((void *)v70 + 4);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v36, v44);
    return v72;
  }
  else if (v71)
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v36, v44);
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v36, v44);
    return 0;
  }
  return (uint64_t)v70;
}

uint64_t sub_101041474(uint64_t a1, char *a2, char *a3, char *a4)
{
  uint64_t v114 = (uint64_t)a4;
  uint64_t v113 = (uint64_t)a3;
  uint64_t v133 = a1;
  uint64_t v128 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v107 = *(void *)(v128 - 8);
  __chkstk_darwin(v128, v5);
  unint64_t v127 = (char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_1016879D0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  char v129 = (char *)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_1016879C8);
  __chkstk_darwin(v11 - 8, v12);
  unsigned __int8 v130 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_1005057FC(&qword_1016879E0);
  uint64_t v110 = *(void *)(v132 - 8);
  uint64_t v15 = __chkstk_darwin(v132, v14);
  uint64_t v108 = (char *)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v17);
  uint64_t v131 = (char *)&v106 - v18;
  unsigned int v124 = (void *)sub_1005057FC(&qword_101687AE0);
  *(void *)&long long v120 = *(v124 - 1);
  __chkstk_darwin(v124, v19);
  char v115 = (char *)&v106 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1005057FC((uint64_t *)&unk_10167BE90);
  uint64_t v122 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21 - 8, v22);
  uint64_t v121 = (uint64_t)&v106 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v28 = (char *)&v106 - v27;
  __chkstk_darwin(v26, v29);
  uint64_t v123 = (uint64_t)&v106 - v30;
  uint64_t v31 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v31, v32);
  uint64_t v34 = (char *)&v106 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v111, v35);
  uint64_t v37 = (char *)&v106 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v41 = __chkstk_darwin(v38, v40);
  uint64_t v109 = (char *)&v106 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __chkstk_darwin(v41, v43);
  uint64_t v112 = (void (*)(char *, char *, uint64_t))((char *)&v106 - v45);
  uint64_t v47 = __chkstk_darwin(v44, v46);
  uint64_t v49 = (char *)&v106 - v48;
  uint64_t v118 = a2;
  uint64_t v126 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v50 = *(void *)&a2[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v50) {
    goto LABEL_28;
  }
  (*(void (**)(uint64_t))(*(void *)v50 + 760))(v47);
  uint64_t v125 = v31;
  sub_1005D3C94((uint64_t)&v34[*(int *)(v31 + 20)], (uint64_t)v37);
  sub_10104835C((uint64_t)v34, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v117 = v39;
  Swift::UInt v51 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
  v51(v49, v37, v38);
  sub_10104835C((uint64_t)v37, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v135 = _swiftEmptyArrayStorage;
  uint64_t v134 = &_swiftEmptySetSingleton;
  uint64_t v119 = v38;
  uint64_t v116 = v49;
  uint64_t result = CRAttributedString.count.getter();
  uint64_t v53 = v118;
  if (result)
  {
    uint64_t result = sub_1009044F8(v113, v114);
    if ((result & 1) == 0)
    {
      uint64_t v112 = v51;
      uint64_t result = (uint64_t)sub_100904750((char *)v113, (char *)v114);
      uint64_t v113 = result;
      uint64_t v114 = (uint64_t)v69;
      uint64_t v70 = *(void *)&v53[v126];
      if (!v70)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      (*(void (**)(void))(*(void *)v70 + 760))();
      sub_1005D3C94((uint64_t)&v34[*(int *)(v125 + 20)], (uint64_t)v37);
      sub_10104835C((uint64_t)v34, type metadata accessor for CRLWPShapeItemCRDTData);
      uint64_t v71 = v109;
      uint64_t v72 = v119;
      v112(v109, v37, v119);
      sub_10104835C((uint64_t)v37, type metadata accessor for CRLWPStorageCRDTData);
      uint64_t v73 = CRAttributedString.count.getter();
      uint64_t v112 = *(void (**)(char *, char *, uint64_t))(v117 + 8);
      ((void (*)(char *, uint64_t))v112)(v71, v72);
      if (v73 >= (v113 & ~(v113 >> 63))) {
        int64_t v74 = v113 & ~(v113 >> 63);
      }
      else {
        int64_t v74 = v73;
      }
      if (v73 >= (v114 & ~(v114 >> 63))) {
        int64_t v75 = v114 & ~(v114 >> 63);
      }
      else {
        int64_t v75 = v73;
      }
      if (v75 >= v74)
      {
        uint64_t v76 = v115;
        uint64_t v68 = v116;
        CRAttributedString.subscript.getter();
        uint64_t v77 = v108;
        uint64_t v78 = v124;
        CRAttributedString.Substring.runs.getter();
        (*(void (**)(char *, void *))(v120 + 8))(v76, v78);
        uint64_t v79 = v110;
        (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v131, v77, v132);
        uint64_t v80 = v130;
        CRAttributedString.Runs.next()();
        uint64_t v125 = *(void *)(v8 + 48);
        uint64_t v126 = v8 + 48;
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v125)(v80, 1, v7) != 1)
        {
          uint64_t v82 = *(void **)(v8 + 32);
          uint64_t v81 = v8 + 32;
          unsigned int v124 = v82;
          unint64_t v83 = (void (**)(char *, uint64_t))(v107 + 8);
          uint64_t v84 = (void (**)(char *, uint64_t))(v81 - 24);
          long long v120 = xmmword_10117E810;
          uint64_t v85 = v129;
          Swift::UInt v86 = v130;
          do
          {
            uint64_t v87 = v81;
            ((void (*)(char *, char *, uint64_t))v124)(v85, v86, v7);
            unint64_t v88 = v127;
            uint64_t v89 = CRAttributedString.Runs.Run.attributes.getter();
            __chkstk_darwin(v89, v90);
            *(&v106 - 4) = (uint64_t)&type metadata for CRLWPHyperlinkAttribute;
            unint64_t v91 = sub_10091989C();
            uint64_t v92 = v133;
            *(&v106 - 3) = v91;
            *(&v106 - 2) = v92;
            swift_getKeyPath();
            sub_100913630();
            swift_retain();
            uint64_t v93 = v128;
            CRAttributedString.Attributes.subscript.getter();
            swift_release();
            (*v83)(v88, v93);
            uint64_t v94 = (uint64_t)v134;
            swift_bridgeObjectRetain();
            char v95 = sub_1006E5534((uint64_t)v28, v94);
            swift_bridgeObjectRelease();
            if ((v95 & 1) == 0)
            {
              sub_1005057FC(&qword_1016A2BF0);
              unint64_t v96 = (*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80);
              uint64_t v97 = swift_allocObject();
              *(_OWORD *)(v97 + 16) = v120;
              sub_100522E9C((uint64_t)v28, v97 + v96, (uint64_t *)&unk_10167BE90);
              sub_1006E1E18(v97);
              uint64_t v98 = v121;
              sub_100522E9C((uint64_t)v28, v121, (uint64_t *)&unk_10167BE90);
              uint64_t v99 = v123;
              sub_100CB7824(v123, v98);
              sub_100522F00(v99, (uint64_t *)&unk_10167BE90);
            }
            sub_100522F00((uint64_t)v28, (uint64_t *)&unk_10167BE90);
            uint64_t v85 = v129;
            (*v84)(v129, v7);
            Swift::UInt v86 = v130;
            CRAttributedString.Runs.next()();
            uint64_t v81 = v87;
          }
          while (((unsigned int (*)(char *, uint64_t, uint64_t))v125)(v86, 1, v7) != 1);
          uint64_t v53 = v118;
          uint64_t v68 = v116;
          uint64_t v79 = v110;
        }
        (*(void (**)(char *, uint64_t))(v79 + 8))(v131, v132);
        uint64_t v57 = v119;
        uint64_t v67 = (void (*)(char *, uint64_t))v112;
        goto LABEL_21;
      }
      __break(1u);
LABEL_28:
      __break(1u);
    }
  }
  uint64_t v54 = *(void *)&v53[v126];
  if (!v54)
  {
    __break(1u);
    goto LABEL_30;
  }
  unint64_t v55 = v53;
  (*(void (**)(void))(*(void *)v54 + 760))();
  sub_1005D3C94((uint64_t)&v34[*(int *)(v125 + 20)], (uint64_t)v37);
  sub_10104835C((uint64_t)v34, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v56 = (char *)v112;
  uint64_t v57 = v119;
  v51((char *)v112, &v37[*(int *)(v111 + 20)], v119);
  sub_10104835C((uint64_t)v37, type metadata accessor for CRLWPStorageCRDTData);
  unint64_t v58 = v115;
  uint64_t v59 = CRAttributedString.subscript.getter();
  __chkstk_darwin(v59, v60);
  *(&v106 - 4) = (uint64_t)&type metadata for CRLWPHyperlinkAttribute;
  unint64_t v61 = sub_10091989C();
  uint64_t v62 = v133;
  *(&v106 - 3) = v61;
  *(&v106 - 2) = v62;
  swift_getKeyPath();
  sub_100913630();
  swift_retain();
  uint64_t v64 = v123;
  uint64_t v63 = v124;
  CRAttributedString.Substring.subscript.getter();
  swift_release();
  (*(void (**)(char *, void *))(v120 + 8))(v58, v63);
  sub_1005057FC(&qword_1016A2BF0);
  unint64_t v65 = (*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80);
  uint64_t v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = xmmword_10117E810;
  sub_100522E9C(v64, v66 + v65, (uint64_t *)&unk_10167BE90);
  sub_1006E1E18(v66);
  sub_100522F00(v64, (uint64_t *)&unk_10167BE90);
  uint64_t v67 = *(void (**)(char *, uint64_t))(v117 + 8);
  v67(v56, v57);
  uint64_t v53 = v55;
  uint64_t v68 = v116;
LABEL_21:
  uint64_t v100 = v53;
  uint64_t v101 = swift_bridgeObjectRetain();
  uint64_t v102 = sub_101047C78(v101, v100);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();

  uint64_t v103 = *((void *)v102 + 2);
  if (v103 == 1)
  {
    uint64_t v104 = (void *)*((void *)v102 + 4);
    id v105 = v104;
    swift_bridgeObjectRelease();
    v67(v68, v57);
    return (uint64_t)v104;
  }
  else if (v103)
  {
    v67(v68, v57);
  }
  else
  {
    swift_bridgeObjectRelease();
    v67(v68, v57);
    return 0;
  }
  return (uint64_t)v102;
}