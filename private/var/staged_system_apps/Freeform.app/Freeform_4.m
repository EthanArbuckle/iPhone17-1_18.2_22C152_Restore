id sub_1005D52AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController8GridItem____lazy_storage___gridViewController;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController8GridItem____lazy_storage___gridViewController);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController8GridItem____lazy_storage___gridViewController);
  }
  else
  {
    v4 = [objc_allocWithZone((Class)_s8GridItemC18GridViewControllerCMa()) init];
    v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1005D531C(void *a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController);
  if (!v2)
  {
    __break(1u);
    return;
  }
  v4 = *(void **)(v2 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionView);
  if (a1)
  {
    if (v4)
    {
      sub_10050BF48(0, &qword_101674EA8);
      id v5 = v4;
      id v6 = a1;
      char v7 = static NSObject.== infix(_:_:)();

      if (v7) {
        return;
      }
    }
  }
  else if (!v4)
  {
    return;
  }
  v10 = (char *)sub_1005D52AC();
  uint64_t v8 = *(void *)&v10[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionView];
  BOOL v9 = v8 != 0;
  [*(id *)&v10[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionHostingView] setHidden:v8 == 0];
  [*(id *)&v10[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8GridItem18GridViewController_attributionViewBottomConstraint] setActive:v9];
}

char *sub_1005D5458()
{
  v0 = (char *)[objc_allocWithZone((Class)_s8GridItemC18GridViewControllerCMa()) init];
  uint64_t v1 = (char *)sub_1005D52AC();
  uint64_t v2 = &v1[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem];
  swift_unknownObjectWeakLoadStrong();
  uint64_t v3 = *((void *)v2 + 1);

  *(void *)&v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem + 8] = v3;
  swift_unknownObjectWeakAssign();

  swift_unknownObjectRelease();
  uint64_t v4 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView;
  id v5 = *(id *)&v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView];
  id v6 = (char *)sub_1005D52AC();
  id v7 = *(id *)&v6[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView];

  id v8 = [v7 image];
  [v5 setImage:v8];

  id v9 = *(id *)&v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel];
  v10 = (char *)sub_1005D52AC();
  id v11 = *(id *)&v10[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel];

  id v12 = [v11 text];
  [v9 setText:v12];

  id v13 = *(id *)&v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_lastEditedTimestampLabel];
  v14 = (char *)sub_1005D52AC();
  id v15 = *(id *)&v14[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_lastEditedTimestampLabel];

  id v16 = [v15 text];
  [v13 setText:v16];

  id v17 = *(id *)&v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_collaboratorNameLabel];
  v18 = (char *)sub_1005D52AC();
  id v19 = *(id *)&v18[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_collaboratorNameLabel];

  id v20 = [v19 text];
  [v17 setText:v20];

  v21 = *(id *)&v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton];
  v22 = (char *)sub_1005D52AC();
  v23 = (unsigned __int8 *)*(id *)&v22[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton];

  int v24 = v23[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_isFavorite];
  uint64_t v25 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_isFavorite;
  v21[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_isFavorite] = v24;
  [*(id *)&v21[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconFillImageView] setHidden:v24 ^ 1u];
  if (v21[v25] == 1) {
    char v26 = v21[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_showsOuterGlow] ^ 1;
  }
  else {
    char v26 = 1;
  }
  [*(id *)&v21[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconOuterGlowImageView] setHidden:v26 & 1];

  v27 = v0;
  v28 = (unsigned __int8 *)sub_1005D52AC();
  int v29 = v28[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_dimsThumbnail];

  v27[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_dimsThumbnail] = v29;
  double v30 = 1.0;
  if (v29) {
    double v30 = 0.5;
  }
  [*(id *)&v0[v4] setAlpha:v30];

  v31 = (unsigned __int8 *)sub_1005D52AC();
  int v32 = v31[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isSelected];

  v27[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isSelected] = v32;
  v33 = *(unsigned char **)&v27[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_selectionStateBadge];
  int v34 = v33[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_isChecked];
  v33[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_isChecked] = v32;
  if (v32 != v34) {
    [v33 setNeedsDisplay];
  }
  v35 = v27;
  id v36 = sub_1005D52AC();
  id v37 = [v36 traitCollection];

  v38 = *(void **)&v35[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_overrideTraitCollection];
  *(void *)&v35[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_overrideTraitCollection] = v37;
  id v39 = v37;

  result = (char *)[v35 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_13;
  }
  v41 = result;
  [result setNeedsUpdateConstraints];

  v42 = (char *)sub_1005D52AC();
  id v43 = *(id *)&v42[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_roundedCornersContainerView];

  [v43 frame];
  double v45 = v44;
  double v47 = v46;

  [v35 setPreferredContentSize:v45, v47];
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_10117DF50;
  result = (char *)[v35 view];
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v49 = result;
  id v50 = [result widthAnchor];

  id v51 = [v50 constraintEqualToConstant:v45];
  *(void *)(v48 + 32) = v51;
  result = (char *)[v35 view];
  if (result)
  {
    v52 = result;
    v53 = self;
    id v54 = [v52 heightAnchor];

    id v55 = [v54 constraintEqualToConstant:v47];
    *(void *)(v48 + 40) = v55;
    specialized Array._endMutation()();
    sub_10050BF48(0, (unint64_t *)&qword_101674200);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v53 activateConstraints:isa];

    return v35;
  }
LABEL_14:
  __break(1u);
  return result;
}

void sub_1005D5A48()
{
  qword_101719F30 = 0x4026000000000000;
}

CALayerCornerCurve sub_1005D5A58()
{
  qword_101719F38 = (uint64_t)kCACornerCurveContinuous;
  return kCACornerCurveContinuous;
}

id sub_1005D5A70()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithWhite:0.0 alpha:0.2];
  qword_101719F40 = (uint64_t)result;
  return result;
}

void sub_1005D5AB0()
{
  qword_101719F48 = 0;
  unk_101719F50 = 0;
}

void sub_1005D5AC0()
{
  qword_101719F58 = 0x3FF0000000000000;
}

void sub_1005D5AD0()
{
  qword_101719F60 = 0x4008000000000000;
}

void sub_1005D5AE0()
{
  qword_101719F68 = sub_100067CF8(8.0);
  qword_101719F70 = v0;
  qword_101719F78 = v1;
  qword_101719F80 = v2;
}

id sub_1005D5B18(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_whiteColor, &qword_101719F88);
}

void sub_1005D5B2C()
{
  qword_101719F90 = 0x4065200000000000;
}

void sub_1005D5B40()
{
  qword_101719F98 = 0x4024000000000000;
}

void sub_1005D5B50()
{
  qword_101719FA0 = 0x401C000000000000;
}

void sub_1005D5B60()
{
  qword_101719FA8 = 0x4024000000000000;
}

void sub_1005D5B70()
{
  qword_101719FB0 = 0x401C000000000000;
}

void sub_1005D5B80()
{
  qword_101719FB8 = sub_100067CF8(7.0);
  qword_101719FC0 = v0;
  qword_101719FC8 = v1;
  qword_101719FD0 = v2;
}

id sub_1005D5BB8(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_systemGroupedBackgroundColor, &qword_101719FD8);
}

id sub_1005D5BCC(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_secondarySystemGroupedBackgroundColor, &qword_101719FE0);
}

UIFontTextStyle sub_1005D5BE0()
{
  qword_101719FE8 = (uint64_t)UIFontTextStyleFootnote;
  return UIFontTextStyleFootnote;
}

UIFontWeight sub_1005D5BF8()
{
  UIFontWeight result = UIFontWeightBold;
  qword_101719FF0 = *(void *)&UIFontWeightBold;
  return result;
}

id sub_1005D5C10(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_labelColor, &qword_101719FF8);
}

UIFontTextStyle sub_1005D5C24()
{
  qword_10171A000 = (uint64_t)UIFontTextStyleCaption2;
  return UIFontTextStyleCaption2;
}

UIFontWeight sub_1005D5C3C()
{
  UIFontWeight result = UIFontWeightRegular;
  qword_10171A008 = *(void *)&UIFontWeightRegular;
  return result;
}

id sub_1005D5C54(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_secondaryLabelColor, &qword_10171A010);
}

void sub_1005D5C68()
{
  qword_10171A018 = 0x4024000000000000;
}

void sub_1005D5D60(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8GridItem18GridViewController_attributionViewBottomConstraint;
  uint64_t v4 = *(void **)(v1
                + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8GridItem18GridViewController_attributionViewBottomConstraint);
  *(void *)(v1
            + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8GridItem18GridViewController_attributionViewBottomConstraint) = a1;
  id v7 = a1;
  if (a1)
  {
    uint64_t v5 = *(void *)(v1
                   + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionView);
    BOOL v6 = v5 != 0;
    [*(id *)(v1+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionHostingView) setHidden:v5 == 0];
    [*(id *)(v1 + v3) setActive:v6];
  }
  else if (v4)
  {
    [v4 setActive:0];
  }
}

void sub_1005D5E28()
{
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8GridItem18GridViewController_labelBackdropView);
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)(v0+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_roundedCornersContainerView) addSubview:v1];

  sub_100D202B0();
}

void sub_1005D5E94()
{
  sub_1005D5E9C(v0);
}

void sub_1005D5E9C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_dropShadowView) layer];
  id v3 = [*(id *)(a1+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_roundedCornersContainerView) layer];
  uint64_t v4 = *(void **)(a1
                + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView);
  id v5 = [v4 layer];
  id v6 = [*(id *)(a1+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailBackdropView) layer];
  id v38 = [*(id *)(a1+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8GridItem18GridViewController_labelBackdropView) layer];
  if (qword_10166EC58 != -1) {
    swift_once();
  }
  [v3 setCornerRadius:*(double *)&qword_101719F30];
  if (qword_10166EC60 != -1) {
    swift_once();
  }
  [v3 setCornerCurve:qword_101719F38];
  if (qword_10166EC68 != -1) {
    swift_once();
  }
  id v7 = [(id)qword_101719F40 CGColor];
  [v2 setShadowColor:v7];

  if (qword_10166EC70 != -1) {
    swift_once();
  }
  [v2 setShadowOffset:*(double *)&qword_101719F48 unk_101719F50];
  if (qword_10166EC78 != -1) {
    swift_once();
  }
  HIDWORD(v8) = HIDWORD(qword_101719F58);
  *(float *)&double v8 = *(double *)&qword_101719F58;
  [v2 setShadowOpacity:v8];
  if (qword_10166EC80 != -1) {
    swift_once();
  }
  [v2 setShadowRadius:*(double *)&qword_101719F60];
  [v3 cornerRadius];
  [v2 setCornerRadius:];
  id v9 = [v3 cornerCurve];
  [v2 setCornerCurve:v9];

  if (qword_10166EC90 != -1) {
    swift_once();
  }
  id v10 = [(id)qword_101719F88 CGColor];
  id v36 = v6;
  [v6 setBackgroundColor:v10];

  id v11 = [self mainScreen];
  id v12 = [v11 traitCollection];

  LODWORD(v11) = [v12 crl_isUserInterfaceStyleDark];
  if (v11)
  {
    if (qword_10166ECD0 != -1) {
      swift_once();
    }
    id v13 = &qword_101719FE0;
  }
  else
  {
    if (qword_10166ECC8 != -1) {
      swift_once();
    }
    id v13 = &qword_101719FD8;
  }
  id v14 = [(id)*v13 CGColor];
  [v38 setBackgroundColor:v14];

  [v4 setContentMode:1];
  if (qword_10166ED90 != -1) {
    swift_once();
  }
  id v15 = [(id)qword_10171A168 CGColor];
  [v5 setBackgroundColor:v15];

  id v16 = *(void **)(a1 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel);
  if (qword_10166ECD8 != -1) {
    swift_once();
  }
  id v37 = v5;
  uint64_t v17 = qword_101719FE8;
  if (qword_10166ECE0 != -1) {
    swift_once();
  }
  v18 = self;
  id v19 = [v18 preferredFontDescriptorWithTextStyle:v17];
  id v20 = self;
  [v19 pointSize];
  id v21 = [v20 systemFontOfSize:];

  [v16 setFont:v21];
  if (qword_10166ECE8 != -1) {
    swift_once();
  }
  [v16 setTextColor:qword_101719FF8];
  LODWORD(v22) = 1132068864;
  [v16 setContentCompressionResistancePriority:0 forAxis:v22];
  v23 = *(void **)(a1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_lastEditedTimestampLabel);
  if (qword_10166ECF0 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_10171A000;
  if (qword_10166ECF8 != -1) {
    swift_once();
  }
  id v25 = [v18 preferredFontDescriptorWithTextStyle:v24];
  [v25 pointSize];
  id v26 = [v20 systemFontOfSize:];

  [v23 setFont:v26];
  if (qword_10166ED00 != -1) {
    swift_once();
  }
  [v23 setTextColor:qword_10171A010];
  LODWORD(v27) = 1132068864;
  [v23 setContentCompressionResistancePriority:0 forAxis:v27];
  v28 = *(void **)(a1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_collaboratorNameLabel);
  id v29 = [v18 preferredFontDescriptorWithTextStyle:qword_10171A000];
  [v29 pointSize];
  id v30 = [v20 systemFontOfSize:];

  [v28 setFont:v30];
  [v28 setTextColor:qword_10171A010];
  LODWORD(v31) = 1132068864;
  [v28 setContentCompressionResistancePriority:0 forAxis:v31];
  uint64_t v32 = *(void *)(a1 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton);
  uint64_t v33 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_showsOuterGlow;
  char v34 = 1;
  *(unsigned char *)(v32
           + OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_showsOuterGlow) = 1;
  uint64_t v35 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_isFavorite;
  [*(id *)(v32+ OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconFillImageView) setHidden:(*(unsigned char *)(v32+ OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_isFavorite) & 1) == 0];
  if (*(unsigned char *)(v32 + v35) == 1) {
    char v34 = *(unsigned char *)(v32 + v33) ^ 1;
  }
  [*(id *)(v32+ OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconOuterGlowImageView) setHidden:v34 & 1];
}

void sub_1005D67B8()
{
  uint64_t v1 = v0;
  type metadata accessor for UILayoutPriority(0);
  sub_10053BFE0();
  static _UIKitNumericRawRepresentable.- infix(_:_:)();
  int v2 = v162;
  sub_1005057FC((uint64_t *)&unk_101676C10);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1011810C0;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailContainerView];
  id v5 = [v4 topAnchor];
  id v6 = *(void **)&v1[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_roundedCornersContainerView];
  id v7 = [v6 topAnchor];
  id v8 = [v5 constraintEqualToAnchor:v7];

  *(void *)(inited + 32) = v8;
  id v9 = [v4 leadingAnchor];
  id v10 = [v6 leadingAnchor];
  id v11 = [v9 constraintEqualToAnchor:v10];

  *(void *)(inited + 40) = v11;
  id v12 = [v4 trailingAnchor];
  id v13 = [v6 trailingAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13];

  *(void *)(inited + 48) = v14;
  id v15 = [v4 bottomAnchor];
  v161 = v1;
  id v16 = *(void **)&v1[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8GridItem18GridViewController_labelBackdropView];
  id v17 = [v16 topAnchor];
  id v18 = [v15 constraintEqualToAnchor:v17];

  *(void *)(inited + 56) = v18;
  id v19 = *(void **)&v1[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailBackdropView];
  id v20 = [v19 topAnchor];
  id v21 = [v4 topAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21];

  *(void *)(inited + 64) = v22;
  id v23 = [v19 leadingAnchor];
  id v24 = [v4 leadingAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24];

  *(void *)(inited + 72) = v25;
  id v26 = [v19 trailingAnchor];
  id v27 = [v4 trailingAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27];

  *(void *)(inited + 80) = v28;
  id v29 = [v19 bottomAnchor];
  id v30 = [v4 bottomAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30];

  *(void *)(inited + 88) = v31;
  id v32 = [v16 leadingAnchor];
  id v33 = [v6 leadingAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33];

  *(void *)(inited + 96) = v34;
  id v35 = [v16 trailingAnchor];
  id v36 = [v6 trailingAnchor];
  id v37 = [v35 constraintEqualToAnchor:v36];

  *(void *)(inited + 104) = v37;
  id v38 = [v16 bottomAnchor];
  id v160 = v6;
  id v39 = [v6 bottomAnchor];
  id v40 = [v38 constraintEqualToAnchor:v39];

  *(void *)(inited + 112) = v40;
  specialized Array._endMutation()();
  sub_1006E0CA0(inited);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_10117FBE0;
  v42 = *(void **)&v1[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView];
  id v43 = [v42 topAnchor];
  id v44 = [v19 topAnchor];
  if (qword_10166EC88 != -1) {
    swift_once();
  }
  id v45 = [v43 constraintEqualToAnchor:v44 constant:*(double *)&qword_101719F68];

  *(void *)(v41 + 32) = v45;
  id v46 = [v42 leadingAnchor];
  id v47 = [v19 leadingAnchor];
  uint64_t v48 = qword_101719F70;
  uint64_t v49 = qword_101719F80;
  if (sub_1003E8750()) {
    double v50 = *(double *)&v48;
  }
  else {
    double v50 = *(double *)&v49;
  }
  id v51 = [v46 constraintEqualToAnchor:v47 constant:v50];

  *(void *)(v41 + 40) = v51;
  id v52 = [v19 trailingAnchor];
  id v53 = [v42 trailingAnchor];
  uint64_t v54 = qword_101719F70;
  uint64_t v55 = qword_101719F80;
  if (sub_1003E8750()) {
    double v56 = *(double *)&v55;
  }
  else {
    double v56 = *(double *)&v54;
  }
  id v57 = [v52 constraintEqualToAnchor:v53 constant:v56];

  *(void *)(v41 + 48) = v57;
  id v58 = [v19 bottomAnchor];
  id v59 = [v42 bottomAnchor];
  id v60 = [v58 constraintEqualToAnchor:v59 constant:*(double *)&qword_101719F78];

  *(void *)(v41 + 56) = v60;
  uint64_t v163 = v41;
  specialized Array._endMutation()();
  id v61 = [v42 widthAnchor];
  id v62 = [v42 heightAnchor];
  id v63 = [v61 constraintEqualToAnchor:v62 multiplier:1.77777778];

  LODWORD(v64) = v2;
  [v63 setPriority:v64];
  id v65 = v63;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v163 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v163 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  unint64_t v66 = swift_bridgeObjectRetain();
  sub_1006E0CA0(v66);
  unint64_t v67 = swift_initStackObject();
  *(_OWORD *)(v67 + 16) = xmmword_1011810D0;
  v68 = *(void **)&v1[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel];
  id v69 = [*(id *)&v161[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel] topAnchor];
  id v70 = [v16 topAnchor];
  if (qword_10166ECC0 != -1) {
    swift_once();
  }
  id v71 = [v69 constraintEqualToAnchor:v70 constant:*(double *)&qword_101719FB8];

  *(void *)(v67 + 32) = v71;
  id v72 = [v68 leadingAnchor];
  id v73 = [v16 leadingAnchor];
  uint64_t v74 = qword_101719FC0;
  uint64_t v75 = qword_101719FD0;
  if (sub_1003E8750()) {
    double v76 = *(double *)&v74;
  }
  else {
    double v76 = *(double *)&v75;
  }
  id v77 = [v72 constraintEqualToAnchor:v73 constant:v76];

  *(void *)(v67 + 40) = v77;
  id v78 = [v68 trailingAnchor];
  v79 = *(void **)&v161[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_lastEditedTimestampLabel];
  id v80 = [v79 trailingAnchor];
  id v81 = [v78 constraintLessThanOrEqualToAnchor:v80];

  *(void *)(v67 + 48) = v81;
  id v82 = [v68 bottomAnchor];
  id v83 = [v79 topAnchor];
  id v84 = [v82 constraintEqualToAnchor:v83];

  *(void *)(v67 + 56) = v84;
  id v85 = [v79 leadingAnchor];
  id v86 = [v68 leadingAnchor];
  id v87 = [v85 constraintEqualToAnchor:v86];

  *(void *)(v67 + 64) = v87;
  id v88 = [v16 trailingAnchor];
  id v89 = [v79 trailingAnchor];
  uint64_t v90 = qword_101719FC0;
  uint64_t v91 = qword_101719FD0;
  if (sub_1003E8750()) {
    double v92 = *(double *)&v91;
  }
  else {
    double v92 = *(double *)&v90;
  }
  id v93 = [v88 constraintEqualToAnchor:v89 constant:v92];

  *(void *)(v67 + 72) = v93;
  id v94 = [v79 bottomAnchor];
  v95 = *(void **)&v161[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_collaboratorNameLabel];
  id v96 = [v95 topAnchor];
  id v97 = [v94 constraintEqualToAnchor:v96];

  *(void *)(v67 + 80) = v97;
  id v98 = [v95 trailingAnchor];
  id v99 = [v79 trailingAnchor];
  id v100 = [v98 constraintEqualToAnchor:v99];

  *(void *)(v67 + 88) = v100;
  id v101 = [v95 leadingAnchor];
  id v102 = [v68 leadingAnchor];
  id v103 = [v101 constraintEqualToAnchor:v102];

  *(void *)(v67 + 96) = v103;
  id v104 = [v16 bottomAnchor];
  id v105 = [v95 bottomAnchor];
  id v106 = [v104 constraintEqualToAnchor:v105 constant:*(double *)&qword_101719FC8];

  *(void *)(v67 + 104) = v106;
  specialized Array._endMutation()();
  unint64_t v107 = v67;
  if (v67 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v108 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v108 = *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v108)
  {
    if (v108 < 1)
    {
      __break(1u);
LABEL_72:
      __break(1u);
      return;
    }
    swift_bridgeObjectRetain();
    uint64_t v109 = 0;
    do
    {
      if ((v107 & 0xC000000000000001) != 0) {
        id v110 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v110 = *(id *)(v107 + 8 * v109 + 32);
      }
      v112 = v110;
      ++v109;
      LODWORD(v111) = v2;
      [v110 setPriority:v111];
    }
    while (v108 != v109);
    swift_bridgeObjectRelease();
  }
  sub_1006E0CA0(v107);
  v113 = *(void **)&v161[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton];
  id v114 = [v113 leadingAnchor];
  id v115 = [v19 leadingAnchor];
  if (qword_10166ECA0 != -1) {
    swift_once();
  }
  id v116 = [v114 constraintEqualToAnchor:v115 constant:*(double *)&qword_101719F98];

  v117 = &selRef_beginHandwritingModeIfNeeded;
  id v118 = [v19 bottomAnchor];
  id v119 = [v113 bottomAnchor];
  if (qword_10166ECA8 != -1) {
    swift_once();
  }
  id v120 = [v118 constraintEqualToAnchor:v119 constant:*(double *)&qword_101719FA0];

  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    v117 = &selRef_beginHandwritingModeIfNeeded;
    uint64_t v156 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v122 = v156 + 2;
    if (!__OFADD__(v156, 2))
    {
LABEL_35:
      sub_101044ABC(v122, 1);
      specialized Array._endMutation()();
      id v116 = v116;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_36;
      }
      goto LABEL_62;
    }
  }
  else
  {
    uint64_t v121 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v122 = v121 + 2;
    if (!__OFADD__(v121, 2)) {
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_62:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_36:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v123 = v120;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  id v124 = [v19 trailingAnchor];
  v125 = *(void **)&v161[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_selectionStateBadge];
  id v126 = [v125 trailingAnchor];
  if (qword_10166ECB0 != -1) {
    swift_once();
  }
  id v127 = [v124 constraintEqualToAnchor:v126 constant:*(double *)&qword_101719FA8];

  id v128 = [v19 v117[96]];
  id v129 = [v125 v117[96]];
  if (qword_10166ECB8 != -1) {
    swift_once();
  }
  id v130 = [v128 constraintEqualToAnchor:v129 constant:*(double *)&qword_101719FB0];

  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    v117 = &selRef_beginHandwritingModeIfNeeded;
    uint64_t v157 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v132 = v157 + 2;
    if (!__OFADD__(v157, 2))
    {
LABEL_44:
      sub_101044ABC(v132, 1);
      specialized Array._endMutation()();
      id v127 = v127;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_45;
      }
      goto LABEL_66;
    }
  }
  else
  {
    uint64_t v131 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v132 = v131 + 2;
    if (!__OFADD__(v131, 2)) {
      goto LABEL_44;
    }
  }
  __break(1u);
LABEL_66:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_45:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v133 = v130;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  v134 = *(void **)&v161[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionHostingView];
  id v135 = [v134 v117[96]];
  id v136 = [v161 view];
  if (!v136) {
    goto LABEL_72;
  }
  v137 = v136;
  swift_bridgeObjectRelease();
  v138 = v117;
  id v139 = [v137 v117[96]];

  id v140 = [v135 constraintEqualToAnchor:v139];
  sub_1005D5D60(v140);
  id v141 = [v134 topAnchor];
  id v142 = [v160 v138[96]];
  if (qword_10166ED08 != -1) {
    swift_once();
  }
  id v143 = [v141 constraintEqualToAnchor:v142 constant:*(double *)&qword_10171A018];

  id v144 = [v134 leadingAnchor];
  id v145 = [v160 leadingAnchor];
  id v146 = [v144 constraintEqualToAnchor:v145];

  id v147 = [v134 trailingAnchor];
  id v148 = [v160 trailingAnchor];
  id v149 = [v147 constraintEqualToAnchor:v148];

  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
    uint64_t v150 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v151 = v150 + 3;
    if (!__OFADD__(v150, 3)) {
      goto LABEL_52;
    }
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  swift_bridgeObjectRetain();
  uint64_t v158 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v151 = v158 + 3;
  if (__OFADD__(v158, 3)) {
    goto LABEL_69;
  }
LABEL_52:
  sub_101044ABC(v151, 1);
  specialized Array._endMutation()();
  id v143 = v143;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_70:
  }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v152 = v146;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v153 = v149;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  v154 = self;
  sub_10050BF48(0, (unint64_t *)&qword_101674200);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v154 activateConstraints:isa];
}

void sub_1005D7D24()
{
  uint64_t v1 = v0;
  sub_1005D5E9C(v0);
  sub_100D24E68();
  sub_100D23B4C();
  sub_100D21110();
  id v2 = [self sharedApplication];
  id v3 = [v2 preferredContentSizeCategory];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;
  if (v4 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v6 == v7) {
    goto LABEL_8;
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;
    if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
    {
LABEL_8:
      swift_bridgeObjectRelease_n();
      goto LABEL_9;
    }
    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v22 = v21;
      if (v20 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v22 == v23)
      {

        uint64_t v14 = 2;
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v24) {
          uint64_t v14 = 2;
        }
        else {
          uint64_t v14 = 1;
        }
      }
      goto LABEL_10;
    }
  }
LABEL_9:

  uint64_t v14 = 2;
LABEL_10:
  id v15 = *(void **)(v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_collaboratorNameLabel);
  id v16 = *(void **)(v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_lastEditedTimestampLabel);
  id v17 = objc_retain(*(id *)(v1
                          + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel));
  id v25 = v15;
  id v18 = v16;
  [v17 setNumberOfLines:v14];
  [v25 setNumberOfLines:v14];
  [v18 setNumberOfLines:v14];
}

uint64_t sub_1005D7FD0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem;
  if (!swift_unknownObjectWeakLoadStrong()
    || (uint64_t v2 = *(void *)(v1 + 8),
        uint64_t ObjectType = swift_getObjectType(),
        uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 144))(ObjectType, v2),
        unint64_t v6 = v5,
        swift_unknownObjectRelease(),
        !v6))
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = qword_10169A3A8;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1005D8094()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem;
  if (!swift_unknownObjectWeakLoadStrong()
    || (uint64_t v2 = *(void *)(v1 + 8),
        uint64_t ObjectType = swift_getObjectType(),
        uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 168))(ObjectType, v2),
        unint64_t v6 = v5,
        swift_unknownObjectRelease(),
        !v6))
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = qword_10169A3A8;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1005D8158()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem;
  if (!swift_unknownObjectWeakLoadStrong()
    || (uint64_t v2 = *(void *)(v1 + 8),
        uint64_t ObjectType = swift_getObjectType(),
        uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 216))(ObjectType, v2),
        unint64_t v6 = v5,
        swift_unknownObjectRelease(),
        !v6))
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = qword_10169A3A8;
    swift_bridgeObjectRetain();
  }
  return v4;
}

unsigned char *sub_1005D821C(char a1)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isSelected) = a1;
  int v3 = a1 & 1;
  UIFontWeight result = *(unsigned char **)(v1
                     + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_selectionStateBadge);
  int v5 = result[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_isChecked];
  result[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_isChecked] = a1;
  if (v5 != v3) {
    return [result setNeedsDisplay];
  }
  return result;
}

id sub_1005D830C(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8GridItem18GridViewController_labelBackdropView;
  id v4 = objc_allocWithZone((Class)UIView);
  int v5 = v1;
  *(void *)&v1[v3] = [v4 initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v5[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8GridItem18GridViewController_attributionViewBottomConstraint] = 0;

  v8.receiver = v5;
  v8.super_class = (Class)_s8GridItemC18GridViewControllerCMa();
  id v6 = [super initWithCoder:a1];

  return v6;
}

void sub_1005D83E8()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8GridItem18GridViewController_labelBackdropView));
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8GridItem18GridViewController_attributionViewBottomConstraint);
}

id sub_1005D8428(uint64_t a1)
{
  return sub_1005D8590(a1, _s8GridItemC18GridViewControllerCMa);
}

void sub_1005D8564()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController8GridItem____lazy_storage___gridViewController));
}

id sub_1005D8574()
{
  return sub_1005D8590(0, _s8GridItemCMa);
}

id sub_1005D8590(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t sub_1005D85D8()
{
  return _s8GridItemCMa();
}

uint64_t _s8GridItemCMa()
{
  uint64_t result = qword_101674E60;
  if (!qword_101674E60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005D862C()
{
  return swift_updateClassMetadata2();
}

uint64_t _s8GridItemC18GridViewControllerCMa()
{
  return self;
}

id sub_1005D8698(void *a1)
{
  id v2 = [a1 traitCollection];
  id v3 = [a1 container];
  [v3 effectiveContentSize];
  double v31 = v4;
  if (qword_10166EC88 != -1) {
    swift_once();
  }
  double v5 = *(double *)&qword_101719F70;
  uint64_t v6 = qword_101719F80;
  if (!sub_1003E8750()) {
    double v5 = *(double *)&v6;
  }
  if (qword_10166EC98 != -1) {
    swift_once();
  }
  double v7 = *(double *)&qword_101719F90;
  uint64_t v8 = qword_101719F70;
  uint64_t v9 = qword_101719F80;
  if (sub_1003E8750()) {
    double v10 = *(double *)&v9;
  }
  else {
    double v10 = *(double *)&v8;
  }
  if (qword_10166EC38 != -1) {
    swift_once();
  }
  double v11 = *(double *)&qword_101674E10;
  uint64_t v12 = qword_101719F70;
  uint64_t v13 = qword_101719F80;
  if (sub_1003E8750()) {
    double v14 = *(double *)&v12;
  }
  else {
    double v14 = *(double *)&v13;
  }
  double v15 = *(double *)&qword_101719F90;
  if (sub_1003E8750()) {
    double v16 = *(double *)&v13;
  }
  else {
    double v16 = *(double *)&v12;
  }
  if (v5 + v7 + v10 + v11 + v14 + v15 + v16 > v31)
  {
    id v17 = self;
    id v18 = "fractionalWidthDimension:";
    goto LABEL_20;
  }
  if ((objc_msgSend(v2, "crl_isCompactWidth") & 1) == 0
    && !objc_msgSend(v2, "crl_isCompactHeight"))
  {
    if (sub_1003E8750()) {
      double v27 = *(double *)&v12;
    }
    else {
      double v27 = *(double *)&v13;
    }
    if (sub_1003E8750()) {
      double v28 = *(double *)&v13;
    }
    else {
      double v28 = *(double *)&v12;
    }
    id v17 = self;
    double v19 = v15 + v27 + v28;
    id v18 = "absoluteDimension:";
    goto LABEL_36;
  }
  [v3 effectiveContentSize];
  double v21 = v20;
  [v3 effectiveContentSize];
  if (v22 >= v21)
  {
    [v3 effectiveContentSize];
    double v25 = v24;
    if (qword_10166EBF0 != -1) {
      swift_once();
    }
    double v26 = *(double *)&qword_101674DC8;
    id v17 = self;
    id v18 = "fractionalWidthDimension:";
    if (v26 < v25)
    {
      double v19 = 0.333333333;
      goto LABEL_36;
    }
LABEL_20:
    double v19 = 0.5;
LABEL_36:
    id v23 = [v17 v18:v19];
    goto LABEL_37;
  }
  id v23 = [self fractionalWidthDimension:0.25];
LABEL_37:
  id v29 = v23;
  swift_unknownObjectRelease();

  return v29;
}

uint64_t sub_1005D8B74(void *a1, void *a2, void *aBlock, void *a4)
{
  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  v4[5] = _Block_copy(aBlock);
  id v8 = a1;
  id v9 = a2;
  id v10 = a4;
  return _swift_task_switch(sub_1005D8C0C, 0, 0);
}

uint64_t sub_1005D8C0C()
{
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v3 = v2;
  v0[6] = v2;
  double v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  void *v4 = v0;
  v4[1] = sub_1005D8CE4;
  uint64_t v6 = v0[2];
  uint64_t v5 = v0[3];
  return sub_100BDF8C0(v6, (uint64_t)&off_101513250, v5, v1, v3);
}

uint64_t sub_1005D8CE4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1005D8E68, 0, 0);
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v5 = *(void **)(v2 + 24);
    double v4 = *(void **)(v2 + 32);
    uint64_t v6 = *(void **)(v2 + 16);
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, void))(v3 + 16))(v3, 0);
    _Block_release(*(const void **)(v2 + 40));
    double v7 = *(uint64_t (**)(void))(v2 + 8);
    return v7();
  }
}

uint64_t sub_1005D8E68()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v2 = *(void **)(v0 + 32);
  double v4 = *(void **)(v0 + 16);
  swift_bridgeObjectRelease();

  uint64_t v5 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v5);

  _Block_release(*(const void **)(v0 + 40));
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

id CRLAnalyticsOSSignpostManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLPasteboardObjectItemProviderWriteAssistant()
{
  return self;
}

uint64_t sub_1005D8FC0()
{
  _Block_release(*(const void **)(v0 + 32));

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1005D9010()
{
  objc_super v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v5 = (void *)v0[4];
  double v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_100528488;
  double v7 = (uint64_t (*)(void *, void *, void *, void *))((char *)&dword_101674EE8 + dword_101674EE8);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_1005D90D8()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

id sub_1005D9118(void *a1, void *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  type metadata accessor for CRLItemProviderWriteAssistant();
  uint64_t v6 = (void *)swift_allocObject();
  double v7 = (objc_class *)type metadata accessor for CRLMemoryWriteChannel();
  id v8 = objc_allocWithZone(v7);
  uint64_t v9 = v2;
  id v10 = a1;
  id v11 = a2;
  v6[4] = [v8 init];
  v6[5] = [objc_allocWithZone(v7) init];
  v6[2] = v10;
  v6[3] = v11;
  *(void *)&v9[OBJC_IVAR____TtC8Freeform45CRLPasteboardObjectItemProviderWriteAssistant_writeAssistant] = v6;

  v13.receiver = v9;
  v13.super_class = ObjectType;
  return [super init];
}

uint64_t sub_1005D91F8()
{
  qword_10171A020 = 97;
  *(void *)algn_10171A028 = 0xE100000000000000;
  qword_10171A030 = swift_getKeyPath();
  unk_10171A038 = 98;
  qword_10171A040 = 0xE100000000000000;
  qword_10171A048 = swift_getKeyPath();
  qword_10171A050 = 99;
  qword_10171A058 = 0xE100000000000000;
  qword_10171A060 = swift_getKeyPath();
  unk_10171A068 = 100;
  qword_10171A070 = 0xE100000000000000;
  uint64_t result = swift_getKeyPath();
  qword_10171A078 = result;
  return result;
}

uint64_t sub_1005D9280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v35 = a4;
  uint64_t v36 = a3;
  uint64_t v38 = a2;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101689290);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v34 = (uint64_t)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  uint64_t v30 = *(void *)(v33 - 8);
  __chkstk_darwin(v33, v10);
  uint64_t v31 = (uint64_t)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101674610);
  __chkstk_darwin(v12 - 8, v13);
  double v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CRLWPStorageCRDTData(0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  double v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v21 = (int *)type metadata accessor for CRLWPShapeItemCRDTData(0);
  uint64_t v22 = a5 + v21[7];
  sub_1005C6DF0((uint64_t)v41);
  sub_10051B3EC((uint64_t)v41, (uint64_t)&v39, &qword_10168D670);
  sub_1005057FC(&qword_10168D670);
  sub_1005DDF5C();
  uint64_t v32 = v22;
  uint64_t v23 = a5;
  CRRegister.init(wrappedValue:)();
  *(void *)(a5 + v21[8]) = &_swiftEmptyDictionarySingleton;
  uint64_t v37 = a1;
  sub_1005DF4AC(a1, a5, type metadata accessor for CRLShapeItemCRDTData);
  sub_100522E9C(v38, (uint64_t)v15, (uint64_t *)&unk_101674610);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1005D3BF8();
    CRAttributedString.init()();
    CRAttributedString.init(_:)();
    *(void *)&v20[*(int *)(v16 + 24)] = &_swiftEmptyDictionarySingleton;
    sub_100522F00((uint64_t)v15, (uint64_t *)&unk_101674610);
  }
  else
  {
    sub_1005DF5C8((uint64_t)v15, (uint64_t)v20, type metadata accessor for CRLWPStorageCRDTData);
  }
  sub_1005DF5C8((uint64_t)v20, a5 + v21[5], type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v24 = v36;
  uint64_t v25 = v34;
  sub_100522E9C(v36, v34, (uint64_t *)&unk_101689290);
  uint64_t v26 = v33;
  int v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v25, 1, v33);
  uint64_t v28 = v31;
  if (v27 == 1)
  {
    LODWORD(v39) = 0;
    CRRegister.init(wrappedValue:)();
    uint64_t v39 = 0;
    char v40 = 0;
    sub_1005057FC((uint64_t *)&unk_1016892A0);
    sub_100523288((unint64_t *)&qword_101675388, (uint64_t *)&unk_1016892A0);
    CRRegister.init(wrappedValue:)();
    LOBYTE(v39) = 0;
    CRRegister.init(wrappedValue:)();
    *(void *)(v28 + *(int *)(v26 + 28)) = &_swiftEmptyDictionarySingleton;
    sub_100522F00(v25, (uint64_t *)&unk_101689290);
  }
  else
  {
    sub_1005DF5C8(v25, v31, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
  }
  sub_1005DF5C8(v28, v23 + v21[6], type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
  sub_10051B3EC(v35, (uint64_t)&v39, &qword_10168D670);
  sub_1005057FC(&qword_1016879C0);
  CRRegister.wrappedValue.setter();
  sub_100522F00(v24, (uint64_t *)&unk_101689290);
  sub_100522F00(v38, (uint64_t *)&unk_101674610);
  return sub_1005DF514(v37, type metadata accessor for CRLShapeItemCRDTData);
}

uint64_t sub_1005D978C@<X0>(uint64_t a1@<X8>)
{
  return sub_1005DF4AC(v1, a1, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
}

uint64_t sub_1005D97C0(uint64_t a1)
{
  return sub_1005DF630(a1, v1);
}

void (*sub_1005D97C8(uint64_t *a1))(uint64_t *a1, char a2)
{
  *a1 = v1;
  size_t v3 = *(void *)(*(void *)(type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0) - 8) + 64);
  a1[1] = (uint64_t)malloc(v3);
  double v4 = malloc(v3);
  a1[2] = (uint64_t)v4;
  sub_1005DF4AC(v1, (uint64_t)v4, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  return sub_1005D9868;
}

void sub_1005D9868(uint64_t *a1, char a2)
{
  objc_super v2 = (void *)a1[1];
  size_t v3 = (void *)a1[2];
  uint64_t v4 = *a1;
  if (a2)
  {
    sub_1005DF4AC(a1[2], (uint64_t)v2, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
    sub_1005DF630((uint64_t)v2, v4);
    sub_1005DF514((uint64_t)v3, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  }
  else
  {
    sub_1005DF630(a1[2], v4);
  }
  free(v3);

  free(v2);
}

uint64_t sub_1005D9900(uint64_t a1)
{
  uint64_t v2 = sub_1005DE0B4(&qword_1016754C0, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);

  return CRType.context.getter(a1, v2);
}

uint64_t sub_1005D996C()
{
  sub_1005DE0B4(&qword_101689360, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);

  return CRStruct_4.actionUndoingDifference(from:)();
}

uint64_t sub_1005D99F0()
{
  sub_1005DE0B4(&qword_101689360, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);

  return CRStruct_4.apply(_:)();
}

uint64_t sub_1005D9A6C()
{
  sub_1005DE0B4(&qword_101689360, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);

  return CRStruct_4.hasDelta(from:)();
}

uint64_t sub_1005D9AE8()
{
  sub_1005DE0B4(&qword_101689360, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);

  return CRStruct_4.delta(_:from:)();
}

uint64_t sub_1005D9B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005DE0B4(&qword_101689360, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);

  return CRStruct_4.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_1005D9BF8()
{
  sub_1005DE0B4(&qword_101689360, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);

  return CRStruct_4.merge(delta:)();
}

uint64_t sub_1005D9C78@<X0>(void *a1@<X8>)
{
  if (qword_10166ED10 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_10171A028;
  uint64_t v4 = qword_10171A030;
  uint64_t v3 = unk_10171A038;
  uint64_t v5 = qword_10171A040;
  uint64_t v6 = qword_10171A048;
  uint64_t v7 = qword_10171A050;
  uint64_t v8 = qword_10171A058;
  uint64_t v10 = qword_10171A060;
  uint64_t v9 = unk_10171A068;
  uint64_t v11 = qword_10171A070;
  uint64_t v12 = qword_10171A078;
  *a1 = qword_10171A020;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  a1[8] = v10;
  a1[9] = v9;
  a1[10] = v11;
  a1[11] = v12;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();

  return swift_retain();
}

uint64_t sub_1005D9D60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005DE0B4(&qword_101689360, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);

  return CRStruct_4.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1005D9DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005DE0B4(&qword_101689360, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);

  return CRStruct_4.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1005D9E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005DE0B4(&qword_101689360, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);

  return CRStruct_4.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_1005D9EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005DE0B4(&qword_101689360, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);

  return CRStruct_4.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_1005D9F78()
{
  sub_1005DE0B4(&qword_101689360, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);

  return CRStruct_4.needToFinalizeTimestamps()();
}

uint64_t sub_1005D9FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005DE0B4(&qword_101689360, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);

  return CRStruct_4.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_1005DA060()
{
  sub_1005DE0B4(&qword_101689360, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);

  return CRStruct_4.merge(_:)();
}

uint64_t sub_1005DA0DC()
{
  return CRDT.serializedData(_:version:)();
}

uint64_t sub_1005DA15C()
{
  return CRDT.init(serializedData:)();
}

uint64_t sub_1005DA1EC(uint64_t a1)
{
  uint64_t v2 = sub_1005DE0B4(&qword_101689360, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);

  return static CRStruct_4.fieldKeys.getter(a1, v2);
}

uint64_t sub_1005DA258@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101689290);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674610);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v10 = type metadata accessor for CRLShapeItemCRDTData(0);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10, v12);
  uint64_t v14 = &v19[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  memset(v20, 0, 112);
  sub_10051A3F4((uint64_t)v24);
  sub_10051B3EC((uint64_t)v24, (uint64_t)v21, (uint64_t *)&unk_101685110);
  memset(v22, 0, sizeof(v22));
  uint64_t v23 = 0;
  sub_100E21C10((uint64_t)v20, (uint64_t)v21, (uint64_t)v22, (uint64_t)v22, (uint64_t)v14, 0.0);
  *(void *)&v14[*(int *)(v11 + 28)] = _swiftEmptyDictionarySingleton;
  uint64_t v15 = type metadata accessor for CRLWPStorageCRDTData(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 1, 1, v15);
  uint64_t v16 = type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 1, 1, v16);
  sub_1005C6DF0((uint64_t)v25);
  sub_10051B3EC((uint64_t)v25, (uint64_t)v19, &qword_10168D670);
  return sub_1005D9280((uint64_t)v14, (uint64_t)v9, (uint64_t)v5, (uint64_t)v19, a1);
}

uint64_t sub_1005DA498()
{
  return CRStruct_4.init(from:)();
}

uint64_t sub_1005DA518()
{
  return CRStruct_4.encode(to:)();
}

uint64_t sub_1005DA590(uint64_t a1)
{
  uint64_t v2 = sub_1005DE0B4(&qword_101689360, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);

  return CRStruct_4.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_1005DA60C()
{
  qword_10171A080 = 97;
  *(void *)algn_10171A088 = 0xE100000000000000;
  qword_10171A090 = swift_getKeyPath();
  unk_10171A098 = 98;
  qword_10171A0A0 = 0xE100000000000000;
  qword_10171A0A8 = swift_getKeyPath();
  qword_10171A0B0 = 99;
  qword_10171A0B8 = 0xE100000000000000;
  uint64_t result = swift_getKeyPath();
  qword_10171A0C0 = result;
  return result;
}

uint64_t sub_1005DA680@<X0>(void *a1@<X8>)
{
  if (qword_10166ED18 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_10171A088;
  uint64_t v4 = qword_10171A090;
  uint64_t v3 = unk_10171A098;
  uint64_t v5 = qword_10171A0A0;
  uint64_t v6 = qword_10171A0A8;
  uint64_t v7 = qword_10171A0B0;
  uint64_t v8 = qword_10171A0B8;
  uint64_t v9 = qword_10171A0C0;
  *a1 = qword_10171A080;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  a1[8] = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();

  return swift_retain();
}

uint64_t sub_1005DA748(uint64_t a1)
{
  uint64_t v2 = sub_1005DE0B4(&qword_101675538, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);

  return static CRStruct_3.fieldKeys.getter(a1, v2);
}

uint64_t sub_1005DA7B4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1005DA7C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_1005DA7F8())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_1005DA81C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  CRRegister.init(wrappedValue:)();
  sub_1005057FC((uint64_t *)&unk_1016892A0);
  sub_100523288((unint64_t *)&qword_101675388, (uint64_t *)&unk_1016892A0);
  CRRegister.init(wrappedValue:)();
  uint64_t result = CRRegister.init(wrappedValue:)();
  *(void *)(a2 + *(int *)(a1 + 28)) = _swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_1005DA904(uint64_t a1)
{
  uint64_t v2 = sub_1005DE0B4((unint64_t *)&unk_101689300, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);

  return CRType.context.getter(a1, v2);
}

uint64_t sub_1005DA970()
{
  sub_1005DE0B4(&qword_101675538, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);

  return CRStruct_3.actionUndoingDifference(from:)();
}

uint64_t sub_1005DA9F4()
{
  sub_1005DE0B4(&qword_101675538, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);

  return CRStruct_3.apply(_:)();
}

uint64_t sub_1005DAA70()
{
  sub_1005DE0B4(&qword_101675538, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);

  return CRStruct_3.hasDelta(from:)();
}

uint64_t sub_1005DAAEC()
{
  sub_1005DE0B4(&qword_101675538, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);

  return CRStruct_3.delta(_:from:)();
}

uint64_t sub_1005DAB80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005DE0B4(&qword_101675538, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);

  return CRStruct_3.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_1005DABFC()
{
  sub_1005DE0B4(&qword_101675538, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);

  return CRStruct_3.merge(delta:)();
}

uint64_t sub_1005DAC78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005DE0B4(&qword_101675538, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);

  return CRStruct_3.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1005DACFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005DE0B4(&qword_101675538, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);

  return CRStruct_3.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1005DAD80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005DE0B4(&qword_101675538, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);

  return CRStruct_3.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_1005DAE14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005DE0B4(&qword_101675538, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);

  return CRStruct_3.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_1005DAE90()
{
  sub_1005DE0B4(&qword_101675538, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);

  return CRStruct_3.needToFinalizeTimestamps()();
}

uint64_t sub_1005DAEFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005DE0B4(&qword_101675538, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);

  return CRStruct_3.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_1005DAF78()
{
  sub_1005DE0B4(&qword_101675538, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);

  return CRStruct_3.merge(_:)();
}

uint64_t sub_1005DAFF4()
{
  return CRDT.serializedData(_:version:)();
}

uint64_t sub_1005DB074()
{
  return CRDT.init(serializedData:)();
}

uint64_t sub_1005DB104()
{
  return CRStruct_3.init(from:)();
}

uint64_t sub_1005DB184()
{
  return CRStruct_3.encode(to:)();
}

uint64_t sub_1005DB1FC(uint64_t a1)
{
  uint64_t v2 = sub_1005DE0B4(&qword_101675538, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);

  return CRStruct_3.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_1005DB278()
{
  return 1;
}

void *sub_1005DB284(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v12 = sub_1005057FC(&qword_1016892B0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v30 - v18;
  uint64_t v20 = (uint64_t)v2 + *(void *)(*v2 + 632);
  swift_beginAccess();
  if (a1)
  {
    sub_100522E9C(v20, (uint64_t)v15, &qword_1016892B0);
    sub_100523288(&qword_101675540, &qword_1016892B0);
    CRType.copy(renamingReferences:)();
    uint64_t v21 = sub_100522F00((uint64_t)v15, &qword_1016892B0);
    (*(void (**)(uint64_t))(*v1 + 760))(v21);
    sub_1005DE0B4(&qword_1016754C0, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);
    CRType.copy(renamingReferences:)();
    sub_1005DF514((uint64_t)v7, type metadata accessor for CRLWPShapeItemCRDTData);
  }
  else
  {
    uint64_t v22 = sub_100522E9C(v20, (uint64_t)v19, &qword_1016892B0);
    (*(void (**)(uint64_t))(*v1 + 760))(v22);
  }
  uint64_t v23 = v1[4];
  uint64_t v24 = v2[5];
  int v27 = v2 + 2;
  uint64_t v25 = v2[2];
  uint64_t v26 = v27[1];
  type metadata accessor for CRLWPShapeItemData(0);
  uint64_t v28 = swift_allocObject();
  sub_1005DF5C8((uint64_t)v11, v28 + *(void *)(*(void *)v28 + 752), type metadata accessor for CRLWPShapeItemCRDTData);
  *(void *)(v28 + qword_10169E700) = 0;
  sub_10051B3EC((uint64_t)v19, v28 + *(void *)(*(void *)v28 + 632), &qword_1016892B0);
  return sub_10068B398(v26, v23, v24, v25);
}

uint64_t sub_1005DB5E0()
{
  uint64_t v1 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  uint64_t v3 = __chkstk_darwin(v1, v2);
  uint64_t v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t))(*(void *)v0 + 760))(v3);
  type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  sub_1005057FC(&qword_101675308);
  CRRegister.wrappedValue.getter();
  uint64_t v6 = v9[0];
  int v7 = v9[8];
  sub_1005DF514((uint64_t)v5, type metadata accessor for CRLWPShapeItemCRDTData);
  if (v7) {
    return 0;
  }
  else {
    return v6;
  }
}

uint64_t sub_1005DB6E8()
{
  sub_100522F00(v0 + *(void *)(*(void *)v0 + 632), &qword_1016892B0);

  sub_1005DF514(v0 + *(void *)(*(void *)v0 + 752), type metadata accessor for CRLWPShapeItemCRDTData);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLWPShapeItemData(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101674F20);
}

uint64_t sub_1005DB7C0()
{
  return swift_initClassMetadata2();
}

uint64_t *sub_1005DB7F8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005057FC(&qword_101689320);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1005057FC(&qword_101675308);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1005057FC((uint64_t *)&unk_101689310);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1005DB96C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1005057FC(&qword_101675308);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101689310);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005DBA74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101675308);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101689310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1005DBB98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101675308);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101689310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005DBCC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101675308);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101689310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1005DBDE8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101675308);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101689310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005DBF10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005DBF24);
}

uint64_t sub_1005DBF24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101689320);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1005057FC(&qword_101675308);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101689310);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[7]);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_1005DC090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005DC0A4);
}

uint64_t sub_1005DC0A4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1005057FC(&qword_101689320);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_1005057FC(&qword_101675308);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t result = sub_1005057FC((uint64_t *)&unk_101689310);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[7]) = (a2 - 1);
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[6];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_101675368);
}

void sub_1005DC22C()
{
  sub_1005DC400(319, (unint64_t *)&qword_101675378);
  if (v0 <= 0x3F)
  {
    sub_1005DC36C();
    if (v1 <= 0x3F)
    {
      sub_1005DC400(319, (unint64_t *)&qword_101675390);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1005DC36C()
{
  if (!qword_101675380)
  {
    sub_100522D34((uint64_t *)&unk_1016892A0);
    sub_100523288((unint64_t *)&qword_101675388, (uint64_t *)&unk_1016892A0);
    unint64_t v0 = type metadata accessor for CRRegister();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101675380);
    }
  }
}

void sub_1005DC400(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = type metadata accessor for CRRegister();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

char *sub_1005DC44C(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v45 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v45 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
    (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1005057FC(&qword_101673478);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = v8[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    v17(v14, v15, v16);
    v17(&a1[v8[7]], (char *)a2 + v8[7], v16);
    uint64_t v18 = v8[8];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_1005057FC(&qword_101689320);
    id v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
    v47(v19, v20, v21);
    *(void *)&a1[v8[9]] = *(uint64_t *)((char *)a2 + v8[9]);
    uint64_t v22 = type metadata accessor for CRLShapeItemCRDTData(0);
    *(void *)&a1[*(int *)(v22 + 20)] = *(uint64_t *)((char *)a2 + *(int *)(v22 + 20));
    uint64_t v23 = a3[5];
    uint64_t v24 = &a1[v23];
    uint64_t v25 = (char *)a2 + v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1005057FC((uint64_t *)&unk_10167BC20);
    int v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
    v27(v24, v25, v26);
    uint64_t v28 = type metadata accessor for CRLWPStorageCRDTData(0);
    v27(&v24[*(int *)(v28 + 20)], &v25[*(int *)(v28 + 20)], v26);
    *(void *)&v24[*(int *)(v28 + 24)] = *(void *)&v25[*(int *)(v28 + 24)];
    uint64_t v29 = a3[6];
    uint64_t v30 = &a1[v29];
    uint64_t v31 = (char *)a2 + v29;
    swift_bridgeObjectRetain();
    v47(v30, v31, v21);
    uint64_t v32 = (int *)type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
    uint64_t v33 = v32[5];
    uint64_t v34 = &v30[v33];
    uint64_t v35 = &v31[v33];
    uint64_t v36 = sub_1005057FC(&qword_101675308);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
    uint64_t v37 = v32[6];
    uint64_t v38 = &v30[v37];
    uint64_t v39 = &v31[v37];
    uint64_t v40 = sub_1005057FC((uint64_t *)&unk_101689310);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
    *(void *)&v30[v32[7]] = *(void *)&v31[v32[7]];
    uint64_t v41 = a3[7];
    v42 = &a1[v41];
    id v43 = (char *)a2 + v41;
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1005057FC(&qword_1016879C0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
    *(void *)&a1[a3[8]] = *(uint64_t *)((char *)a2 + a3[8]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1005DC838(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v6 = a1 + v5[5];
  uint64_t v7 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + v5[6];
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(a1 + v5[7], v9);
  uint64_t v11 = a1 + v5[8];
  uint64_t v12 = sub_1005057FC(&qword_101689320);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v13(v11, v12);
  swift_bridgeObjectRelease();
  type metadata accessor for CRLShapeItemCRDTData(0);
  swift_bridgeObjectRelease();
  uint64_t v14 = a1 + a2[5];
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
  v16(v14, v15);
  uint64_t v17 = type metadata accessor for CRLWPStorageCRDTData(0);
  v16(v14 + *(int *)(v17 + 20), v15);
  swift_bridgeObjectRelease();
  uint64_t v18 = a1 + a2[6];
  v13(v18, v12);
  uint64_t v19 = type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  uint64_t v20 = v18 + *(int *)(v19 + 20);
  uint64_t v21 = sub_1005057FC(&qword_101675308);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  uint64_t v22 = v18 + *(int *)(v19 + 24);
  uint64_t v23 = sub_1005057FC((uint64_t *)&unk_101689310);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  swift_bridgeObjectRelease();
  uint64_t v24 = a1 + a2[7];
  uint64_t v25 = sub_1005057FC(&qword_1016879C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005DCB60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1005057FC(&qword_101689320);
  id v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
  v46(v18, v19, v20);
  *(void *)(a1 + v7[9]) = *(void *)(a2 + v7[9]);
  uint64_t v21 = type metadata accessor for CRLShapeItemCRDTData(0);
  *(void *)(a1 + *(int *)(v21 + 20)) = *(void *)(a2 + *(int *)(v21 + 20));
  uint64_t v22 = a3[5];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
  v26(v23, v24, v25);
  uint64_t v27 = type metadata accessor for CRLWPStorageCRDTData(0);
  v26(v23 + *(int *)(v27 + 20), v24 + *(int *)(v27 + 20), v25);
  *(void *)(v23 + *(int *)(v27 + 24)) = *(void *)(v24 + *(int *)(v27 + 24));
  uint64_t v28 = a3[6];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  swift_bridgeObjectRetain();
  v46(v29, v30, v20);
  uint64_t v31 = (int *)type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  uint64_t v32 = v31[5];
  uint64_t v33 = v29 + v32;
  uint64_t v34 = v30 + v32;
  uint64_t v35 = sub_1005057FC(&qword_101675308);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  uint64_t v36 = v31[6];
  uint64_t v37 = v29 + v36;
  uint64_t v38 = v30 + v36;
  uint64_t v39 = sub_1005057FC((uint64_t *)&unk_101689310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
  *(void *)(v29 + v31[7]) = *(void *)(v30 + v31[7]);
  uint64_t v40 = a3[7];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  swift_bridgeObjectRetain();
  uint64_t v43 = sub_1005057FC(&qword_1016879C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1005DCF04(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1005057FC(&qword_101689320);
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24);
  v45(v18, v19, v20);
  *(void *)(a1 + v7[9]) = *(void *)(a2 + v7[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = type metadata accessor for CRLShapeItemCRDTData(0);
  *(void *)(a1 + *(int *)(v21 + 20)) = *(void *)(a2 + *(int *)(v21 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[5];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 24);
  v26(v23, v24, v25);
  uint64_t v27 = type metadata accessor for CRLWPStorageCRDTData(0);
  v26(v23 + *(int *)(v27 + 20), v24 + *(int *)(v27 + 20), v25);
  *(void *)(v23 + *(int *)(v27 + 24)) = *(void *)(v24 + *(int *)(v27 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[6];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  v45(a1 + v28, a2 + v28, v20);
  uint64_t v31 = (int *)type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  uint64_t v32 = v31[5];
  uint64_t v33 = v29 + v32;
  uint64_t v34 = v30 + v32;
  uint64_t v35 = sub_1005057FC(&qword_101675308);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 24))(v33, v34, v35);
  uint64_t v36 = v31[6];
  uint64_t v37 = v29 + v36;
  uint64_t v38 = v30 + v36;
  uint64_t v39 = sub_1005057FC((uint64_t *)&unk_101689310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
  *(void *)(v29 + v31[7]) = *(void *)(v30 + v31[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[7];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  uint64_t v43 = sub_1005057FC(&qword_1016879C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 24))(v41, v42, v43);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005DD2D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1005057FC(&qword_101689320);
  id v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32);
  v46(v18, v19, v20);
  *(void *)(a1 + v7[9]) = *(void *)(a2 + v7[9]);
  uint64_t v21 = type metadata accessor for CRLShapeItemCRDTData(0);
  *(void *)(a1 + *(int *)(v21 + 20)) = *(void *)(a2 + *(int *)(v21 + 20));
  uint64_t v22 = a3[5];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32);
  v26(v23, v24, v25);
  uint64_t v27 = type metadata accessor for CRLWPStorageCRDTData(0);
  v26(v23 + *(int *)(v27 + 20), v24 + *(int *)(v27 + 20), v25);
  *(void *)(v23 + *(int *)(v27 + 24)) = *(void *)(v24 + *(int *)(v27 + 24));
  uint64_t v28 = a3[6];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  v46(a1 + v28, a2 + v28, v20);
  uint64_t v31 = (int *)type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  uint64_t v32 = v31[5];
  uint64_t v33 = v29 + v32;
  uint64_t v34 = v30 + v32;
  uint64_t v35 = sub_1005057FC(&qword_101675308);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
  uint64_t v36 = v31[6];
  uint64_t v37 = v29 + v36;
  uint64_t v38 = v30 + v36;
  uint64_t v39 = sub_1005057FC((uint64_t *)&unk_101689310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
  *(void *)(v29 + v31[7]) = *(void *)(v30 + v31[7]);
  uint64_t v40 = a3[7];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  uint64_t v43 = sub_1005057FC(&qword_1016879C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1005DD65C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1005057FC(&qword_101689320);
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40);
  v45(v18, v19, v20);
  *(void *)(a1 + v7[9]) = *(void *)(a2 + v7[9]);
  swift_bridgeObjectRelease();
  uint64_t v21 = type metadata accessor for CRLShapeItemCRDTData(0);
  *(void *)(a1 + *(int *)(v21 + 20)) = *(void *)(a2 + *(int *)(v21 + 20));
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[5];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 40);
  v26(v23, v24, v25);
  uint64_t v27 = type metadata accessor for CRLWPStorageCRDTData(0);
  v26(v23 + *(int *)(v27 + 20), v24 + *(int *)(v27 + 20), v25);
  *(void *)(v23 + *(int *)(v27 + 24)) = *(void *)(v24 + *(int *)(v27 + 24));
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[6];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  v45(a1 + v28, a2 + v28, v20);
  uint64_t v31 = (int *)type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  uint64_t v32 = v31[5];
  uint64_t v33 = v29 + v32;
  uint64_t v34 = v30 + v32;
  uint64_t v35 = sub_1005057FC(&qword_101675308);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 40))(v33, v34, v35);
  uint64_t v36 = v31[6];
  uint64_t v37 = v29 + v36;
  uint64_t v38 = v30 + v36;
  uint64_t v39 = sub_1005057FC((uint64_t *)&unk_101689310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 40))(v37, v38, v39);
  *(void *)(v29 + v31[7]) = *(void *)(v30 + v31[7]);
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[7];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  uint64_t v43 = sub_1005057FC(&qword_1016879C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 40))(v41, v42, v43);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005DDA04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005DDA18);
}

uint64_t sub_1005DDA18(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CRLShapeItemCRDTData(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for CRLWPStorageCRDTData(0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_1005057FC(&qword_1016879C0);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  unint64_t v17 = *(void *)(a1 + a3[8]);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

uint64_t sub_1005DDBC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005DDBDC);
}

uint64_t sub_1005DDBDC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for CRLShapeItemCRDTData(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = type metadata accessor for CRLWPStorageCRDTData(0);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t v16 = type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[6];
      }
      else
      {
        uint64_t result = sub_1005057FC(&qword_1016879C0);
        if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
        {
          *(void *)(a1 + a4[8]) = (a2 - 1);
          return result;
        }
        uint64_t v10 = result;
        uint64_t v14 = *(void *)(result - 8);
        uint64_t v15 = a4[7];
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for CRLWPShapeItemCRDTData(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_101675420);
}

void sub_1005DDDA8()
{
  type metadata accessor for CRLShapeItemCRDTData(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for CRLWPStorageCRDTData(319);
    if (v1 <= 0x3F)
    {
      type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(319);
      if (v2 <= 0x3F)
      {
        sub_1005DDEF4();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_1005DDEF4()
{
  if (!qword_101675430)
  {
    sub_100522D34(&qword_10168D670);
    sub_1005DDF5C();
    unint64_t v0 = type metadata accessor for CRRegister();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101675430);
    }
  }
}

unint64_t sub_1005DDF5C()
{
  unint64_t result = qword_101675438;
  if (!qword_101675438)
  {
    sub_100522D34(&qword_10168D670);
    sub_1005DDFD0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101675438);
  }
  return result;
}

unint64_t sub_1005DDFD0()
{
  unint64_t result = qword_101675440;
  if (!qword_101675440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101675440);
  }
  return result;
}

uint64_t sub_1005DE024()
{
  return sub_1005DE0B4(&qword_101675480, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);
}

uint64_t sub_1005DE06C()
{
  return sub_1005DE0B4(&qword_101675488, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);
}

uint64_t sub_1005DE0B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005DE0FC()
{
  return sub_1005DE0B4(&qword_101675490, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);
}

uint64_t sub_1005DE144()
{
  return sub_1005DE0B4(&qword_101675498, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);
}

uint64_t sub_1005DE18C()
{
  return sub_1005DE0B4(&qword_1016754A0, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);
}

uint64_t sub_1005DE1D4()
{
  return sub_1005DE0B4(&qword_1016754A8, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
}

uint64_t sub_1005DE21C()
{
  return sub_100523288(&qword_1016754B0, &qword_1016879C0);
}

uint64_t sub_1005DE258()
{
  return sub_1005DE0B4(&qword_1016754B8, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);
}

uint64_t sub_1005DE2A0()
{
  return sub_1005DE0B4(&qword_1016754C0, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);
}

uint64_t sub_1005DE2E8()
{
  return sub_100523288(&qword_1016754C8, &qword_1016754D0);
}

uint64_t sub_1005DE324()
{
  return sub_1005DE0B4(&qword_1016754D8, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);
}

uint64_t sub_1005DE36C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1005DE0B4(&qword_101675480, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t result = sub_1005DE0B4(&qword_1016754E0, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1005DE3F0()
{
  return sub_1005DE0B4(&qword_1016754E8, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
}

uint64_t sub_1005DE438()
{
  return sub_1005DE0B4(&qword_1016754F0, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
}

uint64_t sub_1005DE480()
{
  return sub_1005DE0B4((unint64_t *)&unk_101689300, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
}

uint64_t sub_1005DE4C8()
{
  return sub_100523288(&qword_1016754F8, &qword_101675500);
}

uint64_t sub_1005DE504()
{
  return sub_1005DE0B4(&qword_101675508, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
}

uint64_t sub_1005DE54C()
{
  return sub_100523288(&qword_101675510, &qword_101689320);
}

uint64_t sub_1005DE588()
{
  return sub_100523288(&qword_101675518, &qword_101675308);
}

uint64_t sub_1005DE5C4()
{
  return sub_100523288(&qword_101675520, (uint64_t *)&unk_101689310);
}

uint64_t sub_1005DE600()
{
  return sub_1005DE0B4(&qword_101675528, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
}

uint64_t sub_1005DE648(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v26 - v10;
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v26 - v14;
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v26 - v18;
  sub_1005057FC(&qword_101689320);
  CRRegister.wrappedValue.getter();
  float v20 = *(float *)&v27;
  CRRegister.wrappedValue.getter();
  float v21 = *(float *)&v27;
  sub_1005DF4AC(a1, (uint64_t)v19, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
  sub_1005DF4AC(a2, (uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
  if (v20 != v21)
  {
    sub_1005DF514((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
    sub_1005DF514((uint64_t)v19, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
    sub_1005DF4AC(a1, (uint64_t)v11, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
    sub_1005DF4AC(a2, (uint64_t)v7, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
    goto LABEL_5;
  }
  sub_1005057FC(&qword_101675308);
  CRRegister.wrappedValue.getter();
  CRRegister.wrappedValue.getter();
  sub_1005DF574();
  char v22 = static CRExtensible.== infix(_:_:)();
  sub_1005DF514((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
  sub_1005DF514((uint64_t)v19, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
  sub_1005DF4AC(a1, (uint64_t)v11, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
  sub_1005DF4AC(a2, (uint64_t)v7, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
  if ((v22 & 1) == 0)
  {
LABEL_5:
    char v24 = 0;
    goto LABEL_6;
  }
  sub_1005057FC((uint64_t *)&unk_101689310);
  CRRegister.wrappedValue.getter();
  char v23 = v27;
  CRRegister.wrappedValue.getter();
  char v24 = v23 ^ v27 ^ 1;
LABEL_6:
  sub_1005DF514((uint64_t)v7, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
  sub_1005DF514((uint64_t)v11, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
  return v24 & 1;
}

uint64_t sub_1005DE954(uint64_t a1, uint64_t a2)
{
  uint64_t v46 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v46, v4);
  uint64_t v47 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v49 = (uint64_t)&v43 - v8;
  uint64_t v48 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v48, v9);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v50 = (uint64_t)&v43 - v14;
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v43 - v17;
  __chkstk_darwin(v19, v20);
  char v22 = (char *)&v43 - v21;
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v43 - v25;
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v43 - v29;
  BOOL v31 = sub_100E2B6E0(a1, a2);
  sub_1005DF4AC(a1, (uint64_t)v30, type metadata accessor for CRLWPShapeItemCRDTData);
  sub_1005DF4AC(a2, (uint64_t)v26, type metadata accessor for CRLWPShapeItemCRDTData);
  if (!v31) {
    goto LABEL_9;
  }
  uint64_t v43 = v22;
  uint64_t v44 = a2;
  uint64_t v45 = v11;
  uint64_t v32 = *(int *)(v48 + 20);
  uint64_t v33 = (uint64_t)&v30[v32];
  uint64_t v34 = (uint64_t)&v26[v32];
  char v35 = sub_100910D3C((uint64_t)&v30[v32]);
  sub_1005DF4AC(v33, v49, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v36 = v47;
  sub_1005DF4AC(v34, v47, type metadata accessor for CRLWPStorageCRDTData);
  if ((v35 & 1) == 0)
  {
    sub_1005DF514(v49, type metadata accessor for CRLWPStorageCRDTData);
    sub_1005DF514(v36, type metadata accessor for CRLWPStorageCRDTData);
    a2 = v44;
    uint64_t v11 = v45;
    char v22 = v43;
LABEL_9:
    sub_1005DF514((uint64_t)v26, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1005DF514((uint64_t)v30, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1005DF4AC(a1, (uint64_t)v22, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1005DF4AC(a2, (uint64_t)v18, type metadata accessor for CRLWPShapeItemCRDTData);
    uint64_t v39 = (uint64_t)v22;
    goto LABEL_10;
  }
  uint64_t v37 = v49;
  char v38 = sub_100910D3C(v49 + *(int *)(v46 + 20));
  sub_1005DF514(v37, type metadata accessor for CRLWPStorageCRDTData);
  sub_1005DF514(v36, type metadata accessor for CRLWPStorageCRDTData);
  sub_1005DF514((uint64_t)v26, type metadata accessor for CRLWPShapeItemCRDTData);
  sub_1005DF514((uint64_t)v30, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v39 = (uint64_t)v43;
  sub_1005DF4AC(a1, (uint64_t)v43, type metadata accessor for CRLWPShapeItemCRDTData);
  a2 = v44;
  sub_1005DF4AC(v44, (uint64_t)v18, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v11 = v45;
  if ((v38 & 1) == 0)
  {
LABEL_10:
    sub_1005DF514((uint64_t)v18, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1005DF514(v39, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1005DF4AC(a1, v50, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1005DF4AC(a2, (uint64_t)v11, type metadata accessor for CRLWPShapeItemCRDTData);
    goto LABEL_11;
  }
  char v40 = sub_1005DE648(v39 + *(int *)(v48 + 24), (uint64_t)&v18[*(int *)(v48 + 24)]);
  sub_1005DF514((uint64_t)v18, type metadata accessor for CRLWPShapeItemCRDTData);
  sub_1005DF514(v39, type metadata accessor for CRLWPShapeItemCRDTData);
  sub_1005DF4AC(a1, v50, type metadata accessor for CRLWPShapeItemCRDTData);
  sub_1005DF4AC(a2, (uint64_t)v11, type metadata accessor for CRLWPShapeItemCRDTData);
  if ((v40 & 1) == 0)
  {
LABEL_11:
    sub_1005DF514((uint64_t)v11, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1005DF514(v50, type metadata accessor for CRLWPShapeItemCRDTData);
LABEL_12:
    char v41 = 0;
    return v41 & 1;
  }
  sub_1005057FC(&qword_1016879C0);
  CRRegister.wrappedValue.getter();
  sub_10051B3EC((uint64_t)v58, (uint64_t)v59, &qword_10168D670);
  CRRegister.wrappedValue.getter();
  sub_10051B3EC((uint64_t)v58, (uint64_t)v60, &qword_10168D670);
  sub_10051B3EC((uint64_t)v59, (uint64_t)v58, &qword_10168D670);
  sub_10051B3EC((uint64_t)v60, (uint64_t)&v58[248], &qword_10168D670);
  sub_10051B3EC((uint64_t)v59, (uint64_t)v61, &qword_10168D670);
  if (sub_1005DF0EC((uint64_t)v61) != 1)
  {
    sub_10051B3EC((uint64_t)v60, (uint64_t)v56, &qword_10168D670);
    if (sub_1005DF0EC((uint64_t)v56) != 1)
    {
      sub_10051B3EC((uint64_t)v59, (uint64_t)v51, &qword_10168D670);
      v62[12] = v51[12];
      v62[13] = v51[13];
      v62[14] = v51[14];
      uint64_t v63 = v52;
      v62[8] = v51[8];
      v62[9] = v51[9];
      v62[10] = v51[10];
      v62[11] = v51[11];
      v62[4] = v51[4];
      v62[5] = v51[5];
      v62[6] = v51[6];
      v62[7] = v51[7];
      v62[0] = v51[0];
      v62[1] = v51[1];
      v62[2] = v51[2];
      v62[3] = v51[3];
      sub_10051B3EC((uint64_t)v60, (uint64_t)v53, &qword_10168D670);
      v57[12] = v53[12];
      v57[13] = v53[13];
      v57[14] = v53[14];
      *(void *)&v57[15] = v54;
      v57[8] = v53[8];
      v57[9] = v53[9];
      v57[10] = v53[10];
      v57[11] = v53[11];
      v57[4] = v53[4];
      v57[5] = v53[5];
      v57[6] = v53[6];
      v57[7] = v53[7];
      v57[0] = v53[0];
      v57[1] = v53[1];
      v57[2] = v53[2];
      v57[3] = v53[3];
      sub_1005DF3EC((uint64_t)v51);
      char v41 = sub_1008ECDE4(v62, v57);
      sub_1005DF370((uint64_t)v60);
      sub_1005DF370((uint64_t)v59);
      sub_1005DF514((uint64_t)v11, type metadata accessor for CRLWPShapeItemCRDTData);
      sub_1005DF514(v50, type metadata accessor for CRLWPShapeItemCRDTData);
      sub_10051B3EC((uint64_t)v58, (uint64_t)v55, &qword_10168D670);
      sub_1005DF370((uint64_t)v55);
      return v41 & 1;
    }
    sub_10051B3EC((uint64_t)v59, (uint64_t)v57, &qword_10168D670);
    sub_1005DF3EC((uint64_t)v57);
    sub_1005DF514((uint64_t)v11, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1005DF514(v50, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1005DF370((uint64_t)v59);
    goto LABEL_16;
  }
  sub_1005DF514((uint64_t)v11, type metadata accessor for CRLWPShapeItemCRDTData);
  sub_1005DF514(v50, type metadata accessor for CRLWPShapeItemCRDTData);
  sub_10051B3EC((uint64_t)&v58[248], (uint64_t)v62, &qword_10168D670);
  sub_10051B3EC((uint64_t)v62, (uint64_t)v57, &qword_10168D670);
  if (sub_1005DF0EC((uint64_t)v57) != 1)
  {
LABEL_16:
    memcpy(v57, v58, sizeof(v57));
    sub_1005DF104((uint64_t)v57);
    goto LABEL_12;
  }
  sub_10051B3EC((uint64_t)v58, (uint64_t)v56, &qword_10168D670);
  sub_1005DF370((uint64_t)v56);
  char v41 = 1;
  return v41 & 1;
}

uint64_t sub_1005DF0EC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 240);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_1005DF104(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 248);
  unint64_t v3 = *(void *)(a1 + 256);
  uint64_t v4 = *(void *)(a1 + 264);
  uint64_t v5 = *(void *)(a1 + 272);
  uint64_t v6 = *(void *)(a1 + 280);
  uint64_t v7 = *(void *)(a1 + 288);
  uint64_t v8 = *(void *)(a1 + 296);
  uint64_t v9 = *(void *)(a1 + 304);
  long long v22 = *(_OWORD *)(a1 + 328);
  long long v23 = *(_OWORD *)(a1 + 312);
  long long v20 = *(_OWORD *)(a1 + 360);
  long long v21 = *(_OWORD *)(a1 + 344);
  long long v18 = *(_OWORD *)(a1 + 392);
  long long v19 = *(_OWORD *)(a1 + 376);
  long long v16 = *(_OWORD *)(a1 + 424);
  long long v17 = *(_OWORD *)(a1 + 408);
  long long v14 = *(_OWORD *)(a1 + 456);
  long long v15 = *(_OWORD *)(a1 + 440);
  long long v13 = *(_OWORD *)(a1 + 472);
  uint64_t v10 = *(void *)(a1 + 488);
  long long v12 = *(_OWORD *)(a1 + 208);
  sub_1005DF280(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v12,
    *((uint64_t *)&v12 + 1),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    *(void *)(a1 + 240));
  sub_1005DF280(v2, v3, v4, v5, v6, v7, v8, v9, v23, *((uint64_t *)&v23 + 1), v22, *((uint64_t *)&v22 + 1), v21, *((uint64_t *)&v21 + 1), v20, *((uint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18,
    *((uint64_t *)&v18 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v10);
  return a1;
}

uint64_t sub_1005DF280(uint64_t result, unint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  if (a31)
  {
    sub_10051AC88(result, a2, a3);
    sub_10051ABBC(a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1005DF370(uint64_t a1)
{
  long long v3 = *(_OWORD *)(a1 + 208);
  sub_1005DF280(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v3,
    *((uint64_t *)&v3 + 1),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    *(void *)(a1 + 240));
  return a1;
}

uint64_t sub_1005DF3EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v12 = *(void *)(a1 + 72);
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 88);
  uint64_t v4 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 104);
  uint64_t v6 = *(void *)(a1 + 112);
  uint64_t v7 = *(void *)(a1 + 120);
  long long v10 = *(_OWORD *)(a1 + 144);
  long long v11 = *(_OWORD *)(a1 + 128);
  uint64_t v8 = *(void *)(a1 + 160);
  sub_10051B3B0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  sub_10051B2E8(v13, v12, v2, v3, v4, v5, v6, v7, v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1005DF4AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005DF514(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1005DF574()
{
  unint64_t result = qword_101675530;
  if (!qword_101675530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101675530);
  }
  return result;
}

uint64_t sub_1005DF5C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005DF630(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_1005DF728()
{
  if ((v0[OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_isTornDown] & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLScenesViewController_i.swift", 95, 2, 34, (uint64_t)"teardown not called for CRLScenesViewController_i", 49, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLScenesViewController_i.swift", 95, 2, 34);
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLScenesViewController_i();
  return [super dealloc];
}

void sub_1005DF974()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UIHostingControllerSizingOptions();
  __chkstk_darwin(v2 - 8, v3);
  v43.receiver = v0;
  v43.super_class = (Class)type metadata accessor for CRLScenesViewController_i();
  [super viewDidLoad];
  uint64_t v4 = OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_hostingController;
  id v5 = [*(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_hostingController] view];
  if (!v5)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = v5;
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v7 = *(id *)&v0[v4];
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter();

  id v8 = [v0 view];
  if (!v8)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v9 = v8;
  id v10 = [*(id *)&v1[v4] view];
  if (!v10)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  long long v11 = v10;
  [v9 addSubview:v10];

  [v1 addChildViewController:*(void *)&v1[v4]];
  [*(id *)&v1[v4] didMoveToParentViewController:v1];
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10117FBE0;
  id v13 = [*(id *)&v1[v4] view];
  if (!v13)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  long long v14 = v13;
  id v15 = [v13 leadingAnchor];

  id v16 = [v1 view];
  if (!v16)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  long long v17 = v16;
  id v18 = [v16 leadingAnchor];

  id v19 = [v15 constraintEqualToAnchor:v18];
  *(void *)(v12 + 32) = v19;
  id v20 = [*(id *)&v1[v4] view];
  if (!v20)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  long long v21 = v20;
  id v22 = [v20 trailingAnchor];

  id v23 = [v1 view];
  if (!v23)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v24 = v23;
  id v25 = [v23 trailingAnchor];

  id v26 = [v22 constraintEqualToAnchor:v25];
  *(void *)(v12 + 40) = v26;
  id v27 = [*(id *)&v1[v4] view];
  if (!v27)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v28 = v27;
  id v29 = [v27 topAnchor];

  id v30 = [v1 view];
  if (!v30)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  BOOL v31 = v30;
  id v32 = [v30 topAnchor];

  id v33 = [v29 constraintEqualToAnchor:v32];
  *(void *)(v12 + 48) = v33;
  id v34 = [*(id *)&v1[v4] view];
  if (!v34)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  char v35 = v34;
  id v36 = [v34 bottomAnchor];

  id v37 = [v1 view];
  if (v37)
  {
    char v38 = v37;
    uint64_t v39 = self;
    id v40 = [v38 bottomAnchor];

    id v41 = [v36 constraintEqualToAnchor:v40];
    *(void *)(v12 + 56) = v41;
    specialized Array._endMutation()();
    sub_10050BF48(0, (unint64_t *)&qword_101674200);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v39 activateConstraints:isa];

    return;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_1005DFE50()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_scenesPopoverState);
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  static Published.subscript.getter();

  swift_release();
  uint64_t result = swift_release();
  if ((v6 & 1) == 0)
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v4 = swift_bridgeObjectRetain();
      id v5 = sub_1006B9DD4(v4);
      swift_bridgeObjectRelease();
      sub_100E6B0B8((unint64_t)v5);
      swift_release();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1005DFFB8(uint64_t a1)
{
  sub_100557A70(a1, (uint64_t)v10);
  uint64_t v2 = v11;
  if (v11)
  {
    uint64_t v3 = sub_10050F848(v10, v11);
    uint64_t v4 = *(void *)(v2 - 8);
    __n128 v5 = __chkstk_darwin(v3, v3);
    id v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v4 + 16))(v7, v5);
    uint64_t v8 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v10);
  }
  else
  {
    uint64_t v8 = 0;
  }
  [v1 delete:v8];
  return swift_unknownObjectRelease();
}

void sub_1005E02A0(void *a1, uint64_t a2, Class isa)
{
  type metadata accessor for CRLiOSBoardViewController();
  uint64_t v7 = swift_dynamicCastClass();
  if (!v7) {
    return;
  }
  uint64_t v8 = (void *)v7;
  id v33 = a1;
  id v9 = [v8 presentedViewController];
  if (v9)
  {
    id v10 = v9;
    type metadata accessor for CRLScenesViewController_i();
    if (swift_dynamicCastClass() || ([v10 isBeingPresented] & 1) != 0)
    {

LABEL_34:

      return;
    }
    unsigned int v11 = [v10 isBeingDismissed];

    if (v11) {
      goto LABEL_34;
    }
  }
  [v3 setModalPresentationStyle:7];
  id v12 = [v3 popoverPresentationController];
  if (!v12) {
    goto LABEL_34;
  }
  id v13 = v12;
  id v14 = [v3 view];
  if (!v14)
  {
LABEL_40:
    __break(1u);
    return;
  }
  id v15 = v14;
  if (qword_10166F5F0 != -1) {
    swift_once();
  }
  [v15 setBackgroundColor:qword_10171B1A0];

  [v13 setSourceView:a2];
  if (isa)
  {
    sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
  }
  [v13 setPassthroughViews:isa];

  [v13 setPermittedArrowDirections:2];
  if (qword_10166F608 != -1) {
    swift_once();
  }
  double v16 = *(double *)&qword_10171B1B8;
  if (swift_unknownObjectWeakLoadStrong())
  {
    id v17 = [self currentTraitCollection];
    id v18 = [v17 preferredContentSizeCategory];

    LOBYTE(v17) = sub_1005E1C0C(v18);
    swift_unknownObjectRelease();
    if (v17) {
      double v16 = v16 + v16;
    }
  }
  uint64_t v19 = OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_scenesPopoverState;
  id v20 = *(void **)&v3[OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_scenesPopoverState];
  swift_getKeyPath();
  swift_getKeyPath();
  id v21 = v20;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (LOBYTE(aBlock[0])) {
    uint64_t v22 = 4;
  }
  else {
    uint64_t v22 = 3;
  }
  id v23 = *(void **)&v3[v19];
  swift_getKeyPath();
  swift_getKeyPath();
  id v24 = v23;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (aBlock[0] >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v22 >= v25) {
    goto LABEL_30;
  }
  if (qword_10166F610 != -1) {
    swift_once();
  }
  double v26 = *(double *)&qword_10171B1C0;
  id v27 = *(void **)&v3[v19];
  swift_getKeyPath();
  swift_getKeyPath();
  id v28 = v27;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (aBlock[0] >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (__OFSUB__(v29, v22))
  {
    __break(1u);
    goto LABEL_40;
  }
  double v16 = v16 + v26 * (double)(v29 - v22);
LABEL_30:
  if (qword_10166F600 != -1) {
    swift_once();
  }
  [v3 setPreferredContentSize:*(double *)&qword_10171B1B0 v16];
  uint64_t v30 = [self isReduceMotionEnabled] ^ 1;
  uint64_t v31 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1005E2158;
  aBlock[5] = v31;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = &unk_10150A408;
  id v32 = _Block_copy(aBlock);
  swift_release();
  [v8 presentViewController:v3 animated:v30 completion:v32];

  _Block_release(v32);
}

void sub_1005E0890()
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = Strong;
    [Strong becomeFirstResponder];
  }
}

void sub_1005E0998(char a1, uint64_t a2, uint64_t a3)
{
}

uint64_t type metadata accessor for CRLScenesViewController_i()
{
  return self;
}

id sub_1005E0B0C()
{
  if ((v0[OBJC_IVAR____TtC8Freeform32CRLCompactScenesViewController_i_isTornDown] & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLScenesViewController_i.swift", 95, 2, 168, (uint64_t)"teardown not called for CRLCompactScenesViewController_i", 56, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLScenesViewController_i.swift", 95, 2, 168);
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCompactScenesViewController_i();
  return [super dealloc];
}

void sub_1005E0D48()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UIHostingControllerSizingOptions();
  __chkstk_darwin(v2 - 8, v3);
  v49.receiver = v0;
  v49.super_class = (Class)type metadata accessor for CRLCompactScenesViewController_i();
  [super viewDidLoad];
  uint64_t v4 = OBJC_IVAR____TtC8Freeform32CRLCompactScenesViewController_i_hostingController;
  id v5 = [*(id *)&v0[OBJC_IVAR____TtC8Freeform32CRLCompactScenesViewController_i_hostingController] view];
  if (!v5)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = v5;
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v7 = *(id *)&v0[v4];
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter();

  id v8 = [v0 view];
  if (!v8)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v9 = v8;
  id v10 = [*(id *)&v1[v4] view];
  if (!v10)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  unsigned int v11 = v10;
  [v9 addSubview:v10];

  [v1 addChildViewController:*(void *)&v1[v4]];
  [*(id *)&v1[v4] didMoveToParentViewController:v1];
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10117FBE0;
  id v13 = [*(id *)&v1[v4] view];
  if (!v13)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v14 = v13;
  id v15 = [v13 leadingAnchor];

  id v16 = [v1 view];
  if (!v16)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v17 = v16;
  id v18 = [v16 leadingAnchor];

  id v19 = [v15 constraintEqualToAnchor:v18];
  *(void *)(v12 + 32) = v19;
  id v20 = [*(id *)&v1[v4] view];
  if (!v20)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  id v21 = v20;
  id v22 = [v20 trailingAnchor];

  id v23 = [v1 view];
  if (!v23)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  id v24 = v23;
  id v25 = [v23 trailingAnchor];

  id v26 = [v22 constraintEqualToAnchor:v25];
  *(void *)(v12 + 40) = v26;
  id v27 = [*(id *)&v1[v4] view];
  if (!v27)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v28 = v27;
  id v29 = [v27 topAnchor];

  id v30 = [v1 view];
  if (!v30)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v31 = v30;
  id v32 = [v30 topAnchor];

  id v33 = [v29 constraintEqualToAnchor:v32];
  *(void *)(v12 + 48) = v33;
  id v34 = [*(id *)&v1[v4] view];
  if (!v34)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  char v35 = v34;
  id v36 = [v34 bottomAnchor];

  id v37 = [v1 view];
  if (v37)
  {
    char v38 = v37;
    uint64_t v39 = self;
    id v40 = [v38 bottomAnchor];

    id v41 = [v36 constraintEqualToAnchor:v40];
    *(void *)(v12 + 56) = v41;
    specialized Array._endMutation()();
    sub_10050BF48(0, (unint64_t *)&qword_101674200);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v39 activateConstraints:isa];

    objc_super v43 = self;
    uint64_t v44 = UIAccessibilityVoiceOverStatusDidChangeNotification;
    uint64_t v45 = UIAccessibilitySwitchControlStatusDidChangeNotification;
    id v46 = [v43 defaultCenter];
    [v46 addObserver:v1 selector:"updateSheetPresentationDetents" name:v44 object:0];

    uint64_t v47 = v45;
    id v48 = [v43 defaultCenter];
    [v48 addObserver:v1 selector:"updateSheetPresentationDetents" name:v47 object:0];

    return;
  }
LABEL_23:
  __break(1u);
}

void sub_1005E13AC(void *a1)
{
  type metadata accessor for CRLCompactScenesViewController_i();
  if (!swift_dynamicCastClass()
    && ([a1 isBeingPresented] & 1) == 0
    && ([a1 isBeingDismissed] & 1) == 0)
  {
    [v1 setModalPresentationStyle:1];
    id v3 = [v1 sheetPresentationController];
    if (v3)
    {
      uint64_t v4 = v3;
      sub_1005E1FAC();
      sub_10050BF48(0, (unint64_t *)&qword_1016A0060);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v4 setDetents:isa];
    }
    id v6 = [v1 sheetPresentationController];
    if (v6)
    {
      id v7 = v6;
      [v6 setLargestUndimmedDetentIdentifier:UISheetPresentationControllerDetentIdentifierMedium];
    }
    type metadata accessor for CRLiOSBoardViewController();
    uint64_t v8 = swift_dynamicCastClass();
    if (v8)
    {
      id v9 = (void *)v8;
      id v10 = a1;
      id v11 = [v9 presentedViewController];
      if (v11)
      {
        uint64_t v12 = v11;
        uint64_t v13 = [self isReduceMotionEnabled] ^ 1;
        uint64_t v14 = swift_allocObject();
        *(void *)(v14 + 16) = v9;
        *(void *)(v14 + 24) = v1;
        v19[4] = sub_1005E1A90;
        v19[5] = v14;
        v19[0] = _NSConcreteStackBlock;
        v19[1] = *(void *)"";
        v19[2] = sub_100679958;
        v19[3] = &unk_10150A368;
        id v15 = _Block_copy(v19);
        id v16 = v10;
        id v17 = v1;
        swift_release();
        [v12 dismissViewControllerAnimated:v13 completion:v15];
        _Block_release(v15);

        return;
      }
    }
    uint64_t v18 = [self isReduceMotionEnabled] ^ 1;
    [a1 presentViewController:v1 animated:v18 completion:0];
  }
}

void sub_1005E1758(char a1, uint64_t a2, uint64_t a3)
{
}

void sub_1005E1764(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (([v4 isBeingDismissed] & 1) == 0)
  {
    if (a2)
    {
      v10[4] = a2;
      v10[5] = a3;
      v10[0] = _NSConcreteStackBlock;
      v10[1] = *(void *)"";
      v10[2] = sub_100679958;
      void v10[3] = a4;
      id v9 = _Block_copy(v10);
      swift_retain();
      swift_release();
    }
    else
    {
      id v9 = 0;
    }
    [v4 dismissViewControllerAnimated:a1 & 1 completion:v9];
    _Block_release(v9);
  }
}

void sub_1005E19D8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4 = a4;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for CRLCompactScenesViewController_i()
{
  return self;
}

uint64_t sub_1005E1A38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005E1A48()
{
  return swift_release();
}

uint64_t sub_1005E1A50()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1005E1A90()
{
  unint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = [self isReduceMotionEnabled] ^ 1;

  return [v1 presentViewController:v2 animated:v3 completion:0];
}

uint64_t sub_1005E1AF0()
{
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10117DF50;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v2 = self;
  id v3 = [v2 keyCommandWithInput:v1 modifierFlags:0 action:"delete:"];

  *(void *)(v0 + 32) = v3;
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 keyCommandWithInput:v4 modifierFlags:0 action:"deleteForward:"];

  *(void *)(v0 + 40) = v5;
  specialized Array._endMutation()();
  return v0;
}

uint64_t sub_1005E1C0C(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_1016755E0);
  __chkstk_darwin(v2 - 8, v3);
  id v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DynamicTypeSize();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  id v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v27 - v13;
  id v15 = a1;
  DynamicTypeSize.init(_:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100522F00((uint64_t)v5, &qword_1016755E0);
    char v16 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v14, v5, v6);
    sub_1005057FC(&qword_1016755E8);
    uint64_t v17 = *(void *)(v7 + 72);
    unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_10117DF40;
    unint64_t v20 = v19 + v18;
    id v21 = *(void (**)(void))(v7 + 104);
    ((void (*)(unint64_t, void, uint64_t))v21)(v20, enum case for DynamicTypeSize.accessibility3(_:), v6);
    unint64_t v29 = v20 + v17;
    v21();
    unint64_t v28 = v20 + 2 * v17;
    v21();
    id v30 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    v30(v10, v20, v6);
    sub_1005E2160();
    char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
    id v23 = *(void (**)(char *, uint64_t))(v7 + 8);
    swift_bridgeObjectRetain();
    v23(v10, v6);
    if (v22)
    {
      char v16 = 1;
    }
    else
    {
      v30(v10, v29, v6);
      id v24 = v23;
      char v25 = dispatch thunk of static Equatable.== infix(_:_:)();
      v24(v10, v6);
      if (v25)
      {
        char v16 = 1;
      }
      else
      {
        v30(v10, v28, v6);
        char v16 = dispatch thunk of static Equatable.== infix(_:_:)();
        v24(v10, v6);
      }
      id v23 = v24;
    }
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v23(v14, v6);
  }
  return v16 & 1;
}

uint64_t sub_1005E1FAC()
{
  uint64_t v0 = self;
  if (([v0 isVoiceOverOrSwitchControlEnabled] & 1) != 0
    || [v0 isVoiceControlEnabled])
  {
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_101177E70;
    *(void *)(v1 + 32) = [self largeDetent];
  }
  else
  {
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_10117DF50;
    uint64_t v2 = self;
    *(void *)(v1 + 32) = [v2 mediumDetent];
    *(void *)(v1 + 40) = [v2 largeDetent];
  }
  specialized Array._endMutation()();
  return v1;
}

uint64_t sub_1005E20D0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005E2108()
{
  return sub_100FBAB60(*(void *)(v0 + 16));
}

uint64_t sub_1005E2120()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1005E2158()
{
}

unint64_t sub_1005E2160()
{
  unint64_t result = qword_1016755F0;
  if (!qword_1016755F0)
  {
    type metadata accessor for DynamicTypeSize();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016755F0);
  }
  return result;
}

uint64_t sub_1005E21D8()
{
  id v1 = [*(id *)(v0 + 112) allObjects];
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_23:
    uint64_t v6 = _swiftEmptyArrayStorage;
LABEL_24:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v6;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_23;
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    uint64_t v6 = _swiftEmptyArrayStorage;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v7 = *(void *)(v2 + 8 * v5 + 32);
        swift_unknownObjectRetain();
      }
      swift_getObjectType();
      uint64_t v8 = swift_conformsToProtocol2();
      if (v8) {
        uint64_t v9 = v8;
      }
      else {
        uint64_t v9 = 0;
      }
      if (v8) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 0;
      }
      if (v10)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v6 = sub_100F63854(0, *((void *)v6 + 2) + 1, 1, v6);
        }
        unint64_t v12 = *((void *)v6 + 2);
        unint64_t v11 = *((void *)v6 + 3);
        if (v12 >= v11 >> 1) {
          uint64_t v6 = sub_100F63854((double *)(v11 > 1), v12 + 1, 1, v6);
        }
        *((void *)v6 + 2) = v12 + 1;
        uint64_t v13 = &v6[2 * v12];
        *((void *)v13 + 4) = v10;
        *((void *)v13 + 5) = v9;
      }
      else
      {
        swift_unknownObjectRelease();
      }
      ++v5;
    }
    while (v3 != v5);
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005E2398()
{
  swift_defaultActor_destroy();

  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for CRLAssetUploadObserverManager()
{
  return self;
}

char *sub_1005E23F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v61 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v61 - 8);
  __chkstk_darwin(v61, v8);
  id v60 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  id v59 = (char *)v52 - v12;
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  __n128 v16 = __chkstk_darwin(v13, v15);
  unint64_t v18 = (void *)((char *)v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = *(void **)(v3 + 48);
  void *v18 = v19;
  (*(void (**)(void *, void, uint64_t, __n128))(v14 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v13, v16);
  id v20 = v19;
  LOBYTE(v19) = _dispatchPreconditionTest(_:)();
  char v22 = *(void (**)(void *, uint64_t))(v14 + 8);
  id v21 = (char *)(v14 + 8);
  v22(v18, v13);
  if ((v19 & 1) == 0) {
    goto LABEL_22;
  }
  swift_beginAccess();
  id v21 = (char *)sub_1005E29B4(a2, a1, a3);
  swift_endAccess();
  if (*((void *)v21 + 2))
  {
    if (qword_10166FB88 != -1) {
      goto LABEL_23;
    }
    while (1)
    {
      swift_beginAccess();
      id v23 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117DF40;
      int64_t v24 = *((void *)v21 + 2);
      if (!v24) {
        break;
      }
      v52[1] = a2;
      v52[2] = a3;
      id v62 = _swiftEmptyArrayStorage;
      v52[0] = v23;
      id v25 = v23;
      sub_1006BB504(0, v24, 0);
      uint64_t v26 = sub_100F27B7C(v21);
      a2 = v27;
      char v29 = v28 & 1;
      id v58 = v21 + 56;
      uint64_t v56 = v7 + 16;
      uint64_t v55 = v7 + 32;
      uint64_t v54 = v7 + 8;
      id v57 = v21;
      while ((v26 & 0x8000000000000000) == 0 && v26 < 1 << v21[32])
      {
        if (((*(void *)&v58[((unint64_t)v26 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v26) & 1) == 0) {
          goto LABEL_20;
        }
        if (*((_DWORD *)v21 + 9) != a2) {
          goto LABEL_21;
        }
        id v30 = v59;
        uint64_t v31 = v61;
        (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v59, *((void *)v21 + 6) + *(void *)(v7 + 72) * v26, v61);
        id v32 = v60;
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v60, v30, v31);
        a3 = UUID.uuidString.getter();
        uint64_t v34 = v33;
        (*(void (**)(char *, uint64_t))(v7 + 8))(v32, v31);
        char v35 = v62;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB504(0, *((void *)v35 + 2) + 1, 1);
          char v35 = v62;
        }
        unint64_t v37 = *((void *)v35 + 2);
        unint64_t v36 = *((void *)v35 + 3);
        if (v37 >= v36 >> 1)
        {
          sub_1006BB504(v36 > 1, v37 + 1, 1);
          char v35 = v62;
        }
        *((void *)v35 + 2) = v37 + 1;
        char v38 = &v35[2 * v37];
        *((void *)v38 + 4) = a3;
        *((void *)v38 + 5) = v34;
        id v21 = v57;
        uint64_t v39 = sub_100666C8C(v26, a2, v29 & 1, v57);
        uint64_t v26 = v39;
        a2 = v40;
        char v29 = v41 & 1;
        if (!--v24)
        {
          sub_10056A4C4(v39, v40, v41 & 1);
          id v23 = (void *)v52[0];
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      swift_once();
    }
    id v42 = v23;
    char v35 = _swiftEmptyArrayStorage;
LABEL_17:
    objc_super v43 = (void *)inited;
    v43[7] = sub_1005057FC((uint64_t *)&unk_1016773F0);
    v43[8] = sub_100523288((unint64_t *)&unk_10168A400, (uint64_t *)&unk_1016773F0);
    v43[4] = v35;
    uint64_t v44 = UUID.uuidString.getter();
    uint64_t v46 = v45;
    v43[12] = &type metadata for String;
    unint64_t v47 = sub_100528BE4();
    v43[13] = v47;
    v43[9] = v44;
    v43[10] = v46;
    uint64_t v48 = UUID.uuidString.getter();
    v43[17] = &type metadata for String;
    v43[18] = v47;
    v43[14] = v48;
    v43[15] = v49;
    uint64_t v50 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v23, (uint64_t)&_mh_execute_header, v50, (uint64_t)"removed from asset upload tracker: assets: %{public}@, item: %{public}@, board: %{public}@", 90, 2, (uint64_t)v43);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  return v21;
}

void *sub_1005E29B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v13 - 8, v14);
  __n128 v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  id v20 = (char *)&v43 - v19;
  if (!*(void *)(a2 + 16)) {
    return &_swiftEmptySetSingleton;
  }
  uint64_t v21 = *v3;
  if (!*(void *)(*v4 + 16)) {
    return &_swiftEmptySetSingleton;
  }
  unint64_t v22 = sub_1009563EC(a3);
  if ((v23 & 1) == 0) {
    return &_swiftEmptySetSingleton;
  }
  uint64_t v43 = v9;
  uint64_t v24 = *(void *)(*(void *)(v21 + 56) + 8 * v22);
  if (!*(void *)(v24 + 16)) {
    return &_swiftEmptySetSingleton;
  }
  swift_bridgeObjectRetain();
  unint64_t v25 = sub_100955FC8(a1);
  if ((v26 & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return &_swiftEmptySetSingleton;
  }
  uint64_t v27 = *(void *)(*(void *)(v24 + 56) + 8 * v25);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_100F261B0(a2, v27);
  uint64_t v29 = v28;
  unint64_t v30 = *(void *)(v28 + 16);
  if (!v30)
  {
    swift_release();
    goto LABEL_11;
  }
  if (v30 <= *(void *)(v27 + 16) >> 3)
  {
    v45[0] = v27;
    sub_1010295C8(v28);
    uint64_t v31 = (void *)v45[0];
  }
  else
  {
    uint64_t v31 = sub_10102AA0C(v28, v27);
  }
  if (v31[2])
  {
    sub_100540CFC(a3, (uint64_t)v16);
    uint64_t v34 = sub_100F473F8(v45, (uint64_t)v16);
    if (*v33)
    {
      char v35 = v33;
      uint64_t v36 = v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v12, a1, v8);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v44 = *v35;
      uint64_t *v35 = 0x8000000000000000;
      sub_100974280((uint64_t)v31, (uint64_t)v12, isUniquelyReferenced_nonNull_native);
      uint64_t *v35 = v44;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v8);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    ((void (*)(void *, void))v34)(v45, 0);
    sub_100510028((uint64_t)v16);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_100540CFC(a3, (uint64_t)v20);
    char v38 = sub_100F473F8(v45, (uint64_t)v20);
    if (*v39)
    {
      sub_10095BDF0(a1);
      swift_bridgeObjectRelease();
    }
    ((void (*)(void *, void))v38)(v45, 0);
    sub_100510028((uint64_t)v20);
    uint64_t v40 = *v4;
    if (!*(void *)(*v4 + 16)
      || (unint64_t v41 = sub_1009563EC(a3), (v42 & 1) == 0)
      || !*(void *)(*(void *)(*(void *)(v40 + 56) + 8 * v41) + 16))
    {
      sub_10095BC7C(a3);
      swift_bridgeObjectRelease();
    }
  }
  return (void *)v29;
}

uint64_t sub_1005E2D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a2;
  uint64_t v33 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v36 = *(void *)(v33 - 8);
  __chkstk_darwin(v33, v6);
  id v32 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v34 = *(void *)(v8 - 8);
  uint64_t v35 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v31 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11 - 8, v14);
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __chkstk_darwin(v15, v18);
  uint64_t v19 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *(void *)(v3 + 48);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v29, v15);
  sub_100540CFC(a3, (uint64_t)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v20 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v21 = (v17 + *(unsigned __int8 *)(v12 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v22 + v20, v19, v15);
  sub_1005394E4((uint64_t)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21);
  *(void *)(v22 + ((v13 + v21 + 7) & 0xFFFFFFFFFFFFFFF8)) = v3;
  aBlock[4] = sub_1005E5564;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = &unk_10150A5E8;
  char v23 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v24 = v31;
  static DispatchQoS.unspecified.getter();
  unint64_t v37 = _swiftEmptyArrayStorage;
  sub_100522CDC();
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  char v26 = v32;
  uint64_t v25 = v33;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v25);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v35);
  return swift_release();
}

uint64_t sub_1005E316C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v58 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v58 - 8);
  uint64_t v10 = __chkstk_darwin(v58, v9);
  id v57 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10, v12);
  uint64_t v56 = (char *)&v45 - v14;
  if (*(void *)(a1 + 16))
  {
    uint64_t v50 = a4;
    if (qword_10166FB88 != -1) {
      goto LABEL_21;
    }
    while (1)
    {
      swift_beginAccess();
      uint64_t v15 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117DF40;
      int64_t v16 = *(void *)(a1 + 16);
      if (!v16) {
        break;
      }
      uint64_t v47 = a2;
      uint64_t v48 = a3;
      id v59 = _swiftEmptyArrayStorage;
      uint64_t v46 = v15;
      id v17 = v15;
      sub_1006BB504(0, v16, 0);
      uint64_t v18 = sub_100F27B7C(a1);
      a3 = v19;
      a2 = v20 & 1;
      uint64_t v55 = a1 + 56;
      uint64_t v53 = v8 + 16;
      uint64_t v52 = v8 + 32;
      uint64_t v51 = v8 + 8;
      uint64_t v54 = a1;
      while ((v18 & 0x8000000000000000) == 0 && v18 < 1 << *(unsigned char *)(a1 + 32))
      {
        if (((*(void *)(v55 + (((unint64_t)v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
          goto LABEL_19;
        }
        if (*(_DWORD *)(a1 + 36) != a3) {
          goto LABEL_20;
        }
        uint64_t v21 = *(void *)(a1 + 48) + *(void *)(v8 + 72) * v18;
        uint64_t v22 = v56;
        uint64_t v23 = v58;
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v56, v21, v58);
        uint64_t v24 = v57;
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v57, v22, v23);
        uint64_t v25 = UUID.uuidString.getter();
        uint64_t v27 = v26;
        (*(void (**)(char *, uint64_t))(v8 + 8))(v24, v23);
        uint64_t v28 = v59;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB504(0, *((void *)v28 + 2) + 1, 1);
          uint64_t v28 = v59;
        }
        unint64_t v30 = *((void *)v28 + 2);
        unint64_t v29 = *((void *)v28 + 3);
        if (v30 >= v29 >> 1)
        {
          sub_1006BB504(v29 > 1, v30 + 1, 1);
          uint64_t v28 = v59;
        }
        *((void *)v28 + 2) = v30 + 1;
        uint64_t v31 = &v28[2 * v30];
        *((void *)v31 + 4) = v25;
        *((void *)v31 + 5) = v27;
        a1 = v54;
        uint64_t v32 = sub_100666C8C(v18, a3, a2 & 1, v54);
        uint64_t v18 = v32;
        a3 = v33;
        a2 = v34 & 1;
        if (!--v16)
        {
          sub_10056A4C4(v32, v33, v34 & 1);
          a3 = v48;
          a2 = v47;
          uint64_t v35 = v46;
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      swift_once();
    }
    id v36 = v15;
    uint64_t v35 = v15;
    uint64_t v28 = _swiftEmptyArrayStorage;
LABEL_16:
    unint64_t v37 = (void *)inited;
    v37[7] = sub_1005057FC((uint64_t *)&unk_1016773F0);
    v37[8] = sub_100523288((unint64_t *)&unk_10168A400, (uint64_t *)&unk_1016773F0);
    v37[4] = v28;
    uint64_t v38 = UUID.uuidString.getter();
    uint64_t v40 = v39;
    v37[12] = &type metadata for String;
    unint64_t v41 = sub_100528BE4();
    v37[13] = v41;
    v37[9] = v38;
    v37[10] = v40;
    uint64_t v42 = UUID.uuidString.getter();
    v37[17] = &type metadata for String;
    v37[18] = v41;
    v37[14] = v42;
    v37[15] = v43;
    uint64_t v44 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v35, (uint64_t)&_mh_execute_header, v44, (uint64_t)"adding to asset upload tracker: assets: %{public}@, item: %{public}@, board: %{public}@", 87, 2, (uint64_t)v37);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    swift_beginAccess();
    sub_1005E3664(a2, a1, a3);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1005E3664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t result = __chkstk_darwin(v12, v14);
  id v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16))
  {
    uint64_t v18 = *v3;
    if (*(void *)(*v4 + 16) && (unint64_t v19 = sub_1009563EC(a3), (v20 & 1) != 0))
    {
      uint64_t v21 = *(void **)(*(void *)(v18 + 56) + 8 * v19);
      swift_bridgeObjectRetain();
      if (!v21[2]) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v21 = &_swiftEmptyDictionarySingleton;
      if (!*((void *)&_swiftEmptyDictionarySingleton + 2)) {
        goto LABEL_9;
      }
    }
    unint64_t v22 = sub_100955FC8(a1);
    if (v23)
    {
      uint64_t v24 = *(void **)(v21[7] + 8 * v22);
      swift_bridgeObjectRetain();
LABEL_10:
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v17, a1, v12);
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_100ED8C0C((uint64_t)v24, a2);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v30 = (uint64_t)v21;
      sub_100974280(v25, (uint64_t)v17, isUniquelyReferenced_nonNull_native);
      uint64_t v27 = v30;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
      sub_100540CFC(a3, (uint64_t)v11);
      swift_bridgeObjectRetain();
      char v28 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v30 = *v4;
      uint64_t *v4 = 0x8000000000000000;
      sub_100974274(v27, (uint64_t)v11, v28);
      uint64_t *v4 = v30;
      swift_bridgeObjectRelease();
      sub_100510028((uint64_t)v11);
      return swift_bridgeObjectRelease();
    }
LABEL_9:
    uint64_t v24 = &_swiftEmptySetSingleton;
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1005E38C4()
{
  return sub_1005E4050((uint64_t)sub_1005E53E0, (uint64_t)&unk_10150A598);
}

void sub_1005E38E4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40) == 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"willApplySaveResults()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLAssetUploadTracker.swift", 86, 2, 93, (uint64_t)"CRLAssetUploadTracker.willApplySaveResults called multiple times before a call to didApplySaveResults", 101, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"willApplySaveResults()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLAssetUploadTracker.swift", 86, 2, 93);
  }
  swift_beginAccess();
  if (*(void *)(*(void *)(a1 + 32) + 16))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"willApplySaveResults()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLAssetUploadTracker.swift", 86, 2, 94, (uint64_t)"CRLAssetUploadTracker.willApplySaveResults called while assetsThatJustFinishedUploading is not empty", 100, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"willApplySaveResults()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLAssetUploadTracker.swift", 86, 2, 94);
  }
  *(unsigned char *)(a1 + 40) = 1;
}

uint64_t sub_1005E3A60(uint64_t a1)
{
  return sub_1005E3C14(a1, (uint64_t)&unk_10150A558, (uint64_t)sub_1005E53D8, (uint64_t)&unk_10150A570);
}

uint64_t sub_1005E3A88(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(a1 + 40) & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"serverSyncedBoardItemLocalRecordDidMerge(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLAssetUploadTracker.swift", 86, 2, 100, (uint64_t)"CRLAssetUploadTracker.serverSyncedBoardItemLocalRecordDidMerge called without ongoing apply save results", 104, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v8) = 2;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"serverSyncedBoardItemLocalRecordDidMerge(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLAssetUploadTracker.swift", 86, 2, 100);
    [self logFullBacktrace:@"CRLAssetUploadTracker.serverSyncedBoardItemLocalRecordDidMerge called without ongoing apply save results" 104 v8];
  }
  uint64_t v3 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_unsyncedAssetUUIDs);
  uint64_t v4 = a2 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_id;
  uint64_t v5 = a2 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier;
  uint64_t v6 = sub_1005E23F4(v3, v4, v5);
  swift_beginAccess();
  sub_1005E3664(v4, (uint64_t)v6, v5);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1005E3BEC(uint64_t a1)
{
  return sub_1005E3C14(a1, (uint64_t)&unk_10150A508, (uint64_t)sub_1005E538C, (uint64_t)&unk_10150A520);
}

uint64_t sub_1005E3C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = v4;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for DispatchQoS();
  uint64_t v14 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v15);
  id v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(void *)(v7 + 48);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v7;
  *(void *)(v18 + 24) = a1;
  aBlock[4] = a3;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = a4;
  unint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  char v23 = _swiftEmptyArrayStorage;
  sub_100522CDC();
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v22);
  return swift_release();
}

uint64_t sub_1005E3EA0(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(a1 + 40) & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"serverSyncedBoardItemRemoteRecordDidMerge(_:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLAssetUploadTracker.swift", 86, 2, 110, (uint64_t)"CRLAssetUploadTracker.serverSyncedBoardItemRemoteRecordDidMerge called without ongoing apply save results", 105, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v9) = 2;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"serverSyncedBoardItemRemoteRecordDidMerge(_:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLAssetUploadTracker.swift", 86, 2, 110);
    [self logFullBacktrace:@"CRLAssetUploadTracker.serverSyncedBoardItemRemoteRecordDidMerge called without ongoing apply save results" 105 v9];
  }
  swift_beginAccess();
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_100C314A4(v3);
  uint64_t v5 = a2 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_id;
  uint64_t v6 = a2 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier;
  uint64_t v7 = sub_1005E23F4(v4, v5, v6);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1005E3664(v5, (uint64_t)v7, v6);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1005E4030()
{
  return sub_1005E4050((uint64_t)sub_1005E507C, (uint64_t)&unk_10150A458);
}

uint64_t sub_1005E4050(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(void *)(v2 + 48);
  aBlock[4] = a1;
  uint64_t v19 = v2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = a2;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v17[1] = _swiftEmptyArrayStorage;
  sub_100522CDC();
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return swift_release();
}

uint64_t sub_1005E42B4(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 32);
  if (*(void *)(v7 + 16))
  {
    *(void *)(a1 + 32) = _swiftEmptyDictionarySingleton;
    uint64_t v8 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a1;
    v9[5] = v7;
    swift_retain();
    sub_1005912D0((uint64_t)v5, (uint64_t)&unk_101675820, (uint64_t)v9);
    uint64_t result = swift_release();
  }
  *(unsigned char *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_1005E43E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  sub_1005057FC(&qword_101672BB0);
  v5[8] = swift_task_alloc();
  v5[9] = swift_task_alloc();
  return _swift_task_switch(sub_1005E448C, 0, 0);
}

uint64_t sub_1005E448C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 16);
  *(void *)(v0 + 80) = v1;
  return _swift_task_switch(sub_1005E44B0, v1, 0);
}

uint64_t sub_1005E44B0()
{
  *(void *)(v0 + 88) = sub_1005E21D8();
  return _swift_task_switch(sub_1005E451C, 0, 0);
}

uint64_t sub_1005E451C()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (long long *)(v1 + 32);
    uint64_t v4 = type metadata accessor for TaskPriority();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    uint64_t v21 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    char v20 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    uint64_t v23 = v4;
    do
    {
      uint64_t v8 = v0[8];
      uint64_t v7 = v0[9];
      uint64_t v9 = v0[7];
      long long v24 = *v3;
      v22(v7, 1, 1, v4);
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = 0;
      uint64_t v11 = (void *)(v10 + 16);
      *(void *)(v10 + 24) = 0;
      *(void *)(v10 + 32) = v9;
      *(_OWORD *)(v10 + 40) = v24;
      sub_100538BF8(v7, v8);
      int v12 = (*v21)(v8, 1, v4);
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v13 = v0[8];
      if (v12 == 1)
      {
        sub_1005E52F0(v0[8]);
        if (!*v11) {
          goto LABEL_9;
        }
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*v20)(v13, v4);
        if (!*v11)
        {
LABEL_9:
          uint64_t v14 = 0;
          uint64_t v16 = 0;
          goto LABEL_10;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v14 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v16 = v15;
      swift_unknownObjectRelease();
LABEL_10:
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = &unk_101675830;
      *(void *)(v17 + 24) = v10;
      if (v16 | v14)
      {
        v0[2] = 0;
        v0[3] = 0;
        v0[4] = v14;
        v0[5] = v16;
      }
      uint64_t v6 = v0[9];
      swift_task_create();
      swift_unknownObjectRelease();
      swift_release();
      sub_1005E52F0(v6);
      ++v3;
      --v2;
      uint64_t v4 = v23;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_1005E47EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = type metadata accessor for UUID();
  v5[4] = v6;
  v5[5] = *(void *)(v6 - 8);
  v5[6] = swift_task_alloc();
  sub_1005057FC(&qword_101675838);
  v5[7] = swift_task_alloc();
  v5[8] = swift_task_alloc();
  v5[9] = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v5[10] = swift_task_alloc();
  sub_1005057FC(&qword_101675840);
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  return _swift_task_switch(sub_1005E4984, 0, 0);
}

uint64_t sub_1005E4984()
{
  uint64_t v50 = v0[9];
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[2];
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v47 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & v3;
  uint64_t v56 = (void (**)(uint64_t))(v1 + 32);
  uint64_t v55 = v0[5];
  uint64_t v7 = (uint64_t (**)(uint64_t, uint64_t))(v1 + 8);
  int64_t v48 = (unint64_t)(63 - v4) >> 6;
  uint64_t v49 = v0[2];
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v51 = 0;
  if (!v6) {
    goto LABEL_7;
  }
LABEL_5:
  unint64_t v9 = __clz(__rbit64(v6));
  uint64_t v10 = (v6 - 1) & v6;
  unint64_t v11 = v9 | (v51 << 6);
LABEL_6:
  uint64_t v12 = v0[11];
  sub_100540CFC(*(void *)(v49 + 48) + *(void *)(v50 + 72) * v11, v12);
  uint64_t v13 = *(void *)(v49 + 56);
  uint64_t v14 = sub_1005057FC(&qword_101675848);
  *(void *)(v12 + *(int *)(v14 + 48)) = *(void *)(v13 + 8 * v11);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 0, 1, v14);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v20 = v0[12];
    sub_10051B3EC(v0[11], v20, &qword_101675840);
    uint64_t v21 = sub_1005057FC(&qword_101675848);
    int v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v20, 1, v21);
    uint64_t v23 = v0[12];
    if (v22 == 1)
    {
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v46 = (uint64_t (*)(void))v0[1];
      return v46();
    }
    unint64_t v52 = v10;
    uint64_t v24 = *(void *)(v23 + *(int *)(v21 + 48));
    uint64_t result = sub_1005394E4(v23, v0[10]);
    int64_t v25 = 0;
    uint64_t v26 = *(void *)(v24 + 64);
    uint64_t v53 = v24 + 64;
    uint64_t v27 = -1 << *(unsigned char *)(v24 + 32);
    uint64_t v28 = -v27 < 64 ? ~(-1 << -(char)v27) : -1;
    unint64_t v29 = v28 & v26;
    int64_t v54 = (unint64_t)(63 - v27) >> 6;
    if ((v28 & v26) == 0) {
      break;
    }
    while (1)
    {
      unint64_t v32 = __clz(__rbit64(v29));
      v29 &= v29 - 1;
      unint64_t v33 = v32 | (v25 << 6);
LABEL_33:
      uint64_t v34 = v0[7];
      (*(void (**)(uint64_t, unint64_t, void))(v55 + 16))(v34, *(void *)(v24 + 48) + *(void *)(v55 + 72) * v33, v0[4]);
      uint64_t v35 = *(void *)(v24 + 56);
      uint64_t v36 = sub_1005057FC(&qword_101675850);
      *(void *)(v34 + *(int *)(v36 + 48)) = *(void *)(v35 + 8 * v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v34, 0, 1, v36);
      swift_bridgeObjectRetain();
LABEL_52:
      uint64_t v42 = v0[8];
      sub_10051B3EC(v0[7], v42, &qword_101675838);
      uint64_t v43 = sub_1005057FC(&qword_101675850);
      int v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v42, 1, v43);
      uint64_t v45 = v0[10];
      if (v44 == 1) {
        break;
      }
      uint64_t v30 = v0[6];
      uint64_t v31 = v0[4];
      (*v56)(v30);
      sub_100F2D3D4(v30, v45);
      swift_bridgeObjectRelease();
      uint64_t result = (*v7)(v30, v31);
      if (!v29) {
        goto LABEL_34;
      }
    }
    swift_release();
    uint64_t result = sub_100510028(v45);
    unint64_t v6 = v52;
    if (v52) {
      goto LABEL_5;
    }
LABEL_7:
    int64_t v15 = v51 + 1;
    if (__OFADD__(v51, 1)) {
      goto LABEL_59;
    }
    if (v15 < v48)
    {
      unint64_t v16 = *(void *)(v47 + 8 * v15);
      if (v16) {
        goto LABEL_10;
      }
      int64_t v17 = v51 + 2;
      ++v51;
      if (v15 + 1 < v48)
      {
        unint64_t v16 = *(void *)(v47 + 8 * v17);
        if (v16) {
          goto LABEL_13;
        }
        int64_t v51 = v15 + 1;
        if (v15 + 2 < v48)
        {
          unint64_t v16 = *(void *)(v47 + 8 * (v15 + 2));
          if (v16)
          {
            v15 += 2;
            goto LABEL_10;
          }
          int64_t v17 = v15 + 3;
          int64_t v51 = v15 + 2;
          if (v15 + 3 < v48)
          {
            unint64_t v16 = *(void *)(v47 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                int64_t v15 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_61;
                }
                if (v15 >= v48)
                {
                  int64_t v51 = v48 - 1;
                  goto LABEL_24;
                }
                unint64_t v16 = *(void *)(v47 + 8 * v15);
                ++v17;
                if (v16) {
                  goto LABEL_10;
                }
              }
            }
LABEL_13:
            int64_t v15 = v17;
LABEL_10:
            uint64_t v10 = (v16 - 1) & v16;
            unint64_t v11 = __clz(__rbit64(v16)) + (v15 << 6);
            int64_t v51 = v15;
            goto LABEL_6;
          }
        }
      }
    }
LABEL_24:
    uint64_t v18 = v0[11];
    uint64_t v19 = sub_1005057FC(&qword_101675848);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
    uint64_t v10 = 0;
  }
LABEL_34:
  int64_t v37 = v25 + 1;
  if (!__OFADD__(v25, 1))
  {
    if (v37 < v54)
    {
      unint64_t v38 = *(void *)(v53 + 8 * v37);
      if (v38)
      {
LABEL_37:
        unint64_t v29 = (v38 - 1) & v38;
        unint64_t v33 = __clz(__rbit64(v38)) + (v37 << 6);
        int64_t v25 = v37;
        goto LABEL_33;
      }
      int64_t v39 = v25 + 2;
      ++v25;
      if (v37 + 1 < v54)
      {
        unint64_t v38 = *(void *)(v53 + 8 * v39);
        if (v38)
        {
LABEL_40:
          int64_t v37 = v39;
          goto LABEL_37;
        }
        int64_t v25 = v37 + 1;
        if (v37 + 2 < v54)
        {
          unint64_t v38 = *(void *)(v53 + 8 * (v37 + 2));
          if (v38)
          {
            v37 += 2;
            goto LABEL_37;
          }
          int64_t v39 = v37 + 3;
          int64_t v25 = v37 + 2;
          if (v37 + 3 < v54)
          {
            unint64_t v38 = *(void *)(v53 + 8 * v39);
            if (v38) {
              goto LABEL_40;
            }
            while (1)
            {
              int64_t v37 = v39 + 1;
              if (__OFADD__(v39, 1)) {
                goto LABEL_60;
              }
              if (v37 >= v54) {
                break;
              }
              unint64_t v38 = *(void *)(v53 + 8 * v37);
              ++v39;
              if (v38) {
                goto LABEL_37;
              }
            }
            int64_t v25 = v54 - 1;
          }
        }
      }
    }
    uint64_t v40 = v0[7];
    uint64_t v41 = sub_1005057FC(&qword_101675850);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 1, 1, v41);
    unint64_t v29 = 0;
    goto LABEL_52;
  }
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
  return result;
}

uint64_t sub_1005E5008()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLAssetUploadTracker()
{
  return self;
}

uint64_t sub_1005E507C()
{
  return sub_1005E42B4(v0);
}

uint64_t sub_1005E5084(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005E5094()
{
  return swift_release();
}

uint64_t sub_1005E509C()
{
  return sub_1005E51BC((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease, 48);
}

uint64_t sub_1005E50CC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528488;
  return sub_1005E43E8(a1, v4, v5, v7, v6);
}

uint64_t sub_1005E518C()
{
  return sub_1005E51BC((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_unknownObjectRelease, 56);
}

uint64_t sub_1005E51BC(void (*a1)(void), void (*a2)(void), uint64_t a3)
{
  swift_unknownObjectRelease();
  a1(*(void *)(v3 + 32));
  a2(*(void *)(v3 + 40));

  return _swift_deallocObject(v3, a3, 7);
}

uint64_t sub_1005E5228(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_1005E47EC(a1, v4, v5, v6, v7);
}

uint64_t sub_1005E52F0(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005E5350()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005E538C()
{
  return sub_1005E3EA0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1005E5398()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005E53D8()
{
  return sub_1005E3A88(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1005E53E0()
{
  sub_1005E38E4(v0);
}

uint64_t sub_1005E53E8()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = v3 | v7 | 7;
  unint64_t v10 = ((*(void *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_bridgeObjectRelease();
  unint64_t v11 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v11(v0 + v4, v1);
  v11(v0 + v8, v1);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v10, v9);
}

uint64_t sub_1005E5564()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1005E316C(v6, v0 + v2, v0 + v5, v7);
}

uint64_t sub_1005E5680(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void (**)(char *))(a1 + 32);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v7(v6);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_1005E5774@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_userDefaults);
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 objectForKey:v4];

  if (v5)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_10052E248((uint64_t)v10, (uint64_t)v11);
  if (v12)
  {
    uint64_t v6 = type metadata accessor for Date();
    int v7 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, v7 ^ 1u, 1, v6);
  }
  else
  {
    sub_100522F00((uint64_t)v11, &qword_101672BF0);
    uint64_t v9 = type metadata accessor for Date();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
}

uint64_t sub_1005E58D8()
{
  if (qword_10166FA48 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = (id)static OS_os_log.crlAnalytics;
  uint64_t v2 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v1, (uint64_t)&_mh_execute_header, v2, (uint64_t)"Retrieving userID value from iCloud KVS", 39, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvs);
  if (!v3) {
    return 0;
  }
  id v4 = v3;
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 stringForKey:v5];

  if (!v6) {
    return 0;
  }
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v7;
}

uint64_t sub_1005E5A1C@<X0>(uint64_t a1@<X8>)
{
  if (qword_10166FA48 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v3 = (id)static OS_os_log.crlAnalytics;
  uint64_t v4 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v4, (uint64_t)"Retrieving lastUserIDRotationDate value from iCloud KVS", 55, 2, (uint64_t)_swiftEmptyArrayStorage);

  NSString v5 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvs);
  if (v5)
  {
    id v6 = v5;
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v6 objectForKey:v7];

    if (v8)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v13, 0, sizeof(v13));
    }
    sub_10052E248((uint64_t)v13, (uint64_t)&v14);
    if (*((void *)&v15 + 1))
    {
      uint64_t v9 = type metadata accessor for Date();
      int v10 = swift_dynamicCast();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, v10 ^ 1u, 1, v9);
    }
  }
  else
  {
    long long v14 = 0u;
    long long v15 = 0u;
  }
  sub_100522F00((uint64_t)&v14, &qword_101672BF0);
  uint64_t v12 = type metadata accessor for Date();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a1, 1, 1, v12);
}

uint64_t CRLAnalyticsDataStore.supportsEndToEndEncryption.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_supportsEndToEndEncryption);
  swift_beginAccess();
  return *v1;
}

char *CRLAnalyticsDataStore.__allocating_init(queue:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return CRLAnalyticsDataStore.init(queue:)(a1);
}

char *CRLAnalyticsDataStore.init(queue:)(void *a1)
{
  v1[OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_supportsEndToEndEncryption] = 0;
  uint64_t v3 = OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_userDefaults;
  uint64_t v4 = self;
  NSString v5 = v1;
  *(void *)&v1[v3] = [v4 standardUserDefaults];
  *(void *)&v5[OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvs] = 0;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvsSetAttempts] = 0;
  id v6 = &v5[OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_lastSeenUserID];
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0;
  NSString v7 = &v5[OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_lastSeenUserIDRotationDate];
  uint64_t v8 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);

  v38.receiver = v5;
  v38.super_class = (Class)type metadata accessor for CRLAnalyticsDataStore();
  [super init];
  int v10 = self;
  unint64_t v11 = (char *)v9;
  id v12 = [v10 crl_encryptedKVS];
  uint64_t v13 = OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvs;
  long long v14 = *(void **)&v11[OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvs];
  *(void *)&v11[OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvs] = v12;

  if (*(void *)&v11[v13])
  {
    long long v15 = self;
    id v16 = [v15 defaultCenter];
    int64_t v17 = *(void **)&v11[v13];
    uint64_t v31 = a1;
    uint64_t v18 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v36 = sub_1005E859C;
    uint64_t v37 = v18;
    aBlock = _NSConcreteStackBlock;
    uint64_t v33 = *(void *)"";
    uint64_t v34 = sub_1005E5680;
    uint64_t v35 = &unk_10150A638;
    uint64_t v19 = _Block_copy(&aBlock);
    id v20 = v17;
    id v21 = v31;
    swift_release();
    id v22 = [v16 addObserverForName:NSUbiquitousKeyValueStoreDidChangeExternallyNotification object:v20 queue:v21 usingBlock:v19];
    _Block_release(v19);
    swift_unknownObjectRelease();

    id v23 = [v15 defaultCenter];
    uint64_t v24 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v36 = sub_1005E85BC;
    uint64_t v37 = v24;
    aBlock = _NSConcreteStackBlock;
    uint64_t v33 = *(void *)"";
    uint64_t v34 = sub_1005E5680;
    uint64_t v35 = &unk_10150A660;
    int64_t v25 = _Block_copy(&aBlock);
    id v26 = v21;
    swift_release();
    id v27 = [v23 addObserverForName:CKAccountChangedNotification object:0 queue:v26 usingBlock:v25];
    _Block_release(v25);
    swift_unknownObjectRelease();

    a1 = v31;
    sub_1005E7E98();
    sub_1005E650C(0);
  }
  else
  {
    if (qword_10166FA48 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v28 = (id)static OS_os_log.crlAnalytics;
    uint64_t v29 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v28, (uint64_t)&_mh_execute_header, v29, (uint64_t)"Unable to initialize CRLAnalyticsDataStore due to nil iCloud KVS Store", 70, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
  return v11;
}

uint64_t type metadata accessor for CRLAnalyticsDataStore()
{
  uint64_t result = qword_1016758B0;
  if (!qword_1016758B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005E6138()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1005E703C();
  }
}

void sub_1005E6194()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1005E7E98();
  }
}

id CRLAnalyticsDataStore.__deallocating_deinit()
{
  uint64_t v1 = self;
  id v2 = [v1 defaultCenter];
  [v2 removeObserver:v0 name:NSUbiquitousKeyValueStoreDidChangeExternallyNotification object:*(void *)&v0[OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvs]];

  id v3 = [v1 defaultCenter];
  [v3 removeObserver:v0 name:CKAccountChangedNotification object:0];

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for CRLAnalyticsDataStore();
  return [super dealloc];
}

void sub_1005E6358()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvs);
  if (v1)
  {
    uint64_t v2 = qword_10166FA48;
    id v3 = v1;
    if (v2 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v4 = (id)static OS_os_log.crlAnalytics;
    uint64_t v5 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v5, (uint64_t)"Synchronizing iCloud KVS", 24, 2, (uint64_t)_swiftEmptyArrayStorage);

    if (([v3 synchronize] & 1) == 0)
    {
      id v6 = (id)static OS_os_log.crlAnalytics;
      uint64_t v7 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Unable to synchronize iCloud KVS", 32, 2, (uint64_t)_swiftEmptyArrayStorage);
    }
  }
  else
  {
    if (qword_10166FA48 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v3 = (id)static OS_os_log.crlAnalytics;
    uint64_t v8 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Unable synchronize due to nil iCloud KVS Store", 46, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
}

void sub_1005E650C(char a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v3 - 8, v4);
  id v6 = &v32[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7, v8);
  int v10 = &v32[-v9];
  __chkstk_darwin(v11, v12);
  long long v14 = &v32[-v13];
  sub_1005E6358();
  long long v15 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_userDefaults);
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v15 stringForKey:v16];

  if (!v17
    || (v17,
        sub_1005E5774((uint64_t)v14),
        uint64_t v18 = type metadata accessor for Date(),
        int v19 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v14, 1, v18),
        sub_100522F00((uint64_t)v14, &qword_101672EB0),
        v19 == 1))
  {
    sub_1005E6834(0);
  }
  sub_1005E58D8();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (!v21
    || (sub_1005E5A1C((uint64_t)v10),
        uint64_t v22 = type metadata accessor for Date(),
        int v23 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v10, 1, v22),
        sub_100522F00((uint64_t)v10, &qword_101672EB0),
        v23 == 1))
  {
    sub_1005E6834(2u);
  }
  uint64_t v24 = (unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_supportsEndToEndEncryption);
  swift_beginAccess();
  if ((*v24 & 1) == 0)
  {
    int64_t v25 = (void *)(v1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_lastSeenUserID);
    *int64_t v25 = 0;
    v25[1] = 0;
    swift_bridgeObjectRelease();
    uint64_t v26 = type metadata accessor for Date();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v6, 1, 1, v26);
    uint64_t v27 = v1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_lastSeenUserIDRotationDate;
    swift_beginAccess();
    sub_1005E8B94((uint64_t)v6, v27);
    swift_endAccess();
  }
  sub_1005E6DE0();
  if (a1) {
    sub_1005E76AC();
  }
  if (*v24 == 1)
  {
    uint64_t v28 = sub_1005E58D8();
    uint64_t v29 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_lastSeenUserID);
    *uint64_t v29 = v28;
    v29[1] = v30;
    swift_bridgeObjectRelease();
    sub_1005E5A1C((uint64_t)v6);
    uint64_t v31 = v1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_lastSeenUserIDRotationDate;
    swift_beginAccess();
    sub_1005E8B94((uint64_t)v6, v31);
    swift_endAccess();
  }
}

uint64_t sub_1005E6834(unsigned __int8 a1)
{
  unsigned int v1 = a1;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  id v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  uint64_t v12 = UUID.uuidString.getter();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  Date.init()();
  long long v15 = (void (**)(uint64_t *, char *, uint64_t))(v3 + 16);
  uint64_t v21 = &type metadata for String;
  v20[0] = v12;
  v20[1] = v14;
  if (v1 > 1)
  {
    sub_1005E6A9C((uint64_t)v20, 2u);
    sub_100522F00((uint64_t)v20, &qword_101672BF0);
    uint64_t v21 = (void *)v2;
    uint64_t v18 = sub_1005767BC(v20);
    (*v15)(v18, v6, v2);
    unsigned __int8 v17 = 3;
  }
  else
  {
    sub_1005E6A9C((uint64_t)v20, 0);
    sub_100522F00((uint64_t)v20, &qword_101672BF0);
    uint64_t v21 = (void *)v2;
    NSString v16 = sub_1005767BC(v20);
    (*v15)(v16, v6, v2);
    unsigned __int8 v17 = 1;
  }
  sub_1005E6A9C((uint64_t)v20, v17);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return sub_100522F00((uint64_t)v20, &qword_101672BF0);
}

void sub_1005E6A9C(uint64_t a1, unsigned __int8 a2)
{
  sub_100522E9C(a1, (uint64_t)&v19, &qword_101672BF0);
  if (v20)
  {
    sub_100575CE8(&v19, &v21);
    if (a2 > 1u)
    {
      if (qword_10166FA48 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v9 = (void *)static OS_os_log.crlAnalytics;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      uint64_t v11 = inited;
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      if (a2 == 3) {
        unint64_t v12 = 0xD00000000000002BLL;
      }
      else {
        unint64_t v12 = 0xD00000000000001BLL;
      }
      if (a2 == 3) {
        unint64_t v13 = 0x800000010123EC60;
      }
      else {
        unint64_t v13 = 0x800000010123EC90;
      }
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(v11 + 32) = v12;
      *(void *)(v11 + 40) = v13;
      id v14 = v9;
      uint64_t v15 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v15, (uint64_t)"Setting value in iCloud KVS for key: %@", 39, 2, v11);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      NSString v16 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvs);
      if (!v16) {
        goto LABEL_18;
      }
      sub_10050F848(&v21, v22);
      id v17 = v16;
      uint64_t v18 = _bridgeAnythingToObjectiveC<A>(_:)();
      NSString v6 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v17 setObject:v18 forKey:v6];
    }
    else
    {
      uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_userDefaults);
      sub_10050F848(&v21, v22);
      uint64_t v5 = _bridgeAnythingToObjectiveC<A>(_:)();
      NSString v6 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v4 setObject:v5 forKey:v6];
    }
    swift_unknownObjectRelease();

LABEL_18:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v21);
    return;
  }
  sub_100522F00((uint64_t)&v19, &qword_101672BF0);
  if (qword_10166FA48 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v7 = (id)static OS_os_log.crlAnalytics;
  uint64_t v8 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Attempted to set nil value in data store", 40, 2, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_1005E6DE0()
{
  uint64_t v0 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  id v7 = (char *)&v19 - v6;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  unint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  NSString v16 = (char *)&v19 - v15;
  sub_1005E5774((uint64_t)v7);
  id v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v17(v7, 1, v8) == 1)
  {
    sub_100522F00((uint64_t)v7, &qword_101672EB0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v16, v7, v8);
    if (sub_1005E8794((uint64_t)v16)) {
      sub_1005E6834(0);
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
  }
  sub_1005E5A1C((uint64_t)v3);
  if (v17(v3, 1, v8) == 1) {
    return sub_100522F00((uint64_t)v3, &qword_101672EB0);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v3, v8);
  if (sub_1005E8794((uint64_t)v12)) {
    sub_1005E6834(2u);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

void sub_1005E703C()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (!v0)
  {
    long long v11 = 0u;
    long long v12 = 0u;
LABEL_13:
    sub_100522F00((uint64_t)&v11, &qword_101672BF0);
    goto LABEL_14;
  }
  uint64_t v1 = v0;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v1 + 16) && (unint64_t v2 = sub_10095647C((uint64_t)v10), (v3 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)v10);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_13;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_14:
    if (qword_10166FA48 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v5 = (void *)static OS_os_log.crlAnalytics;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v7 = v5;
    Class isa = Notification._bridgeToObjectiveC()().super.isa;
    *(void *)(inited + 56) = sub_10050BF48(0, &qword_1016758C0);
    *(void *)(inited + 64) = sub_1005E8BFC((unint64_t *)&qword_1016758C8, &qword_1016758C0);
    *(void *)(inited + 32) = isa;
    uint64_t v9 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Unable to get NSUbiquitousKeyValueStoreChangeReasonKey from notification: %@", 76, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    return;
  }
  if (v10[0] < 2uLL)
  {
    char v4 = 1;
    goto LABEL_19;
  }
  if (v10[0] == 2)
  {
    sub_1005E7384();
  }
  else if (v10[0] == 3)
  {
    char v4 = 0;
LABEL_19:
    sub_1005E650C(v4);
  }
}

void sub_1005E7384()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvsSetAttempts;
  if (*(uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvsSetAttempts) <= 2)
  {
    if (qword_10166FA48 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v7 = (id)static OS_os_log.crlAnalytics;
    uint64_t v8 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Setting user ID values in iCloud KVS after quota violation", 58, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t v9 = OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvs;
    uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvs);
    if (v10)
    {
      id v11 = v10;
      sub_1005E58D8();
      if (v12)
      {
        NSString v13 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v13 = 0;
      }
      NSString v14 = String._bridgeToObjectiveC()();
      [v11 setString:v13 forKey:v14];

      uint64_t v15 = *(void **)(v1 + v9);
      if (v15)
      {
        id v16 = v15;
        sub_1005E5A1C((uint64_t)v5);
        uint64_t v17 = type metadata accessor for Date();
        uint64_t v18 = *(void *)(v17 - 8);
        Class isa = 0;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v5, 1, v17) != 1)
        {
          Class isa = Date._bridgeToObjectiveC()().super.isa;
          (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v17);
        }
        NSString v20 = String._bridgeToObjectiveC()();
        [v16 setObject:isa forKey:v20];

        swift_unknownObjectRelease();
      }
    }
    uint64_t v21 = *(void *)(v1 + v6);
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22)
    {
      __break(1u);
      return;
    }
    *(void *)(v1 + v6) = v23;
  }
  id v24 = [self defaultCenter];
  if (qword_10166ED28 != -1) {
    swift_once();
  }
  [v24 postNotificationName:qword_10171A0D0 object:v1 userInfo:0];
}

void sub_1005E76AC()
{
  sub_1005E58D8();
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_lastSeenUserID + 8);
    if (!v2) {
      goto LABEL_9;
    }
    uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_lastSeenUserID);
    swift_bridgeObjectRetain();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v5 = String._bridgeToObjectiveC()();
    unsigned __int8 v6 = [v4 isEqual:v5];

    if (v6) {
      goto LABEL_9;
    }
    if (sub_1005E78C4())
    {
      id v7 = [self defaultCenter];
      if (qword_10166ED20 != -1) {
        swift_once();
      }
      uint64_t v8 = qword_10171A0C8;
      sub_1005057FC(&qword_101677430);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      AnyHashable.init<A>(_:)();
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 72) = v3;
      *(void *)(inited + 80) = v2;
      sub_100A393A8(inited);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v7 postNotificationName:v8 object:v0 userInfo:isa];
    }
    else
    {
LABEL_9:
      swift_bridgeObjectRelease();
    }
  }
}

BOOL sub_1005E78C4()
{
  uint64_t v1 = type metadata accessor for Calendar();
  uint64_t v52 = *(void *)(v1 - 8);
  uint64_t v53 = v1;
  __chkstk_darwin(v1, v2);
  int64_t v51 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DateComponents();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  int64_t v54 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v8 - 8, v9);
  id v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v48 - v14;
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v55 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v48 - v22;
  sub_1005E5A1C((uint64_t)v15);
  id v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v24(v15, 1, v16) == 1)
  {
    sub_100522F00((uint64_t)v15, &qword_101672EB0);
  }
  else
  {
    uint64_t v49 = v5;
    uint64_t v50 = v4;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v25(v23, v15, v16);
    uint64_t v26 = v0 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_lastSeenUserIDRotationDate;
    swift_beginAccess();
    sub_100522E9C(v26, (uint64_t)v11, &qword_101672EB0);
    if (v24(v11, 1, v16) == 1)
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v23, v16);
      sub_100522F00((uint64_t)v11, &qword_101672EB0);
    }
    else
    {
      v25(v55, v11, v16);
      uint64_t v27 = v51;
      static Calendar.current.getter();
      sub_1005057FC(&qword_101672F48);
      uint64_t v28 = type metadata accessor for Calendar.Component();
      uint64_t v29 = *(void *)(v28 - 8);
      uint64_t v30 = *(void *)(v29 + 72);
      unint64_t v31 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_10117D8C0;
      uint64_t v33 = *(void (**)(unint64_t, void, uint64_t))(v29 + 104);
      v33(v32 + v31, enum case for Calendar.Component.year(_:), v28);
      v33(v32 + v31 + v30, enum case for Calendar.Component.month(_:), v28);
      sub_100508274(v32);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      uint64_t v34 = v54;
      Calendar.dateComponents(_:from:to:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v27, v53);
      uint64_t v35 = DateComponents.year.getter();
      if ((v36 & 1) == 0)
      {
        uint64_t v37 = v35;
        uint64_t v38 = DateComponents.month.getter();
        if ((v39 & 1) == 0)
        {
          uint64_t v40 = v38;
          (*(void (**)(char *, uint64_t))(v49 + 8))(v34, v50);
          uint64_t v41 = *(void (**)(char *, uint64_t))(v17 + 8);
          v41(v55, v16);
          v41(v23, v16);
          return (v37 | v40) == 0;
        }
      }
      uint64_t v44 = v49;
      uint64_t v43 = v50;
      if (qword_10166FA48 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v45 = (id)static OS_os_log.crlAnalytics;
      uint64_t v46 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v45, (uint64_t)&_mh_execute_header, v46, (uint64_t)"Unable to generate date components for ID conflict check", 56, 2, (uint64_t)_swiftEmptyArrayStorage);

      (*(void (**)(char *, uint64_t))(v44 + 8))(v34, v43);
      uint64_t v47 = *(void (**)(char *, uint64_t))(v17 + 8);
      v47(v55, v16);
      v47(v23, v16);
    }
  }
  return 0;
}

void sub_1005E7E98()
{
  if (qword_10166EE68 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_10171A488;
  if ([(id)qword_10171A488 respondsToSelector:"accountInfoWithCompletionHandler:"])
  {
    if (qword_10166FA48 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v2 = (void *)static OS_os_log.crlAnalytics;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = sub_10050BF48(0, &qword_1016758D0);
    *(void *)(inited + 64) = sub_1005E8BFC(&qword_101693FA0, &qword_1016758D0);
    *(void *)(inited + 32) = v1;
    id v4 = v2;
    id v5 = v1;
    uint64_t v6 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v6, (uint64_t)"Retrieving CloudKit account info from container: %@", 51, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v0;
    v10[4] = sub_1005E8C84;
    void v10[5] = v7;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = *(void *)"";
    _OWORD v10[2] = sub_100AC1C00;
    void v10[3] = &unk_10150A6C0;
    uint64_t v8 = _Block_copy(v10);
    id v9 = v0;
    swift_release();
    [v5 accountInfoWithCompletionHandler:v8];
    _Block_release(v8);
  }
}

void sub_1005E80E8(void *a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    swift_errorRetain();
    if (qword_10166FA48 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v5 = (void *)static OS_os_log.crlAnalytics;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v7 = v5;
    uint64_t v8 = _convertErrorToNSError(_:)();
    *(void *)(inited + 56) = sub_10050BF48(0, (unint64_t *)&qword_10168D3C0);
    *(void *)(inited + 64) = sub_1005E8BFC((unint64_t *)&qword_10169ABB0, (unint64_t *)&qword_10168D3C0);
    *(void *)(inited + 32) = v8;
    uint64_t v9 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Error retrieving CloudKit account info: %@", 42, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    swift_errorRelease();
  }
  if (a1)
  {
    id v10 = a1;
    if ([v10 respondsToSelector:"supportsDeviceToDeviceEncryption"])
    {
      id v11 = (unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_supportsEndToEndEncryption);
      swift_beginAccess();
      int v12 = *v11;
      if (v12 != [v10 supportsDeviceToDeviceEncryption])
      {
        *id v11 = [v10 supportsDeviceToDeviceEncryption];
        sub_1005E650C(0);
        id v13 = [self defaultCenter];
        if (qword_10166ED30 != -1) {
          swift_once();
        }
        [v13 postNotificationName:qword_10171A0D8 object:a3 userInfo:0];
      }
    }
  }
  else
  {
    if (qword_10166FA48 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v10 = (id)static OS_os_log.crlAnalytics;
    uint64_t v14 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v10, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Unable to retrieve CloudKit account info", 40, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
}

id CRLDeviceManagementRestrictionsManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

void CRLAnalyticsDataStore.init()()
{
}

NSString sub_1005E84BC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A0C8 = (uint64_t)result;
  return result;
}

NSString sub_1005E84F4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A0D0 = (uint64_t)result;
  return result;
}

NSString sub_1005E852C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A0D8 = (uint64_t)result;
  return result;
}

uint64_t sub_1005E8564()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1005E859C()
{
}

uint64_t sub_1005E85A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005E85B4()
{
  return swift_release();
}

void sub_1005E85BC()
{
}

uint64_t sub_1005E85C4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_supportsEndToEndEncryption);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1005E8618(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_supportsEndToEndEncryption);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t sub_1005E8668()
{
  return type metadata accessor for CRLAnalyticsDataStore();
}

void sub_1005E8670()
{
  sub_1005E873C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1005E873C()
{
  if (!qword_101685FF0)
  {
    type metadata accessor for Date();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101685FF0);
    }
  }
}

BOOL sub_1005E8794(uint64_t a1)
{
  uint64_t v40 = a1;
  uint64_t v41 = type metadata accessor for Date();
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41, v1);
  char v36 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Calendar();
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DateComponents();
  uint64_t v35 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  id v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v34 - v13;
  static Calendar.current.getter();
  sub_1005057FC(&qword_101672F48);
  uint64_t v15 = type metadata accessor for Calendar.Component();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_10117D8C0;
  unint64_t v20 = v19 + v18;
  uint64_t v21 = *(void (**)(unint64_t, void, uint64_t))(v16 + 104);
  v21(v20, enum case for Calendar.Component.year(_:), v15);
  v21(v20 + v17, enum case for Calendar.Component.month(_:), v15);
  uint64_t v22 = v7;
  uint64_t v23 = v35;
  sub_100508274(v19);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  id v24 = v36;
  Date.init()();
  Calendar.dateComponents(_:from:to:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v41);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v38);
  uint64_t v25 = DateComponents.year.getter();
  LOBYTE(v16) = v26;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v10, v14, v22);
  if ((v16 & 1) != 0 || v25 < 1)
  {
    uint64_t v29 = DateComponents.month.getter();
    char v31 = v30;
    uint64_t v32 = *(void (**)(char *, uint64_t))(v23 + 8);
    v32(v10, v22);
    v32(v14, v22);
    return (v31 & 1) == 0 && v29 > 0;
  }
  else
  {
    uint64_t v27 = *(void (**)(char *, uint64_t))(v23 + 8);
    v27(v10, v22);
    v27(v14, v22);
    return 1;
  }
}

uint64_t sub_1005E8B94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672EB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005E8BFC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10050BF48(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005E8C4C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1005E8C84(void *a1, uint64_t a2)
{
  sub_1005E80E8(a1, a2, *(void *)(v2 + 16));
}

double initializeWithCopy for CRLLayerTransformBy2DTranslationTransition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&double result = sub_1005E8D5C(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakCopyInit).n128_u64[0];
  return result;
}

__n128 assignWithCopy for CRLLayerTransformBy2DTranslationTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_unknownObjectWeakCopyAssign();
  *(void *)(v3 + 8) = *(void *)(a2 + 8);
  *(void *)(v3 + 16) = *(void *)(a2 + 16);
  *(void *)(v3 + 24) = *(void *)(a2 + 24);
  *(void *)(v3 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(v3 + 40) = *(_OWORD *)(a2 + 40);
  long long v4 = *(_OWORD *)(a2 + 56);
  long long v5 = *(_OWORD *)(a2 + 72);
  long long v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(v3 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(v3 + 88) = v6;
  *(_OWORD *)(v3 + 72) = v5;
  *(_OWORD *)(v3 + 56) = v4;
  __n128 result = *(__n128 *)(a2 + 120);
  long long v8 = *(_OWORD *)(a2 + 136);
  long long v9 = *(_OWORD *)(a2 + 152);
  *(unsigned char *)(v3 + 168) = *(unsigned char *)(a2 + 168);
  *(_OWORD *)(v3 + 152) = v9;
  *(_OWORD *)(v3 + 136) = v8;
  *(__n128 *)(v3 + 120) = result;
  return result;
}

double initializeWithTake for CRLLayerTransformBy2DTranslationTransition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&double result = sub_1005E8D5C(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakTakeInit).n128_u64[0];
  return result;
}

__n128 sub_1005E8D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5 = a4();
  *(_OWORD *)(v5 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(v5 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(v5 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(v5 + 152) = *(_OWORD *)(a2 + 152);
  *(unsigned char *)(v5 + 168) = *(unsigned char *)(a2 + 168);
  *(_OWORD *)(v5 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(v5 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(v5 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(v5 + 104) = *(_OWORD *)(a2 + 104);
  __n128 result = *(__n128 *)(a2 + 40);
  *(__n128 *)(v5 + 40) = result;
  return result;
}

__n128 assignWithTake for CRLLayerTransformBy2DTranslationTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_unknownObjectWeakTakeAssign();
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v3 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(v3 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(v3 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(v3 + 152) = *(_OWORD *)(a2 + 152);
  *(unsigned char *)(v3 + 168) = *(unsigned char *)(a2 + 168);
  *(_OWORD *)(v3 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(v3 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(v3 + 104) = *(_OWORD *)(a2 + 104);
  __n128 result = *(__n128 *)(a2 + 40);
  *(__n128 *)(v3 + 40) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CRLLayerTransformBy2DTranslationTransition(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 169)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CRLLayerTransformBy2DTranslationTransition(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 168) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 169) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CRLLayerTransformBy2DTranslationTransition()
{
  return &type metadata for CRLLayerTransformBy2DTranslationTransition;
}

void sub_1005E8EE0(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_1005E9324((uint64_t)(v2 + 5), (uint64_t)v51);
    sub_1005E9324((uint64_t)v51, (uint64_t)v52);
    if (sub_1005E938C((uint64_t)v52) == 1) {
      [v5 transform];
    }
    else {
      sub_1005E9324((uint64_t)v51, (uint64_t)&v48);
    }
    CGFloat m11 = v48.m11;
    CGFloat m12 = v48.m12;
    CGFloat m13 = v48.m13;
    CGFloat m14 = v48.m14;
    CGFloat m21 = v48.m21;
    CGFloat m22 = v48.m22;
    CGFloat m23 = v48.m23;
    CGFloat m24 = v48.m24;
    CGFloat m31 = v48.m31;
    CGFloat m32 = v48.m32;
    CGFloat m33 = v48.m33;
    CGFloat m34 = v48.m34;
    CGFloat m41 = v48.m41;
    CGFloat m42 = v48.m42;
    CGFloat m43 = v48.m43;
    CGFloat m44 = v48.m44;
    CATransform3DTranslate(&v50, &v48, v2[1], v2[2], 1.0);
    long long v46 = *(_OWORD *)&v50.m13;
    long long v47 = *(_OWORD *)&v50.m11;
    long long v44 = *(_OWORD *)&v50.m23;
    long long v45 = *(_OWORD *)&v50.m21;
    long long v42 = *(_OWORD *)&v50.m33;
    long long v43 = *(_OWORD *)&v50.m31;
    long long v41 = *(_OWORD *)&v50.m41;
    CGFloat v39 = v50.m44;
    CGFloat v40 = v50.m43;
    CGFloat v14 = v2[3];
    CGFloat v15 = v2[4];
    v48.CGFloat m11 = m11;
    v48.CGFloat m12 = m12;
    v48.CGFloat m13 = m13;
    v48.CGFloat m14 = m14;
    v48.CGFloat m21 = m21;
    v48.CGFloat m22 = m22;
    v48.CGFloat m23 = m23;
    v48.CGFloat m24 = m24;
    v48.CGFloat m31 = m31;
    v48.CGFloat m32 = m32;
    v48.CGFloat m33 = m33;
    v48.CGFloat m34 = m34;
    v48.CGFloat m41 = m41;
    v48.CGFloat m42 = m42;
    v48.CGFloat m43 = m43;
    v48.CGFloat m44 = m44;
    CATransform3DTranslate(&v50, &v48, v14, v15, 1.0);
    long long v36 = *(_OWORD *)&v50.m13;
    long long v38 = *(_OWORD *)&v50.m11;
    long long v32 = *(_OWORD *)&v50.m23;
    long long v34 = *(_OWORD *)&v50.m21;
    long long v28 = *(_OWORD *)&v50.m33;
    long long v30 = *(_OWORD *)&v50.m31;
    long long v26 = *(_OWORD *)&v50.m41;
    CGFloat v16 = v50.m43;
    CGFloat v17 = v50.m44;
    type metadata accessor for CATransform3D(0);
    CGFloat v19 = v18;
    v50.CGFloat m14 = v18;
    uint64_t v20 = swift_allocObject();
    *(CGFloat *)&v49[3] = v19;
    *(void *)&v50.CGFloat m11 = v20;
    *(_OWORD *)(v20 + 16) = v47;
    *(_OWORD *)(v20 + 32) = v46;
    *(_OWORD *)(v20 + 48) = v45;
    *(_OWORD *)(v20 + 64) = v44;
    *(_OWORD *)(v20 + 80) = v43;
    *(_OWORD *)(v20 + 96) = v42;
    *(_OWORD *)(v20 + 112) = v41;
    *(CGFloat *)(v20 + 128) = v40;
    *(CGFloat *)(v20 + 136) = v39;
    uint64_t v21 = swift_allocObject();
    v49[0] = v21;
    *(_OWORD *)(v21 + 16) = v38;
    *(_OWORD *)(v21 + 32) = v36;
    *(_OWORD *)(v21 + 48) = v34;
    *(_OWORD *)(v21 + 64) = v32;
    *(_OWORD *)(v21 + 80) = v30;
    *(_OWORD *)(v21 + 96) = v28;
    *(_OWORD *)(v21 + 112) = v26;
    *(CGFloat *)(v21 + 128) = v16;
    *(CGFloat *)(v21 + 136) = v17;
    memset(&v48, 0, 64);
    LOBYTE(v48.m31) = 26;
    v48.CGFloat m32 = 1.67501583e243;
    v48.CGFloat m33 = -5.98008217e197;
    sub_1005E93B8((uint64_t)&v50, (uint64_t)&v48);
    sub_1005E93B8((uint64_t)v49, (uint64_t)&v48.m21);
    long long v22 = *(_OWORD *)&v48.m23;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)&v48.m21;
    *(_OWORD *)(a1 + 48) = v22;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)&v48.m31;
    *(CGFloat *)(a1 + 80) = v48.m33;
    long long v23 = *(_OWORD *)&v48.m13;
    *(_OWORD *)a1 = *(_OWORD *)&v48.m11;
    *(_OWORD *)(a1 + 16) = v23;
  }
  else
  {
    *(void *)(a1 + 80) = 0;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
}

__n128 sub_1005E91FC@<Q0>(uint64_t a1@<X8>)
{
  long long v10 = *(_OWORD *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  sub_1005E9324(v1 + 40, (uint64_t)v11);
  long long v12 = v10;
  *(void *)&long long v13 = v3;
  *((void *)&v13 + 1) = v4;
  sub_1005E9324((uint64_t)v11, (uint64_t)v14);
  long long v5 = v14[7];
  *(_OWORD *)(a1 + 128) = v14[6];
  *(_OWORD *)(a1 + 144) = v5;
  *(unsigned char *)(a1 + 160) = v15;
  long long v6 = v14[3];
  *(_OWORD *)(a1 + 64) = v14[2];
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = v14[5];
  *(_OWORD *)(a1 + 96) = v14[4];
  *(_OWORD *)(a1 + 112) = v7;
  long long v8 = v13;
  *(_OWORD *)a1 = v12;
  *(_OWORD *)(a1 + 16) = v8;
  __n128 result = (__n128)v14[1];
  *(_OWORD *)(a1 + 32) = v14[0];
  *(__n128 *)(a1 + 48) = result;
  *(unsigned char *)(a1 + 256) = 59;
  return result;
}

unint64_t sub_1005E92A8(uint64_t a1)
{
  unint64_t result = sub_1005E92D0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1005E92D0()
{
  unint64_t result = qword_1016758D8;
  if (!qword_1016758D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016758D8);
  }
  return result;
}

uint64_t sub_1005E9324(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_1016758E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005E938C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 128)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1005E93A8()
{
  return _swift_deallocObject(v0, 144, 7);
}

uint64_t sub_1005E93B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672BF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

BOOL sub_1005E9420(uint64_t a1, uint64_t a2)
{
  double v4 = *(double *)(a1 + 8);
  double v5 = *(double *)(a1 + 16);
  double v6 = *(double *)(a2 + 8);
  double v7 = *(double *)(a2 + 16);
  sub_1005E95E8(a1, (uint64_t)v28);
  sub_1005E95E8(a2, (uint64_t)v25);
  if (v4 != v6 || v5 != v7)
  {
    sub_100523398((uint64_t)v25);
    sub_100523398((uint64_t)v28);
LABEL_11:
    sub_1005E95E8(a1, (uint64_t)v23);
    sub_1005E95E8(a2, (uint64_t)v21);
    goto LABEL_12;
  }
  double v10 = v29;
  double v9 = v30;
  sub_100523398((uint64_t)v28);
  double v11 = v26;
  double v12 = v27;
  sub_100523398((uint64_t)v25);
  if (v10 != v11) {
    goto LABEL_11;
  }
  sub_1005E95E8(a1, (uint64_t)v23);
  sub_1005E95E8(a2, (uint64_t)v21);
  if (v9 != v12) {
    goto LABEL_12;
  }
  sub_1005E9324((uint64_t)&v24, (uint64_t)v18);
  sub_1005E9324((uint64_t)&v22, (uint64_t)v19);
  sub_1005E9324((uint64_t)v18, (uint64_t)v20);
  if (sub_1005E938C((uint64_t)v20) != 1)
  {
    sub_1005E9324((uint64_t)v19, (uint64_t)v17);
    if (sub_1005E938C((uint64_t)v17) != 1)
    {
      v16[0] = v20[0];
      v16[1] = v20[1];
      v16[2] = v20[2];
      v16[3] = v20[3];
      v16[4] = v20[4];
      v16[5] = v20[5];
      v16[6] = v20[6];
      v16[7] = v20[7];
      v15[0] = v17[0];
      v15[1] = v17[1];
      v15[2] = v17[2];
      v15[3] = v17[3];
      v15[4] = v17[4];
      v15[5] = v17[5];
      v15[6] = v17[6];
      v15[7] = v17[7];
      BOOL v13 = sub_100080414((double *)v16, (double *)v15, 0.0);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  sub_1005E9324((uint64_t)v19, (uint64_t)v17);
  if (sub_1005E938C((uint64_t)v17) != 1)
  {
LABEL_12:
    BOOL v13 = 0;
    goto LABEL_13;
  }
  BOOL v13 = 1;
LABEL_13:
  sub_100523398((uint64_t)v21);
  sub_100523398((uint64_t)v23);
  return v13;
}

uint64_t sub_1005E95E8(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakCopyInit();
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  long long v4 = *(_OWORD *)(a1 + 72);
  long long v5 = *(_OWORD *)(a1 + 88);
  long long v6 = *(_OWORD *)(a1 + 104);
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 104) = v6;
  *(_OWORD *)(a2 + 88) = v5;
  *(_OWORD *)(a2 + 72) = v4;
  long long v7 = *(_OWORD *)(a1 + 136);
  long long v8 = *(_OWORD *)(a1 + 152);
  char v9 = *(unsigned char *)(a1 + 168);
  *(_OWORD *)(a2 + 120) = *(_OWORD *)(a1 + 120);
  *(unsigned char *)(a2 + 168) = v9;
  *(_OWORD *)(a2 + 152) = v8;
  *(_OWORD *)(a2 + 136) = v7;
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  return a2;
}

id sub_1005E9674()
{
  id result = [self systemBackgroundColor];
  qword_1016758E8 = (uint64_t)result;
  return result;
}

UIContentSizeCategory sub_1005E96B0()
{
  qword_1016758F0 = (uint64_t)UIContentSizeCategoryLarge;
  return UIContentSizeCategoryLarge;
}

UIContentSizeCategory sub_1005E96C8()
{
  qword_1016758F8 = (uint64_t)UIContentSizeCategoryExtraExtraLarge;
  return UIContentSizeCategoryExtraExtraLarge;
}

CALayerCornerCurve sub_1005E96E0()
{
  qword_101675900 = (uint64_t)kCACornerCurveContinuous;
  return kCACornerCurveContinuous;
}

uint64_t sub_1005E96F8()
{
  uint64_t result = sub_1003E86EC();
  uint64_t v1 = 5;
  if (result) {
    uint64_t v1 = 10;
  }
  qword_101675908 = v1;
  return result;
}

id sub_1005E9728()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController____lazy_storage___button;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController____lazy_storage___button);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController____lazy_storage___button);
  }
  else
  {
    id v4 = sub_1005E9788();
    long long v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1005E9788()
{
  id v1 = [objc_allocWithZone((Class)UIButton) init];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [*(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) viewScale];
    swift_unknownObjectRelease();
  }
  id v3 = self;
  Class isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  id v5 = [v3 localizedStringFromNumber:isa numberStyle:3];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setTitle:v6 forState:0];

  long long v7 = self;
  id v8 = [v7 tintColor];
  [v1 setTitleColor:v8 forState:0];

  id v9 = [v7 tintColor];
  id v10 = [v9 colorWithAlphaComponent:0.4];

  [v1 setTitleColor:v10 forState:1];
  id v11 = [v1 titleLabel];
  if (v11)
  {
    double v12 = v11;
    id v13 = sub_1005ECC34();
    [v12 setFont:v13];

    [v12 setTextAlignment:1];
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createButton()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSCanvasZoomControlViewController.swift", 107, 2, 121, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v17) = 2;
    char v15 = "invalid nil found when unwrapping value";
    uint64_t v16 = 39;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createButton()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSCanvasZoomControlViewController.swift", 107, 2, 121);
  }
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0 v15, v16, v17];
  [v1 setMenu:*(void *)(v0 + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu)];
  [v1 setShowsMenuAsPrimaryAction:1];
  [v1 setPreferredMenuElementOrder:2];
  [v1 setPointerInteractionEnabled:1];
  return v1;
}

Class sub_1005E9AA8()
{
  UIMenuElementSize v37 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  uint64_t v0 = self;
  uint64_t v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v35 = (unint64_t)sub_1005ECF5C;
  uint64_t v36 = v1;
  aBlock = _NSConcreteStackBlock;
  uint64_t v32 = *(void *)"";
  uint64_t v33 = sub_100594810;
  long long v34 = (ValueMetadata *)&unk_10150A808;
  uint64_t v2 = _Block_copy(&aBlock);
  swift_release();
  id v3 = [v0 elementWithUncachedProvider:v2];
  _Block_release(v2);
  sub_10050BF48(0, &qword_101673A80);
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_101177E70;
  *(void *)(v4 + 32) = v3;
  aBlock = (void **)v4;
  specialized Array._endMutation()();
  UIMenuElementSize preferredElementSize = (UIMenuElementSize)aBlock;
  id v30 = v3;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v38.value.super.Class isa = 0;
  v38.is_nil = 0;
  long long v7 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v6, (Swift::String_optional)0, v38, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v28).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v35 = (unint64_t)sub_1005ECF7C;
  uint64_t v36 = v8;
  aBlock = _NSConcreteStackBlock;
  uint64_t v32 = *(void *)"";
  uint64_t v33 = sub_100594810;
  long long v34 = (ValueMetadata *)&unk_10150A830;
  id v9 = _Block_copy(&aBlock);
  swift_release();
  id v10 = [v0 elementWithUncachedProvider:v9];
  _Block_release(v9);
  id v11 = v10;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v35 = (unint64_t)sub_1005ECF84;
  uint64_t v36 = v12;
  aBlock = _NSConcreteStackBlock;
  uint64_t v32 = *(void *)"";
  uint64_t v33 = sub_100594810;
  long long v34 = (ValueMetadata *)&unk_10150A858;
  id v13 = _Block_copy(&aBlock);
  swift_release();
  id v14 = [v0 elementWithUncachedProvider:v13];
  _Block_release(v13);
  id v15 = v14;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  long long v34 = &type metadata for CRLFeatureFlags;
  unint64_t v35 = sub_1005396A8();
  LOBYTE(aBlock) = 8;
  char v16 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&aBlock);
  if ((v16 & 1) == 0)
  {
    uint64_t v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    unint64_t v35 = (unint64_t)sub_1005ECF8C;
    uint64_t v36 = v17;
    aBlock = _NSConcreteStackBlock;
    uint64_t v32 = *(void *)"";
    uint64_t v33 = sub_100594810;
    long long v34 = (ValueMetadata *)&unk_10150A880;
    CGFloat v18 = _Block_copy(&aBlock);
    swift_release();
    id v19 = [v0 elementWithUncachedProvider:v18];
    _Block_release(v18);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_101177E70;
    *(void *)(v20 + 32) = v19;
    aBlock = (void **)v20;
    specialized Array._endMutation()();
    UIMenuElementSize v21 = (UIMenuElementSize)aBlock;
    id v22 = v19;
    v23._countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    v39.value.super.Class isa = 0;
    v39.is_nil = 0;
    uint64_t v24 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v23, (Swift::String_optional)0, v39, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v21, v29).super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  v40.value.super.Class isa = 0;
  v40.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v25, (Swift::String_optional)0, v40, 0, 0xFFFFFFFFFFFFFFFFLL, v37, v29).super.super.isa;

  return isa;
}

uint64_t sub_1005EA0AC(uint64_t (*a1)(double *))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return a1(_swiftEmptyArrayStorage);
  }
  id v3 = (char *)Strong;
  uint64_t v4 = Strong + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate;
  uint64_t v5 = swift_unknownObjectWeakLoadStrong();
  if (!v5)
  {

    return a1(_swiftEmptyArrayStorage);
  }
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  uint64_t v8 = (char *)[*(id *)(v5 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) editingCoordinator];
  id v9 = v8;
  if (v8)
  {
    id v10 = *(id *)&v8[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator];

    LOBYTE(v9) = sub_1007E9F6C();
  }
  uint64_t v11 = *(void *)&v3[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_viewScaleDetents];
  uint64_t v12 = _swiftEmptyArrayStorage;
  char v31 = _swiftEmptyArrayStorage;
  uint64_t v13 = *(void *)(v11 + 16);
  if (v13)
  {
    swift_bridgeObjectRetain_n();
    for (uint64_t i = 0; i != v13; ++i)
    {
      uint64_t v30 = *(void *)(v11 + 8 * i + 32);
      sub_1005EA464(&v31, (double *)&v30, v6, v7, v9 & 1);
    }
    swift_bridgeObjectRelease_n();
    uint64_t v12 = v31;
  }
  char v31 = v12;
  if ((v9 & 1) == 0) {
    goto LABEL_13;
  }
  id v15 = [self mainBundle];
  NSString v16 = String._bridgeToObjectiveC()();
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  swift_bridgeObjectRetain();
  id v22 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_1005057FC((uint64_t *)&unk_101672610);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_10117E810;
  *(void *)(v23 + 32) = v19;
  *(void *)(v23 + 40) = v21;
  id v24 = v22;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v24 setAccessibilityUserInputLabels:isa, 0, 0, 1, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0];

  if (!((unint64_t)v12 >> 62))
  {
    id v26 = v24;
LABEL_12:
    sub_100F49780(0, 0, (uint64_t)v24);

    uint64_t v12 = v31;
LABEL_13:
    a1(v12);
    swift_bridgeObjectRelease();

    return swift_unknownObjectRelease();
  }
  id v28 = v24;
  swift_bridgeObjectRetain();
  uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if ((v29 & 0x8000000000000000) == 0) {
    goto LABEL_12;
  }
  __break(1u);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

void sub_1005EA464(void *a1, double *a2, uint64_t a3, uint64_t a4, char a5)
{
  unsigned __int8 v7 = a5 ^ 1;
  double v8 = *a2;
  id v9 = self;
  Class isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  id v11 = [v9 localizedStringFromNumber:isa numberStyle:3];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  [*(id *)(a3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) viewScale];
  uint64_t v13 = (v12 == v8) & v7;
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(double *)(v15 + 24) = v8;
  uint64_t v29 = v15;
  NSString v16 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_1005057FC((uint64_t *)&unk_101672610);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_10117E810;
  double v18 = v8 * 100.0;
  if ((~COERCE__INT64(v8 * 100.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v18 <= -9.22337204e18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v18 >= 9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v19 = v17;
  uint64_t v20 = (uint64_t)v18;
  id v21 = objc_allocWithZone((Class)NSNumber);
  id v22 = v16;
  id v23 = [v21 initWithInteger:v20];
  id v24 = [v9 localizedStringFromNumber:v23 numberStyle:0];

  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v27 = v26;

  *(void *)(v19 + 32) = v25;
  *(void *)(v19 + 40) = v27;
  Class v28 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v22 setAccessibilityUserInputLabels:v28];

  id v9 = v22;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_9:
  }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
}

void sub_1005EA764(double a1)
{
  swift_beginAccess();
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_shouldRefocusZoomButtonUponNextZoomChange] = 1;
  }
  swift_beginAccess();
  uint64_t v3 = swift_unknownObjectWeakLoadStrong();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_100E3AF74(a1);
      sub_1005EC558();

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_1005EA83C(void (*a1)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    uint64_t v4 = Strong + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate;
    uint64_t v5 = swift_unknownObjectWeakLoadStrong();
    uint64_t v6 = *(void *)(v4 + 8);

    if (v5)
    {
      if ([*(id *)(v5 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) hasSelection])
      {
        id v7 = [self mainBundle];
        NSString v8 = String._bridgeToObjectiveC()();
        NSString v9 = String._bridgeToObjectiveC()();
        id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_10050BF48(0, (unint64_t *)&qword_101672600);
        uint64_t v11 = swift_allocObject();
        *(void *)(v11 + 24) = v6;
        swift_unknownObjectWeakInit();
        uint64_t v12 = swift_allocObject();
        swift_beginAccess();
        uint64_t v13 = (void *)swift_unknownObjectWeakLoadStrong();
        swift_unknownObjectWeakInit();

        uint64_t v14 = swift_allocObject();
        *(void *)(v14 + 16) = v12;
        *(void *)(v14 + 24) = v11;
        uint64_t v15 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        sub_1005057FC((uint64_t *)&unk_101676C10);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_101177E70;
        *(void *)(v16 + 32) = v15;
        uint64_t v19 = v16;
        specialized Array._endMutation()();
        id v17 = v15;
        a1(v19);
        swift_unknownObjectRelease();

        return swift_bridgeObjectRelease();
      }
      swift_unknownObjectRelease();
    }
  }
  return ((uint64_t (*)(double *))a1)(_swiftEmptyArrayStorage);
}

uint64_t sub_1005EAB0C(void (*a1)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    uint64_t v4 = Strong + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate;
    uint64_t v5 = swift_unknownObjectWeakLoadStrong();
    uint64_t v6 = *(void *)(v4 + 8);

    if (v5)
    {
      id v7 = (char *)[*(id *)(v5 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) board];
      if (v7)
      {
        NSString v8 = v7;
        NSString v9 = (char *)*(id *)&v7[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];

        uint64_t v10 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
        uint64_t v11 = *(double **)&v9[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
        if (!v11)
        {
          sub_100846AB0();
          uint64_t v11 = *(double **)&v9[v10];
        }
        uint64_t v12 = v11 ? v11 : _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();

        if ((unint64_t)v12 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v13 = *(void *)(((unint64_t)v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        if (v13 >= 1)
        {
          id v14 = [self mainBundle];
          NSString v15 = String._bridgeToObjectiveC()();
          NSString v16 = String._bridgeToObjectiveC()();
          id v17 = [v14 localizedStringForKey:v15 value:v16 table:0];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          sub_10050BF48(0, (unint64_t *)&qword_101672600);
          uint64_t v18 = swift_allocObject();
          *(void *)(v18 + 24) = v6;
          swift_unknownObjectWeakInit();
          uint64_t v19 = swift_allocObject();
          swift_beginAccess();
          uint64_t v20 = (void *)swift_unknownObjectWeakLoadStrong();
          swift_unknownObjectWeakInit();

          uint64_t v21 = swift_allocObject();
          *(void *)(v21 + 16) = v19;
          *(void *)(v21 + 24) = v18;
          id v22 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
          sub_1005057FC((uint64_t *)&unk_101676C10);
          uint64_t v23 = swift_allocObject();
          *(_OWORD *)(v23 + 16) = xmmword_101177E70;
          *(void *)(v23 + 32) = v22;
          uint64_t v26 = v23;
          specialized Array._endMutation()();
          id v24 = v22;
          a1(v26);
          swift_unknownObjectRelease();

          return swift_bridgeObjectRelease();
        }
      }
      swift_unknownObjectRelease();
    }
  }
  return ((uint64_t (*)(double *))a1)(_swiftEmptyArrayStorage);
}

uint64_t sub_1005EAE84(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  swift_beginAccess();
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_shouldRefocusZoomButtonUponNextZoomChange] = 1;
  }
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [*(id *)(result + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) *a4];
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1005EAF34(uint64_t (*a1)(double *))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return a1(_swiftEmptyArrayStorage);
  }
  uint64_t v3 = (void *)Strong;
  uint64_t v4 = swift_unknownObjectWeakLoadStrong();

  if (!v4) {
    return a1(_swiftEmptyArrayStorage);
  }
  id v24 = (void (*)(uint64_t))a1;
  uint64_t v5 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled;
  int v6 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled);
  if (v6 == 2)
  {
    char v23 = sub_100E4EA7C();
    *(unsigned char *)(v4 + v5) = v23 & 1;
  }
  else
  {
    char v23 = v6 & 1;
  }
  NSString v8 = self;
  id v9 = [v8 mainBundle];
  NSString v10 = String._bridgeToObjectiveC()();
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v9 localizedStringForKey:v10 value:v11 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v13 = [v8 mainBundle];
  NSString v14 = String._bridgeToObjectiveC()();
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [v13 localizedStringForKey:v14 value:v15 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRelease();
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v17 = swift_allocObject();
  swift_beginAccess();
  uint64_t v18 = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v17;
  *(unsigned char *)(v19 + 24) = v23 & 1;
  uint64_t v20 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_101177E70;
  *(void *)(v21 + 32) = v20;
  uint64_t v25 = v21;
  specialized Array._endMutation()();
  id v22 = v20;
  v24(v25);
  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_1005EB2AC(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t v6 = swift_unknownObjectWeakLoadStrong();

    if (v6)
    {
      sub_100E4E064((a3 & 1) == 0);
      swift_unknownObjectRelease();
    }
  }
}

void sub_1005EB334()
{
  v71.receiver = v0;
  v71.super_class = (Class)type metadata accessor for CRLiOSCanvasZoomControlViewController();
  [super viewDidLoad];
  Class v1 = sub_1005E9AA8();
  uint64_t v2 = OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu;
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu];
  *(void *)&v0[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu] = v1;

  id v4 = sub_1005E9728();
  id v5 = *(id *)&v0[v2];
  [v4 setMenu:v5];

  id v6 = [v0 view];
  if (!v6)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v7 = v6;
  id v8 = sub_1005E9728();
  [v7 addSubview:v8];

  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [*(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) viewScale];
    swift_unknownObjectRelease();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"viewDidLoad()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSCanvasZoomControlViewController.swift", 107, 2, 247, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"viewDidLoad()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSCanvasZoomControlViewController.swift", 107, 2, 247);
  }
  sub_1005EC558();
  NSString v10 = self;
  id v11 = [v10 defaultCenter];
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v69 = sub_1005ED0A4;
  uint64_t v70 = v12;
  aBlock = _NSConcreteStackBlock;
  uint64_t v66 = *(void *)"";
  unint64_t v67 = sub_1005E5680;
  v68 = &unk_10150A970;
  id v13 = _Block_copy(&aBlock);
  swift_release();
  id v14 = [v11 addObserverForName:@"CRLCanvasUpdateZoomNotification" object:0 queue:0 usingBlock:v13];
  _Block_release(v13);

  *(void *)&v0[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_zoomUpdateObserver] = v14;
  swift_unknownObjectRelease();
  id v15 = [v10 defaultCenter];
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v69 = sub_1005ED0AC;
  uint64_t v70 = v16;
  aBlock = _NSConcreteStackBlock;
  uint64_t v66 = *(void *)"";
  unint64_t v67 = sub_1005E5680;
  v68 = &unk_10150A998;
  uint64_t v17 = _Block_copy(&aBlock);
  swift_release();
  id v18 = [v15 addObserverForName:@"CRLCanvasDidZoomNotification" object:0 queue:0 usingBlock:v17];
  _Block_release(v17);

  *(void *)&v0[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_zoomDidChangeObserver] = v18;
  swift_unknownObjectRelease();
  id v19 = [v10 defaultCenter];
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v69 = sub_1005ED0B4;
  uint64_t v70 = v20;
  aBlock = _NSConcreteStackBlock;
  uint64_t v66 = *(void *)"";
  unint64_t v67 = sub_1005E5680;
  v68 = &unk_10150A9C0;
  uint64_t v21 = _Block_copy(&aBlock);
  swift_release();
  id v22 = [v19 addObserverForName:UIContentSizeCategoryDidChangeNotification object:0 queue:0 usingBlock:v21];
  _Block_release(v21);

  *(void *)&v0[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_contentSizeCategoryChangeObserver] = v22;
  swift_unknownObjectRelease();
  id v23 = sub_1005E9728();
  id v24 = [v23 widthAnchor];

  id v25 = [v24 constraintEqualToConstant:81.0];
  uint64_t v26 = OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonWidthConstraint;
  uint64_t v27 = *(void **)&v0[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonWidthConstraint];
  *(void *)&v0[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonWidthConstraint] = v25;

  id v28 = sub_1005E9728();
  id v29 = [v28 heightAnchor];

  id v30 = [v29 constraintEqualToConstant:44.0];
  uint64_t v31 = OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonHeightConstraint;
  uint64_t v32 = *(void **)&v0[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonHeightConstraint];
  *(void *)&v0[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonHeightConstraint] = v30;

  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_101181A80;
  long long v34 = *(void **)&v0[v26];
  if (!v34) {
    goto LABEL_13;
  }
  unint64_t v35 = (void **)v33;
  *(void *)(v33 + 32) = v34;
  uint64_t v36 = *(void **)&v0[v31];
  if (!v36)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  *(void *)(v33 + 40) = v36;
  id v37 = v34;
  id v38 = v36;
  id v39 = sub_1005E9728();
  id v40 = [v39 topAnchor];

  id v41 = [v0 view];
  if (!v41)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  long long v42 = v41;
  id v43 = [v41 topAnchor];

  id v44 = [v40 constraintEqualToAnchor:v43];
  v35[6] = v44;
  id v45 = sub_1005E9728();
  id v46 = [v45 leadingAnchor];

  id v47 = [v0 view];
  if (!v47)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  CATransform3D v48 = v47;
  id v49 = [v47 leadingAnchor];

  id v50 = [v46 constraintEqualToAnchor:v49];
  v35[7] = v50;
  id v51 = sub_1005E9728();
  id v52 = [v51 trailingAnchor];

  id v53 = [v0 view];
  if (!v53)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  int64_t v54 = v53;
  id v55 = [v53 trailingAnchor];

  id v56 = [v52 constraintEqualToAnchor:v55];
  v35[8] = v56;
  id v57 = sub_1005E9728();
  id v58 = [v57 bottomAnchor];

  id v59 = [v0 view];
  if (v59)
  {
    id v60 = v59;
    uint64_t v61 = self;
    id v62 = [v60 bottomAnchor];

    id v63 = [v58 constraintEqualToAnchor:v62];
    v35[9] = v63;
    aBlock = v35;
    specialized Array._endMutation()();
    sub_10050BF48(0, (unint64_t *)&qword_101674200);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v61 activateConstraints:isa];

    return;
  }
LABEL_18:
  __break(1u);
}

void sub_1005EBB78()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Class v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();
    if (!v2)
    {
LABEL_11:

      return;
    }
    id v3 = *(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
    swift_unknownObjectRelease();
    Notification.object.getter();
    if (v6)
    {
      sub_10050BF48(0, &qword_101675990);
      if (swift_dynamicCast())
      {
        sub_10050BF48(0, (unint64_t *)&qword_101672E50);
        if (static NSObject.== infix(_:_:)())
        {
          [v4 currentViewScale];
          sub_1005EC558();
        }

        Class v1 = v3;
        id v3 = v4;
        goto LABEL_10;
      }
    }
    else
    {
      sub_10052E2B0((uint64_t)v5);
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"viewDidLoad()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSCanvasZoomControlViewController.swift", 107, 2, 253, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"viewDidLoad()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSCanvasZoomControlViewController.swift", 107, 2, 253);
LABEL_10:

    Class v1 = v3;
    goto LABEL_11;
  }
}

void sub_1005EBD58()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Class v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();
    if (v2)
    {
      id v3 = *(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
      swift_unknownObjectRelease();
      Notification.object.getter();
      if (v9)
      {
        sub_10050BF48(0, &qword_101675990);
        if (swift_dynamicCast())
        {
          sub_10050BF48(0, (unint64_t *)&qword_101672E50);
          if ((static NSObject.== infix(_:_:)() & 1) == 0
            || ([v7 currentViewScale],
                sub_1005EC558(),
                uint64_t v4 = OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_shouldRefocusZoomButtonUponNextZoomChange,
                *((unsigned char *)v1
                + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_shouldRefocusZoomButtonUponNextZoomChange) != 1))
          {

            id v3 = v7;
            goto LABEL_12;
          }
          UIAccessibilityNotifications v5 = UIAccessibilityLayoutChangedNotification;
          id v6 = sub_1005E9728();
          UIAccessibilityPostNotification(v5, v6);

          *((unsigned char *)v1 + v4) = 0;
          goto LABEL_8;
        }
      }
      else
      {
        sub_10052E2B0((uint64_t)v8);
      }
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"viewDidLoad()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSCanvasZoomControlViewController.swift", 107, 2, 264, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"viewDidLoad()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSCanvasZoomControlViewController.swift", 107, 2, 264);

      goto LABEL_12;
    }
LABEL_8:
    id v3 = v1;
LABEL_12:
  }
}

void sub_1005EBF84()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Class v1 = (void *)Strong;
    sub_1005EC2C0();
  }
}

void sub_1005EC078()
{
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v2 = v1;
  id v3 = [v1 layer];

  if (qword_10166ED38 != -1) {
    swift_once();
  }
  id v4 = [(id)qword_1016758E8 CGColor];
  [v3 setBackgroundColor:v4];

  id v5 = [v0 view];
  if (!v5) {
    goto LABEL_15;
  }
  id v6 = v5;
  id v7 = [v5 layer];

  [v7 setCornerRadius:10.0];
  id v8 = [v0 view];
  if (!v8)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  uint64_t v9 = v8;
  id v10 = [v8 layer];

  if (qword_10166ED50 != -1) {
    swift_once();
  }
  [v10 setCornerCurve:qword_101675900];

  id v11 = [v0 view];
  if (!v11) {
    goto LABEL_17;
  }
  uint64_t v12 = v11;
  id v13 = [v11 layer];

  if (qword_10166ED58 != -1) {
    swift_once();
  }
  [v13 setMaskedCorners:qword_101675908];
}

void sub_1005EC2C0()
{
  v1.super.super.Class isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  id v2 = sub_1005ECC34();
  id v3 = [self localizedStringFromNumber:v1.super.super.isa numberStyle:3];
  if (!v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  id v4 = v3;
  sub_1005057FC((uint64_t *)&unk_101687FB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 32) = NSFontAttributeName;
  *(void *)(inited + 64) = sub_10050BF48(0, (unint64_t *)&qword_101695490);
  *(void *)(inited + 40) = v2;
  id v6 = NSFontAttributeName;
  id v7 = v2;
  sub_100A38A68(inited);
  type metadata accessor for Key(0);
  sub_100515BF8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 boundingRectWithSize:0 options:isa context:1.79769313e308 1.79769313e308];
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;

  v24.origin.x = v10;
  v24.origin.y = v12;
  v24.size.width = v14;
  v24.size.height = v16;
  double Width = CGRectGetWidth(v24);
  v25.origin.x = v10;
  v25.origin.y = v12;
  v25.size.width = v14;
  v25.size.height = v16;
  double Height = CGRectGetHeight(v25);

  id v19 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonWidthConstraint);
  if (!v19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  [v19 setConstant:fmax(ceil(Width) + 32.0, 81.0)];
  uint64_t v20 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonHeightConstraint);
  if (!v20)
  {
LABEL_9:
    __break(1u);
    return;
  }
  [v20 setConstant:fmax(ceil(Height) + 10.0, 44.0)];
  id v21 = sub_1005E9728();
  id v22 = [v21 titleLabel];

  if (v22)
  {
    id v23 = sub_1005ECC34();
    [v22 setFont:v23];
  }
}

void sub_1005EC558()
{
  uint64_t v0 = self;
  Class isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  id v2 = [v0 localizedStringFromNumber:isa numberStyle:3];

  NSString v3 = v2;
  if (!v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;
  id v7 = sub_1005E9728();
  [v7 setTitle:v3 forState:0];

  sub_1005057FC((uint64_t *)&unk_101672610);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10117D8C0;
  *(void *)(v8 + 32) = v4;
  *(void *)(v8 + 40) = v6;
  double v9 = self;
  id v10 = [v9 mainBundle];
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v10 localizedStringForKey:v11 value:v12 table:0];

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  *(void *)(v8 + 48) = v14;
  *(void *)(v8 + 56) = v16;
  id v17 = sub_1005E9728();
  sub_1005057FC((uint64_t *)&unk_1016773F0);
  sub_10056547C();
  BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v17 setAccessibilityLabel:v18];

  id v19 = sub_1005E9728();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_10117E810;
  id v21 = [v9 mainBundle];
  NSString v22 = String._bridgeToObjectiveC()();
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = [v21 localizedStringForKey:v22 value:v23 table:0];

  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v27 = v26;

  *(void *)(v20 + 32) = v25;
  *(void *)(v20 + 40) = v27;
  Class v28 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v19 setAccessibilityUserInputLabels:v28];
}

id sub_1005EC884(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_defaultViewScale] = 0x3FF0000000000000;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_viewScaleDetents] = _swiftEmptyArrayStorage;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_zoomUpdateObserver] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_zoomDidChangeObserver] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController____lazy_storage___button] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonWidthConstraint] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonHeightConstraint] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_contentSizeCategoryChangeObserver] = 0;
  v3[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_shouldRefocusZoomButtonUponNextZoomChange] = 0;
  if (a2)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for CRLiOSCanvasZoomControlViewController();
  [super initWithNibName:v6 bundle:a3];

  return v7;
}

id sub_1005ECA0C(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_defaultViewScale] = 0x3FF0000000000000;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_viewScaleDetents] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_zoomUpdateObserver] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_zoomDidChangeObserver] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController____lazy_storage___button] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonWidthConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonHeightConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_contentSizeCategoryChangeObserver] = 0;
  v1[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_shouldRefocusZoomButtonUponNextZoomChange] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for CRLiOSCanvasZoomControlViewController();
  [super initWithCoder:a1];

  return v3;
}

id sub_1005ECB20()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSCanvasZoomControlViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSCanvasZoomControlViewController()
{
  return self;
}

id sub_1005ECC34()
{
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_101177E70;
  NSNumber v1 = self;
  *(void *)(v0 + 32) = [v1 currentTraitCollection];
  uint64_t v16 = v0;
  specialized Array._endMutation()();
  id v2 = [v1 currentTraitCollection];
  id v3 = [v2 preferredContentSizeCategory];

  if (qword_10166ED40 != -1) {
    swift_once();
  }
  char v4 = static UIContentSizeCategory.< infix(_:_:)();

  if (v4)
  {
    id v5 = [v1 traitCollectionWithPreferredContentSizeCategory:qword_1016758F0];
LABEL_9:
    id v9 = v5;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    goto LABEL_12;
  }
  id v6 = [v1 currentTraitCollection];
  id v7 = [v6 preferredContentSizeCategory];

  if (qword_10166ED48 != -1) {
    swift_once();
  }
  char v8 = static UIContentSizeCategory.> infix(_:_:)();

  if (v8)
  {
    id v5 = [v1 traitCollectionWithPreferredContentSizeCategory:qword_1016758F8];
    goto LABEL_9;
  }
LABEL_12:
  sub_10050BF48(0, &qword_101673EA0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v11 = [v1 traitCollectionWithTraitsFromCollections:isa];

  NSString v12 = self;
  id v13 = [v12 preferredFontForTextStyle:UIFontTextStyleHeadline compatibleWithTraitCollection:v11];
  [v13 pointSize];
  id v14 = [v12 monospacedDigitSystemFontOfSize:];

  return v14;
}

uint64_t sub_1005ECF24()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005ECF5C(uint64_t (*a1)(double *))
{
  return sub_1005EA0AC(a1);
}

uint64_t sub_1005ECF64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005ECF74()
{
  return swift_release();
}

uint64_t sub_1005ECF7C(void (*a1)(uint64_t))
{
  return sub_1005EA83C(a1);
}

uint64_t sub_1005ECF84(void (*a1)(uint64_t))
{
  return sub_1005EAB0C(a1);
}

uint64_t sub_1005ECF8C(uint64_t (*a1)(double *))
{
  return sub_1005EAF34(a1);
}

uint64_t sub_1005ECF94()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

void sub_1005ECFCC(uint64_t a1)
{
  sub_1005EB2AC(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_1005ECFD8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005ED014(uint64_t a1)
{
  return sub_1005EAE84(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (SEL *)&selRef_zoomToFitAllContent);
}

uint64_t sub_1005ED03C(uint64_t a1)
{
  return sub_1005EAE84(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (SEL *)&selRef_zoomToCurrentSelection);
}

uint64_t sub_1005ED060()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1005ED098()
{
  sub_1005EA764(*(double *)(v0 + 24));
}

void sub_1005ED0A4()
{
}

void sub_1005ED0AC()
{
}

void sub_1005ED0B4()
{
}

Swift::Int sub_1005ED0EC()
{
  return Hasher._finalize()();
}

uint64_t sub_1005ED1F4()
{
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_1005ED2EC()
{
  return Hasher._finalize()();
}

uint64_t sub_1005ED3F4(uint64_t a1, char *a2)
{
  v176 = a2;
  uint64_t v172 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v172, v4);
  v171 = (char *)v149 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6 - 8, v7);
  id v9 = (char *)v149 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v151 = (uint64_t)v149 - v12;
  __chkstk_darwin(v13, v14);
  uint64_t v170 = (uint64_t)v149 - v15;
  uint64_t v16 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v175 = (uint64_t)v149 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = (void *)type metadata accessor for UUID();
  uint64_t v19 = *(v188 - 1);
  __chkstk_darwin(v188, v20);
  v174 = (char *)v149 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  v182 = (char *)v149 - v24;
  __chkstk_darwin(v25, v26);
  v181 = (char *)v149 - v27;
  uint64_t v28 = type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest();
  uint64_t v168 = *(void *)(v28 - 8);
  uint64_t v169 = v28;
  __chkstk_darwin(v28, v29);
  uint64_t v157 = (uint64_t)v149 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31, v32);
  uint64_t v167 = (uint64_t)v149 - v33;
  uint64_t v158 = v34;
  __chkstk_darwin(v35, v36);
  uint64_t v187 = (uint64_t)v149 - v37;
  id v152 = v9;
  uint64_t v150 = v2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLAsset();
    sub_1005EF290(qword_101675B00, (void (*)(uint64_t))type metadata accessor for CRLAsset);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    a1 = v192;
    uint64_t v156 = v193;
    uint64_t v39 = v194;
    uint64_t v40 = v195;
    unint64_t v41 = v196;
  }
  else
  {
    uint64_t v42 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v43 = *(void *)(a1 + 56);
    uint64_t v156 = a1 + 56;
    uint64_t v39 = ~v42;
    uint64_t v44 = -v42;
    if (v44 < 64) {
      uint64_t v45 = ~(-1 << v44);
    }
    else {
      uint64_t v45 = -1;
    }
    unint64_t v41 = v45 & v43;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v40 = 0;
  }
  v149[1] = v39;
  uint64_t v154 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v155 = (unint64_t)(v39 + 64) >> 6;
  v178 = (void *)(v19 + 16);
  v185 = (void (**)(char *, void *))(v19 + 8);
  v165 = (void (**)(char *, char *, void *))(v19 + 32);
  v166 = CKCurrentUserDefaultName;
  id v46 = _swiftEmptyArrayStorage;
  long long v164 = xmmword_10117E810;
  id v153 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v163 = a1;
  while (a1 < 0)
  {
    uint64_t v50 = __CocoaSet.Iterator.next()();
    if (!v50) {
      goto LABEL_49;
    }
    uint64_t v190 = v50;
    type metadata accessor for CRLAsset();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v51 = v191;
    swift_unknownObjectRelease();
    uint64_t v49 = v40;
    uint64_t v47 = v41;
    if (!v51) {
      goto LABEL_49;
    }
LABEL_31:
    unint64_t v179 = v47;
    uint64_t v180 = v49;
    uint64_t v55 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    id v56 = (void (*)(char *, uint64_t, void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v187 + *(int *)(v169 + 24));
    id v57 = v176;
    v184 = v176;
    id v58 = (char *)v51;
    v177 = v56;
    UUID.init()();
    id v186 = v58;
    id v59 = &v58[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
    uint64_t v60 = *(void *)&v58[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
    uint64_t v61 = *(void *)&v58[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
    sub_10050F848(v59, v60);
    (*(void (**)(uint64_t, uint64_t))(v61 + 24))(v60, v61);
    uint64_t v62 = *(void *)&v57[v55] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    uint64_t v63 = v62;
    uint64_t v64 = v175;
    sub_1005EF2D8(v63, v175, type metadata accessor for CRLBoardCRDTData);
    swift_retain();
    sub_1005057FC(&qword_101674550);
    id v65 = v181;
    CRRegister.wrappedValue.getter();
    sub_1005EF3A8(v64, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    uint64_t v66 = (uint64_t *)(*(void *)&v57[v55] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v68 = *v66;
    unint64_t v67 = v66[1];
    id v69 = (void (*)(char *, char *, void *))*v178;
    ((void (*)(char *, char *, void *))*v178)(v182, v65, v188);
    BOOL v71 = v68 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v67 == v70;
    if (v71
      || (char v72 = _stringCompareWithSmolCheck(_:_:expecting:)(),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          (v72 & 1) != 0))
    {
      swift_bridgeObjectRelease();
      uint64_t v68 = 0;
      unint64_t v67 = 0xE000000000000000;
    }
    id v73 = v188;
    v183 = *v185;
    v183(v181, v188);
    uint64_t v74 = (uint64_t)v171;
    (*v165)(v171, v182, v73);
    uint64_t v75 = (void *)(v74 + *(int *)(v172 + 20));
    *uint64_t v75 = v68;
    v75[1] = v67;
    uint64_t v76 = v170;
    sub_1005EF340(v74, v170, type metadata accessor for CRLBoardIdentifierStorage);
    uint64_t v77 = v76;
    uint64_t v78 = v187;
    sub_1005EF340(v77, v187, type metadata accessor for CRLBoardIdentifier);

    uint64_t v79 = v167;
    sub_1005EF2D8(v78, v167, (uint64_t (*)(void))type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v46 = (double *)sub_100F63868(0, *((void *)v46 + 2) + 1, 1, (unint64_t)v46);
    }
    unint64_t v81 = *((void *)v46 + 2);
    unint64_t v80 = *((void *)v46 + 3);
    if (v81 >= v80 >> 1) {
      id v46 = (double *)sub_100F63868(v80 > 1, v81 + 1, 1, (unint64_t)v46);
    }
    *((void *)v46 + 2) = v81 + 1;
    uint64_t v82 = *(unsigned __int8 *)(v168 + 80);
    sub_1005EF340(v79, (uint64_t)v46 + ((v82 + 32) & ~v82) + *(void *)(v168 + 72) * v81, (uint64_t (*)(void))type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest);
    uint64_t v83 = *((void *)v59 + 3);
    uint64_t v84 = *((void *)v59 + 4);
    sub_10050F848(v59, v83);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v84 + 64))(v83, v84))
    {
      uint64_t v160 = v82;
      uint64_t v161 = (v82 + 32) & ~v82;
      int v162 = (void (*)(char *, void (*)(char *, uint64_t, void (*)(uint64_t), uint64_t, uint64_t, uint64_t), void *))v69;
      v173 = v46;
      if (qword_10166FBD8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v85 = (void *)static OS_os_log.assetManagement;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v164;
      uint64_t v88 = *((void *)v59 + 3);
      uint64_t v87 = *((void *)v59 + 4);
      sub_10050F848(v59, v88);
      id v89 = *(void (**)(uint64_t, uint64_t))(v87 + 24);
      id v159 = v85;
      uint64_t v90 = v174;
      v89(v88, v87);
      uint64_t v91 = UUID.uuidString.getter();
      uint64_t v93 = v92;
      id v94 = v188;
      v183(v90, v188);
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v91;
      *(void *)(inited + 40) = v93;
      uint64_t v95 = static os_log_type_t.default.getter();
      id v96 = v159;
      sub_100BAC898((uint64_t)v159, (uint64_t)&_mh_execute_header, v95, (uint64_t)"Observing on asset download for asset: %{public}@", 49, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      v162(v90, v177, v94);
      uint64_t v97 = v157;
      sub_1005EF2D8(v187, v157, (uint64_t (*)(void))type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest);
      uint64_t v98 = v161;
      uint64_t v99 = swift_allocObject();
      id v100 = v184;
      id v101 = v186;
      *(void *)(v99 + 16) = v184;
      *(void *)(v99 + 24) = v101;
      sub_1005EF340(v97, v99 + v98, (uint64_t (*)(void))type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest);
      uint64_t v102 = *((void *)v59 + 3);
      uint64_t v103 = *((void *)v59 + 4);
      sub_10050F848(v59, v102);
      v177 = *(void (**)(char *, uint64_t, void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v103 + 72);
      id v104 = v100;
      id v105 = v101;
      v177(v90, 14, sub_1005EF550, v99, v102, v103);
      swift_release();
      v183(v90, v188);
      uint64_t v106 = *((void *)v59 + 3);
      uint64_t v107 = *((void *)v59 + 4);
      sub_10050F848(v59, v106);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v107 + 64))(v106, v107))
      {
        uint64_t v108 = *((void *)v59 + 3);
        uint64_t v109 = *((void *)v59 + 4);
        sub_10050F848(v59, v108);
        (*(void (**)(uint64_t, uint64_t))(v109 + 88))(v108, v109);
      }
      a1 = v163;
      id v46 = v173;
    }
    else
    {
      id v110 = v46;
      if (qword_10166FBD8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      double v111 = (void *)static OS_os_log.assetManagement;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v112 = swift_initStackObject();
      *(_OWORD *)(v112 + 16) = v164;
      uint64_t v113 = *((void *)v59 + 3);
      uint64_t v114 = *((void *)v59 + 4);
      sub_10050F848(v59, v113);
      id v115 = *(void (**)(uint64_t, uint64_t))(v114 + 24);
      id v105 = v111;
      id v116 = v174;
      v115(v113, v114);
      uint64_t v117 = UUID.uuidString.getter();
      uint64_t v119 = v118;
      v183(v116, v188);
      *(void *)(v112 + 56) = &type metadata for String;
      *(void *)(v112 + 64) = sub_100528BE4();
      *(void *)(v112 + 32) = v117;
      *(void *)(v112 + 40) = v119;
      uint64_t v120 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v105, (uint64_t)&_mh_execute_header, v120, (uint64_t)"We are trying to registerAssetsNeedingDownload when the needsDownload is false for asset: %{public}@", 100, 2, v112);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      a1 = v163;
      id v46 = v110;
    }
    unint64_t v41 = v179;
    uint64_t v40 = v180;

    uint64_t result = sub_1005EF3A8(v187, (uint64_t (*)(void))type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest);
  }
  if (v41)
  {
    uint64_t v47 = (v41 - 1) & v41;
    unint64_t v48 = __clz(__rbit64(v41)) | (v40 << 6);
    uint64_t v49 = v40;
    goto LABEL_30;
  }
  int64_t v52 = v40 + 1;
  if (__OFADD__(v40, 1))
  {
    __break(1u);
    return result;
  }
  if (v52 >= v155) {
    goto LABEL_49;
  }
  unint64_t v53 = *(void *)(v156 + 8 * v52);
  uint64_t v49 = v40 + 1;
  if (v53) {
    goto LABEL_29;
  }
  uint64_t v49 = v40 + 2;
  if (v40 + 2 >= v155) {
    goto LABEL_49;
  }
  unint64_t v53 = *(void *)(v156 + 8 * v49);
  if (v53) {
    goto LABEL_29;
  }
  uint64_t v49 = v40 + 3;
  if (v40 + 3 >= v155) {
    goto LABEL_49;
  }
  unint64_t v53 = *(void *)(v156 + 8 * v49);
  if (v53) {
    goto LABEL_29;
  }
  uint64_t v49 = v40 + 4;
  if (v40 + 4 >= v155) {
    goto LABEL_49;
  }
  unint64_t v53 = *(void *)(v156 + 8 * v49);
  if (v53)
  {
LABEL_29:
    uint64_t v47 = (v53 - 1) & v53;
    unint64_t v48 = __clz(__rbit64(v53)) + (v49 << 6);
LABEL_30:
    id v51 = *(id *)(*(void *)(a1 + 48) + 8 * v48);
    if (!v51) {
      goto LABEL_49;
    }
    goto LABEL_31;
  }
  uint64_t v54 = v40 + 5;
  while (v155 != v54)
  {
    unint64_t v53 = *(void *)(v156 + 8 * v54++);
    if (v53)
    {
      uint64_t v49 = v54 - 1;
      goto LABEL_29;
    }
  }
LABEL_49:
  sub_10052E1EC();
  uint64_t v121 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v122 = v176;
  uint64_t v123 = *(void *)&v176[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  uint64_t v124 = v123;
  uint64_t v125 = v175;
  sub_1005EF2D8(v124, v175, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  sub_1005057FC(&qword_101674550);
  uint64_t v126 = (uint64_t)v174;
  CRRegister.wrappedValue.getter();
  sub_1005EF3A8(v125, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  id v127 = (uint64_t *)(*(void *)&v122[v121] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v128 = *v127;
  unint64_t v129 = v127[1];
  swift_bridgeObjectRetain();
  uint64_t v130 = v151;
  sub_100753370(v126, v128, v129, v151);
  uint64_t v131 = v150;
  uint64_t v132 = (uint64_t *)(v150 + 112);
  swift_beginAccess();
  uint64_t v133 = *(void *)(v131 + 112);
  uint64_t v134 = *(void *)(v133 + 16);
  v173 = v46;
  if (v134)
  {
    swift_bridgeObjectRetain();
    unint64_t v135 = sub_1009563EC(v130);
    if (v136)
    {
      v137 = *(void **)(*(void *)(v133 + 56) + 8 * v135);
      swift_bridgeObjectRetain();
    }
    else
    {
      v137 = &_swiftEmptySetSingleton;
    }
    v188 = v137;
    swift_bridgeObjectRelease();
  }
  else
  {
    v188 = &_swiftEmptySetSingleton;
  }
  sub_1005EF3A8(v130, type metadata accessor for CRLBoardIdentifier);
  v138 = v176;
  uint64_t v139 = *(void *)&v176[v121] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  uint64_t v140 = v139;
  uint64_t v141 = v175;
  sub_1005EF2D8(v140, v175, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  uint64_t v142 = (uint64_t)v174;
  CRRegister.wrappedValue.getter();
  sub_1005EF3A8(v141, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  id v143 = (uint64_t *)(*(void *)&v138[v121] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v144 = *v143;
  unint64_t v145 = v143[1];
  swift_bridgeObjectRetain();
  uint64_t v146 = (uint64_t)v152;
  sub_100753370(v142, v144, v145, (uint64_t)v152);
  uint64_t v147 = sub_100F2DA70((uint64_t)v173, (uint64_t)v188);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v189 = *v132;
  *uint64_t v132 = 0x8000000000000000;
  sub_100974428(v147, v146, isUniquelyReferenced_nonNull_native);
  *uint64_t v132 = v189;
  swift_bridgeObjectRelease();
  sub_1005EF3A8(v146, type metadata accessor for CRLBoardIdentifier);
  return swift_endAccess();
}

void sub_1005EE3E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (a1 == 1)
    {
      uint64_t v31 = a3;
      id v30 = [self defaultCenter];
      if (qword_10166ED60 != -1) {
        swift_once();
      }
      uint64_t v29 = qword_10171A0E0;
      sub_1005057FC(&qword_101677430);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      uint64_t v32 = 0x6564496472616F62;
      unint64_t v33 = 0xEF7265696669746ELL;
      AnyHashable.init<A>(_:)();
      *(void *)(inited + 96) = type metadata accessor for CRLBoardIdentifier(0);
      uint64_t v17 = sub_1005767BC((uint64_t *)(inited + 72));
      uint64_t v18 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
      uint64_t v19 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      sub_1005EF2D8(v19, (uint64_t)v11, type metadata accessor for CRLBoardCRDTData);
      swift_retain();
      sub_1005057FC(&qword_101674550);
      CRRegister.wrappedValue.getter();
      sub_1005EF3A8((uint64_t)v11, type metadata accessor for CRLBoardCRDTData);
      swift_release();
      uint64_t v20 = (uint64_t *)(*(void *)(a2 + v18) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      uint64_t v21 = *v20;
      unint64_t v22 = v20[1];
      swift_bridgeObjectRetain();
      sub_100753370((uint64_t)v15, v21, v22, (uint64_t)v17);
      sub_100A393A8(inited);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v24 = v30;
      [v30 postNotificationName:v29 object:0 userInfo:isa];

      a3 = v31;
    }
    uint64_t v25 = a4
        + *(int *)(type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest() + 24);
    uint64_t v26 = (void *)(a3 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage);
    uint64_t v27 = *(void *)(a3 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24);
    uint64_t v28 = v26[4];
    sub_10050F848(v26, v27);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 80))(v25, v27, v28);
  }
}

uint64_t sub_1005EE718()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper()
{
  return self;
}

char *sub_1005EE774(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    uint64_t v9 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *(void *)uint64_t v10 = *v11;
    *((void *)v10 + 1) = v12;
    uint64_t v13 = *(int *)(a3 + 20);
    uint64_t v14 = &a1[v13];
    uint64_t v15 = (char *)a2 + v13;
    swift_bridgeObjectRetain();
    v8(v14, v15, v7);
    v8(&a1[*(int *)(a3 + 24)], (char *)a2 + *(int *)(a3 + 24), v7);
  }
  return a1;
}

uint64_t sub_1005EE8A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  v7(a1 + *(int *)(a2 + 20), v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);

  return ((uint64_t (*)(uint64_t, uint64_t))v7)(v5, v4);
}

uint64_t sub_1005EE97C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  swift_bridgeObjectRetain();
  v7(v13, v14, v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_1005EEA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_1005EEB50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = type metadata accessor for CRLBoardIdentifierStorage(0);
  *(_OWORD *)(a1 + *(int *)(v8 + 20)) = *(_OWORD *)(a2 + *(int *)(v8 + 20));
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_1005EEC18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_1005EECF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005EED04);
}

uint64_t sub_1005EED04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for UUID();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1005EEDFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005EEE10);
}

uint64_t sub_1005EEE10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for UUID();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest()
{
  uint64_t result = qword_101675AB8;
  if (!qword_101675AB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005EEF60()
{
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for UUID();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1005EF028()
{
  return sub_1005EF290(&qword_101675AF8, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest);
}

NSString sub_1005EF070()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A0E0 = (uint64_t)result;
  return result;
}

uint64_t sub_1005EF0A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v21 - v10;
  char v12 = static UUID.== infix(_:_:)();
  sub_1005EF2D8(a1, (uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
  sub_1005EF2D8(a2, (uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
  if ((v12 & 1) == 0)
  {
    sub_1005EF3A8((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
    sub_1005EF3A8((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
LABEL_12:
    char v19 = 0;
    return v19 & 1;
  }
  uint64_t v13 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v14 = *(void *)&v11[v13];
  uint64_t v15 = *(void *)&v11[v13 + 8];
  uint64_t v16 = &v7[v13];
  if (v14 == *(void *)v16 && v15 == *((void *)v16 + 1))
  {
    sub_1005EF3A8((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
    sub_1005EF3A8((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_1005EF3A8((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
    sub_1005EF3A8((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
    char v19 = 0;
    if ((v18 & 1) == 0) {
      return v19 & 1;
    }
  }
  type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest();
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    goto LABEL_12;
  }
  char v19 = static UUID.== infix(_:_:)();
  return v19 & 1;
}

uint64_t sub_1005EF290(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005EF2D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005EF340(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005EF3A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1005EF408()
{
  unint64_t v1 = (int *)(type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;

  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  v8(v6 + v1[7], v7);
  v8(v6 + v1[8], v7);

  return _swift_deallocObject(v0, v4, v5);
}

void sub_1005EF550(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_1005EE3E0(a1, v4, v5, v6);
}

uint64_t sub_1005EF5C4()
{
  type metadata accessor for CRLWPFormatTextCommand.CoalescingData();
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for CRLWPAttributeDictionary();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

void sub_1005EF6D8(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, void *a5@<X8>)
{
  v22[1] = a4;
  v22[2] = a2;
  v22[3] = a3;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v16 - 8, v17);
  char v19 = (char *)v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a5 = a1;
  uint64_t v20 = *(void *)&a1[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (v20)
  {
    type metadata accessor for CRLWPFormatTextCommand.CoalescingData();
    (*(void (**)(void))(*(void *)v20 + 760))();
    sub_1005D3C94((uint64_t)&v15[*(int *)(v12 + 20)], (uint64_t)v19);
    uint64_t v21 = a1;
    sub_1005D3CF8((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v19, v7);
    sub_1005D3CF8((uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
    CRAttributedString.cursor(range:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  else
  {
    __break(1u);
  }
}

void sub_1005EF940(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLWPStorageCRDTData(0);
  __n128 v17 = __chkstk_darwin(v15 - 8, v16);
  char v19 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *v3;
  if (*v3 == *a1)
  {
    uint64_t v31 = a2;
    uint64_t v21 = *(void *)(v20 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
    if (!v21)
    {
      __break(1u);
LABEL_8:
      __break(1u);
      return;
    }
    id v30 = (uint64_t (*)(char *, uint64_t))((char *)v3 + *(int *)(v31 + 36));
    (*(void (**)(__n128))(*(void *)v21 + 760))(v17);
    sub_1005D3C94((uint64_t)&v14[*(int *)(v11 + 20)], (uint64_t)v19);
    sub_1005D3CF8((uint64_t)v14, type metadata accessor for CRLWPShapeItemCRDTData);
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v29(v10, v19, v6);
    sub_1005D3CF8((uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v22 = CRAttributedString.range(of:)();
    v28[1] = v23;
    v28[2] = v22;
    char v25 = v24;
    id v30 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    uint64_t v26 = v30(v10, v6);
    if ((v25 & 1) == 0)
    {
      uint64_t v27 = *(void *)(*v3 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
      if (v27)
      {
        (*(void (**)(uint64_t))(*(void *)v27 + 760))(v26);
        sub_1005D3C94((uint64_t)&v14[*(int *)(v11 + 20)], (uint64_t)v19);
        sub_1005D3CF8((uint64_t)v14, type metadata accessor for CRLWPShapeItemCRDTData);
        v29(v10, v19, v6);
        sub_1005D3CF8((uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
        CRAttributedString.range(of:)();
        v30(v10, v6);
        return;
      }
      goto LABEL_8;
    }
  }
}

uint64_t sub_1005EFCC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)v1 + *(void *)((swift_isaMask & *v1) + 0xD8);
  swift_beginAccess();
  type metadata accessor for CRLWPFormatTextCommand.CoalescingData();
  uint64_t v4 = type metadata accessor for Optional();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1005EFDA4(uint64_t a1)
{
  uint64_t v3 = (char *)v1 + *(void *)((swift_isaMask & *v1) + 0xD8);
  swift_beginAccess();
  type metadata accessor for CRLWPFormatTextCommand.CoalescingData();
  uint64_t v4 = type metadata accessor for Optional();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

void sub_1005EFE8C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = v3;
  int v25 = a3;
  uint64_t v6 = (void *)(swift_isaMask & *v3);
  uint64_t v7 = v6;
  uint64_t v8 = v6[26];
  uint64_t v27 = v6[25];
  uint64_t v9 = type metadata accessor for CRLWPFormatTextCommand.CoalescingData();
  uint64_t v10 = type metadata accessor for Optional();
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (uint64_t *)((char *)&v23 - v12);
  uint64_t v14 = *(void *)((char *)v5 + v6[29]);
  uint64_t v26 = OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage;
  uint64_t v15 = *(void **)(v14 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v15)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v16 = (void *)((char *)v5 + v7[30]);
  uint64_t v17 = *v16;
  uint64_t v18 = v16[1];
  sub_1005EF6D8((char *)v15, *v16, v18, v8, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v13, 0, 1, v9);
  sub_1005EFDA4((uint64_t)v13);
  sub_10103405C(v14, (uint64_t)&off_101518040);
  if (v4) {
    return;
  }
  uint64_t v24 = v8;
  uint64_t v19 = v27;
  uint64_t v20 = *(void **)(v14 + v26);
  if (!v20)
  {
LABEL_7:
    __break(1u);
    return;
  }
  uint64_t v21 = (uint64_t)v5 + *(void *)((swift_isaMask & *v5) + 0xF8);
  id v22 = v20;
  sub_100906024(v21, v17, v18, v19, v24);

  sub_101023724(v14, (uint64_t)&off_101518040, v25);
}

id sub_1005F00E4(void *a1, uint64_t a2)
{
  return sub_1005F016C(a1, a2, (void (*)(void))sub_1005F00FC);
}

uint64_t sub_1005F00FC()
{
  id v1 = [v0 debugDescription];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

id sub_1005F0154(void *a1, uint64_t a2)
{
  return sub_1005F016C(a1, a2, (void (*)(void))sub_1005F01DC);
}

id sub_1005F016C(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_1005F01DC()
{
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for CRLWPFormatTextCommand();
  id v1 = [super description];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;

  uint64_t v9 = v2;
  uint64_t v10 = v4;
  v5._countAndFlagsBits = 32;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v6._countAndFlagsBits = sub_1005F07BC();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1005F02B4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLWPFormatTextCommand.CoalescingData();
  uint64_t v5 = type metadata accessor for Optional();
  uint64_t v50 = *(void *)(v5 - 8);
  uint64_t v51 = v5;
  __chkstk_darwin(v5, v6);
  objc_super v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v45 - v11;
  uint64_t v13 = *(void *)(v4 - 8);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v45 - v20;
  type metadata accessor for CRLWPFormatTextCommand();
  uint64_t v22 = swift_dynamicCastClass();
  if (!v22) {
    goto LABEL_17;
  }
  uint64_t v23 = (void *)v22;
  id v48 = a1;
  uint64_t v49 = v17;
  sub_1005EFCC4((uint64_t)v12);
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v24(v12, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v50 + 8))(v12, v51);
LABEL_17:
    char v41 = 0;
    return v41 & 1;
  }
  id v46 = *(void (**)(void))(v13 + 32);
  uint64_t v47 = v21;
  v46();
  sub_1005EFCC4((uint64_t)v8);
  uint64_t v25 = v4;
  if (v24(v8, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v47, v4);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v51);
    goto LABEL_17;
  }
  uint64_t v26 = v13;
  uint64_t v27 = v49;
  ((void (*)(char *, char *, uint64_t))v46)(v49, v8, v4);
  if (*(void *)((char *)v23 + *(void *)((swift_isaMask & *v23) + 0xE8)) != *(void *)((char *)v2
                                                                                            + *(void *)((*v2 & swift_isaMask) + 0xE8)))
  {
    uint64_t v28 = *(void (**)(char *, uint64_t))(v13 + 8);
    v28(v27, v25);
    v28(v47, v25);
    goto LABEL_17;
  }
  uint64_t v29 = v4;
  uint64_t v30 = *(void *)((char *)v2 + *(void *)((*v2 & swift_isaMask) + 0xF8));
  id v31 = v48;
  uint64_t v32 = swift_bridgeObjectRetain();
  char v33 = sub_100A3E2D0(v32, v30);
  swift_bridgeObjectRelease();
  if ((v33 & 1) == 0)
  {

    uint64_t v36 = *(void (**)(char *, uint64_t))(v26 + 8);
    v36(v49, v25);
    v36(v47, v29);
    goto LABEL_17;
  }
  uint64_t v34 = *(void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0xE0));
  if (*(void *)(v30 + 16) <= *(void *)(v34 + 16) >> 3)
  {
    int64_t v52 = *(unint64_t **)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0xE0));
    swift_bridgeObjectRetain();
    sub_1010298F0(v30);
    uint64_t v35 = v52;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_10102B858(v30, v34);
  }
  uint64_t v37 = v47;
  unint64_t v38 = v35[2];
  swift_bridgeObjectRelease();
  if (!v38)
  {

    uint64_t v43 = *(void (**)(char *, uint64_t))(v26 + 8);
    v43(v49, v29);
    v43(v37, v29);
    goto LABEL_17;
  }
  uint64_t v39 = v49;
  sub_1005EF940(v49, v29);
  char v41 = v40;

  uint64_t v42 = *(void (**)(char *, uint64_t))(v26 + 8);
  v42(v39, v29);
  v42(v37, v29);
  return v41 & 1;
}

uint64_t sub_1005F07BC()
{
  id v1 = (void *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0xF8));
  if (*(void *)(*v1 + 16) >= 2uLL)
  {
LABEL_2:
    id v2 = [self mainBundle];
    NSString v3 = String._bridgeToObjectiveC()();
    NSString v4 = String._bridgeToObjectiveC()();
    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = [v2 localizedStringForKey:v3 value:v4 table:v5];
    goto LABEL_10;
  }
  uint64_t v7 = sub_100999888(*v1);
  uint64_t v9 = v8;
  if (!v8) {
    return v9;
  }
  uint64_t v10 = v7;
  BOOL v11 = v7 == 1684828002 && v8 == 0xE400000000000000;
  if (v11
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || (v10 == 0x6E696C7265646E75 ? (BOOL v14 = v9 == 0xE900000000000065) : (BOOL v14 = 0),
        v14
     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
     || (v10 == 0x63696C617469 ? (BOOL v15 = v9 == 0xE600000000000000) : (BOOL v15 = 0),
         v15
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
      || (v10 == 0x6874656B69727473 ? (BOOL v16 = v9 == 0xED00006867756F72) : (BOOL v16 = 0),
          v16
       || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
       || (v10 == 0x657A6953746E6F66 ? (BOOL v17 = v9 == 0xE800000000000000) : (BOOL v17 = 0),
           v17
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
        || (v10 == 0x656D614E746E6F66 ? (BOOL v18 = v9 == 0xE800000000000000) : (BOOL v18 = 0),
            v18
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
         || v10 == 0x6574636172616863 && v9 == 0xED00006C6C694672
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
         || v10 == 0x6C7974537473696CLL && v9 == 0xE900000000000065
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))))))
  {
    swift_bridgeObjectRelease();
    id v2 = [self mainBundle];
    NSString v3 = String._bridgeToObjectiveC()();
    NSString v4 = String._bridgeToObjectiveC()();
    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = [v2 localizedStringForKey:v3 value:v4 table:v5];
LABEL_10:
    id v12 = v6;

LABEL_11:
    goto LABEL_12;
  }
  if (v10 == 0xD000000000000012 && v9 == 0x80000001012356A0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath, v20);
    uint64_t v21 = (uint64_t *)swift_getKeyPath();
    uint64_t v22 = type metadata accessor for CRLWPAttributeDictionary();
    unint64_t v23 = sub_1005F2218();
    sub_1008F1C04(v21, v22, v23);
    swift_release();
    if (v33 != 255 && (v33 & 1) == 0)
    {
      switch(v32)
      {
        case 0:
          id v24 = [self mainBundle];
          NSString v25 = String._bridgeToObjectiveC()();
          NSString v26 = String._bridgeToObjectiveC()();
          NSString v5 = String._bridgeToObjectiveC()();
          id v12 = [v24 localizedStringForKey:v25 value:v26 table:v5];

          goto LABEL_11;
        case 1:
        case 2:
        case 3:
        case 4:
          goto LABEL_2;
        default:
          return 0;
      }
    }
    return 0;
  }
  if (v10 == 0x7061726761726170 && v9 == 0xEE006C6576654C68)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0) {
      return 0;
    }
  }
  id v28 = [self mainBundle];
  NSString v29 = String._bridgeToObjectiveC()();
  NSString v30 = String._bridgeToObjectiveC()();
  NSString v31 = String._bridgeToObjectiveC()();
  id v12 = [v28 localizedStringForKey:v29 value:v30 table:v31];

LABEL_12:
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v9;
}

void sub_1005F1734()
{
}

uint64_t sub_1005F1778()
{
  id v1 = (char *)v0 + *(void *)((swift_isaMask & *v0) + 0xD8);
  type metadata accessor for CRLWPFormatTextCommand.CoalescingData();
  uint64_t v2 = type metadata accessor for Optional();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  NSString v3 = (char *)v0 + *(void *)((swift_isaMask & *v0) + 0xF8);
  uint64_t v4 = type metadata accessor for CRLWPAttributeDictionary();
  NSString v5 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(v3, v4);
}

id sub_1005F18F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPFormatTextCommand();
  return [super dealloc];
}

uint64_t sub_1005F196C(void *a1)
{
  objc_super v2 = (char *)a1 + *(void *)((swift_isaMask & *a1) + 0xD8);
  type metadata accessor for CRLWPFormatTextCommand.CoalescingData();
  uint64_t v3 = type metadata accessor for Optional();
  (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();

  uint64_t v4 = (char *)a1 + *(void *)((swift_isaMask & *a1) + 0xF8);
  uint64_t v5 = type metadata accessor for CRLWPAttributeDictionary();
  id v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t type metadata accessor for CRLWPFormatTextCommand()
{
  return sub_100568E70();
}

uint64_t type metadata accessor for CRLWPFormatTextCommand.CoalescingData()
{
  return sub_100568E70();
}

uint64_t sub_1005F1B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

void sub_1005F1B28()
{
  sub_1005F20BC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void **sub_1005F1BC4(void **a1, void **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = (char *)*a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (void **)&v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(int *)(a3 + 36);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = v5;
    uint64_t v10 = sub_1005057FC(qword_101675B88);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v8, v10);
  }
  return a1;
}

uint64_t sub_1005F1C90(id *a1, uint64_t a2)
{
  int v4 = (char *)a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_1005057FC(qword_101675B88);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void **sub_1005F1D0C(void **a1, void **a2, uint64_t a3)
{
  int v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  id v8 = v4;
  uint64_t v9 = sub_1005057FC(qword_101675B88);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v6, v7, v9);
  return a1;
}

void **sub_1005F1D90(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = (char *)a1 + v9;
  BOOL v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1005057FC(qword_101675B88);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

void *sub_1005F1E24(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1005057FC(qword_101675B88);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void **sub_1005F1EA4(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 36);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1005057FC(qword_101675B88);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1005F1F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005F1F48);
}

uint64_t sub_1005F1F48(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1005057FC(qword_101675B88);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    BOOL v11 = (char *)a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1005F1FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005F2010);
}

void *sub_1005F2010(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    unsigned char *result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1005057FC(qword_101675B88);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 36);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1005F20BC()
{
  if (!qword_101675C10)
  {
    sub_100522D34(&qword_101675C18);
    sub_1005F2170((unint64_t *)&qword_101675C20);
    sub_1005F2170(&qword_101675C28);
    unint64_t v0 = type metadata accessor for CursorRange();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101675C10);
    }
  }
}

uint64_t sub_1005F2170(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(&qword_101675C18);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005F21B8()
{
  return sub_1005F07BC();
}

uint64_t sub_1005F21E4()
{
  return 8;
}

uint64_t sub_1005F21F0()
{
  return swift_release();
}

uint64_t sub_1005F21F8(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1005F220C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1005F2218()
{
  unint64_t result = qword_101675C30;
  if (!qword_101675C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101675C30);
  }
  return result;
}

void sub_1005F226C()
{
}

uint64_t sub_1005F229C()
{
  if (*v0) {
    return 0x695474736574616CLL;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1005F22D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005F4460(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005F2300()
{
  return *v0;
}

uint64_t sub_1005F230C@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  if (result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!result) {
    char v2 = 0;
  }
  *a2 = v2;
  return result;
}

void sub_1005F2328(void *a1@<X8>)
{
  *a1 = &off_101503320;
}

uint64_t sub_1005F2338(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1005F425C();
  unint64_t v5 = sub_1005F42B4();

  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_1005F2390(uint64_t a1)
{
  unint64_t v2 = sub_1005F42B4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005F23CC(uint64_t a1)
{
  unint64_t v2 = sub_1005F42B4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005F2408(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101675F10);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_1005F42B4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v9[15] = 0;
  type metadata accessor for UUID();
  sub_1005F4088(&qword_101671E70, (void (*)(uint64_t))&type metadata accessor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for CRLBoardInteractionOwner(0);
    v9[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1005F25BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v25 = *(void *)(v4 - 8);
  uint64_t v26 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1005057FC(&qword_101675F08);
  uint64_t v24 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLBoardInteractionOwner(0);
  __chkstk_darwin(v11, v12);
  BOOL v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_1005F42B4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  uint64_t v22 = v14;
  uint64_t v15 = v24;
  uint64_t v16 = v25;
  char v29 = 0;
  sub_1005F4088(&qword_101671E58, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v17 = v26;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v22, v7, v17);
  char v28 = 1;
  uint64_t v18 = KeyedDecodingContainer.decode(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v27);
  uint64_t v20 = (uint64_t)v22;
  uint64_t v19 = v23;
  *(void *)&v22[*(int *)(v11 + 20)] = v18;
  sub_1005F4560(v20, v19);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return sub_1005F45C4(v20, type metadata accessor for CRLBoardInteractionOwner);
}

Swift::Int sub_1005F28F4(uint64_t a1)
{
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  sub_1005F4088((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  Hasher._combine(_:)(*(void *)(v1 + *(int *)(a1 + 20)));
  return Hasher._finalize()();
}

void sub_1005F2998(uint64_t a1, uint64_t a2)
{
  type metadata accessor for UUID();
  sub_1005F4088((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  Hasher._combine(_:)(*(void *)(v2 + *(int *)(a2 + 20)));
}

Swift::Int sub_1005F2A24(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  sub_1005F4088((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  Hasher._combine(_:)(*(void *)(v2 + *(int *)(a2 + 20)));
  return Hasher._finalize()();
}

BOOL sub_1005F2AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (static UUID.== infix(_:_:)() & 1) != 0
      && *(void *)(a1 + *(int *)(a3 + 20)) == *(void *)(a2 + *(int *)(a3 + 20));
}

uint64_t sub_1005F2B18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005F25BC(a1, a2);
}

uint64_t sub_1005F2B30(void *a1)
{
  return sub_1005F2408(a1);
}

uint64_t sub_1005F2B48@<X0>(uint64_t a1@<X8>)
{
  return sub_1005F4560(v1, a1);
}

uint64_t sub_1005F2B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005F4088(&qword_101675EA8, (void (*)(uint64_t))type metadata accessor for CRLBoardInteractionOwner);
  uint64_t v7 = sub_1005F4088(&qword_101675F00, (void (*)(uint64_t))type metadata accessor for CRLBoardInteractionOwner);

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1005F2C20()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_1005F2CA0()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_1005F2D18(uint64_t a1)
{
  uint64_t v2 = sub_1005F4088(&qword_101675F18, (void (*)(uint64_t))type metadata accessor for CRLBoardInteractionOwner);

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_1005F2D94()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for CRLBoardInteractionOwnershipCoordinator()
{
  return self;
}

uint64_t *sub_1005F2DF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_1005F2EC4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1005F2F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1005F2FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1005F3020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1005F309C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1005F3118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005F312C);
}

uint64_t sub_1005F312C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1005F3198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005F31AC);
}

uint64_t sub_1005F31AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CRLBoardInteractionOwner(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101675DA8);
}

uint64_t sub_1005F323C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1005F32D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = type metadata accessor for UUID();
      BOOL v14 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16);
      v14(a1, a2, v13);
      uint64_t v15 = type metadata accessor for CRLBoardInteractionOwner(0);
      *(uint64_t *)((char *)a1 + *(int *)(v15 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v15 + 20));
      uint64_t v16 = sub_1005057FC(&qword_101675DE8);
      uint64_t v17 = *(int *)(v16 + 48);
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      v14((uint64_t *)((char *)a1 + v17), (uint64_t *)((char *)a2 + v17), v13);
      *(void *)&v18[*(int *)(v15 + 20)] = *(void *)&v19[*(int *)(v15 + 20)];
      uint64_t v20 = *(int *)(v16 + 64);
      long long v21 = *(_OWORD *)((char *)a2 + v20 + 24);
      *(_OWORD *)((char *)a1 + v20 + 24) = v21;
      (**(void (***)(void))(v21 - 8))();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = type metadata accessor for CRLBoardInteractionOwner(0);
      *(uint64_t *)((char *)a1 + *(int *)(v9 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v9 + 20));
      uint64_t v10 = *(int *)(sub_1005057FC(&qword_101675DE0) + 48);
      long long v11 = *(_OWORD *)((char *)a2 + v10 + 24);
      *(_OWORD *)((char *)a1 + v10 + 24) = v11;
      (**(void (***)(void))(v11 - 8))();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1005F3560(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v5 = type metadata accessor for UUID();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    v6(a1, v5);
    uint64_t v7 = sub_1005057FC(&qword_101675DE8);
    v6(a1 + *(int *)(v7 + 48), v5);
    uint64_t v4 = (int *)(v7 + 64);
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v3 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    uint64_t v4 = (int *)(sub_1005057FC(&qword_101675DE0) + 48);
  }
  uint64_t v8 = a1 + *v4;

  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v8);
}

char *sub_1005F3680(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v11 = type metadata accessor for UUID();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(a1, a2, v11);
    uint64_t v13 = type metadata accessor for CRLBoardInteractionOwner(0);
    *(void *)&a1[*(int *)(v13 + 20)] = *(void *)&a2[*(int *)(v13 + 20)];
    uint64_t v14 = sub_1005057FC(&qword_101675DE8);
    uint64_t v15 = *(int *)(v14 + 48);
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    v12(&a1[v15], &a2[v15], v11);
    *(void *)&v16[*(int *)(v13 + 20)] = *(void *)&v17[*(int *)(v13 + 20)];
    uint64_t v18 = *(int *)(v14 + 64);
    long long v19 = *(_OWORD *)&a2[v18 + 24];
    *(_OWORD *)&a1[v18 + 24] = v19;
    (**(void (***)(void))(v19 - 8))();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for CRLBoardInteractionOwner(0);
    *(void *)&a1[*(int *)(v8 + 20)] = *(void *)&a2[*(int *)(v8 + 20)];
    uint64_t v9 = *(int *)(sub_1005057FC(&qword_101675DE0) + 48);
    long long v10 = *(_OWORD *)&a2[v9 + 24];
    *(_OWORD *)&a1[v9 + 24] = v10;
    (**(void (***)(void))(v10 - 8))();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1005F38C8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1005F45C4((uint64_t)a1, type metadata accessor for CRLBoardInteractionOwnershipUpdate);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = type metadata accessor for UUID();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      v13(a1, a2, v12);
      uint64_t v14 = type metadata accessor for CRLBoardInteractionOwner(0);
      *(void *)&a1[*(int *)(v14 + 20)] = *(void *)&a2[*(int *)(v14 + 20)];
      uint64_t v15 = sub_1005057FC(&qword_101675DE8);
      uint64_t v16 = *(int *)(v15 + 48);
      uint64_t v17 = &a1[v16];
      uint64_t v18 = &a2[v16];
      v13(&a1[v16], &a2[v16], v12);
      *(void *)&v17[*(int *)(v14 + 20)] = *(void *)&v18[*(int *)(v14 + 20)];
      uint64_t v19 = *(int *)(v15 + 64);
      uint64_t v20 = &a1[v19];
      uint64_t v21 = *(void *)&a2[v19 + 24];
      *((void *)v20 + 3) = v21;
      *((void *)v20 + 4) = *(void *)&a2[v19 + 32];
      (**(void (***)(void))(v21 - 8))();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = type metadata accessor for CRLBoardInteractionOwner(0);
      *(void *)&a1[*(int *)(v8 + 20)] = *(void *)&a2[*(int *)(v8 + 20)];
      uint64_t v9 = *(int *)(sub_1005057FC(&qword_101675DE0) + 48);
      long long v10 = &a1[v9];
      uint64_t v11 = *(void *)&a2[v9 + 24];
      *((void *)v10 + 3) = v11;
      *((void *)v10 + 4) = *(void *)&a2[v9 + 32];
      (**(void (***)(void))(v11 - 8))();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t type metadata accessor for CRLBoardInteractionOwnershipUpdate(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101675E60);
}

char *sub_1005F3B5C(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v13 = type metadata accessor for UUID();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
    v14(a1, a2, v13);
    uint64_t v15 = type metadata accessor for CRLBoardInteractionOwner(0);
    *(void *)&a1[*(int *)(v15 + 20)] = *(void *)&a2[*(int *)(v15 + 20)];
    uint64_t v16 = sub_1005057FC(&qword_101675DE8);
    uint64_t v17 = *(int *)(v16 + 48);
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    v14(&a1[v17], &a2[v17], v13);
    *(void *)&v18[*(int *)(v15 + 20)] = *(void *)&v19[*(int *)(v15 + 20)];
    uint64_t v20 = *(int *)(v16 + 64);
    uint64_t v21 = &a1[v20];
    uint64_t v22 = &a2[v20];
    *((void *)v21 + 4) = *((void *)v22 + 4);
    long long v23 = *((_OWORD *)v22 + 1);
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v23;
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for CRLBoardInteractionOwner(0);
    *(void *)&a1[*(int *)(v8 + 20)] = *(void *)&a2[*(int *)(v8 + 20)];
    uint64_t v9 = *(int *)(sub_1005057FC(&qword_101675DE0) + 48);
    long long v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    long long v12 = *((_OWORD *)v11 + 1);
    *(_OWORD *)long long v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v12;
    *((void *)v10 + 4) = *((void *)v11 + 4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1005F3D34(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1005F45C4((uint64_t)a1, type metadata accessor for CRLBoardInteractionOwnershipUpdate);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = type metadata accessor for UUID();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
      v14(a1, a2, v13);
      uint64_t v15 = type metadata accessor for CRLBoardInteractionOwner(0);
      *(void *)&a1[*(int *)(v15 + 20)] = *(void *)&a2[*(int *)(v15 + 20)];
      uint64_t v16 = sub_1005057FC(&qword_101675DE8);
      uint64_t v17 = *(int *)(v16 + 48);
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      v14(&a1[v17], &a2[v17], v13);
      *(void *)&v18[*(int *)(v15 + 20)] = *(void *)&v19[*(int *)(v15 + 20)];
      uint64_t v20 = *(int *)(v16 + 64);
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      *((void *)v21 + 4) = *((void *)v22 + 4);
      long long v23 = *((_OWORD *)v22 + 1);
      *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v23;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = type metadata accessor for CRLBoardInteractionOwner(0);
      *(void *)&a1[*(int *)(v8 + 20)] = *(void *)&a2[*(int *)(v8 + 20)];
      uint64_t v9 = *(int *)(sub_1005057FC(&qword_101675DE0) + 48);
      long long v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      long long v12 = *((_OWORD *)v11 + 1);
      *(_OWORD *)long long v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v12;
      *((void *)v10 + 4) = *((void *)v11 + 4);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1005F3F30()
{
  uint64_t result = type metadata accessor for CRLBoardInteractionOwner(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v4 = &v3;
    swift_getTupleTypeLayout3();
    uint64_t v5 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1005F3FF8()
{
  return sub_1005F4088(&qword_101675E98, (void (*)(uint64_t))type metadata accessor for CRLBoardInteractionOwner);
}

uint64_t sub_1005F4040()
{
  return sub_1005F4088(&qword_101675EA0, (void (*)(uint64_t))type metadata accessor for CRLBoardInteractionOwner);
}

uint64_t sub_1005F4088(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005F40D0()
{
  return sub_1005F4088(&qword_101675EA8, (void (*)(uint64_t))type metadata accessor for CRLBoardInteractionOwner);
}

uint64_t sub_1005F4118()
{
  return sub_1005F4088(&qword_101675EB0, (void (*)(uint64_t))type metadata accessor for CRLBoardInteractionOwner);
}

uint64_t sub_1005F4160()
{
  return sub_1005F4088(&qword_101675EB8, (void (*)(uint64_t))type metadata accessor for CRLBoardInteractionOwner);
}

unint64_t sub_1005F41AC()
{
  unint64_t result = qword_101675EC0;
  if (!qword_101675EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101675EC0);
  }
  return result;
}

unint64_t sub_1005F4204()
{
  unint64_t result = qword_101675EC8;
  if (!qword_101675EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101675EC8);
  }
  return result;
}

unint64_t sub_1005F425C()
{
  unint64_t result = qword_101675ED0;
  if (!qword_101675ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101675ED0);
  }
  return result;
}

unint64_t sub_1005F42B4()
{
  unint64_t result = qword_101675ED8;
  if (!qword_101675ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101675ED8);
  }
  return result;
}

unint64_t sub_1005F430C()
{
  unint64_t result = qword_101675EE0;
  if (!qword_101675EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101675EE0);
  }
  return result;
}

unint64_t sub_1005F4364()
{
  unint64_t result = qword_101675EE8;
  if (!qword_101675EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101675EE8);
  }
  return result;
}

unint64_t sub_1005F43BC()
{
  unint64_t result = qword_101675EF0;
  if (!qword_101675EF0)
  {
    sub_100522D34(&qword_101675EF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101675EF0);
  }
  return result;
}

uint64_t sub_1005F4418()
{
  return sub_1005F4088(&qword_101675F00, (void (*)(uint64_t))type metadata accessor for CRLBoardInteractionOwner);
}

uint64_t sub_1005F4460(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x695474736574616CLL && a2 == 0xEF706D617473656DLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1005F4560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardInteractionOwner(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005F45C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for CRLBoardInteractionOwner.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    unsigned char *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005F46F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unsigned char *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardInteractionOwner.CodingKeys()
{
  return &type metadata for CRLBoardInteractionOwner.CodingKeys;
}

unint64_t sub_1005F472C()
{
  unint64_t result = qword_101675F20;
  if (!qword_101675F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101675F20);
  }
  return result;
}

unint64_t sub_1005F4784()
{
  unint64_t result = qword_101675F28;
  if (!qword_101675F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101675F28);
  }
  return result;
}

unint64_t sub_1005F47DC()
{
  unint64_t result = qword_101675F30;
  if (!qword_101675F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101675F30);
  }
  return result;
}

uint64_t sub_1005F4830()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1005F4864()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005F4880()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1005F48A4()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_1005F48D8@<X0>(uint64_t *a1@<X8>)
{
  id v69 = a1;
  uint64_t v68 = type metadata accessor for InputConnectionBehavior();
  uint64_t v70 = *(void *)(v68 - 8);
  __chkstk_darwin(v68, v1);
  unint64_t v67 = &v48[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_1005057FC(&qword_101673B38);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v62 = &v48[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6, v7);
  uint64_t v66 = &v48[-v8];
  uint64_t v9 = sub_1005057FC(&qword_101691F20);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v61 = &v48[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = &v48[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v20 = &v48[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = type metadata accessor for Locale();
  __chkstk_darwin(v21 - 8, v22);
  uint64_t v23 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v23 - 8, v24);
  uint64_t v64 = type metadata accessor for LocalizedStringResource();
  uint64_t v25 = *(void *)(v64 - 8);
  __chkstk_darwin(v64, v26);
  id v65 = &v48[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v28, v29);
  uint64_t v63 = &v48[-v30];
  uint64_t v58 = sub_1005057FC(&qword_101673B48);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v31 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v33 = v17 + 104;
  uint64_t v32 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v17 + 104);
  v32(v20, enum case for LocalizedStringResource.BundleDescription.main(_:), v16);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  unsigned int v49 = v31;
  uint64_t v50 = v16;
  v32(v20, v31, v16);
  uint64_t v51 = v32;
  uint64_t v52 = v33;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v34 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v25 + 56);
  uint64_t v54 = v25 + 56;
  uint64_t v55 = v34;
  v34(v15, 0, 1, v64);
  uint64_t v35 = type metadata accessor for CRLBoardEntity();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v61, 1, 1, v35);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v32(v20, v31, v16);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v36 = v66;
  IntentDialog.init(_:)();
  uint64_t v37 = type metadata accessor for IntentDialog();
  uint64_t v53 = v37;
  uint64_t v39 = (void (**)(void, void, void, void))(*(void *)(v37 - 8) + 56);
  id v59 = (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))*v39;
  unint64_t v38 = v59;
  uint64_t v60 = v39;
  ((void (*)(void *__return_ptr, unsigned char *, void, uint64_t, uint64_t))v59)((void *)(v37 - 8), v36, 0, 1, v37);
  v38(v62, 1, 1, v37);
  unsigned int v56 = enum case for InputConnectionBehavior.default(_:);
  char v40 = *(void (**)(void))(v70 + 104);
  v70 += 104;
  id v57 = (void (*)(unsigned char *, void, uint64_t))v40;
  v40(v67);
  sub_1005F63D4((unint64_t *)&qword_101673B60, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  *id v69 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  uint64_t v62 = (unsigned char *)sub_1005057FC(&qword_101675F68);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v41 = v49;
  uint64_t v42 = v50;
  uint64_t v43 = v51;
  v51(v20, v49, v50);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v43(v20, v41, v42);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v55(v15, 0, 1, v64);
  uint64_t v73 = 0;
  sub_1005057FC(&qword_101675F70);
  type metadata accessor for UTType();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10117E810;
  static UTType.data.getter();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v43(v20, v41, v42);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v44 = v66;
  IntentDialog.init(_:)();
  v59(v44, 0, 1, v53);
  v57(v67, v56, v68);
  uint64_t v45 = IntentParameter<>.init(title:description:default:supportedContentTypes:requestValueDialog:inputConnectionBehavior:)();
  id v46 = v69;
  v69[1] = v45;
  sub_1005057FC(&qword_101673B50);
  unint64_t v71 = 0xD00000000000001FLL;
  unint64_t v72 = 0x800000010123B260;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  v46[2] = AppDependency.__allocating_init(key:manager:)();
  v46[6] = (uint64_t)&type metadata for CRLInsertFilesToBoardIntentPerformer;
  v46[7] = (uint64_t)&off_101510A18;
  uint64_t result = swift_allocObject();
  v46[3] = result;
  *(void *)(result + 40) = &type metadata for CRLAppIntentsBoardItemsImporter;
  *(void *)(result + 48) = &off_101519C28;
  return result;
}

uint64_t sub_1005F535C(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  v2[12] = type metadata accessor for CRLBoardEntity();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  sub_1005057FC(&qword_101673B38);
  v2[15] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for LocalizedStringResource.BundleDescription();
  v2[16] = v3;
  v2[17] = *(void *)(v3 - 8);
  v2[18] = swift_task_alloc();
  type metadata accessor for Locale();
  v2[19] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  v2[20] = swift_task_alloc();
  type metadata accessor for LocalizedStringResource();
  v2[21] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for IntentDialog();
  v2[22] = v4;
  v2[23] = *(void *)(v4 - 8);
  v2[24] = swift_task_alloc();
  return _swift_task_switch(sub_1005F556C, 0, 0);
}

uint64_t sub_1005F556C()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0[7] + 16);
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_10050F848((void *)(v0[11] + 24), *(void *)(v0[11] + 48));
    IntentParameter.wrappedValue.getter();
    uint64_t v2 = v0[8];
    v0[25] = v2;
    IntentParameter.wrappedValue.getter();
    AppDependency.wrappedValue.getter();
    v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
    v0[6] = &off_10152F800;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[26] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1005F58D4;
    uint64_t v4 = v0[14];
    return sub_1006FB6D8(v2, v4, (uint64_t)(v0 + 2));
  }
  else
  {
    uint64_t v6 = v0[23];
    uint64_t v12 = v0[24];
    uint64_t v13 = v0[22];
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v9 = v0[15];
    uint64_t v10 = v0[16];
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
    LocalizedStringResource.init(_:table:locale:bundle:comment:)();
    IntentDialog.init(_:)();
    IntentParameter.projectedValue.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9, v12, v13);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v9, 0, 1, v13);
    type metadata accessor for AppIntentError();
    sub_1005F63D4(&qword_101675F98, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    IntentParameter.needsValueError(_:)();
    swift_release();
    sub_1005F641C(v9);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v13);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_1005F58D4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1005F6324(*(void *)(v2 + 112));
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_1005F5BA4;
  }
  else
  {
    uint64_t v4 = v2 + 16;
    uint64_t v5 = *(void *)(v2 + 112);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1005F6324(v5);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4);
    uint64_t v3 = sub_1005F5A34;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1005F5A34()
{
  uint64_t v1 = v0[13];
  IntentParameter.wrappedValue.getter();
  v0[9] = IntentParameter.projectedValue.getter();
  sub_1005F63D4((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  sub_1005F6380();
  static IntentResult.result<A, B>(value:opensIntent:)();
  swift_release();
  sub_1005F6324(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1005F5BA4()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005F5C70()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  sub_100568B28(v9, qword_10171A0E8);
  sub_100556B74(v9, (uint64_t)qword_10171A0E8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_1005F5E68()
{
  uint64_t v0 = sub_1005057FC(&qword_101675FA0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v2 = sub_1005057FC(&qword_101675FA8);
  __chkstk_darwin(v2, v3);
  sub_1005F62D0();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v4._countAndFlagsBits = 543450177;
  v4._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  sub_1005057FC(&qword_101675FB0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v5._countAndFlagsBits = 544175136;
  v5._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1005057FC(&qword_101675FB8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v6);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1005F604C@<X0>(uint64_t a1@<X8>)
{
  if (qword_10166ED68 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_100556B74(v2, (uint64_t)qword_10171A0E8);
  Swift::String v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1005F60FC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528488;
  return sub_1005F535C(a1);
}

uint64_t sub_1005F6198(uint64_t a1)
{
  unint64_t v2 = sub_1005F62D0();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for CRLInsertFilesToBoardIntent()
{
  return &type metadata for CRLInsertFilesToBoardIntent;
}

uint64_t sub_1005F61E4()
{
  return sub_100523288(&qword_101675F40, &qword_101675F48);
}

uint64_t sub_1005F6220()
{
  return sub_100523288(&qword_101675F50, &qword_101675F58);
}

uint64_t sub_1005F625C()
{
  return sub_100523288(&qword_101675F60, &qword_101675F58);
}

uint64_t sub_1005F6298()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

unint64_t sub_1005F62D0()
{
  unint64_t result = qword_101675F78;
  if (!qword_101675F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_101675F78);
  }
  return result;
}

uint64_t sub_1005F6324(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1005F6380()
{
  unint64_t result = qword_101675F90;
  if (!qword_101675F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101675F90);
  }
  return result;
}

uint64_t sub_1005F63D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005F641C(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101673B38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005F647C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1005F64A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t CRLAssetDownloadObserverStatus.description.getter(uint64_t a1)
{
  uint64_t result = 0x72676F72506E692ELL;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x737365636375732ELL;
      break;
    case 2:
      uint64_t result = 0x6572756C6961662ELL;
      break;
    case 3:
      uint64_t result = 0x6C6C65636E61632ELL;
      break;
    default:
      type metadata accessor for CRLAssetDownloadObserverStatus(0);
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      JUMPOUT(0x1005F65A4);
  }
  return result;
}

uint64_t CRLAssetDownloadObserverStatus.debugDescription.getter(uint64_t a1)
{
  uint64_t result = 0x72676F72506E692ELL;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x737365636375732ELL;
      break;
    case 2:
      uint64_t result = 0x6572756C6961662ELL;
      break;
    case 3:
      uint64_t result = 0x6C6C65636E61632ELL;
      break;
    default:
      type metadata accessor for CRLAssetDownloadObserverStatus(0);
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      JUMPOUT(0x1005F6684);
  }
  return result;
}

uint64_t sub_1005F6694()
{
  uint64_t result = 0x72676F72506E692ELL;
  switch(*v0)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x737365636375732ELL;
      break;
    case 2:
      uint64_t result = 0x6572756C6961662ELL;
      break;
    case 3:
      uint64_t result = 0x6C6C65636E61632ELL;
      break;
    default:
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      JUMPOUT(0x1005F675CLL);
  }
  return result;
}

uint64_t sub_1005F676C()
{
  uint64_t result = 0x72676F72506E692ELL;
  switch(*v0)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x737365636375732ELL;
      break;
    case 2:
      uint64_t result = 0x6572756C6961662ELL;
      break;
    case 3:
      uint64_t result = 0x6C6C65636E61632ELL;
      break;
    default:
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      JUMPOUT(0x1005F6834);
  }
  return result;
}

uint64_t sub_1005F6844(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t, void, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v77 = a6;
  uint64_t v83 = a4;
  uint64_t v84 = a5;
  uint64_t v9 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v80 = (uint64_t)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v79 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v19 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for URL();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(void *)(v21 + 64);
  __chkstk_darwin(v20, v23);
  unint64_t v81 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v25);
  uint64_t v82 = (char *)&v72 - v26;
  *(void *)&double v29 = __chkstk_darwin(v27, v28).n128_u64[0];
  uint64_t v31 = (char *)&v72 - v30;
  uint64_t v78 = a3;
  [a3 setCompletedUnitCount:1 v29];
  sub_1005F7C80(a1, (uint64_t)v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_1005CCBB8((uint64_t)v19);
    if (a2)
    {
      uint64_t v32 = a2;
    }
    else
    {
      sub_1005F7CE8();
      uint64_t v32 = swift_allocError();
      unsigned char *v68 = 10;
    }
    swift_errorRetain();
    v83(v32, 0, 1);
    return swift_errorRelease();
  }
  else
  {
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v33(v31, v19, v20);
    id v34 = objc_allocWithZone((Class)CRLTemporaryDirectory);
    id v85 = 0;
    id v35 = [v34 initWithError:&v85];
    if (v35)
    {
      uint64_t v36 = v35;
      uint64_t v74 = v33;
      id v37 = v85;
      id v76 = v36;
      id v38 = [v36 URL];
      uint64_t v39 = v81;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      UUID.init()();
      UUID.uuidString.getter();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v15, v12);
      char v40 = v82;
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      uint64_t v41 = *(uint64_t (**)(char *, uint64_t))(v21 + 8);
      uint64_t v42 = v39;
      uint64_t v43 = v40;
      uint64_t v79 = v21 + 8;
      uint64_t v75 = v41;
      v41(v42, v20);
      id v44 = [self defaultManager];
      URL._bridgeToObjectiveC()(v45);
      uint64_t v47 = v46;
      URL._bridgeToObjectiveC()(v48);
      uint64_t v50 = v49;
      id v85 = 0;
      LOBYTE(v36) = [v44 copyItemAtURL:v47 toURL:v49 error:&v85];

      id v51 = v85;
      if (v36)
      {
        uint64_t v52 = type metadata accessor for TaskPriority();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v80, 1, 1, v52);
        uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
        uint64_t v73 = v31;
        uint64_t v54 = v81;
        v53(v81, v43, v20);
        unint64_t v55 = (*(unsigned __int8 *)(v21 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
        unint64_t v56 = (v22 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v57 = (v56 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v58 = (char *)swift_allocObject();
        *((void *)v58 + 2) = 0;
        *((void *)v58 + 3) = 0;
        *((void *)v58 + 4) = v77;
        v74(&v58[v55], v54, v20);
        id v59 = v78;
        *(void *)&v58[v56] = v78;
        uint64_t v60 = &v58[v57];
        uint64_t v61 = v84;
        *(void *)uint64_t v60 = v83;
        *((void *)v60 + 1) = v61;
        id v62 = v76;
        *(void *)&v58[(v57 + 23) & 0xFFFFFFFFFFFFFFF8] = v76;
        id v63 = v51;
        swift_retain();
        id v64 = v59;
        swift_retain();
        id v65 = v62;
        sub_1005912D0(v80, (uint64_t)&unk_101676150, (uint64_t)v58);

        swift_release();
        uint64_t v66 = v75;
        v75(v82, v20);
        return v66(v73, v20);
      }
      id v71 = v85;
      uint64_t v70 = _convertNSErrorToError(_:)();

      swift_willThrow();
      v75(v43, v20);
    }
    else
    {
      id v69 = v85;
      uint64_t v70 = _convertNSErrorToError(_:)();

      swift_willThrow();
    }
    swift_errorRetain();
    v83(v70, 0, 1);
    swift_errorRelease();
    swift_errorRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v31, v20);
  }
}

uint64_t sub_1005F6ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[3] = a7;
  v8[4] = a8;
  v8[2] = a6;
  uint64_t v10 = (void *)swift_task_alloc();
  v8[5] = v10;
  void *v10 = v8;
  v10[1] = sub_1005F6F7C;
  return sub_1005F71E4(a5);
}

uint64_t sub_1005F6F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 48) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_1005F7150;
  }
  else
  {
    *(void *)(v6 + 56) = a2;
    *(void *)(v6 + 64) = a1;
    uint64_t v7 = sub_1005F70B0;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_1005F70B0()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, void))(v0 + 24);
  [*(id *)(v0 + 16) setCompletedUnitCount:2];
  uint64_t v3 = swift_unknownObjectRetain();
  v2(v3, v1, 0);
  swift_unknownObjectRelease_n();
  Swift::String v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1005F7150()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = (void (*)(uint64_t, void, uint64_t))v0[3];
  swift_errorRetain();
  v2(v1, 0, 1);
  swift_errorRelease();
  swift_errorRelease();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1005F71E4(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for URL();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return _swift_task_switch(sub_1005F72A4, 0, 0);
}

uint64_t sub_1005F72A4()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 16))(v1, v0[2], v3);
  type metadata accessor for CRLItemProviderReadAssistant.ReadCoordinatorChannelProvider();
  uint64_t v5 = swift_allocObject();
  v0[7] = v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v5+ OBJC_IVAR____TtCC8Freeform28CRLItemProviderReadAssistantP33_EF9C16D469B33CFEED27B42BD64D986830ReadCoordinatorChannelProvider_directoryURL, v1, v3);
  uint64_t v6 = *(void **)(v4 + 16);
  uint64_t v7 = *(void **)(v4 + 24);
  type metadata accessor for CRLSerializableObjectReadCoordinator();
  uint64_t v8 = (void *)swift_allocObject();
  swift_retain();
  v0[8] = sub_100655F1C(v5, (uint64_t)v6, (uint64_t)v7, 7, v8);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[9] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1005F73F8;
  return sub_100B8FD00();
}

uint64_t sub_1005F73F8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 80) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_1005F75A8;
  }
  else
  {
    *(void *)(v6 + 88) = a2;
    *(void *)(v6 + 96) = a1;
    uint64_t v7 = sub_1005F752C;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_1005F752C()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  uint64_t v3 = v0[11];
  uint64_t v2 = v0[12];
  return v1(v2, v3);
}

uint64_t sub_1005F75A8()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_1005F7620()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v18 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v17 - v6;
  NSString v8 = String._bridgeToObjectiveC()();
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = [v9 pathExtension];

  if (!v10)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v11 = [v8 stringByAppendingPathComponent:v10];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  Swift::Bool v12 = URL.checkResourceIsReachable()();
  if (v13)
  {
    swift_errorRelease();
LABEL_7:
    (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
    return 0;
  }
  if (!v12) {
    goto LABEL_7;
  }
  uint64_t v14 = (uint64_t)v18;
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v18, v7, v0);
  objc_allocWithZone((Class)CRLFileIOChannel);
  id v16 = sub_1009B0748(v14);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
  return v16;
}

uint64_t sub_1005F789C()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtCC8Freeform28CRLItemProviderReadAssistantP33_EF9C16D469B33CFEED27B42BD64D986830ReadCoordinatorChannelProvider_directoryURL;
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

id sub_1005F793C()
{
  return sub_1005F7994();
}

id sub_1005F7968()
{
  return sub_1005F7994();
}

id sub_1005F7994()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  NSString v10 = (char *)&v14 - v9;
  URL.appendingPathComponent(_:)();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v10, v2);
  id v11 = objc_allocWithZone((Class)CRLFileIOChannel);
  id v12 = sub_1009B0748((uint64_t)v6);
  if (!v0) {
    id v1 = v12;
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
  return v1;
}

id sub_1005F7B14()
{
  return sub_1005F7620();
}

uint64_t sub_1005F7B38()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLItemProviderReadAssistant()
{
  return self;
}

uint64_t sub_1005F7B9C()
{
  return type metadata accessor for CRLItemProviderReadAssistant.ReadCoordinatorChannelProvider();
}

uint64_t type metadata accessor for CRLItemProviderReadAssistant.ReadCoordinatorChannelProvider()
{
  uint64_t result = qword_1016760A0;
  if (!qword_1016760A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005F7BF0()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1005F7C80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1005F7CE8()
{
  unint64_t result = qword_101676140;
  if (!qword_101676140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_101676140);
  }
  return result;
}

uint64_t sub_1005F7D3C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release();

  return _swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_1005F7E58()
{
  uint64_t v2 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = swift_task_alloc();
  long long v9 = *(_OWORD *)(v0 + v5);
  *(void *)(v1 + 16) = v8;
  *(void *)uint64_t v8 = v1;
  *(void *)(v8 + 8) = sub_100528488;
  *(_OWORD *)(v8 + 24) = v9;
  *(void *)(v8 + 16) = v7;
  NSString v10 = (void *)swift_task_alloc();
  *(void *)(v8 + 40) = v10;
  void *v10 = v8;
  v10[1] = sub_1005F6F7C;
  return sub_1005F71E4(v6);
}

uint64_t sub_1005F80E4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(double *), uint64_t a7, void *a8)
{
  uint64_t v58 = a5;
  id v59 = a8;
  uint64_t v62 = a7;
  id v63 = a6;
  uint64_t v57 = a4;
  uint64_t v56 = type metadata accessor for URL();
  uint64_t v61 = *(void *)(v56 - 8);
  __chkstk_darwin(v56, v10);
  uint64_t v60 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = _s24ImportableRichTextObjectOMa(0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (void **)((char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v56 - v18;
  uint64_t v20 = sub_1005057FC(&qword_101676180);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (uint64_t *)((char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v24, v25);
  uint64_t v27 = (char *)&v56 - v26;
  uint64_t v28 = _s18LoadedRichTextTypeOMa(0);
  __chkstk_darwin(v28 - 8, v29);
  uint64_t v31 = (char *)&v56 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v33 = (void *)result;
    sub_100522E9C(a1, (uint64_t)v27, &qword_101676180);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_100522F00((uint64_t)v27, &qword_101676180);
      sub_100522E9C(a1, (uint64_t)v23, &qword_101676180);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v34 = *v23;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117E810;
        uint64_t v64 = v34;
        swift_errorRetain();
        sub_1005057FC(&qword_101672BD0);
        uint64_t v36 = String.init<A>(describing:)();
        uint64_t v38 = v37;
        *(void *)(inited + 56) = &type metadata for String;
        *(void *)(inited + 64) = sub_100528BE4();
        *(void *)(inited + 32) = v36;
        *(void *)(inited + 40) = v38;
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"richTextBoardItemProviders(for:factory:uti:maximumCharacterLimit:completion:)", 77, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSItemProviderItemSource.swift", 95, 2, 54, (uint64_t)"Error importing rich text file: %@", 34, 2u, inited);
        sub_1005598CC(inited, (uint64_t)"richTextBoardItemProviders(for:factory:uti:maximumCharacterLimit:completion:)", 77, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSItemProviderItemSource.swift", 95, 2, 54);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();
        v63(_swiftEmptyArrayStorage);

        return swift_errorRelease();
      }
      else
      {

        return sub_100522F00((uint64_t)v23, &qword_101676180);
      }
    }
    else
    {
      sub_1005FA2D4((uint64_t)v27, (uint64_t)v31);
      id v39 = [a3 suggestedName];
      if (v39)
      {
        char v40 = v39;
        uint64_t v41 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v43 = v42;
      }
      else
      {
        uint64_t v41 = 0;
        uint64_t v43 = 0;
      }
      uint64_t v45 = v60;
      uint64_t v44 = v61;
      id v46 = v59;
      sub_1005F872C(v41, v43, v57, (uint64_t)v31, v58, v19);
      swift_bridgeObjectRelease();
      sub_1005FA398((uint64_t)v19, (uint64_t)v15, _s24ImportableRichTextObjectOMa);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v47 = *v15;
        id v48 = [v46 providersForBoardItemsFromImportedRichText:v47];
        sub_1005057FC(&qword_101676170);
        uint64_t v49 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        v63((double *)v49);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v50 = v56;
        (*(void (**)(char *, void **, uint64_t))(v44 + 32))(v45, v15, v56);
        sub_1005057FC(&qword_1016743E0);
        unint64_t v51 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
        uint64_t v52 = swift_allocObject();
        *(_OWORD *)(v52 + 16) = xmmword_10117E810;
        (*(void (**)(unint64_t, char *, uint64_t))(v44 + 16))(v52 + v51, v45, v50);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v54 = [v46 providersForBoardItemsFromURLs:isa];

        if (v54)
        {
          sub_1005057FC(&qword_101676170);
          unint64_t v55 = (double *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
        }
        else
        {
          unint64_t v55 = _swiftEmptyArrayStorage;
        }
        v63(v55);
        swift_bridgeObjectRelease();

        (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v50);
      }
      sub_1005FA338((uint64_t)v19, _s24ImportableRichTextObjectOMa);
      return sub_1005FA338((uint64_t)v31, _s18LoadedRichTextTypeOMa);
    }
  }
  return result;
}

uint64_t sub_1005F872C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  v41[2] = a1;
  uint64_t v42 = a2;
  uint64_t v43 = a3;
  uint64_t v44 = a6;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)v41 - v15;
  uint64_t v17 = _s18LoadedRichTextTypeOMa(0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (id *)((char *)v41 - v23);
  sub_1005FA398(a4, (uint64_t)v41 - v23, _s18LoadedRichTextTypeOMa);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = *(void **)((char *)v24 + *(int *)(sub_1005057FC(&qword_101676188) + 48));
    (*(void (**)(void **, uint64_t))(v9 + 8))(v24, v8);
  }
  else
  {
    uint64_t v25 = *v24;
  }
  if ((uint64_t)[v25 length] <= a5) {
    goto LABEL_13;
  }
  sub_1005FA398(a4, (uint64_t)v20, _s18LoadedRichTextTypeOMa);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1005FA338((uint64_t)v20, _s18LoadedRichTextTypeOMa);
    if (!v42)
    {
      id v27 = [v41[1] defaultTextFileName];
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    swift_bridgeObjectRetain();
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v45 = 0;
    id v29 = [v25 crl_writeToFileUsingName:v28 type:v43 error:&v45];

    id v30 = v45;
    if (v29)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)();
      id v31 = v30;

      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v44, v12, v8);
      goto LABEL_11;
    }
    id v32 = v45;
    uint64_t v33 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
    sub_1005FA400();
    uint64_t v34 = (void *)static OS_os_log.default.getter();
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v45 = v33;
    swift_errorRetain();
    sub_1005057FC(&qword_101672BD0);
    uint64_t v36 = String.init<A>(describing:)();
    uint64_t v38 = v37;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v36;
    *(void *)(inited + 40) = v38;
    uint64_t v39 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v34, (uint64_t)&_mh_execute_header, v39, (uint64_t)"Error trying to write long string to a file", 43, 2, inited);
    swift_errorRelease();
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

LABEL_13:
    *(void *)uint64_t v44 = v25;
    _s24ImportableRichTextObjectOMa(0);
    return swift_storeEnumTagMultiPayload();
  }

  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v26(v16, v20, v8);
  v26(v44, v16, v8);
LABEL_11:
  _s24ImportableRichTextObjectOMa(0);
  return swift_storeEnumTagMultiPayload();
}

void sub_1005F8CC8(uint64_t a1, uint64_t a2)
{
  sub_1005057FC(&qword_101676170);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, objc_class *))(a2 + 16))(a2, isa);
}

uint64_t sub_1005F8D38(uint64_t a1, uint64_t a2, void *a3, void (*a4)(void *), uint64_t a5, uint64_t a6)
{
  uint64_t v83 = a6;
  uint64_t v84 = a3;
  uint64_t v91 = a5;
  uint64_t v92 = a4;
  uint64_t v89 = type metadata accessor for URL.DirectoryHint();
  uint64_t v93 = *(void *)(v89 - 8);
  __chkstk_darwin(v89, v7);
  uint64_t v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v85 = *(void *)(v10 - 8);
  id v86 = (char *)v10;
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_1005057FC(&qword_101676180);
  __chkstk_darwin(v90, v14);
  uint64_t v88 = (uint64_t *)((char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (uint64_t *)((char *)&v78 - v18);
  uint64_t v20 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v23 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for URL();
  uint64_t v25 = *(char **)(v24 - 8);
  __chkstk_darwin(v24, v26);
  uint64_t v82 = (char *)&v78 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28, v29);
  id v31 = (char *)&v78 - v30;
  __chkstk_darwin(v32, v33);
  uint64_t v87 = (char *)&v78 - v34;
  __chkstk_darwin(v35, v36);
  uint64_t v38 = (char *)&v78 - v37;
  sub_100522E9C(a1, (uint64_t)v23, &qword_101672E90);
  id v94 = v25;
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v25 + 6))(v23, 1, v24) == 1)
  {
    sub_100522F00((uint64_t)v23, &qword_101672E90);
    if (v84) {
      id v39 = v84;
    }
    else {
      id v39 = [self crl_fileReadCorruptedFileErrorWithUserInfo:0];
    }
    *uint64_t v19 = v39;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    v92(v19);
    return sub_100522F00((uint64_t)v19, &qword_101676180);
  }
  else
  {
    (*((void (**)(char *, char *, uint64_t))v94 + 4))(v38, v23, v24);
    char v40 = self;
    id v41 = [v40 defaultManager];
    id v42 = [v41 temporaryDirectory];

    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    UUID.init()();
    uint64_t v43 = (void *)UUID.uuidString.getter();
    uint64_t v45 = v44;
    (*(void (**)(char *, char *))(v85 + 8))(v13, v86);
    id v95 = v43;
    uint64_t v96 = v45;
    uint64_t v46 = v93;
    uint64_t v47 = *(void (**)(void))(v93 + 104);
    LODWORD(v84) = enum case for URL.DirectoryHint.inferFromPath(_:);
    uint64_t v48 = v89;
    uint64_t v85 = v93 + 104;
    unint64_t v81 = (void (*)(char *, void, uint64_t))v47;
    v47(v9);
    unint64_t v49 = sub_10052E310();
    uint64_t v50 = v87;
    unint64_t v80 = v49;
    URL.appending<A>(path:directoryHint:)();
    unint64_t v51 = *(void (**)(char *, uint64_t))(v46 + 8);
    id v86 = v9;
    uint64_t v93 = v46 + 8;
    uint64_t v79 = v51;
    v51(v9, v48);
    swift_bridgeObjectRelease();
    uint64_t v52 = (void (*)(char *, uint64_t))*((void *)v94 + 1);
    v52(v31, v24);
    id v53 = [v40 defaultManager];
    URL.deletingLastPathComponent()();
    URL._bridgeToObjectiveC()(v54);
    uint64_t v56 = v55;
    v52(v31, v24);
    URL._bridgeToObjectiveC()(v57);
    id v59 = v58;
    id v95 = 0;
    LODWORD(v46) = [v53 copyItemAtURL:v56 toURL:v58 error:&v95];

    id v60 = v95;
    uint64_t v61 = v50;
    if (v46)
    {
      uint64_t v62 = (uint64_t)v82;
      (*((void (**)(char *, char *, uint64_t))v94 + 2))(v82, v38, v24);
      id v63 = objc_allocWithZone((Class)NSMutableAttributedString);
      uint64_t v64 = v83;
      swift_bridgeObjectRetain();
      id v65 = sub_1005F9718(v62, v64, 0);
      uint64_t v66 = *(int *)(sub_1005057FC(&qword_101676188) + 48);
      id v95 = (id)URL.lastPathComponent.getter();
      uint64_t v96 = v67;
      id v94 = v38;
      uint64_t v68 = v52;
      id v69 = v86;
      uint64_t v70 = v61;
      uint64_t v71 = v89;
      v81(v86, v84, v89);
      uint64_t v72 = (uint64_t)v88;
      URL.appending<A>(path:directoryHint:)();
      v79(v69, v71);
      swift_bridgeObjectRelease();
      *(void *)(v72 + v66) = v65;
      _s18LoadedRichTextTypeOMa(0);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      id v73 = v65;
      v92((void *)v72);

      sub_100522F00(v72, &qword_101676180);
      v68(v70, v24);
      return ((uint64_t (*)(char *, uint64_t))v68)(v94, v24);
    }
    else
    {
      uint64_t v75 = v60;
      uint64_t v76 = _convertNSErrorToError(_:)();

      swift_willThrow();
      uint64_t v77 = (uint64_t)v88;
      *uint64_t v88 = v76;
      swift_storeEnumTagMultiPayload();
      swift_errorRetain();
      v92((void *)v77);
      swift_errorRelease();
      sub_100522F00(v77, &qword_101676180);
      v52(v50, v24);
      return ((uint64_t (*)(char *, uint64_t))v52)(v38, v24);
    }
  }
}

uint64_t sub_1005F94E4(uint64_t a1, unint64_t a2, void *a3, void (*a4)(void *), uint64_t a5, uint64_t a6)
{
  uint64_t v11 = sub_1005057FC(&qword_101676180);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = &v24[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15, v16);
  uint64_t v18 = &v24[-v17];
  if (a2 >> 60 == 15)
  {
    if (a3) {
      id v19 = a3;
    }
    else {
      id v19 = [self crl_fileReadCorruptedFileErrorWithUserInfo:0];
    }
    void *v18 = v19;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    a4(v18);
  }
  else
  {
    id v20 = objc_allocWithZone((Class)NSMutableAttributedString);
    sub_1005FA2A0(a1, a2);
    sub_1005FA2A0(a1, a2);
    swift_bridgeObjectRetain();
    id v21 = sub_1005FA18C(a1, a2, a6, 0);
    sub_100514260(a1, a2);
    void *v14 = v21;
    _s18LoadedRichTextTypeOMa(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    id v22 = v21;
    a4(v14);

    sub_100514260(a1, a2);
    uint64_t v18 = v14;
  }
  return sub_100522F00((uint64_t)v18, &qword_101676180);
}

id sub_1005F9718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  uint64_t v8 = v7;
  type metadata accessor for DocumentReadingOptionKey(0);
  sub_1005FA134();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v18 = 0;
  id v10 = [v4 initWithURL:v8 options:isa documentAttributes:a3 error:&v18];

  id v11 = v18;
  if (v10)
  {
    uint64_t v12 = type metadata accessor for URL();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
    id v14 = v11;
    v13(a1, v12);
  }
  else
  {
    id v15 = v18;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v16 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a1, v16);
  }
  return v10;
}

uint64_t sub_1005F98B0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  uint64_t v37 = a1;
  uint64_t v5 = type metadata accessor for UTType();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v34 - v12;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v34 - v16;
  __chkstk_darwin(v18, v19);
  id v21 = (char *)&v34 - v20;
  sub_1005057FC(&qword_101676178);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 32) = NSDocumentTypeDocumentOption;
  if (a2 < 3)
  {
    uint64_t v23 = inited;
    uint64_t v24 = *(void **)*(&off_10150ADA0 + a2);
    type metadata accessor for DocumentType(0);
    *(void *)(v23 + 64) = v25;
    *(void *)(v23 + 40) = v24;
    uint64_t v26 = NSDocumentTypeDocumentOption;
    id v27 = v24;
    unint64_t v28 = sub_100A39CE0(v23);
    if (a2)
    {
      if (a2 != 2)
      {
        static UTType.rtfd.getter();
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v21, v17, v5);
        id v31 = (void *)swift_allocObject();
        v31[2] = v35;
        v31[3] = v36;
        v31[4] = v28;
        swift_retain();
        uint64_t v30 = NSItemProvider.loadFileRepresentation(for:openInPlace:completionHandler:)();
        uint64_t v13 = v21;
        goto LABEL_8;
      }
      static UTType.flatRTFD.getter();
    }
    else
    {
      static UTType.rtf.getter();
    }
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v13, v9, v5);
    uint64_t v29 = (void *)swift_allocObject();
    v29[2] = v35;
    v29[3] = v36;
    v29[4] = v28;
    swift_retain();
    uint64_t v30 = NSItemProvider.loadDataRepresentation(for:completionHandler:)();
LABEL_8:
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
    return v30;
  }
  unint64_t v38 = a2;
  uint64_t v33 = NSDocumentTypeDocumentOption;
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

uint64_t sub_1005F9BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (**a7)(void, void))
{
  v36[1] = a6;
  uint64_t v37 = a5;
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101676160);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for UTType();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v20 = (char *)v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a7;
  _Block_copy(a7);
  swift_bridgeObjectRetain();
  UTType.init(_:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_100522F00((uint64_t)v15, (uint64_t *)&unk_101676160);
LABEL_5:
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = a3;
    *(void *)(inited + 40) = a4;
    swift_bridgeObjectRetain();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"richTextBoardItemProviders(for:factory:uti:maximumCharacterLimit:completion:)", 77, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSItemProviderItemSource.swift", 95, 2, 32, (uint64_t)"Unsupported rich text UTType: %@", 32, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"richTextBoardItemProviders(for:factory:uti:maximumCharacterLimit:completion:)", 77, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSItemProviderItemSource.swift", 95, 2, 32);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    sub_1005057FC(&qword_101676170);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    ((void (**)(void, Class))a7)[2](a7, isa);
    swift_release();

    return 0;
  }
  v36[0] = a1;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v15, v16);
  unint64_t v22 = sub_100810300((uint64_t)v20);
  char v24 = v23;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  if (v24) {
    goto LABEL_5;
  }
  id v25 = [objc_allocWithZone((Class)CRLBoardItemProviderFactory) initWithBoardItemFactory:a2];
  uint64_t v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v27 = (void *)swift_allocObject();
  unint64_t v28 = (void *)v36[0];
  v27[2] = v26;
  v27[3] = v28;
  uint64_t v29 = v37;
  v27[4] = v22;
  v27[5] = v29;
  v27[6] = sub_1005FA010;
  v27[7] = v21;
  v27[8] = v25;
  swift_retain();
  id v30 = v28;
  swift_retain();
  id v31 = v25;
  uint64_t v32 = sub_1005F98B0((uint64_t)v30, v22, (uint64_t)sub_1005FA0A0, (uint64_t)v27);
  swift_release();

  swift_release();
  swift_release();
  return v32;
}

uint64_t sub_1005F9FD8()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1005FA010(uint64_t a1)
{
  sub_1005F8CC8(a1, *(void *)(v1 + 16));
}

uint64_t sub_1005FA018()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005FA050()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1005FA0A0(uint64_t a1)
{
  return sub_1005F80E4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void (**)(double *))(v1 + 48), *(void *)(v1 + 56), *(void **)(v1 + 64));
}

uint64_t sub_1005FA0B8(uint64_t a1, unint64_t a2, void *a3)
{
  return sub_1005F94E4(a1, a2, a3, *(void (**)(void *))(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
}

uint64_t sub_1005FA0C8()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1005FA108(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1005F8D38(a1, a2, a3, *(void (**)(void *))(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
}

uint64_t _s18LoadedRichTextTypeOMa(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016762A8);
}

unint64_t sub_1005FA134()
{
  unint64_t result = qword_1016716C0;
  if (!qword_1016716C0)
  {
    type metadata accessor for DocumentReadingOptionKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016716C0);
  }
  return result;
}

id sub_1005FA18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  type metadata accessor for DocumentReadingOptionKey(0);
  sub_1005FA134();
  Class v7 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v12 = 0;
  id v8 = [v4 initWithData:isa options:v7 documentAttributes:a4 error:&v12];

  if (v8)
  {
    id v9 = v12;
  }
  else
  {
    id v10 = v12;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v8;
}

uint64_t sub_1005FA2A0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100510D4C(a1, a2);
  }
  return a1;
}

uint64_t _s24ImportableRichTextObjectOMa(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101676200);
}

uint64_t sub_1005FA2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s18LoadedRichTextTypeOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005FA338(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1005FA398(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1005FA400()
{
  unint64_t result = qword_10167B170;
  if (!qword_10167B170)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10167B170);
  }
  return result;
}

char *sub_1005FA440(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    id v8 = *a2;
    *(void *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = *a2;
      *(void *)a1 = *a2;
      Class v7 = v6;
    }
    else
    {
      uint64_t v9 = type metadata accessor for URL();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1005FA540(void **a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = *a1;
  }
  else
  {
    uint64_t v3 = type metadata accessor for URL();
    uint64_t v4 = *(void (**)(void **, uint64_t))(*(void *)(v3 - 8) + 8);
    v4(a1, v3);
  }
}

void **sub_1005FA5D0(void **a1, void **a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = *a2;
    *a1 = *a2;
    id v5 = v4;
  }
  else
  {
    uint64_t v6 = type metadata accessor for URL();
    (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **sub_1005FA680(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_1005FA338((uint64_t)a1, _s24ImportableRichTextObjectOMa);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = *a2;
      *a1 = *a2;
      id v5 = v4;
    }
    else
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1005FA754(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for URL();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1005FA808(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1005FA338((uint64_t)a1, _s24ImportableRichTextObjectOMa);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1005FA8E8()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_1005FA97C(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    id v10 = *a2;
    *(void *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = *(int *)(sub_1005057FC(&qword_101676188) + 48);
      id v8 = *(char **)((char *)a2 + v7);
      *(void *)&a1[v7] = v8;
      id v9 = v8;
    }
    else
    {
      uint64_t v11 = *a2;
      *(void *)a1 = *a2;
      id v12 = v11;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1005FAA98(void **a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for URL();
    (*(void (**)(void **, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
    a1 = (void **)((char *)a1 + *(int *)(sub_1005057FC(&qword_101676188) + 48));
  }
  uint64_t v3 = *a1;
}

void **sub_1005FAB24(void **a1, void **a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for URL();
    (*(void (**)(void **, void **, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    uint64_t v5 = *(int *)(sub_1005057FC(&qword_101676188) + 48);
    uint64_t v6 = *(void **)((char *)a2 + v5);
    *(void **)((char *)a1 + v5) = v6;
    id v7 = v6;
  }
  else
  {
    id v8 = *a2;
    *a1 = *a2;
    id v9 = v8;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **sub_1005FABF0(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_1005FA338((uint64_t)a1, _s18LoadedRichTextTypeOMa);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for URL();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = *(int *)(sub_1005057FC(&qword_101676188) + 48);
      uint64_t v6 = *(void **)((char *)a2 + v5);
      *(void **)((char *)a1 + v5) = v6;
      id v7 = v6;
    }
    else
    {
      id v8 = *a2;
      *a1 = *a2;
      id v9 = v8;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1005FACE0(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = sub_1005057FC(&qword_101676188);
    *(void *)&a1[*(int *)(v7 + 48)] = *(void *)&a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_1005FADB0(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1005FA338((uint64_t)a1, _s18LoadedRichTextTypeOMa);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = sub_1005057FC(&qword_101676188);
      *(void *)&a1[*(int *)(v7 + 48)] = *(void *)&a2[*(int *)(v7 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1005FAEA4()
{
  v2[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

id sub_1005FB080()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSBoardViewControllerTransitioningDelegate();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSBoardViewControllerTransitioningDelegate()
{
  return self;
}

void sub_1005FB0D8(void *a1, void *a2)
{
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (!v4) {
    goto LABEL_32;
  }
  uint64_t v5 = (void *)v4;
  id v6 = a1;
  id v7 = [v5 viewControllers];
  sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
  unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_4;
    }
LABEL_20:

    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_20;
  }
LABEL_4:
  if ((v8 & 0xC000000000000001) != 0)
  {
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v9 = *(id *)(v8 + 32);
  }
  id v10 = v9;
  swift_bridgeObjectRelease();
  type metadata accessor for CRLiOSBoardViewController();
  if (swift_dynamicCastClass())
  {
    self;
    uint64_t v11 = swift_dynamicCastObjCClass();
    if (!v11)
    {

LABEL_15:
      goto LABEL_21;
    }
    id v12 = (void *)v11;
    id v13 = a2;
    id v14 = [v12 viewControllerForColumn:2];
    if (v14)
    {
      uint64_t v15 = v14;
      self;
      uint64_t v16 = (void *)swift_dynamicCastObjCClass();
      if (v16)
      {
        id v17 = [v16 topViewController];

        if (v17)
        {
          type metadata accessor for CRLiOSFolderGridViewController();
          if (swift_dynamicCastClass()) {
            return;
          }
        }
        goto LABEL_15;
      }
    }
  }

LABEL_21:
  id v19 = v6;
  id v20 = [v5 topViewController];
  if (v20)
  {
    id v21 = v20;
    type metadata accessor for CRLiOSBoardViewController();
    if (swift_dynamicCastClass())
    {
      self;
      uint64_t v22 = swift_dynamicCastObjCClass();
      if (v22)
      {
        char v23 = (void *)v22;
        id v24 = a2;
        id v25 = [v23 topViewController];

        if (!v25)
        {
LABEL_30:
          id v19 = v21;
          goto LABEL_31;
        }
        if (swift_dynamicCastClass()) {
          return;
        }
      }
      else
      {
        id v25 = v19;
      }
    }
    else
    {
      id v25 = v21;
      id v21 = v19;
    }

    goto LABEL_30;
  }
LABEL_31:

LABEL_32:
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"transitioningViewControllers(presentedViewController:presentingViewController:)", 79, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewControllerTransitioningDelegate.swift", 116, 2, 50, (uint64_t)"CRLiOSBoardViewControllerTransitioningDelegate could not find expected view controllers to transition between.", 110, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"transitioningViewControllers(presentedViewController:presentingViewController:)", 79, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewControllerTransitioningDelegate.swift", 116, 2, 50);
}

id sub_1005FB458(void *a1, void *a2)
{
  void (*v95)(_OWORD *__return_ptr, uint64_t, uint64_t);
  id v96;
  id v97;
  uint64_t v98;
  id v99;
  double v100;
  double v101;
  double v102;
  double v103;
  id v104;
  id v105;
  long long v106;
  long long v107;
  long long v108;
  long long v109;
  long long v110;
  id v111;
  uint64_t v112;
  id v113;
  char *v114;
  char *v115;
  unsigned char *v116;
  char *v117;
  double *v118;
  id v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  long long v126;
  long long v127;
  long long v128;
  long long v129;
  void (*v130)(uint64_t, uint64_t);
  uint64_t v131;
  _OWORD v132[2];
  char v133;
  void v134[4];
  char v135;
  _OWORD v136[2];
  char v137;

  uint64_t v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4 - 8, v5);
  id v7 = (char *)&v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v12 - 8, v13);
  *(void *)&id v127 = (char *)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  *(void *)&uint64_t v126 = (char *)&v112 - v17;
  __chkstk_darwin(v18, v19);
  uint64_t v124 = (uint64_t)&v112 - v20;
  __chkstk_darwin(v21, v22);
  *(void *)&uint64_t v128 = (char *)&v112 - v23;
  uint64_t v24 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v24 - 8, v25);
  id v27 = (char *)&v112 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28, v29);
  id v31 = (char *)&v112 - v30;
  __chkstk_darwin(v32, v33);
  *(void *)&unint64_t v129 = (char *)&v112 - v34;
  __chkstk_darwin(v35, v36);
  unint64_t v38 = (char *)&v112 - v37;
  __chkstk_darwin(v39, v40);
  id v42 = (char *)&v112 - v41;
  sub_1005FB0D8(a1, a2);
  if (!v43) {
    goto LABEL_22;
  }
  uint64_t v45 = v43;
  uint64_t v46 = v44;
  type metadata accessor for CRLiOSFolderGridViewController();
  uint64_t v47 = swift_dynamicCastClass();
  if (!v47)
  {

LABEL_22:
    uint64_t v87 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
    char v88 = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v42, 1, 1, v87);
    uint64_t v89 = 0;
    id v70 = 0;
    long long v90 = 0uLL;
    unsigned __int8 v91 = 2;
    long long v92 = 0uLL;
    goto LABEL_23;
  }
  uint64_t v121 = v46;
  uint64_t v48 = (unsigned char *)v47;
  uint64_t v119 = v45;
  id v116 = v48;
  id result = [v48 collectionView];
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v50 = result;
  id v51 = [result visibleCells];

  sub_10050BF48(0, (unint64_t *)&qword_101676330);
  unint64_t v52 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v53 = sub_10065C188(v52);
  swift_bridgeObjectRelease();
  if (!v53)
  {

    id v85 = v119;
    goto LABEL_22;
  }
  uint64_t v113 = a2;
  uint64_t v117 = v42;
  id v54 = *(char **)(*(void *)&v121[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v55 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v56 = *(void *)&v54[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  uint64_t v118 = v53;
  uint64_t v57 = v56 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100539548(v57, (uint64_t)v7, type metadata accessor for CRLBoardCRDTData);
  uint64_t v58 = v54;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_1005FCB98((uint64_t)v7, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  id v59 = (uint64_t *)(*(void *)&v54[v55] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v60 = *v59;
  unint64_t v61 = v59[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v11, v60, v61, v128);

  uint64_t v62 = v118;
  uint64_t v63 = *((void *)v118 + 2);
  if (!v63)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    sub_1005FCB98(v128, type metadata accessor for CRLBoardIdentifier);

    id v86 = v119;
    id v42 = v117;
    goto LABEL_22;
  }
  uint64_t v114 = v27;
  id v115 = v31;
  uint64_t v123 = v129 + 8;
  swift_bridgeObjectRetain();
  uint64_t v64 = (uint64_t *)(v62 + 5);
  uint64_t v65 = v124;
  uint64_t v122 = v38;
  while (1)
  {
    uint64_t v66 = (void *)*(v64 - 1);
    uint64_t v67 = *v64;
    uint64_t ObjectType = swift_getObjectType();
    id v69 = *(void (**)(uint64_t, uint64_t))(v67 + 24);
    id v70 = v66;
    uint64_t v131 = ObjectType;
    uint64_t v130 = v69;
    v69(ObjectType, v67);
    uint64_t v71 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
    uint64_t v72 = *(void *)(v71 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v38, 1, v71) == 1) {
      goto LABEL_8;
    }
    uint64_t v73 = v129;
    sub_1005FCAC8((uint64_t)v38, v129);
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      sub_1005FCB98(v73, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_8:
      sub_100522F00((uint64_t)v38, (uint64_t *)&unk_101676310);
      goto LABEL_9;
    }
    uint64_t v120 = v72;
    uint64_t v125 = v70;
    sub_1005057FC(&qword_101677100);
    swift_bridgeObjectRelease();
    sub_1005394E4(v73, v65);
    uint64_t v74 = v65;
    uint64_t v75 = v128;
    char v76 = static UUID.== infix(_:_:)();
    uint64_t v77 = v126;
    sub_100539548(v74, v126, type metadata accessor for CRLBoardIdentifier);
    uint64_t v78 = v75;
    uint64_t v79 = v127;
    sub_100539548(v78, v127, type metadata accessor for CRLBoardIdentifier);
    if ((v76 & 1) == 0)
    {
      sub_1005FCB98(v79, type metadata accessor for CRLBoardIdentifier);
      sub_1005FCB98(v77, type metadata accessor for CRLBoardIdentifier);
      sub_1005FCB98(v74, type metadata accessor for CRLBoardIdentifier);
      uint64_t v65 = v74;
      id v70 = v125;
      unint64_t v38 = v122;
      goto LABEL_8;
    }
    uint64_t v80 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v81 = *(void *)(v77 + v80);
    uint64_t v82 = *(void *)(v77 + v80 + 8);
    uint64_t v83 = (void *)(v79 + v80);
    if (v81 == *v83 && v82 == v83[1]) {
      break;
    }
    char v84 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_1005FCB98(v79, type metadata accessor for CRLBoardIdentifier);
    sub_1005FCB98(v77, type metadata accessor for CRLBoardIdentifier);
    uint64_t v65 = v124;
    sub_1005FCB98(v124, type metadata accessor for CRLBoardIdentifier);
    unint64_t v38 = v122;
    sub_100522F00((uint64_t)v122, (uint64_t *)&unk_101676310);
    id v70 = v125;
    if (v84) {
      goto LABEL_25;
    }
LABEL_9:

    v64 += 2;
    if (!--v63)
    {
      swift_bridgeObjectRelease();
      id v31 = v115;
      id v27 = v114;
      goto LABEL_21;
    }
  }
  sub_1005FCB98(v79, type metadata accessor for CRLBoardIdentifier);
  sub_1005FCB98(v77, type metadata accessor for CRLBoardIdentifier);
  sub_1005FCB98(v124, type metadata accessor for CRLBoardIdentifier);
  sub_100522F00((uint64_t)v122, (uint64_t *)&unk_101676310);
  id v70 = v125;
LABEL_25:
  swift_bridgeObjectRelease_n();
  sub_1005FCB98(v128, type metadata accessor for CRLBoardIdentifier);
  unsigned __int8 v91 = v116[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout];
  uint64_t v89 = *(void **)&v116[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_boardPreviewImageCache];
  id v95 = *(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v67 + 96);
  uint64_t v96 = v70;
  uint64_t v97 = v89;
  uint64_t v98 = v131;
  v95(v132, v131, v67);
  unint64_t v129 = v132[0];
  uint64_t v128 = v132[1];
  char v88 = v133;
  sub_1005FCB30((uint64_t)v132, (uint64_t)v134);
  if (v135)
  {

    uint64_t v99 = v119;
    id v42 = v117;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v120 + 56))(v117, 1, 1, v71);
    id v31 = v115;
    id v27 = v114;
    long long v90 = v129;
    long long v92 = v128;
  }
  else
  {
    id v100 = *(double *)v134;
    id v101 = *(double *)&v134[1];
    uint64_t v102 = *(double *)&v134[2];
    uint64_t v103 = *(double *)&v134[3];
    id v104 = v96;
    id v105 = [v113 view];
    [v104 convertRect:v105 toView:v100];
    unint64_t v129 = v106;
    uint64_t v126 = v107;
    uint64_t v128 = v108;
    id v127 = v109;

    *(void *)&id v110 = v129;
    *((void *)&v110 + 1) = v126;
    unint64_t v129 = v110;
    *(void *)&id v110 = v128;
    *((void *)&v110 + 1) = v127;
    uint64_t v128 = v110;
    id v42 = v117;
    v130(v98, v67);

    double v111 = v119;
    long long v92 = v128;
    long long v90 = v129;
    char v88 = 0;
    id v31 = v115;
    id v27 = v114;
  }
LABEL_23:
  v136[0] = v90;
  v136[1] = v92;
  v137 = v88;
  sub_1005FCAC8((uint64_t)v42, (uint64_t)v31);
  id v93 = objc_allocWithZone((Class)type metadata accessor for CRLiOSBoardViewControllerAnimatedTransition(0));
  sub_1005FCAC8((uint64_t)v31, (uint64_t)v27);
  id v94 = sub_1007512B4(1, v91, (uint64_t)v136, (uint64_t)v70, (uint64_t)v27, v89);

  sub_100522F00((uint64_t)v31, (uint64_t *)&unk_101676310);
  sub_100522F00((uint64_t)v42, (uint64_t *)&unk_101676310);
  return v94;
}

void sub_1005FBFC8(void *a1)
{
  void (*v80)(_OWORD *__return_ptr, uint64_t, uint64_t);
  id v81;
  id v82;
  id v83;
  id v84;
  double v85;
  double v86;
  double v87;
  double v88;
  id v89;
  id v90;
  id v91;
  long long v92;
  long long v93;
  long long v94;
  long long v95;
  id v96;
  id v97;
  id v98;
  int v99;
  void *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t (*v104)(uint64_t);
  long long v105;
  long long v106;
  long long v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  long long v111;
  id v112;
  char *v113;
  _OWORD v114[2];
  char v115;
  void v116[4];
  char v117;
  _OWORD v118[2];
  char v119;
  uint64_t v120;
  uint64_t v121;

  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_10169B4A0);
  __chkstk_darwin(v2 - 8, v3);
  *(void *)&double v111 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  id v110 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v20 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)&v97 - v23;
  __chkstk_darwin(v25, v26);
  uint64_t v28 = (char *)&v97 - v27;
  *(void *)&double v31 = __chkstk_darwin(v29, v30).n128_u64[0];
  uint64_t v33 = (char *)&v97 - v32;
  id v34 = [a1 presentingViewController];
  if (!v34) {
    goto LABEL_10;
  }
  uint64_t v112 = v34;
  sub_1005FB0D8(a1, v34);
  uint64_t v113 = v36;
  if (!v35)
  {
    unint64_t v61 = &v120;
LABEL_9:

LABEL_10:
    uint64_t v62 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
    char v63 = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v33, 1, 1, v62);
    uint64_t v64 = 0;
    uint64_t v65 = 0;
    long long v66 = 0uLL;
    unsigned __int8 v67 = 2;
    long long v68 = 0uLL;
    goto LABEL_27;
  }
  uint64_t v37 = v35;
  type metadata accessor for CRLiOSFolderGridViewController();
  uint64_t v38 = swift_dynamicCastClass();
  if (!v38)
  {

    unint64_t v61 = &v121;
    goto LABEL_9;
  }
  uint64_t v109 = v6;
  uint64_t v108 = v5;
  id v101 = v20;
  uint64_t v102 = v24;
  uint64_t v99 = *(unsigned __int8 *)(v38 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout);
  uint64_t v39 = v33;
  uint64_t v40 = *(void **)(v38 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_boardPreviewImageCache);
  *(void *)&uint64_t v107 = v38;
  *(void *)&uint64_t v106 = &v39[*(int *)(sub_1005057FC(&qword_101677100) + 48)];
  *(void *)&id v105 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator;
  uint64_t v41 = *(char **)(*(void *)&v113[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v103 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v42 = *(void *)&v41[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  id v104 = type metadata accessor for CRLBoardCRDTData;
  sub_100539548(v42, (uint64_t)v12, type metadata accessor for CRLBoardCRDTData);
  uint64_t v98 = v37;
  id v100 = v40;
  id v43 = v40;
  uint64_t v33 = v39;
  uint64_t v97 = v43;
  uint64_t v44 = v41;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_1005FCB98((uint64_t)v12, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v45 = (uint64_t *)(*(void *)&v41[v103] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v46 = *v45;
  unint64_t v47 = v45[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v16, v46, v47, (uint64_t)v33);

  uint64_t v48 = *(char **)(*(void *)&v113[v105] + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v49 = *(void *)&v48[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100539548(v49, (uint64_t)v12, v104);
  uint64_t v50 = v48;
  sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  long long v51 = v118[0];
  sub_1005FCB98((uint64_t)v12, type metadata accessor for CRLBoardCRDTData);

  *(_OWORD *)uint64_t v106 = v51;
  uint64_t v52 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v53 = *(void *)(v52 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v33, 0, 1, v52);
  id v54 = (void *)v107;
  id v55 = sub_100D72460();
  sub_1005FCAC8((uint64_t)v33, (uint64_t)v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v28, 1, v52) == 1)
  {

    __break(1u);
LABEL_30:

    __break(1u);
    goto LABEL_31;
  }
  uint64_t v56 = v111;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

  sub_1005FCB98((uint64_t)v28, type metadata accessor for CRLBoardLibraryViewModel.Item);
  uint64_t v57 = v109;
  uint64_t v58 = v108;
  int v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v109 + 48))(v56, 1, v108);
  uint64_t v24 = v102;
  uint64_t v20 = v101;
  if (v59 == 1)
  {

    id v60 = v98;
    sub_100522F00(v56, (uint64_t *)&unk_10169B4A0);
LABEL_25:
    uint64_t v65 = 0;
    long long v66 = 0uLL;
    char v63 = 1;
    long long v68 = 0uLL;
LABEL_26:
    uint64_t v64 = v100;
    unsigned __int8 v67 = v99;
    goto LABEL_27;
  }
  id v69 = v110;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v110, v56, v58);
  id v70 = [v54 collectionView];
  if (!v70) {
    goto LABEL_30;
  }
  uint64_t v71 = v70;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [v71 scrollToItemAtIndexPath:isa atScrollPosition:0 animated:0];

  id v73 = [v54 collectionView];
  if (v73)
  {
    uint64_t v74 = v73;
    Class v75 = IndexPath._bridgeToObjectiveC()().super.isa;
    id v76 = [v74 cellForItemAtIndexPath:v75];

    if (v76)
    {
      swift_getObjectType();
      uint64_t v77 = swift_conformsToProtocol2();
      if (v77) {
        uint64_t v78 = v77;
      }
      else {
        uint64_t v78 = 0;
      }
      if (v77) {
        uint64_t v65 = v76;
      }
      else {
        uint64_t v65 = 0;
      }
      if (v65)
      {
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v80 = *(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v78 + 96);
        uint64_t v81 = v76;
        v80(v114, ObjectType, v78);
        double v111 = v114[0];
        uint64_t v107 = v114[1];
        char v63 = v115;
        sub_1005FCB30((uint64_t)v114, (uint64_t)v116);
        if ((v117 & 1) == 0)
        {
          id v85 = *(double *)v116;
          id v86 = *(double *)&v116[1];
          uint64_t v87 = *(double *)&v116[2];
          char v88 = *(double *)&v116[3];
          uint64_t v89 = v81;
          long long v90 = v112;
          unsigned __int8 v91 = [v112 view];
          [v65 convertRect:v91 toView:v85];
          double v111 = v92;
          id v105 = v93;
          uint64_t v107 = v94;
          uint64_t v106 = v95;
          uint64_t v96 = v98;

          (*(void (**)(char *, uint64_t))(v109 + 8))(v110, v108);
          *(void *)&long long v68 = v107;
          *(void *)&long long v66 = v111;
          char v63 = 0;
          *((void *)&v66 + 1) = v105;
          *((void *)&v68 + 1) = v106;
          goto LABEL_26;
        }
        (*(void (**)(char *, uint64_t))(v109 + 8))(v110, v108);

        uint64_t v82 = v98;
        uint64_t v64 = v100;
        unsigned __int8 v67 = v99;
        long long v66 = v111;
        long long v68 = v107;
LABEL_27:
        v118[0] = v66;
        v118[1] = v68;
        uint64_t v119 = v63;
        sub_1005FCAC8((uint64_t)v33, (uint64_t)v24);
        char v84 = objc_allocWithZone((Class)type metadata accessor for CRLiOSBoardViewControllerAnimatedTransition(0));
        sub_1005FCAC8((uint64_t)v24, (uint64_t)v20);
        sub_1007512B4(0, v67, (uint64_t)v118, (uint64_t)v65, (uint64_t)v20, v64);

        sub_100522F00((uint64_t)v24, (uint64_t *)&unk_101676310);
        sub_100522F00((uint64_t)v33, (uint64_t *)&unk_101676310);
        return;
      }

      uint64_t v58 = v108;
    }
    uint64_t v83 = v98;

    (*(void (**)(char *, uint64_t))(v109 + 8))(v69, v58);
    goto LABEL_25;
  }
LABEL_31:

  __break(1u);
}

uint64_t sub_1005FCAC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101676310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005FCB30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101676320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005FCB98(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_1005FCBF8(char *a1, char **a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    uint64_t v7 = a1 + 24;
    uint64_t v8 = a2 + 3;
    int v9 = *((unsigned __int8 *)a2 + 280);
    uint64_t v10 = v5;
    switch(v9)
    {
      case 0:
        uint64_t v11 = a2[6];
        if (v11)
        {
          *((void *)a1 + 6) = v11;
          (**((void (***)(uint64_t, _OWORD *))v11 - 1))((uint64_t)(a1 + 24), v8);
        }
        else
        {
          long long v49 = v8[1];
          *uint64_t v7 = *v8;
          *(_OWORD *)(a1 + 40) = v49;
        }
        uint64_t v50 = a1 + 56;
        long long v51 = a2 + 7;
        uint64_t v52 = a2[10];
        if (v52)
        {
          *((void *)a1 + 10) = v52;
          (**((void (***)(_OWORD *, _OWORD *))v52 - 1))(v50, v51);
        }
        else
        {
          long long v92 = *(_OWORD *)(a2 + 9);
          *uint64_t v50 = *v51;
          *(_OWORD *)(a1 + 72) = v92;
        }
        a1[280] = 0;
        break;
      case 1:
        uint64_t v12 = a2[6];
        if (v12)
        {
          *((void *)a1 + 6) = v12;
          (**((void (***)(uint64_t, _OWORD *))v12 - 1))((uint64_t)(a1 + 24), v8);
        }
        else
        {
          long long v53 = v8[1];
          *uint64_t v7 = *v8;
          *(_OWORD *)(a1 + 40) = v53;
        }
        a1[280] = 1;
        break;
      case 18:
        uint64_t v13 = a2[3];
        uint64_t v14 = a2[4];
        *((void *)a1 + 3) = v13;
        *((void *)a1 + 4) = v14;
        char v15 = 18;
        goto LABEL_16;
      case 19:
        uint64_t v16 = *(char **)v8;
        *((void *)a1 + 3) = *(void *)v8;
        char v17 = 19;
        goto LABEL_28;
      case 20:
        uint64_t v13 = a2[3];
        uint64_t v14 = a2[4];
        *((void *)a1 + 3) = v13;
        *((void *)a1 + 4) = v14;
        char v15 = 20;
        goto LABEL_16;
      case 21:
        uint64_t v16 = *(char **)v8;
        *((void *)a1 + 3) = *(void *)v8;
        char v17 = 21;
        goto LABEL_28;
      case 28:
        uint64_t v13 = a2[3];
        uint64_t v14 = a2[4];
        *((void *)a1 + 3) = v13;
        *((void *)a1 + 4) = v14;
        char v15 = 28;
        goto LABEL_16;
      case 29:
        uint64_t v16 = *(char **)v8;
        *((void *)a1 + 3) = *(void *)v8;
        char v17 = 29;
        goto LABEL_28;
      case 30:
        uint64_t v13 = a2[3];
        uint64_t v14 = a2[4];
        *((void *)a1 + 3) = v13;
        *((void *)a1 + 4) = v14;
        char v15 = 30;
LABEL_16:
        a1[280] = v15;
        uint64_t v18 = v13;
        uint64_t v19 = v14;
        break;
      case 31:
        uint64_t v16 = *(char **)v8;
        *((void *)a1 + 3) = *(void *)v8;
        char v17 = 31;
        goto LABEL_28;
      case 32:
        uint64_t v20 = a2[4];
        *((void *)a1 + 3) = a2[3];
        *((void *)a1 + 4) = v20;
        char v21 = 32;
        goto LABEL_25;
      case 33:
        *((void *)a1 + 3) = *(void *)v8;
        char v22 = 33;
        goto LABEL_48;
      case 34:
        uint64_t v23 = a2[6];
        if (v23)
        {
          *((void *)a1 + 6) = v23;
          (**((void (***)(uint64_t, _OWORD *))v23 - 1))((uint64_t)(a1 + 24), v8);
        }
        else
        {
          long long v54 = v8[1];
          *uint64_t v7 = *v8;
          *(_OWORD *)(a1 + 40) = v54;
        }
        id v55 = a1 + 56;
        uint64_t v56 = a2 + 7;
        uint64_t v57 = a2[10];
        if (v57)
        {
          *((void *)a1 + 10) = v57;
          (**((void (***)(_OWORD *, _OWORD *))v57 - 1))(v55, v56);
        }
        else
        {
          long long v93 = *(_OWORD *)(a2 + 9);
          *id v55 = *v56;
          *(_OWORD *)(a1 + 72) = v93;
        }
        a1[280] = 34;
        break;
      case 35:
        uint64_t v24 = a2[6];
        if (v24)
        {
          *((void *)a1 + 6) = v24;
          (**((void (***)(uint64_t, _OWORD *))v24 - 1))((uint64_t)(a1 + 24), v8);
        }
        else
        {
          long long v58 = v8[1];
          *uint64_t v7 = *v8;
          *(_OWORD *)(a1 + 40) = v58;
        }
        a1[280] = 35;
        break;
      case 36:
        uint64_t v25 = a2[4];
        *((void *)a1 + 3) = a2[3];
        *((void *)a1 + 4) = v25;
        char v21 = 36;
LABEL_25:
        a1[280] = v21;
        swift_bridgeObjectRetain();
        goto LABEL_49;
      case 37:
        *((void *)a1 + 3) = *(void *)v8;
        char v22 = 37;
        goto LABEL_48;
      case 58:
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
        a1[56] = *((unsigned char *)a2 + 56);
        uint64_t v16 = a2[8];
        *((void *)a1 + 8) = v16;
        a1[72] = *((unsigned char *)a2 + 72);
        char v17 = 58;
LABEL_28:
        a1[280] = v17;
        uint64_t v26 = v16;
        break;
      case 63:
        long long v27 = v8[1];
        *uint64_t v7 = *v8;
        *(_OWORD *)(a1 + 40) = v27;
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
        uint64_t v28 = a2[11];
        uint64_t v29 = a2[12];
        *((void *)a1 + 11) = v28;
        *((void *)a1 + 12) = v29;
        uint64_t v30 = a2[13];
        double v31 = a2[14];
        *((void *)a1 + 13) = v30;
        *((void *)a1 + 14) = v31;
        uint64_t v32 = a2[18];
        uint64_t v33 = v28;
        id v34 = v29;
        uint64_t v35 = v30;
        uint64_t v36 = v31;
        if (v32)
        {
          uint64_t v37 = a2[19];
          *((void *)a1 + 18) = v32;
          *((void *)a1 + 19) = v37;
          (**((void (***)(uint64_t, uint64_t, char *))v32 - 1))((uint64_t)(a1 + 120), (uint64_t)(a2 + 15), v32);
        }
        else
        {
          long long v59 = *(_OWORD *)(a2 + 17);
          *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
          *(_OWORD *)(a1 + 136) = v59;
          *((void *)a1 + 19) = a2[19];
        }
        id v60 = a2[21];
        *((void *)a1 + 20) = a2[20];
        *((void *)a1 + 21) = v60;
        char v22 = 63;
        goto LABEL_48;
      case 64:
        long long v38 = v8[1];
        *uint64_t v7 = *v8;
        *(_OWORD *)(a1 + 40) = v38;
        uint64_t v39 = a2[7];
        uint64_t v40 = a2[8];
        *((void *)a1 + 7) = v39;
        *((void *)a1 + 8) = v40;
        uint64_t v41 = a2[9];
        uint64_t v42 = a2[10];
        *((void *)a1 + 9) = v41;
        *((void *)a1 + 10) = v42;
        id v43 = a2[14];
        uint64_t v44 = v39;
        uint64_t v45 = v40;
        uint64_t v46 = v41;
        unint64_t v47 = v42;
        if (v43)
        {
          uint64_t v48 = a2[15];
          *((void *)a1 + 14) = v43;
          *((void *)a1 + 15) = v48;
          (**((void (***)(uint64_t, uint64_t, char *))v43 - 1))((uint64_t)(a1 + 88), (uint64_t)(a2 + 11), v43);
        }
        else
        {
          long long v61 = *(_OWORD *)(a2 + 13);
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 104) = v61;
          *((void *)a1 + 15) = a2[15];
        }
        uint64_t v62 = a2[17];
        *((void *)a1 + 16) = a2[16];
        *((void *)a1 + 17) = v62;
        char v22 = 64;
LABEL_48:
        a1[280] = v22;
LABEL_49:
        swift_bridgeObjectRetain();
        break;
      default:
        memcpy(a1 + 24, v8, 0x101uLL);
        break;
    }
    char v63 = a2[36];
    *((void *)a1 + 36) = v63;
    *((_DWORD *)a1 + 74) = *((_DWORD *)a2 + 74);
    uint64_t v64 = a3[5];
    uint64_t v65 = &a1[v64];
    uint64_t v66 = (uint64_t)a2 + v64;
    uint64_t v67 = type metadata accessor for UUID();
    long long v68 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v67 - 8) + 16);
    id v69 = v63;
    v68(v65, v66, v67);
    swift_unknownObjectWeakCopyInit();
    uint64_t v70 = a3[7];
    uint64_t v71 = &a1[v70];
    uint64_t v72 = (char *)a2 + v70;
    uint64_t v73 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
    uint64_t v74 = *(void *)(v73 - 8);
    Class v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
    id v94 = (void (*)(char *, char *, uint64_t))v68;
    if (v75(v72, 1, v73))
    {
      uint64_t v76 = sub_1005057FC(&qword_1016730B0);
      memcpy(v71, v72, *(void *)(*(void *)(v76 - 8) + 64));
    }
    else
    {
      v68(v71, (uint64_t)v72, v67);
      uint64_t v77 = *(int *)(v73 + 20);
      uint64_t v78 = &v71[v77];
      uint64_t v79 = &v72[v77];
      uint64_t v80 = *((void *)v79 + 1);
      *(void *)uint64_t v78 = *(void *)v79;
      *((void *)v78 + 1) = v80;
      uint64_t v81 = *(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56);
      swift_retain();
      v81(v71, 0, 1, v73);
    }
    uint64_t v82 = a3[8];
    uint64_t v83 = &a1[v82];
    char v84 = (char *)a2 + v82;
    if (v75((char *)a2 + v82, 1, v73))
    {
      uint64_t v85 = sub_1005057FC(&qword_1016730B0);
      memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
    }
    else
    {
      v94(v83, v84, v67);
      uint64_t v86 = *(int *)(v73 + 20);
      uint64_t v87 = &v83[v86];
      char v88 = &v84[v86];
      uint64_t v89 = *((void *)v88 + 1);
      *(void *)uint64_t v87 = *(void *)v88;
      *((void *)v87 + 1) = v89;
      long long v90 = *(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56);
      swift_retain();
      v90(v83, 0, 1, v73);
    }
  }
  return a1;
}

uint64_t sub_1005FD444(uint64_t a1, int *a2)
{
  int v4 = (id *)(a1 + 24);
  switch(*(unsigned char *)(a1 + 280))
  {
    case 0:
    case 0x22:
      if (*(void *)(a1 + 48)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v4);
      }
      if (*(void *)(a1 + 80)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 56);
      }
      break;
    case 1:
    case 0x23:
      if (*(void *)(a1 + 48)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v4);
      }
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      break;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:

      break;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 0x21:
    case 0x25:
      goto LABEL_17;
    case 0x3A:

      break;
    case 0x3F:

      if (*(void *)(a1 + 144)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 120);
      }
      goto LABEL_17;
    case 0x40:

      if (*(void *)(a1 + 112)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 88);
      }
LABEL_17:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  swift_unknownObjectWeakDestroy();
  uint64_t v8 = a1 + a2[7];
  uint64_t v9 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  if (!v10(v8, 1, v9))
  {
    v7(v8, v6);
    swift_release();
  }
  uint64_t v11 = a1 + a2[8];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v11, 1, v9);
  if (!result)
  {
    v7(v11, v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_1005FD7E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = (_OWORD *)(a1 + 24);
  uint64_t v7 = (_OWORD *)(a2 + 24);
  int v8 = *(unsigned __int8 *)(a2 + 280);
  id v9 = v5;
  switch(v8)
  {
    case 0:
      uint64_t v10 = *(void *)(a2 + 48);
      if (v10)
      {
        *(void *)(a1 + 48) = v10;
        (**(void (***)(_OWORD *, _OWORD *))(v10 - 8))(v6, v7);
      }
      else
      {
        long long v48 = v7[1];
        *uint64_t v6 = *v7;
        v6[1] = v48;
      }
      long long v49 = (_OWORD *)(a1 + 56);
      uint64_t v50 = (_OWORD *)(a2 + 56);
      uint64_t v51 = *(void *)(a2 + 80);
      if (v51)
      {
        *(void *)(a1 + 80) = v51;
        (**(void (***)(_OWORD *, _OWORD *))(v51 - 8))(v49, v50);
      }
      else
      {
        long long v91 = *(_OWORD *)(a2 + 72);
        _OWORD *v49 = *v50;
        *(_OWORD *)(a1 + 72) = v91;
      }
      *(unsigned char *)(a1 + 280) = 0;
      break;
    case 1:
      uint64_t v11 = *(void *)(a2 + 48);
      if (v11)
      {
        *(void *)(a1 + 48) = v11;
        (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v6, v7);
      }
      else
      {
        long long v52 = v7[1];
        *uint64_t v6 = *v7;
        v6[1] = v52;
      }
      *(unsigned char *)(a1 + 280) = 1;
      break;
    case 18:
      uint64_t v12 = *(void **)(a2 + 24);
      uint64_t v13 = *(void **)(a2 + 32);
      *(void *)(a1 + 24) = v12;
      *(void *)(a1 + 32) = v13;
      char v14 = 18;
      goto LABEL_14;
    case 19:
      char v15 = *(void **)v7;
      *(void *)(a1 + 24) = *(void *)v7;
      char v16 = 19;
      goto LABEL_26;
    case 20:
      uint64_t v12 = *(void **)(a2 + 24);
      uint64_t v13 = *(void **)(a2 + 32);
      *(void *)(a1 + 24) = v12;
      *(void *)(a1 + 32) = v13;
      char v14 = 20;
      goto LABEL_14;
    case 21:
      char v15 = *(void **)v7;
      *(void *)(a1 + 24) = *(void *)v7;
      char v16 = 21;
      goto LABEL_26;
    case 28:
      uint64_t v12 = *(void **)(a2 + 24);
      uint64_t v13 = *(void **)(a2 + 32);
      *(void *)(a1 + 24) = v12;
      *(void *)(a1 + 32) = v13;
      char v14 = 28;
      goto LABEL_14;
    case 29:
      char v15 = *(void **)v7;
      *(void *)(a1 + 24) = *(void *)v7;
      char v16 = 29;
      goto LABEL_26;
    case 30:
      uint64_t v12 = *(void **)(a2 + 24);
      uint64_t v13 = *(void **)(a2 + 32);
      *(void *)(a1 + 24) = v12;
      *(void *)(a1 + 32) = v13;
      char v14 = 30;
LABEL_14:
      *(unsigned char *)(a1 + 280) = v14;
      id v17 = v12;
      id v18 = v13;
      break;
    case 31:
      char v15 = *(void **)v7;
      *(void *)(a1 + 24) = *(void *)v7;
      char v16 = 31;
      goto LABEL_26;
    case 32:
      uint64_t v19 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v19;
      char v20 = 32;
      goto LABEL_23;
    case 33:
      *(void *)(a1 + 24) = *(void *)v7;
      char v21 = 33;
      goto LABEL_46;
    case 34:
      uint64_t v22 = *(void *)(a2 + 48);
      if (v22)
      {
        *(void *)(a1 + 48) = v22;
        (**(void (***)(_OWORD *, _OWORD *))(v22 - 8))(v6, v7);
      }
      else
      {
        long long v53 = v7[1];
        *uint64_t v6 = *v7;
        v6[1] = v53;
      }
      long long v54 = (_OWORD *)(a1 + 56);
      id v55 = (_OWORD *)(a2 + 56);
      uint64_t v56 = *(void *)(a2 + 80);
      if (v56)
      {
        *(void *)(a1 + 80) = v56;
        (**(void (***)(_OWORD *, _OWORD *))(v56 - 8))(v54, v55);
      }
      else
      {
        long long v92 = *(_OWORD *)(a2 + 72);
        *long long v54 = *v55;
        *(_OWORD *)(a1 + 72) = v92;
      }
      *(unsigned char *)(a1 + 280) = 34;
      break;
    case 35:
      uint64_t v23 = *(void *)(a2 + 48);
      if (v23)
      {
        *(void *)(a1 + 48) = v23;
        (**(void (***)(_OWORD *, _OWORD *))(v23 - 8))(v6, v7);
      }
      else
      {
        long long v57 = v7[1];
        *uint64_t v6 = *v7;
        v6[1] = v57;
      }
      *(unsigned char *)(a1 + 280) = 35;
      break;
    case 36:
      uint64_t v24 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v24;
      char v20 = 36;
LABEL_23:
      *(unsigned char *)(a1 + 280) = v20;
      swift_bridgeObjectRetain();
      goto LABEL_47;
    case 37:
      *(void *)(a1 + 24) = *(void *)v7;
      char v21 = 37;
      goto LABEL_46;
    case 58:
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      char v15 = *(void **)(a2 + 64);
      *(void *)(a1 + 64) = v15;
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      char v16 = 58;
LABEL_26:
      *(unsigned char *)(a1 + 280) = v16;
      id v25 = v15;
      break;
    case 63:
      long long v26 = v7[1];
      *uint64_t v6 = *v7;
      v6[1] = v26;
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      long long v27 = *(void **)(a2 + 88);
      uint64_t v28 = *(void **)(a2 + 96);
      *(void *)(a1 + 88) = v27;
      *(void *)(a1 + 96) = v28;
      uint64_t v29 = *(void **)(a2 + 104);
      uint64_t v30 = *(void **)(a2 + 112);
      *(void *)(a1 + 104) = v29;
      *(void *)(a1 + 112) = v30;
      uint64_t v31 = *(void *)(a2 + 144);
      id v32 = v27;
      id v33 = v28;
      id v34 = v29;
      id v35 = v30;
      if (v31)
      {
        uint64_t v36 = *(void *)(a2 + 152);
        *(void *)(a1 + 144) = v31;
        *(void *)(a1 + 152) = v36;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v31 - 8))(a1 + 120, a2 + 120, v31);
      }
      else
      {
        long long v58 = *(_OWORD *)(a2 + 136);
        *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 136) = v58;
        *(void *)(a1 + 152) = *(void *)(a2 + 152);
      }
      uint64_t v59 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v59;
      char v21 = 63;
      goto LABEL_46;
    case 64:
      long long v37 = v7[1];
      *uint64_t v6 = *v7;
      v6[1] = v37;
      long long v38 = *(void **)(a2 + 56);
      uint64_t v39 = *(void **)(a2 + 64);
      *(void *)(a1 + 56) = v38;
      *(void *)(a1 + 64) = v39;
      uint64_t v40 = *(void **)(a2 + 72);
      uint64_t v41 = *(void **)(a2 + 80);
      *(void *)(a1 + 72) = v40;
      *(void *)(a1 + 80) = v41;
      uint64_t v42 = *(void *)(a2 + 112);
      id v43 = v38;
      id v44 = v39;
      id v45 = v40;
      id v46 = v41;
      if (v42)
      {
        uint64_t v47 = *(void *)(a2 + 120);
        *(void *)(a1 + 112) = v42;
        *(void *)(a1 + 120) = v47;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v42 - 8))(a1 + 88, a2 + 88, v42);
      }
      else
      {
        long long v60 = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 104) = v60;
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
      }
      uint64_t v61 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v61;
      char v21 = 64;
LABEL_46:
      *(unsigned char *)(a1 + 280) = v21;
LABEL_47:
      swift_bridgeObjectRetain();
      break;
    default:
      memcpy(v6, v7, 0x101uLL);
      break;
  }
  uint64_t v62 = *(void **)(a2 + 288);
  *(void *)(a1 + 288) = v62;
  *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
  uint64_t v63 = a3[5];
  uint64_t v64 = a1 + v63;
  uint64_t v65 = a2 + v63;
  uint64_t v66 = type metadata accessor for UUID();
  uint64_t v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16);
  id v68 = v62;
  v67(v64, v65, v66);
  swift_unknownObjectWeakCopyInit();
  uint64_t v69 = a3[7];
  uint64_t v70 = (char *)(a1 + v69);
  uint64_t v71 = (char *)(a2 + v69);
  uint64_t v72 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v73 = *(void *)(v72 - 8);
  uint64_t v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48);
  long long v93 = (void (*)(char *, char *, uint64_t))v67;
  if (v74(v71, 1, v72))
  {
    uint64_t v75 = sub_1005057FC(&qword_1016730B0);
    memcpy(v70, v71, *(void *)(*(void *)(v75 - 8) + 64));
  }
  else
  {
    v67((uint64_t)v70, (uint64_t)v71, v66);
    uint64_t v76 = *(int *)(v72 + 20);
    uint64_t v77 = &v70[v76];
    uint64_t v78 = &v71[v76];
    uint64_t v79 = *((void *)v78 + 1);
    *(void *)uint64_t v77 = *(void *)v78;
    *((void *)v77 + 1) = v79;
    uint64_t v80 = *(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56);
    swift_retain();
    v80(v70, 0, 1, v72);
  }
  uint64_t v81 = a3[8];
  uint64_t v82 = (char *)(a1 + v81);
  uint64_t v83 = (char *)(a2 + v81);
  if (v74(v83, 1, v72))
  {
    uint64_t v84 = sub_1005057FC(&qword_1016730B0);
    memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64));
  }
  else
  {
    v93(v82, v83, v66);
    uint64_t v85 = *(int *)(v72 + 20);
    uint64_t v86 = &v82[v85];
    uint64_t v87 = &v83[v85];
    uint64_t v88 = *((void *)v87 + 1);
    *(void *)uint64_t v86 = *(void *)v87;
    *((void *)v86 + 1) = v88;
    uint64_t v89 = *(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56);
    swift_retain();
    v89(v82, 0, 1, v72);
  }
  return a1;
}

uint64_t sub_1005FDFE8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  if (a1 != a2)
  {
    id v9 = (_OWORD *)(a1 + 24);
    uint64_t v10 = (_OWORD *)(a2 + 24);
    sub_10054BD5C(a1 + 24);
    switch(*(unsigned char *)(a2 + 280))
    {
      case 0:
        uint64_t v11 = *(void *)(a2 + 48);
        if (v11)
        {
          *(void *)(a1 + 48) = v11;
          (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 24, a2 + 24);
        }
        else
        {
          long long v47 = *(_OWORD *)(a2 + 40);
          *id v9 = *v10;
          *(_OWORD *)(a1 + 40) = v47;
        }
        long long v48 = (_OWORD *)(a1 + 56);
        long long v49 = (_OWORD *)(a2 + 56);
        uint64_t v50 = *(void *)(a2 + 80);
        if (v50)
        {
          *(void *)(a1 + 80) = v50;
          (**(void (***)(_OWORD *, _OWORD *))(v50 - 8))(v48, v49);
        }
        else
        {
          long long v101 = *(_OWORD *)(a2 + 72);
          *long long v48 = *v49;
          *(_OWORD *)(a1 + 72) = v101;
        }
        *(unsigned char *)(a1 + 280) = 0;
        break;
      case 1:
        uint64_t v12 = *(void *)(a2 + 48);
        if (v12)
        {
          *(void *)(a1 + 48) = v12;
          (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 24, a2 + 24);
        }
        else
        {
          long long v51 = *(_OWORD *)(a2 + 40);
          *id v9 = *v10;
          *(_OWORD *)(a1 + 40) = v51;
        }
        *(unsigned char *)(a1 + 280) = 1;
        break;
      case 0x12:
        uint64_t v13 = *(void **)(a2 + 24);
        *(void *)(a1 + 24) = v13;
        char v14 = *(void **)(a2 + 32);
        *(void *)(a1 + 32) = v14;
        char v15 = 18;
        goto LABEL_15;
      case 0x13:
        char v16 = *(void **)v10;
        *(void *)(a1 + 24) = *(void *)v10;
        char v17 = 19;
        goto LABEL_27;
      case 0x14:
        uint64_t v13 = *(void **)(a2 + 24);
        *(void *)(a1 + 24) = v13;
        char v14 = *(void **)(a2 + 32);
        *(void *)(a1 + 32) = v14;
        char v15 = 20;
        goto LABEL_15;
      case 0x15:
        char v16 = *(void **)v10;
        *(void *)(a1 + 24) = *(void *)v10;
        char v17 = 21;
        goto LABEL_27;
      case 0x1C:
        uint64_t v13 = *(void **)(a2 + 24);
        *(void *)(a1 + 24) = v13;
        char v14 = *(void **)(a2 + 32);
        *(void *)(a1 + 32) = v14;
        char v15 = 28;
        goto LABEL_15;
      case 0x1D:
        char v16 = *(void **)v10;
        *(void *)(a1 + 24) = *(void *)v10;
        char v17 = 29;
        goto LABEL_27;
      case 0x1E:
        uint64_t v13 = *(void **)(a2 + 24);
        *(void *)(a1 + 24) = v13;
        char v14 = *(void **)(a2 + 32);
        *(void *)(a1 + 32) = v14;
        char v15 = 30;
LABEL_15:
        *(unsigned char *)(a1 + 280) = v15;
        id v18 = v13;
        id v19 = v14;
        break;
      case 0x1F:
        char v16 = *(void **)v10;
        *(void *)(a1 + 24) = *(void *)v10;
        char v17 = 31;
        goto LABEL_27;
      case 0x20:
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v20 = 32;
        goto LABEL_24;
      case 0x21:
        *(void *)(a1 + 24) = *(void *)v10;
        char v21 = 33;
        goto LABEL_47;
      case 0x22:
        uint64_t v22 = *(void *)(a2 + 48);
        if (v22)
        {
          *(void *)(a1 + 48) = v22;
          (**(void (***)(uint64_t, uint64_t))(v22 - 8))(a1 + 24, a2 + 24);
        }
        else
        {
          long long v52 = *(_OWORD *)(a2 + 40);
          *id v9 = *v10;
          *(_OWORD *)(a1 + 40) = v52;
        }
        long long v53 = (_OWORD *)(a1 + 56);
        long long v54 = (_OWORD *)(a2 + 56);
        uint64_t v55 = *(void *)(a2 + 80);
        if (v55)
        {
          *(void *)(a1 + 80) = v55;
          (**(void (***)(_OWORD *, _OWORD *))(v55 - 8))(v53, v54);
        }
        else
        {
          long long v102 = *(_OWORD *)(a2 + 72);
          _OWORD *v53 = *v54;
          *(_OWORD *)(a1 + 72) = v102;
        }
        *(unsigned char *)(a1 + 280) = 34;
        break;
      case 0x23:
        uint64_t v23 = *(void *)(a2 + 48);
        if (v23)
        {
          *(void *)(a1 + 48) = v23;
          (**(void (***)(uint64_t, uint64_t))(v23 - 8))(a1 + 24, a2 + 24);
        }
        else
        {
          long long v56 = *(_OWORD *)(a2 + 40);
          *id v9 = *v10;
          *(_OWORD *)(a1 + 40) = v56;
        }
        *(unsigned char *)(a1 + 280) = 35;
        break;
      case 0x24:
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v20 = 36;
LABEL_24:
        *(unsigned char *)(a1 + 280) = v20;
        swift_bridgeObjectRetain();
        goto LABEL_48;
      case 0x25:
        *(void *)(a1 + 24) = *(void *)v10;
        char v21 = 37;
        goto LABEL_47;
      case 0x3A:
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        long long v24 = *(_OWORD *)(a2 + 40);
        *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
        *(_OWORD *)(a1 + 40) = v24;
        char v16 = *(void **)(a2 + 64);
        *(void *)(a1 + 64) = v16;
        *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
        char v17 = 58;
LABEL_27:
        *(unsigned char *)(a1 + 280) = v17;
        id v25 = v16;
        break;
      case 0x3F:
        long long v26 = *(_OWORD *)(a2 + 40);
        *id v9 = *v10;
        *(_OWORD *)(a1 + 40) = v26;
        long long v27 = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 56) = v27;
        uint64_t v28 = *(void **)(a2 + 88);
        *(void *)(a1 + 88) = v28;
        uint64_t v29 = *(void **)(a2 + 96);
        *(void *)(a1 + 96) = v29;
        uint64_t v30 = *(void **)(a2 + 104);
        *(void *)(a1 + 104) = v30;
        uint64_t v31 = *(void **)(a2 + 112);
        *(void *)(a1 + 112) = v31;
        uint64_t v32 = *(void *)(a2 + 144);
        id v33 = v28;
        id v34 = v29;
        id v35 = v30;
        id v36 = v31;
        if (v32)
        {
          *(void *)(a1 + 144) = v32;
          *(void *)(a1 + 152) = *(void *)(a2 + 152);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v32 - 8))(a1 + 120, a2 + 120, v32);
        }
        else
        {
          long long v57 = *(_OWORD *)(a2 + 120);
          long long v58 = *(_OWORD *)(a2 + 136);
          *(void *)(a1 + 152) = *(void *)(a2 + 152);
          *(_OWORD *)(a1 + 120) = v57;
          *(_OWORD *)(a1 + 136) = v58;
        }
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        *(void *)(a1 + 168) = *(void *)(a2 + 168);
        char v21 = 63;
        goto LABEL_47;
      case 0x40:
        long long v37 = *(_OWORD *)(a2 + 40);
        *id v9 = *v10;
        *(_OWORD *)(a1 + 40) = v37;
        long long v38 = *(void **)(a2 + 56);
        *(void *)(a1 + 56) = v38;
        uint64_t v39 = *(void **)(a2 + 64);
        *(void *)(a1 + 64) = v39;
        uint64_t v40 = *(void **)(a2 + 72);
        *(void *)(a1 + 72) = v40;
        uint64_t v41 = *(void **)(a2 + 80);
        *(void *)(a1 + 80) = v41;
        uint64_t v42 = *(void *)(a2 + 112);
        id v43 = v38;
        id v44 = v39;
        id v45 = v40;
        id v46 = v41;
        if (v42)
        {
          *(void *)(a1 + 112) = v42;
          *(void *)(a1 + 120) = *(void *)(a2 + 120);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v42 - 8))(a1 + 88, a2 + 88, v42);
        }
        else
        {
          long long v59 = *(_OWORD *)(a2 + 88);
          long long v60 = *(_OWORD *)(a2 + 104);
          *(void *)(a1 + 120) = *(void *)(a2 + 120);
          *(_OWORD *)(a1 + 88) = v59;
          *(_OWORD *)(a1 + 104) = v60;
        }
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        char v21 = 64;
LABEL_47:
        *(unsigned char *)(a1 + 280) = v21;
LABEL_48:
        swift_bridgeObjectRetain();
        break;
      default:
        memcpy((void *)(a1 + 24), (const void *)(a2 + 24), 0x101uLL);
        break;
    }
  }
  uint64_t v61 = *(void **)(a1 + 288);
  uint64_t v62 = *(void **)(a2 + 288);
  *(void *)(a1 + 288) = v62;
  id v63 = v62;

  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(unsigned char *)(a1 + 297) = *(unsigned char *)(a2 + 297);
  *(unsigned char *)(a1 + 298) = *(unsigned char *)(a2 + 298);
  *(unsigned char *)(a1 + 299) = *(unsigned char *)(a2 + 299);
  uint64_t v64 = a3[5];
  uint64_t v65 = a1 + v64;
  uint64_t v66 = a2 + v64;
  uint64_t v67 = type metadata accessor for UUID();
  uint64_t v105 = *(void *)(v67 - 8);
  uint64_t v106 = v67;
  uint64_t v103 = *(void (**)(uint64_t, uint64_t))(v105 + 24);
  v103(v65, v66);
  swift_unknownObjectWeakCopyAssign();
  uint64_t v68 = a3[7];
  uint64_t v69 = (char *)(a1 + v68);
  uint64_t v70 = (char *)(a2 + v68);
  uint64_t v71 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v104 = *(void *)(v71 - 8);
  uint64_t v72 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 48);
  int v73 = v72(v69, 1, v71);
  int v74 = v72(v70, 1, v71);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v69, v70, v106);
      uint64_t v75 = *(int *)(v71 + 20);
      uint64_t v76 = &v69[v75];
      uint64_t v77 = &v70[v75];
      uint64_t v78 = *((void *)v77 + 1);
      *(void *)uint64_t v76 = *(void *)v77;
      *((void *)v76 + 1) = v78;
      uint64_t v79 = *(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56);
      swift_retain();
      v79(v69, 0, 1, v71);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v74)
  {
    sub_10060078C((uint64_t)v69, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
LABEL_54:
    uint64_t v80 = sub_1005057FC(&qword_1016730B0);
    memcpy(v69, v70, *(void *)(*(void *)(v80 - 8) + 64));
    goto LABEL_55;
  }
  ((void (*)(char *, char *, uint64_t))v103)(v69, v70, v106);
  uint64_t v93 = *(int *)(v71 + 20);
  id v94 = &v69[v93];
  id v95 = &v70[v93];
  uint64_t v96 = *((void *)v95 + 1);
  *(void *)id v94 = *(void *)v95;
  *((void *)v94 + 1) = v96;
  swift_retain();
  swift_release();
LABEL_55:
  uint64_t v81 = a3[8];
  uint64_t v82 = (char *)(a1 + v81);
  uint64_t v83 = (char *)(a2 + v81);
  int v84 = v72((char *)(a1 + v81), 1, v71);
  int v85 = v72(v83, 1, v71);
  if (!v84)
  {
    if (!v85)
    {
      ((void (*)(char *, char *, uint64_t))v103)(v82, v83, v106);
      uint64_t v97 = *(int *)(v71 + 20);
      uint64_t v98 = &v82[v97];
      uint64_t v99 = &v83[v97];
      uint64_t v100 = *((void *)v99 + 1);
      *(void *)uint64_t v98 = *(void *)v99;
      *((void *)v98 + 1) = v100;
      swift_retain();
      swift_release();
      return a1;
    }
    sub_10060078C((uint64_t)v82, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_60;
  }
  if (v85)
  {
LABEL_60:
    uint64_t v91 = sub_1005057FC(&qword_1016730B0);
    memcpy(v82, v83, *(void *)(*(void *)(v91 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v82, v83, v106);
  uint64_t v86 = *(int *)(v71 + 20);
  uint64_t v87 = &v82[v86];
  uint64_t v88 = &v83[v86];
  uint64_t v89 = *((void *)v88 + 1);
  *(void *)uint64_t v87 = *(void *)v88;
  *((void *)v87 + 1) = v89;
  long long v90 = *(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56);
  swift_retain();
  v90(v82, 0, 1, v71);
  return a1;
}

char *sub_1005FE9B0(char *a1, char *a2, int *a3)
{
  memcpy(a1, a2, 0x12CuLL);
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  id v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  swift_unknownObjectWeakTakeInit();
  uint64_t v11 = a3[7];
  __dst = &a1[v11];
  uint64_t v12 = &a2[v11];
  uint64_t v13 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v14 = *(void *)(v13 - 8);
  char v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = sub_1005057FC(&qword_1016730B0);
    memcpy(__dst, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v10(__dst, v12, v9);
    *(_OWORD *)&__dst[*(int *)(v13 + 20)] = *(_OWORD *)&v12[*(int *)(v13 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  uint64_t v17 = a3[8];
  id v18 = &a1[v17];
  id v19 = &a2[v17];
  if (v15(v19, 1, v13))
  {
    uint64_t v20 = sub_1005057FC(&qword_1016730B0);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    v10(v18, v19, v9);
    *(_OWORD *)&v18[*(int *)(v13 + 20)] = *(_OWORD *)&v19[*(int *)(v13 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
  }
  return a1;
}

uint64_t sub_1005FEC08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  if (a1 != a2)
  {
    sub_10054BD5C(a1 + 24);
    memcpy((void *)(a1 + 24), (const void *)(a2 + 24), 0x101uLL);
  }
  uint64_t v7 = *(void **)(a1 + 288);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);

  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(_WORD *)(a1 + 297) = *(_WORD *)(a2 + 297);
  *(unsigned char *)(a1 + 299) = *(unsigned char *)(a2 + 299);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v29 = *(void *)(v11 - 8);
  uint64_t v30 = v11;
  long long v27 = *(void (**)(uint64_t, uint64_t))(v29 + 40);
  v27(v9, v10);
  swift_unknownObjectWeakTakeAssign();
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v28 = *(void *)(v15 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  int v17 = v16(v13, 1, v15);
  int v18 = v16(v14, 1, v15);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v13, v14, v30);
      *(_OWORD *)&v13[*(int *)(v15 + 20)] = *(_OWORD *)&v14[*(int *)(v15 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v13, 0, 1, v15);
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  if (v18)
  {
    sub_10060078C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
LABEL_8:
    uint64_t v19 = sub_1005057FC(&qword_1016730B0);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_9;
  }
  ((void (*)(char *, char *, uint64_t))v27)(v13, v14, v30);
  *(_OWORD *)&v13[*(int *)(v15 + 20)] = *(_OWORD *)&v14[*(int *)(v15 + 20)];
  swift_release();
LABEL_9:
  uint64_t v20 = a3[8];
  char v21 = (char *)(a1 + v20);
  uint64_t v22 = (char *)(a2 + v20);
  int v23 = v16((char *)(a1 + v20), 1, v15);
  int v24 = v16(v22, 1, v15);
  if (!v23)
  {
    if (!v24)
    {
      ((void (*)(char *, char *, uint64_t))v27)(v21, v22, v30);
      *(_OWORD *)&v21[*(int *)(v15 + 20)] = *(_OWORD *)&v22[*(int *)(v15 + 20)];
      swift_release();
      return a1;
    }
    sub_10060078C((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_14;
  }
  if (v24)
  {
LABEL_14:
    uint64_t v25 = sub_1005057FC(&qword_1016730B0);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v21, v22, v30);
  *(_OWORD *)&v21[*(int *)(v15 + 20)] = *(_OWORD *)&v22[*(int *)(v15 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v21, 0, 1, v15);
  return a1;
}

uint64_t sub_1005FEFB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005FEFCC);
}

uint64_t sub_1005FEFCC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005057FC(&qword_1016730B0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1005FF0FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005FF110);
}

void *sub_1005FF110(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    unsigned char *result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005057FC(&qword_1016730B0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLBasicLayerAnimation()
{
  uint64_t result = qword_101676398;
  if (!qword_101676398) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005FF28C()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_10054C810();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1005FF368(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1005498A4(a1, (uint64_t)v7);
  sub_1005057FC((uint64_t *)&unk_101683FD0);
  if (swift_dynamicCast())
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    memcpy(__dst, __src, 0x12CuLL);
    return sub_100600690((uint64_t)__dst, v2);
  }
  else
  {
    memset(__src, 0, 300);
    sub_100522F00((uint64_t)__src, (uint64_t *)&unk_10169AEF0);
    __dst[0] = 0;
    __dst[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(69);
    v5._object = (void *)0x800000010123FAA0;
    v5._countAndFlagsBits = 0xD000000000000043;
    String.append(_:)(v5);
    type metadata accessor for CRLBasicLayerAnimation();
    _print_unlocked<A, B>(_:_:)();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1005FF4D4(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_1016763F0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = type metadata accessor for CRLBasicLayerAnimation();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1005498A4(a1, (uint64_t)v17);
  sub_1005057FC((uint64_t *)&unk_10167BDB0);
  int v12 = swift_dynamicCast();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v12)
  {
    v13(v6, 0, 1, v7);
    sub_100600728((uint64_t)v6, (uint64_t)v11);
    char v14 = sub_100F7D5D0((uint64_t)v11, v1);
    sub_10060078C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
  }
  else
  {
    v13(v6, 1, 1, v7);
    sub_100522F00((uint64_t)v6, &qword_1016763F0);
    char v14 = 0;
  }
  return v14 & 1;
}

float sub_1005FF690(float a1)
{
  type metadata accessor for CRLBasicLayerAnimation();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_100549A68(v1, (uint64_t)v13);
    sub_1009FD6EC(v4, v15);

    sub_100549AC4((uint64_t)v13);
    uint64_t v5 = v16;
    uint64_t v6 = v17;
    sub_10050F848(v15, v16);
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v6 + 48))(v13, v5, v6);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v15);
  }
  else
  {
    memset(v13, 0, sizeof(v13));
    uint64_t v14 = 0;
  }
  double v7 = CACurrentMediaTime();
  id v8 = sub_1005FF7B4((uint64_t)v13, v7);
  sub_100522F00((uint64_t)v13, (uint64_t *)&unk_101684000);
  *(float *)&double v9 = a1;
  [v8 solveForInput:v9];
  float v11 = v10;

  return v11;
}

id sub_1005FF7B4(uint64_t a1, double a2)
{
  uint64_t v3 = v2;
  sub_100522E9C(a1, (uint64_t)v49, (uint64_t *)&unk_101684000);
  sub_100522E9C((uint64_t)v49, (uint64_t)&v41, (uint64_t *)&unk_101684000);
  uint64_t v5 = v46;
  sub_100522F00((uint64_t)&v41, (uint64_t *)&unk_101684000);
  if (!v5)
  {
    type metadata accessor for CRLBasicLayerAnimation();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      double v7 = (void *)Strong;
      sub_100549A68(v2, (uint64_t)&v41);
      sub_1009FD6EC(v7, (uint64_t *)&v35);

      sub_100549AC4((uint64_t)&v41);
      uint64_t v8 = *((void *)&v36 + 1);
      uint64_t v9 = v37;
      sub_10050F848(&v35, *((uint64_t *)&v36 + 1));
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v9 + 48))(&v41, v8, v9);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v35);
    }
    else
    {
      long long v41 = 0u;
      long long v42 = 0u;
      long long v43 = 0u;
      long long v44 = 0u;
      long long v45 = 0u;
      uint64_t v46 = 0;
    }
    sub_100522F00((uint64_t)v49, (uint64_t *)&unk_101684000);
    sub_10054CE80((uint64_t)&v41, (uint64_t)v49);
  }
  sub_100549A68(v2, (uint64_t)&v41);
  char v10 = sub_1009FCAC8();
  sub_1009FC740(v10);
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [self animationWithKeyPath:v11];

  sub_100549AC4((uint64_t)&v41);
  sub_100522E9C((uint64_t)v49, (uint64_t)&v35, (uint64_t *)&unk_101684000);
  if (v40)
  {
    long long v44 = v38;
    long long v45 = v39;
    uint64_t v46 = v40;
    long long v41 = v35;
    long long v42 = v36;
    long long v43 = v37;
    sub_100522E9C((uint64_t)&v41, (uint64_t)&v35, &qword_101672BF0);
    uint64_t v13 = *((void *)&v36 + 1);
    if (*((void *)&v36 + 1))
    {
      uint64_t v14 = sub_10050F848(&v35, *((uint64_t *)&v36 + 1));
      uint64_t v15 = *(void *)(v13 - 8);
      __n128 v16 = __chkstk_darwin(v14, v14);
      int v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v15 + 16))(v18, v16);
      uint64_t v19 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v13);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v35);
    }
    else
    {
      uint64_t v19 = 0;
    }
    [v12 setFromValue:v19];
    swift_unknownObjectRelease();
    sub_100522E9C((uint64_t)&v43, (uint64_t)&v35, &qword_101672BF0);
    uint64_t v20 = *((void *)&v36 + 1);
    if (*((void *)&v36 + 1))
    {
      char v21 = sub_10050F848(&v35, *((uint64_t *)&v36 + 1));
      uint64_t v22 = *(void *)(v20 - 8);
      __n128 v23 = __chkstk_darwin(v21, v21);
      uint64_t v25 = (char *)&v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v22 + 16))(v25, v23);
      uint64_t v26 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v20);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v35);
    }
    else
    {
      uint64_t v26 = 0;
    }
    [v12 setToValue:v26];
    swift_unknownObjectRelease();
    sub_1005499B8((uint64_t)&v41);
  }
  else
  {
    sub_100522F00((uint64_t)&v35, (uint64_t *)&unk_101684000);
  }
  [v12 setBeginTime:*(double *)(v3 + 8) + a2];
  [v12 setDuration:*(double *)(v3 + 16)];
  [v12 setTimingFunction:*(void *)v3];
  sub_100549A68(v3, (uint64_t)&v41);
  long long v27 = v47;
  if (v47)
  {
    id v28 = v12;
    id v29 = v27;
  }
  else
  {
    id v29 = [v12 fillMode];
  }
  id v30 = v27;
  sub_100549AC4((uint64_t)&v41);
  [v12 setFillMode:v29];

  sub_100549A68(v3, (uint64_t)&v41);
  if (v48 == 2)
  {
    id v31 = [v12 isRemovedOnCompletion];
  }
  else
  {
    id v31 = (id)(v48 & 1);
    id v32 = v12;
  }
  sub_100549AC4((uint64_t)&v41);
  [v12 setRemovedOnCompletion:v31];

  sub_100522F00((uint64_t)v49, (uint64_t *)&unk_101684000);
  return v12;
}

uint64_t sub_1005FFCF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1005FFD68()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_1005FFD74@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = (uint64_t)&type metadata for CRLBasicLayerAnimation.Def;
  a1[4] = sub_10054CB94();
  uint64_t v3 = swift_allocObject();
  *a1 = v3;

  return sub_100549A68(v1, v3 + 16);
}

void (*sub_1005FFDD8(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v3[3] = &type metadata for CRLBasicLayerAnimation.Def;
  v3[4] = sub_10054CB94();
  uint64_t v4 = swift_allocObject();
  *uint64_t v3 = v4;
  sub_100549A68(v1, v4 + 16);
  return sub_1005FFE68;
}

void sub_1005FFE68(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  if (a2)
  {
    sub_1005498A4(*a1, (uint64_t)v2 + 40);
    sub_1005FF368((uint64_t)v2 + 40);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v2);
  }
  else
  {
    sub_1005FF368(*a1);
  }

  free(v2);
}

uint64_t sub_1005FFEE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100522E9C(v2 + *(int *)(a1 + 28), a2, &qword_1016730B0);
}

uint64_t sub_1005FFF10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100522E9C(v2 + *(int *)(a1 + 32), a2, &qword_1016730B0);
}

Swift::Int sub_1005FFF40()
{
  return Hasher._finalize()();
}

uint64_t sub_1005FFFD4()
{
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_100600054()
{
  return Hasher._finalize()();
}

double sub_1006000E4()
{
  return *(double *)(v0 + 8);
}

void sub_1006000EC(double a1)
{
  *(double *)(v1 + 8) = a1;
}

double (*sub_1006000F4(void *a1))(uint64_t a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 8);
  return sub_100600120;
}

double sub_100600120(uint64_t a1)
{
  double result = *(double *)a1;
  *(void *)(*(void *)(a1 + 8) + 8) = *(void *)a1;
  return result;
}

double sub_100600130()
{
  return *(double *)(v0 + 16);
}

uint64_t sub_100600138()
{
  return sub_100600C08(&qword_1016763E0, (void (*)(uint64_t))type metadata accessor for CRLBasicLayerAnimation);
}

uint64_t sub_100600180(uint64_t a1)
{
  uint64_t result = sub_100600C08(&qword_1016763E8, (void (*)(uint64_t))type metadata accessor for CRLBasicLayerAnimation);
  *(void *)(a1 + 48) = result;
  return result;
}

id sub_1006001D8(uint64_t a1, double a2)
{
  uint64_t v3 = v2;
  char v6 = sub_1009FCAC8();
  sub_1009FC740(v6);
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [self animationWithKeyPath:v7];

  sub_100522E9C(a1, (uint64_t)&v32, (uint64_t *)&unk_101684000);
  if (v37)
  {
    v39[1] = v35;
    v39[2] = v36;
    uint64_t v40 = v37;
    v38[0] = v32;
    v38[1] = v33;
    v39[0] = v34;
    sub_100522E9C((uint64_t)v38, (uint64_t)&v32, &qword_101672BF0);
    uint64_t v9 = *((void *)&v33 + 1);
    if (*((void *)&v33 + 1))
    {
      char v10 = sub_10050F848(&v32, *((uint64_t *)&v33 + 1));
      uint64_t v11 = *(void *)(v9 - 8);
      __n128 v12 = __chkstk_darwin(v10, v10);
      uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v11 + 16))(v14, v12);
      uint64_t v15 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v32);
    }
    else
    {
      uint64_t v15 = 0;
    }
    [v8 setFromValue:v15];
    swift_unknownObjectRelease();
    sub_100522E9C((uint64_t)v39, (uint64_t)&v32, &qword_101672BF0);
    uint64_t v16 = *((void *)&v33 + 1);
    if (*((void *)&v33 + 1))
    {
      uint64_t v17 = sub_10050F848(&v32, *((uint64_t *)&v33 + 1));
      uint64_t v18 = *(void *)(v16 - 8);
      __n128 v19 = __chkstk_darwin(v17, v17);
      char v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v18 + 16))(v21, v19);
      uint64_t v22 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v16);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v32);
    }
    else
    {
      uint64_t v22 = 0;
    }
    [v8 setToValue:v22];
    swift_unknownObjectRelease();
    sub_1005499B8((uint64_t)v38);
  }
  else
  {
    sub_100522F00((uint64_t)&v32, (uint64_t *)&unk_101684000);
  }
  [v8 setBeginTime:*(double *)(v3 + 8) + a2];
  [v8 setDuration:*(double *)(v3 + 16)];
  [v8 setTimingFunction:*(void *)v3];
  __n128 v23 = *(void **)(v3 + 288);
  if (v23)
  {
    id v24 = v8;
    id v25 = v23;
  }
  else
  {
    id v25 = [v8 fillMode];
  }
  id v26 = v23;
  [v8 setFillMode:v25];

  int v27 = *(unsigned __int8 *)(v3 + 298);
  if (v27 == 2)
  {
    id v28 = [v8 isRemovedOnCompletion];
  }
  else
  {
    id v28 = (id)(v27 & 1);
    id v29 = v8;
  }
  [v8 setRemovedOnCompletion:v28];

  return v8;
}

uint64_t sub_1006005E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1006006C8(v1 + 24, a1);
}

uint64_t sub_1006005F0(uint64_t a1)
{
  return sub_100601D34(a1, v1 + 24);
}

void *sub_1006005F8()
{
  uint64_t v1 = *(void **)(v0 + 288);
  id v2 = v1;
  return v1;
}

void sub_100600620(uint64_t a1)
{
  *(void *)(v1 + 288) = a1;
}

uint64_t sub_10060064C()
{
  return *(unsigned __int8 *)(v0 + 296);
}

uint64_t sub_100600654(uint64_t result)
{
  *(unsigned char *)(v1 + 296) = result;
  return result;
}

uint64_t sub_10060065C()
{
  return *(unsigned __int8 *)(v0 + 297);
}

uint64_t sub_100600664(uint64_t result)
{
  *(unsigned char *)(v1 + 297) = result;
  return result;
}

uint64_t sub_10060066C()
{
  return *(unsigned __int8 *)(v0 + 298);
}

uint64_t sub_100600674(uint64_t result)
{
  *(unsigned char *)(v1 + 298) = result;
  return result;
}

uint64_t sub_10060067C()
{
  return *(unsigned __int8 *)(v0 + 299);
}

uint64_t sub_100600684(uint64_t result)
{
  *(unsigned char *)(v1 + 299) = result;
  return result;
}

uint64_t sub_100600690(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1006006C8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100600728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBasicLayerAnimation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10060078C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1006007EC(uint64_t a1, uint64_t a2)
{
  sub_10057BCD8();
  if ((static NSObject.== infix(_:_:)() & 1) == 0
    || *(double *)(a1 + 8) != *(double *)(a2 + 8)
    || *(double *)(a1 + 16) != *(double *)(a2 + 16)
    || (sub_1009FF590(a1 + 24, a2 + 24) & 1) == 0)
  {
    goto LABEL_25;
  }
  uint64_t v4 = *(void *)(a2 + 288);
  if (!*(void *)(a1 + 288))
  {
    if (!v4) {
      goto LABEL_13;
    }
LABEL_25:
    char v10 = 0;
    return v10 & 1;
  }
  if (!v4) {
    goto LABEL_25;
  }
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v10 = 0;
    if ((v9 & 1) == 0) {
      return v10 & 1;
    }
  }
LABEL_13:
  int v11 = *(unsigned __int8 *)(a1 + 296);
  int v12 = *(unsigned __int8 *)(a2 + 296);
  if (v11 == 2)
  {
    if (v12 != 2) {
      goto LABEL_25;
    }
  }
  else
  {
    char v10 = 0;
    BOOL v13 = (v11 & 1) == 0;
    if (v12 == 2 || ((v13 ^ v12) & 1) == 0) {
      return v10 & 1;
    }
  }
  int v14 = *(unsigned __int8 *)(a1 + 297);
  int v15 = *(unsigned __int8 *)(a2 + 297);
  if (v14 == 2)
  {
    if (v15 != 2) {
      goto LABEL_25;
    }
  }
  else
  {
    char v10 = 0;
    BOOL v16 = (v14 & 1) == 0;
    if (v15 == 2 || ((v16 ^ v15) & 1) == 0) {
      return v10 & 1;
    }
  }
  int v17 = *(unsigned __int8 *)(a1 + 298);
  int v18 = *(unsigned __int8 *)(a2 + 298);
  if (v17 == 2)
  {
    if (v18 != 2) {
      goto LABEL_25;
    }
LABEL_29:
    char v10 = *(unsigned char *)(a1 + 299) ^ *(unsigned char *)(a2 + 299) ^ 1;
    return v10 & 1;
  }
  char v10 = 0;
  BOOL v20 = (v17 & 1) == 0;
  if (v18 != 2 && ((v20 ^ v18) & 1) != 0) {
    goto LABEL_29;
  }
  return v10 & 1;
}

uint64_t sub_1006009B0()
{
  uint64_t v1 = (id *)(v0 + 40);
  switch(*(unsigned char *)(v0 + 296))
  {
    case 0:
    case 0x22:
      if (*(void *)(v0 + 64)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      if (*(void *)(v0 + 96)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 72);
      }
      break;
    case 1:
    case 0x23:
      if (*(void *)(v0 + 64)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      break;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:

      break;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 0x21:
    case 0x25:
      goto LABEL_17;
    case 0x3A:

      break;
    case 0x3F:

      if (*(void *)(v0 + 160)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 136);
      }
      goto LABEL_17;
    case 0x40:

      if (*(void *)(v0 + 128)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 104);
      }
LABEL_17:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, 316, 7);
}

uint64_t sub_100600C08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void destroy for CRLBasicLayerAnimation.Def(uint64_t a1)
{
  id v2 = (id *)(a1 + 24);
  switch(*(unsigned char *)(a1 + 280))
  {
    case 0:
    case 0x22:
      if (*(void *)(a1 + 48)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v2);
      }
      if (*(void *)(a1 + 80)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 56);
      }
      break;
    case 1:
    case 0x23:
      if (*(void *)(a1 + 48)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v2);
      }
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      break;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:

      break;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 0x21:
    case 0x25:
      goto LABEL_17;
    case 0x3A:

      break;
    case 0x3F:

      if (*(void *)(a1 + 144)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 120);
      }
      goto LABEL_17;
    case 0x40:

      if (*(void *)(a1 + 112)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 88);
      }
LABEL_17:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v3 = *(void **)(a1 + 288);
}

uint64_t initializeWithCopy for CRLBasicLayerAnimation.Def(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v5 = (_OWORD *)(a1 + 24);
  uint64_t v6 = (_OWORD *)(a2 + 24);
  int v7 = *(unsigned __int8 *)(a2 + 280);
  id v8 = v4;
  switch(v7)
  {
    case 0:
      uint64_t v9 = *(void *)(a2 + 48);
      if (v9)
      {
        *(void *)(a1 + 48) = v9;
        (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v5, v6);
      }
      else
      {
        long long v47 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v47;
      }
      char v48 = (_OWORD *)(a1 + 56);
      long long v49 = (_OWORD *)(a2 + 56);
      uint64_t v50 = *(void *)(a2 + 80);
      if (v50)
      {
        *(void *)(a1 + 80) = v50;
        (**(void (***)(_OWORD *, _OWORD *))(v50 - 8))(v48, v49);
      }
      else
      {
        long long v64 = *(_OWORD *)(a2 + 72);
        *char v48 = *v49;
        *(_OWORD *)(a1 + 72) = v64;
      }
      *(unsigned char *)(a1 + 280) = 0;
      break;
    case 1:
      uint64_t v10 = *(void *)(a2 + 48);
      if (v10)
      {
        *(void *)(a1 + 48) = v10;
        (**(void (***)(_OWORD *, _OWORD *))(v10 - 8))(v5, v6);
      }
      else
      {
        long long v51 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v51;
      }
      *(unsigned char *)(a1 + 280) = 1;
      break;
    case 18:
      int v11 = *(void **)(a2 + 24);
      int v12 = *(void **)(a2 + 32);
      *(void *)(a1 + 24) = v11;
      *(void *)(a1 + 32) = v12;
      char v13 = 18;
      goto LABEL_14;
    case 19:
      int v14 = *(void **)v6;
      *(void *)(a1 + 24) = *(void *)v6;
      char v15 = 19;
      goto LABEL_26;
    case 20:
      int v11 = *(void **)(a2 + 24);
      int v12 = *(void **)(a2 + 32);
      *(void *)(a1 + 24) = v11;
      *(void *)(a1 + 32) = v12;
      char v13 = 20;
      goto LABEL_14;
    case 21:
      int v14 = *(void **)v6;
      *(void *)(a1 + 24) = *(void *)v6;
      char v15 = 21;
      goto LABEL_26;
    case 28:
      int v11 = *(void **)(a2 + 24);
      int v12 = *(void **)(a2 + 32);
      *(void *)(a1 + 24) = v11;
      *(void *)(a1 + 32) = v12;
      char v13 = 28;
      goto LABEL_14;
    case 29:
      int v14 = *(void **)v6;
      *(void *)(a1 + 24) = *(void *)v6;
      char v15 = 29;
      goto LABEL_26;
    case 30:
      int v11 = *(void **)(a2 + 24);
      int v12 = *(void **)(a2 + 32);
      *(void *)(a1 + 24) = v11;
      *(void *)(a1 + 32) = v12;
      char v13 = 30;
LABEL_14:
      *(unsigned char *)(a1 + 280) = v13;
      id v16 = v11;
      id v17 = v12;
      break;
    case 31:
      int v14 = *(void **)v6;
      *(void *)(a1 + 24) = *(void *)v6;
      char v15 = 31;
      goto LABEL_26;
    case 32:
      uint64_t v18 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v18;
      char v19 = 32;
      goto LABEL_23;
    case 33:
      *(void *)(a1 + 24) = *(void *)v6;
      char v20 = 33;
      goto LABEL_46;
    case 34:
      uint64_t v21 = *(void *)(a2 + 48);
      if (v21)
      {
        *(void *)(a1 + 48) = v21;
        (**(void (***)(_OWORD *, _OWORD *))(v21 - 8))(v5, v6);
      }
      else
      {
        long long v52 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v52;
      }
      long long v53 = (_OWORD *)(a1 + 56);
      long long v54 = (_OWORD *)(a2 + 56);
      uint64_t v55 = *(void *)(a2 + 80);
      if (v55)
      {
        *(void *)(a1 + 80) = v55;
        (**(void (***)(_OWORD *, _OWORD *))(v55 - 8))(v53, v54);
      }
      else
      {
        long long v65 = *(_OWORD *)(a2 + 72);
        _OWORD *v53 = *v54;
        *(_OWORD *)(a1 + 72) = v65;
      }
      *(unsigned char *)(a1 + 280) = 34;
      break;
    case 35:
      uint64_t v22 = *(void *)(a2 + 48);
      if (v22)
      {
        *(void *)(a1 + 48) = v22;
        (**(void (***)(_OWORD *, _OWORD *))(v22 - 8))(v5, v6);
      }
      else
      {
        long long v56 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v56;
      }
      *(unsigned char *)(a1 + 280) = 35;
      break;
    case 36:
      uint64_t v23 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v23;
      char v19 = 36;
LABEL_23:
      *(unsigned char *)(a1 + 280) = v19;
      swift_bridgeObjectRetain();
      goto LABEL_47;
    case 37:
      *(void *)(a1 + 24) = *(void *)v6;
      char v20 = 37;
      goto LABEL_46;
    case 58:
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      int v14 = *(void **)(a2 + 64);
      *(void *)(a1 + 64) = v14;
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      char v15 = 58;
LABEL_26:
      *(unsigned char *)(a1 + 280) = v15;
      id v24 = v14;
      break;
    case 63:
      long long v25 = v6[1];
      *uint64_t v5 = *v6;
      v5[1] = v25;
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      id v26 = *(void **)(a2 + 88);
      int v27 = *(void **)(a2 + 96);
      *(void *)(a1 + 88) = v26;
      *(void *)(a1 + 96) = v27;
      id v28 = *(void **)(a2 + 104);
      id v29 = *(void **)(a2 + 112);
      *(void *)(a1 + 104) = v28;
      *(void *)(a1 + 112) = v29;
      uint64_t v30 = *(void *)(a2 + 144);
      id v31 = v26;
      id v32 = v27;
      id v33 = v28;
      id v34 = v29;
      if (v30)
      {
        uint64_t v35 = *(void *)(a2 + 152);
        *(void *)(a1 + 144) = v30;
        *(void *)(a1 + 152) = v35;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v30 - 8))(a1 + 120, a2 + 120, v30);
      }
      else
      {
        long long v57 = *(_OWORD *)(a2 + 136);
        *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 136) = v57;
        *(void *)(a1 + 152) = *(void *)(a2 + 152);
      }
      uint64_t v58 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v58;
      char v20 = 63;
      goto LABEL_46;
    case 64:
      long long v36 = v6[1];
      *uint64_t v5 = *v6;
      v5[1] = v36;
      uint64_t v37 = *(void **)(a2 + 56);
      long long v38 = *(void **)(a2 + 64);
      *(void *)(a1 + 56) = v37;
      *(void *)(a1 + 64) = v38;
      long long v39 = *(void **)(a2 + 72);
      uint64_t v40 = *(void **)(a2 + 80);
      *(void *)(a1 + 72) = v39;
      *(void *)(a1 + 80) = v40;
      uint64_t v41 = *(void *)(a2 + 112);
      id v42 = v37;
      id v43 = v38;
      id v44 = v39;
      id v45 = v40;
      if (v41)
      {
        uint64_t v46 = *(void *)(a2 + 120);
        *(void *)(a1 + 112) = v41;
        *(void *)(a1 + 120) = v46;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v41 - 8))(a1 + 88, a2 + 88, v41);
      }
      else
      {
        long long v59 = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 104) = v59;
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
      }
      uint64_t v60 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v60;
      char v20 = 64;
LABEL_46:
      *(unsigned char *)(a1 + 280) = v20;
LABEL_47:
      swift_bridgeObjectRetain();
      break;
    default:
      memcpy(v5, v6, 0x101uLL);
      break;
  }
  uint64_t v61 = *(void **)(a2 + 288);
  *(void *)(a1 + 288) = v61;
  *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
  id v62 = v61;
  return a1;
}

uint64_t assignWithCopy for CRLBasicLayerAnimation.Def(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  if (a1 != a2)
  {
    int v7 = (_OWORD *)(a1 + 24);
    id v8 = (_OWORD *)(a2 + 24);
    sub_10054BD5C(a1 + 24);
    switch(*(unsigned char *)(a2 + 280))
    {
      case 0:
        uint64_t v9 = *(void *)(a2 + 48);
        if (v9)
        {
          *(void *)(a1 + 48) = v9;
          (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 24, a2 + 24);
        }
        else
        {
          long long v45 = *(_OWORD *)(a2 + 40);
          *int v7 = *v8;
          *(_OWORD *)(a1 + 40) = v45;
        }
        uint64_t v46 = (_OWORD *)(a1 + 56);
        long long v47 = (_OWORD *)(a2 + 56);
        uint64_t v48 = *(void *)(a2 + 80);
        if (v48)
        {
          *(void *)(a1 + 80) = v48;
          (**(void (***)(_OWORD *, _OWORD *))(v48 - 8))(v46, v47);
        }
        else
        {
          long long v63 = *(_OWORD *)(a2 + 72);
          *uint64_t v46 = *v47;
          *(_OWORD *)(a1 + 72) = v63;
        }
        *(unsigned char *)(a1 + 280) = 0;
        break;
      case 1:
        uint64_t v10 = *(void *)(a2 + 48);
        if (v10)
        {
          *(void *)(a1 + 48) = v10;
          (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 24, a2 + 24);
        }
        else
        {
          long long v49 = *(_OWORD *)(a2 + 40);
          *int v7 = *v8;
          *(_OWORD *)(a1 + 40) = v49;
        }
        *(unsigned char *)(a1 + 280) = 1;
        break;
      case 0x12:
        int v11 = *(void **)(a2 + 24);
        *(void *)(a1 + 24) = v11;
        int v12 = *(void **)(a2 + 32);
        *(void *)(a1 + 32) = v12;
        char v13 = 18;
        goto LABEL_15;
      case 0x13:
        int v14 = *(void **)v8;
        *(void *)(a1 + 24) = *(void *)v8;
        char v15 = 19;
        goto LABEL_27;
      case 0x14:
        int v11 = *(void **)(a2 + 24);
        *(void *)(a1 + 24) = v11;
        int v12 = *(void **)(a2 + 32);
        *(void *)(a1 + 32) = v12;
        char v13 = 20;
        goto LABEL_15;
      case 0x15:
        int v14 = *(void **)v8;
        *(void *)(a1 + 24) = *(void *)v8;
        char v15 = 21;
        goto LABEL_27;
      case 0x1C:
        int v11 = *(void **)(a2 + 24);
        *(void *)(a1 + 24) = v11;
        int v12 = *(void **)(a2 + 32);
        *(void *)(a1 + 32) = v12;
        char v13 = 28;
        goto LABEL_15;
      case 0x1D:
        int v14 = *(void **)v8;
        *(void *)(a1 + 24) = *(void *)v8;
        char v15 = 29;
        goto LABEL_27;
      case 0x1E:
        int v11 = *(void **)(a2 + 24);
        *(void *)(a1 + 24) = v11;
        int v12 = *(void **)(a2 + 32);
        *(void *)(a1 + 32) = v12;
        char v13 = 30;
LABEL_15:
        *(unsigned char *)(a1 + 280) = v13;
        id v16 = v11;
        id v17 = v12;
        break;
      case 0x1F:
        int v14 = *(void **)v8;
        *(void *)(a1 + 24) = *(void *)v8;
        char v15 = 31;
        goto LABEL_27;
      case 0x20:
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v18 = 32;
        goto LABEL_24;
      case 0x21:
        *(void *)(a1 + 24) = *(void *)v8;
        char v19 = 33;
        goto LABEL_47;
      case 0x22:
        uint64_t v20 = *(void *)(a2 + 48);
        if (v20)
        {
          *(void *)(a1 + 48) = v20;
          (**(void (***)(uint64_t, uint64_t))(v20 - 8))(a1 + 24, a2 + 24);
        }
        else
        {
          long long v50 = *(_OWORD *)(a2 + 40);
          *int v7 = *v8;
          *(_OWORD *)(a1 + 40) = v50;
        }
        long long v51 = (_OWORD *)(a1 + 56);
        long long v52 = (_OWORD *)(a2 + 56);
        uint64_t v53 = *(void *)(a2 + 80);
        if (v53)
        {
          *(void *)(a1 + 80) = v53;
          (**(void (***)(_OWORD *, _OWORD *))(v53 - 8))(v51, v52);
        }
        else
        {
          long long v64 = *(_OWORD *)(a2 + 72);
          *long long v51 = *v52;
          *(_OWORD *)(a1 + 72) = v64;
        }
        *(unsigned char *)(a1 + 280) = 34;
        break;
      case 0x23:
        uint64_t v21 = *(void *)(a2 + 48);
        if (v21)
        {
          *(void *)(a1 + 48) = v21;
          (**(void (***)(uint64_t, uint64_t))(v21 - 8))(a1 + 24, a2 + 24);
        }
        else
        {
          long long v54 = *(_OWORD *)(a2 + 40);
          *int v7 = *v8;
          *(_OWORD *)(a1 + 40) = v54;
        }
        *(unsigned char *)(a1 + 280) = 35;
        break;
      case 0x24:
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v18 = 36;
LABEL_24:
        *(unsigned char *)(a1 + 280) = v18;
        swift_bridgeObjectRetain();
        goto LABEL_48;
      case 0x25:
        *(void *)(a1 + 24) = *(void *)v8;
        char v19 = 37;
        goto LABEL_47;
      case 0x3A:
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        long long v22 = *(_OWORD *)(a2 + 40);
        *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
        *(_OWORD *)(a1 + 40) = v22;
        int v14 = *(void **)(a2 + 64);
        *(void *)(a1 + 64) = v14;
        *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
        char v15 = 58;
LABEL_27:
        *(unsigned char *)(a1 + 280) = v15;
        id v23 = v14;
        break;
      case 0x3F:
        long long v24 = *(_OWORD *)(a2 + 40);
        *int v7 = *v8;
        *(_OWORD *)(a1 + 40) = v24;
        long long v25 = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 56) = v25;
        id v26 = *(void **)(a2 + 88);
        *(void *)(a1 + 88) = v26;
        int v27 = *(void **)(a2 + 96);
        *(void *)(a1 + 96) = v27;
        id v28 = *(void **)(a2 + 104);
        *(void *)(a1 + 104) = v28;
        id v29 = *(void **)(a2 + 112);
        *(void *)(a1 + 112) = v29;
        uint64_t v30 = *(void *)(a2 + 144);
        id v31 = v26;
        id v32 = v27;
        id v33 = v28;
        id v34 = v29;
        if (v30)
        {
          *(void *)(a1 + 144) = v30;
          *(void *)(a1 + 152) = *(void *)(a2 + 152);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v30 - 8))(a1 + 120, a2 + 120, v30);
        }
        else
        {
          long long v55 = *(_OWORD *)(a2 + 120);
          long long v56 = *(_OWORD *)(a2 + 136);
          *(void *)(a1 + 152) = *(void *)(a2 + 152);
          *(_OWORD *)(a1 + 120) = v55;
          *(_OWORD *)(a1 + 136) = v56;
        }
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        *(void *)(a1 + 168) = *(void *)(a2 + 168);
        char v19 = 63;
        goto LABEL_47;
      case 0x40:
        long long v35 = *(_OWORD *)(a2 + 40);
        *int v7 = *v8;
        *(_OWORD *)(a1 + 40) = v35;
        long long v36 = *(void **)(a2 + 56);
        *(void *)(a1 + 56) = v36;
        uint64_t v37 = *(void **)(a2 + 64);
        *(void *)(a1 + 64) = v37;
        long long v38 = *(void **)(a2 + 72);
        *(void *)(a1 + 72) = v38;
        long long v39 = *(void **)(a2 + 80);
        *(void *)(a1 + 80) = v39;
        uint64_t v40 = *(void *)(a2 + 112);
        id v41 = v36;
        id v42 = v37;
        id v43 = v38;
        id v44 = v39;
        if (v40)
        {
          *(void *)(a1 + 112) = v40;
          *(void *)(a1 + 120) = *(void *)(a2 + 120);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v40 - 8))(a1 + 88, a2 + 88, v40);
        }
        else
        {
          long long v57 = *(_OWORD *)(a2 + 88);
          long long v58 = *(_OWORD *)(a2 + 104);
          *(void *)(a1 + 120) = *(void *)(a2 + 120);
          *(_OWORD *)(a1 + 88) = v57;
          *(_OWORD *)(a1 + 104) = v58;
        }
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        char v19 = 64;
LABEL_47:
        *(unsigned char *)(a1 + 280) = v19;
LABEL_48:
        swift_bridgeObjectRetain();
        break;
      default:
        memcpy((void *)(a1 + 24), (const void *)(a2 + 24), 0x101uLL);
        break;
    }
  }
  long long v59 = *(void **)(a1 + 288);
  uint64_t v60 = *(void **)(a2 + 288);
  *(void *)(a1 + 288) = v60;
  id v61 = v60;

  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(unsigned char *)(a1 + 297) = *(unsigned char *)(a2 + 297);
  *(unsigned char *)(a1 + 298) = *(unsigned char *)(a2 + 298);
  *(unsigned char *)(a1 + 299) = *(unsigned char *)(a2 + 299);
  return a1;
}

void *initializeWithTake for CRLBasicLayerAnimation.Def(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x12CuLL);
}

uint64_t assignWithTake for CRLBasicLayerAnimation.Def(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  if (a1 != a2)
  {
    sub_10054BD5C(a1 + 24);
    memcpy((void *)(a1 + 24), (const void *)(a2 + 24), 0x101uLL);
  }
  uint64_t v5 = *(void **)(a1 + 288);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);

  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(_WORD *)(a1 + 297) = *(_WORD *)(a2 + 297);
  *(unsigned char *)(a1 + 299) = *(unsigned char *)(a2 + 299);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLBasicLayerAnimation.Def(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 300)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLBasicLayerAnimation.Def(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 296) = 0;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 300) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 300) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBasicLayerAnimation.Def()
{
  return &type metadata for CRLBasicLayerAnimation.Def;
}

unint64_t sub_100601CB8(uint64_t a1)
{
  unint64_t result = sub_100601CE0();
  *(void *)(a1 + 40) = result;
  return result;
}

unint64_t sub_100601CE0()
{
  unint64_t result = qword_1016763F8;
  if (!qword_1016763F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016763F8);
  }
  return result;
}

uint64_t sub_100601D34(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100601D90()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v8 = __chkstk_darwin(v6, v7).n128_u64[0];
  uint64_t v10 = (char *)&v22 - v9;
  id v11 = [v1 url:v8];
  if (v11)
  {
    int v12 = v11;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v13 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 0, 1, v13);
  }
  else
  {
    uint64_t v13 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 1, 1, v13);
  }
  sub_100602000((uint64_t)v5, (uint64_t)v10);
  type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13) == 1)
  {
    sub_1005CCBB8((uint64_t)v10);
LABEL_17:
    char v20 = 0;
    return v20 & 1;
  }
  uint64_t v15 = URL.scheme.getter();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v13);
  if (!v17) {
    goto LABEL_17;
  }
  BOOL v18 = v15 == 1886680168 && v17 == 0xE400000000000000;
  if (v18
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || (v15 == 0x7370747468 ? (BOOL v19 = v17 == 0xE500000000000000) : (BOOL v19 = 0), v19))
  {
    swift_bridgeObjectRelease();
    char v20 = 1;
  }
  else
  {
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
  }
  return v20 & 1;
}

uint64_t sub_100602000(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_10060236C()
{
  swift_bridgeObjectRetain();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_100602544()
{
  uint64_t v1 = 0x65746F6D6572;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_isLocalParticipant)) {
    uint64_t v1 = 0x6C61636F6CLL;
  }
  uint64_t v12 = v1;
  swift_bridgeObjectRetain();
  v2._countAndFlagsBits = 58;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_displayName);
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_displayName + 8);
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = v3;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = 58;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = UUID.uuidString.getter();
  uint64_t v9 = v8;
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = v7;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100602684(uint64_t a1)
{
  swift_getObjectType();
  sub_100557A70(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_100522F00((uint64_t)v5, &qword_101672BF0);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    char v2 = 0;
    return v2 & 1;
  }
  char v2 = static UUID.== infix(_:_:)();

  return v2 & 1;
}

id sub_100602978()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCollaboratorPresence();
  return [super dealloc];
}

uint64_t sub_100602ACC()
{
  return type metadata accessor for CRLCollaboratorPresence();
}

uint64_t type metadata accessor for CRLCollaboratorPresence()
{
  uint64_t result = qword_101676430;
  if (!qword_101676430) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100602B20()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

id sub_100602C18(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  LODWORD(v49) = a4;
  uint64_t v8 = sub_1005057FC(&qword_101687FD0);
  __chkstk_darwin(v8 - 8, v9);
  id v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PersonNameComponents();
  uint64_t v46 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v13);
  long long v45 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  uint64_t v15 = &v4[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID];
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v47 = *(void *)(v16 - 8);
  uint64_t v48 = v16;
  uint64_t v17 = *(void (**)(char *, uint64_t))(v47 + 16);
  uint64_t v50 = a2;
  v17(v15, a2);
  BOOL v18 = &v4[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_joinTime];
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v21(v18, a3, v19);
  v4[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_isLocalParticipant] = v49;
  uint64_t v49 = a3;
  uint64_t v22 = a3;
  uint64_t v23 = v12;
  v21(&v4[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime], v22, v19);
  uint64_t v24 = v46;
  long long v25 = v4;
  uint64_t v26 = sub_100701F80();
  int v27 = (uint64_t *)&v25[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_displayName];
  uint64_t *v27 = v26;
  v27[1] = v28;
  sub_1007014C4((uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v11, 1, v12) == 1)
  {
    sub_100522F00((uint64_t)v11, &qword_101687FD0);
LABEL_8:
    uint64_t v33 = sub_100701F80();
    unint64_t v35 = v37;
    goto LABEL_9;
  }
  id v29 = v45;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v45, v11, v23);
  uint64_t v30 = self;
  Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  id v32 = [v30 localizedStringFromPersonNameComponents:isa style:1 options:0];

  uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v35 = v34;

  if ((v35 & 0x2000000000000000) != 0) {
    uint64_t v36 = HIBYTE(v35) & 0xF;
  }
  else {
    uint64_t v36 = v33 & 0xFFFFFFFFFFFFLL;
  }
  (*(void (**)(char *, uint64_t))(v24 + 8))(v29, v23);
  if (!v36)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_9:
  long long v38 = (uint64_t *)&v25[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_shortDisplayName];
  uint64_t *v38 = v33;
  v38[1] = v35;
  id v39 = *(id *)(a1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
  sub_10087428C(v39);
  uint64_t v41 = v40;

  *(void *)&v25[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_collaboratorColorIndex] = v41;
  id v42 = (objc_class *)type metadata accessor for CRLCollaboratorPresence();
  v51.receiver = v25;
  v51.super_class = v42;
  id v43 = [super init];
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v49, v19);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v50, v48);
  return v43;
}

uint64_t sub_100603010()
{
  v12[0] = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0], v2);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v5, v6);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v7 - 8, v8);
  *(void *)(v0 + 24) = _swiftEmptyArrayStorage;
  uint64_t v9 = v0 + OBJC_IVAR____TtC8Freeform23CRLSyncPriorityProvider_currentFocusedBoard;
  uint64_t v10 = type metadata accessor for CRLBoardIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
  static DispatchQoS.unspecified.getter();
  v12[1] = _swiftEmptyArrayStorage;
  sub_10060524C((unint64_t *)&qword_101676560, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1005057FC(&qword_101693440);
  sub_100523288((unint64_t *)&qword_101676568, &qword_101693440);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, void))(v1 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v12[0]);
  *(void *)(v0 + 16) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  return v0;
}

void sub_1006032C8()
{
  uint64_t v1 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v4 = __chkstk_darwin(v1, v3);
  uint64_t v6 = (char *)v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)v57 - v8;
  uint64_t v10 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchPredicate();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  BOOL v18 = (void *)((char *)v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = *(void **)(v0 + 16);
  void *v18 = v19;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v14);
  id v20 = v19;
  LOBYTE(v19) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v15 + 8))(v18, v14);
  if (v19)
  {
    long long v64 = v13;
    if (qword_10166FB88 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  uint64_t v21 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  long long v63 = (void *)inited;
  uint64_t v23 = inited + 32;
  swift_beginAccess();
  uint64_t v24 = *(void *)(v0 + 24);
  int64_t v25 = *(void *)(v24 + 16);
  if (v25)
  {
    v57[2] = v23;
    uint64_t v59 = v0;
    uint64_t v61 = v1;
    id v62 = v6;
    uint64_t v68 = _swiftEmptyArrayStorage;
    long long v58 = v21;
    id v26 = v21;
    swift_bridgeObjectRetain();
    sub_1006BB504(0, v25, 0);
    unint64_t v27 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    v57[1] = v24;
    uint64_t v28 = v24 + v27;
    uint64_t v60 = v2;
    uint64_t v65 = *(void *)(v2 + 72);
    do
    {
      sub_100540CFC(v28, (uint64_t)v9);
      id v29 = (uint64_t *)&v9[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
      uint64_t v31 = *v29;
      uint64_t v30 = (void *)v29[1];
      id v32 = (void *)0x800000010123FE90;
      if (*v29) {
        BOOL v33 = 0;
      }
      else {
        BOOL v33 = v30 == (void *)0xE000000000000000;
      }
      uint64_t v34 = 0xD000000000000012;
      if (!v33 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v34 = v31;
        id v32 = v30;
      }
      uint64_t v66 = UUID.uuidString.getter();
      uint64_t v67 = v35;
      v36._countAndFlagsBits = 15418;
      v36._object = (void *)0xE200000000000000;
      String.append(_:)(v36);
      v37._countAndFlagsBits = v34;
      v37._object = v32;
      String.append(_:)(v37);
      swift_bridgeObjectRelease();
      v38._countAndFlagsBits = 62;
      v38._object = (void *)0xE100000000000000;
      String.append(_:)(v38);
      uint64_t v39 = v66;
      uint64_t v40 = v67;
      sub_100510028((uint64_t)v9);
      uint64_t v41 = v68;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB504(0, *((void *)v41 + 2) + 1, 1);
        uint64_t v41 = v68;
      }
      unint64_t v43 = *((void *)v41 + 2);
      unint64_t v42 = *((void *)v41 + 3);
      if (v43 >= v42 >> 1)
      {
        sub_1006BB504(v42 > 1, v43 + 1, 1);
        uint64_t v41 = v68;
      }
      *((void *)v41 + 2) = v43 + 1;
      id v44 = &v41[2 * v43];
      *((void *)v44 + 4) = v39;
      *((void *)v44 + 5) = v40;
      v28 += v65;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    uint64_t v6 = v62;
    uint64_t v1 = v61;
    uint64_t v2 = v60;
    uint64_t v0 = v59;
    uint64_t v21 = v58;
  }
  else
  {
    id v45 = v21;
    uint64_t v41 = _swiftEmptyArrayStorage;
  }
  uint64_t v46 = sub_1005057FC((uint64_t *)&unk_1016773F0);
  uint64_t v47 = v63;
  v63[7] = v46;
  v47[8] = sub_100523288((unint64_t *)&unk_10168A400, (uint64_t *)&unk_1016773F0);
  v47[4] = v41;
  uint64_t v48 = v0 + OBJC_IVAR____TtC8Freeform23CRLSyncPriorityProvider_currentFocusedBoard;
  swift_beginAccess();
  uint64_t v49 = v48;
  uint64_t v50 = (uint64_t)v64;
  sub_100605184(v49, (uint64_t)v64);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v50, 1, v1))
  {
    sub_1006051EC(v50);
    uint64_t v51 = 0;
    unint64_t v52 = 0;
  }
  else
  {
    sub_100540CFC(v50, (uint64_t)v6);
    sub_1006051EC(v50);
    uint64_t v51 = sub_100753038();
    unint64_t v52 = v53;
    sub_100510028((uint64_t)v6);
  }
  v47[12] = &type metadata for String;
  v47[13] = sub_100528BE4();
  uint64_t v54 = 7104878;
  if (v52) {
    uint64_t v54 = v51;
  }
  unint64_t v55 = 0xE300000000000000;
  if (v52) {
    unint64_t v55 = v52;
  }
  v47[9] = v54;
  v47[10] = v55;
  uint64_t v56 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v21, (uint64_t)&_mh_execute_header, v56, (uint64_t)"CRLSyncPriorityProvider current state: openBoards %{public}@, currentFocusedBoard %{public}@", 92, 2, (uint64_t)v47);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

uint64_t sub_1006038EC(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101676570);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v43 = (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6 - 8, v8);
  uint64_t v42 = (uint64_t)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v14 = (char *)&v42 - v13;
  __chkstk_darwin(v12, v15);
  uint64_t v17 = (char *)&v42 - v16;
  uint64_t v18 = type metadata accessor for DispatchPredicate();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  uint64_t v22 = (uint64_t *)((char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = *(void **)(v1 + 16);
  void *v22 = v23;
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v18);
  id v24 = v23;
  char v25 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v19 + 8))(v22, v18);
  if ((v25 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  swift_beginAccess();
  uint64_t v27 = *(void *)(v1 + 24);
  uint64_t v28 = *(void *)(v27 + 16);
  if (!v28) {
    goto LABEL_16;
  }
  uint64_t v29 = v27 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v30 = *(void *)(v7 + 72);
  swift_bridgeObjectRetain();
  unint64_t v31 = 0;
  while (1)
  {
    char v32 = static UUID.== infix(_:_:)();
    sub_100540CFC(v29, (uint64_t)v17);
    sub_100540CFC(a1, (uint64_t)v14);
    if ((v32 & 1) == 0)
    {
      sub_100510028((uint64_t)v14);
      sub_100510028((uint64_t)v17);
      goto LABEL_5;
    }
    uint64_t v33 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v34 = *(void *)&v17[v33];
    uint64_t v35 = *(void *)&v17[v33 + 8];
    Swift::String v36 = &v14[v33];
    if (v34 == *(void *)v36 && v35 == *((void *)v36 + 1)) {
      break;
    }
    char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_100510028((uint64_t)v14);
    sub_100510028((uint64_t)v17);
    if (v38) {
      goto LABEL_15;
    }
LABEL_5:
    ++v31;
    v29 += v30;
    if (v28 == v31)
    {
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }
  sub_100510028((uint64_t)v14);
  sub_100510028((uint64_t)v17);
LABEL_15:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v39 = v42;
  sub_100E86F44(v31, v42);
  sub_100510028(v39);
  swift_endAccess();
LABEL_16:
  swift_beginAccess();
  uint64_t v40 = a1;
  uint64_t v41 = v43;
  sub_100540CFC(v40, v43);
  sub_100F49FE0(0, 0, v41);
  return swift_endAccess();
}

uint64_t sub_100603C88(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (uint64_t *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(v2 + 16);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v4);
  id v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v8, v4);
  if (v9)
  {
    __chkstk_darwin(result, v12);
    *(&v14 - 2) = a1;
    swift_beginAccess();
    uint64_t result = sub_100B30368((uint64_t (*)(unint64_t))sub_100605294, (uint64_t)(&v14 - 4));
    uint64_t v13 = *(void *)(*(void *)(v2 + 24) + 16);
    if (v13 >= result)
    {
      sub_100F4D41C(result, v13);
      return swift_endAccess();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100603E20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v20 - v10;
  char v12 = static UUID.== infix(_:_:)();
  sub_100540CFC(a1, (uint64_t)v11);
  sub_100540CFC(a2, (uint64_t)v8);
  if (v12)
  {
    uint64_t v13 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v14 = *(void *)&v11[v13];
    uint64_t v15 = *(void *)&v11[v13 + 8];
    uint64_t v16 = &v8[v13];
    if (v14 == *(void *)v16 && v15 == *((void *)v16 + 1)) {
      char v18 = 1;
    }
    else {
      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  else
  {
    char v18 = 0;
  }
  sub_100510028((uint64_t)v8);
  sub_100510028((uint64_t)v11);
  return v18 & 1;
}

uint64_t sub_100603F48()
{
  swift_bridgeObjectRelease();
  sub_1006051EC(v0 + OBJC_IVAR____TtC8Freeform23CRLSyncPriorityProvider_currentFocusedBoard);

  return swift_deallocClassInstance();
}

uint64_t sub_100603FBC()
{
  return type metadata accessor for CRLSyncPriorityProvider();
}

uint64_t type metadata accessor for CRLSyncPriorityProvider()
{
  uint64_t result = qword_101676470;
  if (!qword_101676470) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100604010()
{
  sub_1006040BC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1006040BC()
{
  if (!qword_101676480)
  {
    type metadata accessor for CRLBoardIdentifier(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101676480);
    }
  }
}

uint64_t sub_100604114@<X0>(uint64_t a1@<X0>, double **a2@<X8>)
{
  uint64_t v58 = type metadata accessor for UUID();
  uint64_t v51 = *(void *)(v58 - 8);
  __chkstk_darwin(v58, v4);
  unint64_t v52 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  char v18 = (char *)&v45 - v17;
  swift_beginAccess();
  uint64_t v19 = *(void *)(a1 + 24);
  uint64_t v20 = *(void *)(v19 + 16);
  uint64_t v21 = _swiftEmptyArrayStorage;
  uint64_t v53 = v11;
  if (v20)
  {
    uint64_t v46 = v10;
    uint64_t v47 = v9;
    uint64_t v48 = a1;
    uint64_t v49 = v18;
    uint64_t v50 = a2;
    uint64_t v60 = _swiftEmptyArrayStorage;
    uint64_t v22 = v19;
    swift_bridgeObjectRetain();
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v23 = sub_10050BF48(0, (unint64_t *)&qword_101674210);
    unint64_t v24 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v45 = v22;
    uint64_t v25 = v22 + v24;
    uint64_t v56 = *(void *)(v11 + 72);
    uint64_t v57 = v23;
    id v26 = v52;
    uint64_t v54 = CKCurrentUserDefaultName;
    unint64_t v55 = (void (**)(char *, char *, uint64_t))(v51 + 16);
    uint64_t v27 = (void (**)(char *, uint64_t))(v51 + 8);
    uint64_t v28 = v58;
    do
    {
      sub_100540CFC(v25, (uint64_t)v14);
      (*v55)(v26, v14, v28);
      uint64_t v34 = (uint64_t *)&v14[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
      uint64_t v29 = *v34;
      unint64_t v31 = (void *)v34[1];
      if (*v34) {
        BOOL v35 = 0;
      }
      else {
        BOOL v35 = v31 == (void *)0xE000000000000000;
      }
      if (v35 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v31 = v30;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      v59._countAndFlagsBits = 0x5F6472616F42;
      v59._object = (void *)0xE600000000000000;
      v32._countAndFlagsBits = UUID.uuidString.getter();
      String.append(_:)(v32);
      swift_bridgeObjectRelease();
      v33._countAndFlagsBits = v29;
      v33._object = v31;
      CKRecordZoneID.init(zoneName:ownerName:)(v59, v33);
      uint64_t v28 = v58;
      (*v27)(v26, v58);
      sub_100510028((uint64_t)v14);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v25 += v56;
      --v20;
    }
    while (v20);
    uint64_t v21 = v60;
    swift_bridgeObjectRelease();
    char v18 = v49;
    a2 = v50;
    uint64_t v9 = v47;
    a1 = v48;
    uint64_t v10 = v46;
  }
  uint64_t v60 = v21;
  uint64_t v36 = a1 + OBJC_IVAR____TtC8Freeform23CRLSyncPriorityProvider_currentFocusedBoard;
  swift_beginAccess();
  sub_100605184(v36, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v9, 1, v10) == 1)
  {
    uint64_t result = sub_1006051EC((uint64_t)v9);
LABEL_18:
    *a2 = v21;
    return result;
  }
  sub_1005394E4((uint64_t)v9, (uint64_t)v18);
  swift_bridgeObjectRetain();
  Class v38 = sub_100D3EC2C((uint64_t)v18);
  sub_100E39EF8((uint64_t)v38, (unint64_t)v21);
  unint64_t v40 = v39;
  char v42 = v41;
  swift_bridgeObjectRelease();

  if (v42)
  {
    uint64_t result = sub_100510028((uint64_t)v18);
    goto LABEL_18;
  }
  uint64_t v43 = sub_100E870B8(v40);
  if (!((unint64_t)v60 >> 62)
    || (swift_bridgeObjectRetain(),
        uint64_t v44 = _CocoaArrayWrapper.endIndex.getter(),
        uint64_t result = swift_bridgeObjectRelease(),
        (v44 & 0x8000000000000000) == 0))
  {
    sub_100F4A018(0, 0, v43);
    uint64_t result = sub_100510028((uint64_t)v18);
    uint64_t v21 = v60;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1006045E0(uint64_t a1)
{
  return sub_100604780(a1, (uint64_t)&unk_10150B1B8, (uint64_t)sub_100604ED4, (uint64_t)&unk_10150B1D0);
}

void sub_100604608(uint64_t a1)
{
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v4 = v2;
  uint64_t v5 = sub_100753038();
  uint64_t v7 = v6;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  uint64_t v8 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Prioritizing sync for %{public}@ because boardWillOpened", 56, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_1006038EC(a1);
  sub_1006032C8();
}

uint64_t sub_100604758(uint64_t a1)
{
  return sub_100604780(a1, (uint64_t)&unk_10150B168, (uint64_t)sub_100604C2C, (uint64_t)&unk_10150B180);
}

uint64_t sub_100604780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a4;
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v12);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __chkstk_darwin(v15 - 8, v18);
  uint64_t v25 = *(void *)(v4 + 16);
  sub_100540CFC(a1, (uint64_t)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v19 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v20 = swift_allocObject();
  sub_1005394E4((uint64_t)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19);
  *(void *)(v20 + ((v17 + v19 + 7) & 0xFFFFFFFFFFFFFFF8)) = v4;
  aBlock[4] = v24;
  void aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = v26;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v28 = _swiftEmptyArrayStorage;
  sub_10060524C((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v27);
  return swift_release();
}

void sub_100604AD8(uint64_t a1)
{
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v4 = v2;
  uint64_t v5 = sub_100753038();
  uint64_t v7 = v6;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  uint64_t v8 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Deprioritizing sync for %{public}@ because boardWillClosed", 58, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_100603C88(a1);
  sub_1006032C8();
}

uint64_t sub_100604C2C()
{
  return sub_100605014((uint64_t (*)(unint64_t, uint64_t))sub_100604AD8);
}

uint64_t sub_100604C44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100604C54()
{
  return swift_release();
}

uint64_t sub_100604C5C(uint64_t a1)
{
  return sub_100604780(a1, (uint64_t)&unk_10150B208, (uint64_t)sub_100604FFC, (uint64_t)&unk_10150B220);
}

void sub_100604C84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v21 - v10;
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v12 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v14 = v12;
  uint64_t v15 = sub_100753038();
  uint64_t v17 = v16;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v15;
  *(void *)(inited + 40) = v17;
  uint64_t v18 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v18, (uint64_t)"Prioritizing sync for %{public}@ because boardWasFocused", 56, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_100540CFC(a1, (uint64_t)v11);
  uint64_t v19 = type metadata accessor for CRLBoardIdentifier(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v11, 0, 1, v19);
  sub_1006050B4((uint64_t)v11, (uint64_t)v7);
  uint64_t v20 = a2 + OBJC_IVAR____TtC8Freeform23CRLSyncPriorityProvider_currentFocusedBoard;
  swift_beginAccess();
  sub_10060511C((uint64_t)v7, v20);
  swift_endAccess();
  sub_1006038EC(a1);
  sub_1006032C8();
}

uint64_t sub_100604ED4()
{
  return sub_100605014((uint64_t (*)(unint64_t, uint64_t))sub_100604608);
}

uint64_t sub_100604EF0()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_100604FFC()
{
  return sub_100605014((uint64_t (*)(unint64_t, uint64_t))sub_100604C84);
}

uint64_t sub_100605014(uint64_t (*a1)(unint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a1(v1 + v3, v4);
}

uint64_t sub_1006050B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10060511C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100605184(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006051EC(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672C30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10060524C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100605294(uint64_t a1)
{
  return sub_100603E20(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1006052C4(uint64_t a1)
{
  v2[5] = a1;
  void v2[6] = v1;
  sub_1005057FC((uint64_t *)&unk_101676600);
  v2[7] = swift_task_alloc();
  uint64_t v3 = sub_1005057FC(&qword_1016765D8);
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = type metadata accessor for MainActor();
  v2[13] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[14] = v5;
  v2[15] = v4;
  return _swift_task_switch(sub_100605400, v5, v4);
}

uint64_t sub_100605400()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[6] + OBJC_IVAR____TtC8Freeform37CRLQAImportFileDocumentPickerDelegate_result;
  swift_beginAccess();
  sub_100522E9C(v4, v3, (uint64_t *)&unk_101676600);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v5 = v0[6];
    sub_100522F00(v0[7], (uint64_t *)&unk_101676600);
    uint64_t v6 = static MainActor.shared.getter();
    v0[16] = v6;
    uint64_t v7 = swift_task_alloc();
    v0[17] = v7;
    *(void *)(v7 + 16) = v5;
    uint64_t v8 = (void *)swift_task_alloc();
    v0[18] = v8;
    uint64_t v9 = sub_1005057FC(&qword_101672E90);
    *uint64_t v8 = v0;
    v8[1] = sub_10060569C;
    uint64_t v10 = v0[5];
    return withCheckedContinuation<A>(isolation:function:_:)(v10, v6, &protocol witness table for MainActor, 0x52726F4674696177, 0xEF2928746C757365, sub_100606420, v7, v9);
  }
  else
  {
    uint64_t v11 = v0[10];
    uint64_t v12 = v0[11];
    uint64_t v13 = v0[7];
    swift_release();
    sub_10051B3EC(v13, v12, &qword_1016765D8);
    sub_10051B3EC(v12, v11, &qword_1016765D8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v15 = v0[10];
    uint64_t v16 = v0[5];
    if (EnumCaseMultiPayload == 1)
    {
      sub_100522F00(v15, &qword_1016765D8);
      uint64_t v17 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
    }
    else
    {
      sub_10051B3EC(v15, v0[5], &qword_101672E90);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
}

uint64_t sub_10060569C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t v3 = *(void *)(v1 + 112);
  return _swift_task_switch(sub_1006057FC, v3, v2);
}

uint64_t sub_1006057FC()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100605878(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_1016765F8);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8, v9);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = a2 + OBJC_IVAR____TtC8Freeform37CRLQAImportFileDocumentPickerDelegate_continuation;
  swift_beginAccess();
  sub_100522E9C(v12, (uint64_t)v11, &qword_1016765F8);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_1016765E8);
  uint64_t v14 = *(void *)(v13 - 8);
  int v15 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13);
  sub_100522F00((uint64_t)v11, &qword_1016765F8);
  if (v15 == 1)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16))(v7, a1, v13);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
    swift_beginAccess();
    sub_1006063BC((uint64_t)v7, v12, &qword_1016765F8);
    return swift_endAccess();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"waitForResult()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLQAImportFileDocumentPickerDelegate.swift", 113, 2, 20, (uint64_t)"This method should only be called once.", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"This method should only be called once.");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"waitForResult()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLQAImportFileDocumentPickerDelegate.swift", 113, 2, 20);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v17, v18);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100605B28(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v31 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_1016765D8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v32 = (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_1016765F8);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v34 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v31 - v15;
  uint64_t v17 = sub_1005057FC((uint64_t *)&unk_1016765E8);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1005057FC((uint64_t *)&unk_101676600);
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v25 = (char *)&v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a1;
  sub_100522E9C(a1, (uint64_t)v25, &qword_1016765D8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
  uint64_t v26 = v1 + OBJC_IVAR____TtC8Freeform37CRLQAImportFileDocumentPickerDelegate_result;
  swift_beginAccess();
  sub_1006063BC((uint64_t)v25, v26, (uint64_t *)&unk_101676600);
  swift_endAccess();
  uint64_t v27 = v1 + OBJC_IVAR____TtC8Freeform37CRLQAImportFileDocumentPickerDelegate_continuation;
  swift_beginAccess();
  sub_100522E9C(v27, (uint64_t)v16, &qword_1016765F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1) {
    return sub_100522F00((uint64_t)v16, &qword_1016765F8);
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v16, v17);
  uint64_t v29 = v32;
  sub_100522E9C(v33, v32, &qword_1016765D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    CheckedContinuation.resume(throwing:)();
  }
  else
  {
    sub_10051B3EC(v29, v31, &qword_101672E90);
    CheckedContinuation.resume(returning:)();
  }
  uint64_t v30 = (uint64_t)v34;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v34, 1, 1, v17);
  swift_beginAccess();
  sub_1006063BC(v30, v27, &qword_1016765F8);
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v21, v17);
}

id sub_1006061A8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLQAImportFileDocumentPickerDelegate();
  return [super dealloc];
}

uint64_t sub_100606230()
{
  return type metadata accessor for CRLQAImportFileDocumentPickerDelegate();
}

uint64_t type metadata accessor for CRLQAImportFileDocumentPickerDelegate()
{
  uint64_t result = qword_1016765B8;
  if (!qword_1016765B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100606284()
{
  sub_10060636C(319, &qword_1016765D0, &qword_1016765D8);
  if (v0 <= 0x3F)
  {
    sub_10060636C(319, &qword_1016765E0, (uint64_t *)&unk_1016765E8);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10060636C(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_100522D34(a3);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1006063BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1005057FC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_100606420(uint64_t a1)
{
  return sub_100605878(a1, *(void *)(v1 + 16));
}

uint64_t sub_100606428(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_1016765D8);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  if (v6)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v5, a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v7);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v5, 1, 1, v7);
  }
  swift_storeEnumTagMultiPayload();
  sub_100605B28((uint64_t)v5);
  return sub_100522F00((uint64_t)v5, &qword_1016765D8);
}

uint64_t sub_100606578()
{
  return 9;
}

void *sub_100606584(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  uint64_t v7 = __chkstk_darwin(v5, v6);
  uint64_t v9 = &v31[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7, v10);
  uint64_t v12 = &v31[-v11];
  uint64_t v13 = sub_1005057FC(&qword_1016892B0);
  uint64_t v15 = __chkstk_darwin(v13, v14);
  uint64_t v17 = &v31[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15, v18);
  uint64_t v20 = &v31[-v19];
  uint64_t v21 = (uint64_t)v2 + *(void *)(v4 + 632);
  swift_beginAccess();
  if (a1)
  {
    sub_1006087A4(v21, (uint64_t)v17);
    sub_100523288(&qword_101675540, &qword_1016892B0);
    CRType.copy(renamingReferences:)();
    sub_100608938((uint64_t)v17);
    uint64_t v22 = (uint64_t)v2 + *(void *)(*v2 + 752);
    swift_beginAccess();
    sub_10060880C(v22, (uint64_t)v9, type metadata accessor for CRLFreehandDrawingShapeCRDTData);
    sub_100608534(&qword_101676A58, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);
    CRType.copy(renamingReferences:)();
    sub_1006088D8((uint64_t)v9, type metadata accessor for CRLFreehandDrawingShapeCRDTData);
  }
  else
  {
    sub_1006087A4(v21, (uint64_t)v20);
    uint64_t v23 = (uint64_t)v2 + *(void *)(*v2 + 752);
    swift_beginAccess();
    sub_10060880C(v23, (uint64_t)v12, type metadata accessor for CRLFreehandDrawingShapeCRDTData);
  }
  uint64_t v24 = v2[4];
  uint64_t v25 = v2[5];
  uint64_t v28 = v2 + 2;
  uint64_t v26 = v2[2];
  uint64_t v27 = v28[1];
  uint64_t v29 = swift_allocObject();
  sub_100608874((uint64_t)v12, v29 + *(void *)(*(void *)v29 + 752));
  *(void *)(v29 + qword_10169E700) = 0;
  sub_10051B3EC((uint64_t)v20, v29 + *(void *)(*(void *)v29 + 632), &qword_1016892B0);
  return sub_10068B398(v27, v24, v25, v26);
}

uint64_t sub_1006068FC()
{
  sub_100608938(v0 + *(void *)(*(void *)v0 + 632));

  sub_1006088D8(v0 + *(void *)(*(void *)v0 + 752), type metadata accessor for CRLFreehandDrawingShapeCRDTData);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLFreehandDrawingShapeItemData(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101676638);
}

char *sub_1006069CC(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
    (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1005057FC(&qword_101673478);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = v8[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    v17(v14, v15, v16);
    v17(&a1[v8[7]], (char *)a2 + v8[7], v16);
    uint64_t v18 = v8[8];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_1005057FC(&qword_101689320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    *(void *)&a1[v8[9]] = *(uint64_t *)((char *)a2 + v8[9]);
    uint64_t v22 = type metadata accessor for CRLShapeItemCRDTData(0);
    *(void *)&a1[*(int *)(v22 + 20)] = *(uint64_t *)((char *)a2 + *(int *)(v22 + 20));
    *(void *)&a1[*(int *)(a3 + 20)] = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100606BFC(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v4 = a1 + v3[5];
  uint64_t v5 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + v3[6];
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(a1 + v3[7], v7);
  uint64_t v9 = a1 + v3[8];
  uint64_t v10 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  type metadata accessor for CRLShapeItemCRDTData(0);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100606DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  *(void *)(a1 + v7[9]) = *(void *)(a2 + v7[9]);
  uint64_t v21 = type metadata accessor for CRLShapeItemCRDTData(0);
  *(void *)(a1 + *(int *)(v21 + 20)) = *(void *)(a2 + *(int *)(v21 + 20));
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100606F80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  *(void *)(a1 + v7[9]) = *(void *)(a2 + v7[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = type metadata accessor for CRLShapeItemCRDTData(0);
  *(void *)(a1 + *(int *)(v21 + 20)) = *(void *)(a2 + *(int *)(v21 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100607178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  *(void *)(a1 + v7[9]) = *(void *)(a2 + v7[9]);
  uint64_t v21 = type metadata accessor for CRLShapeItemCRDTData(0);
  *(void *)(a1 + *(int *)(v21 + 20)) = *(void *)(a2 + *(int *)(v21 + 20));
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100607340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  *(void *)(a1 + v7[9]) = *(void *)(a2 + v7[9]);
  swift_bridgeObjectRelease();
  uint64_t v21 = type metadata accessor for CRLShapeItemCRDTData(0);
  *(void *)(a1 + *(int *)(v21 + 20)) = *(void *)(a2 + *(int *)(v21 + 20));
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100607520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100607534);
}

uint64_t sub_100607534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CRLShapeItemCRDTData(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1006075F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100607608);
}

uint64_t sub_100607608(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for CRLShapeItemCRDTData(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CRLFreehandDrawingShapeCRDTData(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101676A00);
}

uint64_t sub_1006076E4()
{
  uint64_t result = type metadata accessor for CRLShapeItemCRDTData(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10060777C()
{
  qword_10171A138 = 97;
  unk_10171A140 = 0xE100000000000000;
  uint64_t result = swift_getKeyPath();
  qword_10171A148 = result;
  return result;
}

uint64_t sub_1006077BC@<X0>(uint64_t a1@<X8>)
{
  return sub_10060880C(v1, a1, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
}

void (*sub_1006077F0(uint64_t *a1))(uint64_t *a1, char a2)
{
  *a1 = v1;
  size_t v3 = *(void *)(*(void *)(type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0) - 8) + 64);
  a1[1] = (uint64_t)malloc(v3);
  uint64_t v4 = malloc(v3);
  a1[2] = (uint64_t)v4;
  sub_10060880C(v1, (uint64_t)v4, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  return sub_100607890;
}

void sub_100607890(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)a1[1];
  size_t v3 = (void *)a1[2];
  uint64_t v4 = *a1;
  if (a2)
  {
    sub_10060880C(a1[2], (uint64_t)v2, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
    sub_1005DF630((uint64_t)v2, v4);
    sub_1006088D8((uint64_t)v3, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  }
  else
  {
    sub_1005DF630(a1[2], v4);
  }
  free(v3);

  free(v2);
}

uint64_t sub_100607928(uint64_t a1)
{
  uint64_t v2 = sub_100608534(&qword_101676A58, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);

  return CRType.context.getter(a1, v2);
}

uint64_t sub_100607994()
{
  sub_100608534(&qword_101676A80, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);

  return CRStruct_1.actionUndoingDifference(from:)();
}

uint64_t sub_100607A18()
{
  sub_100608534(&qword_101676A80, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);

  return CRStruct_1.apply(_:)();
}

uint64_t sub_100607A94()
{
  sub_100608534(&qword_101676A80, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);

  return CRStruct_1.hasDelta(from:)();
}

uint64_t sub_100607B10()
{
  sub_100608534(&qword_101676A80, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);

  return CRStruct_1.delta(_:from:)();
}

uint64_t sub_100607BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100608534(&qword_101676A80, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);

  return CRStruct_1.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_100607C20()
{
  sub_100608534(&qword_101676A80, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);

  return CRStruct_1.merge(delta:)();
}

uint64_t sub_100607CA0()
{
  if (qword_10166ED70 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_10171A138;
  swift_bridgeObjectRetain();
  swift_retain();
  return v0;
}

uint64_t sub_100607D20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100608534(&qword_101676A80, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);

  return CRStruct_1.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100607DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100608534(&qword_101676A80, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);

  return CRStruct_1.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100607E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100608534(&qword_101676A80, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);

  return CRStruct_1.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_100607EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100608534(&qword_101676A80, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);

  return CRStruct_1.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_100607F38()
{
  sub_100608534(&qword_101676A80, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);

  return CRStruct_1.needToFinalizeTimestamps()();
}

uint64_t sub_100607FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100608534(&qword_101676A80, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);

  return CRStruct_1.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_100608020()
{
  sub_100608534(&qword_101676A80, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);

  return CRStruct_1.merge(_:)();
}

uint64_t sub_10060809C()
{
  return CRDT.serializedData(_:version:)();
}

uint64_t sub_10060811C()
{
  return CRDT.init(serializedData:)();
}

uint64_t sub_1006081AC(uint64_t a1)
{
  uint64_t v2 = sub_100608534(&qword_101676A80, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);

  return static CRStruct_1.fieldKeys.getter(a1, v2);
}

uint64_t sub_100608218()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100608224(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 20);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_10060825C())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_100608280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  memset(v5, 0, sizeof(v5));
  sub_10051A3F4((uint64_t)v9);
  sub_10051B3EC((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_101685110);
  memset(v7, 0, sizeof(v7));
  uint64_t v8 = 0;
  sub_100E21C10((uint64_t)v5, (uint64_t)v6, (uint64_t)v7, (uint64_t)v7, a2, 0.0);
  uint64_t result = type metadata accessor for CRLShapeItemCRDTData(0);
  *(void *)(a2 + *(int *)(result + 20)) = _swiftEmptyDictionarySingleton;
  *(void *)(a2 + *(int *)(a1 + 20)) = _swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_100608330()
{
  return CRStruct_1.init(from:)();
}

uint64_t sub_1006083B0()
{
  return CRStruct_1.encode(to:)();
}

uint64_t sub_100608428(uint64_t a1)
{
  uint64_t v2 = sub_100608534(&qword_101676A80, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);

  return CRStruct_1.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_1006084A4()
{
  return sub_100608534(&qword_101676A38, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);
}

uint64_t sub_1006084EC()
{
  return sub_100608534(&qword_101676A40, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);
}

uint64_t sub_100608534(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10060857C()
{
  return sub_100608534(&qword_101676A48, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);
}

uint64_t sub_1006085C4()
{
  return sub_100608534(&qword_101675498, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);
}

uint64_t sub_10060860C()
{
  return sub_100608534(&qword_101676A50, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);
}

uint64_t sub_100608654()
{
  return sub_100608534(&qword_101676A58, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);
}

uint64_t sub_10060869C()
{
  return sub_100523288(&qword_101676A60, &qword_101676A68);
}

uint64_t sub_1006086D8()
{
  return sub_100608534(&qword_101676A70, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);
}

uint64_t sub_100608720(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_100608534(&qword_101676A38, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);
  uint64_t result = sub_100608534(&qword_101676A78, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1006087A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_1016892B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10060880C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100608874(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006088D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100608938(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_1016892B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100608998()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100608A0C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100608A80()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100608AF4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform28CRLEmptyFolderViewDataSource__connectionStatus;
  uint64_t v2 = sub_1005057FC(&qword_101676C00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC8Freeform28CRLEmptyFolderViewDataSource__searchString;
  uint64_t v4 = sub_1005057FC(&qword_101676C08);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC8Freeform28CRLEmptyFolderViewDataSource__searchComplete;
  uint64_t v6 = sub_1005057FC(&qword_10169FCE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_deallocClassInstance();
}

uint64_t sub_100608C28()
{
  return type metadata accessor for CRLEmptyFolderViewDataSource();
}

uint64_t type metadata accessor for CRLEmptyFolderViewDataSource()
{
  uint64_t result = qword_101676AC8;
  if (!qword_101676AC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100608C7C()
{
  sub_100608DB0(319, &qword_101676AD8);
  if (v0 <= 0x3F)
  {
    sub_100608DB0(319, (unint64_t *)&unk_101676AE0);
    if (v1 <= 0x3F)
    {
      sub_100608DB0(319, (unint64_t *)&qword_10167C230);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_100608DB0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = type metadata accessor for Published();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_100608DF8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CRLEmptyFolderViewDataSource();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

NSString sub_100608E38()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A150 = (uint64_t)result;
  return result;
}

id sub_100608E70()
{
  if (qword_10166ED78 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_10171A150;
  qword_10171A158 = qword_10171A150;

  return v0;
}

void *sub_100608F30()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_100608F3C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1005057FC(&qword_10169FCE0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v3 + OBJC_IVAR____TtC8Freeform28CRLEmptyFolderViewDataSource__searchComplete;
  char v17 = 0;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v12, v11, v7);
  swift_beginAccess();
  LOBYTE(v15) = a1;
  Published.init(initialValue:)();
  swift_endAccess();
  swift_beginAccess();
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  Published.init(initialValue:)();
  swift_endAccess();
  return v3;
}

void sub_1006090DC()
{
  if ([v0 hasSinglePreviewableInfo])
  {
    id v1 = [v0 boardItems];
    type metadata accessor for CRLBoardItem(0);
    sub_10060A334();
    uint64_t v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v3 = sub_100999830(v2);
    swift_bridgeObjectRelease();
    if (v3)
    {
      id v4 = [v0 interactiveCanvasController];
      if (v4
        && (uint64_t v5 = v4, v10 = [v4 repForInfo:v3],
                     v5,
                     v10))
      {
        swift_getObjectType();
        uint64_t v6 = swift_conformsToProtocol2();
        uint64_t v7 = v10;
        if (v6) {
          uint64_t v8 = v10;
        }
        else {
          uint64_t v8 = 0;
        }
        if (v8)
        {
          [v8 enterPreviewMode];
          uint64_t v7 = (void *)v3;
        }
        else
        {
          id v10 = (id)v3;
        }

        uint64_t v9 = v10;
      }
      else
      {
        uint64_t v9 = (void *)v3;
      }
    }
  }
}

id sub_100609280()
{
  id v1 = [v0 boardItems];
  type metadata accessor for CRLBoardItem(0);
  sub_10060A334();
  uint64_t v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v2 & 0xC000000000000001) != 0) {
    uint64_t v3 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v3 = *(void *)(v2 + 16);
  }
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    return [v0 hasPreviewableInfos];
  }
  else {
    return 0;
  }
}

void CRLBoardItemEditor.accessibilityDescriptionEditor(_:didEndEditingWith:)(void *a1, uint64_t a2)
{
  if (!a2)
  {
    id v3 = [a1 accessibilityDescriptionToSubmit];
    if (!v3)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v4 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v3 = v4;
    }
    id v5 = v3;
    [v2 setAccessibilityDescription:];
  }
}

void sub_100609560(void *a1)
{
  if (!a1) {
    return;
  }
  uint64_t v2 = v1;
  id v3 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x130);
  uint64_t v57 = a1;
  uint64_t v4 = v3();
  uint64_t v54 = v5;
  id v55 = (id)v4;
  uint64_t v6 = self;
  id v7 = [v6 mainBundle];
  NSString v8 = String._bridgeToObjectiveC()();
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];

  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  id v14 = [v6 mainBundle];
  NSString v15 = String._bridgeToObjectiveC()();
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v14 localizedStringForKey:v15 value:v16 table:0];

  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  id v21 = [v6 mainBundle];
  NSString v22 = String._bridgeToObjectiveC()();
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = [v21 localizedStringForKey:v22 value:v23 table:0];

  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v27 = v26;

  id v28 = [v2 placeholderString:v57];
  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = v30;

  uint64_t v32 = objc_allocWithZone((Class)type metadata accessor for CRLiOSEditAccessibilityDescriptionViewController());
  id v33 = v2;
  uint64_t v56 = sub_100609CB8((uint64_t)v55, v54, v11, v13, v18, v20, v25, v27, v29, v31, v33, v32);
  id v34 = [v33 interactiveCanvasController];
  if (!v34
    || (v35 = v34, id v36 = [v34 layerHost], v35, !v36))
  {

    uint64_t v43 = v57;
LABEL_22:

    return;
  }
  if ([v36 respondsToSelector:"asiOSCVC"])
  {
    id v37 = [v36 asiOSCVC];
    swift_unknownObjectRelease();
    id v38 = [v37 presentedViewController];
    if (v38)
    {
      unint64_t v39 = v38;
      [v38 dismissViewControllerAnimated:1 completion:0];
    }
    id v40 = [v37 miniFormatterPresenter];
    if (v40)
    {
      [v40 dismissMiniFormatter];
      swift_unknownObjectRelease();
    }
    id v41 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v56];
    id v42 = [v41 sheetPresentationController];
    if (v42)
    {
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"launchEditAccessibilityDescription(boardItem:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLBoardItemEditor.swift", 88, 2, 113, (uint64_t)"invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
      LOBYTE(v53) = 2;
      uint64_t v51 = "invalid nil value found";
      uint64_t v52 = 23;
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"launchEditAccessibilityDescription(boardItem:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLBoardItemEditor.swift", 88, 2, 113);
    }
    id v44 = [v41 sheetPresentationController:v51, v52, v53];
    if (v44)
    {
      uint64_t v45 = v44;
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_10117DF50;
      uint64_t v47 = self;
      *(void *)(v46 + 32) = [v47 mediumDetent];
      *(void *)(v46 + 40) = [v47 largeDetent];
      specialized Array._endMutation()();
      sub_10060A2F4();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v45 setDetents:isa];

      [v45 setPrefersEdgeAttachedInCompactHeight:1];
      [v45 setWidthFollowsPreferredContentSizeWhenEdgeAttached:1];
    }
    id v49 = [v41 presentationController];
    if (v49)
    {
      uint64_t v50 = v49;
      [v49 setDelegate:v56];
    }
    [v37 presentViewController:v41 animated:1 completion:0];

    uint64_t v43 = v56;
    goto LABEL_22;
  }

  swift_unknownObjectRelease();
}

unsigned __int8 *sub_100609CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, unsigned char *a12)
{
  swift_bridgeObjectRelease();
  a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_isCancelled] = 0;
  swift_unknownObjectWeakInit();
  a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_isCompact] = 0;
  *(void *)&a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController____lazy_storage___textView] = 0;
  uint64_t v18 = &a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_initialAccessibilityDescription];
  void *v18 = a1;
  v18[1] = a2;
  swift_unknownObjectWeakAssign();
  uint64_t v19 = &a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_titleText];
  *uint64_t v19 = a3;
  v19[1] = a4;
  uint64_t v20 = &a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_subtitleText];
  *uint64_t v20 = a5;
  v20[1] = a6;
  id v21 = &a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_placeholderText];
  void *v21 = a9;
  v21[1] = a10;
  v29.receiver = a12;
  v29.super_class = (Class)type metadata accessor for CRLiOSEditAccessibilityDescriptionViewController();
  NSString v22 = [super initWithNibName:0 bundle:0];
  id v23 = [v22 traitCollection];
  id v24 = [v23 horizontalSizeClass];
  if (v24 != (id)1) {
    LOBYTE(v24) = [v23 verticalSizeClass] == (id)1;
  }
  uint64_t v25 = OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_isCompact;
  v22[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_isCompact] = v24;
  sub_100BA3414((char)v24);
  LODWORD(v25) = v22[v25];

  if (v25) {
    uint64_t v26 = 1;
  }
  else {
    uint64_t v26 = 2;
  }
  [v22 setModalPresentationStyle:v26];

  uint64_t v27 = v22;
  [v27 setModalInPresentation:0];

  return v27;
}

void sub_100609E90(uint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLBoardItem(0);
    sub_10060A334();
    Set.Iterator.init(_cocoa:)();
    uint64_t v2 = v25;
    uint64_t v23 = v26;
    uint64_t v3 = v27;
    uint64_t v4 = v28;
    unint64_t v5 = v29;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v23 = a1 + 56;
    uint64_t v7 = ~v6;
    uint64_t v8 = -v6;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v5 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = v7;
    uint64_t v4 = 0;
  }
  uint64_t v21 = v3;
  int64_t v22 = (unint64_t)(v3 + 64) >> 6;
  while (v2 < 0)
  {
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_40;
    }
    type metadata accessor for CRLBoardItem(0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v10 = v30;
    swift_unknownObjectRelease();
    uint64_t v13 = v4;
    uint64_t v11 = v5;
    if (!v30) {
      goto LABEL_40;
    }
LABEL_33:
    id v17 = [a2 interactiveCanvasController:v21];
    if (v17)
    {
      uint64_t v18 = v17;
      id v19 = [v17 repForInfo:v10 createIfNeeded:1];

      if (v19)
      {
        swift_getObjectType();
        if (swift_conformsToProtocol2()) {
          id v20 = v19;
        }
        else {
          id v20 = 0;
        }

        if (v20)
        {

LABEL_40:
          sub_10052E1EC();
          return;
        }
        id v10 = v19;
      }
    }

    uint64_t v4 = v13;
    unint64_t v5 = v11;
  }
  if (v5)
  {
    uint64_t v11 = (v5 - 1) & v5;
    unint64_t v12 = __clz(__rbit64(v5)) | (v4 << 6);
    uint64_t v13 = v4;
LABEL_32:
    id v10 = *(id *)(*(void *)(v2 + 48) + 8 * v12);
    if (!v10) {
      goto LABEL_40;
    }
    goto LABEL_33;
  }
  int64_t v14 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v14 >= v22) {
      goto LABEL_40;
    }
    unint64_t v15 = *(void *)(v23 + 8 * v14);
    uint64_t v13 = v4 + 1;
    if (!v15)
    {
      uint64_t v13 = v4 + 2;
      if (v4 + 2 >= v22) {
        goto LABEL_40;
      }
      unint64_t v15 = *(void *)(v23 + 8 * v13);
      if (!v15)
      {
        uint64_t v13 = v4 + 3;
        if (v4 + 3 >= v22) {
          goto LABEL_40;
        }
        unint64_t v15 = *(void *)(v23 + 8 * v13);
        if (!v15)
        {
          uint64_t v13 = v4 + 4;
          if (v4 + 4 >= v22) {
            goto LABEL_40;
          }
          unint64_t v15 = *(void *)(v23 + 8 * v13);
          if (!v15)
          {
            uint64_t v13 = v4 + 5;
            if (v4 + 5 >= v22) {
              goto LABEL_40;
            }
            unint64_t v15 = *(void *)(v23 + 8 * v13);
            if (!v15)
            {
              uint64_t v16 = v4 + 6;
              while (v22 != v16)
              {
                unint64_t v15 = *(void *)(v23 + 8 * v16++);
                if (v15)
                {
                  uint64_t v13 = v16 - 1;
                  goto LABEL_31;
                }
              }
              goto LABEL_40;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v11 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v13 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t sub_10060A1C4(void *a1)
{
  uint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xD8))();
  if (String.count.getter() > 0) {
    return v1;
  }
  swift_bridgeObjectRelease();
  id v3 = [self mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 localizedStringForKey:v4 value:v5 table:0];

  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v7;
}

unint64_t sub_10060A2F4()
{
  unint64_t result = qword_1016A0060;
  if (!qword_1016A0060)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1016A0060);
  }
  return result;
}

unint64_t sub_10060A334()
{
  unint64_t result = qword_101676C20;
  if (!qword_101676C20)
  {
    type metadata accessor for CRLBoardItem(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101676C20);
  }
  return result;
}

id sub_10060A4AC(uint64_t a1)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v4 = (void *)Strong;
    swift_beginAccess();
    type metadata accessor for UUID();
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v6 = [v4 resolveToSiblingsWithUuids:isa];

    type metadata accessor for CRLBoardItem(0);
    sub_10060A334();
    uint64_t v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v8 = sub_10060A798(v7, a1);
    swift_bridgeObjectRelease();
    return (id)v8;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"selectionPathFrom(persistableSelectionPath:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2, 29, (uint64_t)"Can't get selectionPath with a nil board", 40, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v13) = 2;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"selectionPathFrom(persistableSelectionPath:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2, 29);
    id v10 = *(id *)(v1 + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator);
    Class v11 = Set._bridgeToObjectiveC()().super.isa;
    id v12 = [v10 selectionPathForInfos:v11 Can't get selectionPath with a nil board 40 v13];

    return v12;
  }
}

uint64_t sub_10060A798(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1005057FC(qword_101675B88);
  uint64_t v158 = *(void *)(v5 - 8);
  uint64_t v159 = v5;
  __chkstk_darwin(v5, v6);
  uint64_t v157 = (char *)&v152 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v166 = *(void *)(v8 - 8);
  uint64_t v167 = v8;
  __chkstk_darwin(v8, v9);
  v165 = (char *)&v152 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v162, v11);
  uint64_t v163 = (char *)&v152 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v164 = (uint64_t)&v152 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC(&qword_101675C18);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v156 = (char *)&v152 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19, v21);
  int64_t v155 = (char *)&v152 - v23;
  uint64_t v25 = __chkstk_darwin(v22, v24);
  v171 = (char *)&v152 - v26;
  uint64_t v28 = __chkstk_darwin(v25, v27);
  uint64_t v161 = (char *)&v152 - v29;
  __chkstk_darwin(v28, v30);
  uint64_t v160 = (char *)&v152 - v31;
  uint64_t v32 = sub_1005057FC(&qword_101676C68);
  uint64_t v34 = __chkstk_darwin(v32 - 8, v33);
  id v36 = (char *)&v152 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v34, v37);
  uint64_t v168 = (char *)&v152 - v39;
  uint64_t v41 = __chkstk_darwin(v38, v40);
  uint64_t v169 = (uint64_t)&v152 - v42;
  uint64_t v44 = __chkstk_darwin(v41, v43);
  uint64_t v46 = (char *)&v152 - v45;
  uint64_t v48 = __chkstk_darwin(v44, v47);
  uint64_t v50 = (char *)&v152 - v49;
  __chkstk_darwin(v48, v51);
  uint64_t v53 = (char *)&v152 - v52;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (__CocoaSet.count.getter()) {
      goto LABEL_3;
    }
LABEL_6:
    id v58 = *(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator);
    v59.super.Class isa = Set._bridgeToObjectiveC()().super.isa;
    id v60 = [v58 selectionPathForInfos:v59.super.isa];
LABEL_36:
    id v91 = v60;

    return (uint64_t)v91;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v153 = v16;
  uint64_t v54 = a2 + OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo;
  swift_beginAccess();
  sub_10060B95C(v54, (uint64_t)v53);
  uint64_t v55 = type metadata accessor for CRLPersistableSelectionPath.UserInfo(0);
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v172 = *(char **)(v56 + 48);
  id v173 = (id)(v56 + 48);
  int v57 = ((uint64_t (*)(char *, uint64_t, uint64_t))v172)(v53, 1, v55);
  uint64_t v154 = v17;
  uint64_t v170 = v2;
  if (v57 == 1)
  {
    sub_10060B9C4((uint64_t)v53);
LABEL_10:
    id v63 = *(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator);
    sub_101035A78(a1);
    v64.super.Class isa = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v65 = [v63 selectionPathForInfos:v64.super.isa];
    goto LABEL_11;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_10060BA24((uint64_t)v53, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
  uint64_t v2 = v170;
  if (EnumCaseMultiPayload != 2) {
    goto LABEL_10;
  }
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v62 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v62 = *(void *)(a1 + 16);
  }
  sub_10060E550(v62, 1, (uint64_t)&_mh_execute_header, (uint64_t)"selectionPathFrom(boardItems:persistableSelectionPath:)", 55, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2u, 81);
  uint64_t v88 = swift_bridgeObjectRetain();
  v64.super.Class isa = (Class)sub_100999830(v88);
  swift_bridgeObjectRelease();
  if (!v64.super.isa) {
    goto LABEL_35;
  }
  type metadata accessor for CRLGroupItem();
  uint64_t v89 = swift_dynamicCastClass();
  if (!v89)
  {

LABEL_35:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"selectionPathFrom(boardItems:persistableSelectionPath:)", 55, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2, 84, (uint64_t)"The item in a GroupSelection should be a CRLGroupItem", 53, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"selectionPathFrom(boardItems:persistableSelectionPath:)", 55, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2, 84);
    id v58 = *(id *)(v170 + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator);
    v59.super.Class isa = Set._bridgeToObjectiveC()().super.isa;
    id v60 = [v58 selectionPathForInfos:v59.super.isa];
    goto LABEL_36;
  }
  uint64_t v90 = v89;
  id v63 = *(id *)(v170 + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator);
  id v65 = [v63 selectionPathForNothingSelectedInsideGroup:v90];
LABEL_11:
  uint64_t v66 = (char *)v65;

  sub_10060B95C(v54, (uint64_t)v50);
  uint64_t v67 = v172;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v172)(v50, 1, v55) == 1) {
    goto LABEL_21;
  }
  sub_10060B95C((uint64_t)v50, (uint64_t)v46);
  int v68 = swift_getEnumCaseMultiPayload();
  if (v68 != 1)
  {
    if (!v68)
    {
      uint64_t v69 = *(void (**)(char *, uint64_t))(v154 + 8);
      v69(v46, v153);
      goto LABEL_16;
    }
    sub_10060BA24((uint64_t)v46, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
LABEL_21:
    sub_10060B9C4((uint64_t)v50);
    goto LABEL_22;
  }
  uint64_t v70 = sub_1005057FC(&qword_101676C70);
  uint64_t v69 = *(void (**)(char *, uint64_t))(v154 + 8);
  uint64_t v71 = v66;
  uint64_t v72 = v153;
  v69(&v46[*(int *)(v70 + 48)], v153);
  uint64_t v73 = v72;
  uint64_t v66 = v71;
  v69(v46, v73);
  uint64_t v67 = v172;
LABEL_16:
  sub_10060B9C4((uint64_t)v50);
  uint64_t v74 = swift_bridgeObjectRetain();
  uint64_t v75 = (void *)sub_100999830(v74);
  swift_bridgeObjectRelease();
  uint64_t v76 = v171;
  if (!v75)
  {
LABEL_22:
    sub_10060B95C(v54, (uint64_t)v36);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v67)(v36, 1, v55) != 1)
    {
      int v81 = swift_getEnumCaseMultiPayload();
      sub_10060BA24((uint64_t)v36, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
      if (v81 == 3)
      {
        uint64_t v82 = swift_bridgeObjectRetain();
        uint64_t v83 = (void *)sub_100999830(v82);
        swift_bridgeObjectRelease();
        if (v83)
        {
          type metadata accessor for CRLShapeItem();
          uint64_t v84 = swift_dynamicCastClass();

          if (v84)
          {
            id v85 = [objc_allocWithZone((Class)CRLPathSelection) init];
            id v86 = [v66 selectionPathWithAppendedSelection:v85];

            return (uint64_t)v86;
          }
        }
      }
      return (uint64_t)v66;
    }
    uint64_t v80 = (uint64_t)v36;
    goto LABEL_24;
  }
  type metadata accessor for CRLWPShapeItem();
  uint64_t v77 = swift_dynamicCastClass();
  if (!v77)
  {

    uint64_t v67 = v172;
    goto LABEL_22;
  }
  uint64_t v78 = (char *)v77;
  uint64_t v79 = v169;
  sub_10060B95C(v54, v169);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v172)(v79, 1, v55) != 1)
  {
    long long v92 = v168;
    sub_10060B95C(v79, (uint64_t)v168);
    int v93 = swift_getEnumCaseMultiPayload();
    if (v93 == 1)
    {
      id v173 = v75;
      uint64_t v124 = sub_1005057FC(&qword_101676C70);
      uint64_t v125 = v92;
      uint64_t v172 = &v92[*(int *)(v124 + 48)];
      uint64_t v126 = v154;
      id v127 = v78;
      uint64_t v128 = *(void (**)(char *, char *, uint64_t))(v154 + 32);
      unint64_t v129 = v161;
      uint64_t v130 = v153;
      v128(v161, v125, v153);
      uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v128)(v76, v172, v130);
      uint64_t v172 = v127;
      uint64_t v160 = (char *)OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage;
      uint64_t v168 = *(char **)&v127[OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage];
      if (!v168)
      {
LABEL_64:
        __break(1u);
        goto LABEL_65;
      }
      uint64_t v131 = *(void (**)(char *, char *, uint64_t))(v126 + 16);
      v131(v155, v129, v130);
      v131(v156, v76, v130);
      sub_1005F2170((unint64_t *)&qword_101675C20);
      sub_1005F2170(&qword_101675C28);
      uint64_t v132 = v168;
      uint64_t v133 = v157;
      uint64_t result = CursorRange.init(lowerBound:upperBound:)();
      uint64_t v168 = v132;
      uint64_t v134 = *(void *)&v132[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
      if (!v134)
      {
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
        goto LABEL_67;
      }
      uint64_t v135 = (uint64_t)v163;
      (*(void (**)(uint64_t))(*(void *)v134 + 760))(result);
      uint64_t v136 = v164;
      sub_1005D3C94(v135 + *(int *)(v162 + 20), v164);
      sub_10060BA24(v135, type metadata accessor for CRLWPShapeItemCRDTData);
      v137 = v165;
      uint64_t v138 = v166;
      uint64_t v139 = v167;
      (*(void (**)(char *, uint64_t, uint64_t))(v166 + 16))(v165, v136, v167);
      sub_10060BA24(v136, type metadata accessor for CRLWPStorageCRDTData);
      uint64_t v140 = CRAttributedString.range(of:)();
      uint64_t v142 = v141;
      LOBYTE(v136) = v143;
      (*(void (**)(char *, uint64_t))(v138 + 8))(v137, v139);

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v158 + 8))(v133, v159);
      if (v136)
      {

        uint64_t v150 = v153;
        v69(v171, v153);
        v69(v161, v150);
        uint64_t v80 = v79;
        goto LABEL_24;
      }
      uint64_t v144 = v171;
      if (!__OFSUB__(v142, v140))
      {
        unint64_t v145 = *(void **)&v160[(void)v172];
        if (v145)
        {
          id v146 = *(id *)(v170 + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator);
          id v147 = v145;
          id v148 = [v146 selectionPathForRange:v140, v142 - v140, v147];

          uint64_t v149 = v153;
          v69(v144, v153);
          v69(v161, v149);
          goto LABEL_57;
        }
        goto LABEL_66;
      }
      __break(1u);
    }
    else
    {
      uint64_t v94 = v153;
      if (v93)
      {

        sub_10060BA24((uint64_t)v92, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
        uint64_t v80 = v79;
        goto LABEL_24;
      }
      v171 = v66;
      id v95 = (int *)sub_1005057FC(&qword_101676C78);
      uint64_t v96 = *(void *)&v92[v95[12]];
      int v97 = v92[v95[16]];
      uint64_t v98 = *(void *)&v92[v95[20]];
      uint64_t v99 = v160;
      uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v154 + 32))(v160, v92, v94);
      uint64_t v100 = *(char **)&v78[OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage];
      if (v100)
      {
        uint64_t v158 = v98;
        uint64_t v159 = v96;
        uint64_t v161 = (char *)OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage;
        LODWORD(v168) = v97;
        uint64_t v172 = v78;
        id v173 = v75;
        uint64_t v101 = *(void *)&v100[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
        if (v101)
        {
          uint64_t v102 = (uint64_t)v163;
          (*(void (**)(uint64_t))(*(void *)v101 + 760))(result);
          uint64_t v103 = v164;
          sub_1005D3C94(v102 + *(int *)(v162 + 20), v164);
          uint64_t v104 = v100;
          sub_10060BA24(v102, type metadata accessor for CRLWPShapeItemCRDTData);
          uint64_t v105 = v165;
          uint64_t v106 = v166;
          uint64_t v107 = v167;
          (*(void (**)(char *, uint64_t, uint64_t))(v166 + 16))(v165, v103, v167);
          sub_10060BA24(v103, type metadata accessor for CRLWPStorageCRDTData);
          uint64_t v108 = CRAttributedString.index(of:)();
          uint64_t v109 = v99;
          char v111 = v110;
          (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v107);

          if (v111)
          {
            v69(v109, v94);

            sub_10060B9C4(v79);
            return (uint64_t)v171;
          }
          uint64_t v112 = (objc_class *)type metadata accessor for CRLTextRange();
          uint64_t v113 = (char *)objc_allocWithZone(v112);
          uint64_t v114 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
          *(void *)&v113[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
          uint64_t v115 = OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge;
          *(void *)&v113[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
          id v116 = v113;
          NSNotFound.getter();
          uint64_t v117 = (uint64_t *)&v116[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
          *uint64_t v117 = v108;
          v117[1] = v108;
          *(void *)&v113[v114] = v159;
          *(void *)&v113[v115] = v158;

          v174.receiver = v116;
          v174.super_class = v112;
          uint64_t result = (uint64_t)[super init];
          uint64_t v118 = (void *)result;
          uint64_t v119 = *(void **)&v161[(void)v172];
          if (!v168)
          {
            if (v119)
            {
              id v123 = objc_retain(*(id *)(v170
                                       + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator));
              id v120 = v119;
              id v122 = [v123 selectionPathForTextRange:v118 onStorage:v120];
              goto LABEL_56;
            }
LABEL_68:
            __break(1u);
            return result;
          }
          if (v119)
          {
            id v120 = objc_retain(*(id *)(v170
                                     + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator));
            id v121 = v119;
            id v122 = [v120 visualSelectionPathForTextRange:v118 onStorage:v121];
            id v123 = v118;
            uint64_t v118 = v121;
LABEL_56:
            uint64_t v151 = v153;
            uint64_t v79 = v169;
            uint64_t v66 = v171;
            id v148 = v122;

            v69(v160, v151);
LABEL_57:
            sub_10060B9C4(v79);
            if (v148)
            {

              return (uint64_t)v148;
            }
            return (uint64_t)v66;
          }
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
        goto LABEL_63;
      }
    }
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }

  uint64_t v80 = v79;
LABEL_24:
  sub_10060B9C4(v80);
  return (uint64_t)v66;
}

id sub_10060B8B8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSelectionPathValidator();
  [super dealloc];
}

uint64_t type metadata accessor for CRLSelectionPathValidator()
{
  return self;
}

uint64_t sub_10060B95C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101676C68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10060B9C4(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101676C68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10060BA24(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_10060BA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    uint64_t v21 = a1;
    swift_beginAccess();
    type metadata accessor for UUID();
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    id v9 = [v7 parentMapOfItemsFrom:isa];

    type metadata accessor for CRLBoardItem(0);
    sub_1005057FC(&qword_101676C80);
    sub_10060A334();
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    Class v10 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v11 = [v7 resolveToSiblingsWithUuids:v10];

    static Set._unconditionallyBridgeFromObjectiveC(_:)();
    Class v12 = Dictionary._bridgeToObjectiveC()().super.isa;
    Class v13 = Set._bridgeToObjectiveC()().super.isa;
    id v14 = (id)(*(uint64_t (**)(uint64_t, Class, Class))(a3 + 16))(a3, v12, v13);

    if (v14)
    {
      uint64_t v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      id v16 = (id)sub_10060A798(v15, v21);
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"selectionPathFrom(persistableSelectionPath:selectableBoardItemsFromParentMapAndSiblings:)", 89, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2, 56, (uint64_t)"Can't get selectionPath with a nil board", 40, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v20) = 2;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"selectionPathFrom(persistableSelectionPath:selectableBoardItemsFromParentMapAndSiblings:)", 89, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2, 56);
    id v17 = *(id *)(a2 + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator);
    Class v18 = Set._bridgeToObjectiveC()().super.isa;
    id v16 = [v17 selectionPathForInfos:v18 Can't get selectionPath with a nil board 40 v20];
  }
  return v16;
}

id sub_10060BE4C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPStickyNoteLayout();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLWPStickyNoteLayout()
{
  return self;
}

uint64_t destroy for CRLBoardViewState(uint64_t result)
{
  uint64_t v1 = result;
  unint64_t v2 = *(void *)(result + 48);
  if (v2 >> 60 != 15) {
    uint64_t result = sub_100510084(*(void *)(result + 40), v2);
  }
  unint64_t v3 = *(void *)(v1 + 64);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(v1 + 56);
    return sub_100510084(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for CRLBoardViewState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = (uint64_t *)(a2 + 40);
  unint64_t v5 = *(void *)(a2 + 48);
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v4;
  }
  else
  {
    uint64_t v6 = *v4;
    sub_100510D4C(*v4, *(void *)(a2 + 48));
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v5;
  }
  uint64_t v7 = (uint64_t *)(a2 + 56);
  unint64_t v8 = *(void *)(a2 + 64);
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v7;
  }
  else
  {
    uint64_t v9 = *v7;
    sub_100510D4C(*v7, *(void *)(a2 + 64));
    *(void *)(a1 + 56) = v9;
    *(void *)(a1 + 64) = v8;
  }
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t assignWithCopy for CRLBoardViewState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  unint64_t v5 = (_OWORD *)(a1 + 40);
  uint64_t v6 = (uint64_t *)(a2 + 40);
  unint64_t v7 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48) >> 60 == 15)
  {
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *v6;
      sub_100510D4C(*v6, *(void *)(a2 + 48));
      *(void *)(a1 + 40) = v8;
      *(void *)(a1 + 48) = v7;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
    sub_10060C134(a1 + 40);
LABEL_6:
    *unint64_t v5 = *(_OWORD *)v6;
    goto LABEL_8;
  }
  uint64_t v9 = *v6;
  sub_100510D4C(*v6, *(void *)(a2 + 48));
  uint64_t v10 = *(void *)(a1 + 40);
  unint64_t v11 = *(void *)(a1 + 48);
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v7;
  sub_100510084(v10, v11);
LABEL_8:
  Class v12 = (uint64_t *)(a2 + 56);
  unint64_t v13 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64) >> 60 != 15)
  {
    if (v13 >> 60 != 15)
    {
      uint64_t v15 = *v12;
      sub_100510D4C(*v12, *(void *)(a2 + 64));
      uint64_t v16 = *(void *)(a1 + 56);
      unint64_t v17 = *(void *)(a1 + 64);
      *(void *)(a1 + 56) = v15;
      *(void *)(a1 + 64) = v13;
      sub_100510084(v16, v17);
      goto LABEL_15;
    }
    sub_10060C134(a1 + 56);
    goto LABEL_13;
  }
  if (v13 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v12;
    goto LABEL_15;
  }
  uint64_t v14 = *v12;
  sub_100510D4C(*v12, *(void *)(a2 + 64));
  *(void *)(a1 + 56) = v14;
  *(void *)(a1 + 64) = v13;
LABEL_15:
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t sub_10060C134(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for CRLBoardViewState(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for CRLBoardViewState(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  long long v4 = (_OWORD *)(a1 + 40);
  unint64_t v5 = (_OWORD *)(a2 + 40);
  unint64_t v6 = *(void *)(a1 + 48);
  if (v6 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v7 = *(void *)(a2 + 48);
  if (v7 >> 60 == 15)
  {
    sub_10060C134(a1 + 40);
LABEL_4:
    _OWORD *v4 = *v5;
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)v5;
  *(void *)(a1 + 48) = v7;
  sub_100510084(v8, v6);
LABEL_6:
  uint64_t v9 = (void *)(a2 + 56);
  unint64_t v10 = *(void *)(a1 + 64);
  if (v10 >> 60 != 15)
  {
    unint64_t v11 = *(void *)(a2 + 64);
    if (v11 >> 60 != 15)
    {
      uint64_t v12 = *(void *)(a1 + 56);
      *(void *)(a1 + 56) = *v9;
      *(void *)(a1 + 64) = v11;
      sub_100510084(v12, v10);
      goto LABEL_11;
    }
    sub_10060C134(a1 + 56);
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)v9;
LABEL_11:
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLBoardViewState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 73)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 72);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLBoardViewState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 73) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 72) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardViewState()
{
  return &type metadata for CRLBoardViewState;
}

unint64_t sub_10060C358(char a1)
{
  unint64_t result = 0x6C61635377656976;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4F746E65746E6F63;
      break;
    case 2:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000021;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10060C424(char a1)
{
  unint64_t result = 0x6C61635377656976;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4F746E65746E6F63;
      break;
    case 2:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000021;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10060C4F0(unsigned __int8 *a1, char *a2)
{
  return sub_10094F024(*a1, *a2);
}

Swift::Int sub_10060C4FC()
{
  return sub_100BBA890();
}

uint64_t sub_10060C504()
{
  return sub_10094FFE8();
}

Swift::Int sub_10060C50C()
{
  return sub_10095081C();
}

unint64_t sub_10060C514@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10060CCFC(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_10060C544@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10060C358(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10060C570()
{
  return sub_10060C424(*v0);
}

unint64_t sub_10060C578@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10060CCFC(a1);
  *a2 = result;
  return result;
}

void sub_10060C5A0(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_10060C5AC(uint64_t a1)
{
  unint64_t v2 = sub_10060D0DC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10060C5E8(uint64_t a1)
{
  unint64_t v2 = sub_10060D0DC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10060C624(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_101676CD8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_10060D0DC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  *(void *)&long long v15 = *(void *)v3;
  char v16 = 0;
  sub_10060D1D8();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  long long v15 = *(_OWORD *)(v3 + 8);
  char v16 = 1;
  type metadata accessor for CGPoint(0);
  sub_10060D22C(&qword_101676CE8);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  sub_10060D270(v3 + 24, (uint64_t)v17);
  sub_10060D270((uint64_t)v17, (uint64_t)&v15);
  char v16 = 2;
  sub_1005057FC(&qword_101676CF0);
  sub_10060D2D8();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  unint64_t v11 = *(void *)(v3 + 48);
  if (v11 >> 60 != 15)
  {
    uint64_t v12 = *(void *)(v3 + 40);
    *(void *)&long long v15 = v12;
    *((void *)&v15 + 1) = v11;
    char v16 = 3;
    sub_100510D4C(v12, v11);
    sub_10060D344();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_100514260(v12, v11);
  }
  unint64_t v13 = *(void *)(v3 + 64);
  if (v13 >> 60 == 15) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v14 = *(void *)(v3 + 56);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = v13;
  char v16 = 4;
  sub_100510D4C(v14, v13);
  sub_10060D344();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return sub_100514260(v14, v13);
}

__n128 sub_10060C940@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10060CD48(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 57) = *(_OWORD *)((char *)v7 + 9);
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_10060C98C(void *a1)
{
  return sub_10060C624(a1);
}

uint64_t sub_10060C9D0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[3];
  _OWORD v7[2] = a1[2];
  v8[0] = v2;
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)a1 + 57);
  long long v3 = a1[1];
  v7[0] = *a1;
  v7[1] = v3;
  long long v4 = a2[3];
  v9[2] = a2[2];
  v10[0] = v4;
  *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)((char *)a2 + 57);
  long long v5 = a2[1];
  v9[0] = *a2;
  v9[1] = v5;
  return sub_10060CB20((uint64_t)v7, (uint64_t)v9) & 1;
}

uint64_t sub_10060CA2C()
{
  _StringGuts.grow(_:)(51);
  v0._countAndFlagsBits = 0xD00000000000001DLL;
  v0._object = (void *)0x8000000101240570;
  String.append(_:)(v0);
  v1._countAndFlagsBits = Double.description.getter();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._object = (void *)0x8000000101240590;
  v2._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v2);
  type metadata accessor for CGPoint(0);
  _print_unlocked<A, B>(_:_:)();
  v3._countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  return 0;
}

uint64_t sub_10060CB20(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2
    || *(double *)(a1 + 8) != *(double *)(a2 + 8)
    || *(double *)(a1 + 16) != *(double *)(a2 + 16))
  {
    goto LABEL_20;
  }
  char v4 = *(unsigned char *)(a2 + 32);
  if (*(unsigned char *)(a1 + 32))
  {
    if (!*(unsigned char *)(a2 + 32)) {
      return v4 & 1;
    }
  }
  else
  {
    if (*(void *)(a1 + 24) != *(void *)(a2 + 24)) {
      char v4 = 1;
    }
    if (v4) {
      goto LABEL_20;
    }
  }
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a2 + 40);
  unint64_t v8 = *(void *)(a2 + 48);
  if (v6 >> 60 == 15)
  {
    if (v8 >> 60 != 15) {
      goto LABEL_19;
    }
    goto LABEL_15;
  }
  if (v8 >> 60 == 15) {
    goto LABEL_19;
  }
  sub_1005FA2A0(*(void *)(a1 + 40), *(void *)(a1 + 48));
  sub_1005FA2A0(v7, v8);
  char v9 = sub_1008D44A8(v5, v6, v7, v8);
  sub_100514260(v7, v8);
  sub_100514260(v5, v6);
  if (v9)
  {
LABEL_15:
    uint64_t v5 = *(void *)(a1 + 56);
    unint64_t v6 = *(void *)(a1 + 64);
    uint64_t v7 = *(void *)(a2 + 56);
    unint64_t v8 = *(void *)(a2 + 64);
    if (v6 >> 60 == 15)
    {
      if (v8 >> 60 == 15) {
        goto LABEL_23;
      }
    }
    else if (v8 >> 60 != 15)
    {
      sub_1005FA2A0(*(void *)(a1 + 56), *(void *)(a1 + 64));
      sub_1005FA2A0(v7, v8);
      char v11 = sub_1008D44A8(v5, v6, v7, v8);
      sub_100514260(v7, v8);
      sub_100514260(v5, v6);
      if ((v11 & 1) == 0) {
        goto LABEL_20;
      }
LABEL_23:
      char v4 = ((*(unsigned char *)(a1 + 72) & 1) == 0) ^ *(unsigned char *)(a2 + 72);
      return v4 & 1;
    }
LABEL_19:
    sub_1005FA2A0(v5, v6);
    sub_1005FA2A0(v7, v8);
    sub_100514260(v5, v6);
    sub_100514260(v7, v8);
  }
LABEL_20:
  char v4 = 0;
  return v4 & 1;
}

unint64_t sub_10060CCFC(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101503978, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

uint64_t sub_10060CD48@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_101676CB0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  char v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_10060D0DC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    sub_100514260(0, 0xF000000000000000);
    return sub_100514260(0, 0xF000000000000000);
  }
  else
  {
    char v25 = 0;
    sub_10060D130();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v10 = v23;
    type metadata accessor for CGPoint(0);
    char v25 = 1;
    sub_10060D22C(&qword_101676CC8);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v11 = v23;
    unint64_t v12 = v24;
    LOBYTE(v23) = 2;
    uint64_t v13 = KeyedDecodingContainer.decode(_:forKey:)();
    char v25 = 3;
    unint64_t v22 = sub_10060D184();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v20 = 0;
    uint64_t v21 = v13;
    uint64_t v14 = v23;
    unint64_t v15 = v24;
    char v25 = 4;
    sub_1005FA2A0(v23, v24);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    BOOL v16 = v20 != 0;
    uint64_t v17 = v23;
    unint64_t v18 = v24;
    sub_1005FA2A0(v23, v24);
    sub_100514260(0, 0xF000000000000000);
    sub_1005FA2A0(v14, v15);
    sub_1005FA2A0(v17, v18);
    sub_100514260(v17, v18);
    sub_100514260(v14, v15);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    sub_100514260(v14, v15);
    uint64_t result = sub_100514260(v17, v18);
    *(void *)a2 = v10;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v12;
    *(void *)(a2 + 24) = v21;
    *(unsigned char *)(a2 + 32) = v16;
    *(void *)(a2 + 40) = v14;
    *(void *)(a2 + 48) = v15;
    *(void *)(a2 + 56) = v17;
    *(void *)(a2 + 64) = v18;
    *(unsigned char *)(a2 + 72) = 0;
  }
  return result;
}

unint64_t sub_10060D0DC()
{
  unint64_t result = qword_101676CB8;
  if (!qword_101676CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101676CB8);
  }
  return result;
}

unint64_t sub_10060D130()
{
  unint64_t result = qword_101676CC0;
  if (!qword_101676CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101676CC0);
  }
  return result;
}

unint64_t sub_10060D184()
{
  unint64_t result = qword_101676CD0;
  if (!qword_101676CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101676CD0);
  }
  return result;
}

unint64_t sub_10060D1D8()
{
  unint64_t result = qword_101676CE0;
  if (!qword_101676CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101676CE0);
  }
  return result;
}

uint64_t sub_10060D22C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CGPoint(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10060D270(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101676CF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10060D2D8()
{
  unint64_t result = qword_101676CF8;
  if (!qword_101676CF8)
  {
    sub_100522D34(&qword_101676CF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101676CF8);
  }
  return result;
}

unint64_t sub_10060D344()
{
  unint64_t result = qword_101676D00;
  if (!qword_101676D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101676D00);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CRLBoardAuxiliaryRealTimeChangeTypeLegacy(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CRLBoardViewState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    unsigned char *result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10060D4F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unsigned char *result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardViewState.CodingKeys()
{
  return &type metadata for CRLBoardViewState.CodingKeys;
}

unint64_t sub_10060D530()
{
  unint64_t result = qword_101676D08;
  if (!qword_101676D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101676D08);
  }
  return result;
}

unint64_t sub_10060D588()
{
  unint64_t result = qword_101676D10;
  if (!qword_101676D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101676D10);
  }
  return result;
}

unint64_t sub_10060D5E0()
{
  unint64_t result = qword_101676D18;
  if (!qword_101676D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101676D18);
  }
  return result;
}

double initializeWithCopy for CRLLayerTransformByNaturalRectTransition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&double result = sub_10060D710(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakCopyInit).n128_u64[0];
  return result;
}

__n128 assignWithCopy for CRLLayerTransformByNaturalRectTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_unknownObjectWeakCopyAssign();
  *(void *)(v3 + 8) = *(void *)(a2 + 8);
  *(void *)(v3 + 16) = *(void *)(a2 + 16);
  *(void *)(v3 + 24) = *(void *)(a2 + 24);
  *(void *)(v3 + 32) = *(void *)(a2 + 32);
  *(void *)(v3 + 40) = *(void *)(a2 + 40);
  *(void *)(v3 + 48) = *(void *)(a2 + 48);
  *(void *)(v3 + 56) = *(void *)(a2 + 56);
  *(void *)(v3 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(v3 + 72) = *(_OWORD *)(a2 + 72);
  long long v4 = *(_OWORD *)(a2 + 88);
  long long v5 = *(_OWORD *)(a2 + 104);
  long long v6 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(v3 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(v3 + 120) = v6;
  *(_OWORD *)(v3 + 104) = v5;
  *(_OWORD *)(v3 + 88) = v4;
  __n128 result = *(__n128 *)(a2 + 152);
  long long v8 = *(_OWORD *)(a2 + 168);
  long long v9 = *(_OWORD *)(a2 + 184);
  *(unsigned char *)(v3 + 200) = *(unsigned char *)(a2 + 200);
  *(_OWORD *)(v3 + 184) = v9;
  *(_OWORD *)(v3 + 168) = v8;
  *(__n128 *)(v3 + 152) = result;
  return result;
}

double initializeWithTake for CRLLayerTransformByNaturalRectTransition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&double result = sub_10060D710(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakTakeInit).n128_u64[0];
  return result;
}

__n128 sub_10060D710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5 = a4();
  *(_OWORD *)(v5 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(v5 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(v5 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(v5 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(v5 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(v5 + 184) = *(_OWORD *)(a2 + 184);
  *(unsigned char *)(v5 + 200) = *(unsigned char *)(a2 + 200);
  *(_OWORD *)(v5 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(v5 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(v5 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(v5 + 136) = *(_OWORD *)(a2 + 136);
  __n128 result = *(__n128 *)(a2 + 72);
  *(__n128 *)(v5 + 72) = result;
  return result;
}

__n128 assignWithTake for CRLLayerTransformByNaturalRectTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_unknownObjectWeakTakeAssign();
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v3 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(v3 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(v3 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(v3 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(v3 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(v3 + 184) = *(_OWORD *)(a2 + 184);
  *(unsigned char *)(v3 + 200) = *(unsigned char *)(a2 + 200);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(v3 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(v3 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(v3 + 136) = *(_OWORD *)(a2 + 136);
  __n128 result = *(__n128 *)(a2 + 72);
  *(__n128 *)(v3 + 72) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CRLLayerTransformByNaturalRectTransition(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 201)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CRLLayerTransformByNaturalRectTransition(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 200) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 201) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CRLLayerTransformByNaturalRectTransition()
{
  return &type metadata for CRLLayerTransformByNaturalRectTransition;
}

void sub_10060D8BC(uint64_t a1@<X8>)
{
  int v2 = v1;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = Strong;
    [Strong frame];
    double x = v127.origin.x;
    double y = v127.origin.y;
    double width = v127.size.width;
    double height = v127.size.height;
    if (CGRectGetWidth(v127) <= 0.0
      || (v128.origin.double x = x,
          v128.origin.double y = y,
          v128.size.double width = width,
          v128.size.double height = height,
          CGRectGetHeight(v128) <= 0.0))
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"concretePropertyTransition", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/Property Transitions/CRLLayerTransformByNaturalRectTransition.swift", 147, 2, 53, (uint64_t)"The layer's rect must have a size greater than 0.", 49, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"concretePropertyTransition", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/Property Transitions/CRLLayerTransformByNaturalRectTransition.swift", 147, 2, 53);
    }
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_10117D8C0;
    uint64_t v11 = self;
    id v12 = [v11 valueWithCGPoint:0.5, 0.5];
    unint64_t v13 = sub_10060E23C();
    *(void *)(v10 + 56) = v13;
    unint64_t v14 = sub_10060E27C();
    *(void *)(v10 + 64) = v14;
    *(void *)(v10 + 32) = v12;
    [v5 anchorPoint];
    id v15 = [v11 valueWithCGPoint:];
    *(void *)(v10 + 96) = v13;
    *(void *)(v10 + 104) = v14;
    *(void *)(v10 + 72) = v15;
    [v5 anchorPoint];
    if (v17 != 0.5 || v16 != 0.5)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"concretePropertyTransition", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/Property Transitions/CRLLayerTransformByNaturalRectTransition.swift", 147, 2, 54, (uint64_t)"The view's anchor point is expected to be %@, but it's actually %@. Animations may appear incorrect.", 100, 2u, v10);
      sub_1005598CC(v10, (uint64_t)"concretePropertyTransition", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/Property Transitions/CRLLayerTransformByNaturalRectTransition.swift", 147, 2, 54);
    }
    swift_bridgeObjectRelease();
    sub_1005E9324((uint64_t)(v2 + 9), (uint64_t)v125);
    sub_1005E9324((uint64_t)v125, (uint64_t)v126);
    if (sub_1005E938C((uint64_t)v126) == 1) {
      [v5 transform];
    }
    else {
      sub_1005E9324((uint64_t)v125, (uint64_t)&a);
    }
    CGFloat m11 = a.m11;
    CGFloat m12 = a.m12;
    CGFloat m13 = a.m13;
    CGFloat m14 = a.m14;
    CGFloat m21 = a.m21;
    CGFloat m22 = a.m22;
    CGFloat m23 = a.m23;
    CGFloat m24 = a.m24;
    CGFloat m32 = a.m32;
    CGFloat m31 = a.m31;
    CGFloat m34 = a.m34;
    CGFloat m33 = a.m33;
    CGFloat m42 = a.m42;
    CGFloat m41 = a.m41;
    CGFloat m44 = a.m44;
    CGFloat m43 = a.m43;
    double v18 = v2[3];
    double v19 = v2[4];
    double v20 = sub_100065A10(x, y, width, height, v2[1], v2[2], v18, v19);
    double v22 = v21;
    CATransform3DMakeScale(&a, v18 / width, v19 / height, 1.0);
    long long v23 = *(_OWORD *)&a.m11;
    long long v24 = *(_OWORD *)&a.m13;
    long long v25 = *(_OWORD *)&a.m21;
    long long v26 = *(_OWORD *)&a.m23;
    long long v27 = *(_OWORD *)&a.m31;
    long long v28 = *(_OWORD *)&a.m33;
    long long v29 = *(_OWORD *)&a.m41;
    long long v30 = *(_OWORD *)&a.m43;
    a.CGFloat m11 = m11;
    a.CGFloat m12 = m12;
    a.CGFloat m13 = m13;
    a.CGFloat m14 = m14;
    a.CGFloat m21 = m21;
    a.CGFloat m22 = m22;
    a.CGFloat m23 = m23;
    a.CGFloat m24 = m24;
    a.CGFloat m31 = m31;
    a.CGFloat m32 = m32;
    a.CGFloat m33 = m33;
    a.CGFloat m34 = m34;
    a.CGFloat m41 = m41;
    a.CGFloat m42 = m42;
    a.CGFloat m43 = m43;
    a.CGFloat m44 = m44;
    *(_OWORD *)&b.CGFloat m11 = v23;
    *(_OWORD *)&b.CGFloat m13 = v24;
    *(_OWORD *)&b.CGFloat m21 = v25;
    *(_OWORD *)&b.CGFloat m23 = v26;
    *(_OWORD *)&b.CGFloat m31 = v27;
    *(_OWORD *)&b.CGFloat m33 = v28;
    *(_OWORD *)&b.CGFloat m41 = v29;
    *(_OWORD *)&b.CGFloat m43 = v30;
    CATransform3DConcat(&v123, &a, &b);
    long long v90 = *(_OWORD *)&v123.m11;
    long long v88 = *(_OWORD *)&v123.m13;
    long long v86 = *(_OWORD *)&v123.m21;
    long long v84 = *(_OWORD *)&v123.m23;
    long long v82 = *(_OWORD *)&v123.m31;
    long long v80 = *(_OWORD *)&v123.m33;
    long long v78 = *(_OWORD *)&v123.m41;
    CGFloat v31 = v20 - x;
    double v32 = x;
    CGFloat v33 = v123.m43;
    CGFloat v34 = v123.m44;
    CATransform3DMakeTranslation(&a, v31, v22 - y, 0.0);
    long long v35 = *(_OWORD *)&a.m11;
    long long v36 = *(_OWORD *)&a.m13;
    long long v37 = *(_OWORD *)&a.m21;
    long long v38 = *(_OWORD *)&a.m23;
    long long v39 = *(_OWORD *)&a.m31;
    long long v40 = *(_OWORD *)&a.m33;
    long long v41 = *(_OWORD *)&a.m41;
    long long v42 = *(_OWORD *)&a.m43;
    *(_OWORD *)&a.CGFloat m11 = v90;
    *(_OWORD *)&a.CGFloat m13 = v88;
    *(_OWORD *)&a.CGFloat m21 = v86;
    *(_OWORD *)&a.CGFloat m23 = v84;
    *(_OWORD *)&a.CGFloat m31 = v82;
    *(_OWORD *)&a.CGFloat m33 = v80;
    *(_OWORD *)&a.CGFloat m41 = v78;
    a.CGFloat m43 = v33;
    a.CGFloat m44 = v34;
    *(_OWORD *)&b.CGFloat m11 = v35;
    *(_OWORD *)&b.CGFloat m13 = v36;
    *(_OWORD *)&b.CGFloat m21 = v37;
    *(_OWORD *)&b.CGFloat m23 = v38;
    *(_OWORD *)&b.CGFloat m31 = v39;
    *(_OWORD *)&b.CGFloat m33 = v40;
    *(_OWORD *)&b.CGFloat m41 = v41;
    *(_OWORD *)&b.CGFloat m43 = v42;
    CATransform3DConcat(&v123, &a, &b);
    long long v91 = *(_OWORD *)&v123.m11;
    long long v89 = *(_OWORD *)&v123.m13;
    long long v87 = *(_OWORD *)&v123.m21;
    long long v85 = *(_OWORD *)&v123.m23;
    long long v83 = *(_OWORD *)&v123.m31;
    long long v81 = *(_OWORD *)&v123.m33;
    long long v79 = *(_OWORD *)&v123.m41;
    CGFloat v77 = v123.m43;
    CGFloat v76 = v123.m44;
    double v43 = v2[7];
    double v44 = v2[8];
    double v45 = y;
    double v46 = sub_100065A10(x, y, width, height, v2[5], v2[6], v43, v44);
    double v48 = v47;
    CATransform3DMakeScale(&a, v43 / width, v44 / height, 1.0);
    long long v49 = *(_OWORD *)&a.m11;
    long long v50 = *(_OWORD *)&a.m13;
    long long v51 = *(_OWORD *)&a.m21;
    long long v52 = *(_OWORD *)&a.m23;
    long long v53 = *(_OWORD *)&a.m31;
    long long v54 = *(_OWORD *)&a.m33;
    long long v55 = *(_OWORD *)&a.m41;
    long long v56 = *(_OWORD *)&a.m43;
    a.CGFloat m11 = m11;
    a.CGFloat m12 = m12;
    a.CGFloat m13 = m13;
    a.CGFloat m14 = m14;
    a.CGFloat m21 = m21;
    a.CGFloat m22 = m22;
    a.CGFloat m23 = m23;
    a.CGFloat m24 = m24;
    a.CGFloat m31 = m31;
    a.CGFloat m32 = m32;
    a.CGFloat m33 = m33;
    a.CGFloat m34 = m34;
    a.CGFloat m41 = m41;
    a.CGFloat m42 = m42;
    a.CGFloat m43 = m43;
    a.CGFloat m44 = m44;
    *(_OWORD *)&b.CGFloat m11 = v49;
    *(_OWORD *)&b.CGFloat m13 = v50;
    *(_OWORD *)&b.CGFloat m21 = v51;
    *(_OWORD *)&b.CGFloat m23 = v52;
    *(_OWORD *)&b.CGFloat m31 = v53;
    *(_OWORD *)&b.CGFloat m33 = v54;
    *(_OWORD *)&b.CGFloat m41 = v55;
    *(_OWORD *)&b.CGFloat m43 = v56;
    CATransform3DConcat(&v123, &a, &b);
    long long v120 = *(_OWORD *)&v123.m11;
    long long v117 = *(_OWORD *)&v123.m13;
    long long v114 = *(_OWORD *)&v123.m21;
    long long v111 = *(_OWORD *)&v123.m23;
    long long v108 = *(_OWORD *)&v123.m31;
    long long v105 = *(_OWORD *)&v123.m33;
    long long v102 = *(_OWORD *)&v123.m41;
    CGFloat v57 = v46 - v32;
    CGFloat v58 = v123.m43;
    CGFloat v59 = v123.m44;
    CATransform3DMakeTranslation(&a, v57, v48 - v45, 0.0);
    long long v60 = *(_OWORD *)&a.m11;
    long long v61 = *(_OWORD *)&a.m13;
    long long v62 = *(_OWORD *)&a.m21;
    long long v63 = *(_OWORD *)&a.m23;
    long long v64 = *(_OWORD *)&a.m31;
    long long v65 = *(_OWORD *)&a.m33;
    long long v66 = *(_OWORD *)&a.m41;
    long long v67 = *(_OWORD *)&a.m43;
    *(_OWORD *)&a.CGFloat m11 = v120;
    *(_OWORD *)&a.CGFloat m13 = v117;
    *(_OWORD *)&a.CGFloat m21 = v114;
    *(_OWORD *)&a.CGFloat m23 = v111;
    *(_OWORD *)&a.CGFloat m31 = v108;
    *(_OWORD *)&a.CGFloat m33 = v105;
    *(_OWORD *)&a.CGFloat m41 = v102;
    a.CGFloat m43 = v58;
    a.CGFloat m44 = v59;
    *(_OWORD *)&b.CGFloat m11 = v60;
    *(_OWORD *)&b.CGFloat m13 = v61;
    *(_OWORD *)&b.CGFloat m21 = v62;
    *(_OWORD *)&b.CGFloat m23 = v63;
    *(_OWORD *)&b.CGFloat m31 = v64;
    *(_OWORD *)&b.CGFloat m33 = v65;
    *(_OWORD *)&b.CGFloat m41 = v66;
    *(_OWORD *)&b.CGFloat m43 = v67;
    CATransform3DConcat(&v123, &a, &b);
    long long v121 = *(_OWORD *)&v123.m11;
    long long v118 = *(_OWORD *)&v123.m13;
    long long v115 = *(_OWORD *)&v123.m21;
    long long v112 = *(_OWORD *)&v123.m23;
    long long v109 = *(_OWORD *)&v123.m31;
    long long v106 = *(_OWORD *)&v123.m33;
    long long v103 = *(_OWORD *)&v123.m41;
    CGFloat v68 = v123.m43;
    CGFloat v69 = v123.m44;
    type metadata accessor for CATransform3D(0);
    CGFloat v71 = v70;
    b.CGFloat m14 = v70;
    uint64_t v72 = swift_allocObject();
    *(void *)&b.CGFloat m11 = v72;
    *(_OWORD *)(v72 + 16) = v91;
    *(_OWORD *)(v72 + 32) = v89;
    *(_OWORD *)(v72 + 48) = v87;
    *(_OWORD *)(v72 + 64) = v85;
    *(_OWORD *)(v72 + 80) = v83;
    *(_OWORD *)(v72 + 96) = v81;
    *(_OWORD *)(v72 + 112) = v79;
    *(CGFloat *)(v72 + 128) = v77;
    *(CGFloat *)(v72 + 136) = v76;
    v123.CGFloat m14 = v71;
    uint64_t v73 = swift_allocObject();
    *(void *)&v123.CGFloat m11 = v73;
    *(_OWORD *)(v73 + 16) = v121;
    *(_OWORD *)(v73 + 32) = v118;
    *(_OWORD *)(v73 + 48) = v115;
    *(_OWORD *)(v73 + 64) = v112;
    *(_OWORD *)(v73 + 80) = v109;
    *(_OWORD *)(v73 + 96) = v106;
    *(_OWORD *)(v73 + 112) = v103;
    *(CGFloat *)(v73 + 128) = v68;
    *(CGFloat *)(v73 + 136) = v69;
    memset(&a, 0, 64);
    LOBYTE(a.m31) = 26;
    a.CGFloat m32 = 1.67501583e243;
    a.CGFloat m33 = -5.98008217e197;
    sub_1005E93B8((uint64_t)&b, (uint64_t)&a);
    sub_1005E93B8((uint64_t)&v123, (uint64_t)&a.m21);
    long long v74 = *(_OWORD *)&a.m23;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)&a.m21;
    *(_OWORD *)(a1 + 48) = v74;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)&a.m31;
    *(CGFloat *)(a1 + 80) = a.m33;
    long long v75 = *(_OWORD *)&a.m13;
    *(_OWORD *)a1 = *(_OWORD *)&a.m11;
    *(_OWORD *)(a1 + 16) = v75;
  }
  else
  {
    *(void *)(a1 + 80) = 0;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
}

__n128 sub_10060E0F4@<Q0>(uint64_t a1@<X8>)
{
  __n128 v12 = *(__n128 *)(v1 + 24);
  long long v13 = *(_OWORD *)(v1 + 8);
  long long v11 = *(_OWORD *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 56);
  uint64_t v4 = *(void *)(v1 + 64);
  sub_1005E9324(v1 + 72, (uint64_t)v14);
  long long v15 = v13;
  __n128 v16 = v12;
  long long v17 = v11;
  *(void *)&long long v18 = v3;
  *((void *)&v18 + 1) = v4;
  sub_1005E9324((uint64_t)v14, (uint64_t)v19);
  long long v5 = v19[7];
  *(_OWORD *)(a1 + 160) = v19[6];
  *(_OWORD *)(a1 + 176) = v5;
  *(unsigned char *)(a1 + 192) = v20;
  long long v6 = v19[3];
  *(_OWORD *)(a1 + 96) = v19[2];
  *(_OWORD *)(a1 + 112) = v6;
  long long v7 = v19[5];
  *(_OWORD *)(a1 + 128) = v19[4];
  *(_OWORD *)(a1 + 144) = v7;
  long long v8 = v18;
  *(_OWORD *)(a1 + 32) = v17;
  *(_OWORD *)(a1 + 48) = v8;
  long long v9 = v19[1];
  *(_OWORD *)(a1 + 64) = v19[0];
  *(_OWORD *)(a1 + 80) = v9;
  __n128 result = v16;
  *(_OWORD *)a1 = v15;
  *(__n128 *)(a1 + 16) = result;
  *(unsigned char *)(a1 + 256) = 60;
  return result;
}

unint64_t sub_10060E1C0(uint64_t a1)
{
  unint64_t result = sub_10060E1E8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_10060E1E8()
{
  unint64_t result = qword_101676D20;
  if (!qword_101676D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101676D20);
  }
  return result;
}

unint64_t sub_10060E23C()
{
  unint64_t result = qword_10167AF10;
  if (!qword_10167AF10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10167AF10);
  }
  return result;
}

unint64_t sub_10060E27C()
{
  unint64_t result = qword_10167E140;
  if (!qword_10167E140)
  {
    sub_10060E23C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167E140);
  }
  return result;
}

uint64_t sub_10060E2D4()
{
  return _swift_deallocObject(v0, 144, 7);
}

BOOL sub_10060E2E4(uint64_t a1, uint64_t a2)
{
  BOOL v4 = CGRectEqualToRect(*(CGRect *)(a1 + 8), *(CGRect *)(a2 + 8));
  sub_10060E4B4(a1, (uint64_t)v20);
  sub_10060E4B4(a2, (uint64_t)v18);
  if (!v4)
  {
    sub_100523398((uint64_t)v18);
    sub_100523398((uint64_t)v20);
    sub_10060E4B4(a1, (uint64_t)v16);
    sub_10060E4B4(a2, (uint64_t)v14);
    goto LABEL_7;
  }
  BOOL v5 = CGRectEqualToRect(v21, rect2);
  sub_100523398((uint64_t)v18);
  sub_100523398((uint64_t)v20);
  sub_10060E4B4(a1, (uint64_t)v16);
  sub_10060E4B4(a2, (uint64_t)v14);
  if (!v5) {
    goto LABEL_7;
  }
  sub_1005E9324((uint64_t)&v17, (uint64_t)v11);
  sub_1005E9324((uint64_t)&v15, (uint64_t)v12);
  sub_1005E9324((uint64_t)v11, (uint64_t)v13);
  if (sub_1005E938C((uint64_t)v13) != 1)
  {
    sub_1005E9324((uint64_t)v12, (uint64_t)v10);
    if (sub_1005E938C((uint64_t)v10) != 1)
    {
      v9[0] = v13[0];
      v9[1] = v13[1];
      v9[2] = v13[2];
      _OWORD v9[3] = v13[3];
      v9[4] = v13[4];
      v9[5] = v13[5];
      v9[6] = v13[6];
      v9[7] = v13[7];
      v8[0] = v10[0];
      v8[1] = v10[1];
      _OWORD v8[2] = v10[2];
      v8[3] = v10[3];
      v8[4] = v10[4];
      v8[5] = v10[5];
      v8[6] = v10[6];
      v8[7] = v10[7];
      BOOL v6 = sub_100080414((double *)v9, (double *)v8, 0.0);
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  sub_1005E9324((uint64_t)v12, (uint64_t)v10);
  if (sub_1005E938C((uint64_t)v10) != 1)
  {
LABEL_7:
    BOOL v6 = 0;
    goto LABEL_8;
  }
  BOOL v6 = 1;
LABEL_8:
  sub_100523398((uint64_t)v14);
  sub_100523398((uint64_t)v16);
  return v6;
}

uint64_t sub_10060E4B4(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakCopyInit();
  long long v4 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v4;
  long long v5 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 40) = v5;
  long long v6 = *(_OWORD *)(a1 + 104);
  long long v7 = *(_OWORD *)(a1 + 120);
  long long v8 = *(_OWORD *)(a1 + 136);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)(a1 + 88);
  *(_OWORD *)(a2 + 136) = v8;
  *(_OWORD *)(a2 + 120) = v7;
  *(_OWORD *)(a2 + 104) = v6;
  long long v9 = *(_OWORD *)(a1 + 168);
  long long v10 = *(_OWORD *)(a1 + 184);
  char v11 = *(unsigned char *)(a1 + 200);
  *(_OWORD *)(a2 + 152) = *(_OWORD *)(a1 + 152);
  *(unsigned char *)(a2 + 200) = v11;
  *(_OWORD *)(a2 + 184) = v10;
  *(_OWORD *)(a2 + 168) = v9;
  *(_OWORD *)(a2 + 72) = *(_OWORD *)(a1 + 72);
  return a2;
}

BOOL sub_10060E550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10)
{
  return sub_10060EDF8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)&type metadata for Int, &qword_101677350);
}

uint64_t sub_10060E598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10)
{
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  type metadata accessor for UUID();
  sub_1005057FC((uint64_t *)&unk_101677300);
  String.init<A>(describing:)();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = sub_10050BF48(0, (unint64_t *)&qword_101673918);
  *(void *)(inited + 64) = sub_10062E0F4((unint64_t *)&qword_101677140, (unint64_t *)&qword_101673918);
  *(void *)(inited + 32) = v14;
  sub_100629DC8((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
  if ((v15 & 1) == 0)
  {
    sub_10086134C(a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1005598CC(inited, a4, a5, a6, a7, a8, a9, a10);
  }
  swift_bridgeObjectRelease();
  return v15 & 1;
}

uint64_t sub_10060E790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10)
{
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
  sub_1005057FC((uint64_t *)&unk_101677130);
  String.init<A>(describing:)();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = sub_10050BF48(0, (unint64_t *)&qword_101673918);
  *(void *)(inited + 64) = sub_10062E0F4((unint64_t *)&qword_101677140, (unint64_t *)&qword_101673918);
  *(void *)(inited + 32) = v14;
  char v15 = static NSObject.== infix(_:_:)();
  if ((v15 & 1) == 0)
  {
    sub_10086134C(a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1005598CC(inited, a4, a5, a6, a7, a8, a9, a10);
  }
  swift_bridgeObjectRelease();
  return v15 & 1;
}

uint64_t sub_10060E94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10)
{
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  sub_1005057FC(&qword_101677338);
  String.init<A>(describing:)();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = sub_10050BF48(0, (unint64_t *)&qword_101673918);
  *(void *)(inited + 64) = sub_10062E0F4((unint64_t *)&qword_101677140, (unint64_t *)&qword_101673918);
  *(void *)(inited + 32) = v17;
  char v18 = sub_100DDC744(a1, a2);
  if ((v18 & 1) == 0)
  {
    sub_10086134C(a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1005598CC(inited, a4, a5, a6, a7, a8, a9, a10);
  }
  swift_bridgeObjectRelease();
  return v18 & 1;
}

uint64_t sub_10060EAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10)
{
  return sub_10060EB98(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, &qword_101677340, (uint64_t)PKToolPicker_ptr, &qword_101677348) & 1;
}

uint64_t sub_10060EB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10)
{
  return sub_10060EB98(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, (unint64_t *)&qword_1016725F0, (uint64_t)UIView_ptr, &qword_101677330) & 1;
}

uint64_t sub_10060EB98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t *a13)
{
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  sub_10050BF48(0, a11);
  sub_1005057FC(a13);
  String.init<A>(describing:)();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = sub_10050BF48(0, (unint64_t *)&qword_101673918);
  *(void *)(inited + 64) = sub_10062E0F4((unint64_t *)&qword_101677140, (unint64_t *)&qword_101673918);
  *(void *)(inited + 32) = v17;
  char v18 = static NSObject.== infix(_:_:)();
  if ((v18 & 1) == 0)
  {
    sub_10086134C(a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1005598CC(inited, a4, a5, a6, a7, a8, a9, a10);
  }
  swift_bridgeObjectRelease();
  return v18 & 1;
}

uint64_t sub_10060ED60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10)
{
  return sub_10060EB98(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, &qword_101675990, (uint64_t)off_1014C0E88, (uint64_t *)&unk_101677320) & 1;
}

BOOL sub_10060EDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10)
{
  return sub_10060EDF8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)&type metadata for UInt, (uint64_t *)&unk_101677310);
}

BOOL sub_10060EDF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  sub_1005057FC(a12);
  String.init<A>(describing:)();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = sub_10050BF48(0, (unint64_t *)&qword_101673918);
  *(void *)(inited + 64) = sub_10062E0F4((unint64_t *)&qword_101677140, (unint64_t *)&qword_101673918);
  *(void *)(inited + 32) = v19;
  if (a1 != a2)
  {
    sub_10086134C(a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1005598CC(inited, a4, a5, a6, a7, a8, a9, a10);
  }
  swift_bridgeObjectRelease();
  return a1 == a2;
}

NSString sub_10060EFA4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A160 = (uint64_t)result;
  return result;
}

unint64_t sub_10060EFDC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    unint64_t result = 0xD000000000000011;
    switch(a1)
    {
      case 1:
        unint64_t result = 0xD00000000000001ALL;
        break;
      case 2:
        unint64_t result = 0xD000000000000018;
        break;
      case 3:
        unint64_t result = 0xD00000000000001BLL;
        break;
      case 4:
        unint64_t result = 0xD000000000000010;
        break;
      default:
        return result;
    }
  }
  else
  {
    v4._countAndFlagsBits = 0x5F6D6F74737563;
    v4._object = (void *)0xE700000000000000;
    String.append(_:)(v4);
    type metadata accessor for CGSize(0);
    _print_unlocked<A, B>(_:_:)();
    return 0;
  }
  return result;
}

unint64_t sub_10060F110(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x6D6F74737563;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10060F1D4(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v52 = a4;
  uint64_t v48 = a3;
  uint64_t v53 = a2;
  uint64_t v5 = sub_1005057FC(&qword_101677220);
  uint64_t v50 = *(void *)(v5 - 8);
  uint64_t v51 = v5;
  __chkstk_darwin(v5, v6);
  long long v49 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101677228);
  uint64_t v46 = *(void *)(v8 - 8);
  uint64_t v47 = v8;
  __chkstk_darwin(v8, v9);
  double v45 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_101677230);
  uint64_t v43 = *(void *)(v11 - 8);
  uint64_t v44 = v11;
  __chkstk_darwin(v11, v12);
  long long v42 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_101677238);
  uint64_t v40 = *(void *)(v14 - 8);
  uint64_t v41 = v14;
  __chkstk_darwin(v14, v15);
  long long v39 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC(&qword_101677240);
  uint64_t v37 = *(void *)(v17 - 8);
  uint64_t v38 = v17;
  __chkstk_darwin(v17, v18);
  char v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1005057FC(&qword_101677248);
  uint64_t v36 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v22);
  long long v24 = (char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1005057FC(&qword_101677250);
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25, v27);
  long long v29 = (char *)&v35 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_10062E288();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if (v52)
  {
    switch(v53)
    {
      case 1:
        LOBYTE(v54) = 1;
        sub_10062E42C();
        KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        uint64_t v34 = v37;
        uint64_t v33 = v38;
        goto LABEL_9;
      case 2:
        LOBYTE(v54) = 2;
        sub_10062E3D8();
        char v20 = v39;
        KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        uint64_t v34 = v40;
        uint64_t v33 = v41;
        goto LABEL_9;
      case 3:
        LOBYTE(v54) = 3;
        sub_10062E384();
        char v20 = v42;
        KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        uint64_t v34 = v43;
        uint64_t v33 = v44;
        goto LABEL_9;
      case 4:
        LOBYTE(v54) = 4;
        sub_10062E330();
        char v20 = v45;
        KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        uint64_t v34 = v46;
        uint64_t v33 = v47;
LABEL_9:
        (*(void (**)(char *, uint64_t))(v34 + 8))(v20, v33);
        break;
      default:
        LOBYTE(v54) = 0;
        sub_10062E480();
        KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v24, v21);
        break;
    }
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v29, v25);
  }
  else
  {
    LOBYTE(v54) = 5;
    sub_10062E2DC();
    long long v30 = v49;
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    uint64_t v54 = v53;
    uint64_t v55 = v48;
    type metadata accessor for CGSize(0);
    sub_100629DC8(&qword_101677258, type metadata accessor for CGSize);
    uint64_t v31 = v51;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v30, v31);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v29, v25);
  }
}

Swift::Int sub_10060F840(Swift::UInt64 a1, Swift::UInt64 a2, char a3)
{
  Hasher.init(_seed:)();
  if (a3)
  {
    a1 = qword_101183F58[a1];
    a2 = a1;
  }
  if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v6 = a1;
  }
  else {
    Swift::UInt64 v6 = 0;
  }
  Hasher._combine(_:)(v6);
  if ((a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v7 = a2;
  }
  else {
    Swift::UInt64 v7 = 0;
  }
  Hasher._combine(_:)(v7);
  return Hasher._finalize()();
}

Swift::Int sub_10060F8C0(Swift::UInt64 a1, Swift::UInt64 a2, char a3, double a4)
{
  Hasher.init(_seed:)();
  if (a3)
  {
    a1 = qword_101183F58[a1];
    a2 = a1;
  }
  if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v8 = a1;
  }
  else {
    Swift::UInt64 v8 = 0;
  }
  Hasher._combine(_:)(v8);
  if ((a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v9 = a2;
  }
  else {
    Swift::UInt64 v9 = 0;
  }
  Hasher._combine(_:)(v9);
  if ((*(void *)&a4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v10 = *(void *)&a4;
  }
  else {
    Swift::UInt64 v10 = 0;
  }
  Hasher._combine(_:)(v10);
  return Hasher._finalize()();
}

uint64_t sub_10060F960()
{
  return 0;
}

uint64_t sub_10060F96C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_10060F99C(uint64_t a1)
{
  unint64_t v2 = sub_10062E384();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10060F9D8(uint64_t a1)
{
  unint64_t v2 = sub_10062E384();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10060FA14(uint64_t a1)
{
  unint64_t v2 = sub_10062E480();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10060FA50(uint64_t a1)
{
  unint64_t v2 = sub_10062E480();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_10060FA8C()
{
  return sub_10060F110(*v0);
}

uint64_t sub_10060FA94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10062A4E0(a1, a2);
  *a3 = result;
  return result;
}

void sub_10060FABC(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_10060FAC8(uint64_t a1)
{
  unint64_t v2 = sub_10062E288();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10060FB04(uint64_t a1)
{
  unint64_t v2 = sub_10062E288();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10060FB4C(uint64_t a1)
{
  unint64_t v2 = sub_10062E2DC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10060FB88(uint64_t a1)
{
  unint64_t v2 = sub_10062E2DC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10060FBC4(uint64_t a1)
{
  unint64_t v2 = sub_10062E3D8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10060FC00(uint64_t a1)
{
  unint64_t v2 = sub_10062E3D8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10060FC3C(uint64_t a1)
{
  unint64_t v2 = sub_10062E42C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10060FC78(uint64_t a1)
{
  unint64_t v2 = sub_10062E42C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10060FCB4(uint64_t a1)
{
  unint64_t v2 = sub_10062E330();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10060FCF0(uint64_t a1)
{
  unint64_t v2 = sub_10062E330();

  return CodingKey.debugDescription.getter(a1, v2);
}

BOOL sub_10060FD2C(uint64_t a1, uint64_t a2)
{
  return sub_100627FB0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

Swift::Int sub_10060FD48()
{
  return sub_10060F840(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

void sub_10060FD54()
{
  Swift::UInt64 v1 = *(void *)v0;
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    unint64_t v2 = &qword_101183F58[v1];
    Swift::UInt64 v1 = *v2;
  }
  else
  {
    unint64_t v2 = (Swift::UInt64 *)(v0 + 8);
  }
  Swift::UInt64 v3 = *v2;
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = v1;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  Hasher._combine(_:)(v4);
  if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = v3;
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  Hasher._combine(_:)(v5);
}

Swift::Int sub_10060FDBC()
{
  Swift::UInt64 v2 = *(void *)v0;
  Swift::UInt64 v1 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  Hasher.init(_seed:)();
  if (v3 == 1)
  {
    Swift::UInt64 v2 = qword_101183F58[v2];
    Swift::UInt64 v1 = v2;
  }
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = v2;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  Hasher._combine(_:)(v4);
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = v1;
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  Hasher._combine(_:)(v5);
  return Hasher._finalize()();
}

uint64_t sub_10060FE38@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10062A72C(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_10060FE6C(void *a1)
{
  return sub_10060F1D4(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

Swift::Int sub_10060FE8C()
{
  return sub_10060F8C0(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16), *(double *)(v0 + 24));
}

void sub_10060FEA4()
{
  Swift::UInt64 v1 = *(void *)v0;
  Swift::UInt64 v2 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    int v3 = &qword_101183F58[v1];
    Swift::UInt64 v1 = *v3;
  }
  else
  {
    int v3 = (Swift::UInt64 *)(v0 + 8);
  }
  Swift::UInt64 v4 = *v3;
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = v1;
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  Hasher._combine(_:)(v5);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v6 = v4;
  }
  else {
    Swift::UInt64 v6 = 0;
  }
  Hasher._combine(_:)(v6);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v7 = v2;
  }
  else {
    Swift::UInt64 v7 = 0;
  }
  Hasher._combine(_:)(v7);
}

Swift::Int sub_10060FF24()
{
  Swift::UInt64 v2 = *(void *)v0;
  Swift::UInt64 v1 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  Swift::UInt64 v4 = *(void *)(v0 + 24);
  Hasher.init(_seed:)();
  if (v3 == 1)
  {
    Swift::UInt64 v2 = qword_101183F58[v2];
    Swift::UInt64 v1 = v2;
  }
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = v2;
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  Hasher._combine(_:)(v5);
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v6 = v1;
  }
  else {
    Swift::UInt64 v6 = 0;
  }
  Hasher._combine(_:)(v6);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v7 = v4;
  }
  else {
    Swift::UInt64 v7 = 0;
  }
  Hasher._combine(_:)(v7);
  return Hasher._finalize()();
}

BOOL sub_10060FFBC(uint64_t a1, uint64_t a2)
{
  return sub_100627F5C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16), *(double *)(a1 + 24), *(double *)(a2 + 24));
}

uint64_t sub_10060FFE8()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  Swift::UInt64 v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6 - 8, v7);
  Swift::UInt64 v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100629CE0(v0, (uint64_t)v17, type metadata accessor for CRLBoardPreviewImageCache.Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10062DB08((uint64_t)v17, (uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
      sub_100629DC8((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
      dispatch thunk of Hashable.hash(into:)();
      type metadata accessor for CRLBoardIdentifierStorage(0);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v21 = &v17[*(int *)(sub_1005057FC(&qword_10169FA80) + 48)];
      sub_10062DB08((uint64_t)v17, (uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v21, v1);
      sub_100629DC8((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
      dispatch thunk of Hashable.hash(into:)();
      type metadata accessor for CRLBoardIdentifierStorage(0);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      dispatch thunk of Hashable.hash(into:)();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    }
    uint64_t v19 = type metadata accessor for CRLBoardIdentifier;
    uint64_t v20 = (uint64_t)v9;
  }
  else
  {
    sub_10062DB08((uint64_t)v17, (uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    sub_100DDAA58();
    uint64_t v19 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
    uint64_t v20 = (uint64_t)v13;
  }
  return sub_100629D48(v20, v19);
}

unint64_t sub_1006103B4()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  Swift::UInt64 v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6 - 8, v7);
  Swift::UInt64 v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100629CE0(v0, (uint64_t)v17, type metadata accessor for CRLBoardPreviewImageCache.Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10062DB08((uint64_t)v17, (uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
      unint64_t v29 = 0;
      unint64_t v30 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      unint64_t v29 = 0xD000000000000012;
      unint64_t v30 = 0x8000000101241170;
      v19._countAndFlagsBits = sub_100753038();
      String.append(_:)(v19);
      swift_bridgeObjectRelease();
      unint64_t v20 = v29;
    }
    else
    {
      long long v24 = &v17[*(int *)(sub_1005057FC(&qword_10169FA80) + 48)];
      sub_10062DB08((uint64_t)v17, (uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v24, v1);
      unint64_t v29 = 0;
      unint64_t v30 = 0xE000000000000000;
      _StringGuts.grow(_:)(32);
      swift_bridgeObjectRelease();
      unint64_t v29 = 0xD000000000000012;
      unint64_t v30 = 0x8000000101241150;
      sub_100629DC8(&qword_101677460, (void (*)(uint64_t))&type metadata accessor for UUID);
      v25._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v25);
      swift_bridgeObjectRelease();
      v26._countAndFlagsBits = 0x72616F62206E6920;
      v26._object = (void *)0xEA00000000002064;
      String.append(_:)(v26);
      v27._countAndFlagsBits = sub_100753038();
      String.append(_:)(v27);
      swift_bridgeObjectRelease();
      unint64_t v20 = v29;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    }
    uint64_t v22 = type metadata accessor for CRLBoardIdentifier;
    uint64_t v23 = (uint64_t)v9;
  }
  else
  {
    sub_10062DB08((uint64_t)v17, (uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    unint64_t v29 = 0x203A7265646C6F46;
    unint64_t v30 = 0xE800000000000000;
    v21._countAndFlagsBits = sub_100DD4C48();
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    unint64_t v20 = v29;
    uint64_t v22 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
    uint64_t v23 = (uint64_t)v13;
  }
  sub_100629D48(v23, v22);
  return v20;
}

uint64_t sub_1006107C0(void *a1)
{
  uint64_t v65 = sub_1005057FC(&qword_1016772C0);
  uint64_t v58 = *(void *)(v65 - 8);
  __chkstk_darwin(v65, v2);
  CGFloat v68 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v66 = *(void *)(v4 - 8);
  uint64_t v67 = v4;
  __chkstk_darwin(v4, v5);
  CGFloat v70 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1005057FC(&qword_1016772C8);
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin(v64, v7);
  long long v62 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v71, v9);
  uint64_t v69 = (uint64_t)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v61 = (uint64_t)&v58 - v13;
  uint64_t v60 = sub_1005057FC(&qword_1016772D0);
  uint64_t v59 = *(void *)(v60 - 8);
  __chkstk_darwin(v60, v14);
  uint64_t v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v17, v18);
  unint64_t v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v21, v22);
  long long v24 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_1005057FC(&qword_1016772D8);
  uint64_t v72 = *(void *)(v76 - 8);
  __chkstk_darwin(v76, v25);
  Swift::String v27 = (char *)&v58 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_10062E4D4();
  long long v74 = v27;
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_100629CE0(v75, (uint64_t)v24, type metadata accessor for CRLBoardPreviewImageCache.Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v29 = v61;
      sub_10062DB08((uint64_t)v24, v61, type metadata accessor for CRLBoardIdentifier);
      LOBYTE(v77) = 1;
      sub_10062E57C();
      unint64_t v30 = v62;
      uint64_t v31 = v76;
      double v32 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      sub_100629DC8((unint64_t *)&unk_1016772E0, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifier);
      uint64_t v33 = v64;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v30, v33);
      sub_100629D48(v29, type metadata accessor for CRLBoardIdentifier);
      return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v32, v31);
    }
    else
    {
      uint64_t v38 = sub_1005057FC(&qword_10169FA80);
      long long v39 = &v24[*(int *)(v38 + 48)];
      uint64_t v40 = &v24[*(int *)(v38 + 64)];
      uint64_t v41 = *(void *)v40;
      uint64_t v42 = *((void *)v40 + 1);
      uint64_t v43 = *((void *)v40 + 2);
      uint64_t v44 = *((void *)v40 + 3);
      uint64_t v45 = v69;
      sub_10062DB08((uint64_t)v24, v69, type metadata accessor for CRLBoardIdentifier);
      uint64_t v46 = v66;
      uint64_t v47 = v67;
      (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v70, v39, v67);
      LOBYTE(v77) = 2;
      sub_10062E528();
      uint64_t v48 = v68;
      uint64_t v49 = v76;
      uint64_t v50 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      LOBYTE(v77) = 0;
      sub_100629DC8((unint64_t *)&unk_1016772E0, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifier);
      uint64_t v51 = v65;
      uint64_t v52 = v73;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      if (v52)
      {
        (*(void (**)(char *, uint64_t))(v58 + 8))(v48, v51);
        (*(void (**)(char *, uint64_t))(v46 + 8))(v70, v47);
        uint64_t v53 = v45;
      }
      else
      {
        LOBYTE(v77) = 1;
        sub_100629DC8(&qword_101671E70, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v54 = v70;
        uint64_t v55 = v51;
        KeyedEncodingContainer.encode<A>(_:forKey:)();
        long long v56 = v54;
        uint64_t v77 = v41;
        uint64_t v78 = v42;
        uint64_t v79 = v43;
        uint64_t v80 = v44;
        char v81 = 2;
        type metadata accessor for CGRect(0);
        sub_100629DC8(&qword_1016772F0, type metadata accessor for CGRect);
        CGFloat v57 = v68;
        KeyedEncodingContainer.encode<A>(_:forKey:)();
        uint64_t v49 = v76;
        (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v55);
        (*(void (**)(char *, uint64_t))(v46 + 8))(v56, v47);
        uint64_t v53 = v69;
      }
      sub_100629D48(v53, type metadata accessor for CRLBoardIdentifier);
      return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v50, v49);
    }
  }
  else
  {
    sub_10062DB08((uint64_t)v24, (uint64_t)v20, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    LOBYTE(v77) = 0;
    sub_10062E5D0();
    uint64_t v35 = v76;
    uint64_t v36 = v74;
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    sub_100629DC8(&qword_1016772F8, (void (*)(uint64_t))type metadata accessor for CRLBoardLibraryViewModel.Folder);
    uint64_t v37 = v60;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v16, v37);
    sub_100629D48((uint64_t)v20, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v36, v35);
  }
}

uint64_t sub_10061115C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v3 = sub_1005057FC(&qword_101677260);
  uint64_t v61 = *(void *)(v3 - 8);
  uint64_t v62 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v71 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_101677268);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v65 = v6;
  uint64_t v66 = v7;
  __chkstk_darwin(v6, v8);
  CGFloat v70 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_101677270);
  uint64_t v63 = *(void *)(v10 - 8);
  uint64_t v64 = v10;
  __chkstk_darwin(v10, v11);
  CGFloat v68 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1005057FC(&qword_101677278);
  uint64_t v67 = *(void *)(v69 - 8);
  __chkstk_darwin(v69, v13);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v56 - v22;
  __chkstk_darwin(v24, v25);
  Swift::String v27 = (char *)&v56 - v26;
  __chkstk_darwin(v28, v29);
  uint64_t v31 = (char *)&v56 - v30;
  uint64_t v32 = a1[3];
  uint64_t v72 = a1;
  sub_10050F848(a1, v32);
  sub_10062E4D4();
  uint64_t v33 = v73;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v33) {
    goto LABEL_10;
  }
  CGFloat v57 = v23;
  uint64_t v58 = v27;
  uint64_t v59 = v19;
  uint64_t v35 = v70;
  uint64_t v34 = v71;
  long long v56 = v31;
  uint64_t v73 = v16;
  uint64_t v36 = v68;
  uint64_t v37 = v69;
  uint64_t v38 = KeyedDecodingContainer.allKeys.getter();
  long long v39 = (char *)v38;
  if (*(void *)(v38 + 16) != 1)
  {
    uint64_t v44 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v45 = v15;
    uint64_t v47 = v46;
    sub_1005057FC(&qword_1016771E0);
    *uint64_t v47 = v73;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v44 - 8) + 104))(v47, enum case for DecodingError.typeMismatch(_:), v44);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v45, v37);
LABEL_10:
    uint64_t v42 = (uint64_t)v72;
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v42);
  }
  if (*(unsigned char *)(v38 + 32))
  {
    if (*(unsigned char *)(v38 + 32) == 1)
    {
      char v75 = 1;
      sub_10062E57C();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      type metadata accessor for CRLBoardIdentifier(0);
      CGFloat v68 = v39;
      sub_100629DC8((unint64_t *)&unk_101677290, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifier);
      uint64_t v40 = (uint64_t)v57;
      uint64_t v41 = v65;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v35, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v15, v37);
      uint64_t v42 = (uint64_t)v72;
      swift_storeEnumTagMultiPayload();
      uint64_t v43 = v40;
    }
    else
    {
      char v79 = 2;
      sub_10062E528();
      uint64_t v51 = v34;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      CGFloat v68 = v39;
      type metadata accessor for CRLBoardIdentifier(0);
      char v78 = 0;
      sub_100629DC8((unint64_t *)&unk_101677290, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifier);
      uint64_t v43 = (uint64_t)v59;
      uint64_t v53 = v62;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      CGFloat v70 = v15;
      uint64_t v54 = v51;
      sub_1005057FC(&qword_10169FA80);
      type metadata accessor for UUID();
      char v77 = 1;
      sub_100629DC8(&qword_101671E58, (void (*)(uint64_t))&type metadata accessor for UUID);
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      type metadata accessor for CGRect(0);
      char v76 = 2;
      sub_100629DC8(&qword_1016772A0, type metadata accessor for CGRect);
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v55 = v67;
      (*(void (**)(char *, uint64_t))(v61 + 8))(v54, v53);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v70, v37);
      swift_storeEnumTagMultiPayload();
      uint64_t v42 = (uint64_t)v72;
    }
  }
  else
  {
    char v74 = 0;
    sub_10062E5D0();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
    sub_100629DC8(&qword_1016772B8, (void (*)(uint64_t))type metadata accessor for CRLBoardLibraryViewModel.Folder);
    uint64_t v43 = (uint64_t)v58;
    uint64_t v48 = v64;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v36, v48);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v15, v37);
    uint64_t v42 = (uint64_t)v72;
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v49 = v60;
  uint64_t v50 = (uint64_t)v56;
  sub_10062DB08(v43, (uint64_t)v56, type metadata accessor for CRLBoardPreviewImageCache.Item);
  sub_10062DB08(v50, v49, type metadata accessor for CRLBoardPreviewImageCache.Item);
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v42);
}

uint64_t sub_100611B2C()
{
  return 0x6564496472616F62;
}

uint64_t sub_100611B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6564496472616F62 && a2 == 0xEF7265696669746ELL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_100611C0C(uint64_t a1)
{
  unint64_t v2 = sub_10062E57C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100611C48(uint64_t a1)
{
  unint64_t v2 = sub_10062E57C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100611C84()
{
  uint64_t v1 = 0x6472616F62;
  if (*v0 != 1) {
    uint64_t v1 = 0x656E656373;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7265646C6F66;
  }
}

uint64_t sub_100611CD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10062B0A0(a1, a2);
  *a3 = result;
  return result;
}

void sub_100611CFC(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_100611D08(uint64_t a1)
{
  unint64_t v2 = sub_10062E4D4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100611D44(uint64_t a1)
{
  unint64_t v2 = sub_10062E4D4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100611D80(uint64_t a1)
{
  unint64_t v2 = sub_10062E5D0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100611DBC(uint64_t a1)
{
  unint64_t v2 = sub_10062E5D0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100611DF8()
{
  unint64_t v1 = 0x4449656E656373;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000011;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6564496472616F62;
  }
}

uint64_t sub_100611E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10062B1E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100611E8C(uint64_t a1)
{
  unint64_t v2 = sub_10062E528();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100611EC8(uint64_t a1)
{
  unint64_t v2 = sub_10062E528();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100611F04@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10061115C(a1, a2);
}

uint64_t sub_100611F1C(void *a1)
{
  return sub_1006107C0(a1);
}

Swift::Int sub_100611F34()
{
  return Hasher._finalize()();
}

Swift::Int sub_100611F78()
{
  return Hasher._finalize()();
}

BOOL sub_100611FB8(uint64_t a1)
{
  swift_getObjectType();
  sub_100522E9C(a1, (uint64_t)v7, &qword_101672BF0);
  if (v8)
  {
    if (swift_dynamicCast())
    {
      if ((sub_100627FFC(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item, (uint64_t)&v6[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item]) & 1) != 0&& sub_100627FB0(*(void *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass), *(void *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 8), *(unsigned char *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 16), *(void *)&v6[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass], *(void *)&v6[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 8], v6[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 16]))
      {
        double v3 = *(double *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale);
        double v4 = *(double *)&v6[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale];

        return v3 == v4;
      }
    }
  }
  else
  {
    sub_100522F00((uint64_t)v7, &qword_101672BF0);
  }
  return 0;
}

Swift::Int sub_100612170()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = &v30[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = &v30[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = &v30[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Hasher.init()();
  sub_100629CE0(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item, (uint64_t)v18, type metadata accessor for CRLBoardPreviewImageCache.Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10062DB08((uint64_t)v18, (uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
      sub_100629DC8((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
      dispatch thunk of Hashable.hash(into:)();
      type metadata accessor for CRLBoardIdentifierStorage(0);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = &v18[*(int *)(sub_1005057FC(&qword_10169FA80) + 48)];
      sub_10062DB08((uint64_t)v18, (uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 32))(v6, v22, v2);
      sub_100629DC8((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
      dispatch thunk of Hashable.hash(into:)();
      type metadata accessor for CRLBoardIdentifierStorage(0);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      dispatch thunk of Hashable.hash(into:)();
      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v6, v2);
    }
    uint64_t v20 = type metadata accessor for CRLBoardIdentifier;
    uint64_t v21 = (uint64_t)v10;
  }
  else
  {
    sub_10062DB08((uint64_t)v18, (uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    sub_100DDAA58();
    uint64_t v20 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
    uint64_t v21 = (uint64_t)v14;
  }
  sub_100629D48(v21, v20);
  Swift::UInt64 v23 = *(void *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 16) == 1)
  {
    uint64_t v24 = &qword_101183F58[v23];
    Swift::UInt64 v23 = *v24;
  }
  else
  {
    uint64_t v24 = (Swift::UInt64 *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 8);
  }
  Swift::UInt64 v25 = *v24;
  if ((v23 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v26 = v23;
  }
  else {
    Swift::UInt64 v26 = 0;
  }
  Hasher._combine(_:)(v26);
  if ((v25 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v27 = v25;
  }
  else {
    Swift::UInt64 v27 = 0;
  }
  Hasher._combine(_:)(v27);
  if ((*(void *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v28 = *(void *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale);
  }
  else {
    Swift::UInt64 v28 = 0;
  }
  Hasher._combine(_:)(v28);
  long long v37 = v32;
  long long v38 = v33;
  uint64_t v39 = v34;
  long long v35 = *(_OWORD *)&v30[8];
  long long v36 = v31;
  return Hasher.finalize()();
}

uint64_t sub_100612640()
{
  v0._countAndFlagsBits = 60;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  _print_unlocked<A, B>(_:_:)();
  v1._countAndFlagsBits = 32;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  _print_unlocked<A, B>(_:_:)();
  v2._countAndFlagsBits = 32;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  v3._countAndFlagsBits = Double.description.getter();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 62;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return 0;
}

uint64_t sub_100612754()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100629CE0(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item, (uint64_t)v18, type metadata accessor for CRLBoardPreviewImageCache.Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10062DB08((uint64_t)v18, (uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
      uint64_t v72 = UUID.uuidString.getter();
      uint64_t v73 = v20;
      swift_bridgeObjectRetain();
      v21._countAndFlagsBits = 58;
      v21._object = (void *)0xE100000000000000;
      String.append(_:)(v21);
      swift_bridgeObjectRelease();
      uint64_t v22 = v72;
      uint64_t v23 = v73;
      uint64_t v24 = (uint64_t *)&v10[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
      uint64_t v25 = *v24;
      Swift::UInt64 v26 = (void *)v24[1];
      uint64_t v72 = v22;
      uint64_t v73 = v23;
      swift_bridgeObjectRetain();
      v27._countAndFlagsBits = v25;
      v27._object = v26;
      String.append(_:)(v27);
      swift_bridgeObjectRelease();
      uint64_t v70 = 58;
      unint64_t v71 = 0xE100000000000000;
      uint64_t v68 = 35;
      unint64_t v69 = 0xE100000000000000;
      sub_10052E310();
      uint64_t v28 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      uint64_t v30 = v29;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v34 = &v18[*(int *)(sub_1005057FC(&qword_10169FA80) + 48)];
      sub_10062DB08((uint64_t)v18, (uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v34, v2);
      uint64_t v72 = UUID.uuidString.getter();
      uint64_t v73 = v35;
      swift_bridgeObjectRetain();
      v36._countAndFlagsBits = 58;
      v36._object = (void *)0xE100000000000000;
      String.append(_:)(v36);
      swift_bridgeObjectRelease();
      uint64_t v37 = v72;
      uint64_t v38 = v73;
      uint64_t v39 = (uint64_t *)&v10[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
      uint64_t v40 = *v39;
      uint64_t v41 = (void *)v39[1];
      uint64_t v72 = v37;
      uint64_t v73 = v38;
      swift_bridgeObjectRetain();
      v42._countAndFlagsBits = v40;
      v42._object = v41;
      String.append(_:)(v42);
      swift_bridgeObjectRelease();
      uint64_t v70 = 58;
      unint64_t v71 = 0xE100000000000000;
      uint64_t v68 = 35;
      unint64_t v69 = 0xE100000000000000;
      sub_10052E310();
      uint64_t v43 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      uint64_t v45 = v44;
      swift_bridgeObjectRelease();
      uint64_t v72 = v43;
      uint64_t v73 = v45;
      swift_bridgeObjectRetain();
      v46._countAndFlagsBits = 35;
      v46._object = (void *)0xE100000000000000;
      String.append(_:)(v46);
      swift_bridgeObjectRelease();
      uint64_t v48 = v72;
      uint64_t v47 = v73;
      uint64_t v49 = UUID.uuidString.getter();
      uint64_t v51 = v50;
      uint64_t v72 = v48;
      uint64_t v73 = v47;
      swift_bridgeObjectRetain();
      v52._countAndFlagsBits = v49;
      v52._object = v51;
      String.append(_:)(v52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = v72;
      uint64_t v30 = v73;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    }
    long long v32 = type metadata accessor for CRLBoardIdentifier;
    uint64_t v33 = (uint64_t)v10;
  }
  else
  {
    sub_10062DB08((uint64_t)v18, (uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    uint64_t v28 = sub_100DD4C48();
    uint64_t v30 = v31;
    long long v32 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
    uint64_t v33 = (uint64_t)v14;
  }
  sub_100629D48(v33, v32);
  sub_100407E0C(*(double *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale), 0.01);
  uint64_t v72 = v28;
  uint64_t v73 = v30;
  swift_bridgeObjectRetain();
  v53._countAndFlagsBits = 95;
  v53._object = (void *)0xE100000000000000;
  String.append(_:)(v53);
  swift_bridgeObjectRelease();
  uint64_t v54 = v72;
  uint64_t v55 = v73;
  unint64_t v56 = sub_10060EFDC(*(void *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass), *(void *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 8), *(unsigned char *)(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 16));
  uint64_t v58 = v57;
  uint64_t v72 = v54;
  uint64_t v73 = v55;
  swift_bridgeObjectRetain();
  v59._countAndFlagsBits = v56;
  v59._object = v58;
  String.append(_:)(v59);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v60._countAndFlagsBits = 95;
  v60._object = (void *)0xE100000000000000;
  String.append(_:)(v60);
  swift_bridgeObjectRelease();
  uint64_t v62 = v72;
  uint64_t v61 = v73;
  uint64_t v63 = Double.description.getter();
  uint64_t v65 = v64;
  uint64_t v72 = v62;
  uint64_t v73 = v61;
  swift_bridgeObjectRetain();
  v66._countAndFlagsBits = v63;
  v66._object = v65;
  String.append(_:)(v66);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v72;
}

uint64_t sub_100612D30()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [self defaultManager];
  URL._bridgeToObjectiveC()(v7);
  uint64_t v9 = v8;
  unsigned int v10 = [v6 crl_directoryExistsAt:v8];

  if (v10)
  {
    uint64_t v11 = v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item;
    sub_100629CE0(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item, (uint64_t)v5, type metadata accessor for CRLBoardPreviewImageCache.Item);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_100629D48((uint64_t)v5, type metadata accessor for CRLBoardIdentifier);
      sub_100612754();
      URL.appendingPathComponent(_:isDirectory:)();
      return swift_bridgeObjectRelease();
    }
    sub_100629D48((uint64_t)v5, type metadata accessor for CRLBoardPreviewImageCache.Item);
    type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
    sub_100629DC8(&qword_101677088, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCache.CacheError);
    swift_allocError();
    sub_100629CE0(v11, v13, type metadata accessor for CRLBoardPreviewImageCache.Item);
  }
  else
  {
    type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
    sub_100629DC8(&qword_101677088, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCache.CacheError);
    swift_allocError();
  }
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_100612FBC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10094E444(*a1, *a2);
}

Swift::Int sub_100612FC8()
{
  return Hasher._finalize()();
}

uint64_t sub_100613074()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10061310C()
{
  return Hasher._finalize()();
}

unint64_t sub_1006131B4@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10062B358(*a1);
  *a2 = result;
  return result;
}

void sub_1006131E4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE900000000000073;
  uint64_t v5 = 0x73616C43657A6973;
  if (v2 != 1)
  {
    uint64_t v5 = 0x73746E65746E6F63;
    unint64_t v4 = 0xED0000656C616353;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1835365481;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_10061324C()
{
  uint64_t v1 = 0x73616C43657A6973;
  if (*v0 != 1) {
    uint64_t v1 = 0x73746E65746E6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1835365481;
  }
}

unint64_t sub_1006132B0@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10062B358(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1006132D8(uint64_t a1)
{
  unint64_t v2 = sub_10062E18C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100613314(uint64_t a1)
{
  unint64_t v2 = sub_10062E18C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100613350(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_101677180);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_10062E18C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v14) = 0;
  type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  sub_100629DC8(&qword_101677188, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCache.Item);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    char v10 = *(unsigned char *)(v3 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 16);
    long long v14 = *(_OWORD *)(v3 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass);
    char v15 = v10;
    char v13 = 1;
    sub_10062E234();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    *(void *)&long long v14 = *(void *)(v3 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale);
    char v13 = 2;
    sub_10060D1D8();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100613578(void *a1)
{
  uint64_t v3 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101677158);
  uint64_t v22 = *(void *)(v9 - 8);
  uint64_t v23 = v9;
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v24 = a1;
  sub_10050F848(a1, v13);
  sub_10062E18C();
  long long v14 = v3;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    uint64_t v21 = ObjectType;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v24);

    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v15 = v22;
    LOBYTE(v27) = 0;
    sub_100629DC8(&qword_101677168, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCache.Item);
    uint64_t v16 = v23;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_10062DB08((uint64_t)v8, (uint64_t)&v14[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item], type metadata accessor for CRLBoardPreviewImageCache.Item);
    char v29 = 1;
    sub_10062E1E0();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    char v18 = v28;
    uint64_t v19 = &v14[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass];
    *(_OWORD *)uint64_t v19 = v27;
    v19[16] = v18;
    char v29 = 2;
    sub_10060D130();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v16);
    uint64_t v20 = (objc_class *)ObjectType;
    *(void *)&v14[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale] = v27;

    v26.receiver = v14;
    v26.super_class = v20;
    uint64_t v21 = [super init];
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v24);
  }
  return v21;
}

uint64_t sub_100613990@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v6 = objc_allocWithZone(v2);
  uint64_t result = sub_100613578(a1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1006139E0(void *a1)
{
  return sub_100613350(a1);
}

uint64_t sub_100613A04(uint64_t a1, unint64_t a2)
{
  swift_defaultActor_initialize();
  *(void *)(v2 + 120) = 0;
  *(unsigned char *)(v2 + 128) = 0x80;
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_10062E138();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  if (v3)
  {
    swift_release();
    sub_100626B64(*(void **)(v2 + 120), *(unsigned char *)(v2 + 128));
    type metadata accessor for CRLBoardPreviewImageCache.CacheEntry();
    swift_defaultActor_destroy();
    sub_100510084(a1, a2);
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_100510084(a1, a2);
    swift_release();
    id v6 = *(void **)(v2 + 120);
    *(void *)(v2 + 112) = v9;
    *(void *)(v2 + 120) = v10;
    unsigned __int8 v7 = *(unsigned char *)(v2 + 128);
    *(unsigned char *)(v2 + 128) = 64;
    sub_100626B64(v6, v7);
  }
  return v2;
}

uint64_t sub_100613B30(uint64_t a1)
{
  v2[16] = a1;
  v2[17] = v1;
  v2[18] = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v2[21] = v3;
  v2[22] = *(void *)(v3 - 8);
  v2[23] = swift_task_alloc();
  return _swift_task_switch(sub_100613C30, v1, 0);
}

uint64_t sub_100613C30()
{
  if (qword_10166FA68 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[17];
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlBoardPreviewImageCache;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  unint64_t v4 = *(void **)(v1 + 112);
  v0[24] = v4;
  id v5 = v2;
  uint64_t v6 = sub_100612640();
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  uint64_t v9 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Saving asset in file storage: %@", 32, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_100612D30();
  uint64_t v11 = v0[19];
  uint64_t v10 = v0[20];
  uint64_t v12 = (uint64_t)v4 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item;
  sub_100629CE0((uint64_t)v4 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item, v10, type metadata accessor for CRLBoardPreviewImageCache.Item);
  sub_100629CE0(v10, v11, type metadata accessor for CRLBoardPreviewImageCache.Item);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = v0[20];
    sub_100629D48(v0[19], type metadata accessor for CRLBoardIdentifier);
    sub_100629D48(v13, type metadata accessor for CRLBoardPreviewImageCache.Item);
    id v14 = v4;
    uint64_t v15 = (void *)swift_task_alloc();
    v0[25] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_100613FFC;
    uint64_t v16 = v0[17];
    v15[4] = v16;
    return _swift_task_switch(sub_100614394, v16, 0);
  }
  else
  {
    uint64_t v18 = v0[22];
    uint64_t v17 = v0[23];
    uint64_t v19 = v0[20];
    uint64_t v20 = v0[21];
    sub_100629D48(v0[19], type metadata accessor for CRLBoardPreviewImageCache.Item);
    sub_100629D48(v19, type metadata accessor for CRLBoardPreviewImageCache.Item);
    type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
    sub_100629DC8(&qword_101677088, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCache.CacheError);
    swift_allocError();
    sub_100629CE0(v12, v21, type metadata accessor for CRLBoardPreviewImageCache.Item);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v20);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }
}

uint64_t sub_100613FFC(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 208) = a1;
  *(void *)(v4 + 216) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 136);
  if (v1) {
    uint64_t v6 = sub_1006142D0;
  }
  else {
    uint64_t v6 = sub_100614130;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100614130()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[27];
  uint64_t v3 = v0[24];
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  v0[14] = v3;
  v0[15] = v1;
  sub_10062EE18();
  uint64_t v4 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  uint64_t v6 = v0[23];
  if (v2)
  {
    uint64_t v7 = (void *)v0[26];
    uint64_t v8 = (void *)v0[24];
    uint64_t v9 = v0[21];
    uint64_t v10 = v0[22];
    swift_errorRelease();

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v6, v9);
  }
  else
  {
    uint64_t v11 = v4;
    unint64_t v12 = v5;
    swift_release();
    Data.write(to:options:)();
    uint64_t v13 = (void *)v0[26];
    id v14 = (void *)v0[24];
    (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
    sub_100510084(v11, v12);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1006142D0()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 176);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100614374()
{
  *(void *)(v1 + 32) = v0;
  return _swift_task_switch(sub_100614394, v0, 0);
}

uint64_t sub_100614394()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void **)(v1 + 120);
  *(void *)(v0 + 40) = v2;
  unsigned int v3 = *(unsigned __int8 *)(v1 + 128);
  *(unsigned char *)(v0 + 25) = v3;
  if (v3 >> 6)
  {
    if (v3 >> 6 == 1)
    {
      if ((v3 & 1) == 0)
      {
        sub_100626B48(v2, 0);
        uint64_t v4 = *(uint64_t (**)(void *))(v0 + 8);
        return v4(v2);
      }
      sub_100626B48(v2, 1);
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"image", 5, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 358, (uint64_t)"The cache entry is still in the .ready state", 44, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"image", 5, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 358);
      type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
      sub_100629DC8(&qword_101677088, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCache.CacheError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
    }
    swift_willThrow();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  else
  {
    swift_retain();
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 48) = v6;
    uint64_t v7 = sub_10050BF48(0, (unint64_t *)&qword_101677090);
    uint64_t v8 = sub_1005057FC(&qword_101672BD0);
    *uint64_t v6 = v0;
    v6[1] = sub_100614648;
    return Task.result.getter(v0 + 16, v2, v7, v8, &protocol self-conformance witness table for Error);
  }
}

uint64_t sub_100614648()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_task_dealloc();
  return _swift_task_switch(sub_100614758, v1, 0);
}

uint64_t sub_100614758()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unsigned __int8 v2 = *(unsigned char *)(v0 + 25);
  uint64_t v3 = *(void **)(v0 + 40);
  if (*(unsigned char *)(v0 + 24))
  {
    swift_willThrow();
    sub_100626B64(v3, v2);
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    sub_100626B64(*(void **)(v0 + 40), *(unsigned char *)(v0 + 25));
    uint64_t v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v6(v1);
  }
}

uint64_t sub_100614834()
{
  sub_100626B64(*(void **)(v0 + 120), *(unsigned char *)(v0 + 128));
  swift_defaultActor_destroy();

  return swift_defaultActor_deallocate();
}

uint64_t sub_100614878(char *a1, char *a2)
{
  return sub_10094E570(*a1, *a2);
}

Swift::Int sub_100614884()
{
  return Hasher._finalize()();
}

uint64_t sub_100614914()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100614990()
{
  return Hasher._finalize()();
}

uint64_t sub_100614A1C@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101503A78, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_100614A7C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x654B70756B6F6F6CLL;
  if (*v1) {
    uint64_t v2 = 0x49656C6261646F63;
  }
  unint64_t v3 = 0xE900000000000079;
  if (*v1) {
    unint64_t v3 = 0xEC0000006567616DLL;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100614AC8()
{
  if (*v0) {
    return 0x49656C6261646F63;
  }
  else {
    return 0x654B70756B6F6F6CLL;
  }
}

uint64_t sub_100614B10@<X0>(Swift::String string@<0:X0, 8:X1>, char *a2@<X8>)
{
  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101503A78, v3);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_100614B74(uint64_t a1)
{
  unint64_t v2 = sub_100631EA0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100614BB0(uint64_t a1)
{
  unint64_t v2 = sub_100631EA0();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100614BEC(void *a1, void *a2, void *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101677660);
  uint64_t v14 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100631EA0();
  id v10 = a3;
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  id v16 = a2;
  char v15 = 0;
  type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
  sub_100629DC8(&qword_101677668, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCache.LookupKey);
  id v11 = a2;
  uint64_t v12 = v13[1];
  KeyedEncodingContainer.encode<A>(_:forKey:)();

  if (v12)
  {

    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v6);
  }
  else
  {
    id v16 = v10;
    char v15 = 1;
    sub_100631F48();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v6);
  }
}

id sub_100614E04@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id result = sub_10062B3A4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

void sub_100614E30(void *a1)
{
  sub_100614BEC(a1, *v1, v1[1]);
}

id sub_100614E4C()
{
  id result = [self whiteColor];
  qword_10171A168 = (uint64_t)result;
  return result;
}

uint64_t sub_100614E88(uint64_t *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a1;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v8 = (void *)result;
    sub_100DC44E4(v6);
    uint64_t v10 = v9;
    if (*(void *)(v9 + 16))
    {
      uint64_t v11 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
      type metadata accessor for MainActor();
      id v12 = v8;
      swift_bridgeObjectRetain();
      uint64_t v13 = static MainActor.shared.getter();
      uint64_t v14 = (void *)swift_allocObject();
      v14[2] = v13;
      v14[3] = &protocol witness table for MainActor;
      v14[4] = v12;
      v14[5] = v10;
      sub_1005912D0((uint64_t)v5, (uint64_t)&unk_101677410, (uint64_t)v14);
      swift_release();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100615024()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = sub_10062C8AC();
    if (v2)
    {
      if (!v2[2] && !*(void *)(v3 + 16) && !*(void *)(v4 + 16))
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
      PassthroughSubject.send(_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
}

void sub_10061510C()
{
  uint64_t v0 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    uint64_t v11 = sub_10062C8AC();
    if (v11)
    {
      uint64_t v14 = v11;
      uint64_t v15 = v12;
      uint64_t v16 = v13;
      sub_100999AB8(v12, (uint64_t)v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100522F00((uint64_t)v3, &qword_101672C30);
        return;
      }
      sub_10062DB08((uint64_t)v3, (uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
      if (qword_10166FA68 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v17 = (void *)static OS_os_log.crlBoardPreviewImageCache;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      id v19 = v17;
      uint64_t v20 = UUID.uuidString.getter();
      uint64_t v22 = v21;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v20;
      *(void *)(inited + 40) = v22;
      uint64_t v23 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v23, (uint64_t)"Received asset download notification for board UUID: %@", 55, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      v24[0] = v14;
      v24[1] = v15;
      v24[2] = v16;
      PassthroughSubject.send(_:)();
      sub_100629D48((uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
}

void sub_10061542C(unint64_t a1)
{
  if (qword_10166FA68 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.crlBoardPreviewImageCache;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = &type metadata for Int;
  *(void *)(inited + 64) = &protocol witness table for Int;
  *(void *)(inited + 32) = a1;
  id v5 = v3;
  uint64_t v6 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v6, (uint64_t)"Thermal state updated to: %d", 28, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  int v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_isPaused);
  if (a1 > 1)
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_isPaused) = 1;
    if ((v7 & 1) == 0) {
      dispatch_suspend(*(dispatch_object_t *)(v1 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_imagerTargetQueue));
    }
  }
  else
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_isPaused) = 0;
    if (v7) {
      dispatch_resume(*(dispatch_object_t *)(v1 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_imagerTargetQueue));
    }
  }
}

void sub_10061559C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = [self processInfo];
    id v3 = [v2 thermalState];

    sub_10061542C((unint64_t)v3);
  }
}

uint64_t sub_100615634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 64) = a4;
  *(void *)(v5 + 72) = a5;
  return _swift_task_switch(sub_100615654, 0, 0);
}

uint64_t sub_100615654()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[10] = Strong;
  if (Strong)
  {
    type metadata accessor for MainActor();
    v0[11] = static MainActor.shared.getter();
    uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_10061577C, v3, v2);
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v0[12] = v4;
    void *v4 = v0;
    v4[1] = sub_10061581C;
    return sub_100ED9908();
  }
}

uint64_t sub_10061577C()
{
  uint64_t v1 = *(void **)(v0 + 80);
  swift_release();
  sub_100615B14();

  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10061581C;
  return sub_100ED9908();
}

uint64_t sub_10061581C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100615918, 0, 0);
}

uint64_t sub_100615918()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[13] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[14] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100615A08;
    return sub_100615DBC(0);
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_100615A08()
{
  uint64_t v1 = *(void **)(*v0 + 104);
  uint64_t v4 = *v0;
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_100615B14()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_boardLibrary];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_didStartUpdating) == 1)
  {
    uint64_t v3 = v0;
    sub_1006237C0((uint64_t)v3);

    return swift_release();
  }
  else
  {
    uint64_t v5 = self;
    uint64_t v6 = v0;
    id v7 = [v5 defaultCenter];
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = 0;
    if (qword_1016700C0 != -1) {
      swift_once();
    }
    uint64_t v9 = qword_10171C6C8;
    id v10 = [self mainQueue];
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = v8;
    v11[3] = v7;
    v11[4] = sub_10062E784;
    v11[5] = v2;
    v15[4] = sub_10062E80C;
    v15[5] = v11;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = *(void *)"";
    v15[2] = sub_1005E5680;
    uint64_t v15[3] = &unk_10150B7E8;
    uint64_t v12 = _Block_copy(v15);
    swift_retain();
    id v13 = v7;
    swift_retain();
    swift_release();
    id v14 = [v13 addObserverForName:v9 object:v1 queue:v10 usingBlock:v12];

    _Block_release(v12);
    swift_beginAccess();
    *(void *)(v8 + 16) = v14;

    swift_release();
    swift_release();
    return swift_unknownObjectRelease();
  }
}

uint64_t sub_100615DBC(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2[5] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  void v2[6] = swift_task_alloc();
  sub_1005057FC(&qword_1016770E8);
  v2[7] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v2[12] = swift_task_alloc();
  v2[13] = type metadata accessor for MainActor();
  v2[14] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[15] = v5;
  v2[16] = v4;
  return _swift_task_switch(sub_100615F7C, v5, v4);
}

uint64_t sub_100615F7C()
{
  v0[17] = *(void *)(v0[3] + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_boardLibrary);
  v0[18] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[19] = v2;
  v0[20] = v1;
  return _swift_task_switch(sub_10061601C, v2, v1);
}

uint64_t sub_10061601C()
{
  uint64_t v1 = v0[17];
  v0[21] = static MainActor.shared.getter();
  uint64_t v2 = swift_task_alloc();
  v0[22] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[23] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100616124;
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_100616124()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 152);
  return _swift_task_switch(sub_100616284, v3, v2);
}

uint64_t sub_100616284()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  return _swift_task_switch(sub_1006162E8, v1, v2);
}

uint64_t sub_1006162E8()
{
  uint64_t v1 = v0[2];
  if (v1)
  {
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  uint64_t v2 = v0[12];
  unint64_t v3 = *(void *)(v0[17] + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
  uint64_t v4 = sub_1005057FC(&qword_101670F30);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 5, v4);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v2;
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)sub_1008E81F4(1, (uint64_t (*)(id))sub_10062DB78, v5, v3);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_100629D48(v2, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  if (v6)
  {
    id v7 = [v6 children];

    type metadata accessor for CRLBoardLibraryViewModelItemNode();
    unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v8 >> 62)) {
      goto LABEL_5;
    }
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    if (v9) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
  unint64_t v8 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
    goto LABEL_23;
  }
LABEL_5:
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v9)
  {
LABEL_6:
    if (v9 < 1)
    {
      __break(1u);
      return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
    }
    uint64_t v10 = 0;
    uint64_t v29 = v0[9];
    unint64_t v30 = v8 & 0xC000000000000001;
    uint64_t v11 = _swiftEmptyArrayStorage;
    unint64_t v32 = v8;
    do
    {
      if (v30) {
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v12 = *(id *)(v8 + 8 * v10 + 32);
      }
      id v13 = v12;
      sub_100629CE0((uint64_t)v12 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, v0[5], type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v14 = v0[7];
        uint64_t v16 = v0[5];
        uint64_t v15 = v0[6];
        sub_1005057FC(&qword_101677100);
        swift_bridgeObjectRelease();
        sub_10062DB08(v16, v15, type metadata accessor for CRLBoardIdentifier);
        sub_10062DB08(v15, v14, type metadata accessor for CRLBoardIdentifier);
        swift_storeEnumTagMultiPayload();
        uint64_t v17 = 0;
      }
      else
      {
        sub_100629D48(v0[5], type metadata accessor for CRLBoardLibraryViewModel.Item);
        uint64_t v17 = 1;
      }
      uint64_t v19 = v0[7];
      uint64_t v18 = v0[8];
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v19, v17, 1, v18);

      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v19, 1, v18) == 1)
      {
        sub_100522F00(v0[7], &qword_1016770E8);
        unint64_t v8 = v32;
      }
      else
      {
        uint64_t v21 = v0[10];
        uint64_t v20 = v0[11];
        sub_10062DB08(v0[7], v20, type metadata accessor for CRLBoardPreviewImageCache.Item);
        sub_10062DB08(v20, v21, type metadata accessor for CRLBoardPreviewImageCache.Item);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = (double *)sub_100F632B8(0, *((void *)v11 + 2) + 1, 1, (unint64_t)v11);
        }
        unint64_t v23 = *((void *)v11 + 2);
        unint64_t v22 = *((void *)v11 + 3);
        unint64_t v8 = v32;
        if (v23 >= v22 >> 1) {
          uint64_t v11 = (double *)sub_100F632B8(v22 > 1, v23 + 1, 1, (unint64_t)v11);
        }
        uint64_t v24 = v0[10];
        *((void *)v11 + 2) = v23 + 1;
        sub_10062DB08(v24, (uint64_t)v11+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v23, type metadata accessor for CRLBoardPreviewImageCache.Item);
      }
      ++v10;
    }
    while (v9 != v10);
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v11 = _swiftEmptyArrayStorage;
LABEL_25:
  swift_bridgeObjectRelease_n();
  uint64_t v1 = sub_100CDD6A4((uint64_t)v11);
  swift_bridgeObjectRelease();
LABEL_26:
  v0[24] = v1;
  uint64_t v25 = v0[3];
  v0[25] = static MainActor.shared.getter();
  objc_super v26 = (void *)swift_task_alloc();
  v0[26] = v26;
  v26[2] = v1;
  v26[3] = v25;
  v26[4] = 0x4000000000000000;
  long long v27 = (void *)swift_task_alloc();
  v0[27] = v27;
  void *v27 = v0;
  v27[1] = sub_100616824;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_100616824()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 128);
  uint64_t v3 = *(void *)(v1 + 120);
  return _swift_task_switch(sub_1006169A8, v3, v2);
}

uint64_t sub_1006169A8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_100616A58()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_subscriptionSet];
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  uint64_t v19 = v1;
  uint64_t v20 = v0;
  if ((*(void *)v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for AnyCancellable();
    sub_100629DC8(&qword_101677490, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    id result = (id)Set.Iterator.init(_cocoa:)();
    uint64_t v2 = v23;
    uint64_t v4 = v24;
    uint64_t v5 = v25;
    uint64_t v6 = v26;
    unint64_t v7 = v27;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v4 = v2 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v2 + 56);
    id result = (id)swift_bridgeObjectRetain();
    uint64_t v6 = 0;
  }
  int64_t v11 = (unint64_t)(v5 + 64) >> 6;
  if (v2 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v7)
    {
      uint64_t v12 = (v7 - 1) & v7;
      unint64_t v13 = __clz(__rbit64(v7)) | (v6 << 6);
      uint64_t v14 = v6;
      goto LABEL_27;
    }
    int64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v15 >= v11) {
      goto LABEL_30;
    }
    unint64_t v16 = *(void *)(v4 + 8 * v15);
    uint64_t v14 = v6 + 1;
    if (!v16)
    {
      uint64_t v14 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_30;
      }
      unint64_t v16 = *(void *)(v4 + 8 * v14);
      if (!v16)
      {
        uint64_t v14 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_30;
        }
        unint64_t v16 = *(void *)(v4 + 8 * v14);
        if (!v16)
        {
          uint64_t v14 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_30;
          }
          unint64_t v16 = *(void *)(v4 + 8 * v14);
          if (!v16)
          {
            uint64_t v17 = v6 + 5;
            while (v11 != v17)
            {
              unint64_t v16 = *(void *)(v4 + 8 * v17++);
              if (v16)
              {
                uint64_t v14 = v17 - 1;
                goto LABEL_26;
              }
            }
LABEL_30:
            sub_10052E1EC();
            *(void *)uint64_t v19 = &_swiftEmptySetSingleton;
            swift_bridgeObjectRelease();
            v22.receiver = v20;
            v22.super_class = (Class)type metadata accessor for CRLBoardPreviewImageCache();
            return [super dealloc];
          }
        }
      }
    }
LABEL_26:
    uint64_t v12 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v14 << 6);
LABEL_27:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
    swift_retain();
    if (!v18) {
      goto LABEL_30;
    }
    while (1)
    {
      AnyCancellable.cancel()();
      id result = (id)swift_release();
      uint64_t v6 = v14;
      unint64_t v7 = v12;
      if ((v2 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for AnyCancellable();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v14 = v6;
        uint64_t v12 = v7;
        if (v21) {
          continue;
        }
      }
      goto LABEL_30;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100616E14(uint64_t a1)
{
  v2[27] = a1;
  v2[28] = v1;
  sub_1005057FC(&qword_101672E90);
  v2[29] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v2[30] = v3;
  v2[31] = *(void *)(v3 - 8);
  v2[32] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[33] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[34] = v5;
  v2[35] = v4;
  return _swift_task_switch(sub_100616F38, v5, v4);
}

uint64_t sub_100616F38()
{
  uint64_t v1 = v0[30];
  uint64_t v2 = v0[31];
  uint64_t v3 = v0[29];
  sub_100617464(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = v0[29];
    swift_release();
    sub_100522F00(v4, &qword_101672E90);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    (*(void (**)(void, void, void))(v0[31] + 32))(v0[32], v0[29], v0[30]);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[36] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100617088;
    uint64_t v8 = v0[32];
    return sub_100613B30(v8);
  }
}

uint64_t sub_100617088()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 296) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 280);
  uint64_t v4 = *(void *)(v2 + 272);
  if (v0) {
    uint64_t v5 = sub_100617250;
  }
  else {
    uint64_t v5 = sub_1006171C4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1006171C4()
{
  swift_release();
  (*(void (**)(void, void))(v0[31] + 8))(v0[32], v0[30]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100617250()
{
  swift_release();
  if (qword_10166FA68 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.crlBoardPreviewImageCache;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  swift_getErrorValue();
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[21];
  id v5 = v1;
  uint64_t v6 = Error.publicDescription.getter(v3, v4);
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v9 = sub_100528BE4();
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  swift_getErrorValue();
  uint64_t v10 = Error.fullDescription.getter(v0[23]);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v9;
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 80) = v11;
  uint64_t v12 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Error saving board preview image. %{public}@ <%@>", 49, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  (*(void (**)(void, void))(v0[31] + 8))(v0[32], v0[30]);
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_100617464@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v45 - v9;
  uint64_t v11 = self;
  id v12 = [v11 defaultManager];
  v50[0] = 0;
  id v13 = [v12 URLForDirectory:13 inDomain:1 appropriateForURL:0 create:1 error:v50];

  id v14 = v50[0];
  if (v13)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    id v15 = v14;

    URL.appendingPathComponent(_:isDirectory:)();
    id v16 = [v11 defaultManager];
    URL._bridgeToObjectiveC()(v17);
    uint64_t v19 = v18;
    unsigned __int8 v20 = [v16 crl_directoryExistsAt:v18];

    if (v20)
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
LABEL_7:
      (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v6, v2);
      uint64_t v29 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v29, 1, v2);
    }
    id v22 = [v11 defaultManager];
    URL._bridgeToObjectiveC()(v23);
    uint64_t v25 = v24;
    v50[0] = 0;
    unsigned int v26 = [v22 createDirectoryAtURL:v24 withIntermediateDirectories:0 attributes:0 error:v50];

    if (v26)
    {
      unint64_t v27 = *(void (**)(char *, uint64_t))(v3 + 8);
      id v28 = v50[0];
      v27(v10, v2);
      goto LABEL_7;
    }
    id v30 = v50[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v31 = *(void (**)(char *, uint64_t))(v3 + 8);
    v31(v6, v2);
    v31(v10, v2);
  }
  else
  {
    id v21 = v50[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  uint64_t v46 = a1;
  if (qword_10166FA68 != -1) {
    swift_once();
  }
  swift_beginAccess();
  unint64_t v32 = (void *)static OS_os_log.crlBoardPreviewImageCache;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  swift_getErrorValue();
  uint64_t v34 = v48;
  uint64_t v35 = v49;
  id v36 = v32;
  uint64_t v37 = Error.publicDescription.getter(v34, v35);
  uint64_t v39 = v38;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v40 = sub_100528BE4();
  *(void *)(inited + 64) = v40;
  *(void *)(inited + 32) = v37;
  *(void *)(inited + 40) = v39;
  swift_getErrorValue();
  uint64_t v41 = Error.fullDescription.getter(v47);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v40;
  *(void *)(inited + 72) = v41;
  *(void *)(inited + 80) = v42;
  uint64_t v43 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v36, (uint64_t)&_mh_execute_header, v43, (uint64_t)"Error fetching preview image cache directory. %{public}@ <%@>", 61, 2, inited);
  swift_errorRelease();
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v29 = 1;
  a1 = v46;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v29, 1, v2);
}

uint64_t sub_100617930(uint64_t a1)
{
  v2[26] = a1;
  v2[27] = v1;
  type metadata accessor for MainActor();
  v2[28] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[29] = v4;
  v2[30] = v3;
  return _swift_task_switch(sub_1006179C8, v4, v3);
}

uint64_t sub_1006179C8()
{
  id v1 = [*(id *)(v0[27] + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cache) objectForKey:v0[26]];
  if (v1)
  {
    id v2 = v1;
    swift_release();
    if (qword_10166FA68 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v3 = (void *)static OS_os_log.crlBoardPreviewImageCache;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v5 = v3;
    uint64_t v6 = sub_100612640();
    uint64_t v8 = v7;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v6;
    *(void *)(inited + 40) = v8;
    uint64_t v9 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Found existing cache entry for: %@", 34, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v10 = (uint64_t (*)(id))v0[1];
    return v10(v2);
  }
  else
  {
    if (qword_10166FA68 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v12 = (void *)static OS_os_log.crlBoardPreviewImageCache;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v13 = swift_initStackObject();
    *(_OWORD *)(v13 + 16) = xmmword_10117E810;
    id v14 = v12;
    uint64_t v15 = sub_100612640();
    uint64_t v17 = v16;
    *(void *)(v13 + 56) = &type metadata for String;
    *(void *)(v13 + 64) = sub_100528BE4();
    *(void *)(v13 + 32) = v15;
    *(void *)(v13 + 40) = v17;
    uint64_t v18 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v18, (uint64_t)"Will create new cache entry for: %@", 35, 2, v13);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v19 = (void *)swift_task_alloc();
    v0[31] = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_100617CE8;
    uint64_t v20 = v0[26];
    return sub_10061F43C(v20);
  }
}

uint64_t sub_100617CE8(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 256) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[29];
    uint64_t v6 = v4[30];
    uint64_t v7 = sub_100617E78;
  }
  else
  {
    v4[33] = a1;
    uint64_t v5 = v4[29];
    uint64_t v6 = v4[30];
    uint64_t v7 = sub_100617E10;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100617E10()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100617E78()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100617EDC(uint64_t a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  *(void *)(v9 + 72) = v8;
  *(double *)(v9 + 64) = a3;
  *(unsigned char *)(v9 + 240) = a8;
  *(void *)(v9 + 48) = a6;
  *(void *)(v9 + 56) = a7;
  *(void *)(v9 + 32) = a1;
  *(void *)(v9 + 40) = a2;
  sub_1005057FC(&qword_101672BB0);
  *(void *)(v9 + 80) = swift_task_alloc();
  sub_1005057FC(&qword_101672E90);
  *(void *)(v9 + 88) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for URL();
  *(void *)(v9 + 96) = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)(v9 + 104) = v11;
  *(void *)(v9 + 112) = *(void *)(v11 + 64);
  *(void *)(v9 + 120) = swift_task_alloc();
  *(void *)(v9 + 128) = swift_task_alloc();
  *(void *)(v9 + 136) = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  *(void *)(v9 + 144) = swift_task_alloc();
  *(void *)(v9 + 152) = type metadata accessor for MainActor();
  *(void *)(v9 + 160) = static MainActor.shared.getter();
  uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v9 + 168) = v13;
  *(void *)(v9 + 176) = v12;
  return _swift_task_switch(sub_10061808C, v13, v12);
}

uint64_t sub_10061808C()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 64);
  char v3 = *(unsigned char *)(v0 + 240);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  sub_100629CE0(*(void *)(v0 + 40), v1, type metadata accessor for CRLBoardIdentifier);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (objc_class *)type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  sub_100629CE0(v1, (uint64_t)&v7[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item], type metadata accessor for CRLBoardPreviewImageCache.Item);
  uint64_t v8 = &v7[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass];
  *(void *)uint64_t v8 = v5;
  *((void *)v8 + 1) = v4;
  v8[16] = v3 & 1;
  *(void *)&v7[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale] = v2;
  *(void *)(v0 + 16) = v7;
  *(void *)(v0 + 24) = v6;
  [v0 init];
  *(void *)(v0 + 184) = v9;
  sub_100629D48(v1, type metadata accessor for CRLBoardPreviewImageCache.Item);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v10;
  void *v10 = v0;
  v10[1] = sub_100618214;
  return sub_100617930((uint64_t)v9);
}

uint64_t sub_100618214(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 200) = a1;
  *(void *)(v4 + 208) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 176);
  uint64_t v6 = *(void *)(v3 + 168);
  if (v1) {
    uint64_t v7 = sub_1006188FC;
  }
  else {
    uint64_t v7 = sub_100618358;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100618358()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[11];
  sub_100617464(v3);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1);
  uint64_t v5 = v0[25];
  uint64_t v6 = (void *)v0[23];
  if (v4 == 1)
  {
    uint64_t v7 = v0[11];
    swift_release();
    sub_100522F00(v7, &qword_101672E90);
    type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
    sub_100629DC8(&qword_101677088, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCache.CacheError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    uint64_t v11 = v0[15];
    uint64_t v10 = (char *)v0[16];
    uint64_t v29 = v11;
    uint64_t v13 = v0[13];
    uint64_t v12 = v0[14];
    id v14 = (void *)v0[23];
    uint64_t v15 = v0[12];
    uint64_t v16 = v0[10];
    id v30 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 32);
    v30(v10, v0[11], v15);
    static TaskPriority.background.getter();
    uint64_t v17 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 0, 1, v17);
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v11, v10, v15);
    id v18 = v14;
    swift_retain();
    uint64_t v19 = static MainActor.shared.getter();
    unint64_t v20 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v21 = v5;
    unint64_t v22 = (v12 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v23 = (char *)swift_allocObject();
    *((void *)v23 + 2) = v19;
    *((void *)v23 + 3) = &protocol witness table for MainActor;
    *((void *)v23 + 4) = v18;
    v30(&v23[v20], v29, v15);
    *(void *)&v23[v22] = v21;
    uint64_t v24 = sub_1006D9120(v16, (uint64_t)&unk_101677488, (uint64_t)v23);
    v0[27] = v24;
    uint64_t v25 = (void *)swift_task_alloc();
    v0[28] = v25;
    uint64_t v26 = sub_1005057FC(&qword_101672BD0);
    *uint64_t v25 = v0;
    v25[1] = sub_1006186C0;
    uint64_t v27 = v0[12];
    uint64_t v28 = v0[4];
    return Task.value.getter(v28, v24, v27, v26, &protocol self-conformance witness table for Error);
  }
}

uint64_t sub_1006186C0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 176);
  uint64_t v4 = *(void *)(v2 + 168);
  if (v0) {
    uint64_t v5 = sub_1006189A8;
  }
  else {
    uint64_t v5 = sub_100618814;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100618814()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[13];
  swift_release();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1006188FC()
{
  uint64_t v1 = *(void **)(v0 + 184);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1006189A8()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[13];
  swift_release();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100618A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  _OWORD v6[3] = a4;
  type metadata accessor for MainActor();
  v6[6] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[7] = v8;
  v6[8] = v7;
  return _swift_task_switch(sub_100618B1C, v8, v7);
}

uint64_t sub_100618B1C()
{
  sub_100612D30();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100618C0C;
  uint64_t v2 = *(void *)(v0 + 32);
  return sub_100613B30(v2);
}

uint64_t sub_100618C0C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v5 = sub_100618DAC;
  }
  else {
    uint64_t v5 = sub_100618D48;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100618D48()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100618DAC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100618E4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, double a5)
{
  *(void *)(v6 + 64) = v5;
  *(double *)(v6 + 56) = a5;
  *(unsigned char *)(v6 + 160) = a4;
  *(void *)(v6 + 40) = a2;
  *(void *)(v6 + 48) = a3;
  *(void *)(v6 + 32) = a1;
  type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  *(void *)(v6 + 72) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v6 + 80) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 88) = v8;
  *(void *)(v6 + 96) = v7;
  return _swift_task_switch(sub_100618F20, v8, v7);
}

uint64_t sub_100618F20()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 56);
  char v3 = *(unsigned char *)(v0 + 160);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  sub_100629CE0(*(void *)(v0 + 32), v1, type metadata accessor for CRLBoardPreviewImageCache.Item);
  uint64_t v6 = (objc_class *)type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  sub_100629CE0(v1, (uint64_t)&v7[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item], type metadata accessor for CRLBoardPreviewImageCache.Item);
  uint64_t v8 = &v7[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass];
  *(void *)uint64_t v8 = v5;
  *((void *)v8 + 1) = v4;
  v8[16] = v3 & 1;
  *(void *)&v7[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale] = v2;
  *(void *)(v0 + 16) = v7;
  *(void *)(v0 + 24) = v6;
  [v0 init];
  *(void *)(v0 + 104) = v9;
  sub_100629D48(v1, type metadata accessor for CRLBoardPreviewImageCache.Item);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v10;
  void *v10 = v0;
  v10[1] = sub_10061908C;
  return sub_100617930((uint64_t)v9);
}

uint64_t sub_10061908C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  *(void *)(v4 + 120) = a1;
  *(void *)(v4 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(void *)(v4 + 88);
    uint64_t v7 = *(void *)(v4 + 96);
    uint64_t v8 = sub_1006193AC;
  }
  else
  {

    id v9 = (void *)swift_task_alloc();
    *(void *)(v4 + 136) = v9;
    *id v9 = v5;
    v9[1] = sub_100619208;
    v9[4] = a1;
    uint64_t v8 = sub_100614394;
    uint64_t v6 = a1;
    uint64_t v7 = 0;
  }
  return _swift_task_switch(v8, v6, v7);
}

uint64_t sub_100619208(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 144) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[11];
    uint64_t v6 = v4[12];
    uint64_t v7 = sub_100619420;
  }
  else
  {
    v4[19] = a1;
    uint64_t v5 = v4[11];
    uint64_t v6 = v4[12];
    uint64_t v7 = sub_100619330;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100619330()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 152);
  return v1(v2);
}

uint64_t sub_1006193AC()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100619420()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100619494(uint64_t a1, uint64_t a2, uint64_t a3, char a4, double a5)
{
  *(void *)(v6 + 64) = v5;
  *(double *)(v6 + 56) = a5;
  *(unsigned char *)(v6 + 128) = a4;
  *(void *)(v6 + 40) = a2;
  *(void *)(v6 + 48) = a3;
  *(void *)(v6 + 32) = a1;
  type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  *(void *)(v6 + 72) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v6 + 80) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 88) = v8;
  *(void *)(v6 + 96) = v7;
  return _swift_task_switch(sub_100619568, v8, v7);
}

uint64_t sub_100619568()
{
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 56);
  char v4 = *(unsigned char *)(v0 + 128);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  sub_100629CE0(*(void *)(v0 + 32), v1, type metadata accessor for CRLBoardPreviewImageCache.Item);
  uint64_t v7 = (objc_class *)type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
  uint64_t v8 = (char *)objc_allocWithZone(v7);
  sub_100629CE0(v1, (uint64_t)&v8[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item], type metadata accessor for CRLBoardPreviewImageCache.Item);
  uint64_t v9 = &v8[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass];
  *(void *)uint64_t v9 = v6;
  *((void *)v9 + 1) = v5;
  unsigned char v9[16] = v4 & 1;
  *(void *)&v8[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale] = v3;
  *(void *)(v0 + 16) = v8;
  *(void *)(v0 + 24) = v7;
  [v0 init];
  sub_100629D48(v1, type metadata accessor for CRLBoardPreviewImageCache.Item);
  id v11 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                              + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cache), "objectForKey:", v10));
  *(void *)(v0 + 104) = v11;

  if (v11)
  {
    return _swift_task_switch(sub_10061972C, v11, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12(0);
  }
}

uint64_t sub_10061972C()
{
  uint64_t v1 = v0[13];
  unint64_t v2 = *(unsigned __int8 *)(v1 + 128);
  if (!(v2 >> 6))
  {
    uint64_t v3 = (void *)(v2 >> 6);
    goto LABEL_6;
  }
  uint64_t v3 = *(void **)(v1 + 120);
  if ((v2 >> 6) == 1)
  {
    if ((v2 & 1) == 0)
    {
      sub_100626B48(*(void **)(v1 + 120), 0);
LABEL_6:
      v0[15] = v3;
      uint64_t v4 = v0[11];
      uint64_t v5 = v0[12];
      uint64_t v6 = sub_100619978;
      goto LABEL_10;
    }
    uint64_t v7 = *(void *)(v1 + 120);
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"imageIfExists", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 381, (uint64_t)"The cache entry is still in the .ready state", 44, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"imageIfExists", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 381);
    type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
    sub_100629DC8(&qword_101677088, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCache.CacheError);
    uint64_t v7 = swift_allocError();
    swift_storeEnumTagMultiPayload();
  }
  v0[14] = v7;
  sub_100626B24(v3, v2);
  swift_willThrow();
  uint64_t v4 = v0[11];
  uint64_t v5 = v0[12];
  uint64_t v6 = sub_100619900;
LABEL_10:
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_100619900()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100619978()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 120);
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1006199F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, double a5)
{
  *(void *)(v6 + 136) = v5;
  *(double *)(v6 + 128) = a5;
  *(unsigned char *)(v6 + 89) = a4;
  *(void *)(v6 + 112) = a2;
  *(void *)(v6 + 120) = a3;
  *(void *)(v6 + 104) = a1;
  type metadata accessor for CRLBoardIdentifier(0);
  *(void *)(v6 + 144) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  *(void *)(v6 + 152) = v7;
  *(void *)(v6 + 160) = *(void *)(v7 - 8);
  *(void *)(v6 + 168) = swift_task_alloc();
  *(void *)(v6 + 176) = swift_task_alloc();
  *(void *)(v6 + 184) = swift_task_alloc();
  *(void *)(v6 + 192) = type metadata accessor for MainActor();
  *(void *)(v6 + 200) = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 208) = v9;
  *(void *)(v6 + 216) = v8;
  return _swift_task_switch(sub_100619B48, v9, v8);
}

uint64_t sub_100619B48()
{
  *(void *)(v0 + 96) = _swiftEmptyDictionarySingleton;
  uint64_t v1 = v0 + 96;
  unint64_t v2 = (double *)(v0 + 112);
  if (*(unsigned char *)(v0 + 89))
  {
    unint64_t v2 = &dbl_101183F80[*(void *)v2];
    uint64_t v3 = v2;
  }
  else
  {
    uint64_t v3 = (double *)(v0 + 120);
  }
  uint64_t v4 = *(void *)v3;
  *(double *)(v0 + 224) = *v2;
  *(void *)(v0 + 232) = v4;
  uint64_t v5 = *(void *)(v0 + 160);
  unint64_t v6 = *(void *)(*(void *)(v0 + 104) + 16);
  if (v6 >= 4) {
    unint64_t v6 = 4;
  }
  *(void *)(v0 + 240) = v6;
  *(_DWORD *)(v0 + 92) = *(_DWORD *)(v5 + 80);
  if (v6)
  {
    *(void *)(v0 + 248) = *(void *)(v5 + 72);
    swift_bridgeObjectRetain_n();
    uint64_t v7 = 0;
    while (1)
    {
      *(void *)(v0 + 256) = v7;
      uint64_t v13 = *(void *)(v0 + 176);
      uint64_t v12 = *(void *)(v0 + 184);
      sub_100629CE0(*(void *)(v0 + 104)+ ((*(unsigned __int8 *)(v0 + 92) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 92))+ *(void *)(v0 + 248) * v7, v12, type metadata accessor for CRLBoardPreviewImageCache.Item);
      sub_100629CE0(v12, v13, type metadata accessor for CRLBoardPreviewImageCache.Item);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload != 2)
        {
          sub_10061CEC8(*(void *)(v0 + 184), *(void *)(v0 + 144));
          sub_100629D48(*(void *)(v0 + 144), type metadata accessor for CRLBoardIdentifier);
          *(void *)(v0 + 264) = static MainActor.shared.getter();
          uint64_t v50 = dispatch thunk of Actor.unownedExecutor.getter();
          uint64_t v46 = v51;
          *(void *)(v0 + 272) = v50;
          *(void *)(v0 + 280) = v51;
          uint64_t v44 = (uint64_t)sub_10061A2F0;
          uint64_t v45 = v50;
          return _swift_task_switch(v44, v45, v46);
        }
        uint64_t v15 = *(void *)(v0 + 176);
        uint64_t v16 = *(void *)(v0 + 184);
        uint64_t v17 = v15 + *(int *)(sub_1005057FC(&qword_10169FA80) + 48);
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"image(for:sizeClass:contentsScale:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 673, (uint64_t)"No image for the scene", 22, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"image(for:sizeClass:contentsScale:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 673);
        sub_100629D48(v16, type metadata accessor for CRLBoardPreviewImageCache.Item);
        uint64_t v18 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
        uint64_t v11 = type metadata accessor for CRLBoardIdentifier;
        uint64_t v10 = v15;
      }
      else
      {
        uint64_t v9 = *(void *)(v0 + 176);
        uint64_t v8 = *(void *)(v0 + 184);
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"image(for:sizeClass:contentsScale:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 666, (uint64_t)"No image for the folder", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"image(for:sizeClass:contentsScale:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 666);
        sub_100629D48(v8, type metadata accessor for CRLBoardPreviewImageCache.Item);
        uint64_t v10 = v9;
        uint64_t v11 = type metadata accessor for CRLBoardPreviewImageCache.Item;
      }
      sub_100629D48(v10, v11);
      uint64_t v7 = *(void *)(v0 + 256) + 1;
      if (v7 == *(void *)(v0 + 240))
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = v0 + 96;
        goto LABEL_15;
      }
    }
  }
  swift_bridgeObjectRetain();
LABEL_15:
  swift_release();
  double v20 = *(double *)(v0 + 224);
  double v19 = *(double *)(v0 + 232);
  uint64_t v21 = *(void *)(v0 + 104);
  uint64_t v22 = (2 * *(void *)(v0 + 240)) | 1;
  uint64_t v23 = v21 + ((*(unsigned __int8 *)(v0 + 92) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 92));
  sub_1005057FC(&qword_10167AFB0);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_10117E800;
  *(double *)(v24 + 32) = sub_10006757C(0.0, 0.0, (v20 + -2.0) * 0.5, (v19 + -2.0) * 0.5);
  *(void *)(v24 + 40) = v25;
  *(void *)(v24 + 48) = v26;
  *(void *)(v24 + 56) = v27;
  double v28 = (v20 + -2.0) * 0.5 + 2.0;
  *(double *)(v24 + 64) = sub_10006757C(v28, 0.0, (v20 + -2.0) * 0.5, (v19 + -2.0) * 0.5);
  *(void *)(v24 + 72) = v29;
  *(void *)(v24 + 80) = v30;
  *(void *)(v24 + 88) = v31;
  CGFloat v32 = (v19 + -2.0) * 0.5 + 2.0;
  *(double *)(v24 + 96) = sub_10006757C(0.0, v32, (v20 + -2.0) * 0.5, (v19 + -2.0) * 0.5);
  *(void *)(v24 + 104) = v33;
  *(void *)(v24 + 112) = v34;
  *(void *)(v24 + 120) = v35;
  *(double *)(v24 + 128) = sub_10006757C(v28, v32, (v20 + -2.0) * 0.5, (v19 + -2.0) * 0.5);
  *(void *)(v24 + 136) = v36;
  *(void *)(v24 + 144) = v37;
  *(void *)(v24 + 152) = v38;
  id v39 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:v20, v19];
  unint64_t v40 = (void *)swift_allocObject();
  v40[2] = v24;
  v40[3] = v21;
  v40[4] = v23;
  v40[5] = 0;
  v40[6] = v22;
  v40[7] = v1;
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = sub_10062EEAC;
  *(void *)(v41 + 24) = v40;
  *(void *)(v0 + 48) = sub_1006321D8;
  *(void *)(v0 + 56) = v41;
  *(void *)(v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = *(void *)"";
  *(void *)(v0 + 32) = sub_10061B7E4;
  *(void *)(v0 + 40) = &unk_10150B8B0;
  uint64_t v42 = _Block_copy((const void *)(v1 - 80));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  id v43 = [v39 imageWithActions:v42];

  _Block_release(v42);
  LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();
  uint64_t v44 = swift_release();
  if (v21)
  {
    __break(1u);
    return _swift_task_switch(v44, v45, v46);
  }
  id v47 = [objc_allocWithZone((Class)CRLImage) initWithUIImage:v43];
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v48 = *(uint64_t (**)(id))(v0 + 8);
  return v48(v47);
}

uint64_t sub_10061A2F0()
{
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 128);
  double v3 = (*(double *)(v0 + 232) + -2.0) * 0.5;
  double v4 = (*(double *)(v0 + 224) + -2.0) * 0.5;
  sub_100629CE0(*(void *)(v0 + 184), v1, type metadata accessor for CRLBoardPreviewImageCache.Item);
  uint64_t v5 = (objc_class *)type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
  unint64_t v6 = (char *)objc_allocWithZone(v5);
  sub_100629CE0(v1, (uint64_t)&v6[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item], type metadata accessor for CRLBoardPreviewImageCache.Item);
  uint64_t v7 = (double *)&v6[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass];
  *uint64_t v7 = v4;
  v7[1] = v3;
  *((unsigned char *)v7 + 16) = 0;
  *(void *)&v6[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale] = v2;
  *(void *)(v0 + 64) = v6;
  *(void *)(v0 + 72) = v5;
  id v8 = [super init];
  *(void *)(v0 + 288) = v8;
  sub_100629D48(v1, type metadata accessor for CRLBoardPreviewImageCache.Item);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_10061A46C;
  return sub_100617930((uint64_t)v8);
}

uint64_t sub_10061A46C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 304) = a1;
  *(void *)(v4 + 312) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 272);
    uint64_t v6 = *(void *)(v4 + 280);
    uint64_t v7 = sub_10061B2D8;
  }
  else
  {

    uint64_t v7 = sub_10061A5A4;
    uint64_t v5 = a1;
    uint64_t v6 = 0;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_10061A5A4()
{
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = *(void **)(v1 + 120);
  *(void *)(v0 + 320) = v2;
  unsigned int v3 = *(unsigned __int8 *)(v1 + 128);
  *(unsigned char *)(v0 + 90) = v3;
  if (v3 >> 6)
  {
    if (v3 >> 6 == 1)
    {
      if ((v3 & 1) == 0)
      {
        sub_100626B48(v2, 0);
        *(void *)(v0 + 344) = v2;
        uint64_t v4 = *(void *)(v0 + 272);
        uint64_t v5 = *(void *)(v0 + 280);
        uint64_t v6 = sub_10061AA74;
LABEL_11:
        return _swift_task_switch(v6, v4, v5);
      }
      sub_100626B48(v2, 1);
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"image", 5, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 358, (uint64_t)"The cache entry is still in the .ready state", 44, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"image", 5, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 358);
      type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
      sub_100629DC8(&qword_101677088, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCache.CacheError);
      uint64_t v2 = (void *)swift_allocError();
      swift_storeEnumTagMultiPayload();
    }
    swift_willThrow();
    *(void *)(v0 + 336) = v2;
    uint64_t v4 = *(void *)(v0 + 272);
    uint64_t v5 = *(void *)(v0 + 280);
    uint64_t v6 = sub_10061AA00;
    goto LABEL_11;
  }
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v7;
  uint64_t v8 = sub_10050BF48(0, (unint64_t *)&qword_101677090);
  uint64_t v9 = sub_1005057FC(&qword_101672BD0);
  *uint64_t v7 = v0;
  v7[1] = sub_10061A834;
  return Task.result.getter(v0 + 80, v2, v8, v9, &protocol self-conformance witness table for Error);
}

uint64_t sub_10061A834()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 304);
  swift_task_dealloc();
  return _swift_task_switch(sub_10061A944, v1, 0);
}

uint64_t sub_10061A944()
{
  uint64_t v1 = *(void *)(v0 + 80);
  unsigned __int8 v2 = *(unsigned char *)(v0 + 90);
  uint64_t v3 = *(void **)(v0 + 320);
  if (*(unsigned char *)(v0 + 88))
  {
    swift_willThrow();
    sub_100626B64(v3, v2);
    *(void *)(v0 + 336) = v1;
    uint64_t v4 = *(void *)(v0 + 272);
    uint64_t v5 = *(void *)(v0 + 280);
    uint64_t v6 = sub_10061AA00;
  }
  else
  {
    sub_100626B64(*(void **)(v0 + 320), *(unsigned char *)(v0 + 90));
    *(void *)(v0 + 344) = v1;
    uint64_t v4 = *(void *)(v0 + 272);
    uint64_t v5 = *(void *)(v0 + 280);
    uint64_t v6 = sub_10061AA74;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_10061AA00()
{
  swift_release();
  v0[44] = v0[42];
  swift_release();
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[27];
  return _swift_task_switch(sub_10061B34C, v1, v2);
}

uint64_t sub_10061AA74()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 216);
  return _swift_task_switch(sub_10061AAE4, v1, v2);
}

uint64_t sub_10061AAE4()
{
  uint64_t v1 = *(void **)(v0 + 344);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 168);
  sub_100629CE0(v2, v4, type metadata accessor for CRLBoardPreviewImageCache.Item);
  id v5 = v1;
  uint64_t v6 = *(void *)(v0 + 96);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100975280((uint64_t)v5, v4, isUniquelyReferenced_nonNull_native);
  *(void *)(v0 + 96) = v6;
  swift_bridgeObjectRelease();
  sub_100629D48(v4, type metadata accessor for CRLBoardPreviewImageCache.Item);

  sub_100629D48(v2, type metadata accessor for CRLBoardPreviewImageCache.Item);
  sub_100629D48(v3, type metadata accessor for CRLBoardIdentifier);
  uint64_t v8 = *(void *)(v0 + 256) + 1;
  if (v8 == *(void *)(v0 + 240))
  {
LABEL_2:
    swift_release();
    swift_bridgeObjectRelease();
    double v10 = *(double *)(v0 + 224);
    double v9 = *(double *)(v0 + 232);
    uint64_t v11 = *(void *)(v0 + 104);
    uint64_t v12 = (2 * *(void *)(v0 + 240)) | 1;
    uint64_t v13 = v11 + ((*(unsigned __int8 *)(v0 + 92) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 92));
    sub_1005057FC(&qword_10167AFB0);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_10117E800;
    *(double *)(v14 + 32) = sub_10006757C(0.0, 0.0, (v10 + -2.0) * 0.5, (v9 + -2.0) * 0.5);
    *(void *)(v14 + 40) = v15;
    *(void *)(v14 + 48) = v16;
    *(void *)(v14 + 56) = v17;
    double v18 = (v10 + -2.0) * 0.5 + 2.0;
    *(double *)(v14 + 64) = sub_10006757C(v18, 0.0, (v10 + -2.0) * 0.5, (v9 + -2.0) * 0.5);
    *(void *)(v14 + 72) = v19;
    *(void *)(v14 + 80) = v20;
    *(void *)(v14 + 88) = v21;
    CGFloat v22 = (v9 + -2.0) * 0.5 + 2.0;
    *(double *)(v14 + 96) = sub_10006757C(0.0, v22, (v10 + -2.0) * 0.5, (v9 + -2.0) * 0.5);
    *(void *)(v14 + 104) = v23;
    *(void *)(v14 + 112) = v24;
    *(void *)(v14 + 120) = v25;
    *(double *)(v14 + 128) = sub_10006757C(v18, v22, (v10 + -2.0) * 0.5, (v9 + -2.0) * 0.5);
    *(void *)(v14 + 136) = v26;
    *(void *)(v14 + 144) = v27;
    *(void *)(v14 + 152) = v28;
    id v29 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:v10, v9];
    uint64_t v30 = (void *)swift_allocObject();
    v30[2] = v14;
    v30[3] = v11;
    v30[4] = v13;
    v30[5] = 0;
    v30[6] = v12;
    v30[7] = v0 + 96;
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = sub_10062EEAC;
    *(void *)(v31 + 24) = v30;
    *(void *)(v0 + 48) = sub_1006321D8;
    *(void *)(v0 + 56) = v31;
    *(void *)(v0 + 16) = _NSConcreteStackBlock;
    *(void *)(v0 + 24) = *(void *)"";
    *(void *)(v0 + 32) = sub_10061B7E4;
    *(void *)(v0 + 40) = &unk_10150B8B0;
    CGFloat v32 = _Block_copy((const void *)(v0 + 16));
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    id v33 = [v29 imageWithActions:v32];

    _Block_release(v32);
    LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
    uint64_t v34 = (uint64_t (*)())swift_release();
    if ((v11 & 1) == 0)
    {
      id v37 = [objc_allocWithZone((Class)CRLImage) initWithUIImage:v33];
      swift_bridgeObjectRelease();

      swift_release();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v38 = *(uint64_t (**)(id))(v0 + 8);
      return v38(v37);
    }
    __break(1u);
    return _swift_task_switch(v34, v35, v36);
  }
  uint64_t v56 = *(void *)(v0 + 312);
  while (1)
  {
    *(void *)(v0 + 256) = v8;
    uint64_t v45 = *(void *)(v0 + 176);
    uint64_t v44 = *(void *)(v0 + 184);
    sub_100629CE0(*(void *)(v0 + 104)+ ((*(unsigned __int8 *)(v0 + 92) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 92))+ *(void *)(v0 + 248) * v8, v44, type metadata accessor for CRLBoardPreviewImageCache.Item);
    sub_100629CE0(v44, v45, type metadata accessor for CRLBoardPreviewImageCache.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload) {
      break;
    }
    uint64_t v41 = *(void *)(v0 + 176);
    uint64_t v40 = *(void *)(v0 + 184);
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"image(for:sizeClass:contentsScale:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 666, (uint64_t)"No image for the folder", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"image(for:sizeClass:contentsScale:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 666);
    sub_100629D48(v40, type metadata accessor for CRLBoardPreviewImageCache.Item);
    uint64_t v42 = v41;
    id v43 = type metadata accessor for CRLBoardPreviewImageCache.Item;
LABEL_8:
    sub_100629D48(v42, v43);
    uint64_t v8 = *(void *)(v0 + 256) + 1;
    if (v8 == *(void *)(v0 + 240)) {
      goto LABEL_2;
    }
  }
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v48 = *(void *)(v0 + 176);
    uint64_t v47 = *(void *)(v0 + 184);
    uint64_t v49 = v48 + *(int *)(sub_1005057FC(&qword_10169FA80) + 48);
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"image(for:sizeClass:contentsScale:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 673, (uint64_t)"No image for the scene", 22, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"image(for:sizeClass:contentsScale:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 673);
    sub_100629D48(v47, type metadata accessor for CRLBoardPreviewImageCache.Item);
    uint64_t v50 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v49, v50);
    id v43 = type metadata accessor for CRLBoardIdentifier;
    uint64_t v42 = v48;
    goto LABEL_8;
  }
  sub_10061CEC8(*(void *)(v0 + 184), *(void *)(v0 + 144));
  if (!v56)
  {
    sub_100629D48(*(void *)(v0 + 144), type metadata accessor for CRLBoardIdentifier);
    *(void *)(v0 + 264) = static MainActor.shared.getter();
    uint64_t v54 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v36 = v55;
    *(void *)(v0 + 272) = v54;
    *(void *)(v0 + 280) = v55;
    uint64_t v34 = sub_10061A2F0;
    uint64_t v35 = v54;
    return _swift_task_switch(v34, v35, v36);
  }
  uint64_t v52 = *(void *)(v0 + 176);
  uint64_t v51 = *(void *)(v0 + 184);
  swift_bridgeObjectRelease();
  swift_release();
  sub_100629D48(v51, type metadata accessor for CRLBoardPreviewImageCache.Item);
  swift_bridgeObjectRelease();
  sub_100629D48(v52, type metadata accessor for CRLBoardIdentifier);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::String v53 = *(uint64_t (**)(void))(v0 + 8);
  return v53();
}

uint64_t sub_10061B2D8()
{
  *(void *)(v0 + 352) = *(void *)(v0 + 312);
  swift_release();
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 216);
  return _swift_task_switch(sub_10061B34C, v1, v2);
}

uint64_t sub_10061B34C()
{
  uint64_t v2 = v0[22];
  uint64_t v1 = v0[23];
  swift_bridgeObjectRelease();
  swift_release();
  sub_100629D48(v1, type metadata accessor for CRLBoardPreviewImageCache.Item);
  swift_bridgeObjectRelease();
  sub_100629D48(v2, type metadata accessor for CRLBoardIdentifier);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_10061B448(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t *a7)
{
  uint64_t v57 = a4;
  uint64_t v12 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  uint64_t v56 = *(void *)(v12 - 8);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = [self secondarySystemBackgroundColor];
  [v16 setFill];

  uint64_t v17 = *(void *)(a2 + 16);
  if (!v17) {
    return;
  }
  unint64_t v18 = a6 >> 1;
  uint64_t v19 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5)) {
    goto LABEL_19;
  }
  uint64_t v20 = a5;
  swift_bridgeObjectRetain();
  int64_t v21 = 0;
  v53[1] = a2;
  uint64_t v54 = v20;
  CGFloat v22 = (double *)(a2 + 56);
  uint64_t v55 = a7;
  while (1)
  {
    double v24 = *(v22 - 3);
    double v23 = *(v22 - 2);
    double v26 = *(v22 - 1);
    double v25 = *v22;
    if (v21 >= v19) {
      goto LABEL_5;
    }
    if (v21 < v20 || v21 >= v18) {
      break;
    }
    sub_100629CE0(v57 + *(void *)(v56 + 72) * v21, (uint64_t)v15, type metadata accessor for CRLBoardPreviewImageCache.Item);
    uint64_t v27 = *a7;
    if (*(void *)(*a7 + 16))
    {
      unint64_t v28 = sub_100956A4C((uint64_t)v15);
      if (v29)
      {
        id v30 = *(id *)(*(void *)(v27 + 56) + 8 * v28);
        sub_100629D48((uint64_t)v15, type metadata accessor for CRLBoardPreviewImageCache.Item);
        id v31 = [v30 UIImage];
        unsigned __int8 v32 = [v31 isSymbolImage];

        if (v32)
        {
          [a1 fillRect:v24, v23, v26, v25];
          [v30 size];
          double v34 = v33;
          double v36 = v35;
          double v37 = sub_1000646A4(v26, v25, 0.5);
          double v39 = sub_10006729C(0, v34, v36, v37, v38);
          double v40 = sub_100065738(v24, v23, v26, v25);
          double v42 = sub_10006402C(v40, v41, v39);
        }
        else
        {
          [v30 size];
          double v42 = sub_1000672D8(0, v46, v47, v24, v23, v26, v25);
        }
        double v48 = v42;
        double v49 = v43;
        double v50 = v44;
        double v51 = v45;
        id v52 = [v30 UIImage];
        [v52 drawInRect:v48, v49, v50, v51];

        uint64_t v20 = v54;
        a7 = v55;
        goto LABEL_6;
      }
    }
    sub_100629D48((uint64_t)v15, type metadata accessor for CRLBoardPreviewImageCache.Item);
LABEL_5:
    [a1 fillRect:v24, v23, v26, v25];
LABEL_6:
    ++v21;
    v22 += 4;
    if (v17 == v21)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
}

uint64_t sub_10061B7BC(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_10061B7E4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

uint64_t sub_10061B830(uint64_t a1, uint64_t a2, char a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  *(void *)(v10 + 96) = v9;
  *(unsigned char *)(v10 + 208) = a3;
  *(double *)(v10 + 80) = a8;
  *(double *)(v10 + 88) = a9;
  *(double *)(v10 + 64) = a6;
  *(double *)(v10 + 72) = a7;
  *(double *)(v10 + 48) = a4;
  *(double *)(v10 + 56) = a5;
  *(void *)(v10 + 32) = a1;
  *(void *)(v10 + 40) = a2;
  *(void *)(v10 + 104) = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  *(void *)(v10 + 112) = swift_task_alloc();
  *(void *)(v10 + 120) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v10 + 128) = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v10 + 136) = v12;
  *(void *)(v10 + 144) = v11;
  return _swift_task_switch(sub_10061B91C, v12, v11);
}

uint64_t sub_10061B91C()
{
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 72);
  long long v20 = *(_OWORD *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 32);
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v9 = sub_1005057FC(&qword_10169FA80);
  uint64_t v10 = v1 + *(int *)(v9 + 48);
  uint64_t v11 = v1 + *(int *)(v9 + 64);
  sub_100629CE0(v7, v1, type metadata accessor for CRLBoardIdentifier);
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v8, v12);
  *(_OWORD *)uint64_t v11 = v20;
  *(void *)(v11 + 16) = v6;
  *(void *)(v11 + 24) = v5;
  swift_storeEnumTagMultiPayload();
  sub_100629CE0(v1, v2, type metadata accessor for CRLBoardPreviewImageCache.Item);
  uint64_t v13 = (objc_class *)type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
  uint64_t v14 = (char *)objc_allocWithZone(v13);
  sub_100629CE0(v2, (uint64_t)&v14[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item], type metadata accessor for CRLBoardPreviewImageCache.Item);
  uint64_t v15 = &v14[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass];
  *(void *)uint64_t v15 = v4;
  *((void *)v15 + 1) = v3;
  v15[16] = 0;
  *(void *)&v14[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale] = 0x4000000000000000;
  *(void *)(v0 + 16) = v14;
  *(void *)(v0 + 24) = v13;
  id v16 = [super init];
  *(void *)(v0 + 152) = v16;
  sub_100629D48(v2, type metadata accessor for CRLBoardPreviewImageCache.Item);
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_10061BB3C;
  char v18 = *(unsigned char *)(v0 + 208);
  return sub_10061BFF0((uint64_t)v16, v18);
}

uint64_t sub_10061BB3C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 168) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = v4[17];
    uint64_t v7 = v4[18];
    uint64_t v8 = sub_10061BEA8;
  }
  else
  {
    v4[22] = a1;
    uint64_t v9 = (void *)swift_task_alloc();
    v4[23] = v9;
    *uint64_t v9 = v5;
    v9[1] = sub_10061BCB4;
    v9[4] = a1;
    uint64_t v8 = sub_100614394;
    uint64_t v6 = a1;
    uint64_t v7 = 0;
  }
  return _swift_task_switch(v8, v6, v7);
}

uint64_t sub_10061BCB4(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 192) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    uint64_t v5 = v4[17];
    uint64_t v6 = v4[18];
    uint64_t v7 = sub_10061BF4C;
  }
  else
  {
    v4[25] = a1;
    uint64_t v5 = v4[17];
    uint64_t v6 = v4[18];
    uint64_t v7 = sub_10061BE00;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_10061BE00()
{
  uint64_t v1 = (void *)v0[19];
  uint64_t v2 = v0[15];
  swift_release();

  sub_100629D48(v2, type metadata accessor for CRLBoardPreviewImageCache.Item);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v4 = v0[25];
  return v3(v4);
}

uint64_t sub_10061BEA8()
{
  uint64_t v1 = (void *)v0[19];
  uint64_t v2 = v0[15];
  swift_release();

  sub_100629D48(v2, type metadata accessor for CRLBoardPreviewImageCache.Item);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10061BF4C()
{
  uint64_t v1 = (void *)v0[19];
  uint64_t v2 = v0[15];
  swift_release();

  sub_100629D48(v2, type metadata accessor for CRLBoardPreviewImageCache.Item);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10061BFF0(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 96) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  type metadata accessor for MainActor();
  *(void *)(v3 + 32) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 40) = v5;
  *(void *)(v3 + 48) = v4;
  return _swift_task_switch(sub_10061C08C, v5, v4);
}

uint64_t sub_10061C08C()
{
  if (*(unsigned char *)(v0 + 96) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 16);
    sub_1005057FC(&qword_101677078);
    uint64_t v2 = *(void *)(type metadata accessor for CRLBoardPreviewImageCache.Item(0) - 8);
    unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_10117E810;
    sub_100629CE0(v1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item, v4 + v3, type metadata accessor for CRLBoardPreviewImageCache.Item);
    uint64_t v5 = sub_100509124(v4);
    *(void *)(v0 + 56) = v5;
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_10061C308;
    return sub_10061C740((uint64_t)v5);
  }
  else
  {
    id v8 = [*(id *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cache) objectForKey:*(void *)(v0 + 16)];
    if (v8)
    {
      id v9 = v8;
      swift_release();
      uint64_t v10 = *(uint64_t (**)(id))(v0 + 8);
      return v10(v9);
    }
    else
    {
      uint64_t v11 = (void *)swift_task_alloc();
      *(void *)(v0 + 72) = v11;
      *uint64_t v11 = v0;
      v11[1] = sub_10061C54C;
      uint64_t v12 = *(void *)(v0 + 16);
      return sub_100620678(v12);
    }
  }
}

uint64_t sub_10061C308()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_10061C44C, v3, v2);
}

uint64_t sub_10061C44C()
{
  id v1 = [*(id *)(v0[3] + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cache) objectForKey:v0[2]];
  if (v1)
  {
    id v2 = v1;
    swift_release();
    uint64_t v3 = (uint64_t (*)(id))v0[1];
    return v3(v2);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v0[9] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_10061C54C;
    uint64_t v6 = v0[2];
    return sub_100620678(v6);
  }
}

uint64_t sub_10061C54C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 80) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[5];
    uint64_t v6 = v4[6];
    uint64_t v7 = sub_10061C6DC;
  }
  else
  {
    v4[11] = a1;
    uint64_t v5 = v4[5];
    uint64_t v6 = v4[6];
    uint64_t v7 = sub_10061C674;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_10061C674()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10061C6DC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10061C740(uint64_t a1)
{
  v2[9] = a1;
  v2[10] = v1;
  uint64_t v3 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[16] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10061C850, v5, v4);
}

uint64_t sub_10061C850()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_release();
  if (!*(void *)(v1 + 16))
  {
LABEL_60:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    double v40 = *(uint64_t (**)(void))(v0 + 8);
    return v40();
  }
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v42 = v2 + 56;
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(v2 + 56);
  int64_t v44 = (unint64_t)(63 - v5) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (!v6) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v9 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    uint64_t v15 = *(void *)(v0 + 112);
    uint64_t v14 = *(void *)(v0 + 120);
    uint64_t v16 = *(void *)(v0 + 104);
    sub_100629CE0(*(void *)(v2 + 48) + *(void *)(v3 + 72) * i, v14, type metadata accessor for CRLBoardPreviewImageCache.Item);
    sub_10062DB08(v14, v15, type metadata accessor for CRLBoardPreviewImageCache.Item);
    sub_100629CE0(v15, v16, type metadata accessor for CRLBoardPreviewImageCache.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v19 = *(void *)(v0 + 104);
    uint64_t v18 = *(void *)(v0 + 112);
    if (EnumCaseMultiPayload != 2)
    {
      sub_100629D48(*(void *)(v0 + 104), type metadata accessor for CRLBoardPreviewImageCache.Item);
      sub_100629D48(v18, type metadata accessor for CRLBoardPreviewImageCache.Item);
      swift_release();
      goto LABEL_60;
    }
    uint64_t v20 = v19 + *(int *)(sub_1005057FC(&qword_10169FA80) + 48);
    uint64_t v21 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
    sub_100629D48(v19, type metadata accessor for CRLBoardIdentifier);
    uint64_t result = sub_100629D48(v18, type metadata accessor for CRLBoardPreviewImageCache.Item);
    if (v6) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_64;
    }
    if (v11 >= v44)
    {
LABEL_28:
      swift_release();
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0) {
        goto LABEL_65;
      }
LABEL_29:
      CGFloat v22 = &_swiftEmptySetSingleton;
LABEL_30:
      uint64_t v23 = *(void *)(v0 + 72);
      id v24 = *(id *)(v0 + 80);
      uint64_t v25 = sub_10062A214((uint64_t)v22, v23, (uint64_t)v24);

      if ((v25 & 0xC000000000000001) != 0)
      {
        __CocoaSet.makeIterator()();
        type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
        sub_100629DC8(&qword_101677428, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCache.LookupKey);
        Set.Iterator.init(_cocoa:)();
        uint64_t v25 = *(void *)(v0 + 16);
        uint64_t v45 = *(void *)(v0 + 24);
        uint64_t v26 = *(void *)(v0 + 32);
        uint64_t v27 = *(void *)(v0 + 40);
        unint64_t v28 = *(void *)(v0 + 48);
      }
      else
      {
        uint64_t v27 = 0;
        uint64_t v29 = -1 << *(unsigned char *)(v25 + 32);
        uint64_t v45 = v25 + 56;
        uint64_t v26 = ~v29;
        uint64_t v30 = -v29;
        if (v30 < 64) {
          uint64_t v31 = ~(-1 << v30);
        }
        else {
          uint64_t v31 = -1;
        }
        unint64_t v28 = v31 & *(void *)(v25 + 56);
      }
      int64_t v43 = (unint64_t)(v26 + 64) >> 6;
      while ((v25 & 0x8000000000000000) == 0)
      {
        if (v28)
        {
          uint64_t v35 = (v28 - 1) & v28;
          unint64_t v36 = __clz(__rbit64(v28)) | (v27 << 6);
          uint64_t v34 = v27;
        }
        else
        {
          int64_t v37 = v27 + 1;
          if (__OFADD__(v27, 1))
          {
LABEL_64:
            __break(1u);
LABEL_65:
            if (_CocoaArrayWrapper.endIndex.getter())
            {
              sub_100509A14((unint64_t)_swiftEmptyArrayStorage);
              CGFloat v22 = v41;
              goto LABEL_30;
            }
            goto LABEL_29;
          }
          if (v37 >= v43) {
            goto LABEL_59;
          }
          unint64_t v38 = *(void *)(v45 + 8 * v37);
          uint64_t v34 = v27 + 1;
          if (!v38)
          {
            uint64_t v34 = v27 + 2;
            if (v27 + 2 >= v43) {
              goto LABEL_59;
            }
            unint64_t v38 = *(void *)(v45 + 8 * v34);
            if (!v38)
            {
              uint64_t v34 = v27 + 3;
              if (v27 + 3 >= v43) {
                goto LABEL_59;
              }
              unint64_t v38 = *(void *)(v45 + 8 * v34);
              if (!v38)
              {
                uint64_t v34 = v27 + 4;
                if (v27 + 4 >= v43) {
                  goto LABEL_59;
                }
                unint64_t v38 = *(void *)(v45 + 8 * v34);
                if (!v38)
                {
                  uint64_t v39 = v27 + 5;
                  while (v43 != v39)
                  {
                    unint64_t v38 = *(void *)(v45 + 8 * v39++);
                    if (v38)
                    {
                      uint64_t v34 = v39 - 1;
                      goto LABEL_55;
                    }
                  }
                  goto LABEL_59;
                }
              }
            }
          }
LABEL_55:
          uint64_t v35 = (v38 - 1) & v38;
          unint64_t v36 = __clz(__rbit64(v38)) + (v34 << 6);
        }
        id v33 = *(id *)(*(void *)(v25 + 48) + 8 * v36);
        if (!v33) {
          goto LABEL_59;
        }
LABEL_57:
        [*(id *)(*(void *)(v0 + 80) + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cache) removeObjectForKey:v33];

        uint64_t v27 = v34;
        unint64_t v28 = v35;
      }
      uint64_t v32 = __CocoaSet.Iterator.next()();
      if (v32)
      {
        *(void *)(v0 + 64) = v32;
        type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v33 = *(id *)(v0 + 56);
        swift_unknownObjectRelease();
        uint64_t v34 = v27;
        uint64_t v35 = v28;
        if (v33) {
          goto LABEL_57;
        }
      }
LABEL_59:
      sub_10052E1EC();
      goto LABEL_60;
    }
    unint64_t v12 = *(void *)(v42 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v44) {
        goto LABEL_28;
      }
      unint64_t v12 = *(void *)(v42 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v44) {
          goto LABEL_28;
        }
        unint64_t v12 = *(void *)(v42 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v44) {
            goto LABEL_28;
          }
          unint64_t v12 = *(void *)(v42 + 8 * v8);
          if (!v12)
          {
            int64_t v8 = v11 + 4;
            if (v11 + 4 >= v44) {
              goto LABEL_28;
            }
            unint64_t v12 = *(void *)(v42 + 8 * v8);
            if (!v12) {
              break;
            }
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 5;
  if (v13 >= v44) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v42 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v44) {
      goto LABEL_28;
    }
    unint64_t v12 = *(void *)(v42 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_23;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10061CEC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  __chkstk_darwin(v5 - 8, v6);
  int64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v49 = (uint64_t)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = a1;
  sub_100629CE0(a1, (uint64_t)v16, type metadata accessor for CRLBoardPreviewImageCache.Item);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10062DB08((uint64_t)v16, a2, type metadata accessor for CRLBoardIdentifier);
    sub_100ED7F04(a2, (uint64_t)v8);
    if (v2)
    {
      swift_errorRelease();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
      return sub_100522F00((uint64_t)v8, (uint64_t *)&unk_1016741D0);
    }
    uint64_t v27 = a2;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    uint64_t v28 = v49;
    sub_10062DB08((uint64_t)v8, v49, type metadata accessor for CRLBoardViewModelMetadata);
    if (*(unsigned char *)(v28 + *(int *)(v9 + 40)))
    {
      if (qword_10166FA68 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v29 = (void *)static OS_os_log.crlBoardPreviewImageCache;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      id v31 = v29;
      uint64_t v32 = UUID.uuidString.getter();
      uint64_t v34 = v33;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v32;
      *(void *)(inited + 40) = v34;
      uint64_t v35 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v31, (uint64_t)&_mh_execute_header, v35, (uint64_t)"Throwing unsupportedItemType for board UUID: @%", 47, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
      sub_100629DC8(&qword_101677088, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCache.CacheError);
      swift_allocError();
      sub_100629CE0(v50, v36, type metadata accessor for CRLBoardPreviewImageCache.Item);
    }
    else
    {
      uint64_t v37 = v28 + *(int *)(v9 + 44);
      if ((*(unsigned char *)(v37 + 8) & 1) != 0 || (unint64_t v38 = *(void *)v37, v38 < sub_1002094A4()))
      {
        uint64_t v39 = type metadata accessor for CRLBoardViewModelMetadata;
        uint64_t v40 = v28;
        return sub_100629D48(v40, v39);
      }
      if (qword_10166FA68 != -1) {
        swift_once();
      }
      swift_beginAccess();
      double v41 = (void *)static OS_os_log.crlBoardPreviewImageCache;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v42 = swift_initStackObject();
      *(_OWORD *)(v42 + 16) = xmmword_10117E810;
      id v43 = v41;
      uint64_t v44 = UUID.uuidString.getter();
      uint64_t v46 = v45;
      *(void *)(v42 + 56) = &type metadata for String;
      *(void *)(v42 + 64) = sub_100528BE4();
      *(void *)(v42 + 32) = v44;
      *(void *)(v42 + 40) = v46;
      uint64_t v47 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v43, (uint64_t)&_mh_execute_header, v47, (uint64_t)"Throwing lastBoardOpenCrashed for board UUID: @%", 48, 2, v42);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
      sub_100629DC8(&qword_101677088, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCache.CacheError);
      swift_allocError();
      sub_100629CE0(v50, v48, type metadata accessor for CRLBoardPreviewImageCache.Item);
    }
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_100629D48(v28, type metadata accessor for CRLBoardViewModelMetadata);
    uint64_t v39 = type metadata accessor for CRLBoardIdentifier;
    uint64_t v40 = v27;
    return sub_100629D48(v40, v39);
  }
  sub_100629D48((uint64_t)v16, type metadata accessor for CRLBoardPreviewImageCache.Item);
  if (qword_10166FA68 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v18 = (void *)static OS_os_log.crlBoardPreviewImageCache;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v19 = swift_initStackObject();
  *(_OWORD *)(v19 + 16) = xmmword_10117E810;
  id v20 = v18;
  uint64_t v21 = v50;
  unint64_t v22 = sub_1006103B4();
  uint64_t v24 = v23;
  *(void *)(v19 + 56) = &type metadata for String;
  *(void *)(v19 + 64) = sub_100528BE4();
  *(void *)(v19 + 32) = v22;
  *(void *)(v19 + 40) = v24;
  uint64_t v25 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v20, (uint64_t)&_mh_execute_header, v25, (uint64_t)"Throwing unsupportedItemType for item: @%", 41, 2, v19);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
  sub_100629DC8(&qword_101677088, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCache.CacheError);
  swift_allocError();
  sub_100629CE0(v21, v26, type metadata accessor for CRLBoardPreviewImageCache.Item);
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

id sub_10061D684()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache____lazy_storage___defaultUnsupportedImage;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache____lazy_storage___defaultUnsupportedImage);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache____lazy_storage___defaultUnsupportedImage);
  }
  else
  {
    id v4 = sub_10061D6E4();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_10061D6E4()
{
  id v0 = [self tintColor];
  uint64_t v1 = self;
  id v2 = [v1 configurationWithPointSize:7 weight:48.0];
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_101177E70;
  *(void *)(v3 + 32) = v0;
  specialized Array._endMutation()();
  sub_10050BF48(0, (unint64_t *)&qword_101687FC0);
  id v4 = v2;
  id v5 = v0;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v7 = [v1 configurationWithPaletteColors:isa];

  id v8 = [v4 configurationByApplyingConfiguration:v7];
  id v9 = v8;
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [self systemImageNamed:v10 withConfiguration:v9];

  if (v11)
  {
    [v11 size];
    CGFloat v13 = v12 + v12;
    [v11 size];
    CGFloat v15 = v14 + v14;
    [v11 size];
    CGFloat v17 = (v13 - v16) * 0.5;
    [v11 size];
    CGFloat v19 = (v15 - v18) * 0.5;
    [v11 size];
    double v21 = v20;
    [v11 size];
    double v23 = v22;
    v29.double width = v13;
    v29.double height = v15;
    UIGraphicsBeginImageContextWithOptions(v29, 0, 2.0);
    [v11 drawInRect:v17, v19, v21, v23];
    uint64_t v24 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    id v25 = objc_allocWithZone((Class)CRLImage);
    if (v24)
    {
      id v26 = [v25 initWithUIImage:v24];
    }
    else
    {
      id v26 = [v25 init];
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"defaultUnsupportedImage", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 810, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v28) = 2;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"defaultUnsupportedImage", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 810);
    id v26 = [objc_allocWithZone((Class)CRLImage) init:invalid nil found when unwrapping value:39:v28];
  }

  return v26;
}

uint64_t type metadata accessor for CRLBoardPreviewImageCache()
{
  return self;
}

uint64_t sub_10061DAC0()
{
  return type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
}

uint64_t type metadata accessor for CRLBoardPreviewImageCache.LookupKey(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_101676E08);
}

uint64_t sub_10061DAE8()
{
  uint64_t result = type metadata accessor for CRLBoardPreviewImageCache.Item(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLBoardPreviewImageCache.Item(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101677000);
}

uint64_t type metadata accessor for CRLBoardPreviewImageCache.CacheEntry()
{
  return self;
}

id sub_10061DBD4(void *a1)
{
  if (qword_10166ED90 != -1) {
    swift_once();
  }
  id v2 = [(id)qword_10171A168 UIColor];
  [v2 setFill];

  double v3 = sub_100064070();

  return [a1 fillRect:v3];
}

uint64_t sub_10061DC8C(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v67 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v62 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v64 = (uint64_t)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = v7;
  __chkstk_darwin(v8, v9);
  uint64_t v65 = (uint64_t)&v58 - v10;
  uint64_t v11 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v11, v12);
  double v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  double v18 = (char *)&v58 - v17;
  if (qword_10166FA68 != -1) {
    swift_once();
  }
  swift_beginAccess();
  CGFloat v19 = (void *)static OS_os_log.crlBoardPreviewImageCache;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v21 = v19;
  uint64_t v22 = sub_100612640();
  uint64_t v24 = v23;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v22;
  *(void *)(inited + 40) = v24;
  uint64_t v25 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v21, (uint64_t)&_mh_execute_header, v25, (uint64_t)"Starting imaging task for: %@", 29, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_100629CE0(a1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item, (uint64_t)v18, type metadata accessor for CRLBoardPreviewImageCache.Item);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 16) == 1)
  {
    id v26 = &dbl_101183F80[*(void *)(a1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass)];
    double v27 = *v26;
  }
  else
  {
    id v26 = (double *)(a1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 8);
    double v27 = *(double *)(a1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass);
  }
  double v28 = *v26;
  double v29 = *(double *)(a1 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale);
  if (qword_10166ED90 != -1) {
    swift_once();
  }
  uint64_t v30 = qword_10171A168;
  double v31 = sub_1000646A4(v27, v28, v29);
  uint64_t v33 = v32;
  sub_100629CE0((uint64_t)v18, (uint64_t)v14, type metadata accessor for CRLBoardPreviewImageCache.Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    uint64_t v61 = v18;
    Swift::String v60 = (void *)v30;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v35 = v65;
      sub_10062DB08((uint64_t)v14, v65, type metadata accessor for CRLBoardIdentifier);
      long long v36 = 0uLL;
      char v37 = 1;
      long long v38 = 0uLL;
    }
    else
    {
      uint64_t v41 = sub_1005057FC(&qword_10169FA80);
      uint64_t v42 = &v14[*(int *)(v41 + 48)];
      id v43 = &v14[*(int *)(v41 + 64)];
      long long v59 = *(_OWORD *)v43;
      long long v58 = *((_OWORD *)v43 + 1);
      uint64_t v35 = v65;
      sub_10062DB08((uint64_t)v14, v65, type metadata accessor for CRLBoardIdentifier);
      uint64_t v44 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t))(*(void *)(v44 - 8) + 8))(v42, v44);
      long long v38 = v58;
      long long v36 = v59;
      char v37 = 0;
    }
    v68[0] = v36;
    v68[1] = v38;
    char v69 = v37;
    uint64_t v45 = (uint64_t)v67;
    static TaskPriority.background.getter();
    uint64_t v46 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 0, 1, v46);
    uint64_t v47 = v64;
    sub_100629CE0(v35, v64, type metadata accessor for CRLBoardIdentifier);
    unint64_t v48 = (*(unsigned __int8 *)(v62 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
    unint64_t v49 = (v63 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v50 = (v49 + 15) & 0xFFFFFFFFFFFFFFF8;
    double v51 = (void *)swift_allocObject();
    v51[2] = 0;
    v51[3] = 0;
    id v52 = v66;
    v51[4] = v66;
    sub_10062DB08(v47, (uint64_t)v51 + v48, type metadata accessor for CRLBoardIdentifier);
    Swift::String v53 = v60;
    *(void *)((char *)v51 + v49) = v60;
    uint64_t v54 = (double *)((char *)v51 + v50);
    *uint64_t v54 = v31;
    *((void *)v54 + 1) = v33;
    sub_1005FCB30((uint64_t)v68, (uint64_t)v51 + ((v50 + 23) & 0xFFFFFFFFFFFFFFF8));
    id v55 = v52;
    id v56 = v53;
    uint64_t v40 = sub_10061F090(v45, (uint64_t)&unk_1016770D8, (uint64_t)v51);
    sub_100522F00(v45, &qword_101672BB0);
    sub_100629D48(v35, type metadata accessor for CRLBoardIdentifier);
    sub_100629D48((uint64_t)v61, type metadata accessor for CRLBoardPreviewImageCache.Item);
  }
  else
  {
    type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
    sub_100629DC8(&qword_101677088, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCache.CacheError);
    swift_allocError();
    sub_100629CE0((uint64_t)v18, v39, type metadata accessor for CRLBoardPreviewImageCache.Item);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    uint64_t v40 = (uint64_t)type metadata accessor for CRLBoardPreviewImageCache.Item;
    sub_100629D48((uint64_t)v18, type metadata accessor for CRLBoardPreviewImageCache.Item);
    sub_100629D48((uint64_t)v14, type metadata accessor for CRLBoardPreviewImageCache.Item);
  }
  return v40;
}

uint64_t sub_10061E398(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 + 104) = a9;
  *(double *)(v9 + 88) = a2;
  *(double *)(v9 + 96) = a3;
  *(void *)(v9 + 72) = a7;
  *(void *)(v9 + 80) = a8;
  *(void *)(v9 + 56) = a1;
  *(void *)(v9 + 64) = a6;
  type metadata accessor for CRLBoardIdentifier(0);
  *(void *)(v9 + 112) = swift_task_alloc();
  return _swift_task_switch(sub_10061E434, 0, 0);
}

uint64_t sub_10061E434()
{
  v0[15] = *(void *)(v0[8] + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_boardLibrary);
  v0[16] = type metadata accessor for MainActor();
  v0[17] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10061E4E0, v2, v1);
}

uint64_t sub_10061E4E0()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[9];
  swift_release();
  sub_100629CE0(v3, v1, type metadata accessor for CRLBoardIdentifier);
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  type metadata accessor for CRLBoardActor();
  uint64_t v5 = swift_allocObject();
  v0[18] = v5;
  id v6 = v4;
  swift_defaultActor_initialize();
  sub_10062DB08(v1, v5 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
  *(void *)(v5 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store) = v6;
  return _swift_task_switch(sub_10061E5EC, v5, 0);
}

uint64_t sub_10061E5EC()
{
  uint64_t v1 = *(void *)(v0 + 144);
  type metadata accessor for CRLImmutableBoard(0);
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store);
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v4;
  void *v4 = v0;
  v4[1] = sub_10061E6B8;
  return sub_1006D9650(v2, v3, 1);
}

uint64_t sub_10061E6B8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 160) = a1;
  *(void *)(v3 + 168) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_10061EA08;
  }
  else {
    uint64_t v4 = sub_10061E7CC;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10061E7CC()
{
  uint64_t v1 = *(void *)(v0 + 160);
  id v2 = [objc_allocWithZone((Class)CRLCanvasImager) initWithBoard:v1];
  *(void *)(v0 + 176) = v2;
  uint64_t v3 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  uint64_t v4 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  uint64_t v5 = *(double **)&v3[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
  uint64_t v6 = v3;
  if (!v5)
  {
    sub_100846AB0();
    uint64_t v5 = *(double **)&v3[v4];
  }
  if (v5) {
    unint64_t v7 = (unint64_t)v5;
  }
  else {
    unint64_t v7 = (unint64_t)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 >> 62)
  {
    sub_1005057FC(&qword_101673060);
    _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  }

  uint64_t v8 = *(void *)(v0 + 104);
  double v10 = *(double *)(v0 + 88);
  double v9 = *(double *)(v0 + 96);
  uint64_t v11 = *(void *)(v0 + 80);
  swift_bridgeObjectRelease();
  sub_1005057FC(&qword_101673060);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 setInfos:isa];

  [v2 setBackgroundColor:v11];
  [v2 setScaledImageSize:v10, v9];
  sub_1005FCB30(v8, v0 + 16);
  if ((*(unsigned char *)(v0 + 48) & 1) == 0) {
    [v2 setUnscaledClipRect:*(double *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40)];
  }
  *(void *)(v0 + 184) = OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_imagerQueue;
  *(void *)(v0 + 192) = static MainActor.shared.getter();
  uint64_t v14 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10061EA78, v14, v13);
}

uint64_t sub_10061EA08()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10061EA78()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[8];
  swift_release();
  uint64_t v3 = *(void *)(v2 + v1);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[25] = v4;
  void *v4 = v0;
  v4[1] = sub_10061EB1C;
  return sub_10056AF20(v3);
}

uint64_t sub_10061EB1C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 208) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10061EC1C, 0, 0);
}

uint64_t sub_10061EC1C()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = static MainActor.shared.getter();
  if (v1)
  {
    v0[27] = v2;
    uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v5 = v4;
    uint64_t v6 = sub_10061ECE8;
  }
  else
  {
    v0[30] = v2;
    uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v5 = v7;
    uint64_t v6 = sub_10061EF6C;
  }
  return _swift_task_switch(v6, v3, v5);
}

uint64_t sub_10061ECE8()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_release();
  *(void *)(v0 + 224) = *(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_assetDownloadHelper);
  swift_retain();
  return _swift_task_switch(sub_10061ED6C, 0, 0);
}

uint64_t sub_10061ED6C()
{
  uint64_t v1 = *(void *)(v0 + 224);
  id v2 = [*(id *)(v0 + 176) previousRenderDatasNeedingDownload];
  type metadata accessor for CRLAsset();
  sub_100629DC8(qword_101675B00, (void (*)(uint64_t))type metadata accessor for CRLAsset);
  *(void *)(v0 + 232) = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  return _swift_task_switch(sub_10061EE4C, v1, 0);
}

uint64_t sub_10061EE4C()
{
  sub_1005ED3F4(*(void *)(v0 + 232), *(char **)(v0 + 160));
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_task_switch(sub_10061EECC, 0, 0);
}

uint64_t sub_10061EECC()
{
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = *(void **)(v0 + 160);
  uint64_t v3 = *(void **)(v0 + 56);

  swift_release();
  *uint64_t v3 = v1;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10061EF6C()
{
  double v2 = v0[11];
  double v1 = v0[12];
  swift_release();
  *((void *)v0 + 31) = sub_10062D8E8(v2, v1);
  return _swift_task_switch(sub_10061EFF0, 0, 0);
}

uint64_t sub_10061EFF0()
{
  uint64_t v1 = *(void *)(v0 + 248);
  double v2 = *(void **)(v0 + 160);
  uint64_t v3 = *(void **)(v0 + 56);

  swift_release();
  *uint64_t v3 = v1;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10061F090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100522E9C(a1, (uint64_t)v8, &qword_101672BB0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100522F00((uint64_t)v8, &qword_101672BB0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  sub_10050BF48(0, (unint64_t *)&qword_101677090);
  if (v13 | v11)
  {
    v15[0] = 0;
    v15[1] = 0;
    v15[2] = v11;
    uint64_t v15[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_10061F26C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100522E9C(a1, (uint64_t)v8, &qword_101672BB0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100522F00((uint64_t)v8, &qword_101672BB0);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
  }
  swift_getObjectType();
  swift_unknownObjectRetain();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  uint64_t v13 = v12;
  swift_unknownObjectRelease();
  if (v13 | v11)
  {
    v15[0] = 0;
    v15[1] = 0;
    v15[2] = v11;
    uint64_t v15[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_10061F43C(uint64_t a1)
{
  v2[126] = v1;
  v2[125] = a1;
  sub_1005057FC(&qword_101672BB0);
  v2[127] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v2[128] = v3;
  v2[129] = *(void *)(v3 - 8);
  v2[130] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v2[131] = swift_task_alloc();
  v2[132] = type metadata accessor for MainActor();
  v2[133] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[134] = v5;
  v2[135] = v4;
  return _swift_task_switch(sub_10061F598, v5, v4);
}

uint64_t sub_10061F598()
{
  long long v58 = v0;
  uint64_t v1 = v0[131];
  uint64_t v2 = v0[125];
  uint64_t v3 = OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item;
  v0[136] = OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item;
  uint64_t v4 = v2 + v3;
  uint64_t v5 = 0;
  sub_10061CEC8(v2 + v3, v1);
  uint64_t v6 = sub_10062104C(v0[125]);
  if (!v6)
  {
    if (qword_10166FA68 != -1) {
      goto LABEL_31;
    }
    goto LABEL_16;
  }
  uint64_t v10 = 0;
  uint64_t v5 = v6;
  while (1)
  {
    v0[138] = v10;
    v0[137] = v5;
    uint64_t v11 = v0[126];
    uint64_t v12 = v0[125];
    uint64_t v13 = *(void **)(v11 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cache);
    swift_retain();
    [v13 setObject:v5 forKey:v12];
    uint64_t v55 = *(void *)(v12 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 8);
    Swift::Int v56 = *(void *)(v12 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass);
    char v54 = *(unsigned char *)(v12 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 16);
    double v14 = *(double *)(v12 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale);
    uint64_t v15 = (void *)(v11 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cachedSizes);
    swift_beginAccess();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v57 = (void *)*v15;
    uint64_t v17 = v57;
    *uint64_t v15 = 0x8000000000000000;
    unint64_t v19 = sub_100956A4C(v4);
    uint64_t v20 = v17[2];
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (!__OFADD__(v20, v21)) {
      break;
    }
    __break(1u);
LABEL_31:
    swift_once();
LABEL_16:
    uint64_t v26 = v0[125];
    swift_beginAccess();
    double v27 = (void *)static OS_os_log.crlBoardPreviewImageCache;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v29 = v27;
    uint64_t v30 = sub_100612640();
    uint64_t v32 = v31;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v30;
    *(void *)(inited + 40) = v32;
    uint64_t v33 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v29, (uint64_t)&_mh_execute_header, v33, (uint64_t)"Unable to restore cache entry from persistent file: %@", 54, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v34 = sub_10061DC8C(v26);
    if (v5)
    {
      uint64_t v7 = v0[131];
      swift_release();
      sub_100629D48(v7, type metadata accessor for CRLBoardIdentifier);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v8 = (uint64_t (*)(void))v0[1];
      return v8();
    }
    uint64_t v10 = v34;
    uint64_t v35 = (void *)v0[125];
    type metadata accessor for CRLBoardPreviewImageCache.CacheEntry();
    uint64_t v5 = swift_allocObject();
    id v36 = v35;
    swift_defaultActor_initialize();
    *(unsigned char *)(v5 + 128) = 0x80;
    *(void *)(v5 + 112) = v36;
    *(void *)(v5 + 120) = 0;
    swift_retain();
  }
  char v23 = v18;
  if (v17[3] >= v22)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10097E064();
      uint64_t v17 = v57;
    }
  }
  else
  {
    sub_10096265C(v22, isUniquelyReferenced_nonNull_native);
    uint64_t v17 = v57;
    unint64_t v24 = sub_100956A4C(v4);
    if ((v23 & 1) != (v25 & 1))
    {
      return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    }
    unint64_t v19 = v24;
  }
  *uint64_t v15 = v17;
  swift_bridgeObjectRelease();
  char v37 = (void *)*v15;
  swift_bridgeObjectRetain();
  if ((v23 & 1) == 0)
  {
    uint64_t v38 = v0[130];
    sub_100629CE0(v4, v38, type metadata accessor for CRLBoardPreviewImageCache.Item);
    sub_10097A858(v19, v38, (uint64_t)&_swiftEmptySetSingleton, v37);
  }
  swift_bridgeObjectRelease();
  sub_100CB9668((uint64_t)&v57, v56, v55, v54, v14);
  swift_endAccess();
  if (v10)
  {
    uint64_t v39 = qword_10166FA68;
    swift_retain();
    if (v39 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v40 = (void *)static OS_os_log.crlBoardPreviewImageCache;
    v0[139] = sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v41 = swift_initStackObject();
    *(_OWORD *)(v41 + 16) = xmmword_10117E810;
    id v42 = v40;
    uint64_t v43 = UUID.uuidString.getter();
    uint64_t v45 = v44;
    *(void *)(v41 + 56) = &type metadata for String;
    unint64_t v46 = sub_100528BE4();
    v0[140] = v46;
    *(void *)(v41 + 64) = v46;
    *(void *)(v41 + 32) = v43;
    *(void *)(v41 + 40) = v45;
    uint64_t v47 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v42, (uint64_t)&_mh_execute_header, v47, (uint64_t)"Starting board thumbnail generation for board UUID: %@", 54, 2, v41);
    swift_setDeallocating();
    v0[141] = sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    return _swift_task_switch(sub_10061FC80, v5, 0);
  }
  else
  {
    uint64_t v48 = v0[129];
    uint64_t v49 = v0[125] + v0[136];
    sub_1005057FC(&qword_101677078);
    unint64_t v50 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
    uint64_t v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_10117E810;
    sub_100629CE0(v49, v51 + v50, type metadata accessor for CRLBoardPreviewImageCache.Item);
    id v52 = sub_100509124(v51);
    v0[145] = v52;
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    Swift::String v53 = (void *)swift_task_alloc();
    v0[146] = v53;
    void *v53 = v0;
    v53[1] = sub_100620464;
    return sub_100615DBC((uint64_t)v52);
  }
}

uint64_t sub_10061FC80()
{
  uint64_t v1 = v0[137];
  int v2 = *(unsigned __int8 *)(v1 + 128);
  if ((v2 & 0xC0) == 0x80 && (v2 == 128 ? (BOOL v3 = *(void *)(v1 + 120) == 0) : (BOOL v3 = 0), v3))
  {
    uint64_t v6 = v0[138];
    *(void *)(v1 + 120) = v6;
    *(unsigned char *)(v1 + 128) = 0;
    swift_retain();
    sub_100626B64(0, 0x80u);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[143] = v7;
    uint64_t v8 = sub_10050BF48(0, (unint64_t *)&qword_101677090);
    uint64_t v9 = sub_1005057FC(&qword_101672BD0);
    *uint64_t v7 = v0;
    v7[1] = sub_10061FF28;
    return Task.result.getter(v0 + 123, v6, v8, v9, &protocol self-conformance witness table for Error);
  }
  else
  {
    type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
    sub_100629DC8(&qword_101677088, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCache.CacheError);
    v0[142] = swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    uint64_t v4 = v0[135];
    uint64_t v5 = v0[134];
    return _swift_task_switch(sub_10061FE5C, v5, v4);
  }
}

uint64_t sub_10061FE5C()
{
  uint64_t v1 = *(void *)(v0 + 1048);
  swift_release();
  swift_release_n();
  swift_release_n();
  sub_100629D48(v1, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10061FF28()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1096);
  swift_task_dealloc();
  return _swift_task_switch(sub_100620038, v1, 0);
}

uint64_t sub_100620038()
{
  uint64_t v1 = *(void *)(v0 + 1096);
  char v2 = *(unsigned char *)(v0 + 992) | 0x40;
  uint64_t v3 = *(void **)(v1 + 120);
  *(void *)(v1 + 120) = *(void *)(v0 + 984);
  unsigned __int8 v4 = *(unsigned char *)(v1 + 128);
  *(unsigned char *)(v1 + 128) = v2;
  sub_100626B64(v3, v4);
  uint64_t v5 = *(void *)(v0 + 1080);
  uint64_t v6 = *(void *)(v0 + 1072);
  return _swift_task_switch(sub_1006200BC, v6, v5);
}

uint64_t sub_1006200BC()
{
  uint64_t v1 = v0[140];
  uint64_t v2 = v0[137];
  uint64_t v3 = v0[127];
  unsigned __int8 v4 = (void *)v0[126];
  uint64_t v5 = (void *)static OS_os_log.crlBoardPreviewImageCache;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v7 = v5;
  uint64_t v8 = UUID.uuidString.getter();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 32) = v8;
  *(void *)(inited + 40) = v9;
  uint64_t v10 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Finished generating board thumbnail for board UUID: %@", 54, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  static TaskPriority.background.getter();
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v3, 0, 1, v11);
  id v12 = v4;
  swift_retain();
  uint64_t v13 = static MainActor.shared.getter();
  double v14 = (void *)swift_allocObject();
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = v12;
  v14[5] = v2;
  v0[144] = sub_1005912D0(v3, (uint64_t)&unk_1016770A8, (uint64_t)v14);
  sub_100522D34(&qword_1016770C0);
  swift_asyncLet_begin();
  return _swift_asyncLet_finish(v0 + 2, (char *)v0 + 993, sub_1006202F0, v0 + 82);
}

uint64_t sub_1006202F0()
{
  return _swift_task_switch(sub_10062030C, *(void *)(v0 + 1072), *(void *)(v0 + 1080));
}

uint64_t sub_10062030C()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0[129];
  uint64_t v2 = v0[125] + v0[136];
  sub_1005057FC(&qword_101677078);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117E810;
  sub_100629CE0(v2, v4 + v3, type metadata accessor for CRLBoardPreviewImageCache.Item);
  uint64_t v5 = sub_100509124(v4);
  v0[145] = v5;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[146] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100620464;
  return sub_100615DBC((uint64_t)v5);
}

uint64_t sub_100620464()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 1080);
  uint64_t v3 = *(void *)(v1 + 1072);
  return _swift_task_switch(sub_1006205A8, v3, v2);
}

uint64_t sub_1006205A8()
{
  uint64_t v1 = v0[131];
  swift_release();
  swift_release();
  swift_release();
  sub_100629D48(v1, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v3 = v0[137];
  return v2(v3);
}

uint64_t sub_100620678(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  v2[9] = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[12] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[13] = v4;
  v2[14] = v3;
  return _swift_task_switch(sub_100620750, v4, v3);
}

uint64_t sub_100620750()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[7];
  uint64_t v3 = OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item;
  v0[15] = OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item;
  uint64_t v4 = v2 + v3;
  sub_100629CE0(v2 + v3, v1, type metadata accessor for CRLBoardPreviewImageCache.Item);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = (void *)v0[7];
    uint64_t v7 = v5 + *(int *)(sub_1005057FC(&qword_10169FA80) + 48);
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    sub_100629D48(v5, type metadata accessor for CRLBoardIdentifier);
    type metadata accessor for CRLBoardPreviewImageCache.CacheEntry();
    uint64_t v9 = swift_allocObject();
    v0[16] = v9;
    id v10 = v6;
    swift_defaultActor_initialize();
    *(unsigned char *)(v9 + 128) = 0x80;
    *(void *)(v9 + 112) = v10;
    *(void *)(v9 + 120) = 0;
    v0[17] = sub_10061DC8C((uint64_t)v10);
    return _swift_task_switch(sub_1006209E4, v9, 0);
  }
  else
  {
    sub_100629D48(v0[11], type metadata accessor for CRLBoardPreviewImageCache.Item);
    swift_release();
    type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
    sub_100629DC8(&qword_101677088, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCache.CacheError);
    swift_allocError();
    sub_100629CE0(v4, v11, type metadata accessor for CRLBoardPreviewImageCache.Item);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    id v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_1006209E4()
{
  uint64_t v1 = v0[16];
  int v2 = *(unsigned __int8 *)(v1 + 128);
  if ((v2 & 0xC0) == 0x80 && (v2 == 128 ? (BOOL v3 = *(void *)(v1 + 120) == 0) : (BOOL v3 = 0), v3))
  {
    *(void *)(v1 + 120) = v0[17];
    *(unsigned char *)(v1 + 128) = 0;
    swift_retain();
    sub_100626B64(0, 0x80u);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[19] = v6;
    uint64_t v7 = sub_10050BF48(0, (unint64_t *)&qword_101677090);
    uint64_t v8 = sub_1005057FC(&qword_101672BD0);
    *uint64_t v6 = v0;
    v6[1] = sub_100620C34;
    uint64_t v9 = v0[17];
    return Task.result.getter(v0 + 5, v9, v7, v8, &protocol self-conformance witness table for Error);
  }
  else
  {
    type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
    sub_100629DC8(&qword_101677088, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCache.CacheError);
    v0[18] = swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    uint64_t v4 = v0[13];
    uint64_t v5 = v0[14];
    return _swift_task_switch(sub_100620BAC, v4, v5);
  }
}

uint64_t sub_100620BAC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100620C34()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 128);
  swift_task_dealloc();
  return _swift_task_switch(sub_100620D44, v1, 0);
}

uint64_t sub_100620D44()
{
  uint64_t v1 = *(void *)(v0 + 128);
  char v2 = *(unsigned char *)(v0 + 48) | 0x40;
  uint64_t v3 = *(void **)(v1 + 120);
  *(void *)(v1 + 120) = *(void *)(v0 + 40);
  unsigned __int8 v4 = *(unsigned char *)(v1 + 128);
  *(unsigned char *)(v1 + 128) = v2;
  sub_100626B64(v3, v4);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 112);
  return _swift_task_switch(sub_100620DC4, v5, v6);
}

uint64_t sub_100620DC4()
{
  double v27 = v0;
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  swift_release();
  uint64_t v5 = v3 + v2;
  [*(id *)(v4 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cache) setObject:v1 forKey:v3];
  Swift::Int v6 = *(void *)(v3 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass);
  uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 8);
  char v8 = *(unsigned char *)(v3 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 16);
  double v9 = *(double *)(v3 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale);
  id v10 = (void *)(v4 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cachedSizes);
  swift_beginAccess();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v26 = (void *)*v10;
  id v12 = v26;
  void *v10 = 0x8000000000000000;
  unint64_t v14 = sub_100956A4C(v5);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    return result;
  }
  char v18 = v13;
  if (v12[3] >= result)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10097E064();
      id v12 = v26;
    }
  }
  else
  {
    uint64_t v19 = v0[7] + v0[15];
    sub_10096265C(result, isUniquelyReferenced_nonNull_native);
    id v12 = v26;
    unint64_t v20 = sub_100956A4C(v19);
    if ((v18 & 1) != (v21 & 1))
    {
      return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    }
    unint64_t v14 = v20;
  }
  void *v10 = v12;
  swift_bridgeObjectRelease();
  uint64_t v22 = (void *)*v10;
  swift_bridgeObjectRetain();
  if ((v18 & 1) == 0)
  {
    uint64_t v23 = v0[10];
    sub_100629CE0(v0[7] + v0[15], v23, type metadata accessor for CRLBoardPreviewImageCache.Item);
    sub_10097A858(v14, v23, (uint64_t)&_swiftEmptySetSingleton, v22);
  }
  swift_bridgeObjectRelease();
  sub_100CB9668((uint64_t)&v26, v6, v7, v8, v9);
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v24 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v25 = v0[16];
  return v24(v25);
}

uint64_t sub_10062104C(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v3 - 8, v4);
  Swift::Int v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v27 - v14;
  sub_100617464((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100522F00((uint64_t)v6, &qword_101672E90);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v15, v6, v7);
  sub_100612754();
  URL.appendingPathComponent(_:isDirectory:)();
  swift_bridgeObjectRelease();
  id v16 = [self defaultManager];
  if ((URL.isFileURL.getter() & 1) == 0)
  {

LABEL_10:
    unint64_t v24 = *(void (**)(char *, uint64_t))(v8 + 8);
    v24(v11, v7);
    v24(v15, v7);
    return 0;
  }
  char v29 = 0;
  URL.path.getter();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v18 = [v16 fileExistsAtPath:v17 isDirectory:&v29];

  if (v18 & 1) == 0 || (v29) {
    goto LABEL_10;
  }
  uint64_t v19 = Data.init(contentsOf:options:)();
  if (v1)
  {
    uint64_t v23 = *(void *)(v8 + 8);
    ((void (*)(char *, uint64_t))v23)(v11, v7);
    ((void (*)(char *, uint64_t))v23)(v15, v7);
  }
  else
  {
    uint64_t v21 = v19;
    unint64_t v22 = v20;
    type metadata accessor for CRLBoardPreviewImageCache.CacheEntry();
    uint64_t v23 = swift_allocObject();
    sub_100510D4C(v21, v22);
    sub_100613A04(v21, v22);
    id v28 = *(id *)(v23 + 112);
    sub_10060E790((uint64_t)v28, a1, (uint64_t)&_mh_execute_header, (uint64_t)"cacheEntryFromPersistenceDirectoryData(for:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2u, 1021);
    sub_100510084(v21, v22);

    uint64_t v26 = *(void (**)(char *, uint64_t))(v8 + 8);
    v26(v11, v7);
    v26(v15, v7);
  }
  return v23;
}

uint64_t sub_100621410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = type metadata accessor for MainActor();
  v5[3] = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_task_alloc();
  v5[4] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_10053DCA8;
  return sub_100616E14(a5);
}

uint64_t sub_1006214CC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1005C08E4;
  return Task.result.getter(a1, a2, (char *)&type metadata for () + 8, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_10062158C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v40 = a1;
  uint64_t v5 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t *)(a3 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cachedSizes);
  swift_beginAccess();
  uint64_t v10 = *v9;
  uint64_t v11 = *(void *)(v10 + 16);
  uint64_t v41 = a2;
  if (v11)
  {
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_100956A4C(a2);
    if (v13)
    {
      uint64_t v14 = *(char **)(*(void *)(v10 + 56) + 8 * v12);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v14 = (char *)&_swiftEmptySetSingleton;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = (char *)&_swiftEmptySetSingleton;
  }
  int64_t v15 = 0;
  uint64_t v42 = (uint64_t)v14;
  uint64_t v18 = *((void *)v14 + 7);
  NSString v17 = v14 + 56;
  uint64_t v16 = v18;
  uint64_t v19 = 1 << *(v17 - 24);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v16;
  uint64_t v38 = v17;
  int64_t v39 = (unint64_t)(v19 + 63) >> 6;
  while (1)
  {
    if (v21)
    {
      unint64_t v22 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v23 = v22 | (v15 << 6);
      uint64_t result = v42;
      goto LABEL_11;
    }
    int64_t v34 = v15 + 1;
    uint64_t result = v42;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v34 >= v39) {
      return swift_release();
    }
    unint64_t v35 = *(void *)&v38[8 * v34];
    ++v15;
    if (!v35)
    {
      int64_t v15 = v34 + 1;
      if (v34 + 1 >= v39) {
        return swift_release();
      }
      unint64_t v35 = *(void *)&v38[8 * v15];
      if (!v35)
      {
        int64_t v15 = v34 + 2;
        if (v34 + 2 >= v39) {
          return swift_release();
        }
        unint64_t v35 = *(void *)&v38[8 * v15];
        if (!v35) {
          break;
        }
      }
    }
LABEL_26:
    unint64_t v21 = (v35 - 1) & v35;
    unint64_t v23 = __clz(__rbit64(v35)) + (v15 << 6);
LABEL_11:
    uint64_t v25 = *(void *)(result + 48) + 32 * v23;
    uint64_t v27 = *(void *)v25;
    uint64_t v26 = *(void *)(v25 + 8);
    char v28 = *(unsigned char *)(v25 + 16);
    uint64_t v29 = *(void *)(v25 + 24);
    sub_100629CE0(v41, (uint64_t)v8, type metadata accessor for CRLBoardPreviewImageCache.Item);
    uint64_t v30 = (objc_class *)type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
    uint64_t v31 = (char *)objc_allocWithZone(v30);
    sub_100629CE0((uint64_t)v8, (uint64_t)&v31[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item], type metadata accessor for CRLBoardPreviewImageCache.Item);
    uint64_t v32 = &v31[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass];
    *(void *)uint64_t v32 = v27;
    *((void *)v32 + 1) = v26;
    v32[16] = v28;
    *(void *)&v31[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale] = v29;
    v43.receiver = v31;
    v43.super_class = v30;
    id v33 = [super init];
    sub_100629D48((uint64_t)v8, type metadata accessor for CRLBoardPreviewImageCache.Item);
    sub_100CBA264(&v44, v33);
  }
  int64_t v36 = v34 + 3;
  if (v36 >= v39) {
    return swift_release();
  }
  unint64_t v35 = *(void *)&v38[8 * v36];
  if (v35)
  {
    int64_t v15 = v36;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v15 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v15 >= v39) {
      return swift_release();
    }
    unint64_t v35 = *(void *)&v38[8 * v15];
    ++v36;
    if (v35) {
      goto LABEL_26;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10062189C(uint64_t a1)
{
  v2[24] = a1;
  v2[25] = v1;
  type metadata accessor for MainActor();
  v2[26] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100621934, v4, v3);
}

uint64_t sub_100621934()
{
  uint64_t v1 = *(void *)(v0 + 192);
  swift_release();
  if (*(void *)(v1 + 16))
  {
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0) {
      goto LABEL_40;
    }
LABEL_3:
    uint64_t v2 = &_swiftEmptySetSingleton;
LABEL_4:
    uint64_t v3 = *(void *)(v0 + 192);
    id v4 = *(id *)(v0 + 200);
    uint64_t v5 = sub_10062A214((uint64_t)v2, v3, (uint64_t)v4);

    uint64_t v34 = v5;
    if ((v5 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      __CocoaSet.makeIterator()();
      type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
      sub_100629DC8(&qword_101677428, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCache.LookupKey);
      Set.Iterator.init(_cocoa:)();
      uint64_t v5 = *(void *)(v0 + 120);
      uint64_t v36 = *(void *)(v0 + 128);
      uint64_t v6 = *(void *)(v0 + 136);
      uint64_t v7 = *(void *)(v0 + 144);
      unint64_t v8 = *(void *)(v0 + 152);
    }
    else
    {
      uint64_t v9 = -1 << *(unsigned char *)(v5 + 32);
      uint64_t v36 = v5 + 56;
      uint64_t v10 = ~v9;
      uint64_t v11 = -v9;
      if (v11 < 64) {
        uint64_t v12 = ~(-1 << v11);
      }
      else {
        uint64_t v12 = -1;
      }
      unint64_t v8 = v12 & *(void *)(v5 + 56);
      swift_bridgeObjectRetain();
      uint64_t v6 = v10;
      uint64_t v7 = 0;
    }
    int64_t v35 = (unint64_t)(v6 + 64) >> 6;
    while ((v5 & 0x8000000000000000) == 0)
    {
      if (v8)
      {
        uint64_t v16 = (v8 - 1) & v8;
        unint64_t v17 = __clz(__rbit64(v8)) | (v7 << 6);
        uint64_t v15 = v7;
      }
      else
      {
        int64_t v18 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
          __break(1u);
LABEL_40:
          if (_CocoaArrayWrapper.endIndex.getter())
          {
            sub_100509A14((unint64_t)_swiftEmptyArrayStorage);
            uint64_t v2 = v33;
            goto LABEL_4;
          }
          goto LABEL_3;
        }
        if (v18 >= v35) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v36 + 8 * v18);
        uint64_t v15 = v7 + 1;
        if (!v19)
        {
          uint64_t v15 = v7 + 2;
          if (v7 + 2 >= v35) {
            goto LABEL_33;
          }
          unint64_t v19 = *(void *)(v36 + 8 * v15);
          if (!v19)
          {
            uint64_t v15 = v7 + 3;
            if (v7 + 3 >= v35) {
              goto LABEL_33;
            }
            unint64_t v19 = *(void *)(v36 + 8 * v15);
            if (!v19)
            {
              uint64_t v15 = v7 + 4;
              if (v7 + 4 >= v35) {
                goto LABEL_33;
              }
              unint64_t v19 = *(void *)(v36 + 8 * v15);
              if (!v19)
              {
                uint64_t v20 = v7 + 5;
                while (v35 != v20)
                {
                  unint64_t v19 = *(void *)(v36 + 8 * v20++);
                  if (v19)
                  {
                    uint64_t v15 = v20 - 1;
                    goto LABEL_29;
                  }
                }
                goto LABEL_33;
              }
            }
          }
        }
LABEL_29:
        uint64_t v16 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v15 << 6);
      }
      id v14 = *(id *)(*(void *)(v5 + 48) + 8 * v17);
      if (!v14) {
        goto LABEL_33;
      }
LABEL_31:
      uint64_t v21 = *(void *)(v0 + 200);
      sub_100621E60();
      [*(id *)(v21 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cache) removeObjectForKey:v14];

      uint64_t v7 = v15;
      unint64_t v8 = v16;
    }
    uint64_t v13 = __CocoaSet.Iterator.next()();
    if (v13)
    {
      *(void *)(v0 + 184) = v13;
      type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v14 = *(id *)(v0 + 176);
      swift_unknownObjectRelease();
      uint64_t v15 = v7;
      uint64_t v16 = v8;
      if (v14) {
        goto LABEL_31;
      }
    }
LABEL_33:
    uint64_t v22 = *(void *)(v0 + 200);
    sub_10052E1EC();
    unint64_t v23 = *(void *)(*(void *)(v22 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_boardLibrary)
                    + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
    swift_bridgeObjectRetain();
    unint64_t v24 = sub_100628970(v34, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_100CDD514((uint64_t)v24);
    swift_bridgeObjectRelease();
    id v26 = [self defaultCenter];
    if (qword_10166ED88 != -1) {
      swift_once();
    }
    uint64_t v27 = *(void *)(v0 + 200);
    uint64_t v28 = qword_10171A160;
    sub_1005057FC(&qword_101677430);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(v0 + 160) = 0xD00000000000001DLL;
    *(void *)(v0 + 168) = 0x8000000101240F90;
    AnyHashable.init<A>(_:)();
    *(void *)(inited + 96) = sub_1005057FC((uint64_t *)&unk_101677438);
    *(void *)(inited + 72) = v25;
    sub_100A393A8(inited);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v26 postNotificationName:v28 object:v27 userInfo:isa];
  }
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_100621E60()
{
  uint64_t v0 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  unint64_t v50 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v51 = (char *)&v46 - v10;
  if (qword_10166FA68 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v11 = (void *)static OS_os_log.crlBoardPreviewImageCache;
  uint64_t v48 = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v13 = v11;
  uint64_t v14 = sub_100612640();
  uint64_t v16 = v15;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v49 = sub_100528BE4();
  *(void *)(inited + 64) = v49;
  *(void *)(inited + 32) = v14;
  *(void *)(inited + 40) = v16;
  uint64_t v17 = static os_log_type_t.info.getter();
  sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v17, (uint64_t)"Removing asset from disk storage: %@", 36, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_100617464((uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_100522F00((uint64_t)v3, &qword_101672E90);
  }
  uint64_t v19 = v4;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v51, v3, v4);
  uint64_t v20 = v50;
  sub_100612D30();
  uint64_t v32 = self;
  id v33 = [v32 defaultManager];
  if ((URL.isFileURL.getter() & 1) == 0)
  {

    goto LABEL_12;
  }
  uint64_t v47 = v5;
  LOBYTE(v52[0]) = 0;
  URL.path.getter();
  NSString v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v35 = [v33 fileExistsAtPath:v34 isDirectory:v52];

  if ((v35 & 1) == 0)
  {
    uint64_t v5 = v47;
    uint64_t v20 = v50;
    goto LABEL_12;
  }
  uint64_t v5 = v47;
  uint64_t v20 = v50;
  if ((uint64_t)v52[0])
  {
LABEL_12:
    id v44 = *(void (**)(char *, uint64_t))(v5 + 8);
    v44(v20, v4);
    return ((uint64_t (*)(char *, uint64_t))v44)(v51, v4);
  }
  id v36 = [v32 defaultManager];
  URL._bridgeToObjectiveC()(v37);
  int64_t v39 = v38;
  v52[0] = 0;
  uint64_t v40 = v20;
  unsigned int v41 = [v36 removeItemAtURL:v38 error:v52];

  if (v41)
  {
    uint64_t v42 = *(void (**)(char *, uint64_t))(v47 + 8);
    id v43 = v52[0];
    v42(v40, v4);
    return ((uint64_t (*)(char *, uint64_t))v42)(v51, v4);
  }
  else
  {
    id v45 = v52[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v40, v4);
    uint64_t v21 = (void *)static OS_os_log.crlBoardPreviewImageCache;
    uint64_t v22 = swift_initStackObject();
    *(_OWORD *)(v22 + 16) = xmmword_10117D8C0;
    swift_getErrorValue();
    id v23 = v52[6];
    id v24 = v52[7];
    id v25 = v21;
    uint64_t v26 = Error.publicDescription.getter((uint64_t)v23, (uint64_t)v24);
    unint64_t v27 = v49;
    *(void *)(v22 + 56) = &type metadata for String;
    *(void *)(v22 + 64) = v27;
    *(void *)(v22 + 32) = v26;
    *(void *)(v22 + 40) = v28;
    swift_getErrorValue();
    uint64_t v29 = Error.fullDescription.getter((uint64_t)v52[2]);
    *(void *)(v22 + 96) = &type metadata for String;
    *(void *)(v22 + 104) = v27;
    *(void *)(v22 + 72) = v29;
    *(void *)(v22 + 80) = v30;
    uint64_t v31 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v25, (uint64_t)&_mh_execute_header, v31, (uint64_t)"Error removing CacheEntry on disk storage: %{public}@ <%@>", 58, 2, v22);
    swift_setDeallocating();
    swift_arrayDestroy();

    swift_errorRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v51, v19);
  }
}

uint64_t sub_1006223F4(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(double *)(v5 + 96) = a1;
  *(void *)(v5 + 80) = a4;
  *(void *)(v5 + 88) = a5;
  *(void *)(v5 + 72) = a3;
  sub_1005057FC(&qword_101672BB0);
  *(void *)(v5 + 104) = swift_task_alloc();
  *(void *)(v5 + 112) = swift_task_alloc();
  uint64_t v6 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  *(void *)(v5 + 120) = v6;
  *(void *)(v5 + 128) = *(void *)(v6 + 64);
  *(void *)(v5 + 136) = swift_task_alloc();
  *(void *)(v5 + 144) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  *(void *)(v5 + 152) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v5 + 160) = v8;
  *(void *)(v5 + 168) = *(void *)(v8 + 64);
  *(void *)(v5 + 176) = swift_task_alloc();
  *(void *)(v5 + 184) = swift_task_alloc();
  *(void *)(v5 + 192) = swift_task_alloc();
  *(void *)(v5 + 200) = swift_task_alloc();
  type metadata accessor for MainActor();
  swift_bridgeObjectRetain();
  *(void *)(v5 + 208) = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1006225DC, v10, v9);
}

uint64_t sub_1006225DC()
{
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v46 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t result = swift_release();
  int64_t v5 = 0;
  uint64_t v47 = v3 + 56;
  uint64_t v6 = -1;
  uint64_t v7 = -1 << *(unsigned char *)(v3 + 32);
  if (-v7 < 64) {
    uint64_t v6 = ~(-1 << -(char)v7);
  }
  unint64_t v8 = v6 & *(void *)(v3 + 56);
  int64_t v48 = (unint64_t)(63 - v7) >> 6;
  uint64_t v45 = v1 + 7;
  uint64_t v44 = v2;
  uint64_t v43 = v3;
  while (1)
  {
    if (v8)
    {
      uint64_t v52 = (v8 - 1) & v8;
      unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
      goto LABEL_22;
    }
    int64_t v11 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
LABEL_36:
      __break(1u);
      return result;
    }
    if (v11 >= v48) {
      goto LABEL_32;
    }
    unint64_t v12 = *(void *)(v47 + 8 * v11);
    ++v5;
    if (!v12)
    {
      int64_t v5 = v11 + 1;
      if (v11 + 1 >= v48) {
        goto LABEL_32;
      }
      unint64_t v12 = *(void *)(v47 + 8 * v5);
      if (!v12)
      {
        int64_t v5 = v11 + 2;
        if (v11 + 2 >= v48) {
          goto LABEL_32;
        }
        unint64_t v12 = *(void *)(v47 + 8 * v5);
        if (!v12) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v52 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v5 << 6);
LABEL_22:
    uint64_t v14 = *(void *)(v0 + 192);
    uint64_t v15 = *(void *)(v0 + 200);
    uint64_t v16 = *(void *)(v0 + 184);
    sub_100629CE0(*(void *)(v3 + 48) + *(void *)(v2 + 72) * v10, v15, type metadata accessor for CRLBoardPreviewImageCache.Item);
    sub_10062DB08(v15, v14, type metadata accessor for CRLBoardPreviewImageCache.Item);
    sub_100629CE0(v14, v16, type metadata accessor for CRLBoardPreviewImageCache.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v18 = *(void *)(v0 + 192);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v19 = *(void *)(v0 + 176);
      uint64_t v20 = *(void *)(v0 + 136);
      uint64_t v21 = *(void *)(v0 + 144);
      uint64_t v49 = v19;
      uint64_t v22 = *(void *)(v0 + 112);
      uint64_t v50 = v22;
      uint64_t v51 = *(void *)(v0 + 104);
      uint64_t v23 = *(void *)(v0 + 96);
      sub_10062DB08(*(void *)(v0 + 184), v21, type metadata accessor for CRLBoardIdentifier);
      uint64_t v24 = v2;
      uint64_t v25 = type metadata accessor for TaskPriority();
      uint64_t v26 = *(void *)(v25 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v22, 1, 1, v25);
      uint64_t v27 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_100629CE0(v18, v19, type metadata accessor for CRLBoardPreviewImageCache.Item);
      uint64_t v28 = v20;
      sub_100629CE0(v21, v20, type metadata accessor for CRLBoardIdentifier);
      unint64_t v29 = (*(unsigned __int8 *)(v24 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      unint64_t v30 = (v45 + v29) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v31 = (*(unsigned __int8 *)(v46 + 80) + v30 + 8) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
      uint64_t v32 = (void *)swift_allocObject();
      v32[2] = 0;
      v32[3] = 0;
      v32[4] = v27;
      sub_10062DB08(v49, (uint64_t)v32 + v29, type metadata accessor for CRLBoardPreviewImageCache.Item);
      *(void *)((char *)v32 + v30) = v23;
      sub_10062DB08(v28, (uint64_t)v32 + v31, type metadata accessor for CRLBoardIdentifier);
      sub_100522E9C(v50, v51, &qword_101672BB0);
      int v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v51, 1, v25);
      uint64_t v34 = *(void *)(v0 + 104);
      if (v33 == 1)
      {
        sub_100522F00(*(void *)(v0 + 104), &qword_101672BB0);
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v34, v25);
      }
      uint64_t v3 = v43;
      uint64_t v2 = v44;
      if (v32[2])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v35 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v37 = v36;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v35 = 0;
        uint64_t v37 = 0;
      }
      uint64_t v38 = **(void **)(v0 + 72);
      uint64_t v39 = v37 | v35;
      if (v37 | v35)
      {
        uint64_t v39 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v35;
        *(void *)(v0 + 40) = v37;
      }
      uint64_t v40 = *(void *)(v0 + 144);
      uint64_t v41 = *(void *)(v0 + 112);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v39;
      *(void *)(v0 + 64) = v38;
      swift_task_create();
      swift_release();
      sub_100522F00(v41, &qword_101672BB0);
      sub_100629D48(v40, type metadata accessor for CRLBoardIdentifier);
      uint64_t v9 = (uint64_t *)(v0 + 192);
    }
    else
    {
      sub_100629D48(*(void *)(v0 + 192), type metadata accessor for CRLBoardPreviewImageCache.Item);
      uint64_t v9 = (uint64_t *)(v0 + 184);
    }
    unint64_t v8 = v52;
    uint64_t result = sub_100629D48(*v9, type metadata accessor for CRLBoardPreviewImageCache.Item);
  }
  int64_t v13 = v11 + 3;
  if (v13 < v48)
  {
    unint64_t v12 = *(void *)(v47 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v5 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_36;
        }
        if (v5 >= v48) {
          goto LABEL_32;
        }
        unint64_t v12 = *(void *)(v47 + 8 * v5);
        ++v13;
        if (v12) {
          goto LABEL_21;
        }
      }
    }
    int64_t v5 = v13;
    goto LABEL_21;
  }
LABEL_32:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v42 = *(uint64_t (**)(void))(v0 + 8);
  return v42();
}

uint64_t sub_100622BF4(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 80) = a7;
  *(double *)(v7 + 72) = a1;
  *(void *)(v7 + 56) = a5;
  *(void *)(v7 + 64) = a6;
  sub_1005057FC((uint64_t *)&unk_1016741D0);
  *(void *)(v7 + 88) = swift_task_alloc();
  type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  *(void *)(v7 + 96) = swift_task_alloc();
  return _swift_task_switch(sub_100622CBC, 0, 0);
}

uint64_t sub_100622CBC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 104) = Strong;
  if (Strong)
  {
    uint64_t v2 = *(void *)(v0 + 96);
    uint64_t v3 = *(void *)(v0 + 72);
    sub_100629CE0(*(void *)(v0 + 64), v2, type metadata accessor for CRLBoardPreviewImageCache.Item);
    uint64_t v4 = (objc_class *)type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
    int64_t v5 = (char *)objc_allocWithZone(v4);
    sub_100629CE0(v2, (uint64_t)&v5[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item], type metadata accessor for CRLBoardPreviewImageCache.Item);
    uint64_t v6 = &v5[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass];
    *(_OWORD *)uint64_t v6 = xmmword_101182E60;
    v6[16] = 1;
    *(void *)&v5[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale] = v3;
    *(void *)(v0 + 40) = v5;
    *(void *)(v0 + 48) = v4;
    [v0 init];
    *(void *)(v0 + 112) = v7;
    sub_100629D48(v2, type metadata accessor for CRLBoardPreviewImageCache.Item);
    unint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v8;
    *unint64_t v8 = v0;
    v8[1] = sub_100622E98;
    return sub_100617930((uint64_t)v7);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_100622E98(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 128) = a1;
  *(void *)(v4 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    int64_t v5 = sub_100623748;
    uint64_t v6 = 0;
  }
  else
  {

    int64_t v5 = sub_100622FD0;
    uint64_t v6 = a1;
  }
  return _swift_task_switch(v5, v6, 0);
}

uint64_t sub_100622FD0()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void **)(v1 + 120);
  *(void *)(v0 + 144) = v2;
  unsigned int v3 = *(unsigned __int8 *)(v1 + 128);
  *(unsigned char *)(v0 + 224) = v3;
  if (v3 >> 6)
  {
    if (v3 >> 6 == 1)
    {
      uint64_t v4 = (uint64_t)v2;
      if ((v3 & 1) == 0)
      {
        sub_100626B48(v2, 0);
        int64_t v5 = sub_10062322C;
        goto LABEL_8;
      }
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"imageIfExists", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 381, (uint64_t)"The cache entry is still in the .ready state", 44, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"imageIfExists", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 381);
      type metadata accessor for CRLBoardPreviewImageCache.CacheError(0);
      sub_100629DC8(&qword_101677088, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCache.CacheError);
      uint64_t v4 = swift_allocError();
      swift_storeEnumTagMultiPayload();
    }
    *(void *)(v0 + 208) = v4;
    sub_100626B24(v2, v3);
    swift_willThrow();
    int64_t v5 = sub_1006233E0;
  }
  else
  {
    int64_t v5 = sub_1006231AC;
  }
LABEL_8:
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1006231AC()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10062322C()
{
  uint64_t v1 = (void *)v0[18];
  uint64_t v2 = *(void **)(v0[13] + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_boardLibrary);
  v0[19] = v2;
  id v3 = v2;
  id v4 = [v1 PNGRepresentation];
  uint64_t v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  v0[20] = v5;
  v0[21] = v7;
  type metadata accessor for MainActor();
  v0[22] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[23] = v9;
  v0[24] = v8;
  return _swift_task_switch(sub_100623314, v9, v8);
}

uint64_t sub_100623314(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3[19] + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_entityStore);
  v3[25] = v4;
  if (v4)
  {
    uint64_t v5 = v3[11];
    uint64_t v6 = type metadata accessor for CRLBoardViewModelMetadata(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
    swift_retain();
    a1 = sub_10062345C;
    a2 = v4;
    a3 = 0;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(a1, a2, a3);
}

uint64_t sub_1006233E0()
{
  uint64_t v1 = *(void **)(v0 + 104);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10062345C()
{
  uint64_t v1 = v0[17];
  sub_100FCCB5C(v0[10], 0, 0, v0[11], v0[20], v0[21]);
  v0[27] = v1;
  sub_100522F00(v0[11], (uint64_t *)&unk_1016741D0);
  swift_release();
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[24];
  if (v1) {
    uint64_t v4 = sub_100623630;
  }
  else {
    uint64_t v4 = sub_100623510;
  }
  return _swift_task_switch(v4, v2, v3);
}

uint64_t sub_100623510()
{
  unint64_t v1 = v0[21];
  uint64_t v3 = (void *)v0[19];
  uint64_t v2 = v0[20];
  swift_release();
  sub_100510084(v2, v1);

  return _swift_task_switch(sub_100623594, 0, 0);
}

uint64_t sub_100623594()
{
  unint64_t v1 = *(void **)(v0 + 144);
  unsigned __int8 v2 = *(unsigned char *)(v0 + 224);

  swift_release();
  sub_100626B64(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100623630()
{
  swift_release();
  return _swift_task_switch(sub_100623698, 0, 0);
}

uint64_t sub_100623698()
{
  uint64_t v1 = *(void **)(v0 + 144);
  unsigned __int8 v2 = *(void **)(v0 + 152);
  uint64_t v3 = *(void **)(v0 + 104);
  unsigned __int8 v4 = *(unsigned char *)(v0 + 224);
  sub_100510084(*(void *)(v0 + 160), *(void *)(v0 + 168));

  sub_100626B64(v1, v4);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100623748()
{
  uint64_t v1 = *(void **)(v0 + 104);

  swift_task_dealloc();
  swift_task_dealloc();
  unsigned __int8 v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1006237C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8, v8);
  unint64_t v10 = (char *)v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)v85 - v13;
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)v85 - v17;
  unint64_t v19 = *(void *)(*(void *)(a1 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_boardLibrary)
                  + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_100624218();
  int v93 = v10;
  uint64_t v88 = a1;
  long long v89 = v20;
  uint64_t v100 = &_swiftEmptySetSingleton;
  unint64_t v96 = v19;
  uint64_t v92 = v19;
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v33 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v91 = v7;
  uint64_t v94 = v14;
  if (v33)
  {
    uint64_t v90 = 0;
    id v95 = v5 + 8;
    uint64_t v34 = &selRef_beginHandwritingModeIfNeeded;
    uint64_t v35 = &OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item;
    unint64_t v36 = v92;
    while (1)
    {
      unint64_t v37 = v36 >> 62;
      if (v36 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t result = swift_bridgeObjectRelease();
        if (!v40)
        {
          __break(1u);
          return result;
        }
        swift_bridgeObjectRetain();
        uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v42) {
          goto LABEL_47;
        }
      }
      else if (!*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
        swift_once();
        swift_beginAccess();
        uint64_t v21 = (void *)static OS_os_log.crlBoardPreviewImageCache;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
        swift_getErrorValue();
        uint64_t v23 = v98;
        uint64_t v24 = v99;
        id v25 = v21;
        uint64_t v26 = Error.publicDescription.getter(v23, v24);
        uint64_t v28 = v27;
        *(void *)(inited + 56) = &type metadata for String;
        unint64_t v29 = sub_100528BE4();
        *(void *)(inited + 64) = v29;
        *(void *)(inited + 32) = v26;
        *(void *)(inited + 40) = v28;
        swift_getErrorValue();
        uint64_t v30 = Error.fullDescription.getter(v97);
        *(void *)(inited + 96) = &type metadata for String;
        *(void *)(inited + 104) = v29;
        *(void *)(inited + 72) = v30;
        *(void *)(inited + 80) = v31;
        uint64_t v32 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v25, (uint64_t)&_mh_execute_header, v32, (uint64_t)"Error removing stranded cache entries from on disk storage. %{public}@ <%@>", 75, 2, inited);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        return swift_errorRelease();
      }
      if ((v36 & 0xC000000000000001) != 0)
      {
        id v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        if (v37) {
          goto LABEL_15;
        }
      }
      else
      {
        if (!*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_48;
        }
        id v38 = *(id *)(v36 + 32);
        if (v37)
        {
LABEL_15:
          swift_bridgeObjectRetain();
          uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
      }
      uint64_t v39 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_16:
      if (!v39) {
        goto LABEL_52;
      }
      sub_100F4CA70(0, 1);
      id v43 = [v38 v34[498]];
      type metadata accessor for CRLBoardLibraryViewModelItemNode();
      unint64_t v44 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1006E0C58(v44);
      sub_100629CE0((uint64_t)v38 + *v35, (uint64_t)v5, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        sub_1005057FC(&qword_101677100);
        swift_bridgeObjectRelease();
        sub_10062DB08((uint64_t)v5, (uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
        uint64_t v45 = (uint64_t)v93;
        sub_100629CE0((uint64_t)v18, (uint64_t)v93, type metadata accessor for CRLBoardIdentifier);
        uint64_t v46 = v35;
        uint64_t v47 = v34;
        uint64_t v48 = (uint64_t)v94;
        sub_100CB7090((uint64_t)v94, v45);
        uint64_t v49 = v48;
        uint64_t v34 = v47;
        uint64_t v35 = v46;
        sub_100629D48(v49, type metadata accessor for CRLBoardIdentifier);
        uint64_t v50 = (uint64_t)v18;
        uint64_t v51 = type metadata accessor for CRLBoardIdentifier;
      }
      else
      {
        uint64_t v51 = type metadata accessor for CRLBoardLibraryViewModel.Item;
        uint64_t v50 = (uint64_t)v5;
      }
      sub_100629D48(v50, v51);

      unint64_t v36 = v96;
      if (v96 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v52 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v52)
        {
LABEL_24:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v53 = v100;
          uint64_t v7 = v91;
          uint64_t v14 = v94;
          goto LABEL_26;
        }
      }
      else if (!*(void *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_24;
      }
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v53 = &_swiftEmptySetSingleton;
LABEL_26:
  char v54 = v89;
  uint64_t v55 = swift_bridgeObjectRetain();
  uint64_t v56 = sub_10062D238(v55, (uint64_t)v53);
  swift_bridgeObjectRelease();
  if (qword_10166FA68 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v57 = (void *)static OS_os_log.crlBoardPreviewImageCache;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v58 = swift_initStackObject();
  *(_OWORD *)(v58 + 16) = xmmword_10117D8C0;
  *(void *)(v58 + 32) = *(void *)(v56 + 16);
  *(void *)(v58 + 56) = &type metadata for Int;
  *(void *)(v58 + 64) = &protocol witness table for Int;
  long long v87 = (void *)v58;
  int64_t v59 = *(void *)(v56 + 16);
  uint64_t v92 = v56;
  if (v59)
  {
    v85[1] = v58 + 32;
    unint64_t v96 = (unint64_t)_swiftEmptyArrayStorage;
    long long v86 = v57;
    id v60 = v57;
    sub_1006BB504(0, v59, 0);
    uint64_t v61 = sub_100F27B7C(v56);
    uint64_t v63 = v62;
    int v65 = v64 & 1;
    uint64_t v90 = v56 + 56;
    while ((v61 & 0x8000000000000000) == 0 && v61 < 1 << *(unsigned char *)(v56 + 32))
    {
      if (((*(void *)(v90 + (((unint64_t)v61 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v61) & 1) == 0) {
        goto LABEL_50;
      }
      if (*(_DWORD *)(v56 + 36) != v63) {
        goto LABEL_51;
      }
      LODWORD(v95) = v65;
      sub_100629CE0(*(void *)(v56 + 48) + *(void *)(v7 + 72) * v61, (uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
      uint64_t v66 = (uint64_t)v93;
      sub_10062DB08((uint64_t)v14, (uint64_t)v93, type metadata accessor for CRLBoardIdentifier);
      uint64_t v67 = UUID.uuidString.getter();
      uint64_t v69 = v68;
      sub_100629D48(v66, type metadata accessor for CRLBoardIdentifier);
      uint64_t v70 = (double *)v96;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB504(0, *((void *)v70 + 2) + 1, 1);
        uint64_t v70 = (double *)v96;
      }
      unint64_t v72 = *((void *)v70 + 2);
      unint64_t v71 = *((void *)v70 + 3);
      if (v72 >= v71 >> 1)
      {
        sub_1006BB504(v71 > 1, v72 + 1, 1);
        uint64_t v70 = (double *)v96;
      }
      *((void *)v70 + 2) = v72 + 1;
      uint64_t v73 = &v70[2 * v72];
      *((void *)v73 + 4) = v67;
      *((void *)v73 + 5) = v69;
      uint64_t v56 = v92;
      uint64_t v74 = sub_100666C8C(v61, v63, v95 & 1, v92);
      uint64_t v61 = v74;
      uint64_t v63 = v75;
      int v65 = v76 & 1;
      --v59;
      uint64_t v7 = v91;
      uint64_t v14 = v94;
      if (!v59)
      {
        sub_10056A4C4(v74, v75, v65);
        char v54 = v89;
        uint64_t v57 = v86;
        goto LABEL_41;
      }
    }
    goto LABEL_49;
  }
  id v77 = v57;
  uint64_t v70 = _swiftEmptyArrayStorage;
LABEL_41:
  unint64_t v96 = (unint64_t)v70;
  sub_1005057FC((uint64_t *)&unk_1016773F0);
  sub_100523288((unint64_t *)&qword_101672620, (uint64_t *)&unk_1016773F0);
  uint64_t v78 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v80 = v79;
  swift_bridgeObjectRelease();
  char v81 = v87;
  v87[12] = &type metadata for String;
  v81[13] = sub_100528BE4();
  v81[9] = v78;
  v81[10] = v80;
  uint64_t v82 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v57, (uint64_t)&_mh_execute_header, v82, (uint64_t)"removeStrandedCacheEntriesInOnDiskStorage, about to remove images for %d board UUIDs: %@", 88, 2, (uint64_t)v81);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v83 = v92;
  uint64_t v84 = *(void *)(v92 + 16);
  if (v84)
  {
    if (v84 == v54[2])
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"removeStrandedCacheEntriesInOnDiskStorage()", 43, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 1174, (uint64_t)"Removing _all_ cached board images.", 35, 2u, (uint64_t)_swiftEmptyArrayStorage);
      uint64_t v83 = v92;
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"removeStrandedCacheEntriesInOnDiskStorage()", 43, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 1174);
    }
    swift_bridgeObjectRelease();
    sub_100624B78(v83);
    return swift_release();
  }
  else
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

void *sub_100624218()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v96 = (uint64_t)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v95 = (uint64_t)&v88 - v11;
  __chkstk_darwin(v12, v13);
  uint64_t v94 = (uint64_t)&v88 - v14;
  __chkstk_darwin(v15, v16);
  uint64_t v93 = (uint64_t)&v88 - v17;
  __chkstk_darwin(v18, v19);
  uint64_t v92 = (uint64_t)&v88 - v20;
  uint64_t v21 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v21 - 8, v22);
  uint64_t v24 = (char *)&v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v26);
  uint64_t v28 = (char *)&v88 - v27;
  uint64_t v29 = type metadata accessor for URL();
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29, v31);
  uint64_t v33 = (char *)&v88 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34, v35);
  unint64_t v37 = (char *)&v88 - v36;
  id v122 = &_swiftEmptySetSingleton;
  sub_100617464((uint64_t)v28);
  long long v111 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  uint64_t v112 = v30 + 48;
  if (v111(v28, 1, v29) == 1)
  {
    sub_100522F00((uint64_t)v28, &qword_101672E90);
    return &_swiftEmptySetSingleton;
  }
  else
  {
    uint64_t v100 = v33;
    uint64_t v101 = v24;
    long long v108 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    uint64_t v109 = v30 + 32;
    v108(v37, v28, v29);
    id v39 = [self defaultManager];
    URL._bridgeToObjectiveC()(v40);
    uint64_t v42 = v41;
    v123[0] = 0;
    id v43 = [v39 contentsOfDirectoryAtURL:v41 includingPropertiesForKeys:0 options:4 error:v123];

    id v44 = v123[0];
    if (v43)
    {
      long long v89 = v37;
      uint64_t v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
      id v46 = v44;
      uint64_t v47 = v45;

      uint64_t v107 = *(void *)(v45 + 16);
      if (v107)
      {
        unint64_t v48 = 0;
        unint64_t v106 = v45 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
        long long v103 = (void (**)(char *, uint64_t))(v30 + 8);
        uint64_t v104 = v30 + 56;
        uint64_t v105 = v30 + 16;
        unint64_t v88 = (v30 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
        long long v90 = xmmword_10117D8C0;
        uint64_t v98 = v30;
        uint64_t v99 = v29;
        uint64_t v49 = v100;
        uint64_t v50 = v101;
        uint64_t v91 = v5;
        uint64_t v97 = v47;
        while (1)
        {
          if (v48 >= *(void *)(v47 + 16)) {
            __break(1u);
          }
          (*(void (**)(char *, unint64_t, uint64_t))(v30 + 16))(v50, v106 + *(void *)(v30 + 72) * v48, v29);
          long long v102 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
          v102(v50, 0, 1, v29);
          if (v111(v50, 1, v29) == 1) {
            break;
          }
          v108(v49, v50, v29);
          uint64_t v51 = URL.pathComponents.getter();
          uint64_t v52 = *(void *)(v51 + 16);
          if (v52)
          {
            uint64_t v110 = v1;
            uint64_t v53 = v51 + 16 * v52;
            uint64_t v55 = *(void *)(v53 + 16);
            unint64_t v54 = *(void *)(v53 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v56 = HIBYTE(v54) & 0xF;
            if ((v54 & 0x2000000000000000) == 0) {
              uint64_t v56 = v55 & 0xFFFFFFFFFFFFLL;
            }
            if (v56)
            {
              uint64_t v57 = 4 * v56;
              while (1)
              {
                swift_bridgeObjectRetain();
                uint64_t v58 = String.subscript.getter();
                uint64_t v60 = v59;
                swift_bridgeObjectRelease();
                if (v58 == 35 && v60 == 0xE100000000000000) {
                  break;
                }
                char v61 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if ((v61 & 1) != 0 || v57 == (unint64_t)String.index(after:)() >> 14) {
                  goto LABEL_22;
                }
              }
              swift_bridgeObjectRelease();
            }
LABEL_22:
            String.subscript.getter();
            swift_bridgeObjectRelease();
            uint64_t v62 = static String._fromSubstring(_:)();
            uint64_t v64 = v63;
            swift_bridgeObjectRelease();
            uint64_t v120 = v62;
            uint64_t v121 = v64;
            uint64_t v118 = 35;
            unint64_t v119 = 0xE100000000000000;
            uint64_t v116 = 58;
            unint64_t v117 = 0xE100000000000000;
            sub_10052E310();
            uint64_t v65 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
            uint64_t v67 = v66;
            swift_bridgeObjectRelease();
            uint64_t v68 = v110;
            sub_100753CE4(v65, v67, v5);
            uint64_t v1 = v68;
            if (v68)
            {
              if (qword_10166FA68 != -1) {
                swift_once();
              }
              swift_beginAccess();
              uint64_t v69 = (void *)static OS_os_log.crlBoardPreviewImageCache;
              sub_1005057FC((uint64_t *)&unk_101672B40);
              uint64_t inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = v90;
              swift_getErrorValue();
              uint64_t v71 = v114;
              uint64_t v72 = v115;
              id v73 = v69;
              uint64_t v74 = Error.publicDescription.getter(v71, v72);
              uint64_t v76 = v75;
              *(void *)(inited + 56) = &type metadata for String;
              unint64_t v77 = sub_100528BE4();
              *(void *)(inited + 64) = v77;
              *(void *)(inited + 32) = v74;
              *(void *)(inited + 40) = v76;
              swift_getErrorValue();
              uint64_t v78 = Error.fullDescription.getter(v113);
              *(void *)(inited + 96) = &type metadata for String;
              *(void *)(inited + 104) = v77;
              *(void *)(inited + 72) = v78;
              *(void *)(inited + 80) = v79;
              uint64_t v80 = static os_log_type_t.error.getter();
              sub_100BAC898((uint64_t)v73, (uint64_t)&_mh_execute_header, v80, (uint64_t)"Error converting cache path into board identifier. Skipping. %{public}@ <%@>", 76, 2, inited);
              swift_setDeallocating();
              sub_1005057FC(&qword_101672B50);
              swift_arrayDestroy();

              swift_errorRelease();
              uint64_t v1 = 0;
              uint64_t v5 = v91;
            }
            else
            {
              uint64_t v81 = v94;
              sub_10062DB08((uint64_t)v5, v94, type metadata accessor for CRLBoardIdentifierStorage);
              uint64_t v82 = v81;
              uint64_t v83 = v93;
              sub_10062DB08(v82, v93, type metadata accessor for CRLBoardIdentifier);
              uint64_t v84 = v92;
              sub_10062DB08(v83, v92, type metadata accessor for CRLBoardIdentifier);
              uint64_t v85 = v96;
              sub_100629CE0(v84, v96, type metadata accessor for CRLBoardIdentifier);
              uint64_t v86 = v95;
              sub_100CB7090(v95, v85);
              sub_100629D48(v86, type metadata accessor for CRLBoardIdentifier);
              sub_100629D48(v84, type metadata accessor for CRLBoardIdentifier);
            }
            uint64_t v30 = v98;
            uint64_t v29 = v99;
            uint64_t v49 = v100;
            uint64_t v50 = v101;
            uint64_t v47 = v97;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          ++v48;
          (*v103)(v49, v29);
          if (v48 == v107)
          {
            v102(v50, 1, 1, v29);
            break;
          }
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v101, 1, 1, v29);
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v89, v29);
      return v122;
    }
    else
    {
      id v87 = v123[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      return (void *)(*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v37, v29);
    }
  }
}

uint64_t sub_100624B78(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v131 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v129 = (uint64_t)&v121 - v8;
  __chkstk_darwin(v9, v10);
  uint64_t v140 = (uint64_t (**)(char *, uint64_t))((char *)&v121 - v11);
  __chkstk_darwin(v12, v13);
  uint64_t v138 = (uint64_t)&v121 - v14;
  uint64_t v15 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v15 - 8, v16);
  id v146 = (char *)&v121 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v121 - v20;
  uint64_t v22 = type metadata accessor for URL();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v24);
  uint64_t v26 = (double *)((char *)&v121 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v121 - v29;
  sub_100617464((uint64_t)v21);
  uint64_t v144 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  uint64_t v145 = v23 + 48;
  if (v144(v21, 1, v22) == 1) {
    return sub_100522F00((uint64_t)v21, &qword_101672E90);
  }
  uint64_t v141 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  uint64_t v142 = v23 + 32;
  v141(v30, v21, v22);
  if (!*(void *)(a1 + 16)) {
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v30, v22);
  }
  id v135 = self;
  id v32 = [v135 defaultManager];
  URL._bridgeToObjectiveC()(v33);
  uint64_t v35 = v34;
  int64_t v155 = 0;
  id v36 = [v32 contentsOfDirectoryAtURL:v34 includingPropertiesForKeys:0 options:0 error:&v155];

  unint64_t v37 = v155;
  uint64_t v137 = v22;
  uint64_t v128 = v23;
  if (v36)
  {
    CGRect v127 = v5;
    uint64_t v134 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    id v38 = v37;

    if (qword_10166FA68 != -1) {
      goto LABEL_71;
    }
    while (1)
    {
      uint64_t v139 = v26;
      swift_beginAccess();
      id v39 = (void *)static OS_os_log.crlBoardPreviewImageCache;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      *(void *)(inited + 32) = *(void *)(a1 + 16);
      uint64_t v136 = inited + 32;
      *(void *)(inited + 56) = &type metadata for Int;
      *(void *)(inited + 64) = &protocol witness table for Int;
      uint64_t v133 = (void *)inited;
      int64_t v41 = *(void *)(a1 + 16);
      uint64_t v126 = v30;
      uint64_t v130 = a1;
      if (!v41)
      {
        id v58 = v39;
        uint64_t v26 = _swiftEmptyArrayStorage;
        goto LABEL_21;
      }
      int64_t v155 = _swiftEmptyArrayStorage;
      uint64_t v132 = (uint64_t)v39;
      id v42 = v39;
      sub_1006BB504(0, v41, 0);
      uint64_t v22 = sub_100F27B7C(a1);
      uint64_t v44 = v43;
      uint64_t v23 = v45 & 1;
      uint64_t v30 = (char *)(a1 + 56);
      while ((v22 & 0x8000000000000000) == 0 && v22 < 1 << *(unsigned char *)(a1 + 32))
      {
        if (((*(void *)&v30[((unint64_t)v22 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v22) & 1) == 0) {
          goto LABEL_67;
        }
        if (*(_DWORD *)(a1 + 36) != v44) {
          goto LABEL_68;
        }
        uint64_t v46 = v138;
        sub_100629CE0(*(void *)(a1 + 48) + *(void *)(v131 + 72) * v22, v138, type metadata accessor for CRLBoardIdentifier);
        uint64_t v47 = v46;
        unint64_t v48 = v140;
        sub_10062DB08(v47, (uint64_t)v140, type metadata accessor for CRLBoardIdentifier);
        uint64_t v147 = UUID.uuidString.getter();
        uint64_t v143 = v49;
        sub_100629D48((uint64_t)v48, type metadata accessor for CRLBoardIdentifier);
        uint64_t v26 = v155;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB504(0, *((void *)v26 + 2) + 1, 1);
          uint64_t v26 = v155;
        }
        unint64_t v51 = *((void *)v26 + 2);
        unint64_t v50 = *((void *)v26 + 3);
        if (v51 >= v50 >> 1)
        {
          sub_1006BB504(v50 > 1, v51 + 1, 1);
          uint64_t v26 = v155;
        }
        *((void *)v26 + 2) = v51 + 1;
        uint64_t v52 = &v26[2 * v51];
        uint64_t v53 = v143;
        *((void *)v52 + 4) = v147;
        *((void *)v52 + 5) = v53;
        a1 = v130;
        uint64_t v54 = sub_100666C8C(v22, v44, v23 & 1, v130);
        uint64_t v22 = v54;
        uint64_t v44 = v55;
        uint64_t v23 = v56 & 1;
        if (!--v41)
        {
          sub_10056A4C4(v54, v55, v56 & 1);
          uint64_t v22 = v137;
          uint64_t v30 = v126;
          uint64_t v23 = v128;
          id v39 = (void *)v132;
LABEL_21:
          int64_t v155 = v26;
          sub_1005057FC((uint64_t *)&unk_1016773F0);
          sub_100523288((unint64_t *)&qword_101672620, (uint64_t *)&unk_1016773F0);
          uint64_t v59 = BidirectionalCollection<>.joined(separator:)();
          uint64_t v61 = v60;
          swift_bridgeObjectRelease();
          uint64_t v62 = v133;
          v133[12] = &type metadata for String;
          v62[13] = sub_100528BE4();
          v62[9] = v59;
          v62[10] = v61;
          uint64_t v63 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v39, (uint64_t)&_mh_execute_header, v63, (uint64_t)"Removing on disk storage for %d board UUIDs: %@", 47, 2, (uint64_t)v62);
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();

          uint64_t v64 = *(void *)(a1 + 56);
          uint64_t v122 = a1 + 56;
          uint64_t v65 = 1 << *(unsigned char *)(a1 + 32);
          uint64_t v66 = -1;
          if (v65 < 64) {
            uint64_t v66 = ~(-1 << v65);
          }
          unint64_t v67 = v66 & v64;
          int64_t v124 = (unint64_t)(v65 + 63) >> 6;
          uint64_t v143 = v23 + 16;
          uint64_t v147 = v23 + 56;
          uint64_t v140 = (uint64_t (**)(char *, uint64_t))(v23 + 8);
          swift_bridgeObjectRetain();
          uint64_t v68 = 0;
          uint64_t v69 = (uint64_t)v127;
          uint64_t v26 = v139;
          while (1)
          {
            if (v67)
            {
              uint64_t v132 = (v67 - 1) & v67;
              uint64_t v133 = v68;
              unint64_t v72 = __clz(__rbit64(v67)) | ((void)v68 << 6);
            }
            else
            {
              int64_t v73 = (int64_t)v68 + 1;
              if (__OFADD__(v68, 1)) {
                goto LABEL_69;
              }
              if (v73 >= v124)
              {
LABEL_61:
                swift_release();
                swift_bridgeObjectRelease();
                return (*v140)(v30, v22);
              }
              unint64_t v74 = *(void *)(v122 + 8 * v73);
              int64_t v75 = (int64_t)v68 + 1;
              if (!v74)
              {
                int64_t v75 = (int64_t)v68 + 2;
                if ((uint64_t)v68 + 2 >= v124) {
                  goto LABEL_61;
                }
                unint64_t v74 = *(void *)(v122 + 8 * v75);
                if (!v74)
                {
                  int64_t v75 = (int64_t)v68 + 3;
                  if ((uint64_t)v68 + 3 >= v124) {
                    goto LABEL_61;
                  }
                  unint64_t v74 = *(void *)(v122 + 8 * v75);
                  if (!v74)
                  {
                    uint64_t v76 = (uint64_t)v68 + 4;
                    if ((uint64_t)v68 + 4 >= v124) {
                      goto LABEL_61;
                    }
                    unint64_t v74 = *(void *)(v122 + 8 * v76);
                    if (!v74)
                    {
                      while (1)
                      {
                        int64_t v75 = v76 + 1;
                        if (__OFADD__(v76, 1)) {
                          goto LABEL_70;
                        }
                        if (v75 >= v124) {
                          goto LABEL_61;
                        }
                        unint64_t v74 = *(void *)(v122 + 8 * v75);
                        ++v76;
                        if (v74) {
                          goto LABEL_42;
                        }
                      }
                    }
                    int64_t v75 = (int64_t)v68 + 4;
                  }
                }
              }
LABEL_42:
              uint64_t v132 = (v74 - 1) & v74;
              uint64_t v133 = (void *)v75;
              unint64_t v72 = __clz(__rbit64(v74)) + (v75 << 6);
            }
            uint64_t v77 = v129;
            sub_100629CE0(*(void *)(a1 + 48) + *(void *)(v131 + 72) * v72, v129, type metadata accessor for CRLBoardIdentifier);
            sub_10062DB08(v77, v69, type metadata accessor for CRLBoardIdentifier);
            int64_t v155 = (double *)UUID.uuidString.getter();
            uint64_t v156 = v78;
            swift_bridgeObjectRetain();
            v79._countAndFlagsBits = 58;
            v79._object = (void *)0xE100000000000000;
            String.append(_:)(v79);
            swift_bridgeObjectRelease();
            uint64_t v80 = v155;
            uint64_t v81 = v156;
            uint64_t v82 = (uint64_t *)(v69 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
            uint64_t v83 = *v82;
            uint64_t v84 = (void *)v82[1];
            int64_t v155 = v80;
            uint64_t v156 = v81;
            swift_bridgeObjectRetain();
            v85._countAndFlagsBits = v83;
            v85._object = v84;
            String.append(_:)(v85);
            swift_bridgeObjectRelease();
            uint64_t v150 = 58;
            unint64_t v151 = 0xE100000000000000;
            uint64_t v148 = 35;
            unint64_t v149 = 0xE100000000000000;
            sub_10052E310();
            uint64_t v136 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
            uint64_t v138 = v86;
            swift_bridgeObjectRelease();
            uint64_t v87 = *(void *)(v134 + 16);
            if (v87) {
              break;
            }
            uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v147;
            swift_bridgeObjectRetain();
            uint64_t v71 = v146;
LABEL_25:
            v70(v71, 1, 1, v22);
LABEL_26:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v69 = (uint64_t)v127;
            sub_100629D48((uint64_t)v127, type metadata accessor for CRLBoardIdentifier);
            uint64_t v30 = v126;
            uint64_t v23 = v128;
            a1 = v130;
            unint64_t v67 = v132;
            uint64_t v68 = v133;
          }
          unint64_t v125 = v147 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
          unint64_t v88 = v134 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
          uint64_t v89 = *(void *)(v23 + 72);
          long long v90 = *(void (**)(char *, unint64_t, uint64_t))(v23 + 16);
          swift_bridgeObjectRetain();
          uint64_t v71 = v146;
          while (2)
          {
            v90(v71, v88, v22);
            uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v147;
            (*(void (**)(char *, void, uint64_t, uint64_t))v147)(v71, 0, 1, v22);
            if (v144(v71, 1, v22) == 1) {
              goto LABEL_26;
            }
            v141((char *)v26, v71, v22);
            uint64_t v91 = URL.pathComponents.getter();
            uint64_t v92 = *(void *)(v91 + 16);
            if (v92)
            {
              uint64_t v93 = v91 + 16 * v92;
              uint64_t v95 = *(double **)(v93 + 16);
              uint64_t v94 = *(void *)(v93 + 24);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              int64_t v155 = v95;
              uint64_t v156 = v94;
              uint64_t v22 = v137;
              uint64_t v150 = v136;
              unint64_t v151 = v138;
              char v96 = StringProtocol.contains<A>(_:)();
              uint64_t v26 = v139;
              swift_bridgeObjectRelease();
              if (v96)
              {
                id v97 = [v135 defaultManager];
                if (URL.isFileURL.getter())
                {
                  LOBYTE(v155) = 0;
                  URL.path.getter();
                  NSString v98 = String._bridgeToObjectiveC()();
                  swift_bridgeObjectRelease();
                  unsigned __int8 v99 = [v97 fileExistsAtPath:v98 isDirectory:&v155];

                  if (v99)
                  {
                    uint64_t v22 = v137;
                    if ((v155 & 1) == 0)
                    {
                      id v100 = [v135 defaultManager];
                      URL._bridgeToObjectiveC()(v101);
                      long long v103 = v102;
                      int64_t v155 = 0;
                      unsigned int v104 = [v100 removeItemAtURL:v102 error:&v155];

                      if (!v104)
                      {
                        long long v108 = v155;
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease_n();
                        _convertNSErrorToError(_:)();

                        swift_willThrow();
                        (*v140)((char *)v139, v137);
                        sub_100629D48((uint64_t)v127, type metadata accessor for CRLBoardIdentifier);
                        swift_release();
                        uint64_t v30 = v126;
                        goto LABEL_63;
                      }
                      CATransform3D v123 = *v140;
                      uint64_t v105 = v155;
                      unint64_t v106 = v139;
                      uint64_t v22 = v137;
                      v123((char *)v139, v137);
                      uint64_t v26 = v106;
                      goto LABEL_59;
                    }
                  }
                  else
                  {
                    uint64_t v22 = v137;
                  }
                }
                else
                {
                }
                uint64_t v26 = v139;
                uint64_t v107 = (void (**)(double *, uint64_t))v140;
LABEL_58:
                (*v107)(v26, v22);
LABEL_59:
                v88 += v89;
                --v87;
                uint64_t v71 = v146;
                if (!v87) {
                  goto LABEL_25;
                }
                continue;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            break;
          }
          uint64_t v107 = (void (**)(double *, uint64_t))v140;
          goto LABEL_58;
        }
      }
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      swift_once();
    }
  }
  uint64_t v57 = v155;
  _convertNSErrorToError(_:)();

  swift_willThrow();
LABEL_63:
  if (qword_10166FA68 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v109 = (void *)static OS_os_log.crlBoardPreviewImageCache;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v110 = swift_initStackObject();
  *(_OWORD *)(v110 + 16) = xmmword_10117D8C0;
  swift_getErrorValue();
  uint64_t v111 = v153;
  uint64_t v112 = v154;
  id v113 = v109;
  uint64_t v114 = Error.publicDescription.getter(v111, v112);
  uint64_t v116 = v115;
  *(void *)(v110 + 56) = &type metadata for String;
  unint64_t v117 = sub_100528BE4();
  *(void *)(v110 + 64) = v117;
  *(void *)(v110 + 32) = v114;
  *(void *)(v110 + 40) = v116;
  swift_getErrorValue();
  uint64_t v118 = Error.fullDescription.getter(v152);
  *(void *)(v110 + 96) = &type metadata for String;
  *(void *)(v110 + 104) = v117;
  *(void *)(v110 + 72) = v118;
  *(void *)(v110 + 80) = v119;
  uint64_t v120 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v113, (uint64_t)&_mh_execute_header, v120, (uint64_t)"Error removing CacheEntry on disk storage: %{public}@ <%@>", 58, 2, v110);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v128 + 8))(v30, v137);
}

uint64_t sub_1006259D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = type metadata accessor for MainActor();
  v5[3] = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_task_alloc();
  v5[4] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_100540B58;
  return sub_100625A8C(a5);
}

uint64_t sub_100625A8C(uint64_t a1)
{
  v2[15] = a1;
  v2[16] = v1;
  v2[17] = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[20] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[21] = v4;
  v2[22] = v3;
  return _swift_task_switch(sub_100625B8C, v4, v3);
}

uint64_t sub_100625B8C()
{
  uint64_t v57 = v0;
  uint64_t v1 = v0;
  if (qword_10166FA68 != -1) {
    goto LABEL_46;
  }
  while (1)
  {
    uint64_t v2 = v1[15];
    swift_beginAccess();
    uint64_t v3 = (void *)static OS_os_log.crlBoardPreviewImageCache;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    uint64_t v5 = (void *)inited;
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    int64_t v6 = *(void *)(v2 + 16);
    if (!v6) {
      break;
    }
    unint64_t v48 = (void *)inited;
    uint64_t v50 = v2;
    uint64_t v52 = v1[17];
    uint64_t v54 = v1;
    uint64_t v7 = v1[15];
    char v56 = _swiftEmptyArrayStorage;
    uint64_t v49 = v3;
    id v8 = v3;
    sub_1006BB504(0, v6, 0);
    uint64_t v9 = sub_100F27B7C(v7);
    uint64_t v1 = v10;
    char v12 = v11 & 1;
    uint64_t v53 = v7 + 56;
    uint64_t v51 = v7;
    while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(unsigned char *)(v7 + 32))
    {
      if (((*(void *)(v53 + (((unint64_t)v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_40;
      }
      if (*(_DWORD *)(v7 + 36) != v1) {
        goto LABEL_41;
      }
      uint64_t v14 = v54[18];
      uint64_t v13 = v54[19];
      sub_100629CE0(*(void *)(v7 + 48) + *(void *)(v52 + 72) * v9, v13, type metadata accessor for CRLBoardIdentifier);
      sub_10062DB08(v13, v14, type metadata accessor for CRLBoardIdentifier);
      uint64_t v15 = UUID.uuidString.getter();
      uint64_t v17 = v16;
      sub_100629D48(v14, type metadata accessor for CRLBoardIdentifier);
      uint64_t v18 = v56;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB504(0, *((void *)v18 + 2) + 1, 1);
        uint64_t v18 = v56;
      }
      unint64_t v20 = *((void *)v18 + 2);
      unint64_t v19 = *((void *)v18 + 3);
      if (v20 >= v19 >> 1)
      {
        sub_1006BB504(v19 > 1, v20 + 1, 1);
        uint64_t v18 = v56;
      }
      uint64_t v21 = v54[15];
      *((void *)v18 + 2) = v20 + 1;
      uint64_t v22 = &v18[2 * v20];
      *((void *)v22 + 4) = v15;
      *((void *)v22 + 5) = v17;
      uint64_t v23 = sub_100666C8C(v9, v1, v12 & 1, v21);
      uint64_t v9 = v23;
      uint64_t v1 = (void *)v24;
      char v12 = v25 & 1;
      --v6;
      uint64_t v7 = v51;
      if (!v6)
      {
        sub_10056A4C4(v23, v24, v25 & 1);
        uint64_t v1 = v54;
        uint64_t v3 = v49;
        uint64_t v2 = v50;
        uint64_t v5 = v48;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    swift_once();
  }
  id v26 = v3;
  uint64_t v18 = _swiftEmptyArrayStorage;
LABEL_15:
  v1[14] = v18;
  sub_1005057FC((uint64_t *)&unk_1016773F0);
  sub_100523288((unint64_t *)&qword_101672620, (uint64_t *)&unk_1016773F0);
  uint64_t v27 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  _OWORD v5[7] = &type metadata for String;
  v5[8] = sub_100528BE4();
  v5[4] = v27;
  v5[5] = v29;
  uint64_t v30 = static os_log_type_t.info.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v30, (uint64_t)"Called boardsDidChange for board UUIDs: %@", 42, 2, (uint64_t)v5);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  if (*(void *)(v2 + 16))
  {
    uint64_t v31 = *(double **)(*(void *)(v1[16] + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_boardLibrary)
                     + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
    uint64_t v55 = &_swiftEmptySetSingleton;
    char v56 = v31;
    if ((unint64_t)v31 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v46) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v32 = *(void *)(((unint64_t)v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v32)
      {
LABEL_18:
        uint64_t v33 = (id *)v31;
        while (1)
        {
          unint64_t v34 = (unint64_t)v33 >> 62;
          if ((unint64_t)v33 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
            uint64_t result = swift_bridgeObjectRelease();
            if (!v37)
            {
              __break(1u);
              return result;
            }
            swift_bridgeObjectRetain();
            uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (!v39) {
              goto LABEL_43;
            }
          }
          else if (!*(void *)(((unint64_t)v33 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_42;
          }
          if (((unint64_t)v33 & 0xC000000000000001) != 0)
          {
            id v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            if (v34) {
              goto LABEL_29;
            }
          }
          else
          {
            if (!*(void *)(((unint64_t)v33 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_44;
            }
            id v35 = v33[4];
            if (v34)
            {
LABEL_29:
              swift_bridgeObjectRetain();
              uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              goto LABEL_30;
            }
          }
          uint64_t v36 = *(void *)(((unint64_t)v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_30:
          if (!v36) {
            goto LABEL_45;
          }
          uint64_t v40 = v1[15];
          sub_100F4CA70(0, 1);
          id v41 = [v35 children];
          type metadata accessor for CRLBoardLibraryViewModelItemNode();
          unint64_t v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          sub_1006E0C58(v42);
          sub_100626434((uint64_t)&v55, v35, v40);

          uint64_t v33 = (id *)v56;
          if ((unint64_t)v56 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (!v43)
            {
LABEL_35:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v44 = v55;
              goto LABEL_49;
            }
          }
          else if (!*(void *)(((unint64_t)v56 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_35;
          }
        }
      }
    }
    swift_bridgeObjectRelease_n();
    uint64_t v44 = &_swiftEmptySetSingleton;
LABEL_49:
    v1[23] = v44;
    uint64_t v47 = (void *)swift_task_alloc();
    v1[24] = v47;
    *uint64_t v47 = v1;
    v47[1] = sub_100626280;
    return sub_10062189C((uint64_t)v44);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    char v45 = (uint64_t (*)(void))v1[1];
    return v45();
  }
}

uint64_t sub_100626280()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 176);
  uint64_t v3 = *(void *)(v1 + 168);
  return _swift_task_switch(sub_1006263C4, v3, v2);
}

uint64_t sub_1006263C4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100626434(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v40 = a1;
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v37 = (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v38, v8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v39 = (uint64_t)&v37 - v13;
  uint64_t v14 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  char v25 = (char *)&v37 - v24;
  __chkstk_darwin(v26, v27);
  uint64_t v29 = (char *)&v37 - v28;
  sub_100629CE0((uint64_t)a2 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)&v37 - v28, type metadata accessor for CRLBoardLibraryViewModel.Item);
  sub_100629CE0((uint64_t)v29, (uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      id v31 = [a2 children];
      type metadata accessor for CRLBoardLibraryViewModelItemNode();
      unint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      swift_bridgeObjectRetain();
      LOBYTE(v31) = sub_100629078(v32, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v31)
      {
        sub_100629CE0((uint64_t)v29, (uint64_t)v21, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          sub_100629D48((uint64_t)v29, type metadata accessor for CRLBoardLibraryViewModel.Item);
          goto LABEL_12;
        }
        uint64_t v33 = v37;
        sub_10062DB08((uint64_t)v21, v37, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        sub_100629CE0(v33, (uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        swift_storeEnumTagMultiPayload();
        uint64_t v34 = v39;
        sub_100CB93E4(v39, (uint64_t)v10);
        sub_100629D48(v34, type metadata accessor for CRLBoardPreviewImageCache.Item);
        sub_100629D48(v33, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      }
      uint64_t v21 = v29;
LABEL_12:
      sub_100629D48((uint64_t)v21, type metadata accessor for CRLBoardLibraryViewModel.Item);
      return sub_100629D48((uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
    }
    sub_1005057FC(&qword_101677100);
    swift_bridgeObjectRelease();
    sub_10062DB08((uint64_t)v25, (uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
    if (sub_1006E5EA4((uint64_t)v17, a3))
    {
      sub_100629CE0((uint64_t)v17, (uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
      swift_storeEnumTagMultiPayload();
      uint64_t v35 = v39;
      sub_100CB93E4(v39, (uint64_t)v10);
      sub_100629D48(v35, type metadata accessor for CRLBoardPreviewImageCache.Item);
    }
    sub_100629D48((uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
    char v25 = v29;
  }
  else
  {
    sub_100629D48((uint64_t)v29, type metadata accessor for CRLBoardLibraryViewModel.Item);
  }
  return sub_100629D48((uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
}

uint64_t sub_1006268F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  v4[3] = type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  return _swift_task_switch(sub_100626974, a4, 0);
}

uint64_t sub_100626974()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unsigned int v2 = *(unsigned __int8 *)(v1 + 128);
  if (v2 <= 0x3F)
  {
    uint64_t v3 = *(void **)(v1 + 120);
    swift_retain();
    if ((swift_task_isCancelled() & 1) == 0)
    {
      sub_10050BF48(0, (unint64_t *)&qword_101677090);
      sub_1005057FC(&qword_101672BD0);
      Task.cancel()();
    }
    sub_100626B64(v3, v2);
  }
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1005A5EF8, v5, v4);
}

uint64_t initializeBufferWithCopyOfBuffer for CRLBoardPreviewImageCache.CacheEntry.Status(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_100626B24(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_100626B24(id result, unsigned __int8 a2)
{
  if (a2 >> 6 == 1) {
    return sub_100626B48(result, a2 & 1);
  }
  if (!(a2 >> 6)) {
    return (id)swift_retain();
  }
  return result;
}

id sub_100626B48(void *a1, char a2)
{
  if (a2) {
    return (id)swift_errorRetain();
  }
  else {
    return a1;
  }
}

void destroy for CRLBoardPreviewImageCache.CacheEntry.Status(uint64_t a1)
{
}

void sub_100626B64(void *a1, unsigned __int8 a2)
{
  if (a2 >> 6 == 1)
  {
    sub_100541080(a1, a2 & 1);
  }
  else if (!(a2 >> 6))
  {
    swift_release();
  }
}

uint64_t assignWithCopy for CRLBoardPreviewImageCache.CacheEntry.Status(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_100626B24(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_100626B64(v5, v6);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for CRLMiniFormatterStrokeDataProvider.StrokeChangingState(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for CRLBoardPreviewImageCache.CacheEntry.Status(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  unsigned __int8 v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_100626B64(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLBoardPreviewImageCache.CacheEntry.Status(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 8) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CRLBoardPreviewImageCache.CacheEntry.Status(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(unsigned char *)(result + 8) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_100626CD8(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 8);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_100626CF8(uint64_t result)
{
  *(unsigned char *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t sub_100626D08(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(unsigned char *)(result + 8) = *(unsigned char *)(result + 8) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)uint64_t result = a2 - 2;
    *(unsigned char *)(result + 8) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.CacheEntry.Status()
{
  return &type metadata for CRLBoardPreviewImageCache.CacheEntry.Status;
}

uint64_t getEnumTagSinglePayload for CRLBoardPreviewImageCache.ImageSizeClass(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CRLBoardPreviewImageCache.ImageSizeClass(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

uint64_t sub_100626D94(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100626DB0(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 1;
  }
  else
  {
    *(unsigned char *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.ImageSizeClass()
{
  return &type metadata for CRLBoardPreviewImageCache.ImageSizeClass;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.ImageSizeClassAndContentsScale()
{
  return &type metadata for CRLBoardPreviewImageCache.ImageSizeClassAndContentsScale;
}

uint64_t *sub_100626DF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v13 = type metadata accessor for UUID();
      uint64_t v14 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16);
      v14(a1, a2, v13);
      uint64_t v15 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      uint64_t v16 = (uint64_t *)((char *)a1 + v15);
      uint64_t v17 = (uint64_t *)((char *)a2 + v15);
      uint64_t v18 = v17[1];
      *uint64_t v16 = *v17;
      v16[1] = v18;
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1005057FC(&qword_10169FA80);
      v14((uint64_t *)((char *)a1 + *(int *)(v19 + 48)), (uint64_t *)((char *)a2 + *(int *)(v19 + 48)), v13);
      uint64_t v20 = *(int *)(v19 + 64);
      uint64_t v21 = (_OWORD *)((char *)a1 + v20);
      uint64_t v22 = (_OWORD *)((char *)a2 + v20);
      long long v23 = v22[1];
      _OWORD *v21 = *v22;
      v21[1] = v23;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      uint64_t v9 = (uint64_t *)((char *)a1 + v8);
      uint64_t v10 = (uint64_t *)((char *)a2 + v8);
      uint64_t v11 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v11;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v24 = sub_1005057FC(&qword_101670F30);
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v25 + 48))(a2, 5, v24))
      {
        uint64_t v26 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
        memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        uint64_t v27 = type metadata accessor for UUID();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
        uint64_t v28 = *(int *)(v24 + 48);
        uint64_t v29 = (uint64_t *)((char *)a1 + v28);
        uint64_t v30 = (uint64_t *)((char *)a2 + v28);
        uint64_t v31 = v30[1];
        *uint64_t v29 = *v30;
        v29[1] = v31;
        unint64_t v32 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(v25 + 56);
        swift_bridgeObjectRetain();
        v32(a1, 0, 5, v24);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1006270E0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v4 = type metadata accessor for UUID();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v4 - 8), a1, v4);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    uint64_t v5 = a1 + *(int *)(sub_1005057FC(&qword_10169FA80) + 48);
    return v8(v5, v4);
  }
  else
  {
    if (result == 1)
    {
      uint64_t v6 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
      type metadata accessor for CRLBoardIdentifierStorage(0);
    }
    else
    {
      if (result) {
        return result;
      }
      uint64_t v3 = sub_1005057FC(&qword_101670F30);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(a1, 5, v3);
      if (result) {
        return result;
      }
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
    }
    return swift_bridgeObjectRelease();
  }
}

char *sub_1006272B4(char *a1, char *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v10 = type metadata accessor for UUID();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(a1, a2, v10);
    uint64_t v12 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = *((void *)v14 + 1);
    *(void *)uint64_t v13 = *(void *)v14;
    *((void *)v13 + 1) = v15;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1005057FC(&qword_10169FA80);
    v11(&a1[*(int *)(v16 + 48)], &a2[*(int *)(v16 + 48)], v10);
    uint64_t v17 = *(int *)(v16 + 64);
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    long long v20 = *((_OWORD *)v19 + 1);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v20;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    uint64_t v6 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v7 = &a1[v6];
    uint64_t v8 = &a2[v6];
    uint64_t v9 = *((void *)v8 + 1);
    *(void *)uint64_t v7 = *(void *)v8;
    *((void *)v7 + 1) = v9;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v21 = sub_1005057FC(&qword_101670F30);
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(a2, 5, v21))
    {
      uint64_t v23 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
      memcpy(a1, a2, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      uint64_t v24 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
      uint64_t v25 = *(int *)(v21 + 48);
      uint64_t v26 = &a1[v25];
      uint64_t v27 = &a2[v25];
      uint64_t v28 = *((void *)v27 + 1);
      *(void *)uint64_t v26 = *(void *)v27;
      *((void *)v26 + 1) = v28;
      uint64_t v29 = *(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56);
      swift_bridgeObjectRetain();
      v29(a1, 0, 5, v21);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_100627540(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_100629D48((uint64_t)a1, type metadata accessor for CRLBoardPreviewImageCache.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = type metadata accessor for UUID();
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      v10(a1, a2, v9);
      uint64_t v11 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      *(void *)uint64_t v12 = *(void *)v13;
      *((void *)v12 + 1) = *((void *)v13 + 1);
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_1005057FC(&qword_10169FA80);
      v10(&a1[*(int *)(v14 + 48)], &a2[*(int *)(v14 + 48)], v9);
      uint64_t v15 = *(int *)(v14 + 64);
      uint64_t v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      long long v18 = *((_OWORD *)v17 + 1);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v18;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      uint64_t v6 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      *(void *)uint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = *((void *)v8 + 1);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v19 = sub_1005057FC(&qword_101670F30);
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(a2, 5, v19))
      {
        uint64_t v21 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
        memcpy(a1, a2, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        uint64_t v22 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
        uint64_t v23 = *(int *)(v19 + 48);
        uint64_t v24 = &a1[v23];
        uint64_t v25 = &a2[v23];
        *(void *)uint64_t v24 = *(void *)v25;
        *((void *)v24 + 1) = *((void *)v25 + 1);
        uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56);
        swift_bridgeObjectRetain();
        v26(a1, 0, 5, v19);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_100627808(char *a1, char *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
    v8(a1, a2, v7);
    uint64_t v9 = type metadata accessor for CRLBoardIdentifierStorage(0);
    *(_OWORD *)&a1[*(int *)(v9 + 20)] = *(_OWORD *)&a2[*(int *)(v9 + 20)];
    uint64_t v10 = sub_1005057FC(&qword_10169FA80);
    v8(&a1[*(int *)(v10 + 48)], &a2[*(int *)(v10 + 48)], v7);
    uint64_t v11 = *(int *)(v10 + 64);
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    long long v14 = *((_OWORD *)v13 + 1);
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *((_OWORD *)v12 + 1) = v14;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    uint64_t v6 = type metadata accessor for CRLBoardIdentifierStorage(0);
    *(_OWORD *)&a1[*(int *)(v6 + 20)] = *(_OWORD *)&a2[*(int *)(v6 + 20)];
  }
  else
  {
    uint64_t v15 = sub_1005057FC(&qword_101670F30);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(a2, 5, v15))
    {
      uint64_t v17 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
      memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v18 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
      *(_OWORD *)&a1[*(int *)(v15 + 48)] = *(_OWORD *)&a2[*(int *)(v15 + 48)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 5, v15);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_100627A70(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_100629D48((uint64_t)a1, type metadata accessor for CRLBoardPreviewImageCache.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v7 = type metadata accessor for UUID();
      uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
      v8(a1, a2, v7);
      uint64_t v9 = type metadata accessor for CRLBoardIdentifierStorage(0);
      *(_OWORD *)&a1[*(int *)(v9 + 20)] = *(_OWORD *)&a2[*(int *)(v9 + 20)];
      uint64_t v10 = sub_1005057FC(&qword_10169FA80);
      v8(&a1[*(int *)(v10 + 48)], &a2[*(int *)(v10 + 48)], v7);
      uint64_t v11 = *(int *)(v10 + 64);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      long long v14 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v14;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      uint64_t v6 = type metadata accessor for CRLBoardIdentifierStorage(0);
      *(_OWORD *)&a1[*(int *)(v6 + 20)] = *(_OWORD *)&a2[*(int *)(v6 + 20)];
    }
    else
    {
      uint64_t v15 = sub_1005057FC(&qword_101670F30);
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(a2, 5, v15))
      {
        uint64_t v17 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
        memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        uint64_t v18 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
        *(_OWORD *)&a1[*(int *)(v15 + 48)] = *(_OWORD *)&a2[*(int *)(v15 + 48)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 5, v15);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100627CFC()
{
  uint64_t result = type metadata accessor for CRLBoardLibraryViewModel.Folder(319);
  if (v1 <= 0x3F)
  {
    uint64_t v5 = *(void *)(result - 8) + 64;
    uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
    if (v2 <= 0x3F)
    {
      uint64_t v6 = *(void *)(result - 8) + 64;
      uint64_t result = type metadata accessor for UUID();
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout3();
        uint64_t v7 = &v4;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100627E1C()
{
  return sub_100629DC8(&qword_101677038, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCache.Item);
}

unint64_t sub_100627E68()
{
  unint64_t result = qword_101677040;
  if (!qword_101677040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677040);
  }
  return result;
}

unint64_t sub_100627EC0()
{
  unint64_t result = qword_101677048;
  if (!qword_101677048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677048);
  }
  return result;
}

BOOL sub_100627F14(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  v13.origin.double x = a5;
  v13.origin.double y = a6;
  v13.size.double width = a7;
  v13.size.double height = a8;
  v14.origin.double x = a1;
  v14.origin.double y = a2;
  v14.size.double width = a3;
  v14.size.double height = a4;
  return CGRectEqualToRect(v13, v14);
}

BOOL sub_100627F5C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, double a7, double a8)
{
  if (a3)
  {
    double v8 = dbl_101183F80[a1];
    *(double *)&a2 = v8;
    if (a6) {
      goto LABEL_3;
    }
  }
  else
  {
    double v8 = *(double *)&a1;
    if (a6)
    {
LABEL_3:
      double v10 = dbl_101183F80[a4];
      double v11 = v10;
      goto LABEL_6;
    }
  }
  double v10 = *(double *)&a4;
  double v11 = *(double *)&a5;
LABEL_6:
  BOOL v12 = v8 == v10;
  if (*(double *)&a2 != v11) {
    BOOL v12 = 0;
  }
  return a7 == a8 && v12;
}

BOOL sub_100627FB0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a3)
  {
    double v6 = dbl_101183F80[a1];
    *(double *)&a2 = v6;
    if (a6) {
      goto LABEL_3;
    }
  }
  else
  {
    double v6 = *(double *)&a1;
    if (a6)
    {
LABEL_3:
      double v8 = dbl_101183F80[a4];
      double v9 = v8;
      return *(double *)&a2 == v9 && v6 == v8;
    }
  }
  double v8 = *(double *)&a4;
  double v9 = *(double *)&a5;
  return *(double *)&a2 == v9 && v6 == v8;
}

uint64_t sub_100627FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v104 = *(void *)(v4 - 8);
  uint64_t v105 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v101 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  long long v102 = (char *)&v96 - v9;
  uint64_t v10 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v99 = (uint64_t)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v100 = (uint64_t)&v96 - v15;
  __chkstk_darwin(v16, v17);
  uint64_t v103 = (uint64_t)&v96 - v18;
  __chkstk_darwin(v19, v20);
  uint64_t v96 = (uint64_t)&v96 - v21;
  __chkstk_darwin(v22, v23);
  uint64_t v97 = (uint64_t)&v96 - v24;
  __chkstk_darwin(v25, v26);
  uint64_t v98 = (uint64_t)&v96 - v27;
  uint64_t v28 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v28 - 8, v29);
  uint64_t v31 = (char *)&v96 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v32, v33);
  uint64_t v35 = (char *)&v96 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36, v37);
  uint64_t v39 = (char *)&v96 - v38;
  __chkstk_darwin(v40, v41);
  uint64_t v43 = (char *)&v96 - v42;
  uint64_t v44 = sub_1005057FC((uint64_t *)&unk_101677120);
  __chkstk_darwin(v44 - 8, v45);
  uint64_t v47 = (char *)&v96 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = (uint64_t)&v47[*(int *)(v48 + 56)];
  sub_100629CE0(a1, (uint64_t)v47, type metadata accessor for CRLBoardPreviewImageCache.Item);
  sub_100629CE0(a2, v49, type metadata accessor for CRLBoardPreviewImageCache.Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_100629CE0((uint64_t)v47, (uint64_t)v43, type metadata accessor for CRLBoardPreviewImageCache.Item);
    if (swift_getEnumCaseMultiPayload())
    {
      uint64_t v59 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
      uint64_t v60 = (uint64_t)v43;
LABEL_17:
      sub_100629D48(v60, v59);
      sub_100522F00((uint64_t)v47, (uint64_t *)&unk_101677120);
LABEL_30:
      char v87 = 0;
      return v87 & 1;
    }
    sub_10062DB08(v49, (uint64_t)v31, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    char v87 = sub_100DDC744((uint64_t)v43, (uint64_t)v31);
    sub_100629D48((uint64_t)v31, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    uint64_t v88 = (uint64_t)v43;
    uint64_t v89 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
LABEL_26:
    sub_100629D48(v88, v89);
    sub_100629D48((uint64_t)v47, type metadata accessor for CRLBoardPreviewImageCache.Item);
    return v87 & 1;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_100629CE0((uint64_t)v47, (uint64_t)v35, type metadata accessor for CRLBoardPreviewImageCache.Item);
    uint64_t v61 = sub_1005057FC(&qword_10169FA80);
    uint64_t v62 = *(int *)(v61 + 48);
    uint64_t v63 = &v35[v62];
    uint64_t v64 = *(int *)(v61 + 64);
    CGFloat v65 = *(double *)&v35[v64];
    CGFloat v66 = *(double *)&v35[v64 + 8];
    CGFloat v67 = *(double *)&v35[v64 + 16];
    CGFloat v68 = *(double *)&v35[v64 + 24];
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      (*(void (**)(char *, uint64_t))(v104 + 8))(&v35[v62], v105);
      uint64_t v59 = type metadata accessor for CRLBoardIdentifier;
      uint64_t v60 = (uint64_t)v35;
      goto LABEL_17;
    }
    uint64_t v69 = (char *)(v49 + v62);
    CGFloat v70 = *(double *)(v49 + v64);
    CGFloat v71 = *(double *)(v49 + v64 + 8);
    CGFloat v72 = *(double *)(v49 + v64 + 16);
    CGFloat v73 = *(double *)(v49 + v64 + 24);
    uint64_t v74 = v103;
    sub_10062DB08(v49, v103, type metadata accessor for CRLBoardIdentifier);
    uint64_t v76 = v104;
    uint64_t v75 = v105;
    uint64_t v77 = *(void (**)(char *, char *, uint64_t))(v104 + 32);
    v77(v102, v63, v105);
    uint64_t v78 = v101;
    v77(v101, v69, v75);
    char v79 = static UUID.== infix(_:_:)();
    uint64_t v80 = v100;
    sub_100629CE0((uint64_t)v35, v100, type metadata accessor for CRLBoardIdentifier);
    uint64_t v81 = v99;
    sub_100629CE0(v74, v99, type metadata accessor for CRLBoardIdentifier);
    if (v79)
    {
      uint64_t v82 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      uint64_t v83 = *(void *)(v80 + v82);
      uint64_t v84 = *(void *)(v80 + v82 + 8);
      Swift::String v85 = (void *)(v81 + v82);
      if (v83 == *v85 && v84 == v85[1])
      {
        sub_100629D48(v81, type metadata accessor for CRLBoardIdentifier);
        sub_100629D48(v80, type metadata accessor for CRLBoardIdentifier);
        sub_100629D48((uint64_t)v35, type metadata accessor for CRLBoardIdentifier);
        uint64_t v86 = v102;
      }
      else
      {
        char v92 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_100629D48(v81, type metadata accessor for CRLBoardIdentifier);
        sub_100629D48(v80, type metadata accessor for CRLBoardIdentifier);
        sub_100629D48((uint64_t)v35, type metadata accessor for CRLBoardIdentifier);
        uint64_t v86 = v102;
        if ((v92 & 1) == 0) {
          goto LABEL_27;
        }
      }
      if (static UUID.== infix(_:_:)())
      {
        v106.origin.double x = v65;
        v106.origin.double y = v66;
        v106.size.double width = v67;
        v106.size.double height = v68;
        v107.origin.double x = v70;
        v107.origin.double y = v71;
        v107.size.double width = v72;
        v107.size.double height = v73;
        char v87 = CGRectEqualToRect(v106, v107);
        uint64_t v93 = *(void (**)(char *, uint64_t))(v76 + 8);
        v93(v78, v75);
        v93(v86, v75);
        uint64_t v89 = type metadata accessor for CRLBoardIdentifier;
        uint64_t v88 = v103;
        goto LABEL_26;
      }
    }
    else
    {
      sub_100629D48(v81, type metadata accessor for CRLBoardIdentifier);
      sub_100629D48(v80, type metadata accessor for CRLBoardIdentifier);
      sub_100629D48((uint64_t)v35, type metadata accessor for CRLBoardIdentifier);
      uint64_t v86 = v102;
    }
LABEL_27:
    uint64_t v94 = *(void (**)(char *, uint64_t))(v76 + 8);
    v94(v78, v75);
    v94(v86, v75);
    uint64_t v90 = v103;
    goto LABEL_28;
  }
  sub_100629CE0((uint64_t)v47, (uint64_t)v39, type metadata accessor for CRLBoardPreviewImageCache.Item);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v59 = type metadata accessor for CRLBoardIdentifier;
    uint64_t v60 = (uint64_t)v39;
    goto LABEL_17;
  }
  uint64_t v51 = v98;
  sub_10062DB08(v49, v98, type metadata accessor for CRLBoardIdentifier);
  char v52 = static UUID.== infix(_:_:)();
  uint64_t v53 = v97;
  sub_100629CE0((uint64_t)v39, v97, type metadata accessor for CRLBoardIdentifier);
  uint64_t v54 = v96;
  sub_100629CE0(v51, v96, type metadata accessor for CRLBoardIdentifier);
  if ((v52 & 1) == 0)
  {
    sub_100629D48(v54, type metadata accessor for CRLBoardIdentifier);
    sub_100629D48(v53, type metadata accessor for CRLBoardIdentifier);
    sub_100629D48(v51, type metadata accessor for CRLBoardIdentifier);
    uint64_t v90 = (uint64_t)v39;
LABEL_28:
    sub_100629D48(v90, type metadata accessor for CRLBoardIdentifier);
LABEL_29:
    sub_100629D48((uint64_t)v47, type metadata accessor for CRLBoardPreviewImageCache.Item);
    goto LABEL_30;
  }
  uint64_t v55 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v56 = *(void *)(v53 + v55);
  uint64_t v57 = *(void *)(v53 + v55 + 8);
  uint64_t v58 = (void *)(v54 + v55);
  if (v56 != *v58 || v57 != v58[1])
  {
    char v91 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_100629D48(v54, type metadata accessor for CRLBoardIdentifier);
    sub_100629D48(v53, type metadata accessor for CRLBoardIdentifier);
    sub_100629D48(v51, type metadata accessor for CRLBoardIdentifier);
    sub_100629D48((uint64_t)v39, type metadata accessor for CRLBoardIdentifier);
    if (v91) {
      goto LABEL_22;
    }
    goto LABEL_29;
  }
  sub_100629D48(v54, type metadata accessor for CRLBoardIdentifier);
  sub_100629D48(v53, type metadata accessor for CRLBoardIdentifier);
  sub_100629D48(v51, type metadata accessor for CRLBoardIdentifier);
  sub_100629D48((uint64_t)v39, type metadata accessor for CRLBoardIdentifier);
LABEL_22:
  sub_100629D48((uint64_t)v47, type metadata accessor for CRLBoardPreviewImageCache.Item);
  char v87 = 1;
  return v87 & 1;
}

double *sub_100628970(uint64_t a1, unint64_t a2)
{
  unint64_t v59 = a2;
  uint64_t v3 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v58 = (uint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v14 = *(void *)(v64 - 8);
  __chkstk_darwin(v64, v15);
  uint64_t v52 = (uint64_t)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v49 = (uint64_t)&v49 - v19;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
    sub_100629DC8(&qword_101677428, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCache.LookupKey);
    unint64_t result = (double *)Set.Iterator.init(_cocoa:)();
    a1 = v66;
    uint64_t v57 = v67;
    uint64_t v21 = v68;
    uint64_t v22 = v69;
    unint64_t v23 = v70;
  }
  else
  {
    uint64_t v24 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v25 = *(void *)(a1 + 56);
    uint64_t v57 = a1 + 56;
    uint64_t v21 = ~v24;
    uint64_t v26 = -v24;
    if (v26 < 64) {
      uint64_t v27 = ~(-1 << v26);
    }
    else {
      uint64_t v27 = -1;
    }
    unint64_t v23 = v27 & v25;
    unint64_t result = (double *)swift_bridgeObjectRetain();
    uint64_t v22 = 0;
  }
  uint64_t v51 = v21;
  uint64_t v55 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v56 = (unint64_t)(v21 + 64) >> 6;
  uint64_t v63 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  uint64_t v50 = v14;
  uint64_t v62 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v53 = _swiftEmptyArrayStorage;
  uint64_t v54 = (char *)&type metadata for Swift.AnyObject + 8;
  while (1)
  {
    uint64_t v28 = v22;
    if ((a1 & 0x8000000000000000) == 0) {
      break;
    }
    uint64_t v31 = __CocoaSet.Iterator.next()();
    if (!v31) {
      goto LABEL_43;
    }
    uint64_t v65 = v31;
    type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v32 = v71;
    swift_unknownObjectRelease();
    if (!v32) {
      goto LABEL_43;
    }
LABEL_31:
    sub_100629CE0((uint64_t)v32 + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item, (uint64_t)v6, type metadata accessor for CRLBoardPreviewImageCache.Item);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unint64_t v60 = v23;
      uint64_t v61 = v22;
      uint64_t v36 = v58;
      uint64_t v37 = sub_10062DB08((uint64_t)v6, v58, type metadata accessor for CRLBoardIdentifier);
      __chkstk_darwin(v37, v38);
      *(&v49 - 2) = v36;
      uint64_t v39 = 1;
      uint64_t v40 = (void *)sub_1008E81F4(1, (uint64_t (*)(id))sub_10062E948, (uint64_t)(&v49 - 4), v59);
      sub_100629D48(v36, type metadata accessor for CRLBoardIdentifier);
      if (v40)
      {
        sub_100629CE0((uint64_t)v40 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);

        uint64_t v39 = 0;
      }
      unint64_t v23 = v60;
      uint64_t v22 = v61;
    }
    else
    {
      sub_100629D48((uint64_t)v6, type metadata accessor for CRLBoardPreviewImageCache.Item);
      uint64_t v39 = 1;
    }
    uint64_t v41 = v39;
    uint64_t v42 = v64;
    (*v63)(v13, v41, 1, v64);

    if ((*v62)(v13, 1, v42) == 1)
    {
      unint64_t result = (double *)sub_100522F00((uint64_t)v13, (uint64_t *)&unk_101676310);
    }
    else
    {
      unint64_t v43 = v23;
      uint64_t v44 = v49;
      sub_10062DB08((uint64_t)v13, v49, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_10062DB08(v44, v52, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v53 = (double *)sub_100F6273C(0, *((void *)v53 + 2) + 1, 1, (unint64_t)v53);
      }
      unint64_t v46 = *((void *)v53 + 2);
      unint64_t v45 = *((void *)v53 + 3);
      unint64_t v23 = v43;
      if (v46 >= v45 >> 1) {
        uint64_t v53 = (double *)sub_100F6273C(v45 > 1, v46 + 1, 1, (unint64_t)v53);
      }
      uint64_t v47 = v52;
      uint64_t v48 = v53;
      *((void *)v53 + 2) = v46 + 1;
      unint64_t result = (double *)sub_10062DB08(v47, (uint64_t)v48+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v46, type metadata accessor for CRLBoardLibraryViewModel.Item);
    }
  }
  if (v23)
  {
    unint64_t v29 = __clz(__rbit64(v23));
    v23 &= v23 - 1;
    unint64_t v30 = v29 | (v22 << 6);
LABEL_30:
    id v32 = *(id *)(*(void *)(a1 + 48) + 8 * v30);
    if (!v32) {
      goto LABEL_43;
    }
    goto LABEL_31;
  }
  int64_t v33 = v22 + 1;
  if (!__OFADD__(v22, 1))
  {
    if (v33 >= v56) {
      goto LABEL_43;
    }
    unint64_t v34 = *(void *)(v57 + 8 * v33);
    ++v22;
    if (!v34)
    {
      uint64_t v22 = v28 + 2;
      if (v28 + 2 >= v56) {
        goto LABEL_43;
      }
      unint64_t v34 = *(void *)(v57 + 8 * v22);
      if (!v34)
      {
        uint64_t v22 = v28 + 3;
        if (v28 + 3 >= v56) {
          goto LABEL_43;
        }
        unint64_t v34 = *(void *)(v57 + 8 * v22);
        if (!v34)
        {
          uint64_t v22 = v28 + 4;
          if (v28 + 4 >= v56) {
            goto LABEL_43;
          }
          unint64_t v34 = *(void *)(v57 + 8 * v22);
          if (!v34)
          {
            uint64_t v22 = v28 + 5;
            if (v28 + 5 >= v56) {
              goto LABEL_43;
            }
            unint64_t v34 = *(void *)(v57 + 8 * v22);
            if (!v34)
            {
              uint64_t v35 = v28 + 6;
              while (v56 != v35)
              {
                unint64_t v34 = *(void *)(v57 + 8 * v35++);
                if (v34)
                {
                  uint64_t v22 = v35 - 1;
                  goto LABEL_29;
                }
              }
LABEL_43:
              sub_10052E1EC();
              return v53;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v23 = (v34 - 1) & v34;
    unint64_t v30 = __clz(__rbit64(v34)) + (v22 << 6);
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

uint64_t sub_100629078(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v51 = *(void *)(v10 - 8);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v58 = (uint64_t)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)v47 - v15;
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)v47 - v19;
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)v47 - v23;
  if (a1 >> 62) {
    goto LABEL_33;
  }
  uint64_t v25 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v25)
  {
LABEL_34:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_3:
  v47[1] = v3;
  uint64_t v3 = 0;
  uint64_t v54 = v9 + 8;
  unint64_t v55 = a1 & 0xC000000000000001;
  unint64_t v52 = a1 + 32;
  uint64_t v60 = a2 + 56;
  unint64_t v48 = a1;
  v47[0] = v6;
  uint64_t v49 = v25;
  uint64_t v50 = v9;
  uint64_t v59 = a2;
  while (1)
  {
    if (v55)
    {
      id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v29 = __OFADD__(v3++, 1);
      if (v29) {
        goto LABEL_32;
      }
    }
    else
    {
      id v28 = *(id *)(v52 + 8 * v3);
      BOOL v29 = __OFADD__(v3++, 1);
      if (v29)
      {
LABEL_32:
        __break(1u);
LABEL_33:
        swift_bridgeObjectRetain();
        uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
        if (!v25) {
          goto LABEL_34;
        }
        goto LABEL_3;
      }
    }
    id v57 = v28;
    sub_100629CE0((uint64_t)v28 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload() == 2) {
      break;
    }
    uint64_t v26 = type metadata accessor for CRLBoardLibraryViewModel.Item;
    uint64_t v27 = (uint64_t)v9;
LABEL_5:
    sub_100629D48(v27, v26);
LABEL_6:

    if (v3 == v25) {
      goto LABEL_34;
    }
  }
  sub_1005057FC(&qword_101677100);
  swift_bridgeObjectRelease();
  sub_10062DB08((uint64_t)v9, (uint64_t)v24, type metadata accessor for CRLBoardIdentifier);
  if (!*(void *)(a2 + 16))
  {
    uint64_t v26 = type metadata accessor for CRLBoardIdentifier;
    uint64_t v27 = (uint64_t)v24;
    goto LABEL_5;
  }
  uint64_t v53 = v3;
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  sub_100629DC8((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v56 = type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v30 = Hasher._finalize()();
  uint64_t v31 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v32 = v30 & ~v31;
  if (((*(void *)(v60 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
  {
    sub_100629D48((uint64_t)v24, type metadata accessor for CRLBoardIdentifier);
LABEL_28:
    uint64_t v25 = v49;
    uint64_t v9 = v50;
    uint64_t v3 = v53;
    goto LABEL_6;
  }
  uint64_t v33 = ~v31;
  uint64_t v34 = *(void *)(v51 + 72);
  while (1)
  {
    sub_100629CE0(*(void *)(v59 + 48) + v34 * v32, (uint64_t)v20, type metadata accessor for CRLBoardIdentifier);
    char v35 = static UUID.== infix(_:_:)();
    sub_100629CE0((uint64_t)v20, (uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
    uint64_t v36 = (uint64_t)v24;
    uint64_t v37 = (uint64_t)v24;
    uint64_t v38 = (uint64_t)v16;
    uint64_t v39 = v58;
    sub_100629CE0(v37, v58, type metadata accessor for CRLBoardIdentifier);
    if ((v35 & 1) == 0)
    {
      sub_100629D48(v39, type metadata accessor for CRLBoardIdentifier);
      sub_100629D48(v38, type metadata accessor for CRLBoardIdentifier);
      sub_100629D48((uint64_t)v20, type metadata accessor for CRLBoardIdentifier);
      uint64_t v16 = (char *)v38;
      goto LABEL_17;
    }
    uint64_t v40 = *(int *)(v56 + 20);
    uint64_t v41 = *(void *)(v38 + v40);
    uint64_t v42 = *(void *)(v38 + v40 + 8);
    unint64_t v43 = (void *)(v39 + v40);
    if (v41 == *v43 && v42 == v43[1]) {
      break;
    }
    char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_100629D48(v39, type metadata accessor for CRLBoardIdentifier);
    sub_100629D48(v38, type metadata accessor for CRLBoardIdentifier);
    sub_100629D48((uint64_t)v20, type metadata accessor for CRLBoardIdentifier);
    uint64_t v16 = (char *)v38;
    if (v45) {
      goto LABEL_30;
    }
LABEL_17:
    unint64_t v32 = (v32 + 1) & v33;
    uint64_t v24 = (char *)v36;
    if (((*(void *)(v60 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
    {
      sub_100629D48(v36, type metadata accessor for CRLBoardIdentifier);
      a1 = v48;
      a2 = v59;
      uint64_t v6 = v47[0];
      goto LABEL_28;
    }
  }
  sub_100629D48(v39, type metadata accessor for CRLBoardIdentifier);
  sub_100629D48(v38, type metadata accessor for CRLBoardIdentifier);
  sub_100629D48((uint64_t)v20, type metadata accessor for CRLBoardIdentifier);
LABEL_30:
  sub_100629D48(v36, type metadata accessor for CRLBoardIdentifier);
  swift_bridgeObjectRelease();

  return 1;
}

uint64_t sub_100629678(uint64_t a1, double a2)
{
  *(void *)(v3 + 48) = v2;
  *(double *)(v3 + 40) = a2;
  *(void *)(v3 + 32) = a1;
  *(void *)(v3 + 56) = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  *(void *)(v3 + 64) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v3 + 72) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 80) = v5;
  *(void *)(v3 + 88) = v4;
  return _swift_task_switch(sub_100629748, v5, v4);
}

uint64_t sub_100629748()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 40);
  sub_100629CE0(*(void *)(v0 + 32), v1, type metadata accessor for CRLBoardIdentifier);
  swift_storeEnumTagMultiPayload();
  uint64_t v3 = (objc_class *)type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
  uint64_t v4 = (char *)objc_allocWithZone(v3);
  sub_100629CE0(v1, (uint64_t)&v4[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item], type metadata accessor for CRLBoardPreviewImageCache.Item);
  uint64_t v5 = &v4[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass];
  *(_OWORD *)uint64_t v5 = xmmword_101182E60;
  v5[16] = 1;
  *(void *)&v4[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale] = v2;
  *(void *)(v0 + 16) = v4;
  *(void *)(v0 + 24) = v3;
  [v0 initWith];
  *(void *)(v0 + 96) = v6;
  sub_100629D48(v1, type metadata accessor for CRLBoardPreviewImageCache.Item);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1006298C8;
  return sub_100617930((uint64_t)v6);
}

uint64_t sub_1006298C8(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  v4[14] = a1;
  v4[15] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = v4[10];
    uint64_t v7 = v4[11];
    uint64_t v8 = sub_100629BF0;
  }
  else
  {
    uint64_t v9 = (void *)swift_task_alloc();
    v4[16] = v9;
    *uint64_t v9 = v5;
    v9[1] = sub_100629A3C;
    v9[4] = a1;
    uint64_t v8 = sub_100614394;
    uint64_t v6 = a1;
    uint64_t v7 = 0;
  }
  return _swift_task_switch(v8, v6, v7);
}

uint64_t sub_100629A3C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[10];
    uint64_t v6 = v4[11];
    uint64_t v7 = sub_100629C64;
  }
  else
  {
    v4[18] = a1;
    uint64_t v5 = v4[10];
    uint64_t v6 = v4[11];
    uint64_t v7 = sub_100629B64;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100629B64()
{
  uint64_t v1 = (void *)v0[12];
  swift_release();

  swift_release();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v3 = v0[18];
  return v2(v3);
}

uint64_t sub_100629BF0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100629C64()
{
  uint64_t v1 = *(void **)(v0 + 96);
  swift_release();

  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100629CE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100629D48(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for CRLBoardPreviewImageCache.CacheError(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101677510);
}

uint64_t sub_100629DC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100629E10()
{
  return sub_10062E830((void (*)(void))&_swift_release);
}

uint64_t sub_100629E28(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528488;
  return sub_100621410(a1, v4, v5, v7, v6);
}

uint64_t sub_100629EE8(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_100528488;
  return sub_1006214CC(a1, v1);
}

uint64_t sub_100629F84()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 33, v4);
}

uint64_t sub_10062A0B0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[4];
  uint64_t v11 = (uint64_t)v1 + v5;
  uint64_t v12 = *(void *)((char *)v1 + v6);
  double v13 = *(double *)((char *)v1 + v7);
  double v14 = *(double *)((char *)v1 + v7 + 8);
  uint64_t v15 = (uint64_t)v1 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_100528D08;
  return sub_10061E398(a1, v13, v14, v8, v9, v10, v11, v12, v15);
}

uint64_t sub_10062A214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8, v9);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v29 = a1;
  uint64_t v16 = a2 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(a2 + 56);
  int64_t v28 = (unint64_t)(v17 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v21 = 0;
  if (!v19) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (unint64_t i = v22 | (v21 << 6); ; unint64_t i = __clz(__rbit64(v25)) + (v21 << 6))
  {
    sub_100629CE0(*(void *)(a2 + 48) + *(void *)(v8 + 72) * i, (uint64_t)v15, type metadata accessor for CRLBoardPreviewImageCache.Item);
    sub_10062DB08((uint64_t)v15, (uint64_t)v11, type metadata accessor for CRLBoardPreviewImageCache.Item);
    sub_10062158C((uint64_t)&v29, (uint64_t)v11, a3);
    if (v3)
    {
      swift_bridgeObjectRelease();
      sub_100629D48((uint64_t)v11, type metadata accessor for CRLBoardPreviewImageCache.Item);
      return swift_release();
    }
    uint64_t result = sub_100629D48((uint64_t)v11, type metadata accessor for CRLBoardPreviewImageCache.Item);
    if (v19) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v21++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v28) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v16 + 8 * v21);
    if (!v25) {
      break;
    }
LABEL_17:
    unint64_t v19 = (v25 - 1) & v25;
  }
  int64_t v26 = v21 + 1;
  if (v21 + 1 >= v28) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v16 + 8 * v26);
  if (v25) {
    goto LABEL_16;
  }
  int64_t v26 = v21 + 2;
  if (v21 + 2 >= v28) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v16 + 8 * v26);
  if (v25) {
    goto LABEL_16;
  }
  int64_t v26 = v21 + 3;
  if (v21 + 3 >= v28) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v16 + 8 * v26);
  if (v25) {
    goto LABEL_16;
  }
  int64_t v26 = v21 + 4;
  if (v21 + 4 >= v28)
  {
LABEL_26:
    swift_release();
    return v29;
  }
  unint64_t v25 = *(void *)(v16 + 8 * v26);
  if (v25)
  {
LABEL_16:
    int64_t v21 = v26;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v21 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v21 >= v28) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v16 + 8 * v21);
    ++v26;
    if (v25) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10062A4E0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000101240BE0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000101240BC0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000101240BA0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000101240B80 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000101240B60 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D6F74737563 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_10062A72C(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_1016771A0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v55 = v2;
  uint64_t v56 = v3;
  __chkstk_darwin(v2, v4);
  id v57 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1005057FC(&qword_1016771A8);
  uint64_t v54 = *(void *)(v61 - 8);
  __chkstk_darwin(v61, v6);
  uint64_t v60 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_1016771B0);
  uint64_t v52 = *(void *)(v8 - 8);
  uint64_t v53 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v59 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_1016771B8);
  uint64_t v50 = *(void *)(v11 - 8);
  uint64_t v51 = v11;
  __chkstk_darwin(v11, v12);
  uint64_t v58 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_1016771C0);
  uint64_t v48 = *(void *)(v14 - 8);
  uint64_t v49 = v14;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005057FC(&qword_1016771C8);
  uint64_t v47 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v19);
  int64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1005057FC(&qword_1016771D0);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v24);
  int64_t v26 = (char *)&v44 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a1[3];
  uint64_t v28 = a1[4];
  uint64_t v62 = a1;
  sub_10050F848(a1, v27);
  sub_10062E288();
  uint64_t v29 = v64;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v29)
  {
    uint64_t v30 = (uint64_t)v62;
LABEL_12:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v30);
    return v28;
  }
  uint64_t v44 = v18;
  char v45 = v21;
  unint64_t v46 = v17;
  unint64_t v32 = v58;
  uint64_t v31 = v59;
  uint64_t v33 = v60;
  uint64_t v34 = v61;
  uint64_t v64 = v23;
  uint64_t v35 = KeyedDecodingContainer.allKeys.getter();
  if (*(void *)(v35 + 16) != 1)
  {
    uint64_t v37 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v28 = v38;
    sub_1005057FC(&qword_1016771E0);
    *(void *)uint64_t v28 = &type metadata for CRLBoardPreviewImageCache.ImageSizeClass;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v37 - 8) + 104))(v28, enum case for DecodingError.typeMismatch(_:), v37);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v26, v22);
    uint64_t v30 = (uint64_t)v62;
    goto LABEL_12;
  }
  switch(*(unsigned char *)(v35 + 32))
  {
    case 1:
      LOBYTE(v63) = 1;
      sub_10062E42C();
      uint64_t v39 = v46;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v39, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v26, v22);
      uint64_t v28 = 1;
      break;
    case 2:
      LOBYTE(v63) = 2;
      sub_10062E3D8();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v32, v51);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v26, v22);
      uint64_t v28 = 2;
      break;
    case 3:
      LOBYTE(v63) = 3;
      sub_10062E384();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v31, v53);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v26, v22);
      uint64_t v28 = 3;
      break;
    case 4:
      LOBYTE(v63) = 4;
      sub_10062E330();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v33, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v26, v22);
      uint64_t v28 = 4;
      break;
    case 5:
      LOBYTE(v63) = 5;
      sub_10062E2DC();
      uint64_t v40 = v57;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      type metadata accessor for CGSize(0);
      sub_100629DC8(&qword_1016771F0, type metadata accessor for CGSize);
      uint64_t v42 = v55;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v43 = v64;
      (*(void (**)(char *, uint64_t))(v56 + 8))(v40, v42);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v26, v22);
      uint64_t v28 = v63;
      break;
    default:
      LOBYTE(v63) = 0;
      sub_10062E480();
      uint64_t v36 = v45;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v44);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v26, v22);
      uint64_t v28 = 0;
      break;
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v62);
  return v28;
}

uint64_t sub_10062B0A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265646C6F66 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6472616F62 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E656373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_10062B1E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6564496472616F62 && a2 == 0xEF7265696669746ELL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449656E656373 && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001012412D0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_10062B358(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101503A10, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

id sub_10062B3A4(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101677640);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (id)a1[3];
  sub_10050F848(a1, (uint64_t)v8);
  sub_100631EA0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  else
  {
    type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
    HIBYTE(v12) = 0;
    sub_100629DC8(&qword_101677650, (void (*)(uint64_t))type metadata accessor for CRLBoardPreviewImageCache.LookupKey);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    id v10 = v13;
    HIBYTE(v12) = 1;
    sub_100631EF4();
    id v8 = v10;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    id v11 = v13;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  return v8;
}

char *sub_10062B5DC(void *a1)
{
  Swift::String v2 = v1;
  id v124 = a1;
  uint64_t v3 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v3 - 8, v4);
  CGRect v107 = (char *)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v118 = *(void *)(v6 - 8);
  uint64_t v119 = v6;
  __chkstk_darwin(v6, v7);
  long long v108 = (char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_1005057FC(&qword_101677358);
  uint64_t v125 = *(void *)(v117 - 8);
  __chkstk_darwin(v117, v9);
  uint64_t v120 = (char *)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101677360);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v105 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_101691FA0);
  __chkstk_darwin(v14 - 8, v15);
  CATransform3D v123 = (char *)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC(&qword_101677370);
  uint64_t v121 = *(void *)(v17 - 8);
  uint64_t v122 = v17;
  __chkstk_darwin(v17, v18);
  uint64_t v116 = (uint64_t *)((char *)&v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = sub_1005057FC(&qword_101677378);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v111 = (void (*)(void, void))v20;
  uint64_t v112 = v21;
  __chkstk_darwin(v20, v22);
  CGRect v106 = (char *)&v104 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1005057FC((uint64_t *)&unk_101677380);
  uint64_t v25 = *(void *)(v24 - 8);
  id v113 = (void (*)(void, void))v24;
  uint64_t v114 = v25;
  __chkstk_darwin(v24, v26);
  uint64_t v110 = (char *)&v104 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28, v30);
  unint64_t v32 = (char *)&v104 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v33 - 8, v34);
  uint64_t v35 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v35 - 8, v36);
  uint64_t v37 = OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_imagerTargetQueue;
  sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
  uint64_t v38 = v1;
  static DispatchQoS.utility.getter();
  static OS_dispatch_queue.Attributes.concurrent.getter();
  (*(void (**)(char *, void, uint64_t))(v29 + 104))(v32, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v28);
  *(void *)&v1[v37] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v39 = OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cache;
  *(void *)&v38[v39] = [objc_allocWithZone((Class)NSCache) init];
  uint64_t v40 = OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cachedSizes;
  *(void *)&v38[v40] = sub_100A39D08((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v38[OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_subscriptionSet] = &_swiftEmptySetSingleton;
  uint64_t v41 = OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_updatePublisher;
  sub_1005057FC((uint64_t *)&unk_101677390);
  swift_allocObject();
  *(void *)&v38[v41] = PassthroughSubject.init()();
  uint64_t v42 = OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_assetDownloadHelper;
  type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper();
  uint64_t v43 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v43 + 112) = sub_100A39CCC((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v38[v42] = v43;
  v38[OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_isPaused] = 0;
  *(void *)&v38[OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache____lazy_storage___defaultUnsupportedImage] = 0;
  id v44 = v124;
  *(void *)&v38[OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_boardLibrary] = v124;
  char v45 = *(void **)&v38[v39];
  uint64_t v109 = (char *)v44;
  id v46 = v45;
  NSString v47 = String._bridgeToObjectiveC()();
  [v46 setName:v47];

  uint64_t v48 = *(void **)&v2[v37];
  id v49 = objc_allocWithZone((Class)CRLWidthLimitedQueue);
  id v50 = v48;
  NSString v51 = String._bridgeToObjectiveC()();
  id v52 = [v49 initWithLimit:4 name:v51 targetQueue:v50];

  *(void *)&v38[OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_imagerQueue] = v52;
  uint64_t v53 = (objc_class *)type metadata accessor for CRLBoardPreviewImageCache();
  v127.receiver = v38;
  v127.super_class = v53;
  uint64_t v54 = (char *)[super init];
  uint64_t v55 = *(void **)&v54[OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cache];
  uint64_t v56 = v54;
  [v55 setDelegate:v56];
  id v124 = [self defaultCenter];
  id v126 = *(id *)&v56[OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_updatePublisher];
  sub_1005057FC((uint64_t *)&unk_10169FCF0);
  id v57 = v116;
  swift_retain();
  *id v57 = static OS_dispatch_queue.main.getter();
  static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
  uint64_t v59 = v121;
  uint64_t v58 = v122;
  (*(void (**)(uint64_t *, void, uint64_t))(v121 + 104))(v57, enum case for Publishers.TimeGroupingStrategy.byTime<A>(_:), v122);
  uint64_t v60 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v61 = (uint64_t)v123;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v123, 1, 1, v60);
  sub_100523288((unint64_t *)&unk_1016773A0, (uint64_t *)&unk_101677390);
  sub_10062E0F4((unint64_t *)&qword_101691FF0, (unint64_t *)&qword_1016725C0);
  uint64_t v62 = v106;
  Publisher.collect<A>(_:options:)();
  sub_100522F00(v61, &qword_101691FA0);
  (*(void (**)(uint64_t *, uint64_t))(v59 + 8))(v57, v58);
  swift_release();
  uint64_t v63 = (char *)self;
  id v126 = [v63 mainRunLoop];
  uint64_t v64 = type metadata accessor for NSRunLoop.SchedulerOptions();
  uint64_t v65 = (char *)(*(void *)(v64 - 8) + 56);
  uint64_t v66 = (uint64_t)v105;
  uint64_t v115 = *(void (**)(char *, uint64_t, uint64_t))v65;
  uint64_t v116 = (uint64_t *)v64;
  CATransform3D v123 = v65;
  v115(v105, 1, 1);
  uint64_t v67 = sub_10050BF48(0, &qword_1016773B0);
  sub_100523288(&qword_1016773B8, &qword_101677378);
  uint64_t v68 = sub_10062E0F4(&qword_1016773C0, &qword_1016773B0);
  unint64_t v70 = v110;
  uint64_t v69 = v111;
  uint64_t v121 = v68;
  uint64_t v122 = v67;
  Publisher.receive<A>(on:options:)();
  sub_100522F00(v66, (uint64_t *)&unk_101677360);

  (*(void (**)(char *, void))(v112 + 8))(v62, v69);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100523288(&qword_1016773C8, (uint64_t *)&unk_101677380);
  CGFloat v71 = v113;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, void))(v114 + 8))(v70, v71);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  if (qword_10166FE00 != -1) {
    swift_once();
  }
  id v72 = *(id *)&v109[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store];
  CGFloat v73 = v108;
  NSNotificationCenter.publisher(for:object:)();

  id v126 = [v63 mainRunLoop];
  uint64_t v74 = v66;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t *))v115)(v66, 1, 1, v116);
  uint64_t v75 = sub_100629DC8((unint64_t *)&qword_1016773D0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  uint64_t v77 = v119;
  uint64_t v76 = v120;
  uint64_t v110 = v63;
  uint64_t v78 = v74;
  uint64_t v114 = v75;
  Publisher.receive<A>(on:options:)();
  sub_100522F00(v74, (uint64_t *)&unk_101677360);

  uint64_t v79 = v118 + 8;
  id v113 = *(void (**)(void, void))(v118 + 8);
  v113(v73, v77);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v80 = sub_100523288(&qword_1016773D8, &qword_101677358);
  uint64_t v81 = v117;
  uint64_t v112 = v80;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  uint64_t v82 = *(void (**)(void, void))(v125 + 8);
  v125 += 8;
  uint64_t v111 = v82;
  v82(v76, v81);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v83 = v56;
  if (qword_10166FE08 != -1) {
    swift_once();
  }
  id v84 = v72;
  Swift::String v85 = v108;
  NSNotificationCenter.publisher(for:object:)();

  id v126 = [v110 mainRunLoop];
  char v87 = (void (*)(uint64_t, uint64_t, uint64_t, char *))v115;
  uint64_t v86 = (char *)v116;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t *))v115)(v74, 1, 1, v116);
  uint64_t v88 = v119;
  uint64_t v89 = v120;
  Publisher.receive<A>(on:options:)();
  sub_100522F00(v74, (uint64_t *)&unk_101677360);

  v113(v85, v88);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v118 = v79;
  uint64_t v90 = v117;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  v111(v89, v90);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  if (qword_10166ED60 != -1) {
    swift_once();
  }
  swift_retain();
  NSNotificationCenter.publisher(for:object:)();
  swift_release();
  id v126 = [v110 mainRunLoop];
  v87(v74, 1, 1, v86);
  char v91 = v85;
  uint64_t v92 = v119;
  uint64_t v93 = v120;
  Publisher.receive<A>(on:options:)();
  sub_100522F00(v74, (uint64_t *)&unk_101677360);

  v113(v91, v92);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v94 = v117;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  v111(v93, v94);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v95 = [self processInfo];
  id v96 = [v95 thermalState];

  sub_10061542C((unint64_t)v96);
  NSNotificationCenter.publisher(for:object:)();
  id v126 = [v110 mainRunLoop];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t *))v115)(v78, 1, 1, v116);
  Publisher.receive<A>(on:options:)();
  sub_100522F00(v78, (uint64_t *)&unk_101677360);

  v113(v91, v92);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  v111(v93, v94);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v97 = (uint64_t)v107;
  static TaskPriority.low.getter();
  uint64_t v98 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v97, 0, 1, v98);
  uint64_t v99 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v100 = (void *)swift_allocObject();
  v100[2] = 0;
  v100[3] = 0;
  uint64_t v101 = v109;
  v100[4] = v99;
  v100[5] = v101;
  id v102 = v101;
  sub_100B107F4(v97, (uint64_t)&unk_1016773E8, (uint64_t)v100);

  swift_release();
  sub_100522F00(v97, &qword_101672BB0);
  return v83;
}

void *sub_10062C8AC()
{
  uint64_t v0 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)v26 - v11;
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)v26 - v15;
  uint64_t result = (void *)Notification.userInfo.getter();
  if (!result) {
    return result;
  }
  unint64_t v18 = sub_100CEAAC4((uint64_t)result);
  swift_bridgeObjectRelease();
  if (!v18) {
    return 0;
  }
  uint64_t v29 = &_swiftEmptySetSingleton;
  if (*(void *)(v18 + 16))
  {
    unint64_t v19 = sub_100955F50(0xD000000000000010, 0x8000000101240F20);
    if (v20)
    {
      sub_100522D7C(*(void *)(v18 + 56) + 32 * v19, (uint64_t)&v27);
      sub_1005057FC(&qword_101677400);
      if (swift_dynamicCast()) {
        sub_10057C8B4(v26[1]);
      }
    }
  }
  if (*(void *)(v18 + 16) && (unint64_t v21 = sub_100955F50(0x6564496472616F62, 0xEF7265696669746ELL), (v22 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v18 + 56) + 32 * v21, (uint64_t)&v27);
    int v23 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, v23 ^ 1u, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
    {
      sub_10062DB08((uint64_t)v3, (uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
      sub_100629CE0((uint64_t)v16, (uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
      sub_100CB7090((uint64_t)v12, (uint64_t)v8);
      sub_100629D48((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
      sub_100629D48((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
      if (!*(void *)(v18 + 16)) {
        goto LABEL_16;
      }
      goto LABEL_14;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  }
  sub_100522F00((uint64_t)v3, &qword_101672C30);
  if (!*(void *)(v18 + 16))
  {
LABEL_16:
    long long v27 = 0u;
    long long v28 = 0u;
    goto LABEL_17;
  }
LABEL_14:
  unint64_t v24 = sub_100955F50(0xD000000000000017, 0x8000000101240F40);
  if ((v25 & 1) == 0) {
    goto LABEL_16;
  }
  sub_100522D7C(*(void *)(v18 + 56) + 32 * v24, (uint64_t)&v27);
LABEL_17:
  swift_bridgeObjectRelease();
  if (*((void *)&v28 + 1))
  {
    sub_1005057FC(&qword_101677400);
    swift_dynamicCast();
  }
  else
  {
    sub_100522F00((uint64_t)&v27, &qword_101672BF0);
  }
  return &_swiftEmptySetSingleton;
}

void sub_10062CCC4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v51 = a2;
  id v52 = a1;
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v55 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v50 - v12;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v50 - v16;
  __chkstk_darwin(v18, v19);
  unint64_t v21 = (char *)&v50 - v20;
  uint64_t v56 = a3;
  uint64_t v57 = 0;
  int64_t v22 = 0;
  uint64_t v25 = *(void *)(a3 + 56);
  uint64_t v24 = a3 + 56;
  uint64_t v23 = v25;
  uint64_t v26 = 1 << *(unsigned char *)(v24 - 24);
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  else {
    uint64_t v27 = -1;
  }
  unint64_t v28 = v27 & v23;
  uint64_t v53 = v24;
  int64_t v54 = (unint64_t)(v26 + 63) >> 6;
  uint64_t v63 = a4;
  uint64_t v62 = a4 + 56;
  if (!v28) {
    goto LABEL_9;
  }
  while (2)
  {
    while (1)
    {
      uint64_t v59 = (v28 - 1) & v28;
      int64_t v60 = v22;
      unint64_t v30 = __clz(__rbit64(v28)) | (v22 << 6);
LABEL_23:
      uint64_t v35 = *(void *)(v56 + 48);
      uint64_t v36 = *(void *)(v55 + 72);
      unint64_t v58 = v30;
      sub_100629CE0(v35 + v36 * v30, (uint64_t)v21, type metadata accessor for CRLBoardIdentifier);
      if (*(void *)(v63 + 16))
      {
        uint64_t v37 = v63;
        Hasher.init(_seed:)();
        type metadata accessor for UUID();
        sub_100629DC8((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
        dispatch thunk of Hashable.hash(into:)();
        uint64_t v61 = type metadata accessor for CRLBoardIdentifierStorage(0);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        Swift::Int v38 = Hasher._finalize()();
        uint64_t v39 = -1 << *(unsigned char *)(v37 + 32);
        unint64_t v40 = v38 & ~v39;
        if ((*(void *)(v62 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40)) {
          break;
        }
      }
LABEL_6:
      sub_100629D48((uint64_t)v21, type metadata accessor for CRLBoardIdentifier);
      *(unint64_t *)((char *)v52 + ((v58 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v58;
      BOOL v29 = __OFADD__(v57++, 1);
      unint64_t v28 = v59;
      int64_t v22 = v60;
      if (v29)
      {
        __break(1u);
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      if (!v59) {
        goto LABEL_9;
      }
    }
    uint64_t v41 = ~v39;
    while (1)
    {
      sub_100629CE0(*(void *)(v63 + 48) + v40 * v36, (uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
      char v42 = static UUID.== infix(_:_:)();
      sub_100629CE0((uint64_t)v17, (uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
      sub_100629CE0((uint64_t)v21, (uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
      if ((v42 & 1) == 0)
      {
        sub_100629D48((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
        sub_100629D48((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
        sub_100629D48((uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
        goto LABEL_27;
      }
      uint64_t v43 = *(int *)(v61 + 20);
      uint64_t v44 = *(void *)&v13[v43];
      uint64_t v45 = *(void *)&v13[v43 + 8];
      id v46 = &v9[v43];
      if (v44 == *(void *)v46 && v45 == *((void *)v46 + 1)) {
        break;
      }
      char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_100629D48((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
      sub_100629D48((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
      sub_100629D48((uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
      if (v48) {
        goto LABEL_36;
      }
LABEL_27:
      unint64_t v40 = (v40 + 1) & v41;
      if (((*(void *)(v62 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40) & 1) == 0) {
        goto LABEL_6;
      }
    }
    sub_100629D48((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
    sub_100629D48((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
    sub_100629D48((uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
LABEL_36:
    sub_100629D48((uint64_t)v21, type metadata accessor for CRLBoardIdentifier);
    unint64_t v28 = v59;
    int64_t v22 = v60;
    if (v59) {
      continue;
    }
    break;
  }
LABEL_9:
  int64_t v31 = v22 + 1;
  if (__OFADD__(v22, 1)) {
    goto LABEL_40;
  }
  if (v31 >= v54) {
    goto LABEL_38;
  }
  unint64_t v32 = *(void *)(v53 + 8 * v31);
  int64_t v33 = v22 + 1;
  if (v32) {
    goto LABEL_22;
  }
  int64_t v33 = v22 + 2;
  if (v22 + 2 >= v54) {
    goto LABEL_38;
  }
  unint64_t v32 = *(void *)(v53 + 8 * v33);
  if (v32) {
    goto LABEL_22;
  }
  int64_t v33 = v22 + 3;
  if (v22 + 3 >= v54) {
    goto LABEL_38;
  }
  unint64_t v32 = *(void *)(v53 + 8 * v33);
  if (v32) {
    goto LABEL_22;
  }
  uint64_t v34 = v22 + 4;
  if (v22 + 4 >= v54)
  {
LABEL_38:
    uint64_t v49 = v56;
    swift_retain();
    sub_10052BE70(v52, v51, v57, v49);
    return;
  }
  unint64_t v32 = *(void *)(v53 + 8 * v34);
  if (v32)
  {
    int64_t v33 = v22 + 4;
LABEL_22:
    uint64_t v59 = (v32 - 1) & v32;
    int64_t v60 = v33;
    unint64_t v30 = __clz(__rbit64(v32)) + (v33 << 6);
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v33 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v33 >= v54) {
      goto LABEL_38;
    }
    unint64_t v32 = *(void *)(v53 + 8 * v33);
    ++v34;
    if (v32) {
      goto LABEL_22;
    }
  }
LABEL_41:
  __break(1u);
}

uint64_t sub_10062D238(uint64_t a1, uint64_t a2)
{
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, v10);
    bzero((char *)&v16 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    sub_10062CCC4((unint64_t *)((char *)&v16 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    uint64_t v12 = v11;
    swift_release();
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, v8);
    swift_bridgeObjectRetain();
    sub_10062CCC4((unint64_t *)v13, v7, a1, a2);
    uint64_t v12 = v14;
    swift_release();
    swift_bridgeObjectRelease();
    swift_slowDealloc();
    swift_bridgeObjectRelease_n();
  }
  return v12;
}

uint64_t sub_10062D404(uint64_t a1, double a2)
{
  *(void *)(v3 + 48) = v2;
  *(double *)(v3 + 40) = a2;
  *(void *)(v3 + 32) = a1;
  *(void *)(v3 + 56) = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  *(void *)(v3 + 64) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v3 + 72) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 80) = v5;
  *(void *)(v3 + 88) = v4;
  return _swift_task_switch(sub_10062D4D4, v5, v4);
}

uint64_t sub_10062D4D4()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 40);
  sub_100629CE0(*(void *)(v0 + 32), v1, type metadata accessor for CRLBoardIdentifier);
  swift_storeEnumTagMultiPayload();
  uint64_t v3 = (objc_class *)type metadata accessor for CRLBoardPreviewImageCache.LookupKey(0);
  uint64_t v4 = (char *)objc_allocWithZone(v3);
  sub_100629CE0(v1, (uint64_t)&v4[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item], type metadata accessor for CRLBoardPreviewImageCache.Item);
  uint64_t v5 = &v4[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  *(void *)&v4[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale] = v2;
  *(void *)(v0 + 16) = v4;
  *(void *)(v0 + 24) = v3;
  [v0 init];
  *(void *)(v0 + 96) = v6;
  sub_100629D48(v1, type metadata accessor for CRLBoardPreviewImageCache.Item);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_10062D64C;
  return sub_100617930((uint64_t)v6);
}

uint64_t sub_10062D64C(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  v4[14] = a1;
  v4[15] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = v4[10];
    uint64_t v7 = v4[11];
    size_t v8 = sub_1006321B0;
  }
  else
  {
    uint64_t v9 = (void *)swift_task_alloc();
    v4[16] = v9;
    *uint64_t v9 = v5;
    v9[1] = sub_10062D7C0;
    v9[4] = a1;
    size_t v8 = sub_100614394;
    uint64_t v6 = a1;
    uint64_t v7 = 0;
  }
  return _swift_task_switch(v8, v6, v7);
}

uint64_t sub_10062D7C0(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[10];
    uint64_t v6 = v4[11];
    uint64_t v7 = sub_1006321B4;
  }
  else
  {
    v4[18] = a1;
    uint64_t v5 = v4[10];
    uint64_t v6 = v4[11];
    uint64_t v7 = sub_1006321DC;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_10062D8E8(double a1, double a2)
{
  id v4 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:a1, a2];
  uint64_t v5 = swift_allocObject();
  *(double *)(v5 + 16) = a1;
  *(double *)(v5 + 24) = a2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_10062DAB0;
  *(void *)(v6 + 24) = v5;
  v11[4] = sub_10062DAC8;
  v11[5] = v6;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = *(void *)"";
  v11[2] = sub_10061B7E4;
  v11[3] = &unk_10150B6D0;
  uint64_t v7 = _Block_copy(v11);
  swift_retain();
  swift_release();
  id v8 = [v4 imageWithActions:v7];

  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    id v10 = [objc_allocWithZone((Class)CRLImage) initWithUIImage:v8];
    swift_release();

    return (uint64_t)v10;
  }
  return result;
}

uint64_t sub_10062DAA0()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_10062DAB0(void *a1)
{
  return sub_10061DBD4(a1);
}

uint64_t sub_10062DAB8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10062DAC8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10062DAF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10062DB00()
{
  return swift_release();
}

uint64_t sub_10062DB08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10062DB70(uint64_t a1)
{
  return sub_100EEE4D4(a1, *(void *)(v1 + 16));
}

uint64_t sub_10062DB78(uint64_t a1)
{
  return sub_1008EA344(a1, *(void *)(v1 + 16));
}

uint64_t sub_10062DB80(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *((void *)v2 + 2);
  uint64_t v7 = *((void *)v2 + 3);
  double v8 = v2[4];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_100528D08;
  return sub_1006223F4(v8, a1, a2, v6, v7);
}

uint64_t sub_10062DC44()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10062DC7C()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardPreviewImageCache.Item(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  swift_unknownObjectRelease();
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v11 = type metadata accessor for UUID();
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
      v12(v0 + v3, v11);
      type metadata accessor for CRLBoardIdentifierStorage(0);
      swift_bridgeObjectRelease();
      uint64_t v13 = sub_1005057FC(&qword_10169FA80);
      v12(v0 + v3 + *(int *)(v13 + 48), v11);
      break;
    case 1:
      uint64_t v14 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v0 + v3, v14);
      type metadata accessor for CRLBoardIdentifierStorage(0);
      goto LABEL_8;
    case 0:
      uint64_t v9 = sub_1005057FC(&qword_101670F30);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v0 + v3, 5, v9))
      {
        uint64_t v10 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v0 + v3, v10);
LABEL_8:
        swift_bridgeObjectRelease();
      }
      break;
  }
  uint64_t v15 = v2 | v6 | 7;
  unint64_t v16 = (((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + v6 + 8) & ~v6;
  uint64_t v17 = v16 + v7;
  uint64_t v18 = v0 + v16;
  uint64_t v19 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v17, v15);
}

uint64_t sub_10062DF78(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(type metadata accessor for CRLBoardPreviewImageCache.Item(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v9 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v11 = v1[4];
  uint64_t v12 = (uint64_t)v1 + v6;
  double v13 = *(double *)((char *)v1 + v7);
  uint64_t v14 = (uint64_t)v1 + ((v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  *uint64_t v15 = v3;
  v15[1] = sub_100528D08;
  return sub_100622BF4(v13, a1, v9, v10, v11, v12, v14);
}

uint64_t sub_10062E0F4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10050BF48(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10062E138()
{
  unint64_t result = qword_101677148;
  if (!qword_101677148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677148);
  }
  return result;
}

unint64_t sub_10062E18C()
{
  unint64_t result = qword_101677160;
  if (!qword_101677160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677160);
  }
  return result;
}

unint64_t sub_10062E1E0()
{
  unint64_t result = qword_101677170;
  if (!qword_101677170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677170);
  }
  return result;
}

unint64_t sub_10062E234()
{
  unint64_t result = qword_101677190;
  if (!qword_101677190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677190);
  }
  return result;
}

unint64_t sub_10062E288()
{
  unint64_t result = qword_1016771D8;
  if (!qword_1016771D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016771D8);
  }
  return result;
}

unint64_t sub_10062E2DC()
{
  unint64_t result = qword_1016771E8;
  if (!qword_1016771E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016771E8);
  }
  return result;
}

unint64_t sub_10062E330()
{
  unint64_t result = qword_1016771F8;
  if (!qword_1016771F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016771F8);
  }
  return result;
}

unint64_t sub_10062E384()
{
  unint64_t result = qword_101677200;
  if (!qword_101677200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677200);
  }
  return result;
}

unint64_t sub_10062E3D8()
{
  unint64_t result = qword_101677208;
  if (!qword_101677208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677208);
  }
  return result;
}

unint64_t sub_10062E42C()
{
  unint64_t result = qword_101677210;
  if (!qword_101677210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677210);
  }
  return result;
}

unint64_t sub_10062E480()
{
  unint64_t result = qword_101677218;
  if (!qword_101677218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677218);
  }
  return result;
}

unint64_t sub_10062E4D4()
{
  unint64_t result = qword_101677280;
  if (!qword_101677280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677280);
  }
  return result;
}

unint64_t sub_10062E528()
{
  unint64_t result = qword_101677288;
  if (!qword_101677288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677288);
  }
  return result;
}

unint64_t sub_10062E57C()
{
  unint64_t result = qword_1016772A8;
  if (!qword_1016772A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016772A8);
  }
  return result;
}

unint64_t sub_10062E5D0()
{
  unint64_t result = qword_1016772B0;
  if (!qword_1016772B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016772B0);
  }
  return result;
}

uint64_t sub_10062E624(uint64_t *a1)
{
  return sub_100614E88(a1);
}

void sub_10062E62C()
{
}

void sub_10062E648()
{
}

void sub_10062E650()
{
}

uint64_t sub_10062E658()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10062E6A0()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_100528D08;
  *(_OWORD *)(v2 + 64) = v3;
  return _swift_task_switch(sub_100615654, 0, 0);
}

uint64_t sub_10062E74C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10062E784()
{
  return sub_1006237C0(*(void *)(v0 + 16));
}

uint64_t sub_10062E78C()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10062E7C4()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10062E80C(uint64_t a1)
{
  return sub_100EEE844(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(uint64_t (**)(id))(v1 + 32));
}

uint64_t sub_10062E818()
{
  return sub_10062E830((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10062E830(void (*a1)(void))
{
  swift_unknownObjectRelease();

  a1(*(void *)(v1 + 40));

  return _swift_deallocObject(v1, 48, 7);
}

uint64_t sub_10062E888(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_1006259D0(a1, v4, v5, v7, v6);
}

uint64_t sub_10062E948(uint64_t a1)
{
  return sub_1008EA4BC(a1, *(void *)(v1 + 16));
}

void sub_10062E950(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100522D7C(a1, (uint64_t)v31);
  type metadata accessor for CRLBoardPreviewImageCache.CacheEntry();
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"cache(_:willEvictObject:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 1321, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"cache(_:willEvictObject:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardPreviewImageCache.swift", 101, 2, 1321);
    return;
  }
  uint64_t v12 = v29[5];
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 1, 1, v13);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v14 = static MainActor.shared.getter();
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v14;
  uint64_t v15[3] = &protocol witness table for MainActor;
  void v15[4] = v12;
  sub_1005912D0((uint64_t)v11, (uint64_t)&unk_101677450, (uint64_t)v15);
  swift_release();
  sub_100629CE0(*(void *)(v12 + 112) + OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item, (uint64_t)v7, type metadata accessor for CRLBoardPreviewImageCache.Item);
  unint64_t v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform25CRLBoardPreviewImageCache_cachedSizes);
  swift_beginAccess();
  uint64_t v17 = *v16;
  if (!*(void *)(*v16 + 16)) {
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v18 = sub_100956A4C((uint64_t)v7);
  if ((v19 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    sub_100629D48((uint64_t)v7, type metadata accessor for CRLBoardPreviewImageCache.Item);
    swift_release();
    return;
  }
  uint64_t v20 = *(void *)(*(void *)(v17 + 56) + 8 * v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_100629D48((uint64_t)v7, type metadata accessor for CRLBoardPreviewImageCache.Item);
  uint64_t v30 = v20;
  unint64_t v21 = *(unsigned char **)(v12 + 112);
  double v22 = *(double *)&v21[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass];
  double v23 = *(double *)&v21[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 8];
  char v24 = v21[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_sizeClass + 16];
  Swift::UInt64 v25 = *(void *)&v21[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_contentsScale];
  uint64_t v26 = v21;
  sub_100D17218(v22, v23, v24, (uint64_t)v31, v25);
  uint64_t v27 = *(void *)(v30 + 16);
  swift_bridgeObjectRelease();
  if (v27)
  {
    swift_release();
  }
  else
  {
    uint64_t v28 = (uint64_t)&v26[OBJC_IVAR____TtCC8Freeform25CRLBoardPreviewImageCache9LookupKey_item];
    swift_beginAccess();
    sub_10095C178(v28);
    swift_endAccess();
    swift_release();

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10062ED24()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10062ED64(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_1006268F4(a1, v4, v5, v6);
}

unint64_t sub_10062EE18()
{
  unint64_t result = qword_101677458;
  if (!qword_101677458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677458);
  }
  return result;
}

uint64_t sub_10062EE6C()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_10062EEAC(void *a1)
{
  sub_10061B448(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(uint64_t **)(v1 + 56));
}

uint64_t sub_10062EEBC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10062EECC()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10062EFBC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100528D08;
  return sub_100618A80(a1, v6, v7, v8, v9, v10);
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.Item.CodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.Item.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.Item.FolderCodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.Item.FolderCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.Item.BoardCodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.Item.BoardCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.Item.SceneCodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.Item.SceneCodingKeys;
}

uint64_t getEnumTagSinglePayload for CRLSyncActivityPriority(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CRLBoardPreviewImageCache.ImageSizeClass.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    void *result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10062F294);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.ImageSizeClass.CodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.ImageSizeClass.BoardListViewCellCodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.BoardListViewCellCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.ImageSizeClass.FolderGridViewCellQuadrantCodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.FolderGridViewCellQuadrantCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.ImageSizeClass.FolderGridViewCellEntireCodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.FolderGridViewCellEntireCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.ImageSizeClass.BoardCanvasRenderingPreviewCodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.BoardCanvasRenderingPreviewCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.ImageSizeClass.SpotlightPreviewCodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.SpotlightPreviewCodingKeys;
}

unsigned char *_s8Freeform25CRLBoardPreviewImageCacheC4ItemO16FolderCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10062F3B8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.ImageSizeClass.CustomCodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.ImageSizeClass.CustomCodingKeys;
}

uint64_t getEnumTagSinglePayload for CRLLineEndData.JoinType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s8Freeform25CRLBoardPreviewImageCacheC4ItemO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10062F54CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.LookupKey.CodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.LookupKey.CodingKeys;
}

void *initializeBufferWithCopyOfBuffer for CRLBoardPreviewImageCache.CacheEntrySnapshot(void *a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for CRLBoardPreviewImageCache.CacheEntrySnapshot(uint64_t a1)
{
  int v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for CRLBoardPreviewImageCache.CacheEntrySnapshot(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  BOOL v7 = *(void **)(a2 + 8);
  int v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for CRLBoardPreviewImageCache.CacheEntrySnapshot(uint64_t a1, _OWORD *a2)
{
  unsigned int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.CacheEntrySnapshot()
{
  return &type metadata for CRLBoardPreviewImageCache.CacheEntrySnapshot;
}

uint64_t *sub_10062F69C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for CRLBoardPreviewImageCache.Item(0);
      int v10 = swift_getEnumCaseMultiPayload();
      if (v10 != 2)
      {
        if (v10 == 1)
        {
LABEL_10:
          uint64_t v11 = type metadata accessor for UUID();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
          uint64_t v12 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
          uint64_t v13 = (uint64_t *)((char *)a1 + v12);
          uint64_t v14 = (uint64_t *)((char *)a2 + v12);
          uint64_t v15 = v14[1];
          *uint64_t v13 = *v14;
          v13[1] = v15;
          swift_bridgeObjectRetain();
LABEL_20:
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        uint64_t v29 = sub_1005057FC(&qword_101670F30);
        uint64_t v30 = *(void *)(v29 - 8);
        if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v30 + 48))(a2, 5, v29))
        {
          uint64_t v38 = type metadata accessor for UUID();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v38 - 8) + 16))(a1, a2, v38);
          uint64_t v39 = *(int *)(v29 + 48);
          unint64_t v40 = (uint64_t *)((char *)a1 + v39);
          uint64_t v41 = (uint64_t *)((char *)a2 + v39);
          uint64_t v42 = v41[1];
          *unint64_t v40 = *v41;
          v40[1] = v42;
          uint64_t v43 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(v30 + 56);
          swift_bridgeObjectRetain();
          v43(a1, 0, 5, v29);
          goto LABEL_20;
        }
LABEL_17:
        uint64_t v31 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
        memcpy(a1, a2, *(void *)(*(void *)(v31 - 8) + 64));
        goto LABEL_20;
      }
LABEL_15:
      uint64_t v18 = type metadata accessor for UUID();
      char v19 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v18 - 8) + 16);
      v19(a1, a2, v18);
      uint64_t v20 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      unint64_t v21 = (uint64_t *)((char *)a1 + v20);
      double v22 = (uint64_t *)((char *)a2 + v20);
      uint64_t v23 = v22[1];
      void *v21 = *v22;
      v21[1] = v23;
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1005057FC(&qword_10169FA80);
      v19((uint64_t *)((char *)a1 + *(int *)(v24 + 48)), (uint64_t *)((char *)a2 + *(int *)(v24 + 48)), v18);
      uint64_t v25 = *(int *)(v24 + 64);
      uint64_t v26 = (_OWORD *)((char *)a1 + v25);
      uint64_t v27 = (_OWORD *)((char *)a2 + v25);
      long long v28 = v27[1];
      *uint64_t v26 = *v27;
      v26[1] = v28;
      goto LABEL_20;
    }
    if (!EnumCaseMultiPayload)
    {
      type metadata accessor for CRLBoardPreviewImageCache.Item(0);
      int v8 = swift_getEnumCaseMultiPayload();
      if (v8 != 2)
      {
        if (v8 == 1) {
          goto LABEL_10;
        }
        uint64_t v16 = sub_1005057FC(&qword_101670F30);
        uint64_t v17 = *(void *)(v16 - 8);
        if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(a2, 5, v16))
        {
          uint64_t v32 = type metadata accessor for UUID();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
          uint64_t v33 = *(int *)(v16 + 48);
          uint64_t v34 = (uint64_t *)((char *)a1 + v33);
          uint64_t v35 = (uint64_t *)((char *)a2 + v33);
          uint64_t v36 = v35[1];
          *uint64_t v34 = *v35;
          v34[1] = v36;
          uint64_t v37 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(v17 + 56);
          swift_bridgeObjectRetain();
          v37(a1, 0, 5, v16);
          goto LABEL_20;
        }
        goto LABEL_17;
      }
      goto LABEL_15;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t sub_10062FC30(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    type metadata accessor for CRLBoardPreviewImageCache.Item(0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result != 2)
    {
      if (result == 1) {
        goto LABEL_5;
      }
      goto LABEL_8;
    }
  }
  else
  {
    if (result) {
      return result;
    }
    type metadata accessor for CRLBoardPreviewImageCache.Item(0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result != 2)
    {
      if (result == 1)
      {
LABEL_5:
        uint64_t v3 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
        type metadata accessor for CRLBoardIdentifierStorage(0);
LABEL_15:
        return swift_bridgeObjectRelease();
      }
LABEL_8:
      if (result) {
        return result;
      }
      uint64_t v4 = sub_1005057FC(&qword_101670F30);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 5, v4);
      if (result) {
        return result;
      }
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
      goto LABEL_15;
    }
  }
  uint64_t v5 = type metadata accessor for UUID();
  int v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), a1, v5);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(sub_1005057FC(&qword_10169FA80) + 48);

  return v8(v6, v5);
}

char *sub_10062FE48(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for CRLBoardPreviewImageCache.Item(0);
    int v8 = swift_getEnumCaseMultiPayload();
    if (v8 != 2)
    {
      if (v8 == 1)
      {
LABEL_8:
        uint64_t v9 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        uint64_t v11 = &a1[v10];
        uint64_t v12 = &a2[v10];
        uint64_t v13 = *((void *)v12 + 1);
        *(void *)uint64_t v11 = *(void *)v12;
        *((void *)v11 + 1) = v13;
        swift_bridgeObjectRetain();
LABEL_18:
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      uint64_t v27 = sub_1005057FC(&qword_101670F30);
      uint64_t v28 = *(void *)(v27 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(a2, 5, v27))
      {
        uint64_t v36 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(a1, a2, v36);
        uint64_t v37 = *(int *)(v27 + 48);
        uint64_t v38 = &a1[v37];
        uint64_t v39 = &a2[v37];
        uint64_t v40 = *((void *)v39 + 1);
        *(void *)uint64_t v38 = *(void *)v39;
        *((void *)v38 + 1) = v40;
        uint64_t v41 = *(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56);
        swift_bridgeObjectRetain();
        v41(a1, 0, 5, v27);
        goto LABEL_18;
      }
LABEL_15:
      uint64_t v29 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
      memcpy(a1, a2, *(void *)(*(void *)(v29 - 8) + 64));
      goto LABEL_18;
    }
LABEL_13:
    uint64_t v16 = type metadata accessor for UUID();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    v17(a1, a2, v16);
    uint64_t v18 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    char v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)char v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1005057FC(&qword_10169FA80);
    v17(&a1[*(int *)(v22 + 48)], &a2[*(int *)(v22 + 48)], v16);
    uint64_t v23 = *(int *)(v22 + 64);
    uint64_t v24 = &a1[v23];
    uint64_t v25 = &a2[v23];
    long long v26 = *((_OWORD *)v25 + 1);
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v26;
    goto LABEL_18;
  }
  if (!EnumCaseMultiPayload)
  {
    type metadata accessor for CRLBoardPreviewImageCache.Item(0);
    int v7 = swift_getEnumCaseMultiPayload();
    if (v7 != 2)
    {
      if (v7 == 1) {
        goto LABEL_8;
      }
      uint64_t v14 = sub_1005057FC(&qword_101670F30);
      uint64_t v15 = *(void *)(v14 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(a2, 5, v14))
      {
        uint64_t v30 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
        uint64_t v31 = *(int *)(v14 + 48);
        uint64_t v32 = &a1[v31];
        uint64_t v33 = &a2[v31];
        uint64_t v34 = *((void *)v33 + 1);
        *(void *)uint64_t v32 = *(void *)v33;
        *((void *)v32 + 1) = v34;
        uint64_t v35 = *(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56);
        swift_bridgeObjectRetain();
        v35(a1, 0, 5, v14);
        goto LABEL_18;
      }
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_100630398(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100629D48((uint64_t)a1, type metadata accessor for CRLBoardPreviewImageCache.CacheError);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for CRLBoardPreviewImageCache.Item(0);
      int v8 = swift_getEnumCaseMultiPayload();
      if (v8 != 2)
      {
        if (v8 == 1)
        {
LABEL_9:
          uint64_t v9 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
          uint64_t v10 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
          uint64_t v11 = &a1[v10];
          uint64_t v12 = &a2[v10];
          *(void *)uint64_t v11 = *(void *)v12;
          *((void *)v11 + 1) = *((void *)v12 + 1);
          swift_bridgeObjectRetain();
LABEL_19:
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        uint64_t v25 = sub_1005057FC(&qword_101670F30);
        uint64_t v26 = *(void *)(v25 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(a2, 5, v25))
        {
          uint64_t v33 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
          uint64_t v34 = *(int *)(v25 + 48);
          uint64_t v35 = &a1[v34];
          uint64_t v36 = &a2[v34];
          *(void *)uint64_t v35 = *(void *)v36;
          *((void *)v35 + 1) = *((void *)v36 + 1);
          uint64_t v37 = *(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56);
          swift_bridgeObjectRetain();
          v37(a1, 0, 5, v25);
          goto LABEL_19;
        }
LABEL_16:
        uint64_t v27 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
        memcpy(a1, a2, *(void *)(*(void *)(v27 - 8) + 64));
        goto LABEL_19;
      }
LABEL_14:
      uint64_t v15 = type metadata accessor for UUID();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      v16(a1, a2, v15);
      uint64_t v17 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      uint64_t v18 = &a1[v17];
      char v19 = &a2[v17];
      *(void *)uint64_t v18 = *(void *)v19;
      *((void *)v18 + 1) = *((void *)v19 + 1);
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1005057FC(&qword_10169FA80);
      v16(&a1[*(int *)(v20 + 48)], &a2[*(int *)(v20 + 48)], v15);
      uint64_t v21 = *(int *)(v20 + 64);
      uint64_t v22 = &a1[v21];
      uint64_t v23 = &a2[v21];
      long long v24 = *((_OWORD *)v23 + 1);
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v24;
      goto LABEL_19;
    }
    if (!EnumCaseMultiPayload)
    {
      type metadata accessor for CRLBoardPreviewImageCache.Item(0);
      int v7 = swift_getEnumCaseMultiPayload();
      if (v7 != 2)
      {
        if (v7 == 1) {
          goto LABEL_9;
        }
        uint64_t v13 = sub_1005057FC(&qword_101670F30);
        uint64_t v14 = *(void *)(v13 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 5, v13))
        {
          uint64_t v28 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
          uint64_t v29 = *(int *)(v13 + 48);
          uint64_t v30 = &a1[v29];
          uint64_t v31 = &a2[v29];
          *(void *)uint64_t v30 = *(void *)v31;
          *((void *)v30 + 1) = *((void *)v31 + 1);
          uint64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
          swift_bridgeObjectRetain();
          v32(a1, 0, 5, v13);
          goto LABEL_19;
        }
        goto LABEL_16;
      }
      goto LABEL_14;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_10063093C(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for CRLBoardPreviewImageCache.Item(0);
    int v8 = swift_getEnumCaseMultiPayload();
    if (v8 != 2)
    {
      if (v8 == 1)
      {
LABEL_8:
        uint64_t v9 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        uint64_t v10 = type metadata accessor for CRLBoardIdentifierStorage(0);
        *(_OWORD *)&a1[*(int *)(v10 + 20)] = *(_OWORD *)&a2[*(int *)(v10 + 20)];
LABEL_17:
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      uint64_t v11 = sub_1005057FC(&qword_101670F30);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 5, v11))
      {
LABEL_15:
        uint64_t v21 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
        memcpy(a1, a2, *(void *)(*(void *)(v21 - 8) + 64));
        goto LABEL_17;
      }
LABEL_16:
      uint64_t v22 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(a1, a2, v22);
      *(_OWORD *)&a1[*(int *)(v11 + 48)] = *(_OWORD *)&a2[*(int *)(v11 + 48)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 5, v11);
      goto LABEL_17;
    }
LABEL_13:
    uint64_t v13 = type metadata accessor for UUID();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
    v14(a1, a2, v13);
    uint64_t v15 = type metadata accessor for CRLBoardIdentifierStorage(0);
    *(_OWORD *)&a1[*(int *)(v15 + 20)] = *(_OWORD *)&a2[*(int *)(v15 + 20)];
    uint64_t v16 = sub_1005057FC(&qword_10169FA80);
    v14(&a1[*(int *)(v16 + 48)], &a2[*(int *)(v16 + 48)], v13);
    uint64_t v17 = *(int *)(v16 + 64);
    uint64_t v18 = &a1[v17];
    char v19 = &a2[v17];
    long long v20 = *((_OWORD *)v19 + 1);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v20;
    goto LABEL_17;
  }
  if (!EnumCaseMultiPayload)
  {
    type metadata accessor for CRLBoardPreviewImageCache.Item(0);
    int v7 = swift_getEnumCaseMultiPayload();
    if (v7 != 2)
    {
      if (v7 == 1) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_1005057FC(&qword_101670F30);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 5, v11)) {
        goto LABEL_15;
      }
      goto LABEL_16;
    }
    goto LABEL_13;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_100630E44(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100629D48((uint64_t)a1, type metadata accessor for CRLBoardPreviewImageCache.CacheError);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for CRLBoardPreviewImageCache.Item(0);
      int v8 = swift_getEnumCaseMultiPayload();
      if (v8 != 2)
      {
        if (v8 == 1)
        {
LABEL_9:
          uint64_t v9 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
          uint64_t v10 = type metadata accessor for CRLBoardIdentifierStorage(0);
          *(_OWORD *)&a1[*(int *)(v10 + 20)] = *(_OWORD *)&a2[*(int *)(v10 + 20)];
LABEL_18:
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        uint64_t v11 = sub_1005057FC(&qword_101670F30);
        uint64_t v12 = *(void *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 5, v11))
        {
LABEL_16:
          uint64_t v21 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
          memcpy(a1, a2, *(void *)(*(void *)(v21 - 8) + 64));
          goto LABEL_18;
        }
LABEL_17:
        uint64_t v22 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(a1, a2, v22);
        *(_OWORD *)&a1[*(int *)(v11 + 48)] = *(_OWORD *)&a2[*(int *)(v11 + 48)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 5, v11);
        goto LABEL_18;
      }
LABEL_14:
      uint64_t v13 = type metadata accessor for UUID();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
      v14(a1, a2, v13);
      uint64_t v15 = type metadata accessor for CRLBoardIdentifierStorage(0);
      *(_OWORD *)&a1[*(int *)(v15 + 20)] = *(_OWORD *)&a2[*(int *)(v15 + 20)];
      uint64_t v16 = sub_1005057FC(&qword_10169FA80);
      v14(&a1[*(int *)(v16 + 48)], &a2[*(int *)(v16 + 48)], v13);
      uint64_t v17 = *(int *)(v16 + 64);
      uint64_t v18 = &a1[v17];
      char v19 = &a2[v17];
      long long v20 = *((_OWORD *)v19 + 1);
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v20;
      goto LABEL_18;
    }
    if (!EnumCaseMultiPayload)
    {
      type metadata accessor for CRLBoardPreviewImageCache.Item(0);
      int v7 = swift_getEnumCaseMultiPayload();
      if (v7 != 2)
      {
        if (v7 == 1) {
          goto LABEL_9;
        }
        uint64_t v11 = sub_1005057FC(&qword_101670F30);
        uint64_t v12 = *(void *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 5, v11)) {
          goto LABEL_16;
        }
        goto LABEL_17;
      }
      goto LABEL_14;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100631370()
{
  uint64_t result = type metadata accessor for CRLBoardPreviewImageCache.Item(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_1006313FC()
{
  unint64_t result = qword_101677548;
  if (!qword_101677548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677548);
  }
  return result;
}

unint64_t sub_100631454()
{
  unint64_t result = qword_101677550;
  if (!qword_101677550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677550);
  }
  return result;
}

unint64_t sub_1006314AC()
{
  unint64_t result = qword_101677558;
  if (!qword_101677558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677558);
  }
  return result;
}

unint64_t sub_100631504()
{
  unint64_t result = qword_101677560;
  if (!qword_101677560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677560);
  }
  return result;
}

unint64_t sub_10063155C()
{
  unint64_t result = qword_101677568;
  if (!qword_101677568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677568);
  }
  return result;
}

unint64_t sub_1006315B4()
{
  unint64_t result = qword_101677570;
  if (!qword_101677570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677570);
  }
  return result;
}

unint64_t sub_10063160C()
{
  unint64_t result = qword_101677578;
  if (!qword_101677578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677578);
  }
  return result;
}

unint64_t sub_100631664()
{
  unint64_t result = qword_101677580;
  if (!qword_101677580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677580);
  }
  return result;
}

unint64_t sub_1006316BC()
{
  unint64_t result = qword_101677588;
  if (!qword_101677588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677588);
  }
  return result;
}

unint64_t sub_100631714()
{
  unint64_t result = qword_101677590;
  if (!qword_101677590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677590);
  }
  return result;
}

unint64_t sub_10063176C()
{
  unint64_t result = qword_101677598;
  if (!qword_101677598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677598);
  }
  return result;
}

unint64_t sub_1006317C4()
{
  unint64_t result = qword_1016775A0;
  if (!qword_1016775A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016775A0);
  }
  return result;
}

unint64_t sub_10063181C()
{
  unint64_t result = qword_1016775A8;
  if (!qword_1016775A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016775A8);
  }
  return result;
}

unint64_t sub_100631874()
{
  unint64_t result = qword_1016775B0;
  if (!qword_1016775B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016775B0);
  }
  return result;
}

unint64_t sub_1006318CC()
{
  unint64_t result = qword_1016775B8;
  if (!qword_1016775B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016775B8);
  }
  return result;
}

unint64_t sub_100631924()
{
  unint64_t result = qword_1016775C0;
  if (!qword_1016775C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016775C0);
  }
  return result;
}

unint64_t sub_10063197C()
{
  unint64_t result = qword_1016775C8;
  if (!qword_1016775C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016775C8);
  }
  return result;
}

unint64_t sub_1006319D4()
{
  unint64_t result = qword_1016775D0;
  if (!qword_1016775D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016775D0);
  }
  return result;
}

unint64_t sub_100631A2C()
{
  unint64_t result = qword_1016775D8;
  if (!qword_1016775D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016775D8);
  }
  return result;
}

unint64_t sub_100631A84()
{
  unint64_t result = qword_1016775E0;
  if (!qword_1016775E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016775E0);
  }
  return result;
}

unint64_t sub_100631ADC()
{
  unint64_t result = qword_1016775E8;
  if (!qword_1016775E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016775E8);
  }
  return result;
}

unint64_t sub_100631B34()
{
  unint64_t result = qword_1016775F0;
  if (!qword_1016775F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016775F0);
  }
  return result;
}

unint64_t sub_100631B8C()
{
  unint64_t result = qword_1016775F8;
  if (!qword_1016775F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016775F8);
  }
  return result;
}

unint64_t sub_100631BE4()
{
  unint64_t result = qword_101677600;
  if (!qword_101677600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677600);
  }
  return result;
}

unint64_t sub_100631C3C()
{
  unint64_t result = qword_101677608;
  if (!qword_101677608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677608);
  }
  return result;
}

unint64_t sub_100631C94()
{
  unint64_t result = qword_101677610;
  if (!qword_101677610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677610);
  }
  return result;
}

unint64_t sub_100631CEC()
{
  unint64_t result = qword_101677618;
  if (!qword_101677618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677618);
  }
  return result;
}

unint64_t sub_100631D44()
{
  unint64_t result = qword_101677620;
  if (!qword_101677620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677620);
  }
  return result;
}

unint64_t sub_100631D9C()
{
  unint64_t result = qword_101677628;
  if (!qword_101677628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677628);
  }
  return result;
}

unint64_t sub_100631DF4()
{
  unint64_t result = qword_101677630;
  if (!qword_101677630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677630);
  }
  return result;
}

unint64_t sub_100631E4C()
{
  unint64_t result = qword_101677638;
  if (!qword_101677638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677638);
  }
  return result;
}

unint64_t sub_100631EA0()
{
  unint64_t result = qword_101677648;
  if (!qword_101677648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677648);
  }
  return result;
}

unint64_t sub_100631EF4()
{
  unint64_t result = qword_101677658;
  if (!qword_101677658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677658);
  }
  return result;
}

unint64_t sub_100631F48()
{
  unint64_t result = qword_101677670;
  if (!qword_101677670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677670);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLBoardPreviewImageCache.CacheEntrySnapshot.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100632068);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardPreviewImageCache.CacheEntrySnapshot.CodingKeys()
{
  return &type metadata for CRLBoardPreviewImageCache.CacheEntrySnapshot.CodingKeys;
}

unint64_t sub_1006320A4()
{
  unint64_t result = qword_101677678;
  if (!qword_101677678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677678);
  }
  return result;
}

unint64_t sub_1006320FC()
{
  unint64_t result = qword_101677680;
  if (!qword_101677680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677680);
  }
  return result;
}

unint64_t sub_100632154()
{
  unint64_t result = qword_101677688;
  if (!qword_101677688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677688);
  }
  return result;
}

uint64_t InputDeviceData.isPencilUsed.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *SyncEvent.FetchedRecordZoneChanges.Deletion.recordID.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_100632208()
{
  return 0x6F73616552646E65;
}

uint64_t sub_100632224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6F73616552646E65 && a2 == 0xE90000000000006ELL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1006322C8(uint64_t a1)
{
  unint64_t v2 = sub_100632484();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100632304(uint64_t a1)
{
  unint64_t v2 = sub_100632484();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SessionEndData.encode(to:)(void *a1, char a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101677690);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  int v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_100632484();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v10[15] = a2;
  sub_1006324D8();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

unint64_t sub_100632484()
{
  unint64_t result = qword_101677698;
  if (!qword_101677698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677698);
  }
  return result;
}

unint64_t sub_1006324D8()
{
  unint64_t result = qword_1016776A0;
  if (!qword_1016776A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016776A0);
  }
  return result;
}

void *SessionEndData.init(from:)(void *a1)
{
  return sub_1006325D8(a1);
}

uint64_t sub_100632548()
{
  return DataEventType.toDict(timestampGranularity:)();
}

uint64_t sub_100632560()
{
  return DataEventType.toDict(timestampConfiguration:)();
}

uint64_t sub_100632578()
{
  return DataEventType.toDict(dataEventFormatter:)();
}

void *sub_100632590@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1006325D8(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_1006325BC(void *a1)
{
  return SessionEndData.encode(to:)(a1, *v1);
}

void *sub_1006325D8(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_1016776D0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v8 = sub_10050F848(a1, a1[3]);
  sub_100632484();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_100632B64();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
    int v8 = (void *)v10[15];
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  return v8;
}

unint64_t sub_100632748()
{
  unint64_t result = qword_1016776A8;
  if (!qword_1016776A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016776A8);
  }
  return result;
}

unint64_t sub_1006327A0()
{
  unint64_t result = qword_1016776B0;
  if (!qword_1016776B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016776B0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EndReason(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SessionEndData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    void *result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100632950);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionEndData()
{
  return &type metadata for SessionEndData;
}

unsigned char *storeEnumTagSinglePayload for SessionEndData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100632A24);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionEndData.CodingKeys()
{
  return &type metadata for SessionEndData.CodingKeys;
}

unint64_t sub_100632A60()
{
  unint64_t result = qword_1016776B8;
  if (!qword_1016776B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016776B8);
  }
  return result;
}

unint64_t sub_100632AB8()
{
  unint64_t result = qword_1016776C0;
  if (!qword_1016776C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016776C0);
  }
  return result;
}

unint64_t sub_100632B10()
{
  unint64_t result = qword_1016776C8;
  if (!qword_1016776C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016776C8);
  }
  return result;
}

unint64_t sub_100632B64()
{
  unint64_t result = qword_1016776D8;
  if (!qword_1016776D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016776D8);
  }
  return result;
}

uint64_t sub_100632BB8(uint64_t a1)
{
  return sub_100632C84(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, static AppSessionEndEvent.sessionGroup, &enum case for SessionGroup.default(_:));
}

uint64_t AppSessionEndEvent.sessionGroup.unsafeMutableAddressor()
{
  return sub_100632E04(&qword_10166ED98, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)static AppSessionEndEvent.sessionGroup);
}

uint64_t static AppSessionEndEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100632E98(&qword_10166ED98, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)static AppSessionEndEvent.sessionGroup, a1);
}

void *AppSessionEndEvent.requiresDiagnosticsConsent.unsafeMutableAddressor()
{
  return &static AppSessionEndEvent.requiresDiagnosticsConsent;
}

uint64_t sub_100632C5C(uint64_t a1)
{
  return sub_100632C84(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, static AppSessionEndEvent.timestampGranularity, &enum case for TimestampGranularity.hour(_:));
}

uint64_t sub_100632C84(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, unsigned int *a4)
{
  uint64_t v6 = a2(0);
  sub_100568B28(v6, a3);
  uint64_t v7 = sub_100556B74(v6, (uint64_t)a3);
  uint64_t v8 = *a4;
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104);

  return v9(v7, v8, v6);
}

uint64_t AppSessionEndEvent.timestampGranularity.unsafeMutableAddressor()
{
  return sub_100632E04(&qword_10166EDA0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)static AppSessionEndEvent.timestampGranularity);
}

uint64_t static AppSessionEndEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100632E98(&qword_10166EDA0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)static AppSessionEndEvent.timestampGranularity, a1);
}

uint64_t sub_100632D80()
{
  uint64_t v0 = type metadata accessor for TimeDurationGranularity();
  sub_100568B28(v0, static AppSessionEndEvent.timeDurationGranularity);
  sub_100556B74(v0, (uint64_t)static AppSessionEndEvent.timeDurationGranularity);
  return static TimeDurationGranularity.seconds.getter();
}

uint64_t AppSessionEndEvent.timeDurationGranularity.unsafeMutableAddressor()
{
  return sub_100632E04(&qword_10166EDA8, (uint64_t (*)(void))&type metadata accessor for TimeDurationGranularity, (uint64_t)static AppSessionEndEvent.timeDurationGranularity);
}

uint64_t sub_100632E04(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = a2(0);

  return sub_100556B74(v5, a3);
}

uint64_t static AppSessionEndEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100632E98(&qword_10166EDA8, (uint64_t (*)(void))&type metadata accessor for TimeDurationGranularity, (uint64_t)static AppSessionEndEvent.timeDurationGranularity, a1);
}

uint64_t sub_100632E98@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_100556B74(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t BoardInitialAppStateEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1005057FC(&qword_101670398);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t BoardInitialAppStateEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101670398);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t AppSessionEndEvent.sessionEndData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 20);
  uint64_t v4 = sub_1005057FC(&qword_1016703A0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AppSessionEndEvent(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_101677770);
}

uint64_t AppSessionEndEvent.sessionEndData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 20);
  uint64_t v4 = sub_1005057FC(&qword_1016703A0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *AppSessionEndEvent.sessionEndData.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t AppSessionEndEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 24);
  uint64_t v4 = sub_1005057FC(&qword_1016703A8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AppSessionEndEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 24);
  uint64_t v4 = sub_1005057FC(&qword_1016703A8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *AppSessionEndEvent.timedData.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t AppSessionEndEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for AppSessionEndEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_1005057FC(&qword_1016703A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = sub_1005057FC(&qword_1016703A8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t BoardInitialAppStateEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EventData();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t AppSessionEndEvent.Model.sessionEndData.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AppSessionEndEvent.Model(0) + 20));
}

uint64_t type metadata accessor for AppSessionEndEvent.Model(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101677820);
}

uint64_t AppSessionEndEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent.Model(0) + 24);
  uint64_t v4 = type metadata accessor for TimedData();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AppSessionEndEvent.Model.init(eventData:sessionEndData:timedData:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t v9 = type metadata accessor for AppSessionEndEvent.Model(0);
  *(unsigned char *)(a4 + *(int *)(v9 + 20)) = a2;
  uint64_t v10 = a4 + *(int *)(v9 + 24);
  uint64_t v11 = type metadata accessor for TimedData();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);

  return v12(v10, a3, v11);
}

uint64_t sub_1006335C0()
{
  uint64_t v1 = 0x456E6F6973736573;
  if (*v0 != 1) {
    uint64_t v1 = 0x74614464656D6974;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746144746E657665;
  }
}

uint64_t sub_100633628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100635804(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100633650(uint64_t a1)
{
  unint64_t v2 = sub_100633910();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10063368C(uint64_t a1)
{
  unint64_t v2 = sub_100633910();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AppSessionEndEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_1016776E0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_100633910();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v11[15] = 0;
  type metadata accessor for EventData();
  sub_100633DC8(&qword_1016776F0, (void (*)(uint64_t))&type metadata accessor for EventData);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    v11[14] = *(unsigned char *)(v3 + *(int *)(type metadata accessor for AppSessionEndEvent.Model(0) + 20));
    v11[13] = 1;
    sub_1006327A0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v11[12] = 2;
    type metadata accessor for TimedData();
    sub_100633DC8(&qword_1016776F8, (void (*)(uint64_t))&type metadata accessor for TimedData);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_100633910()
{
  unint64_t result = qword_1016776E8;
  if (!qword_1016776E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016776E8);
  }
  return result;
}

uint64_t AppSessionEndEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v26 = type metadata accessor for TimedData();
  uint64_t v24 = *(void *)(v26 - 8);
  __chkstk_darwin(v26, v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for EventData();
  uint64_t v27 = *(void *)(v30 - 8);
  __chkstk_darwin(v30, v7);
  uint64_t v29 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1005057FC(&qword_101677700);
  uint64_t v28 = *(void *)(v31 - 8);
  __chkstk_darwin(v31, v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for AppSessionEndEvent.Model(0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100633910();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  uint64_t v16 = v28;
  uint64_t v22 = v6;
  uint64_t v23 = v15;
  char v35 = 0;
  sub_100633DC8(&qword_101677708, (void (*)(uint64_t))&type metadata accessor for EventData);
  uint64_t v17 = v29;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v18 = (uint64_t)v23;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v23, v17, v30);
  char v33 = 1;
  sub_100632748();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v19 = v12;
  *(unsigned char *)(v18 + *(int *)(v12 + 20)) = v34;
  char v32 = 2;
  sub_100633DC8(&qword_101677710, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v20 = v26;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v31);
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v18 + *(int *)(v19 + 24), v22, v20);
  sub_100633E10(v18, v25);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return sub_100633E74(v18);
}

uint64_t sub_100633DC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100633E10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppSessionEndEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100633E74(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppSessionEndEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100633ED0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AppSessionEndEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_100633EE8(void *a1)
{
  return AppSessionEndEvent.Model.encode(to:)(a1);
}

uint64_t sub_100633F00@<X0>(uint64_t a1@<X8>)
{
  return sub_100633FA8(&qword_10166ED98, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)static AppSessionEndEvent.sessionGroup, a1);
}

uint64_t sub_100633F38@<X0>(uint64_t a1@<X8>)
{
  return sub_100633FA8(&qword_10166EDA0, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)static AppSessionEndEvent.timestampGranularity, a1);
}

uint64_t sub_100633F70@<X0>(uint64_t a1@<X8>)
{
  return sub_100633FA8(&qword_10166EDA8, (uint64_t (*)(void))&type metadata accessor for TimeDurationGranularity, (uint64_t)static AppSessionEndEvent.timeDurationGranularity, a1);
}

uint64_t sub_100633FA8@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_100556B74(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_10063404C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_1005057FC(&qword_1016703A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  uint64_t v9 = sub_1005057FC(&qword_1016703A8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for AppSessionEndEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005057FC(&qword_101670398);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1005057FC(&qword_1016703A0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1005057FC(&qword_1016703A8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for AppSessionEndEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1005057FC(&qword_1016703A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_1005057FC(&qword_1016703A8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for AppSessionEndEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_1016703A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_1016703A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for AppSessionEndEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_1016703A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_1016703A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for AppSessionEndEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_1016703A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_1016703A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for AppSessionEndEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_1016703A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_1016703A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionEndEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100634824);
}

uint64_t sub_100634824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670398);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1005057FC(&qword_1016703A0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_1005057FC(&qword_1016703A8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for AppSessionEndEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100634990);
}

uint64_t sub_100634990(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1005057FC(&qword_101670398);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_1005057FC(&qword_1016703A0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_1005057FC(&qword_1016703A8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_100634AF4()
{
  sub_100634BF8();
  if (v0 <= 0x3F)
  {
    sub_100634CC4();
    if (v1 <= 0x3F)
    {
      sub_100634D2C();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100634BF8()
{
  if (!qword_101677780)
  {
    type metadata accessor for EventData();
    sub_100633DC8(&qword_101677708, (void (*)(uint64_t))&type metadata accessor for EventData);
    sub_100633DC8(&qword_1016776F0, (void (*)(uint64_t))&type metadata accessor for EventData);
    unint64_t v0 = type metadata accessor for EventProperty();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101677780);
    }
  }
}

void sub_100634CC4()
{
  if (!qword_101677788)
  {
    sub_100632748();
    sub_1006327A0();
    unint64_t v0 = type metadata accessor for EventProperty();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101677788);
    }
  }
}

void sub_100634D2C()
{
  if (!qword_101677790)
  {
    type metadata accessor for TimedData();
    sub_100633DC8(&qword_101677710, (void (*)(uint64_t))&type metadata accessor for TimedData);
    sub_100633DC8(&qword_1016776F8, (void (*)(uint64_t))&type metadata accessor for TimedData);
    unint64_t v0 = type metadata accessor for EventProperty();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101677790);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for AppSessionEndEvent.Model(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for EventData();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for TimedData();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = type metadata accessor for TimedData();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for TimedData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for TimedData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for TimedData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for TimedData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006352C8);
}

uint64_t sub_1006352C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EventData();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 248)
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 8) {
      return v10 - 7;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v11 = type metadata accessor for TimedData();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100635400);
}

uint64_t sub_100635400(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for EventData();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 248)
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 7;
  }
  else
  {
    uint64_t v11 = type metadata accessor for TimedData();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_100635528()
{
  uint64_t result = type metadata accessor for EventData();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TimedData();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AppSessionEndEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006356C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppSessionEndEvent.Model.CodingKeys()
{
  return &type metadata for AppSessionEndEvent.Model.CodingKeys;
}

unint64_t sub_100635700()
{
  unint64_t result = qword_101677860;
  if (!qword_101677860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677860);
  }
  return result;
}

unint64_t sub_100635758()
{
  unint64_t result = qword_101677868;
  if (!qword_101677868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677868);
  }
  return result;
}

unint64_t sub_1006357B0()
{
  unint64_t result = qword_101677870;
  if (!qword_101677870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677870);
  }
  return result;
}

uint64_t sub_100635804(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x456E6F6973736573 && a2 == 0xEE0061746144646ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

BOOL ProductType.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101503AF0, v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

uint64_t ProductType.rawValue.getter()
{
  return 0x6D726F6665657266;
}

unint64_t sub_1006359FC()
{
  unint64_t result = qword_101677878;
  if (!qword_101677878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677878);
  }
  return result;
}

Swift::Int sub_100635A50()
{
  return Hasher._finalize()();
}

uint64_t sub_100635AA4()
{
  return String.hash(into:)();
}

Swift::Int sub_100635ABC()
{
  return Hasher._finalize()();
}

uint64_t sub_100635B0C@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101503B28, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3 != 0;
  return result;
}

void sub_100635B60(void *a1@<X8>)
{
  *a1 = 0x6D726F6665657266;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_100635B7C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100635BDC()
{
  return RawRepresentable<>.encode(to:)();
}

unsigned char *storeEnumTagSinglePayload for ProductType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100635CC8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductType()
{
  return &type metadata for ProductType;
}

unint64_t sub_100635D00()
{
  unint64_t result = qword_101677880;
  if (!qword_101677880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677880);
  }
  return result;
}

uint64_t sub_100635D54()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v0 - 8);
  uint64_t v17 = v0;
  __chkstk_darwin(v0, v1);
  int v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Session.Kind();
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v12 = __chkstk_darwin(v9, v11);
  uint64_t v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v10 + 104))(v14, enum case for Session.Kind.userEvents(_:), v9, v12);
  swift_retain();
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  Date.init()();
  SessionManager.start(for:identifier:startDate:timestampJitter:)();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v3, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v14, v9);
}

uint64_t type metadata accessor for AASSessionManager()
{
  return self;
}

id sub_1006360CC(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  v32[1] = a1;
  id v33 = a2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = type metadata accessor for LoggingEventProcessorFormat();
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  __chkstk_darwin(v5, v6);
  uint64_t v37 = (void *)((char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for SessionManager.Options();
  __chkstk_darwin(v8, v9);
  v32[0] = type metadata accessor for TimestampJitter();
  uint64_t v10 = *(void *)(v32[0] - 8);
  __chkstk_darwin(v32[0], v11);
  uint64_t v13 = (_OWORD *)((char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for SessionManagerConfiguration();
  uint64_t v35 = *(void *)(v14 - 8);
  uint64_t v36 = v14;
  __chkstk_darwin(v14, v15);
  char v34 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for FlushEvents();
  __chkstk_darwin(v17, v18);
  sub_1005057FC(&qword_1016778B8);
  if (a4)
  {
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_10117DF40;
    uint64_t v22 = v41;
    static FlushEvents.didStartSession.getter();
    static FlushEvents.didEndSession.getter();
    static FlushEvents.didLeaveGroup.getter();
    uint64_t v43 = (double *)v21;
  }
  else
  {
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_10117DF40;
    uint64_t v20 = v41;
    static FlushEvents.didStartSession.getter();
    static FlushEvents.didEndSession.getter();
    static FlushEvents.didLeaveGroup.getter();
    uint64_t v43 = (double *)v19;
  }
  sub_1006367EC(&qword_1016778C0, (void (*)(uint64_t))&type metadata accessor for FlushEvents);
  sub_1005057FC(&qword_1016778C8);
  sub_100636834(&qword_1016778D0, &qword_1016778C8);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for FlushProcessor();
  swift_allocObject();
  FlushProcessor.init(flushEvents:flushInterval:)();
  *uint64_t v13 = xmmword_101184460;
  (*(void (**)(_OWORD *, void, void))(v10 + 104))(v13, enum case for TimestampJitter.enabled(_:), v32[0]);
  uint64_t v43 = _swiftEmptyArrayStorage;
  sub_1006367EC(&qword_1016778D8, (void (*)(uint64_t))&type metadata accessor for SessionManager.Options);
  swift_retain();
  sub_1005057FC(&qword_1016778E0);
  sub_100636834(&qword_1016778E8, &qword_1016778E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for DisabledPrivacyValidationProvider();
  swift_allocObject();
  DisabledPrivacyValidationProvider.init()();
  uint64_t v23 = v34;
  SessionManagerConfiguration.init(options:flushProcessor:timestampJitter:privacyValidationProvider:)();
  uint64_t v24 = AppSessionManager.createSessionManager(with:)();
  type metadata accessor for UploadBatchEventProcessor();
  type metadata accessor for Client();
  id v25 = [self mainBundle];
  Client.__allocating_init(bundle:)();
  id v26 = v33;
  uint64_t v27 = (void *)sub_10063A324();
  UploadBatchEventConfig.with(transparencyLoggingEnabled:)();

  UploadBatchEventProcessor.__allocating_init(client:endpoint:contentType:config:)();
  SessionManager.processorManager.getter();
  swift_retain();
  ProcessorManager.add(eventProcessor:)();
  swift_release();
  swift_release();
  type metadata accessor for LoggingEventProcessor();
  uint64_t v29 = v37;
  uint64_t v28 = v38;
  *uint64_t v37 = 11;
  (*(void (**)(void *, void, uint64_t))(v28 + 104))(v29, enum case for LoggingEventProcessorFormat.json(_:), v39);
  LoggingEventProcessor.__allocating_init(logFormat:)();
  SessionManager.processorManager.getter();
  swift_retain();
  ProcessorManager.add(eventProcessor:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release_n();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v36);
  id v30 = v41;
  *(void *)&v41[OBJC_IVAR____TtC8Freeform17AASSessionManager_sessionManager] = v24;

  v42.receiver = v30;
  v42.super_class = ObjectType;
  return [super init];
}

uint64_t sub_1006367EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100636834(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t UserData.userID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DebugData.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t UserData.userStartMonth.getter()
{
  return *(unsigned int *)(v0 + 16);
}

uint64_t UserData.userStartMonth.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 16) = result;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *SyncEvent.SentRecordZoneChanges.deletedRecordIDs.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t UserData.userStartYear.getter()
{
  return *(unsigned int *)(v0 + 20);
}

uint64_t UserData.userStartYear.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 20) = result;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *UserData.userStartYear.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t UserData.userStorefrontID.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserData.userStorefrontID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *SyncEvent.SentRecordZoneChanges.failedRecordDeletes.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

unint64_t UserData.userHashMod.getter()
{
  return *(unsigned int *)(v0 + 40) | ((unint64_t)*(unsigned __int8 *)(v0 + 44) << 32);
}

uint64_t UserData.userHashMod.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 40) = result;
  *(unsigned char *)(v1 + 44) = BYTE4(result) & 1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *UserData.userHashMod.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

void __swiftcall UserData.init(userID:userStartMonth:userStartYear:userStorefrontID:userHashMod:)(Freeform::UserData *__return_ptr retstr, Swift::String userID, Swift::Int32 userStartMonth, Swift::Int32 userStartYear, Swift::String userStorefrontID, Swift::Int32_optional userHashMod)
{
  retstr->userID = userID;
  retstr->userStartMonth = userStartMonth;
  retstr->userStartYear = userStartYear;
  retstr->userStorefrontID = userStorefrontID;
  retstr->userHashMod.value = userHashMod.value;
  retstr->userHashMod.is_nil = userHashMod.is_nil;
}

unint64_t sub_100636A40()
{
  unint64_t result = 0x444972657375;
  switch(*v0)
  {
    case 1:
    case 2:
      unint64_t result = 0x7261745372657375;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x6873614872657375;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100636AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100636E34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100636B24(uint64_t a1)
{
  unint64_t v2 = sub_100636D84();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100636B60(uint64_t a1)
{
  unint64_t v2 = sub_100636D84();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t UserData.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_1016778F0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_100636D84();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v12[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    v12[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v12[13] = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    v12[12] = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v10 = *(unsigned char *)(v3 + 44);
    v12[11] = 4;
    v12[8] = v10;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_100636D84()
{
  unint64_t result = qword_1016778F8;
  if (!qword_1016778F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016778F8);
  }
  return result;
}

double UserData.init(from:)@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10063709C(a1, (uint64_t)&v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    double result = *(double *)((char *)v7 + 13);
    *(_OWORD *)((char *)a2 + 29) = *(_OWORD *)((char *)v7 + 13);
  }
  return result;
}

uint64_t sub_100636E1C(void *a1)
{
  return UserData.encode(to:)(a1);
}

uint64_t sub_100636E34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x444972657375 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7261745372657375 && a2 == 0xEE0068746E6F4D74 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7261745372657375 && a2 == 0xED00007261655974 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000101241340 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6873614872657375 && a2 == 0xEB00000000646F4DLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_10063709C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_101677928);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100636D84();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  char v27 = 0;
  uint64_t v10 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v12 = v11;
  char v26 = 1;
  swift_bridgeObjectRetain();
  int v22 = KeyedDecodingContainer.decode(_:forKey:)();
  char v25 = 2;
  int v21 = KeyedDecodingContainer.decode(_:forKey:)();
  char v24 = 3;
  uint64_t v19 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v20 = v13;
  char v23 = 4;
  swift_bridgeObjectRetain();
  uint64_t v14 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  uint64_t v15 = v20;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  int v17 = v21;
  *(_DWORD *)(a2 + 16) = v22;
  *(_DWORD *)(a2 + 20) = v17;
  *(void *)(a2 + 24) = v19;
  *(void *)(a2 + 32) = v15;
  *(_DWORD *)(a2 + 40) = v14;
  *(unsigned char *)(a2 + 44) = BYTE4(v14) & 1;
  return result;
}

unint64_t sub_100637380()
{
  unint64_t result = qword_101677900;
  if (!qword_101677900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677900);
  }
  return result;
}

unint64_t sub_1006373D8()
{
  unint64_t result = qword_101677908;
  if (!qword_101677908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677908);
  }
  return result;
}

uint64_t destroy for UserData()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UserData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UserData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(_DWORD *)(a1 + 40) = v4;
  return a1;
}

__n128 initializeWithTake for UserData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 29) = *(_OWORD *)(a2 + 29);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for UserData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 45)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 44) = 0;
    *(_DWORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 45) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 45) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserData()
{
  return &type metadata for UserData;
}

unsigned char *storeEnumTagSinglePayload for UserData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    void *result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100637738);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserData.CodingKeys()
{
  return &type metadata for UserData.CodingKeys;
}

unint64_t sub_100637774()
{
  unint64_t result = qword_101677910;
  if (!qword_101677910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677910);
  }
  return result;
}

unint64_t sub_1006377CC()
{
  unint64_t result = qword_101677918;
  if (!qword_101677918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677918);
  }
  return result;
}

unint64_t sub_100637824()
{
  unint64_t result = qword_101677920;
  if (!qword_101677920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677920);
  }
  return result;
}

uint64_t DebugData.name.getter(uint64_t a1)
{
  return a1;
}

uint64_t AppData.appBuild.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t AppData.appBuild.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t sub_100637918()
{
  if (*v0) {
    return 0x646C697542707061;
  }
  else {
    return 0x6973726556707061;
  }
}

uint64_t sub_100637958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100637C3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100637980(uint64_t a1)
{
  unint64_t v2 = sub_100637B6C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006379BC(uint64_t a1)
{
  unint64_t v2 = sub_100637B6C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AppData.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[0] = a4;
  v13[1] = a5;
  uint64_t v7 = sub_1005057FC(&qword_101677930);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100637B6C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v15 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v5)
  {
    char v14 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

unint64_t sub_100637B6C()
{
  unint64_t result = qword_101677938;
  if (!qword_101677938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677938);
  }
  return result;
}

uint64_t AppData.init(from:)(void *a1)
{
  uint64_t result = sub_100637D3C(a1);
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t sub_100637BEC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100637D3C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_100637C1C(void *a1)
{
  return AppData.encode(to:)(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_100637C3C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6973726556707061 && a2 == 0xEA00000000006E6FLL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646C697542707061 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100637D3C(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101677968);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[4];
  sub_10050F848(a1, a1[3]);
  sub_100637B6C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    uint64_t v8 = KeyedDecodingContainer.decode(_:forKey:)();
    char v11 = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    swift_bridgeObjectRetain();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_100637F48()
{
  unint64_t result = qword_101677940;
  if (!qword_101677940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677940);
  }
  return result;
}

unint64_t sub_100637FA0()
{
  unint64_t result = qword_101677948;
  if (!qword_101677948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677948);
  }
  return result;
}

uint64_t destroy for CRLPencilKitInkStrokeData()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for AppData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AppData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for AppData(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLPencilKitInkStrokeData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLPencilKitInkStrokeData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppData()
{
  return &type metadata for AppData;
}

unsigned char *storeEnumTagSinglePayload for AppData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10063828CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppData.CodingKeys()
{
  return &type metadata for AppData.CodingKeys;
}

unint64_t sub_1006382C8()
{
  unint64_t result = qword_101677950;
  if (!qword_101677950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677950);
  }
  return result;
}

unint64_t sub_100638320()
{
  unint64_t result = qword_101677958;
  if (!qword_101677958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677958);
  }
  return result;
}

unint64_t sub_100638378()
{
  unint64_t result = qword_101677960;
  if (!qword_101677960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677960);
  }
  return result;
}

uint64_t EndReason.rawValue.getter(char a1)
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x676B636142707061;
      break;
    case 2:
      uint64_t result = 0x6975516563726F66;
      break;
    case 3:
      uint64_t result = 1953068401;
      break;
    case 4:
      uint64_t result = 0x74657365524449;
      break;
    case 5:
      uint64_t result = 0x6873617263;
      break;
    case 6:
      uint64_t result = 0x636142656E656373;
      break;
    case 7:
      uint64_t result = 0x726568746FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1006384DC(unsigned __int8 *a1, char *a2)
{
  return sub_10094DDE8(*a1, *a2);
}

Swift::Int sub_1006384E8()
{
  return sub_100950348();
}

uint64_t sub_1006384F4()
{
  return sub_10094FB54();
}

Swift::Int sub_1006384FC()
{
  return sub_100950348();
}

unint64_t sub_100638504@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s8Freeform9EndReasonO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_100638534(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xED0000646E756F72;
      uint64_t v3 = 0x676B636142707061;
      goto LABEL_3;
    case 2:
      *a1 = 0x6975516563726F66;
      a1[1] = 0xE900000000000074;
      break;
    case 3:
      *a1 = 1953068401;
      a1[1] = 0xE400000000000000;
      break;
    case 4:
      *a1 = 0x74657365524449;
      a1[1] = 0xE700000000000000;
      break;
    case 5:
      *a1 = 0x6873617263;
      a1[1] = 0xE500000000000000;
      break;
    case 6:
      *a1 = 0x636142656E656373;
      a1[1] = 0xEF646E756F72676BLL;
      break;
    case 7:
      *a1 = 0x726568746FLL;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_100638658()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1006386B8()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t _s8Freeform9EndReasonO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101503B60, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 8) {
    return 8;
  }
  else {
    return v3;
  }
}

unint64_t sub_100638758()
{
  unint64_t result = qword_101677970;
  if (!qword_101677970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677970);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EndReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    void *result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100638878);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EndReason()
{
  return &type metadata for EndReason;
}

unint64_t sub_1006388B0()
{
  unint64_t result = qword_101677978;
  if (!qword_101677978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677978);
  }
  return result;
}

uint64_t ICloudAccountState.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x6E776F6E6B6E75;
  }
  if (a1 == 1) {
    return 0x6E49646567676F6CLL;
  }
  return 0x754F646567676F6CLL;
}

uint64_t sub_100638964(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10094E8A8(*a1, *a2);
}

Swift::Int sub_100638970()
{
  return Hasher._finalize()();
}

uint64_t sub_100638A18()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100638AAC()
{
  return Hasher._finalize()();
}

unint64_t sub_100638B50@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s8Freeform18ICloudAccountStateO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_100638B80(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x6E49646567676F6CLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x754F646567676F6CLL;
    unint64_t v4 = 0xE900000000000074;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_100638BE4()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100638C44()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t _s8Freeform18ICloudAccountStateO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101503C40, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

unint64_t sub_100638CE4()
{
  unint64_t result = qword_101677980;
  if (!qword_101677980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677980);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ICloudAccountState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100638E04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICloudAccountState()
{
  return &type metadata for ICloudAccountState;
}

unint64_t sub_100638E3C()
{
  unint64_t result = qword_101677988;
  if (!qword_101677988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677988);
  }
  return result;
}

Freeform::OsInstallVariant_optional __swiftcall OsInstallVariant.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101503CA8, v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = Freeform_OsInstallVariant_external;
  }
  else {
    v4.value = Freeform_OsInstallVariant_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t OsInstallVariant.rawValue.getter(char a1)
{
  if (a1) {
    return 0x6C616E7265747865;
  }
  else {
    return 0x6C616E7265746E69;
  }
}

uint64_t sub_100638F08(char *a1, char *a2)
{
  return sub_10094F208(*a1, *a2);
}

unint64_t sub_100638F18()
{
  unint64_t result = qword_101677990;
  if (!qword_101677990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677990);
  }
  return result;
}

Swift::Int sub_100638F6C()
{
  return Hasher._finalize()();
}

uint64_t sub_100638FD8()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100639028()
{
  return Hasher._finalize()();
}

uint64_t sub_100639090@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101503CA8, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_1006390F0(uint64_t *a1@<X8>)
{
  if (*v1) {
    uint64_t v2 = 0x6C616E7265747865;
  }
  else {
    uint64_t v2 = 0x6C616E7265746E69;
  }
  *a1 = v2;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_10063911C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10063917C()
{
  return RawRepresentable<>.encode(to:)();
}

unsigned char *storeEnumTagSinglePayload for OsInstallVariant(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100639298);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OsInstallVariant()
{
  return &type metadata for OsInstallVariant;
}

unint64_t sub_1006392D0()
{
  unint64_t result = qword_101677998;
  if (!qword_101677998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677998);
  }
  return result;
}

uint64_t BoardCollectionData.totalBoardCount.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t SyncEvent.FetchedRecordZoneChanges.Deletion.recordType.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t SyncEvent.FetchedRecordZoneChanges.Deletion.recordType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t SessionData.iCloudAccountState.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a4;
}

uint64_t SessionData.iCloudAccountState.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  return result;
}

uint64_t SessionData.isSaltRegenerated.getter(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return (a4 >> 8) & 1;
}

uint64_t SessionData.isSaltRegenerated.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 25) = result;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *SessionData.isSaltRegenerated.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

unint64_t sub_1006393F0(char a1)
{
  unint64_t result = 0x657366664F637475;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x437972746E756F63;
      break;
    case 2:
      unint64_t result = 0x54746375646F7270;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1006394C4()
{
  return sub_1006393F0(*v0);
}

uint64_t sub_1006394CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100639924(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1006394F4(uint64_t a1)
{
  unint64_t v2 = sub_10063977C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100639530(uint64_t a1)
{
  unint64_t v2 = sub_10063977C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SessionData.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  v14[0] = a3;
  v14[1] = a4;
  uint64_t v8 = sub_1005057FC(&qword_1016779A0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  char v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_10063977C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v20 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v5)
  {
    char v19 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v18 = 2;
    sub_1006397D0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v17 = a5;
    char v16 = 3;
    sub_100639824();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v15 = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

unint64_t sub_10063977C()
{
  unint64_t result = qword_1016779A8;
  if (!qword_1016779A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016779A8);
  }
  return result;
}

unint64_t sub_1006397D0()
{
  unint64_t result = qword_1016779B0;
  if (!qword_1016779B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016779B0);
  }
  return result;
}

unint64_t sub_100639824()
{
  unint64_t result = qword_1016779B8;
  if (!qword_1016779B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016779B8);
  }
  return result;
}

uint64_t SessionData.init(from:)(void *a1)
{
  LODWORD(result) = sub_100639B5C(a1);
  if (v1) {
    return v3 & 0x1FF;
  }
  else {
    return result;
  }
}

uint64_t sub_1006398AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100639B5C(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7;
    *(unsigned char *)(a2 + 25) = HIBYTE(v7) & 1;
  }
  return result;
}

uint64_t sub_1006398EC(void *a1)
{
  return SessionData.encode(to:)(a1, *v1, *((void *)v1 + 1), *((void *)v1 + 2), *((unsigned char *)v1 + 24));
}

uint64_t sub_100639924(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657366664F637475 && a2 == 0xE900000000000074;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x437972746E756F63 && a2 == 0xEB0000000065646FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x54746375646F7270 && a2 == 0xEB00000000657079 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000101241360 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000101241380)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_100639B5C(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_1016779E8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  __int16 v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[4];
  sub_10050F848(a1, a1[3]);
  sub_10063977C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  else
  {
    char v16 = 0;
    uint64_t v8 = KeyedDecodingContainer.decode(_:forKey:)();
    char v15 = 1;
    KeyedDecodingContainer.decode(_:forKey:)();
    char v14 = 2;
    sub_10063A27C();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    char v12 = 3;
    sub_10063A2D0();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    void v10[3] = v13;
    char v11 = 4;
    KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_100639E14()
{
  unint64_t result = qword_1016779C0;
  if (!qword_1016779C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016779C0);
  }
  return result;
}

unint64_t sub_100639E6C()
{
  unint64_t result = qword_1016779C8;
  if (!qword_1016779C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016779C8);
  }
  return result;
}

uint64_t destroy for CRLColorModelCMYKData()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SessionData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SessionData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

__n128 initializeWithTake for SessionData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SessionData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 26)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 26) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionData()
{
  return &type metadata for SessionData;
}

unsigned char *storeEnumTagSinglePayload for SessionData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    void *result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10063A13CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionData.CodingKeys()
{
  return &type metadata for SessionData.CodingKeys;
}

unint64_t sub_10063A178()
{
  unint64_t result = qword_1016779D0;
  if (!qword_1016779D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016779D0);
  }
  return result;
}

unint64_t sub_10063A1D0()
{
  unint64_t result = qword_1016779D8;
  if (!qword_1016779D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016779D8);
  }
  return result;
}

unint64_t sub_10063A228()
{
  unint64_t result = qword_1016779E0;
  if (!qword_1016779E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016779E0);
  }
  return result;
}

unint64_t sub_10063A27C()
{
  unint64_t result = qword_1016779F0;
  if (!qword_1016779F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016779F0);
  }
  return result;
}

unint64_t sub_10063A2D0()
{
  unint64_t result = qword_1016779F8;
  if (!qword_1016779F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016779F8);
  }
  return result;
}

uint64_t sub_10063A324()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  unsigned int v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [self defaultManager];
  id v14 = 0;
  id v6 = [v5 URLForDirectory:14 inDomain:1 appropriateForURL:0 create:1 error:&v14];

  id v7 = v14;
  if (v6)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    id v8 = v7;

    type metadata accessor for UploadBatchEventConfig();
    uint64_t v9 = (void *)static UploadBatchEventConfig.default.getter();
    uint64_t v10 = UploadBatchEventConfig.with(directory:)();

    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  }
  else
  {
    id v11 = v14;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    type metadata accessor for UploadBatchEventConfig();
    uint64_t v10 = static UploadBatchEventConfig.default.getter();
    swift_errorRelease();
  }
  return v10;
}

uint64_t DevicePlatform.rawValue.getter(char a1)
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(a1)
  {
    case 1:
      uint64_t result = 5459817;
      break;
    case 2:
      uint64_t result = 0x534F64615069;
      break;
    case 3:
      uint64_t result = 0x534F63616DLL;
      break;
    case 4:
      uint64_t result = 0x534F6E6F69736976;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10063A598(unsigned __int8 *a1, char *a2)
{
  return sub_10094F27C(*a1, *a2);
}

Swift::Int sub_10063A5A4()
{
  return Hasher._finalize()();
}

uint64_t sub_10063A68C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10063A75C()
{
  return Hasher._finalize()();
}

unint64_t sub_10063A840@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s8Freeform14DevicePlatformO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_10063A870(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE300000000000000;
      uint64_t v3 = 5459817;
      goto LABEL_3;
    case 2:
      *a1 = 0x534F64615069;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x534F63616DLL;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 0x534F6E6F69736976;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_10063A91C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10063A97C()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t _s8Freeform14DevicePlatformO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101503CF8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

unint64_t sub_10063AA1C()
{
  unint64_t result = qword_101677A00;
  if (!qword_101677A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677A00);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DevicePlatform(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    void *result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10063AB3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DevicePlatform()
{
  return &type metadata for DevicePlatform;
}

unint64_t sub_10063AB74()
{
  unint64_t result = qword_101677A08;
  if (!qword_101677A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677A08);
  }
  return result;
}

uint64_t sub_10063ABC8(uint64_t a1)
{
  return sub_100632C84(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, static AppSessionStartEvent.sessionGroup, &enum case for SessionGroup.default(_:));
}

uint64_t AppSessionStartEvent.sessionGroup.unsafeMutableAddressor()
{
  return sub_100632E04(&qword_10166EDB0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)static AppSessionStartEvent.sessionGroup);
}

uint64_t static AppSessionStartEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100632E98(&qword_10166EDB0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)static AppSessionStartEvent.sessionGroup, a1);
}

void *AppSessionStartEvent.requiresDiagnosticsConsent.unsafeMutableAddressor()
{
  return &static AppSessionStartEvent.requiresDiagnosticsConsent;
}

uint64_t sub_10063AC6C(uint64_t a1)
{
  return sub_100632C84(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, static AppSessionStartEvent.timestampGranularity, &enum case for TimestampGranularity.hour(_:));
}

uint64_t AppSessionStartEvent.timestampGranularity.unsafeMutableAddressor()
{
  return sub_100632E04(&qword_10166EDB8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)static AppSessionStartEvent.timestampGranularity);
}

uint64_t static AppSessionStartEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100632E98(&qword_10166EDB8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)static AppSessionStartEvent.timestampGranularity, a1);
}

uint64_t sub_10063AD04()
{
  uint64_t v0 = type metadata accessor for TimeDurationGranularity();
  sub_100568B28(v0, static AppSessionStartEvent.timeDurationGranularity);
  sub_100556B74(v0, (uint64_t)static AppSessionStartEvent.timeDurationGranularity);
  return static TimeDurationGranularity.milliseconds.getter();
}

uint64_t AppSessionStartEvent.timeDurationGranularity.unsafeMutableAddressor()
{
  return sub_100632E04(&qword_10166EDC0, (uint64_t (*)(void))&type metadata accessor for TimeDurationGranularity, (uint64_t)static AppSessionStartEvent.timeDurationGranularity);
}

uint64_t static AppSessionStartEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100632E98(&qword_10166EDC0, (uint64_t (*)(void))&type metadata accessor for TimeDurationGranularity, (uint64_t)static AppSessionStartEvent.timeDurationGranularity, a1);
}

uint64_t AppSessionStartEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_1005057FC(&qword_101670398);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t AppSessionStartEvent.Model.init(eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for EventData();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t sub_10063AEA4()
{
  return 0x746144746E657665;
}

uint64_t sub_10063AEC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_10063AF64(uint64_t a1)
{
  unint64_t v2 = sub_10063B13C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10063AFA0(uint64_t a1)
{
  unint64_t v2 = sub_10063B13C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AppSessionStartEvent.Model.encode(to:)(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101677A10);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  unsigned int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_10063B13C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for EventData();
  sub_10063B41C(&qword_1016776F0);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

unint64_t sub_10063B13C()
{
  unint64_t result = qword_101677A18;
  if (!qword_101677A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677A18);
  }
  return result;
}

uint64_t AppSessionStartEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = type metadata accessor for EventData();
  uint64_t v17 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  char v20 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_101677A20);
  uint64_t v19 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t started = type metadata accessor for AppSessionStartEvent.Model(0);
  __chkstk_darwin(started - 8, v12);
  id v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_10063B13C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v2)
  {
    sub_10063B41C(&qword_101677708);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v7);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v20, v4);
    sub_10063B460((uint64_t)v14, v18);
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
}

uint64_t type metadata accessor for AppSessionStartEvent.Model(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101677B10);
}

uint64_t sub_10063B41C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for EventData();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10063B460(uint64_t a1, uint64_t a2)
{
  uint64_t started = type metadata accessor for AppSessionStartEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 32))(a2, a1, started);
  return a2;
}

uint64_t sub_10063B4C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AppSessionStartEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_10063B4DC@<X0>(uint64_t a1@<X8>)
{
  return sub_100633FA8(&qword_10166EDB0, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)static AppSessionStartEvent.sessionGroup, a1);
}

uint64_t sub_10063B514@<X0>(uint64_t a1@<X8>)
{
  return sub_100633FA8(&qword_10166EDB8, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)static AppSessionStartEvent.timestampGranularity, a1);
}

uint64_t sub_10063B54C@<X0>(uint64_t a1@<X8>)
{
  return sub_100633FA8(&qword_10166EDC0, (uint64_t (*)(void))&type metadata accessor for TimeDurationGranularity, (uint64_t)static AppSessionStartEvent.timeDurationGranularity, a1);
}

uint64_t initializeBufferWithCopyOfBuffer for AppSessionStartEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101670398);
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for AppSessionStartEvent(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101670398);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for AppSessionStartEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for AppSessionStartEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for AppSessionStartEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for AppSessionStartEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionStartEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10063B810);
}

uint64_t sub_10063B810(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101670398);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for AppSessionStartEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10063B894);
}

uint64_t sub_10063B894(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101670398);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for AppSessionStartEvent(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101677A80);
}

uint64_t sub_10063B928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10063BCBC(a1, a2, a3, (uint64_t (*)(uint64_t))sub_100634BF8);
}

uint64_t initializeBufferWithCopyOfBuffer for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventData();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for AppSessionStartEvent.Model(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EventData();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10063BBB4);
}

uint64_t sub_10063BBB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventData();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10063BC34);
}

uint64_t sub_10063BC34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventData();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_10063BCA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10063BCBC(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for EventData);
}

uint64_t sub_10063BCBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AppSessionStartEvent.Model.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10063BDE8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppSessionStartEvent.Model.CodingKeys()
{
  return &type metadata for AppSessionStartEvent.Model.CodingKeys;
}

unint64_t sub_10063BE24()
{
  unint64_t result = qword_101677B48;
  if (!qword_101677B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677B48);
  }
  return result;
}

unint64_t sub_10063BE7C()
{
  unint64_t result = qword_101677B50;
  if (!qword_101677B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677B50);
  }
  return result;
}

unint64_t sub_10063BED4()
{
  unint64_t result = qword_101677B58;
  if (!qword_101677B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677B58);
  }
  return result;
}

unint64_t sub_10063BF28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v3 = v2;
  unint64_t result = sub_100955F14(a1);
  char v7 = v6;
  if (v6)
  {
    unint64_t v8 = result;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *v2;
    uint64_t v11 = *v3;
    *int v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10097F864();
      uint64_t v10 = v11;
    }
    sub_10063F590(*(void *)(v10 + 56) + 8 * v8, a2);
    sub_10058A350(v8, v10);
    *int v3 = v10;
    unint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)a2 = 0;
  }
  *(unsigned char *)(a2 + 8) = (v7 & 1) == 0;
  return result;
}

id sub_10063BFE0()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for AASApplicationManager()) init];
  static AASApplicationManager.shared = (uint64_t)result;
  return result;
}

uint64_t *AASApplicationManager.shared.unsafeMutableAddressor()
{
  if (qword_10166EDC8 != -1) {
    swift_once();
  }
  return &static AASApplicationManager.shared;
}

id static AASApplicationManager.shared.getter()
{
  if (qword_10166EDC8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static AASApplicationManager.shared;

  return v0;
}

uint64_t AASApplicationManager.userInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_userInfo;
  swift_beginAccess();
  return sub_10063C16C(v3, a1);
}

uint64_t sub_10063C16C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101677B60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t AASApplicationManager.userInfo.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_userInfo;
  swift_beginAccess();
  sub_1006063BC(a1, v3, &qword_101677B60);
  return swift_endAccess();
}

uint64_t (*AASApplicationManager.userInfo.modify())()
{
  return j__swift_endAccess;
}

unint64_t AASApplicationManager.userHashMod.getter()
{
  return *(unsigned int *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_userSamplingManager) + 20) | ((unint64_t)*(unsigned __int8 *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_userSamplingManager) + 24) << 32);
}

uint64_t AASApplicationManager.isSaltRegenerated.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_isSaltRegenerated);
  swift_beginAccess();
  return *v1;
}

uint64_t AASApplicationManager.isSelectedUser.getter()
{
  return *(unsigned __int8 *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_userSamplingManager)
                            + 16);
}

id sub_10063C3C8()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = type metadata accessor for SummaryEventConfiguration();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  char v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = &v0[OBJC_IVAR____TtC8Freeform21AASApplicationManager_userInfo];
  uint64_t v12 = type metadata accessor for AASUserInfo();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v0[OBJC_IVAR____TtC8Freeform21AASApplicationManager_isSaltRegenerated] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform21AASApplicationManager_flushManager] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform21AASApplicationManager_rootSessionManager] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform21AASApplicationManager_trackersCoordinator] = 0;
  uint64_t v13 = &v0[OBJC_IVAR____TtC8Freeform21AASApplicationManager_sessionPropertiesController];
  *(_OWORD *)uint64_t v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  v13[32] = 0;
  uint64_t v14 = OBJC_IVAR____TtC8Freeform21AASApplicationManager_userSamplingManager;
  type metadata accessor for AASUserSamplingManager();
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = 0;
  *(_DWORD *)(v15 + 20) = 0;
  *(unsigned char *)(v15 + 24) = 1;
  uint64_t v16 = v15 + OBJC_IVAR____TtC8Freeform22AASUserSamplingManager_userId;
  uint64_t v17 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(void *)&v0[v14] = v15;
  uint64_t v18 = &v0[OBJC_IVAR____TtC8Freeform21AASApplicationManager_dependencies];
  void *v18 = 0;
  v18[1] = 0;
  uint64_t v19 = v0;
  static SummaryEventConfiguration.disabled.getter();
  type metadata accessor for TrackingConsent();
  static TrackingConsent.shared.getter();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v10, v2);
  type metadata accessor for AccessQueue();
  static AccessQueue.background.getter();
  uint64_t v20 = type metadata accessor for CrashDetector();
  uint64_t v21 = static CrashDetector.shared.getter();
  uint64_t v27 = v20;
  uint64_t v28 = &protocol witness table for CrashDetector;
  uint64_t v26 = v21;
  type metadata accessor for AppSessionManager();
  swift_allocObject();
  *(void *)&v19[OBJC_IVAR____TtC8Freeform21AASApplicationManager_appSessionManager] = AppSessionManager.init(accessQueue:trackingConsent:crashDetector:summaryEventConfiguration:)();

  v25.receiver = v19;
  v25.super_class = ObjectType;
  id v22 = [super init];
  (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
  return v22;
}

uint64_t sub_10063C6E4()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_dependencies))
  {
    uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_dependencies + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
    swift_unknownObjectRetain();
    v3(ObjectType, v1);
    uint64_t v5 = v4;
    swift_unknownObjectRelease();
    id v6 = [self standardUserDefaults];
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v6 stringForKey:v7];

    if (v8)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      Swift::String v9 = String.lowercased()();
      swift_bridgeObjectRelease();
      BOOL v10 = v9._countAndFlagsBits == 7759204 && v9._object == (void *)0xE300000000000000;
      if (v10
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
        || v9._countAndFlagsBits == 24945 && v9._object == (void *)0xE200000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
        || v9._countAndFlagsBits == 0x6D706F6C65766564 && v9._object == (void *)0xEB00000000746E65
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v11 = swift_getObjectType();
        uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v11, v5);
LABEL_23:
        uint64_t v14 = v12;
        swift_unknownObjectRelease();
        return v14;
      }
      if ((v9._countAndFlagsBits != 1685025392 || v9._object != (void *)0xE400000000000000)
        && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
        && (v9._countAndFlagsBits != 0x69746375646F7270 || v9._object != (void *)0xEA00000000006E6FLL))
      {
        _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v13 = swift_getObjectType();
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v13, v5);
    goto LABEL_23;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void AASApplicationManager.setup(dependencies:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();

  sub_10063E934(a1, v2, ObjectType, a2);
}

uint64_t *NSNotificationName.AASUserIdentifierDidResetNotification.unsafeMutableAddressor()
{
  if (qword_10166EDD0 != -1) {
    swift_once();
  }
  return &static NSNotificationName.AASUserIdentifierDidResetNotification;
}

void sub_10063CAF0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_rootSessionManager);
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_rootSessionManager) = 0;

  id v2 = [self defaultCenter];
  [v2 removeObserver:v0 name:UIApplicationWillTerminateNotification object:0];
  [v2 removeObserver:v0 name:UIApplicationDidBecomeActiveNotification object:0];
  [v2 removeObserver:v0 name:UIApplicationWillResignActiveNotification object:0];
  [v2 removeObserver:v0 name:UIApplicationWillEnterForegroundNotification object:0];
  [v2 removeObserver:v0 name:UIApplicationDidEnterBackgroundNotification object:0];
}

uint64_t AASApplicationManager.chain(name:id:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(v3 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_trackersCoordinator)) {
    return 0;
  }
  swift_retain();
  uint64_t v7 = sub_1006CB7A0(a1, a2, a3);
  swift_release();
  return v7;
}

uint64_t AASApplicationManager.removeTracker(id:)(uint64_t result)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_trackersCoordinator))
  {
    uint64_t v2 = result;
    swift_beginAccess();
    swift_retain();
    sub_10063BF28(v2, (uint64_t)v3);
    swift_endAccess();
    sub_100522F00((uint64_t)v3, &qword_101674260);
    return swift_release();
  }
  return result;
}

uint64_t AASApplicationManager.push(eventData:trait:)(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  id v6 = sub_10050F848(a1, v4);

  return sub_10063E818((uint64_t)v6, a2, v2, v4, v5);
}

uint64_t AASApplicationManager.submit<A>(eventType:onlyIfTimed:completion:)(uint64_t result, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (*(void *)(v6 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_trackersCoordinator))
  {
    uint64_t v12 = result;
    swift_retain();
    sub_1006CB8EC(v12, a2 & 1, a3, a4, a5, a6);
    return swift_release();
  }
  return result;
}

uint64_t AASApplicationManager.setTrackersCoordinatorDelegate(_:)(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v4 = sub_10050F848(a1, v2);

  return sub_10063EEDC((uint64_t)v4, v1, v2, v3);
}

void sub_10063CE4C()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_trackersCoordinator))
  {
    swift_retain();
    sub_1006CBD58(2);
    swift_release();
  }
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_rootSessionManager);
  if (v1)
  {
    id v2 = v1;
    swift_retain();
    SessionManager.endSync()();

    swift_release();
  }
  AppSessionManager.appSessionDidTerminate()();

  sub_10063CAF0();
}

uint64_t sub_10063CF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[13] = a4;
  uint64_t v5 = type metadata accessor for Date();
  v4[14] = v5;
  v4[15] = *(void *)(v5 - 8);
  v4[16] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v4[17] = v6;
  v4[18] = *(void *)(v6 - 8);
  v4[19] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Session.Kind();
  v4[20] = v7;
  v4[21] = *(void *)(v7 - 8);
  v4[22] = swift_task_alloc();
  sub_1005057FC(&qword_101672BB0);
  v4[23] = swift_task_alloc();
  uint64_t v8 = sub_1005057FC(&qword_101677BE0);
  v4[24] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v4[25] = v9;
  v4[26] = *(void *)(v9 + 64);
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  sub_1005057FC(&qword_101677B60);
  uint64_t v10 = swift_task_alloc();
  v4[29] = v10;
  uint64_t v11 = (void *)swift_task_alloc();
  v4[30] = v11;
  *uint64_t v11 = v4;
  v11[1] = sub_10063D1D8;
  return sub_10063D954(v10);
}

uint64_t sub_10063D1D8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10063D2D4, 0, 0);
}

uint64_t sub_10063D2D4()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = type metadata accessor for AASUserInfo();
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  sub_100522F00(v1, &qword_101677B60);
  if (v3 == 1)
  {
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v4 = (id)static OS_os_log.crlAppAnalytics;
    uint64_t v5 = static os_log_type_t.error.getter();
    uint64_t v6 = "Failed to retrieve UserID while applicationWillEnterForeground";
    uint64_t v7 = (uint64_t)v4;
    uint64_t v8 = 62;
LABEL_14:
    sub_100BAC898(v7, (uint64_t)&_mh_execute_header, v5, (uint64_t)v6, v8, 2, (uint64_t)_swiftEmptyArrayStorage);
LABEL_15:

    goto LABEL_16;
  }
  uint64_t v9 = *(void *)(v0 + 104);
  if (*(unsigned char *)(*(void *)(v9 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_userSamplingManager) + 16) != 1)
  {
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v4 = (id)static OS_os_log.crlAppAnalytics;
    uint64_t v5 = static os_log_type_t.default.getter();
    uint64_t v6 = "User is not selected, skip sessionStart";
    uint64_t v7 = (uint64_t)v4;
    uint64_t v8 = 39;
    goto LABEL_14;
  }
  if (qword_10166FA40 != -1)
  {
    swift_once();
    uint64_t v9 = *(void *)(v0 + 104);
  }
  swift_beginAccess();
  id v10 = (id)static OS_os_log.crlAppAnalytics;
  uint64_t v11 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v10, (uint64_t)&_mh_execute_header, v11, (uint64_t)"start app analytics", 19, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v12 = v9 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_sessionPropertiesController;
  uint64_t v13 = *(void *)(v9 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_sessionPropertiesController);
  if (v13)
  {
    uint64_t v15 = *(void *)(v12 + 16);
    uint64_t v14 = *(void *)(v12 + 24);
    char v16 = *(unsigned char *)(v12 + 8);
    char v17 = *(unsigned char *)(v12 + 32) & 1;
    uint64_t v18 = self;
    swift_retain();
    swift_bridgeObjectRetain();
    id v19 = [v18 standardUserDefaults];
    NSString v20 = String._bridgeToObjectiveC()();
    id v21 = [v19 stringForKey:v20];

    uint64_t v48 = v14;
    uint64_t v45 = v15;
    char v42 = v16;
    char v43 = v17;
    if (v21)
    {
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v24 = v23;
    }
    else
    {
      uint64_t v22 = 0;
      unint64_t v24 = 0xE000000000000000;
    }
    uint64_t v28 = *(void *)(v0 + 216);
    uint64_t v27 = *(void *)(v0 + 224);
    uint64_t v29 = *(void *)(v0 + 200);
    uint64_t v30 = *(void *)(v0 + 184);
    uint64_t v31 = *(void *)(v0 + 192);
    *(void *)(v0 + 88) = v22;
    *(void *)(v0 + 96) = v24;
    sub_10063F130();
    SessionData.init(key:data:)();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v28, v27, v31);
    unint64_t v32 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v33 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v29 + 32))(v33 + v32, v28, v31);
    SessionManager.transaction(_:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v31);
    uint64_t v34 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v30, 1, 1, v34);
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = 0;
    *(void *)(v35 + 24) = 0;
    *(void *)(v35 + 32) = v13;
    *(unsigned char *)(v35 + 40) = v42;
    *(_DWORD *)(v35 + 41) = *(_DWORD *)(v0 + 248);
    *(_DWORD *)(v35 + 44) = *(_DWORD *)(v0 + 251);
    *(void *)(v35 + 48) = v45;
    *(void *)(v35 + 56) = v48;
    *(unsigned char *)(v35 + 64) = v43;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1005912D0(v30, (uint64_t)&unk_101677C10, v35);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v36 = *(void **)(*(void *)(v0 + 104) + OBJC_IVAR____TtC8Freeform21AASApplicationManager_rootSessionManager);
  if (v36)
  {
    uint64_t v37 = *(void *)(v0 + 168);
    uint64_t v38 = *(void *)(v0 + 152);
    uint64_t v39 = *(void *)(v0 + 144);
    uint64_t v44 = *(void *)(v0 + 176);
    uint64_t v46 = *(void *)(v0 + 136);
    uint64_t v41 = *(void *)(v0 + 120);
    uint64_t v40 = *(void *)(v0 + 128);
    uint64_t v47 = *(void *)(v0 + 160);
    uint64_t v49 = *(void *)(v0 + 112);
    (*(void (**)(void))(v37 + 104))();
    id v4 = v36;
    swift_retain();
    UUID.init()();
    UUID.uuidString.getter();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v46);
    Date.init()();
    SessionManager.start(for:identifier:startDate:timestampJitter:)();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v49);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v44, v47);
    goto LABEL_15;
  }
LABEL_16:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  objc_super v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_10063D954(uint64_t a1)
{
  v2[23] = a1;
  v2[24] = v1;
  uint64_t v3 = type metadata accessor for UUID();
  v2[25] = v3;
  v2[26] = *(void *)(v3 - 8);
  v2[27] = swift_task_alloc();
  sub_1005057FC(&qword_101677B60);
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_101674520);
  v2[30] = swift_task_alloc();
  return _swift_task_switch(sub_10063DA84, 0, 0);
}

uint64_t sub_10063DA84()
{
  if (qword_10166EE20 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_10171A2F8;
  *(void *)(v0 + 248) = qword_10171A2F8;
  return _swift_task_switch(sub_10063DB1C, v1, 0);
}

uint64_t sub_10063DB1C()
{
  uint64_t v1 = *(void *)(v0 + 184);
  sub_100691338();
  sub_100693C1C(v1);
  return _swift_task_switch(sub_10063DB90, 0, 0);
}

uint64_t sub_10063DB90()
{
  uint64_t v1 = v0[29];
  uint64_t v2 = *(void *)(v0[24] + OBJC_IVAR____TtC8Freeform21AASApplicationManager_userSamplingManager);
  sub_10063C16C(v0[23], v1);
  uint64_t v3 = type metadata accessor for AASUserInfo();
  id v4 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48);
  uint64_t v30 = *v4;
  if ((*v4)(v1, 1, v3) == 1)
  {
    uint64_t v5 = v0[29];
    swift_retain();
    sub_100522F00(v5, &qword_101677B60);
    uint64_t v6 = 1;
  }
  else
  {
    uint64_t v7 = v0[29];
    (*(void (**)(void, uint64_t, void))(v0[26] + 16))(v0[30], v7 + *(int *)(v3 + 20), v0[25]);
    swift_retain();
    sub_10063F4F4(v7);
    uint64_t v6 = 0;
  }
  uint64_t v8 = v0[30];
  uint64_t v9 = v0[28];
  uint64_t v10 = v0[23];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[26] + 56))(v8, v6, 1, v0[25]);
  uint64_t v11 = v2 + OBJC_IVAR____TtC8Freeform22AASUserSamplingManager_userId;
  swift_beginAccess();
  sub_10063F490(v8, v11, (uint64_t *)&unk_101674520);
  swift_endAccess();
  sub_1005100DC();
  sub_100522F00(v8, (uint64_t *)&unk_101674520);
  swift_release();
  sub_10063C16C(v10, v9);
  unsigned int v12 = v30(v9, 1, v3);
  uint64_t v13 = v0[28];
  if (v12 == 1)
  {
    sub_100522F00(v0[28], &qword_101677B60);
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v14 = (id)static OS_os_log.crlAppAnalytics;
    uint64_t v15 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v15, (uint64_t)"Failed to retrieve UserID", 25, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    uint64_t v17 = v0[26];
    uint64_t v16 = v0[27];
    uint64_t v18 = v0[25];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v16, v13 + *(int *)(v3 + 20), v18);
    sub_10063F4F4(v13);
    uint64_t v19 = UUID.uuidString.getter();
    uint64_t v21 = v20;
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v22 = (void *)static OS_os_log.crlAppAnalytics;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v19;
    *(void *)(inited + 40) = v21;
    id v14 = v22;
    uint64_t v24 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v24, (uint64_t)"UserID retrieved: %@", 20, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  uint64_t v25 = v0[23];
  uint64_t v26 = v0[24];

  uint64_t v27 = v26 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_userInfo;
  swift_beginAccess();
  sub_10063F490(v25, v27, &qword_101677B60);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

void sub_10063E11C()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_trackersCoordinator))
  {
    swift_retain();
    sub_1006CBD58(1);
    swift_release();
  }
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_rootSessionManager);
  if (v1)
  {
    id v2 = v1;
    swift_retain();
    SessionManager.endSync()();

    swift_release();
  }
}

uint64_t sub_10063E204()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  id v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_101677BE0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5, v8);
  uint64_t v9 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v32 - v12;
  id v14 = (unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_isSaltRegenerated);
  uint64_t result = swift_beginAccess();
  unsigned char *v14 = 1;
  uint64_t v16 = v0 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_sessionPropertiesController;
  uint64_t v17 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_sessionPropertiesController);
  if (v17)
  {
    char v18 = *(unsigned char *)(v16 + 32);
    uint64_t v19 = *(void *)(v16 + 24);
    uint64_t v34 = *(void *)(v16 + 16);
    uint64_t v35 = v4;
    int v32 = *(unsigned __int8 *)(v16 + 8);
    int v33 = v18 & 1;
    uint64_t v20 = self;
    swift_retain();
    swift_bridgeObjectRetain();
    id v21 = [v20 standardUserDefaults];
    NSString v22 = String._bridgeToObjectiveC()();
    id v23 = [v21 stringForKey:v22];

    if (v23)
    {
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v26 = v25;
    }
    else
    {
      uint64_t v24 = 0;
      unint64_t v26 = 0xE000000000000000;
    }
    uint64_t v36 = v24;
    unint64_t v37 = v26;
    sub_10063F130();
    SessionData.init(key:data:)();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v13, v5);
    unint64_t v27 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v28 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v28 + v27, v9, v5);
    SessionManager.transaction(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
    uint64_t v29 = type metadata accessor for TaskPriority();
    uint64_t v30 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v35, 1, 1, v29);
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = 0;
    *(void *)(v31 + 24) = 0;
    *(void *)(v31 + 32) = v17;
    *(unsigned char *)(v31 + 40) = v32;
    *(_DWORD *)(v31 + 41) = v36;
    *(_DWORD *)(v31 + 44) = *(_DWORD *)((char *)&v36 + 3);
    *(void *)(v31 + 48) = v34;
    *(void *)(v31 + 56) = v19;
    *(unsigned char *)(v31 + 64) = v33;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1005912D0(v30, (uint64_t)&unk_101677BF0, v31);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

NSString sub_10063E784()
{
  NSString result = String._bridgeToObjectiveC()();
  static NSNotificationName.AASUserIdentifierDidResetNotification = (uint64_t)result;
  return result;
}

id static NSNotificationName.AASUserIdentifierDidResetNotification.getter()
{
  if (qword_10166EDD0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static NSNotificationName.AASUserIdentifierDidResetNotification;

  return v0;
}

uint64_t sub_10063E818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a4 - 8);
  __n128 v10 = __chkstk_darwin(a1, a1);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v9 + 16))(v12, v10);
  uint64_t v13 = *(void *)(a3 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_trackersCoordinator);
  if (v13)
  {
    swift_retain();
    sub_1006CC1FC((uint64_t)v12, a2, v13, a4, a5);
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, a4);
}

void sub_10063E934(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  if (qword_10166FA40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v7 = (id)static OS_os_log.crlAppAnalytics;
  uint64_t v8 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Setup app analytics", 19, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v9 = &a2[OBJC_IVAR____TtC8Freeform21AASApplicationManager_dependencies];
  *(void *)uint64_t v9 = a1;
  *((void *)v9 + 1) = a4;
  swift_unknownObjectRelease();
  type metadata accessor for FlushManager();
  uint64_t v10 = *(void *)&a2[OBJC_IVAR____TtC8Freeform21AASApplicationManager_appSessionManager];
  swift_unknownObjectRetain();
  swift_retain();
  sub_10063C6E4();
  sub_10063A324();
  type metadata accessor for Client();
  id v11 = [self mainBundle];
  Client.__allocating_init(bundle:)();
  type metadata accessor for URLSessionUploadClientFactory();
  swift_allocObject();
  URLSessionUploadClientFactory.init()();
  uint64_t v12 = FlushManager.__allocating_init(appSessionManager:client:endpoint:contentType:config:clientFactory:)();
  *(void *)(swift_allocObject() + 16) = a2;
  uint64_t v13 = a2;
  dispatch thunk of FlushManager.repairThenFlush(repair:completion:)();
  swift_release();
  *(void *)&v13[OBJC_IVAR____TtC8Freeform21AASApplicationManager_flushManager] = v12;
  swift_retain();
  swift_release();
  swift_retain();
  id v14 = (void *)sub_10063C6E4();
  (*(void (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  uint64_t v16 = v15;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(ObjectType, v16);
  char v20 = v19;
  swift_unknownObjectRelease();
  id v21 = objc_allocWithZone((Class)type metadata accessor for AASSessionManager());
  NSString v22 = (char *)sub_1006360CC(v10, v14, v18, v20 & 1);
  swift_release();

  uint64_t v23 = OBJC_IVAR____TtC8Freeform17AASSessionManager_sessionManager;
  swift_retain();
  uint64_t v24 = SessionManager.tracker.getter();
  swift_release();
  type metadata accessor for AASTrackersCoordinator();
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 24) = 0u;
  *(_OWORD *)(v25 + 40) = 0u;
  *(void *)(v25 + 56) = 0;
  *(void *)(v25 + 64) = sub_100A45ED4((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v25 + 16) = v24;
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_retain();
  Tracker.onSessionChange(block:)();
  swift_release();
  swift_release_n();
  swift_release();
  *(void *)&v13[OBJC_IVAR____TtC8Freeform21AASApplicationManager_trackersCoordinator] = v25;
  swift_release();
  AppSessionManager.startAppSession(shouldCorrelateSceneSessions:)(0);
  unint64_t v26 = *(void **)&v13[OBJC_IVAR____TtC8Freeform21AASApplicationManager_rootSessionManager];
  *(void *)&v13[OBJC_IVAR____TtC8Freeform21AASApplicationManager_rootSessionManager] = v22;
  unint64_t v27 = v22;

  uint64_t v28 = *(void *)&v22[v23];
  swift_retain();
  unsigned __int8 v29 = sub_100A14E20();
  uint64_t v30 = &v13[OBJC_IVAR____TtC8Freeform21AASApplicationManager_sessionPropertiesController];
  uint64_t v31 = *(void *)&v13[OBJC_IVAR____TtC8Freeform21AASApplicationManager_sessionPropertiesController];
  *(void *)uint64_t v30 = v28;
  *((void *)v30 + 1) = v29;
  *((void *)v30 + 2) = v33;
  *((void *)v30 + 3) = v34;
  v30[32] = v32 & 1;
  sub_10063F550(v31);
  if (*(void *)v30)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    sub_100A17C7C();
    swift_bridgeObjectRelease();
    swift_release();
  }
  id v35 = [self defaultCenter];
  [v35 addObserver:v13 selector:"applicationWillTerminate" name:UIApplicationWillTerminateNotification object:0];
  [v35 addObserver:v13 selector:"applicationWillResignActive" name:UIApplicationWillResignActiveNotification object:0];
  [v35 addObserver:v13 selector:"applicationWillEnterForeground" name:UIApplicationWillEnterForegroundNotification object:0];
  [v35 addObserver:v13 selector:"applicationDidEnterBackground" name:UIApplicationDidEnterBackgroundNotification object:0];
  if (qword_10166EDD0 != -1) {
    swift_once();
  }
  [v35 addObserver:v13 selector:"userIdentifierDidReset:" name:static NSNotificationName.AASUserIdentifierDidResetNotification object:0];
  swift_release();
}

uint64_t sub_10063EEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[3] = a3;
  v11[4] = a4;
  id v7 = sub_1005767BC(v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v7, a1, a3);
  uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_trackersCoordinator);
  if (v8)
  {
    sub_1005498A4((uint64_t)v11, (uint64_t)v10);
    swift_beginAccess();
    swift_retain();
    sub_1006063BC((uint64_t)v10, v8 + 24, &qword_101677C18);
    swift_endAccess();
    swift_release();
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v11);
}

uint64_t sub_10063EFB8()
{
  return type metadata accessor for AASApplicationManager();
}

uint64_t type metadata accessor for AASApplicationManager()
{
  uint64_t result = qword_101677BC8;
  if (!qword_101677BC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10063F00C()
{
  sub_10063F0D8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10063F0D8()
{
  if (!qword_101677BD8)
  {
    type metadata accessor for AASUserInfo();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101677BD8);
    }
  }
}

unint64_t sub_10063F130()
{
  unint64_t result = qword_101677BE8;
  if (!qword_101677BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677BE8);
  }
  return result;
}

uint64_t sub_10063F190(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100528D08;
  return sub_100A18844(a1, v4, v5, v1 + 32);
}

uint64_t sub_10063F244()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10063F284(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_100528488;
  return sub_10063CF4C(a1, v4, v5, v6);
}

uint64_t sub_10063F33C()
{
  uint64_t v1 = sub_1005057FC(&qword_101677BE0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10063F3D0()
{
  sub_1005057FC(&qword_101677BE0);

  return sub_100A19178();
}

uint64_t sub_10063F448()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 65, 7);
}

uint64_t sub_10063F490(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1005057FC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_10063F4F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AASUserInfo();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10063F550(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10063F590(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101674258);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10063F5F8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10063F630()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10063F668(uint64_t a1, uint64_t a2)
{
}

void *AASConfigurationConstants.UserDefaultsKeys.disableSampling.unsafeMutableAddressor()
{
  return &static AASConfigurationConstants.UserDefaultsKeys.disableSampling;
}

const char *AASConfigurationConstants.UserDefaultsKeys.endpoint.unsafeMutableAddressor()
{
  return "AASEndpoint";
}

const char *AASConfigurationConstants.UserDefaultsKeys.debugName.unsafeMutableAddressor()
{
  return "AASDebugName";
}

uint64_t static AASConfigurationConstants.UserDefaultsKeys.debugName.getter()
{
  return 0x6775626544534141;
}

unint64_t static AASConfigurationConstants.UserDefaultsKeys.disableSampling.getter()
{
  return 0xD000000000000012;
}

uint64_t static AASConfigurationConstants.UserDefaultsKeys.endpoint.getter()
{
  return 0x6F70646E45534141;
}

const char *AASConfigurationConstants.PayloadKeys.appData.unsafeMutableAddressor()
{
  return "appData";
}

uint64_t static AASConfigurationConstants.PayloadKeys.appData.getter()
{
  return 0x61746144707061;
}

const char *AASConfigurationConstants.PayloadKeys.debugData.unsafeMutableAddressor()
{
  return "debugData";
}

uint64_t static AASConfigurationConstants.PayloadKeys.debugData.getter()
{
  return 0x7461446775626564;
}

const char *AASConfigurationConstants.PayloadKeys.deviceData.unsafeMutableAddressor()
{
  return "deviceData";
}

uint64_t static AASConfigurationConstants.PayloadKeys.deviceData.getter()
{
  return 0x6144656369766564;
}

const char *AASConfigurationConstants.PayloadKeys.sessionData.unsafeMutableAddressor()
{
  return "sessionData";
}

uint64_t static AASConfigurationConstants.PayloadKeys.sessionData.getter()
{
  return 0x446E6F6973736573;
}

const char *AASConfigurationConstants.PayloadKeys.userData.unsafeMutableAddressor()
{
  return "userData";
}

uint64_t static AASConfigurationConstants.PayloadKeys.userData.getter()
{
  return 0x6174614472657375;
}

ValueMetadata *type metadata accessor for AASConfigurationConstants()
{
  return &type metadata for AASConfigurationConstants;
}

ValueMetadata *type metadata accessor for AASConfigurationConstants.TimestampJitterConfig()
{
  return &type metadata for AASConfigurationConstants.TimestampJitterConfig;
}

ValueMetadata *type metadata accessor for AASConfigurationConstants.UserDefaultsKeys()
{
  return &type metadata for AASConfigurationConstants.UserDefaultsKeys;
}

ValueMetadata *type metadata accessor for AASConfigurationConstants.PayloadKeys()
{
  return &type metadata for AASConfigurationConstants.PayloadKeys;
}

uint64_t DeviceData.devicePlatform.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t BoardData.isOwned.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t DeviceData.osInstallVariant.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t DeviceData.osInstallVariant.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 40) = result & 1;
  return result;
}

void __swiftcall DeviceData.init(deviceModel:devicePlatform:osVersion:osInstallVariant:)(Freeform::DeviceData *__return_ptr retstr, Swift::String deviceModel, Freeform::DevicePlatform devicePlatform, Swift::String osVersion, Freeform::OsInstallVariant osInstallVariant)
{
  retstr->deviceModel = deviceModel;
  retstr->devicePlatform = devicePlatform;
  retstr->osVersion = osVersion;
  retstr->osInstallVariant = osInstallVariant & 1;
}

unint64_t sub_10063F830()
{
  unint64_t result = 0x6F4D656369766564;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6C50656369766564;
      break;
    case 2:
      unint64_t result = 0x6F6973726556736FLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10063F8DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10063FCC0(a1, a2);
  *a3 = result;
  return result;
}

void sub_10063F904(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_10063F910(uint64_t a1)
{
  unint64_t v2 = sub_10063FB68();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10063F94C(uint64_t a1)
{
  unint64_t v2 = sub_10063FB68();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t DeviceData.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_101677C20);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_10063FB68();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v11[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    v11[14] = *(unsigned char *)(v3 + 16);
    v11[13] = 1;
    sub_10063FBBC();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v11[12] = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    v11[11] = *(unsigned char *)(v3 + 40);
    v11[10] = 3;
    sub_10063FC10();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_10063FB68()
{
  unint64_t result = qword_101677C28;
  if (!qword_101677C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677C28);
  }
  return result;
}

unint64_t sub_10063FBBC()
{
  unint64_t result = qword_101677C30;
  if (!qword_101677C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677C30);
  }
  return result;
}

unint64_t sub_10063FC10()
{
  unint64_t result = qword_101677C38;
  if (!qword_101677C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677C38);
  }
  return result;
}

double DeviceData.init(from:)@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10063FEC0(a1, (uint64_t)&v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    double result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_10063FCA8(void *a1)
{
  return DeviceData.encode(to:)(a1);
}

uint64_t sub_10063FCC0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F4D656369766564 && a2 == 0xEB000000006C6564;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C50656369766564 && a2 == 0xEE006D726F667461 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6973726556736FLL && a2 == 0xE90000000000006ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000101241650)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_10063FEC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_101677C68);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_10063FB68();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  char v27 = 0;
  uint64_t v10 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v12 = v11;
  char v25 = 1;
  sub_100640648();
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  int v21 = v26;
  char v24 = 2;
  uint64_t v13 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v15 = v14;
  uint64_t v19 = v13;
  char v22 = 3;
  sub_10064069C();
  uint64_t v20 = v15;
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  LOBYTE(v15) = v23;
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  uint64_t v16 = v20;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  *(unsigned char *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = v19;
  *(void *)(a2 + 32) = v16;
  *(unsigned char *)(a2 + 40) = v15;
  return result;
}

unint64_t sub_1006401B0()
{
  unint64_t result = qword_101677C40;
  if (!qword_101677C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677C40);
  }
  return result;
}

unint64_t sub_100640208()
{
  unint64_t result = qword_101677C48;
  if (!qword_101677C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677C48);
  }
  return result;
}

uint64_t initializeWithCopy for DeviceData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DeviceData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

__n128 initializeWithTake for DeviceData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DeviceData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceData()
{
  return &type metadata for DeviceData;
}

unsigned char *storeEnumTagSinglePayload for DeviceData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    void *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100640508);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceData.CodingKeys()
{
  return &type metadata for DeviceData.CodingKeys;
}

unint64_t sub_100640544()
{
  unint64_t result = qword_101677C50;
  if (!qword_101677C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677C50);
  }
  return result;
}

unint64_t sub_10064059C()
{
  unint64_t result = qword_101677C58;
  if (!qword_101677C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677C58);
  }
  return result;
}

unint64_t sub_1006405F4()
{
  unint64_t result = qword_101677C60;
  if (!qword_101677C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677C60);
  }
  return result;
}

unint64_t sub_100640648()
{
  unint64_t result = qword_101677C70;
  if (!qword_101677C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677C70);
  }
  return result;
}

unint64_t sub_10064069C()
{
  unint64_t result = qword_101677C78;
  if (!qword_101677C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677C78);
  }
  return result;
}

ValueMetadata *_s23RemoveSmartListBehaviorVMa()
{
  return &_s23RemoveSmartListBehaviorVN;
}

ValueMetadata *_s23ExtendSmartListBehaviorVMa()
{
  return &_s23ExtendSmartListBehaviorVN;
}

ValueMetadata *_s23InsertSmartListBehaviorVMa()
{
  return &_s23InsertSmartListBehaviorVN;
}

ValueMetadata *_s30IncreaseParagraphLevelBehaviorVMa()
{
  return &_s30IncreaseParagraphLevelBehaviorVN;
}

uint64_t sub_100640730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100640D08(a1, a2, a3, a4, &qword_101677C80, &qword_101677C88);
}

uint64_t (*sub_100640740())(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100640730;
}

void sub_100640760(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for CharacterSet();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v13 = qword_101677C90 == a2 && unk_101677C98 == a3;
  if (!v13 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return;
  }
  uint64_t v14 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  uint64_t v15 = *(void **)(*(void *)(a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v15)
  {
    __break(1u);
    goto LABEL_15;
  }
  id v16 = v15;
  uint64_t v17 = (char *)[a4 start];
  uint64_t v18 = *(void *)&v17[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  id v19 = [v16 textRangeForParagraphAtCharIndex:v18];
  uint64_t v21 = v20;

  char v22 = *(void **)(*(void *)(a1 + v14) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v22)
  {
LABEL_15:
    __break(1u);
    return;
  }
  id v23 = [v22 substringWithRange:v19, v21];
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;

  v30[0] = v24;
  v30[1] = v26;
  id v27 = [self newlineCharacterSet];
  static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10052E310();
  StringProtocol.trimmingCharacters(in:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_10083242C();
  __int16 v29 = v28;
  swift_release();
  if ((v29 & 0xFF00) != 0x200 && (_BYTE)v29 && v21)
  {
    String.count.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void (*sub_100640A04())(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_100640760;
}

void sub_100640A24(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for CharacterSet();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v13 = qword_101677CA0 == a2 && unk_101677CA8 == a3;
  if (!v13 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return;
  }
  uint64_t v14 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  uint64_t v15 = *(void **)(*(void *)(a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v15)
  {
    __break(1u);
    goto LABEL_17;
  }
  id v16 = v15;
  uint64_t v17 = (char *)[a4 start];
  uint64_t v18 = *(void *)&v17[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  id v19 = [v16 textRangeForParagraphAtCharIndex:v18];
  uint64_t v21 = v20;

  char v22 = *(void **)(*(void *)(a1 + v14) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v22)
  {
LABEL_17:
    __break(1u);
    return;
  }
  id v23 = [v22 substringWithRange:v19, v21];
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;

  v30[0] = v24;
  v30[1] = v26;
  id v27 = [self newlineCharacterSet];
  static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10052E310();
  StringProtocol.trimmingCharacters(in:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_10083242C();
  __int16 v29 = v28;
  swift_release();
  if ((v29 & 0xFF00) == 0x200 || !(_BYTE)v29)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v21) {
      String.count.getter();
    }
    swift_bridgeObjectRelease();
  }
}

void (*sub_100640CD8())(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_100640A24;
}

uint64_t sub_100640CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100640D08(a1, a2, a3, a4, qword_101677CB0, &qword_101677CB0[1]);
}

uint64_t sub_100640D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  if (*a5 == a2 && *a6 == a3) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

uint64_t (*sub_100640D38())(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100640CF8;
}

void sub_100640D58(unint64_t a1, char *a2)
{
  v243 = a2;
  uint64_t v238 = type metadata accessor for UUID();
  uint64_t v237 = *(void *)(v238 - 8);
  __chkstk_darwin(v238, v3);
  v236 = (char *)&v219 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v242 = sub_1005057FC(&qword_101687AE0);
  uint64_t v241 = *(void *)(v242 - 8);
  __chkstk_darwin(v242, v5);
  v240 = (char *)&v219 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v239 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v239, v7);
  uint64_t v9 = (SEL *)((char *)&v219 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v10 - 8, v11);
  BOOL v13 = (char *)&v219 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101687B10);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = (char *)&v219 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (uint64_t *)((char *)&v219 - v20);
  uint64_t v22 = sub_1005057FC((uint64_t *)&unk_1016837D0);
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v25 = (char *)&v219 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v27);
  __int16 v29 = (char *)&v219 - v28;
  unint64_t v30 = a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v32 = [Strong commandController];

  if (!v32) {
    return;
  }
  unint64_t v235 = v30;
  uint64_t v33 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v33
    || (uint64_t v34 = v33,
        unint64_t v233 = a1,
        id v35 = [v33 selectionModelTranslator],
        v34,
        (id v234 = v35) == 0))
  {

    return;
  }
  id v232 = v32;
  uint64_t v36 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v36
    || (unint64_t v37 = v36,
        unint64_t v38 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape,
        unint64_t v39 = v233,
        id v40 = [v36 layoutForInfo:*(void *)(v233 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)], v37, !v40))
  {
    id v40 = v232;
LABEL_31:

    id v135 = (id *)&v255;
LABEL_32:

    return;
  }
  self;
  uint64_t v41 = (void *)swift_dynamicCastObjCClass();
  if (!v41)
  {

    goto LABEL_31;
  }
  id v42 = [v41 layoutInfoGeometry];

  [v42 mutableCopy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10050BF48(0, (unint64_t *)&qword_101677CC0);
  if ((swift_dynamicCast() & 1) == 0)
  {

    id v135 = (id *)&v254;
    goto LABEL_32;
  }
  unint64_t v231 = v38;
  char v43 = *(void **)(*(void *)(v39 + v38) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v43) {
    goto LABEL_92;
  }
  uint64_t v44 = (void *)v252;
  id v45 = v43;
  uint64_t v46 = v243;
  BOOL v229 = sub_1006A2038(v243);
  int v48 = v47;

  int v230 = v48;
  if ((v48 & 0x100) != 0)
  {

    return;
  }
  id v228 = v44;
  swift_getKeyPath();
  unint64_t v38 = v233;
  sub_100832224();
  v227 = v49;
  int v51 = v50;
  swift_release();
  uint64_t v52 = 2;
  if (v51 != 2) {
    uint64_t v52 = (uint64_t)v227;
  }
  uint64_t v224 = v52;
  uint64_t v53 = (void *)qword_101677C80;
  uint64_t v54 = qword_101677C88;
  swift_bridgeObjectRetain();
  sub_10082362C(v46, v53, v54, 0);
  swift_bridgeObjectRelease();
  unint64_t v55 = v231;
  uint64_t v56 = *(void **)(*(void *)(v38 + v231) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v56) {
    goto LABEL_93;
  }
  id v225 = [v56 paragraphCount];
  if (v229) {
    int v57 = 2;
  }
  else {
    int v57 = 3;
  }
  if ((v230 & 1) == 0) {
    int v57 = 1;
  }
  LODWORD(v226) = v57;
  sub_10083B97C();
  id v59 = v232;
  if (!v58 || (id v60 = [v58 selectedTextRange]) == 0)
  {

    return;
  }
  uint64_t v61 = *(void **)(*(void *)(v233 + v55) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v61)
  {
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  uint64_t v62 = v60;
  id v63 = v61;
  uint64_t v64 = (char *)[v62 start];
  uint64_t v65 = *(void *)&v64[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  id v66 = [v63 paragraphIndexAtCharIndex:v65];
  BOOL v229 = (BOOL)v63;
  id v67 = [v63 charIndexForParagraphAtIndex:v66];
  uint64_t v68 = (char *)[v62 end];
  unint64_t v38 = (unint64_t)v67;
  uint64_t v69 = *(void *)&v68[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  if (v69 < (uint64_t)v67)
  {
    __break(1u);
    goto LABEL_89;
  }
  unint64_t v70 = (objc_class *)type metadata accessor for CRLTextRange();
  CGFloat v71 = (char *)objc_allocWithZone(v70);
  uint64_t v72 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(void *)&v71[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(void *)&v71[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  CGFloat v73 = (unint64_t *)&v71[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *CGFloat v73 = v38;
  v73[1] = v69;
  *(void *)&v71[v72] = 0;
  v248.receiver = v71;
  v248.super_class = v70;
  uint64_t v74 = (char *)[super init];
  v227 = v74;

  uint64_t v75 = (char *)[v74 start];
  NSNotFound.getter();
  uint64_t v76 = *(void *)&v75[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  uint64_t v77 = *(void *)&v75[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  uint64_t v78 = (char *)objc_allocWithZone(v70);
  uint64_t v79 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(void *)&v78[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(void *)&v78[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  uint64_t v80 = &v78[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(void *)uint64_t v80 = v76;
  *((void *)v80 + 1) = v76;
  *(void *)&v78[v79] = v77;
  v247.receiver = v78;
  v247.super_class = v70;
  uint64_t v81 = (char *)[super init];
  BOOL v229 = (BOOL)v81;

  *(void *)&v81[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = v77;
  uint64_t v82 = (char *)[v227 end];
  NSNotFound.getter();
  uint64_t v83 = *(void *)&v82[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  v223 = *(char **)&v82[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
  id v84 = (char *)objc_allocWithZone(v70);
  uint64_t v85 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(void *)&v84[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(void *)&v84[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  uint64_t v86 = &v84[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(void *)uint64_t v86 = v83;
  *((void *)v86 + 1) = v83;
  char v87 = v223;
  *(void *)&v84[v85] = v223;
  v246.receiver = v84;
  v246.super_class = v70;
  Class v220 = v70;
  uint64_t v88 = (char *)[super init];

  *(void *)&v88[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = v87;
  v223 = v88;

  uint64_t v89 = *(void *)&v227[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  v222 = *(uint64_t **)&v227[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
  unint64_t v90 = v233;
  char v91 = (char *)v231;
  id v221 = *(id *)(v233 + v231);
  uint64_t v92 = sub_1005057FC((uint64_t *)&unk_101683740);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v29, 1, 1, v92);
  uint64_t v93 = sub_1005057FC(&qword_101687A90);
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v21, 1, 1, v93);
  sub_100522E9C((uint64_t)v29, (uint64_t)v25, (uint64_t *)&unk_1016837D0);
  sub_100522E9C((uint64_t)v21, (uint64_t)v17, (uint64_t *)&unk_101687B10);
  id v94 = objc_allocWithZone((Class)type metadata accessor for CRLWPReplaceTextCommand(0));
  id v95 = v221;
  unint64_t v38 = (unint64_t)sub_1007A8FA0((uint64_t)v95, v89, (uint64_t)v222, 0, 0xE000000000000000, 0, (uint64_t)v25, (uint64_t)v17);
  sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101687B10);
  sub_100522F00((uint64_t)v29, (uint64_t *)&unk_1016837D0);
  uint64_t v96 = *(void *)(v229 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range);
  uint64_t v97 = *(void *)(v229 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8);
  v222 = (uint64_t *)(v229 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range);
  uint64_t KeyPath = swift_getKeyPath();
  unint64_t v99 = v90;
  uint64_t v100 = *(void **)&v91[v90];
  uint64_t v101 = v91;
  id v102 = v100;
  uint64_t v103 = (void *)sub_10083DBDC(v102, v96, v97, KeyPath, v226);

  swift_release();
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v104 = swift_allocObject();
  *(_OWORD *)(v104 + 16) = xmmword_10117DF50;
  *(void *)(v104 + 32) = v38;
  *(void *)(v104 + 40) = v103;
  v249 = (char *)v104;
  specialized Array._endMutation()();
  v245 = v249;
  id v221 = (id)v38;
  id v226 = v103;
  if ((v230 & 1) == 0)
  {
    uint64_t v105 = *(void **)(*(void *)&v101[v99] + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
    if (v105)
    {
      id v106 = (id)v38;
      id v107 = v103;
      id v108 = v105;
      uint64_t v109 = (char *)[(id)v229 start];
      uint64_t v110 = *(void *)&v109[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

      id v111 = [v108 textRangeForParagraphAtCharIndex:v110];
      uint64_t v113 = v112;

      id v114 = objc_allocWithZone(v220);
      uint64_t v115 = sub_1006CC83C((uint64_t)v111, v113);
      uint64_t v116 = *(void **)(*(void *)&v101[v99] + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
      if (v116)
      {
        __int16 v29 = (char *)v115;
        uint64_t v117 = *(void *)(v115 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range);
        uint64_t v118 = *(void *)(v115 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8);
        id v119 = v116;
        sub_10090059C(v117, v118, &v249);

        uint64_t v120 = v249;
        uint64_t v121 = *(void *)&v249[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
        uint64_t v21 = v222;
        if (v121)
        {
          (*(void (**)(void))(*(void *)v121 + 760))();
          sub_1005D3C94((uint64_t)v9 + *(int *)(v239 + 20), (uint64_t)v13);
          sub_1005D3CF8((uint64_t)v9, type metadata accessor for CRLWPShapeItemCRDTData);
          sub_1005057FC((uint64_t *)&unk_10167BC20);
          uint64_t v122 = v240;
          CRAttributedString.subscript.getter();
          sub_1005D3CF8((uint64_t)v13, type metadata accessor for CRLWPStorageCRDTData);
          uint64_t v123 = v242;
          id v124 = (void *)CRAttributedString.Substring.attributedString.getter();
          (*(void (**)(char *, uint64_t))(v241 + 8))(v122, v123);
          BOOL v13 = (char *)[v124 string];

          if (v13)
          {

            long long v252 = v250;
            uint64_t v253 = v251;
            sub_1006436E8((id *)&v252);
            id v125 = [v13 integerValue];
            uint64_t v17 = v101;
            id v126 = *(void **)&v101[v233];
            uint64_t v127 = *v21;
            uint64_t v128 = v21[1];
            uint64_t v129 = swift_getKeyPath();
            uint64_t v130 = v126;
            uint64_t v131 = (void *)sub_10083DDD0(v130, v127, v128, v129, (Swift::Int)v125);

            swift_release();
            uint64_t v9 = v131;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            unint64_t v38 = *(void *)(((unint64_t)v245 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v38 < *(void *)(((unint64_t)v245 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            {
LABEL_28:
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();

              id v132 = v232;
              uint64_t v101 = v17;
              uint64_t v133 = v243;
              id v134 = v225;
              goto LABEL_39;
            }
LABEL_89:
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            goto LABEL_28;
          }
LABEL_101:
          __break(1u);
LABEL_102:
          __break(1u);
          goto LABEL_103;
        }
LABEL_100:
        __break(1u);
        goto LABEL_101;
      }
LABEL_99:
      __break(1u);
      goto LABEL_100;
    }
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  id v136 = (id)v38;
  id v137 = v103;
  id v132 = v232;
  uint64_t v133 = v243;
  id v134 = v225;
  uint64_t v21 = v222;
LABEL_39:
  uint64_t v9 = (SEL *)&selRef_shouldHitTestWithFill;
  if (v134 != (id)1) {
    goto LABEL_65;
  }
  unint64_t v138 = v233;
  uint64_t v139 = *(void **)(*(void *)&v101[v233] + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v139) {
    goto LABEL_102;
  }
  id v140 = v139;
  uint64_t v141 = (char *)[v133 start];
  uint64_t v142 = *(void *)&v141[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  LODWORD(v142) = [v140 isWritingDirectionRightToLeftForParagraphAtCharIndex:v142];
  unint64_t v38 = v142;
  uint64_t v143 = *v21;
  uint64_t v144 = v21[1];
  uint64_t v145 = swift_getKeyPath();
  id v146 = (char *)*(id *)&v101[v138];
  uint64_t v147 = (void *)sub_10083D9EC(v146, v143, v144, v145, v38);

  swift_release();
  __int16 v29 = v147;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)v245 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v245 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  sub_10083B97C();
  uint64_t v9 = (SEL *)&selRef_shouldHitTestWithFill;
  if (!v148) {
    goto LABEL_64;
  }
  unint64_t v149 = (char *)[v148 selectedTextRange];
  if (!v149) {
    goto LABEL_64;
  }
  BOOL v13 = v149;
  uint64_t v150 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v150) {
    goto LABEL_63;
  }
  unint64_t v151 = v150;
  uint64_t v9 = (SEL *)[v150 layoutForInfo:*(void *)&v101[v233]];

  if (!v9) {
    goto LABEL_62;
  }
  self;
  uint64_t v152 = swift_dynamicCastObjCClass();
  if (v152)
  {
    uint64_t v153 = *(void **)(*(void *)&v101[v233] + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
    if (v153)
    {
      uint64_t v154 = v152;
      id v155 = v153;
      uint64_t v156 = (char *)[v13 start];
      uint64_t v157 = *(void *)&v156[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

      uint64_t v158 = sub_10056A518(v157);
      char v160 = v159;

      if (v160)
      {
        unint64_t v38 = (unint64_t)v29;
        v171 = v9;
        __int16 v29 = v13;
LABEL_60:
        uint64_t v101 = (char *)v231;
        goto LABEL_61;
      }
      uint64_t v242 = v154;
      uint64_t v101 = (char *)v231;
      if (v158)
      {
        unint64_t v38 = (unint64_t)v29;
        v171 = v9;
        __int16 v29 = v13;
        goto LABEL_61;
      }
      uint64_t v161 = *(char **)(v233 + v231);
      uint64_t v162 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
      uint64_t v163 = *(uint64_t (**)(uint64_t))(**(void **)&v161[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                               + 288);
      v243 = v161;
      uint64_t v164 = swift_retain();
      v165 = (void *)v163(v164);
      swift_release();
      unsigned int v166 = [v165 widthValid];

      if (v166)
      {
        uint64_t v167 = *(uint64_t (**)(uint64_t))(**(void **)&v161[v162] + 288);
        uint64_t v168 = swift_retain();
        uint64_t v169 = (void *)v167(v168);
        swift_release();
        unsigned __int8 v170 = [v169 heightValid];

        if (v170)
        {
LABEL_59:
          unint64_t v38 = (unint64_t)v29;
          v171 = v9;
          __int16 v29 = v13;
          id v132 = v232;
          goto LABEL_60;
        }
      }
      else
      {
      }
      uint64_t v172 = *(char **)(v233 + v231);
      id v173 = *(uint64_t (**)(uint64_t))(**(void **)&v172[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                               + 288);
      objc_super v174 = v172;
      uint64_t v175 = swift_retain();
      v176 = (void *)v173(v175);

      swift_release();
      unsigned __int8 v177 = [v176 widthValid];

      if ((v177 & 1) == 0)
      {
        v203 = *(char **)(v233 + v231);
        v204 = *(uint64_t (**)(uint64_t))(**(void **)&v203[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                                 + 288);
        v205 = v203;
        uint64_t v206 = swift_retain();
        v207 = (void *)v204(v206);

        swift_release();
        unsigned __int8 v208 = [v207 heightValid];

        if (v208)
        {
          unint64_t v38 = (unint64_t)v29;
          v171 = v9;
          __int16 v29 = v13;
          goto LABEL_87;
        }
        sub_1008620C4(v224, v38);
        id v209 = v228;
        [v228 setPosition:];
        v210 = *(char **)(v233 + v231);
        id v211 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetInfoGeometry());
        v212 = *(void (**)(uint64_t))(**(void **)&v210[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                              + 256);
        v213 = v210;
        id v214 = v209;
        uint64_t v215 = swift_retain();
        v216 = v236;
        v212(v215);
        swift_release();
        Class isa = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v237 + 8))(v216, v238);
        id v218 = [v211 initWithId:isa geometry:v214];

        unint64_t v38 = (unint64_t)v218;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)v245 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v245 & 0xFFFFFFFFFFFFFF8)
                                                                                             + 0x18) >> 1)
          goto LABEL_94;
        goto LABEL_86;
      }
      goto LABEL_59;
    }
LABEL_103:
    __break(1u);
    return;
  }
  unint64_t v38 = (unint64_t)v13;
  v171 = (SEL *)v29;
  __int16 v29 = (char *)v9;
  while (1)
  {
LABEL_61:

    BOOL v13 = (char *)v171;
LABEL_62:
    uint64_t v9 = (SEL *)&selRef_shouldHitTestWithFill;
LABEL_63:

LABEL_64:
LABEL_65:
    BOOL v13 = v245;
    __int16 v29 = (char *)[objc_allocWithZone((Class)type metadata accessor for CRLCommandGroup()) init];
    v178 = &v29[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands];
    swift_beginAccess();
    *(void *)v178 = v13;
    swift_bridgeObjectRelease();
    unint64_t v179 = (char *)[(id)v229 v9[234]];
    uint64_t v180 = *(void *)&v179[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

    if (v180 == NSNotFound.getter())
    {
      uint64_t v181 = 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v182 = 0;
    }
    else
    {
      uint64_t v181 = *v21;
      uint64_t v183 = v21[1];
      uint64_t v182 = v183 - *v21;
      if (__OFSUB__(v183, *v21))
      {
        __break(1u);
        goto LABEL_91;
      }
    }
    unint64_t v38 = (unint64_t)v234;
    id v184 = v228;
    v185 = v223;
    if (!*(void *)(*(void *)&v101[v233] + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage)) {
      goto LABEL_96;
    }
    id v186 = (char *)[v234 selectionPathForRange:v181 onStorage:v182];
    if (!v186) {
      goto LABEL_82;
    }
    BOOL v13 = v186;
    uint64_t v187 = (char *)[v185 v9[234]];
    uint64_t v9 = *(SEL **)&v187[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

    if (v9 == (SEL *)NSNotFound.getter()) {
      break;
    }
    uint64_t v188 = *(void *)&v185[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    uint64_t v190 = *(void *)&v185[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    uint64_t v189 = v190 - v188;
    if (!__OFSUB__(v190, v188)) {
      goto LABEL_73;
    }
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_86:
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    v171 = (SEL *)v13;
LABEL_87:
    id v132 = v232;
    uint64_t v101 = (char *)v231;
    uint64_t v21 = v222;
  }
  uint64_t v188 = 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v189 = 0;
LABEL_73:
  if (!*(void *)(*(void *)&v101[v233] + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage)) {
    goto LABEL_97;
  }
  id v191 = [(id)v38 selectionPathForRange:v188 onStorage:v189];
  if (v191)
  {
    uint64_t v192 = v191;
    id v193 = [objc_allocWithZone((Class)CRLCommandSelectionBehavior) initWithForwardSelectionPath:v13 reverseSelectionPath:v191];
    sub_10078BED8(v29, 0, v193, 4, 0);
    uint64_t v194 = (void *)swift_unknownObjectWeakLoadStrong();
    if (!v194) {
      goto LABEL_79;
    }
    uint64_t v195 = v194;
    id v196 = [v194 canvasView];

    if (!v196) {
      goto LABEL_80;
    }
    id v197 = [v196 window];

    if (v197)
    {
      id v244 = v197;
      sub_10050BF48(0, &qword_101677CC8);
      id v196 = (id)_bridgeAnythingToObjectiveC<A>(_:)();
    }
    else
    {
LABEL_79:
      id v196 = 0;
    }
LABEL_80:
    id v198 = [self mainBundle];
    NSString v199 = String._bridgeToObjectiveC()();
    NSString v200 = String._bridgeToObjectiveC()();
    id v201 = [v198 localizedStringForKey:v199 value:v200 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    v202 = (char *)String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    CRLAccessibilityPostAnnouncementNotification(v196, v202);

    swift_unknownObjectRelease();
    BOOL v13 = v202;
    unint64_t v38 = (unint64_t)v234;
    id v184 = v228;
    v185 = v223;
  }

LABEL_82:
}

void sub_1006425B8(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101687B10);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v112 - v10;
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_1016837D0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v112 - v18;
  uint64_t v20 = (void *)(a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v22 = [Strong commandController];

  if (v22)
  {
    uint64_t v23 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v23)
    {
      uint64_t v24 = v23;
      id v25 = [v23 selectionModelTranslator];

      id v119 = v25;
      if (v25)
      {
        uint64_t v120 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
        uint64_t v26 = *(void **)(*(void *)(a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                       + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
        if (!v26)
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        id v27 = v26;
        uint64_t v28 = (char *)[a2 start];
        uint64_t v29 = *(void *)&v28[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

        unint64_t v30 = (unsigned __int8 *)[v27 listStyleAtCharIndex:v29];
        id v118 = v22;
        if (v30)
        {
          id v31 = v30;
          LODWORD(v116) = v30[OBJC_IVAR____TtC8Freeform14CRLWPListStyle_listType];

          id v27 = v31;
        }
        else
        {
          LODWORD(v116) = 0;
        }

        swift_getKeyPath();
        sub_100832224();
        swift_release();
        id v32 = (void *)qword_101677C90;
        uint64_t v33 = unk_101677C98;
        swift_bridgeObjectRetain();
        sub_10082362C(a2, v32, v33, 0);
        swift_bridgeObjectRelease();
        sub_10083B97C();
        if (!v34)
        {

          id v90 = v118;
          goto LABEL_17;
        }
        id v35 = [v34 selectedTextRange];
        id v36 = v118;
        if (!v35)
        {

          return;
        }
        unint64_t v37 = *(void **)(*(void *)(a1 + v120) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
        if (!v37) {
          goto LABEL_41;
        }
        unint64_t v38 = v35;
        id v114 = v20;
        id v39 = v37;
        id v40 = (char *)[v38 start];
        uint64_t v41 = *(void *)&v40[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

        id v42 = v39;
        id v43 = [v39 charIndexForParagraphAtIndex:[v39 paragraphIndexAtCharIndex:v41]];
        uint64_t v44 = (char *)[v38 end];
        uint64_t v45 = *(void *)&v44[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

        if (v45 < (uint64_t)v43)
        {
          __break(1u);
        }
        else
        {
          uint64_t v46 = (objc_class *)type metadata accessor for CRLTextRange();
          int v47 = (char *)objc_allocWithZone(v46);
          uint64_t v48 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
          *(void *)&v47[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
          *(void *)&v47[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
          uint64_t v49 = &v47[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
          *(void *)uint64_t v49 = v43;
          *((void *)v49 + 1) = v45;
          *(void *)&v47[v48] = 0;
          v125.receiver = v47;
          v125.super_class = v46;
          unsigned __int8 v50 = [(char *)[super init]];
          uint64_t v117 = v50;

          int v51 = (char *)[v50 start];
          NSNotFound.getter();
          uint64_t v52 = *(void *)&v51[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
          uint64_t v53 = *(void *)&v51[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
          uint64_t v54 = (char *)objc_allocWithZone(v46);
          uint64_t v55 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
          *(void *)&v54[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
          *(void *)&v54[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
          uint64_t v56 = &v54[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
          *(void *)uint64_t v56 = v52;
          *((void *)v56 + 1) = v52;
          *(void *)&v54[v55] = v53;
          v124.receiver = v54;
          v124.super_class = v46;
          int v57 = (char *)[super init];
          uint64_t v113 = v57;

          *(void *)&v57[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = v53;
          unint64_t v58 = (char *)[v117 end];
          NSNotFound.getter();
          uint64_t v59 = *(void *)&v58[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
          uint64_t v60 = *(void *)&v58[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
          uint64_t v61 = (char *)objc_allocWithZone(v46);
          uint64_t v62 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
          *(void *)&v61[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
          *(void *)&v61[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
          id v63 = &v61[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
          *(void *)id v63 = v59;
          *((void *)v63 + 1) = v59;
          *(void *)&v61[v62] = v60;
          v123.receiver = v61;
          v123.super_class = v46;
          uint64_t v64 = (char *)[v123 init];

          *(void *)&v64[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = v60;
          uint64_t v115 = v64;

          uint64_t v65 = *(void *)&v117[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
          id v112 = *(id *)&v117[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
          id v66 = *(void **)(a1 + v120);
          uint64_t v67 = sub_1005057FC((uint64_t *)&unk_101683740);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v19, 1, 1, v67);
          uint64_t v68 = sub_1005057FC(&qword_101687A90);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v11, 1, 1, v68);
          sub_100522E9C((uint64_t)v19, (uint64_t)v15, (uint64_t *)&unk_1016837D0);
          sub_100522E9C((uint64_t)v11, (uint64_t)v7, (uint64_t *)&unk_101687B10);
          id v69 = objc_allocWithZone((Class)type metadata accessor for CRLWPReplaceTextCommand(0));
          id v70 = v66;
          id v71 = sub_1007A8FA0((uint64_t)v70, (uint64_t)v112, v65, 0, 0xE000000000000000, 0, (uint64_t)v15, (uint64_t)v7);
          sub_100522F00((uint64_t)v11, (uint64_t *)&unk_101687B10);
          sub_100522F00((uint64_t)v19, (uint64_t *)&unk_1016837D0);
          uint64_t v72 = v113;
          CGFloat v73 = (uint64_t *)&v113[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
          uint64_t v74 = *(void *)&v113[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
          uint64_t v75 = *(void *)&v113[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
          uint64_t KeyPath = swift_getKeyPath();
          uint64_t v77 = (char *)*(id *)(a1 + v120);
          uint64_t v78 = (void *)sub_10083DBDC(v77, v74, v75, KeyPath, v116);

          swift_release();
          sub_1005057FC((uint64_t *)&unk_101676C10);
          uint64_t v79 = swift_allocObject();
          *(_OWORD *)(v79 + 16) = xmmword_10117DF50;
          *(void *)(v79 + 32) = v71;
          *(void *)(v79 + 40) = v78;
          uint64_t v122 = v79;
          specialized Array._endMutation()();
          uint64_t v80 = v122;
          id v81 = objc_allocWithZone((Class)type metadata accessor for CRLCommandGroup());
          id v82 = v71;
          id v112 = v78;
          uint64_t v116 = [v81 init];
          uint64_t v83 = (uint64_t *)&v116[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands];
          swift_beginAccess();
          *uint64_t v83 = v80;
          swift_bridgeObjectRelease();
          id v84 = (char *)[v72 start];
          uint64_t v85 = *(void *)&v84[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

          if (v85 == NSNotFound.getter())
          {
            uint64_t v86 = 0x7FFFFFFFFFFFFFFFLL;
            uint64_t v87 = 0;
            id v88 = v118;
            id v89 = v119;
LABEL_20:
            if (!*(void *)(*(void *)(a1 + v120) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
            {
LABEL_42:
              __break(1u);
LABEL_43:
              __break(1u);
              return;
            }
            id v92 = [v89 selectionPathForRange:v86 onStorage:v87];
            if (!v92)
            {

LABEL_36:
              return;
            }
            uint64_t v93 = v92;
            id v114 = v82;
            id v94 = v115;
            id v95 = (char *)[v115 start];
            uint64_t v96 = *(void *)&v95[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

            if (v96 == NSNotFound.getter())
            {
              uint64_t v97 = 0x7FFFFFFFFFFFFFFFLL;
              uint64_t v98 = 0;
              goto LABEL_26;
            }
            uint64_t v97 = *(void *)&v94[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
            uint64_t v99 = *(void *)&v94[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
            uint64_t v98 = v99 - v97;
            if (!__OFSUB__(v99, v97))
            {
LABEL_26:
              if (*(void *)(*(void *)(a1 + v120) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
              {
                id v100 = [v89 selectionPathForRange:v97 onStorage:v98];
                if (v100)
                {
                  uint64_t v101 = v100;
                  id v102 = [objc_allocWithZone((Class)CRLCommandSelectionBehavior) initWithForwardSelectionPath:v93 reverseSelectionPath:v100];
                  sub_10078BED8(v116, 0, v102, 4, 0);
                  uint64_t v103 = (void *)swift_unknownObjectWeakLoadStrong();
                  id v104 = v103;
                  if (v103)
                  {
                    id v105 = [v103 canvasView];

                    id v82 = v114;
                    if (v105)
                    {
                      id v104 = [v105 window];

                      id v106 = v72;
                      if (v104)
                      {
                        id v121 = v104;
                        sub_10050BF48(0, &qword_101677CC8);
                        id v104 = (id)_bridgeAnythingToObjectiveC<A>(_:)();
                      }
                    }
                    else
                    {
                      id v106 = v72;
                      id v104 = 0;
                    }
                  }
                  else
                  {
                    id v106 = v72;
                    id v82 = v114;
                  }
                  id v107 = [self mainBundle];
                  NSString v108 = String._bridgeToObjectiveC()();
                  NSString v109 = String._bridgeToObjectiveC()();
                  id v110 = [v107 localizedStringForKey:v108 value:v109 table:0];

                  static String._unconditionallyBridgeFromObjectiveC(_:)();
                  NSString v111 = String._bridgeToObjectiveC()();
                  swift_bridgeObjectRelease();
                  CRLAccessibilityPostAnnouncementNotification(v104, v111);

                  swift_unknownObjectRelease();
                  goto LABEL_36;
                }

                id v90 = v114;
LABEL_17:

                return;
              }
              goto LABEL_43;
            }
            goto LABEL_39;
          }
          uint64_t v86 = *v73;
          uint64_t v91 = v73[1];
          uint64_t v87 = v91 - *v73;
          id v88 = v118;
          id v89 = v119;
          if (!__OFSUB__(v91, *v73)) {
            goto LABEL_20;
          }
        }
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
    }
  }
}

void sub_100643120(uint64_t a1, void *a2)
{
  uint64_t v2 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  uint64_t v3 = *(void **)(*(void *)(a1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v3)
  {
    __break(1u);
    goto LABEL_25;
  }
  id v6 = v3;
  uint64_t v7 = (char *)[a2 start];
  uint64_t v8 = *(void *)&v7[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  uint64_t v9 = (unsigned __int8 *)[v6 listStyleAtCharIndex:v8];
  if (!v9)
  {

    return;
  }
  uint64_t v10 = v9;
  int v11 = v9[OBJC_IVAR____TtC8Freeform14CRLWPListStyle_listType];

  if (!v11) {
    return;
  }
  uint64_t v12 = *(void **)(*(void *)(a1 + v2) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v12)
  {
LABEL_25:
    __break(1u);
    return;
  }
  id v13 = v12;
  uint64_t v14 = (char *)[a2 start];
  uint64_t v15 = *(void *)&v14[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  sub_1008F1D9C(v15);
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  unint64_t v21 = v20;

  if (v17)
  {

    swift_bridgeObjectRelease();
    uint64_t v22 = HIBYTE(v21) & 0xF;
    if ((v21 & 0x2000000000000000) == 0) {
      uint64_t v22 = v19 & 0xFFFFFFFFFFFFLL;
    }
    if (!v22)
    {
      sub_10082373C();
      if (v23 >= 1)
      {
        sub_10082386C(-1);
        return;
      }
      uint64_t KeyPath = swift_getKeyPath();
      id v25 = sub_1008355F8();
      if (v25)
      {
        uint64_t v26 = v25;
        uint64_t v27 = *(void *)&v25[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
        uint64_t v28 = *(void *)&v25[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
        id v29 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                                    + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionPath"));
        id v30 = [objc_allocWithZone((Class)CRLCommandSelectionBehavior) initWithCommitSelectionPath:v29 forwardSelectionPath:v29 reverseSelectionPath:v29];
        id v31 = (char *)*(id *)(a1 + v2);
        swift_retain();
        id v32 = (unsigned char *)sub_10083DBDC(v31, v27, v28, KeyPath, 0);

        swift_release();
        uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
        id v34 = [Strong commandController];

        if (v34)
        {
          id v35 = v30;
          sub_10078BED8(v32, 0, v30, 4, 0);
        }
        sub_10083686C(KeyPath);
        swift_release();
      }
      else
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2950, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2950);
        swift_release();
      }
      id v36 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v36)
      {
        unint64_t v37 = v36;
        id v38 = [v36 canvasView];

        if (!v38)
        {
LABEL_23:
          id v40 = [self mainBundle];
          NSString v41 = String._bridgeToObjectiveC()();
          NSString v42 = String._bridgeToObjectiveC()();
          id v43 = [v40 localizedStringForKey:v41 value:v42 table:0];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          NSString v44 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          CRLAccessibilityPostAnnouncementNotification(v38, v44);
          swift_unknownObjectRelease();

          return;
        }
        id v39 = [v38 window];

        if (v39)
        {
          sub_10050BF48(0, &qword_101677CC8);
          id v38 = (id)_bridgeAnythingToObjectiveC<A>(_:)();

          goto LABEL_23;
        }
      }
      id v38 = 0;
      goto LABEL_23;
    }
  }
}

uint64_t sub_100643604(uint64_t result, void *a2)
{
  uint64_t v2 = *(void **)(*(void *)(result + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v2)
  {
    id v4 = v2;
    uint64_t v5 = (char *)[a2 start];
    uint64_t v6 = *(void *)&v5[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

    uint64_t v7 = (unsigned __int8 *)[v4 listStyleAtCharIndex:v6];
    if (v7)
    {
      uint64_t v8 = v7;
      int v9 = v7[OBJC_IVAR____TtC8Freeform14CRLWPListStyle_listType];

      if (v9)
      {
        uint64_t v10 = 1;
        sub_10082386C(1);
        return v10;
      }
    }
    else
    {
    }
    return 0;
  }
  __break(1u);
  return result;
}

id *sub_1006436E8(id *a1)
{
  return a1;
}

unsigned char *sub_1006437D8(unsigned char *result)
{
  if (result[OBJC_IVAR____TtC8Freeform31CRLSimpleProgressViewController_isPresented] == 1) {
    return [v1 dismissViewControllerAnimated:1 completion:0];
  }
  return result;
}

void sub_100643818()
{
  sub_1005057FC(&qword_101677D18);
  NSKeyValueObservedChange.newValue.getter();
  if (v5 != 2 && (v5 & 1) != 0)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v1 = (void *)Strong;
      uint64_t v2 = Strong + OBJC_IVAR____TtC8Freeform31CRLSimpleProgressViewController_delegate;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v3 = *(void *)(v2 + 8);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(void *, uint64_t, uint64_t))(v3 + 8))(v1, ObjectType, v3);

        swift_unknownObjectRelease();
      }
      else
      {
      }
    }
  }
}

void sub_100643A6C()
{
  uint64_t v1 = v0;
  id v2 = [objc_allocWithZone((Class)UIView) init];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC8Freeform31CRLSimpleProgressViewController_progress];
  if ([v3 isIndeterminate])
  {
    id v30 = [objc_allocWithZone((Class)UIActivityIndicatorView) init];
    [v30 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v30 startAnimating];
    [v2 addSubview:v30];
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIProgressView) init];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v4 setObservedProgress:v3];
    [v2 addSubview:v4];
    char v5 = self;
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_10117DF50;
    id v30 = v4;
    id v7 = [v30 leadingAnchor];
    id v8 = [v2 leadingAnchor];
    id v9 = [v7 constraintEqualToSystemSpacingAfterAnchor:v8 multiplier:1.0];

    *(void *)(v6 + 32) = v9;
    id v10 = [v2 trailingAnchor];
    id v11 = [v30 trailingAnchor];
    id v12 = [v10 constraintEqualToSystemSpacingAfterAnchor:v11 multiplier:1.0];

    *(void *)(v6 + 40) = v12;
    specialized Array._endMutation()();
    sub_10053BBC0();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v5 activateConstraints:isa];
  }
  uint64_t v14 = self;
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_10117FBE0;
  id v16 = [v30 centerYAnchor];
  id v17 = [v2 centerYAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17];

  *(void *)(v15 + 32) = v18;
  id v19 = [v30 centerXAnchor];
  id v20 = [v2 centerXAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20];

  *(void *)(v15 + 40) = v21;
  id v22 = [v30 topAnchor];
  id v23 = [v2 topAnchor];
  id v24 = [v22 constraintGreaterThanOrEqualToAnchor:v23];

  *(void *)(v15 + 48) = v24;
  id v25 = [v2 bottomAnchor];
  id v26 = [v30 bottomAnchor];
  id v27 = [v25 constraintGreaterThanOrEqualToAnchor:v26];

  *(void *)(v15 + 56) = v27;
  specialized Array._endMutation()();
  sub_10053BBC0();
  Class v28 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v14 activateConstraints:v28];

  id v29 = v2;
  [v1 setView:v29];
}

id sub_100643F84()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSimpleProgressViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLSimpleProgressViewController()
{
  return self;
}

id sub_100644038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  if (!a2)
  {
    swift_bridgeObjectRetain();
    NSString v9 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    NSString v10 = 0;
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_6:
  id v11 = [self alertControllerWithTitle:v9 message:v10 preferredStyle:a5];

  id v12 = (objc_class *)type metadata accessor for CRLSimpleProgressViewController();
  id v13 = objc_allocWithZone(v12);
  *(void *)&v13[OBJC_IVAR____TtC8Freeform31CRLSimpleProgressViewController_progressObservation] = 0;
  *(void *)&v13[OBJC_IVAR____TtC8Freeform31CRLSimpleProgressViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v13[OBJC_IVAR____TtC8Freeform31CRLSimpleProgressViewController_isPresented] = 0;
  *(void *)&v13[OBJC_IVAR____TtC8Freeform31CRLSimpleProgressViewController_progress] = a6;
  v19.receiver = v13;
  v19.super_class = v12;
  id v14 = a6;
  uint64_t v15 = (char *)[super initWithNibName:0 bundle:0];
  swift_getKeyPath();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();

  swift_release();
  swift_release();
  id v17 = *(void **)&v15[OBJC_IVAR____TtC8Freeform31CRLSimpleProgressViewController_progressObservation];
  *(void *)&v15[OBJC_IVAR____TtC8Freeform31CRLSimpleProgressViewController_progressObservation] = v16;

  *(void *)&v15[OBJC_IVAR____TtC8Freeform31CRLSimpleProgressViewController_delegate + 8] = &off_10150CAD0;
  swift_unknownObjectWeakAssign();
  [v11 crl_setContentViewController:v15];

  return v11;
}

const char *sub_100644268()
{
  return "isCancelled";
}

id sub_100644274@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isCancelled];
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_1006442A8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1006442E0()
{
}

uint64_t destroy for CRLBoardAuxiliaryRealTimeChange(uint64_t a1)
{
  return sub_100510084(*(void *)(a1 + 8), *(void *)(a1 + 16));
}

uint64_t initializeWithCopy for CRLBoardAuxiliaryRealTimeChange(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  sub_100510D4C(v4, v5);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithCopy for CRLBoardAuxiliaryRealTimeChange(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  sub_100510D4C(v4, v5);
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  sub_100510084(v6, v7);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 initializeWithCopy for CRLBoardLibraryFolderViewModel.TimeBucket(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CRLBoardAuxiliaryRealTimeChange(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_100510084(v4, v5);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLBoardAuxiliaryRealTimeChange(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLBoardAuxiliaryRealTimeChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardAuxiliaryRealTimeChange()
{
  return &type metadata for CRLBoardAuxiliaryRealTimeChange;
}

Swift::Int sub_1006444B0()
{
  int v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1 + 5);
  return Hasher._finalize()();
}

void sub_1006444F8()
{
  Hasher._combine(_:)(*v0 + 5);
}

Swift::Int sub_100644528()
{
  int v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1 + 5);
  return Hasher._finalize()();
}

uint64_t sub_10064456C@<X0>(int *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100645C40(*a1);
  *a2 = result;
  return result;
}

void sub_100644598(_DWORD *a1@<X8>)
{
  *a1 = *v1 + 5;
}

uint64_t sub_1006445A8()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100644608()
{
  return RawRepresentable<>.encode(to:)();
}

void sub_100644658(void *a1@<X8>)
{
  *a1 = &off_101503648;
}

uint64_t sub_100644668@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v42 = a3;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v41 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for CRLProto_Data(0);
  uint64_t v46 = *(void *)(v44 - 8);
  __chkstk_darwin(v44, v9);
  id v43 = (uint64_t *)((char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1005057FC(&qword_101677D28);
  __chkstk_darwin(v11 - 8, v12);
  id v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for CRLProto_BoardIdentifier(0);
  uint64_t v45 = *(void *)(v50 - 8);
  __chkstk_darwin(v50, v15);
  id v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v18 - 8, v19);
  id v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for BinaryDecodingOptions();
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v24 = type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord(0);
  __chkstk_darwin(v24, v25);
  id v27 = (int *)((char *)&v41 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v49 = 0;
  long long v47 = 0u;
  long long v48 = 0u;
  sub_100510D4C(a1, a2);
  BinaryDecodingOptions.init()();
  sub_100646788(&qword_101677D30, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord);
  Message.init(serializedData:extensions:partial:options:)();
  if (v3) {
    return sub_100510084(a1, a2);
  }
  uint64_t v29 = v46;
  sub_100522E9C((uint64_t)v27 + *(int *)(v24 + 24), (uint64_t)v14, &qword_101677D28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v14, 1, v50) == 1)
  {
    UnknownStorage.init()();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(&v17[*(int *)(v50 + 20)], 1, 1, v44);
    sub_100522F00((uint64_t)v14, &qword_101677D28);
  }
  else
  {
    sub_100645C54((uint64_t)v14, (uint64_t)v17, type metadata accessor for CRLProto_BoardIdentifier);
  }
  sub_100753118((uint64_t)v17, (uint64_t)v21);
  unsigned __int8 v30 = sub_100645C40(*v27);
  if (v30 == 12)
  {
    sub_1005F7CE8();
    swift_allocError();
    unsigned char *v31 = 1;
    swift_willThrow();
    sub_100510084(a1, a2);
    sub_100646728((uint64_t)v21, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    return sub_100646728((uint64_t)v27, type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord);
  }
  else
  {
    unsigned __int8 v32 = v30;
    uint64_t v33 = (uint64_t)v27 + *(int *)(v24 + 28);
    uint64_t v34 = v41;
    sub_100522E9C(v33, v41, (uint64_t *)&unk_101674160);
    int v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v34, 1, v44);
    id v36 = v43;
    if (v35 == 1)
    {
      *(_OWORD *)id v43 = xmmword_101180360;
      UnknownStorage.init()();
      sub_100522F00(v34, (uint64_t *)&unk_101674160);
    }
    else
    {
      sub_100645C54(v34, (uint64_t)v43, type metadata accessor for CRLProto_Data);
    }
    sub_100510084(a1, a2);
    sub_100646728((uint64_t)v27, type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord);
    uint64_t v37 = *v36;
    unint64_t v38 = v36[1];
    sub_100510D4C(*v36, v38);
    sub_100646728((uint64_t)v36, type metadata accessor for CRLProto_Data);
    uint64_t v39 = v42;
    sub_100645C54((uint64_t)v21, v42, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    uint64_t result = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord();
    *(_DWORD *)(v39 + *(int *)(result + 20)) = v32 + 5;
    id v40 = (uint64_t *)(v39 + *(int *)(result + 24));
    *id v40 = v37;
    v40[1] = v38;
  }
  return result;
}

uint64_t sub_100644C44()
{
  uint64_t v0 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v87 = (uint64_t)v72 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v4);
  uint64_t v80 = (uint64_t)v72 - v5;
  uint64_t v6 = type metadata accessor for CRLProto_Data(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  id v82 = (long long *)((char *)v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10, v11);
  uint64_t v86 = (_OWORD *)((char *)v72 - v12);
  __chkstk_darwin(v13, v14);
  uint64_t v79 = (_OWORD *)((char *)v72 - v15);
  uint64_t v16 = sub_1005057FC(&qword_101677D28);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v84 = (uint64_t)v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for CRLProto_BoardIdentifier(0);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v21);
  *(void *)&long long v89 = (char *)v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)v72 - v25;
  uint64_t v27 = type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord(0);
  __chkstk_darwin(v27, v28);
  unsigned __int8 v30 = (_DWORD *)((char *)v72 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  *unsigned __int8 v30 = 0;
  UnknownStorage.init()();
  uint64_t v31 = (uint64_t)v30 + *(int *)(v27 + 24);
  uint64_t v83 = v20;
  uint64_t v34 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56);
  uint64_t v32 = v20 + 56;
  uint64_t v33 = v34;
  v34(v31, 1, 1, v19);
  uint64_t v81 = v27;
  uint64_t v35 = *(int *)(v27 + 28);
  uint64_t v90 = v7;
  unint64_t v38 = *(void (**)(void))(v7 + 56);
  uint64_t v36 = v7 + 56;
  uint64_t v37 = v38;
  uint64_t v88 = (uint64_t)v30 + v35;
  v38();
  UnknownStorage.init()();
  uint64_t v39 = &v26[*(int *)(v19 + 20)];
  uint64_t v85 = (unsigned int (*)(void, void, void))v6;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v38)(v39, 1, 1, v6);
  sub_100522F00(v31, &qword_101677D28);
  sub_100645C54((uint64_t)v26, v31, type metadata accessor for CRLProto_BoardIdentifier);
  v33(v31, 0, 1, v19);
  uint64_t v40 = v92;
  uint64_t v41 = sub_100753FC0();
  uint64_t v92 = v40;
  if (v40) {
    goto LABEL_12;
  }
  uint64_t v74 = v42;
  v72[0] = v41;
  uint64_t v75 = v33;
  v72[1] = v32;
  uint64_t v43 = v89;
  uint64_t v76 = v37;
  uint64_t v77 = v30;
  uint64_t v44 = v90;
  uint64_t v46 = v84;
  uint64_t v45 = v85;
  sub_100522E9C(v31, v84, &qword_101677D28);
  int v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v46, 1, v19);
  uint64_t v48 = v19;
  uint64_t v78 = v36;
  if (v47 == 1)
  {
    UnknownStorage.init()();
    ((void (*)(uint64_t, uint64_t, uint64_t, unsigned int (*)(void, void, void)))v76)(v43 + *(int *)(v19 + 20), 1, 1, v45);
    sub_100522F00(v46, &qword_101677D28);
  }
  else
  {
    sub_100645C54(v46, v43, type metadata accessor for CRLProto_BoardIdentifier);
  }
  uint64_t v49 = v80;
  uint64_t v50 = v43 + *(int *)(v48 + 20);
  sub_100522E9C(v50, v80, (uint64_t *)&unk_101674160);
  int v51 = *(unsigned int (**)(uint64_t, uint64_t, void))(v44 + 48);
  unsigned int v52 = v51(v49, 1, v45);
  uint64_t v53 = (uint64_t)v45;
  uint64_t v90 = v44 + 48;
  uint64_t v85 = v51;
  uint64_t v73 = v48;
  uint64_t v54 = v79;
  if (v52 == 1)
  {
    _OWORD *v79 = xmmword_101180360;
    UnknownStorage.init()();
    sub_100522F00(v49, (uint64_t *)&unk_101674160);
  }
  else
  {
    sub_100645C54(v49, (uint64_t)v79, type metadata accessor for CRLProto_Data);
  }
  uint64_t v55 = v72[0];
  sub_100510084(*(void *)v54, *((void *)v54 + 1));
  uint64_t v56 = v74;
  *(void *)uint64_t v54 = v55;
  *((void *)v54 + 1) = v56;
  sub_100522F00(v50, (uint64_t *)&unk_101674160);
  sub_100645C54((uint64_t)v54, v50, type metadata accessor for CRLProto_Data);
  uint64_t v57 = v50;
  unint64_t v58 = v76;
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v76)(v57, 0, 1, v53);
  sub_100522F00(v31, &qword_101677D28);
  sub_100645C54(v89, v31, type metadata accessor for CRLProto_BoardIdentifier);
  v75(v31, 0, 1, v73);
  uint64_t v59 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord();
  uint64_t v60 = v91;
  *uint64_t v77 = *(_DWORD *)(v91 + *(int *)(v59 + 20));
  uint64_t v61 = (uint64_t)v86;
  long long v89 = xmmword_101180360;
  *uint64_t v86 = xmmword_101180360;
  UnknownStorage.init()();
  uint64_t v62 = v88;
  sub_100522F00(v88, (uint64_t *)&unk_101674160);
  sub_100645C54(v61, v62, type metadata accessor for CRLProto_Data);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v58)(v62, 0, 1, v53);
  id v63 = (uint64_t *)(v60 + *(int *)(v59 + 24));
  uint64_t v65 = *v63;
  unint64_t v64 = v63[1];
  uint64_t v66 = v87;
  sub_100522E9C(v62, v87, (uint64_t *)&unk_101674160);
  uint64_t v19 = v53;
  if (v85(v66, 1, v53) == 1)
  {
    uint64_t v67 = v82;
    *id v82 = v89;
    sub_100510D4C(v65, v64);
    UnknownStorage.init()();
    sub_100522F00(v66, (uint64_t *)&unk_101674160);
  }
  else
  {
    uint64_t v67 = v82;
    sub_100645C54(v66, (uint64_t)v82, type metadata accessor for CRLProto_Data);
    sub_100510D4C(v65, v64);
  }
  uint64_t v68 = v92;
  uint64_t v69 = v88;
  sub_100510084(*(void *)v67, *((void *)v67 + 1));
  *(void *)uint64_t v67 = v65;
  *((void *)v67 + 1) = v64;
  sub_100522F00(v69, (uint64_t *)&unk_101674160);
  sub_100645C54((uint64_t)v67, v69, type metadata accessor for CRLProto_Data);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v58)(v69, 0, 1, v19);
  sub_100646788(&qword_101677D30, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord);
  unsigned __int8 v30 = v77;
  uint64_t v70 = Message.serializedData(partial:)();
  uint64_t v92 = v68;
  if (v68)
  {
LABEL_12:
    sub_100646728((uint64_t)v30, type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord);
  }
  else
  {
    uint64_t v19 = v70;
    sub_100646728((uint64_t)v30, type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord);
  }
  return v19;
}

uint64_t sub_100645480(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_101677E08);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_10064666C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v13) = 0;
  type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  sub_100646788(&qword_101671E68, (void (*)(uint64_t))type metadata accessor for CRLGloballyScopedBoardIdentifier);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord();
    LOBYTE(v13) = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    long long v13 = *(_OWORD *)(v3 + *(int *)(v10 + 24));
    v12[15] = 2;
    sub_10060D344();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_10064567C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v4 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v4, v5);
  uint64_t v22 = (uint64_t)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_101677DF8);
  uint64_t v20 = *(void *)(v7 - 8);
  uint64_t v21 = v7;
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord();
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_10064666C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  uint64_t v15 = v20;
  uint64_t v16 = (uint64_t)v14;
  LOBYTE(v23) = 0;
  sub_100646788(&qword_101671E50, (void (*)(uint64_t))type metadata accessor for CRLGloballyScopedBoardIdentifier);
  uint64_t v17 = v21;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  sub_100645C54(v22, v16, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  LOBYTE(v23) = 1;
  *(_DWORD *)(v16 + *(int *)(v11 + 20)) = KeyedDecodingContainer.decode(_:forKey:)();
  char v24 = 2;
  sub_10060D184();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v17);
  *(_OWORD *)(v16 + *(int *)(v11 + 24)) = v23;
  sub_1006466C0(v16, v19, (uint64_t (*)(void))type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return sub_100646728(v16, (uint64_t (*)(void))type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord);
}

uint64_t sub_1006459E4()
{
  uint64_t v1 = 1701869940;
  if (*v0 != 1) {
    uint64_t v1 = 1635017060;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6564496472616F62;
  }
}

uint64_t sub_100645A3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100646A30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100645A64(uint64_t a1)
{
  unint64_t v2 = sub_10064666C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100645AA0(uint64_t a1)
{
  unint64_t v2 = sub_10064666C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100645ADC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10064567C(a1, a2);
}

uint64_t sub_100645AF4(void *a1)
{
  return sub_100645480(a1);
}

uint64_t sub_100645B0C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v5 = *v2;
  uint64_t v7 = *((void *)v2 + 1);
  unint64_t v6 = *((void *)v2 + 2);
  uint64_t v8 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord();
  a2[3] = v8;
  a2[4] = sub_100646788(&qword_101677D20, (void (*)(uint64_t))type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord);
  uint64_t v9 = sub_1005767BC(a2);
  sub_1006466C0(a1, (uint64_t)v9, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  *(_DWORD *)((char *)v9 + *(int *)(v8 + 20)) = v5 + 5;
  uint64_t v10 = (uint64_t *)((char *)v9 + *(int *)(v8 + 24));
  uint64_t *v10 = v7;
  v10[1] = v6;

  return sub_100510D4C(v7, v6);
}

uint64_t sub_100645BEC()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord()
{
  uint64_t result = qword_101677D90;
  if (!qword_101677D90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100645C40(int a1)
{
  if ((a1 - 5) >= 0xC) {
    return 12;
  }
  else {
    return (a1 - 5);
  }
}

uint64_t sub_100645C54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *sub_100645CBC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = *(int *)(a3 + 24);
    *(_DWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v13 = (uint64_t *)((char *)a1 + v12);
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = *(uint64_t *)((char *)a2 + v12);
    unint64_t v16 = *((void *)v14 + 1);
    swift_bridgeObjectRetain();
    sub_100510D4C(v15, v16);
    *uint64_t v13 = v15;
    v13[1] = v16;
  }
  return a1;
}

uint64_t sub_100645DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  int v5 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  uint64_t v6 = *v5;
  unint64_t v7 = v5[1];

  return sub_100510084(v6, v7);
}

uint64_t sub_100645E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  uint64_t v12 = (uint64_t *)(a1 + v11);
  uint64_t v13 = *(void *)(a2 + v11);
  unint64_t v14 = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  sub_100510D4C(v13, v14);
  *uint64_t v12 = v13;
  v12[1] = v14;
  return a1;
}

uint64_t sub_100645F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (uint64_t *)(a1 + v10);
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v13 = *v12;
  unint64_t v14 = v12[1];
  sub_100510D4C(*v12, v14);
  uint64_t v15 = *v11;
  unint64_t v16 = v11[1];
  *uint64_t v11 = v13;
  v11[1] = v14;
  sub_100510084(v15, v16);
  return a1;
}

uint64_t sub_100645FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for CRLBoardIdentifierStorage(0);
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  uint64_t v8 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_10064607C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  uint64_t v13 = *(void *)(a1 + v12);
  unint64_t v14 = *(void *)(a1 + v12 + 8);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  sub_100510084(v13, v14);
  return a1;
}

uint64_t sub_100646130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100646144);
}

uint64_t sub_100646144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8) >> 60;
    if (((4 * v10) & 0xC) != 0) {
      return 16 - ((4 * v10) & 0xC | (v10 >> 2));
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100646218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10064622C);
}

uint64_t sub_10064622C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    uint64_t v11 = (void *)(a1 + *(int *)(a4 + 24));
    *uint64_t v11 = 0;
    v11[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  return result;
}

uint64_t sub_1006462F8()
{
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CRLBoardAuxiliaryRealTimeChangeType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CRLBoardAuxiliaryRealTimeChangeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    void *result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006464F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardAuxiliaryRealTimeChangeType()
{
  return &type metadata for CRLBoardAuxiliaryRealTimeChangeType;
}

unint64_t sub_100646534()
{
  unint64_t result = qword_101677DD0;
  if (!qword_101677DD0)
  {
    sub_100522D34(&qword_101677DD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677DD0);
  }
  return result;
}

unint64_t sub_100646594()
{
  unint64_t result = qword_101677DE0;
  if (!qword_101677DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677DE0);
  }
  return result;
}

uint64_t sub_1006465E8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_100646788(&qword_101677DE8, (void (*)(uint64_t))type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord);
  uint64_t result = sub_100646788(&qword_101677DF0, (void (*)(uint64_t))type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_10064666C()
{
  unint64_t result = qword_101677E00;
  if (!qword_101677E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677E00);
  }
  return result;
}

uint64_t sub_1006466C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100646728(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100646788(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1006467D0()
{
  unint64_t result = qword_101677E10;
  if (!qword_101677E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677E10);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLBoardAuxiliaryRealTimeChangeRecord.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006468F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord.CodingKeys()
{
  return &type metadata for CRLBoardAuxiliaryRealTimeChangeRecord.CodingKeys;
}

unint64_t sub_10064692C()
{
  unint64_t result = qword_101677E18;
  if (!qword_101677E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677E18);
  }
  return result;
}

unint64_t sub_100646984()
{
  unint64_t result = qword_101677E20;
  if (!qword_101677E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677E20);
  }
  return result;
}

unint64_t sub_1006469DC()
{
  unint64_t result = qword_101677E28;
  if (!qword_101677E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677E28);
  }
  return result;
}

uint64_t sub_100646A30(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6564496472616F62 && a2 == 0xEF7265696669746ELL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t type metadata accessor for CRLAASApplicationManagerDependencies()
{
  return self;
}

id sub_100646BF0()
{
  return [objc_allocWithZone((Class)type metadata accessor for CRLAASApplicationMangerConfiguration()) init];
}

void sub_100646C24(void *a1, void *a2, void *a3)
{
  unsigned int v52 = a1;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v54 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v55 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  uint64_t v53 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchTime();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v22 = (char *)v47 - v21;
  long long v23 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_boardLibrary);
  char v24 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_thumbnailProvider);
  if (v24)
  {
    id v56 = v20;
    uint64_t v50 = v10;
    uint64_t v51 = v7;
    uint64_t v25 = v6;
    uint64_t v26 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_thumbnailProvider + 8);
    id v27 = v23;
    swift_unknownObjectRetain();
    id v48 = v27;
    uint64_t v49 = v3;
    id v28 = sub_1006473A4(v27, v24, v26, a3);
    id v29 = [v28 popoverPresentationController];
    if (v29)
    {
      unsigned __int8 v30 = v29;
      [v29 setBarButtonItem:v52];
    }
    id v31 = [v28 popoverPresentationController];
    if (v31)
    {
      uint64_t v32 = v31;
      [v31 _setIgnoreBarButtonItemSiblings:1];
    }
    v47[1] = v24;
    [a2 presentViewController:v28 animated:1 completion:0];
    id v33 = [a2 view];
    unsigned int v52 = a2;
    if (v33)
    {
      uint64_t v34 = v33;
      [v33 setAccessibilityViewIsModal:1];

      sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
      uint64_t v35 = (void *)static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      + infix(_:_:)();
      v47[0] = *(void *)(v14 + 8);
      ((void (*)(char *, id))v47[0])(v17, v56);
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = v28;
      aBlock[4] = sub_100649D20;
      void aBlock[5] = v36;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100679958;
      aBlock[3] = &unk_10150CF48;
      uint64_t v37 = _Block_copy(aBlock);
      id v38 = v28;
      uint64_t v39 = v53;
      static DispatchQoS.unspecified.getter();
      uint64_t v57 = _swiftEmptyArrayStorage;
      sub_100522CDC();
      sub_1005057FC((uint64_t *)&unk_1016725D0);
      sub_10056B494();
      uint64_t v40 = v54;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v37);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v40, v25);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v39, v50);
      ((void (*)(char *, id))v47[0])(v22, v56);
      swift_release();
      uint64_t v41 = *(void **)(v49 + OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_presentingViewController);
      uint64_t v42 = v52;
      *(void *)(v49 + OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_presentingViewController) = v52;

      id v43 = [v42 navigationController];
      if (v43)
      {
        uint64_t v44 = v43;
        id v45 = [v43 view];

        if (v45)
        {
          [v45 setAccessibilityElementsHidden:1];
        }
      }
      swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    id v56 = v23;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"presentActivityShareOptionsViewController(button:viewController:existingShare:)", 79, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Gelato/CRLGelatoShareSheetProvider.swift", 110, 2, 158, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentActivityShareOptionsViewController(button:viewController:existingShare:)", 79, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Gelato/CRLGelatoShareSheetProvider.swift", 110, 2, 158);
    uint64_t v46 = v56;
  }
}

id sub_100647234()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_thumbnailProvider);
  if (v1)
  {
    BOOL v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_thumbnailProvider + 8);
    uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_boardLibrary);
    swift_unknownObjectRetain();
    id v4 = sub_1006473A4(v3, v1, v2, 0);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v5 = (id)static OS_os_log.crlDefault;
    uint64_t v6 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v6, (uint64_t)"CRLGelatoShareSheetProvider: Could not create activity view controller. Thumbnail provider is epxected.", 103, 2, (uint64_t)_swiftEmptyArrayStorage);

    id v7 = objc_allocWithZone((Class)type metadata accessor for CRLSelectionAwareActivityViewController());
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    id v9 = [v7 initWithActivityItems:isa applicationActivities:0];

    id v4 = sub_100DC6BC4(v9);
  }
  return v4;
}

id sub_1006473A4(void *a1, void *a2, void *a3, void *a4)
{
  id v122 = a3;
  objc_super v125 = a2;
  uint64_t v131 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v131, v7);
  id v9 = (char *)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v127 = *(void *)(v14 - 8);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v132 = (uint64_t)&v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = v16;
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v113 - v19;
  uint64_t v129 = v4;
  uint64_t v21 = *(void *)&v4[OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_board];
  uint64_t v22 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v23 = *(void *)(v21 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100539548(v23, (uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_1005387C0((uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v130 = v22;
  char v24 = (uint64_t *)(*(void *)(v21 + v22) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v25 = *v24;
  unint64_t v26 = v24[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v13, v25, v26, (uint64_t)v20);
  id v27 = a4;
  if (!a4)
  {
    id v27 = *(void **)(*(void *)(v21 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState) + 16);
    id v28 = v27;
  }
  uint64_t v29 = type metadata accessor for CRLBoardShareItemProviderHelper();
  uint64_t v30 = *(void *)(v21 + v130) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100539548(v30, (uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  id v31 = a4;
  uint64_t v124 = sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  uint64_t v32 = (uint64_t)aBlock;
  uint64_t v33 = v136;
  sub_1005387C0((uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  id v126 = v27;
  uint64_t v123 = v29;
  id v34 = sub_100B73A38(v27, (uint64_t)a1, (uint64_t)v20, v32, v33, 0, 0xF000000000000000);
  swift_bridgeObjectRelease();
  unint64_t v138 = &type metadata for CRLFeatureFlags;
  unint64_t v139 = sub_1005396A8();
  LOBYTE(aBlock) = 18;
  LOBYTE(v32) = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&aBlock);
  if (v32)
  {
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v35 = swift_allocObject();
    long long v121 = xmmword_101177E70;
    *(_OWORD *)(v35 + 16) = xmmword_101177E70;
    *(void *)(v35 + 32) = v34;
    aBlock = (void **)v35;
    specialized Array._endMutation()();
    id v134 = aBlock;
    uint64_t v36 = *(void *)(v21 + v130) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100539548(v36, (uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
    id v122 = v34;
    id v37 = v34;
    CRRegister.wrappedValue.getter();
    uint64_t v38 = (uint64_t)aBlock;
    uint64_t v39 = v136;
    sub_1005387C0((uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
    id v40 = sub_100B73D30(a1, (uint64_t)v20, v38, v39);
    swift_bridgeObjectRelease();
    id v41 = v40;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    uint64_t v42 = (uint64_t)v20;
    if (*(void *)(((unint64_t)v134 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v134 & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = v121;
    uint64_t v44 = v132;
    sub_100539548((uint64_t)v20, v132, type metadata accessor for CRLBoardIdentifier);
    id v45 = (objc_class *)type metadata accessor for CRLSendACopyActivity_i();
    *(void *)&long long v121 = v41;
    uint64_t v46 = v45;
    int v47 = (char *)objc_allocWithZone(v45);
    *(void *)&v47[OBJC_IVAR____TtC8Freeform22CRLSendACopyActivity_i_activityItems] = 0;
    *(void *)&v47[OBJC_IVAR____TtC8Freeform22CRLSendACopyActivity_i_collaborationItem] = 0;
    sub_100539548(v44, (uint64_t)&v47[OBJC_IVAR____TtC8Freeform22CRLSendACopyActivity_i_boardIdentifier], type metadata accessor for CRLBoardIdentifier);
    v133.receiver = v47;
    v133.super_class = v46;
    id v48 = [super init];
    sub_1005387C0(v44, type metadata accessor for CRLBoardIdentifier);
    *(void *)(v43 + 32) = v48;
    aBlock = (void **)v43;
    specialized Array._endMutation()();
    id v114 = aBlock;
    uint64_t v49 = self;
    id v50 = [v49 mainBundle];
    NSString v51 = String._bridgeToObjectiveC()();
    NSString v52 = String._bridgeToObjectiveC()();
    id v53 = [v50 localizedStringForKey:v51 value:v52 table:0];

    uint64_t v120 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v119 = v54;

    sub_100D08044();
    sub_100D0846C();
    uint64_t v118 = sub_1009F6904();
    uint64_t v117 = v55;
    id v56 = [v49 mainBundle];
    NSString v57 = String._bridgeToObjectiveC()();
    NSString v58 = String._bridgeToObjectiveC()();
    id v59 = [v56 localizedStringForKey:v57 value:v58 table:0];

    uint64_t v116 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v115 = v60;

    id v61 = [v49 mainBundle];
    NSString v62 = String._bridgeToObjectiveC()();
    NSString v63 = String._bridgeToObjectiveC()();
    id v64 = [v61 localizedStringForKey:v62 value:v63 table:0];

    uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v67 = v66;

    uint64_t v68 = *(void *)(v21 + v130) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100539548(v68, (uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
    CRRegister.wrappedValue.getter();
    uint64_t v69 = (uint64_t)aBlock;
    uint64_t v70 = v136;
    sub_1005387C0((uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
    id v71 = sub_100648F48((uint64_t)v20, v69, v70, v125, v123);
    swift_bridgeObjectRelease();
    id v72 = objc_allocWithZone((Class)UIActivityItemsConfiguration);
    sub_10050BF48(0, (unint64_t *)&unk_10169FAE0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v74 = [v72 initWithItemProviders:isa];

    uint64_t v75 = swift_allocObject();
    *(void *)(v75 + 16) = v114;
    unint64_t v139 = (unint64_t)sub_100649810;
    id v140 = (void *)v75;
    aBlock = _NSConcreteStackBlock;
    uint64_t v136 = *(void *)"";
    id v137 = sub_1006481E8;
    unint64_t v138 = (ValueMetadata *)&unk_10150CDE0;
    uint64_t v76 = _Block_copy(&aBlock);
    swift_release();
    [v74 setApplicationActivitiesProvider:v76];
    _Block_release(v76);
    uint64_t v77 = (void *)swift_allocObject();
    uint64_t v78 = v120;
    v77[2] = v71;
    v77[3] = v78;
    uint64_t v79 = v118;
    v77[4] = v119;
    v77[5] = v79;
    v77[6] = v117;
    v77[7] = v65;
    uint64_t v80 = v116;
    v77[8] = v67;
    v77[9] = v80;
    v77[10] = v115;
    unint64_t v139 = (unint64_t)sub_100649870;
    id v140 = v77;
    aBlock = _NSConcreteStackBlock;
    uint64_t v136 = *(void *)"";
    id v137 = sub_100648564;
    unint64_t v138 = (ValueMetadata *)&unk_10150CE30;
    uint64_t v81 = _Block_copy(&aBlock);
    id v82 = v71;
    swift_release();
    [v74 setPerItemMetadataProvider:v81];
    _Block_release(v81);
    type metadata accessor for CRLSelectionAwareActivityViewController();
    id v83 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v84 = v74;
    id v85 = [v83 initWithActivityItemsConfiguration:v84];
    uint64_t v86 = sub_100DC6BC4(v85);

    uint64_t v87 = v129;
    uint64_t v88 = v127;
    long long v89 = v122;
  }
  else
  {
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v90 = swift_allocObject();
    *(_OWORD *)(v90 + 16) = xmmword_101177E70;
    *(void *)(v90 + 32) = v34;
    aBlock = (void **)v90;
    specialized Array._endMutation()();
    id v91 = objc_allocWithZone((Class)UIActivityItemsConfiguration);
    sub_10050BF48(0, (unint64_t *)&unk_10169FAE0);
    id v92 = v34;
    Class v93 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v94 = [v91 initWithItemProviders:v93];

    uint64_t v95 = v132;
    sub_100539548((uint64_t)v20, v132, type metadata accessor for CRLBoardIdentifier);
    uint64_t v88 = v127;
    unint64_t v96 = (*(unsigned __int8 *)(v127 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80);
    unint64_t v97 = (v128 + v96 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v98 = swift_allocObject();
    sub_1005394E4(v95, v98 + v96);
    uint64_t v42 = (uint64_t)v20;
    long long v89 = v34;
    uint64_t v87 = v129;
    *(void *)(v98 + v97) = v129;
    uint64_t v99 = (void *)(v98 + ((v97 + 15) & 0xFFFFFFFFFFFFFFF8));
    id v100 = v122;
    *uint64_t v99 = v125;
    v99[1] = v100;
    unint64_t v139 = (unint64_t)sub_100649568;
    id v140 = (void *)v98;
    aBlock = _NSConcreteStackBlock;
    uint64_t v136 = *(void *)"";
    id v137 = sub_100648564;
    unint64_t v138 = (ValueMetadata *)&unk_10150CD40;
    uint64_t v101 = _Block_copy(&aBlock);
    id v102 = v87;
    swift_unknownObjectRetain();
    swift_release();
    [v94 setPerItemMetadataProvider:v101];
    _Block_release(v101);
    type metadata accessor for CRLSelectionAwareActivityViewController();
    id v103 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v104 = v94;
    id v105 = [v103 initWithActivityItemsConfiguration:v104];
    uint64_t v86 = sub_100DC6BC4(v105);
  }
  uint64_t v106 = v132;
  sub_100539548(v42, v132, type metadata accessor for CRLBoardIdentifier);
  unint64_t v107 = (*(unsigned __int8 *)(v88 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
  uint64_t v108 = swift_allocObject();
  *(void *)(v108 + 16) = v87;
  sub_1005394E4(v106, v108 + v107);
  unint64_t v139 = (unint64_t)sub_10064973C;
  id v140 = (void *)v108;
  aBlock = _NSConcreteStackBlock;
  uint64_t v136 = *(void *)"";
  id v137 = sub_100864858;
  unint64_t v138 = (ValueMetadata *)&unk_10150CD90;
  NSString v109 = _Block_copy(&aBlock);
  id v110 = v87;
  id v111 = v86;
  swift_retain();
  swift_release();
  [v111 setCompletionWithItemsHandler:v109];
  _Block_release(v109);

  swift_release();
  sub_1005387C0(v42, type metadata accessor for CRLBoardIdentifier);
  return v111;
}

Class sub_1006481E8(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  swift_release();
  sub_10050BF48(0, &qword_101677EA8);
  v3.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  return v3.super.isa;
}

id sub_100648268@<X0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  if (v3 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v5 == v6)
  {
    id result = (id)swift_bridgeObjectRelease_n();
LABEL_13:
    if (a1)
    {
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
    }
    else
    {
      *(void *)(a3 + 24) = sub_10050BF48(0, (unint64_t *)&unk_10168E1E0);
      *(void *)a3 = a2;
      return a2;
    }
    return result;
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  id result = (id)swift_bridgeObjectRelease();
  if (v8) {
    goto LABEL_13;
  }
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;
  if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v16 = (uint64_t *)a3;
  }
  else
  {
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    id result = (id)swift_bridgeObjectRelease();
    uint64_t v16 = (uint64_t *)a3;
    if ((v15 & 1) == 0)
    {
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      return result;
    }
  }
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_101177E70;
  id v18 = objc_allocWithZone((Class)UIActivityCollaborationModeRestriction_Legacy);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v23 = [v18 initWithDisabledMode:0 alertTitle:v19 alertMessage:v20 alertDismissButtonTitle:v21 alertContinueToModeButtonTitle:v22];

  *(void *)(v17 + 32) = v23;
  specialized Array._endMutation()();
  id result = (id)sub_1005057FC((uint64_t *)&unk_10169B6A0);
  v16[3] = (uint64_t)result;
  *uint64_t v16 = v17;
  return result;
}

id sub_100648564(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(void *__return_ptr, uint64_t, id);
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void v15[3];
  uint64_t v16;
  uint64_t vars8;

  uint64_t v5 = *(void (**)(void *__return_ptr, uint64_t, id))(a1 + 32);
  swift_retain();
  uint64_t v6 = a3;
  v5(v15, a2, v6);
  swift_release();

  uint64_t v7 = v16;
  if (v16)
  {
    char v8 = sub_10050F848(v15, v16);
    id v9 = *(void *)(v7 - 8);
    uint64_t v10 = __chkstk_darwin(v8, v8);
    uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v9 + 16))(v12, v10);
    uint64_t v13 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v7);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v15);
  }
  else
  {
    uint64_t v13 = 0;
  }

  return v13;
}

void sub_1006486CC(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1) {
    goto LABEL_2;
  }
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;
  if (v14 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v16 == v17)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
LABEL_2:
      *(_OWORD *)a5 = 0u;
      *(_OWORD *)(a5 + 16) = 0u;
      return;
    }
  }
  uint64_t v20 = type metadata accessor for CRLBoardShareItemProviderHelper();
  uint64_t v21 = *(void *)(*(void *)(a3 + OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_board)
                  + OBJC_IVAR____TtC8Freeform8CRLBoard_data)
      + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100539548(v21, (uint64_t)v13, type metadata accessor for CRLBoardCRDTData);
  sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  uint64_t v22 = v25[1];
  uint64_t v23 = v25[2];
  sub_1005387C0((uint64_t)v13, type metadata accessor for CRLBoardCRDTData);
  id v24 = sub_100648F48(a2, v22, v23, a4, v20);
  swift_bridgeObjectRelease();
  *(void *)(a5 + 24) = sub_10050BF48(0, (unint64_t *)&unk_10168E1E0);
  *(void *)a5 = v24;
}

void sub_1006488D4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v9 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8, v12);
  uint64_t v13 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_101672BB0);
  *(void *)&double v16 = __chkstk_darwin(v14 - 8, v15).n128_u64[0];
  id v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v19 = (id)static OS_os_log.crlDefault;
    uint64_t v20 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v20, (uint64_t)"UIActivityViewController returned without completing. Delete any cached shares.", 79, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t v21 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v18, 1, 1, v21);
    sub_100539548(a6, (uint64_t)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLBoardIdentifier);
    type metadata accessor for MainActor();
    uint64_t v22 = a5;
    uint64_t v23 = static MainActor.shared.getter();
    unint64_t v24 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v25 = (void *)swift_allocObject();
    v25[2] = v23;
    void v25[3] = &protocol witness table for MainActor;
    v25[4] = v22;
    sub_1005394E4((uint64_t)v13, (uint64_t)v25 + v24);
    sub_1005912D0((uint64_t)v18, (uint64_t)&unk_101677EB8, (uint64_t)v25);
    swift_release();
  }
  uint64_t v26 = OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_presentingViewController;
  id v27 = *(void **)&a5[OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_presentingViewController];
  if (v27)
  {
    id v28 = [v27 navigationController];
    if (v28)
    {
      uint64_t v29 = v28;
      id v30 = [v28 view];

      if (v30)
      {
        [v30 setAccessibilityElementsHidden:0];
      }
    }
  }
  id v31 = *(void **)&a5[v26];
  *(void *)&a5[v26] = 0;
}

uint64_t sub_100648BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for MainActor();
  v5[4] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[5] = v7;
  v5[6] = v6;
  return _swift_task_switch(sub_100648C4C, v7, v6);
}

uint64_t sub_100648C4C()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_100648CF0;
  uint64_t v2 = *(void *)(v0 + 24);
  return sub_100EDA098(v2);
}

uint64_t sub_100648CF0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_1005A5EF8, v3, v2);
}

void sub_100648E10(void *a1)
{
  UIAccessibilityNotifications v1 = UIAccessibilityLayoutChangedNotification;
  id v2 = [a1 viewIfLoaded];
  UIAccessibilityPostNotification(v1, v2);
}

uint64_t type metadata accessor for CRLGelatoShareSheetProvider()
{
  return self;
}

id sub_100648F48(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v57 = a5;
  id v53 = a4;
  uint64_t v54 = a3;
  uint64_t v48 = a1;
  uint64_t v7 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v45 + 64);
  __chkstk_darwin(v7 - 8, v9);
  uint64_t v55 = (uint64_t)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UTType();
  uint64_t v50 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = [objc_allocWithZone((Class)LPLinkMetadata) init];
  id v52 = v15;
  uint64_t v46 = a2;
  NSString v16 = String._bridgeToObjectiveC()();
  [v15 setTitle:v16];

  id v56 = [objc_allocWithZone((Class)NSItemProvider) init];
  static UTType.png.getter();
  UTType.identifier.getter();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v49 = v11 + 8;
  NSString v51 = v17;
  v17(v14, v10);
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  int v47 = type metadata accessor for CRLBoardIdentifier;
  uint64_t v19 = v55;
  sub_100539548(a1, v55, type metadata accessor for CRLBoardIdentifier);
  uint64_t v20 = *(unsigned __int8 *)(v45 + 80);
  uint64_t v21 = (v20 + 16) & ~v20;
  uint64_t v45 = v20 | 7;
  unint64_t v22 = (v8 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  v44[1] = v24 + 8;
  uint64_t v25 = swift_allocObject();
  sub_1005394E4(v19, v25 + v21);
  uint64_t v26 = (void *)(v25 + v22);
  id v27 = v53;
  uint64_t v28 = v54;
  *uint64_t v26 = a2;
  v26[1] = v28;
  uint64_t v29 = (void *)(v25 + v23);
  *uint64_t v29 = v27;
  v29[1] = &off_101520148;
  *(void *)(v25 + v24) = v57;
  NSString v62 = sub_1006498B0;
  uint64_t v63 = v25;
  aBlock = _NSConcreteStackBlock;
  uint64_t v59 = *(void *)"";
  v44[0] = &v60;
  uint64_t v60 = sub_10059805C;
  id v61 = &unk_10150CE80;
  id v30 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v53 = v27;
  swift_release();
  id v31 = v56;
  [v56 registerDataRepresentationForTypeIdentifier:v18 visibility:0 loadHandler:v30];
  _Block_release(v30);

  id v32 = v52;
  [v52 setImageProvider:v31];
  id v33 = [objc_allocWithZone((Class)NSItemProvider) init];
  static UTType.png.getter();
  UTType.identifier.getter();
  v51(v14, v50);
  NSString v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v35 = v55;
  sub_100539548(v48, v55, v47);
  uint64_t v36 = swift_allocObject();
  sub_1005394E4(v35, v36 + v21);
  id v37 = (void *)(v36 + v22);
  uint64_t v39 = v53;
  uint64_t v38 = v54;
  *id v37 = v46;
  v37[1] = v38;
  id v40 = (void *)(v36 + v23);
  *id v40 = v39;
  v40[1] = &off_101520148;
  *(void *)(v36 + v24) = v57;
  NSString v62 = sub_1006499F4;
  uint64_t v63 = v36;
  aBlock = _NSConcreteStackBlock;
  uint64_t v59 = *(void *)"";
  uint64_t v60 = sub_10059805C;
  id v61 = &unk_10150CED0;
  id v41 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v42 = v39;
  swift_release();
  [v33 registerDataRepresentationForTypeIdentifier:v34 visibility:0 loadHandler:v41];
  _Block_release(v41);

  [v32 setIconProvider:v33];
  return v32;
}

uint64_t sub_10064944C()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v4);
}

void sub_100649568(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 + v7);
  uint64_t v9 = *(void **)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_1006486CC(a1, v2 + v6, v8, v9, a2);
}

uint64_t sub_10064962C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10064963C()
{
  return swift_release();
}

uint64_t sub_100649644()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;

  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

void sub_10064973C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v10 = *(char **)(v4 + 16);
  uint64_t v11 = v4 + ((*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  sub_1006488D4(a1, a2, a3, a4, v10, v11);
}

uint64_t sub_1006497D8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100649810()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100649818()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 88, 7);
}

id sub_100649870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100648268(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1006498B0(uint64_t a1, uint64_t a2)
{
  return sub_100649A0C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100B72DC0);
}

uint64_t sub_1006498CC()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((((((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_1006499F4(uint64_t a1, uint64_t a2)
{
  return sub_100649A0C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100B7316C);
}

uint64_t sub_100649A0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(v3 + v8);
  uint64_t v11 = *(void *)(v3 + v8 + 8);
  uint64_t v12 = *(void *)(v3 + v9);
  uint64_t v13 = *(void *)(v3 + v9 + 8);
  uint64_t v14 = *(void *)(v3 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8));

  return a3(a1, a2, v3 + v7, v10, v11, v12, v13, v14);
}

uint64_t sub_100649AEC()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();

  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100649BEC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *unint64_t v9 = v2;
  v9[1] = sub_100528488;
  return sub_100648BB4(a1, v5, v6, v7, v8);
}

uint64_t sub_100649CE8()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100649D20()
{
  sub_100648E10(*(void **)(v0 + 16));
}

unsigned char *storeEnumTagSinglePayload for CRLStyleCopyingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    void *result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100649E24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLStyleCopyingType()
{
  return &type metadata for CRLStyleCopyingType;
}

Swift::Int sub_100649E5C()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1 + 1);
  return Hasher._finalize()();
}

void sub_100649EA4()
{
  Hasher._combine(_:)(*v0 + 1);
}

Swift::Int sub_100649ED4()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1 + 1);
  return Hasher._finalize()();
}

uint64_t sub_100649F18@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10064A05C(*a1);
  *a2 = result;
  return result;
}

void sub_100649F44(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

uint64_t sub_100649F54()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100649FB4()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_10064A008()
{
  unint64_t result = qword_101677EC0;
  if (!qword_101677EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677EC0);
  }
  return result;
}

uint64_t sub_10064A05C(unint64_t a1)
{
  if (a1 >= 7) {
    return 6;
  }
  else {
    return (0x5040302010006uLL >> (8 * a1));
  }
}

unint64_t sub_10064A084()
{
  unint64_t result = qword_101677EC8;
  if (!qword_101677EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677EC8);
  }
  return result;
}

void sub_10064A0DC(void *a1)
{
  uint64_t v114 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v114 - 8);
  __chkstk_darwin(v114, v4);
  unsigned int v6 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_101676C68);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (uint64_t)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_101675C18);
  j = *(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
  uint64_t v110 = v11;
  __chkstk_darwin(v11, v12);
  uint64_t v112 = (uint64_t)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v103 - v16;
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (uint64_t)&v103 - v20;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_mostSpecificItemSelectionUUIDs] = _swiftEmptyArrayStorage;
  unint64_t v22 = &v1[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo];
  uint64_t v23 = type metadata accessor for CRLPersistableSelectionPath.UserInfo(0);
  unint64_t v24 = *(void *)(v23 - 8) + 56;
  uint64_t v113 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v24;
  v113(v22, 1, 1, v23);
  uint64_t v25 = (objc_class *)type metadata accessor for CRLPersistableSelectionPath(0);
  v119.receiver = v1;
  v119.super_class = v25;
  uint64_t v116 = (char *)[super init];
  id v108 = a1;
  id v26 = [a1 orderedSelections];
  sub_10064FFA8();
  unint64_t v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v28 = v27 >> 62;
  if (!(v27 >> 62))
  {
    uint64_t v29 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v29) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    id v111 = 0;
    uint64_t v32 = v27 & 0xFFFFFFFFFFFFFF8;
    if (v28) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
  if (!v29) {
    goto LABEL_11;
  }
LABEL_3:
  unint64_t v30 = v29 - 1;
  if (__OFSUB__(v29, 1)) {
    goto LABEL_88;
  }
  if ((v27 & 0xC000000000000001) != 0) {
    goto LABEL_89;
  }
  if ((v30 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_91;
  }
  if (v30 >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  for (id i = *(id *)(v27 + 8 * v30 + 32); ; id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
  {
    id v111 = i;
    swift_bridgeObjectRelease();
    uint64_t v32 = v27 & 0xFFFFFFFFFFFFFF8;
    if (v28)
    {
LABEL_12:
      id v34 = v111;
      id v36 = v111;
      swift_bridgeObjectRetain();
      uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_9:
      uint64_t v33 = *(void *)(v32 + 16);
      id v34 = v111;
      id v35 = v111;
    }
    BOOL v37 = v33 < 2;
    unint64_t v38 = v33 - 2;
    uint64_t v115 = v6;
    if (v37)
    {
      swift_bridgeObjectRelease();
      id v41 = v34;
      uint64_t v48 = v34;
      if (!v34) {
        goto LABEL_26;
      }
      goto LABEL_45;
    }
    if (!v34)
    {
      swift_bridgeObjectRelease();
LABEL_26:
      id v107 = 0;
      id v49 = v108;
      unint64_t v28 = (unint64_t)v116;
      goto LABEL_48;
    }
    self;
    uint64_t v39 = swift_dynamicCastObjCClass();
    if (!v39)
    {
      swift_bridgeObjectRelease();
      id v41 = v34;
      uint64_t v48 = v34;
      goto LABEL_45;
    }
    id v106 = (id)v10;
    uint64_t v10 = v21;
    uint64_t v21 = (uint64_t)v17;
    id v107 = (id)v24;
    uint64_t v17 = (char *)v39;
    id v40 = v34;
    id v104 = v17;
    if (![v17 isValid])
    {

      swift_bridgeObjectRelease();
      id v41 = v40;
      uint64_t v48 = v34;
      uint64_t v10 = (uint64_t)v106;
      goto LABEL_45;
    }
    id v105 = v40;
    if ((v27 & 0xC000000000000001) == 0) {
      break;
    }
LABEL_92:
    id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    uint64_t v17 = (char *)v21;
LABEL_20:
    uint64_t v42 = v10;
    id v43 = v105;

    swift_bridgeObjectRelease();
    type metadata accessor for CRLBoardItemSelection();
    uint64_t v44 = swift_dynamicCastClass();
    uint64_t v10 = (uint64_t)v106;
    if (v44)
    {
      id v103 = v41;
      uint64_t v45 = *(void *)(v44 + OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems);
      if ((v45 & 0xC000000000000001) != 0)
      {
        id v46 = v103;
        swift_bridgeObjectRetain();
        uint64_t v47 = __CocoaSet.count.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v47 = *(void *)(v45 + 16);
        id v50 = v103;
      }
      if (v47 != 1)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPersistableSelectionPath.swift", 94, 2, 78, (uint64_t)"Should not have a text selection if multiple board items are selected", 69, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPersistableSelectionPath.swift", 94, 2, 78);
      }
      uint64_t v51 = swift_bridgeObjectRetain();
      id v52 = (void *)sub_100999830(v51);
      swift_bridgeObjectRelease();
      id v41 = v103;
      if (v52)
      {
        type metadata accessor for CRLWPShapeItem();
        uint64_t v53 = swift_dynamicCastClass();
        if (v53)
        {
          uint64_t v54 = v53;
          id v107 = v52;
          if ([v104 isInsertionPoint]
            && (uint64_t v55 = v104,
                id v56 = [v104 headCursorAffinity],
                v56 == [v55 tailCursorAffinity]))
          {
            uint64_t v57 = *(void **)(v54 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
            if (!v57) {
              goto LABEL_97;
            }
            id v58 = v57;
            uint64_t v59 = v104;
            sub_1008F219C([v104 rawRange], [v104 headCursorAffinity], v42);

            uint64_t v60 = (int *)sub_1005057FC(&qword_101676C78);
            uint64_t v61 = v60[12];
            uint64_t v62 = v60[16];
            uint64_t v112 = v60[20];
            uint64_t v63 = j;
            uint64_t v17 = (char *)v110;
            j[2](v10, v42, v110);
            *(void *)(v10 + v61) = [v59 caretAffinity];
            *(unsigned char *)(v10 + v62) = [v59 isVisual];
            id v64 = [v59 insertionEdge];

            id v65 = v103;
            ((void (*)(uint64_t, char *))v63[1])(v42, v17);
            *(void *)(v10 + v112) = v64;
            id v41 = v65;
            swift_storeEnumTagMultiPayload();
            v113((char *)v10, 0, 1, v23);
            uint64_t v66 = &v116[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo];
            swift_beginAccess();
            sub_10064FFE8(v10, (uint64_t)v66);
            swift_endAccess();
            uint64_t v48 = v65;
            unsigned int v6 = v115;
          }
          else
          {
            uint64_t v67 = OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage;
            uint64_t v68 = *(void **)(v54 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
            if (!v68) {
              goto LABEL_95;
            }
            id v69 = v68;
            uint64_t v70 = v104;
            sub_1008F219C([v104 rawRange], [v104 headCursorAffinity], v17);

            id v71 = *(void **)(v54 + v67);
            if (!v71) {
              goto LABEL_96;
            }
            id v72 = v71;
            id v73 = [v70 rawRange];
            uint64_t v75 = (uint64_t)v73 + v74;
            unsigned int v6 = v115;
            if (__OFADD__(v73, v74)) {
              goto LABEL_94;
            }
            id v76 = [v70 tailCursorAffinity];
            sub_1008F219C(v75, (uint64_t)v76, v112);

            id v107 = (id)(v10 + *(int *)(sub_1005057FC(&qword_101676C70) + 48));
            uint64_t v77 = v110;
            uint64_t v78 = j[4];
            v78(v10, (uint64_t)v17, v110);
            v78((uint64_t)v107, v112, v77);
            id v41 = v103;
            swift_storeEnumTagMultiPayload();
            v113((char *)v10, 0, 1, v23);
            uint64_t v79 = &v116[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo];
            swift_beginAccess();
            sub_10064FFE8(v10, (uint64_t)v79);
            swift_endAccess();
            uint64_t v48 = v41;
          }
          goto LABEL_45;
        }
      }
      uint64_t v48 = v41;
      unsigned int v6 = v115;
    }
    else
    {

      uint64_t v48 = v41;
    }
LABEL_45:
    id v107 = v48;
    id v80 = v41;
    type metadata accessor for CRLGroupSelection();
    uint64_t v81 = swift_dynamicCastClass();

    id v49 = v108;
    if (v81 || (self, swift_dynamicCastObjCClass()))
    {
      swift_storeEnumTagMultiPayload();
      v113((char *)v10, 0, 1, v23);
      unint64_t v28 = (unint64_t)v116;
      id v82 = &v116[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo];
      swift_beginAccess();
      sub_10064FFE8(v10, (uint64_t)v82);
      swift_endAccess();
    }
    else
    {
      unint64_t v28 = (unint64_t)v116;
    }
LABEL_48:
    type metadata accessor for CRLBoardItemSelection();
    id v83 = [v49 mostSpecificSelectionOfClass:swift_getObjCClassFromMetadata()];
    if (!v83) {
      goto LABEL_53;
    }
    id v84 = v83;
    uint64_t v85 = swift_dynamicCastClass();
    if (!v85)
    {

LABEL_53:
      return;
    }
    id v106 = v84;
    uint64_t v10 = *(void *)(v85 + OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems);
    if ((v10 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      __CocoaSet.makeIterator()();
      type metadata accessor for CRLBoardItem(0);
      sub_100650050((unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
      Set.Iterator.init(_cocoa:)();
      uint64_t v10 = v120;
      uint64_t v113 = v121;
      uint64_t v21 = (uint64_t)v122;
      unint64_t v27 = v123;
      unint64_t v24 = v124;
    }
    else
    {
      uint64_t v86 = -1 << *(unsigned char *)(v10 + 32);
      uint64_t v87 = *(void *)(v10 + 56);
      uint64_t v113 = (void (*)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      uint64_t v21 = ~v86;
      uint64_t v88 = -v86;
      if (v88 < 64) {
        uint64_t v89 = ~(-1 << v88);
      }
      else {
        uint64_t v89 = -1;
      }
      unint64_t v24 = v89 & v87;
      swift_bridgeObjectRetain();
      unint64_t v27 = 0;
    }
    uint64_t v110 = v10 & 0x7FFFFFFFFFFFFFFFLL;
    id v105 = (id)v21;
    uint64_t v112 = (unint64_t)(v21 + 64) >> 6;
    uint64_t v23 = v3 + 32;
    for (j = (void (**)(uint64_t, uint64_t, uint64_t))((char *)&type metadata for Swift.AnyObject + 8);
          v10 < 0;
          unint64_t v24 = (unint64_t)v17)
    {
      uint64_t v91 = __CocoaSet.Iterator.next()();
      if (!v91) {
        goto LABEL_85;
      }
      uint64_t v117 = v91;
      type metadata accessor for CRLBoardItem(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v92 = v118;
      Class v93 = (void *)swift_unknownObjectRelease();
      unint64_t v28 = v27;
      uint64_t v17 = (char *)v24;
      if (!v92) {
        goto LABEL_85;
      }
LABEL_79:
      (*(void (**)(void *))((swift_isaMask & *v92) + 0x88))(v93);
      unint64_t v97 = (unint64_t *)&v116[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_mostSpecificItemSelectionUUIDs];
      swift_beginAccess();
      unint64_t v98 = *v97;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *unint64_t v97 = v98;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v98 = sub_100F617D8(0, *(void *)(v98 + 16) + 1, 1, v98);
        *unint64_t v97 = v98;
      }
      unint64_t v101 = *(void *)(v98 + 16);
      unint64_t v100 = *(void *)(v98 + 24);
      uint64_t v21 = v101 + 1;
      if (v101 >= v100 >> 1)
      {
        unint64_t v98 = sub_100F617D8(v100 > 1, v101 + 1, 1, v98);
        *unint64_t v97 = v98;
      }
      *(void *)(v98 + 16) = v21;
      unint64_t v102 = v98
           + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
           + *(void *)(v3 + 72) * v101;
      unsigned int v6 = v115;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v102, v115, v114);
      swift_endAccess();

      unint64_t v27 = v28;
    }
    if (v24)
    {
      uint64_t v17 = (char *)((v24 - 1) & v24);
      unint64_t v90 = __clz(__rbit64(v24)) | (v27 << 6);
      unint64_t v28 = v27;
LABEL_78:
      Class v93 = *(id *)(*(void *)(v10 + 48) + 8 * v90);
      id v92 = v93;
      if (v93) {
        goto LABEL_79;
      }
      goto LABEL_85;
    }
    uint64_t v94 = v27 + 1;
    if (!__OFADD__(v27, 1))
    {
      if (v94 < v112)
      {
        unint64_t v95 = *((void *)v113 + v94);
        unint64_t v28 = v27 + 1;
        if (!v95)
        {
          unint64_t v28 = v27 + 2;
          if ((uint64_t)(v27 + 2) >= v112) {
            goto LABEL_85;
          }
          unint64_t v95 = *((void *)v113 + v28);
          if (!v95)
          {
            unint64_t v28 = v27 + 3;
            if ((uint64_t)(v27 + 3) >= v112) {
              goto LABEL_85;
            }
            unint64_t v95 = *((void *)v113 + v28);
            if (!v95)
            {
              unint64_t v28 = v27 + 4;
              if ((uint64_t)(v27 + 4) >= v112) {
                goto LABEL_85;
              }
              unint64_t v95 = *((void *)v113 + v28);
              if (!v95)
              {
                unint64_t v96 = v27 + 5;
                while (v112 != v96)
                {
                  unint64_t v95 = *((void *)v113 + v96++);
                  if (v95)
                  {
                    unint64_t v28 = v96 - 1;
                    goto LABEL_77;
                  }
                }
                goto LABEL_85;
              }
            }
          }
        }
LABEL_77:
        uint64_t v17 = (char *)((v95 - 1) & v95);
        unint64_t v90 = __clz(__rbit64(v95)) + (v28 << 6);
        goto LABEL_78;
      }
LABEL_85:

      sub_10052E1EC();
      return;
    }
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    ;
  }
  if (v38 < *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v17 = (char *)v21;
    id v41 = *(id *)(v27 + 8 * v38 + 32);
    goto LABEL_20;
  }
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
}

char *sub_10064AFF4(uint64_t a1, unint64_t a2)
{
  unint64_t v261 = a2;
  uint64_t v262 = a1;
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v236 = (uint64_t)&v224 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v243 = (uint64_t)&v224 - v8;
  __chkstk_darwin(v9, v10);
  uint64_t v240 = (uint64_t)&v224 - v11;
  v256 = (int *)type metadata accessor for CRLProto_TextSelection(0);
  uint64_t v258 = *((void *)v256 - 1);
  __chkstk_darwin(v256, v12);
  unint64_t v235 = (uint64_t *)((char *)&v224 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14, v15);
  uint64_t v242 = (uint64_t *)((char *)&v224 - v16);
  __chkstk_darwin(v17, v18);
  int v230 = (uint64_t *)((char *)&v224 - v19);
  __chkstk_darwin(v20, v21);
  BOOL v229 = (uint64_t *)((char *)&v224 - v22);
  __chkstk_darwin(v23, v24);
  id v228 = (uint64_t *)((char *)&v224 - v25);
  __chkstk_darwin(v26, v27);
  v245 = (uint64_t *)((char *)&v224 - v28);
  __chkstk_darwin(v29, v30);
  objc_super v248 = (uint64_t *)((char *)&v224 - v31);
  uint64_t v32 = sub_1005057FC(&qword_101677FD8);
  __chkstk_darwin(v32 - 8, v33);
  uint64_t v237 = (uint64_t)&v224 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35, v36);
  uint64_t v244 = (uint64_t)&v224 - v37;
  __chkstk_darwin(v38, v39);
  uint64_t v233 = (uint64_t)&v224 - v40;
  __chkstk_darwin(v41, v42);
  uint64_t v232 = (uint64_t)&v224 - v43;
  __chkstk_darwin(v44, v45);
  uint64_t v231 = (uint64_t)&v224 - v46;
  __chkstk_darwin(v47, v48);
  uint64_t v238 = (uint64_t)&v224 - v49;
  __chkstk_darwin(v50, v51);
  uint64_t v250 = (uint64_t)&v224 - v52;
  __chkstk_darwin(v53, v54);
  uint64_t v253 = (char *)&v224 - v55;
  uint64_t v56 = sub_1005057FC(&qword_101676C68);
  __chkstk_darwin(v56 - 8, v57);
  objc_super v247 = (char *)&v224 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v59, v60);
  objc_super v246 = (char *)&v224 - v61;
  __chkstk_darwin(v62, v63);
  v249 = (char *)&v224 - v64;
  uint64_t v251 = type metadata accessor for CRLProto_Data(0);
  uint64_t v257 = *(void *)(v251 - 8);
  __chkstk_darwin(v251, v65);
  id v234 = (_OWORD *)((char *)&v224 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v67, v68);
  uint64_t v241 = (_OWORD *)((char *)&v224 - v69);
  __chkstk_darwin(v70, v71);
  uint64_t v239 = (char *)&v224 - v72;
  __chkstk_darwin(v73, v74);
  id v76 = (uint64_t *)((char *)&v224 - v75);
  uint64_t v255 = type metadata accessor for UUID();
  uint64_t v77 = *(void *)(v255 - 8);
  __chkstk_darwin(v255, v78);
  uint64_t v269 = (uint64_t)&v224 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for BinaryDecodingOptions();
  __chkstk_darwin(v80 - 8, v81);
  uint64_t v82 = type metadata accessor for CRLProto_PersistableSelectionPath(0);
  __chkstk_darwin(v82, v83);
  uint64_t v85 = (char *)&v224 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v2[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_mostSpecificItemSelectionUUIDs] = _swiftEmptyArrayStorage;
  uint64_t v86 = &v2[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo];
  uint64_t v87 = type metadata accessor for CRLPersistableSelectionPath.UserInfo(0);
  uint64_t v88 = *(void *)(v87 - 8);
  char v254 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v88 + 56);
  uint64_t v252 = v88 + 56;
  v254(v86, 1, 1, v87);
  uint64_t v89 = (objc_class *)type metadata accessor for CRLPersistableSelectionPath(0);
  v268.receiver = v2;
  v268.super_class = v89;
  id v90 = [super init];
  uint64_t v267 = 0;
  long long v265 = 0u;
  long long v266 = 0u;
  uint64_t v91 = (char *)v90;
  unint64_t v92 = v261;
  uint64_t v93 = v262;
  sub_100510D4C(v262, v261);
  BinaryDecodingOptions.init()();
  sub_100650050(&qword_101677FE0, (void (*)(uint64_t))type metadata accessor for CRLProto_PersistableSelectionPath);
  v259 = v85;
  uint64_t v94 = v264;
  Message.init(serializedData:extensions:partial:options:)();
  uint64_t v260 = v94;
  if (v94)
  {
    sub_100510084(v93, v92);

    return v91;
  }
  uint64_t v95 = v255;
  uint64_t v225 = v82;
  uint64_t v226 = v87;
  uint64_t v96 = *(void *)v259;
  int64_t v97 = *(void *)(*(void *)v259 + 16);
  unint64_t v98 = _swiftEmptyArrayStorage;
  v227 = v91;
  if (v97)
  {
    *(void *)&long long v265 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1006BB544(0, v97, 0);
    unint64_t v99 = (*(unsigned __int8 *)(v257 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v257 + 80);
    uint64_t v224 = v96;
    uint64_t v100 = v96 + v99;
    uint64_t v101 = *(void *)(v257 + 72);
    uint64_t v263 = v77 + 32;
    uint64_t v264 = v101;
    uint64_t v102 = v260;
    uint64_t v103 = v95;
    while (1)
    {
      sub_1006501BC(v100, (uint64_t)v76, type metadata accessor for CRLProto_Data);
      uint64_t v104 = *v76;
      unint64_t v105 = v76[1];
      sub_100510D4C(*v76, v105);
      UUID.init(crl_data:)(v104, v105);
      if (v102) {
        break;
      }
      sub_100650098((uint64_t)v76, type metadata accessor for CRLProto_Data);
      unint64_t v98 = (double *)v265;
      uint64_t v102 = 0;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB544(0, *((void *)v98 + 2) + 1, 1);
        unint64_t v98 = (double *)v265;
      }
      unint64_t v107 = *((void *)v98 + 2);
      unint64_t v106 = *((void *)v98 + 3);
      if (v107 >= v106 >> 1)
      {
        sub_1006BB544(v106 > 1, v107 + 1, 1);
        unint64_t v98 = (double *)v265;
      }
      *((void *)v98 + 2) = v107 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v77 + 32))((unint64_t)v98+ ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80))+ *(void *)(v77 + 72) * v107, v269, v103);
      *(void *)&long long v265 = v98;
      v100 += v264;
      if (!--v97)
      {
        uint64_t v260 = 0;
        swift_bridgeObjectRelease();
        uint64_t v91 = v227;
        goto LABEL_13;
      }
    }
    sub_100650098((uint64_t)v76, type metadata accessor for CRLProto_Data);
    id v108 = v227;

    uint64_t v91 = v108;
    swift_release();
    sub_100510084(v262, v261);
    swift_bridgeObjectRelease();

    uint64_t v109 = (uint64_t)v259;
    goto LABEL_26;
  }
LABEL_13:
  uint64_t v110 = (uint64_t)v259;
  uint64_t v111 = v226;
  uint64_t v112 = v254;
  uint64_t v113 = (uint64_t)v253;
  uint64_t v114 = v225;
  uint64_t v115 = (double **)&v91[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_mostSpecificItemSelectionUUIDs];
  swift_beginAccess();
  *uint64_t v115 = v98;
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v110 + 8))
  {
    uint64_t v116 = (uint64_t)v249;
    swift_storeEnumTagMultiPayload();
    v112((char *)v116, 0, 1, v111);
    uint64_t v117 = &v227[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo];
    swift_beginAccess();
    sub_10064FFE8(v116, (uint64_t)v117);
    swift_endAccess();
  }
  uint64_t v118 = v110 + *(int *)(v114 + 28);
  sub_100522E9C(v118, v113, &qword_101677FD8);
  uint64_t v120 = v258 + 48;
  objc_super v119 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v258 + 48);
  long long v121 = v256;
  int v122 = v119(v113, 1, v256);
  sub_100522F00(v113, &qword_101677FD8);
  uint64_t v123 = v260;
  if (v122 == 1)
  {
    uint64_t v91 = v227;

    sub_100510084(v262, v261);
    uint64_t v109 = v110;
LABEL_26:
    sub_100650098(v109, type metadata accessor for CRLProto_PersistableSelectionPath);
    return v91;
  }
  uint64_t v124 = v250;
  sub_100522E9C(v118, v250, &qword_101677FD8);
  int v125 = v119(v124, 1, v121);
  uint64_t v258 = v120;
  uint64_t v269 = v118;
  if (v125 == 1)
  {
    id v126 = v248;
    *objc_super v248 = 0;
    *((unsigned char *)v126 + 8) = 1;
    UnknownStorage.init()();
    uint64_t v127 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v257 + 56);
    uint64_t v128 = v251;
    v127((char *)v126 + v121[6], 1, 1, v251);
    v127((char *)v126 + v121[7], 1, 1, v128);
    v127((char *)v126 + v121[8], 1, 1, v128);
    uint64_t v129 = v126;
    uint64_t v130 = (char *)v126 + v121[9];
    *(_DWORD *)uint64_t v130 = 0;
    v130[4] = 1;
    *((unsigned char *)v126 + v121[10]) = 2;
    uint64_t v131 = (char *)v126 + v121[11];
    *(_DWORD *)uint64_t v131 = 0;
    v131[4] = 1;
    sub_100522F00(v124, &qword_101677FD8);
  }
  else
  {
    uint64_t v129 = v248;
    sub_1006500F8(v124, (uint64_t)v248, type metadata accessor for CRLProto_TextSelection);
    uint64_t v128 = v251;
  }
  uint64_t v132 = v119;
  uint64_t v133 = v110;
  uint64_t v134 = *v129;
  int v135 = *((unsigned __int8 *)v129 + 8);
  sub_100650098((uint64_t)v129, type metadata accessor for CRLProto_TextSelection);
  if (v135 != 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(from:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPersistableSelectionPath.swift", 94, 2, 127, (uint64_t)"Unrecognized type of text selection", 35, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(from:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPersistableSelectionPath.swift", 94, 2, 127);
    uint64_t v91 = v227;

    sub_100510084(v262, v261);
LABEL_25:
    uint64_t v109 = v133;
    goto LABEL_26;
  }
  if (v134)
  {
    uint64_t v136 = v244;
    sub_100522E9C(v269, v244, &qword_101677FD8);
    id v137 = v256;
    int v138 = v132(v136, 1, v256);
    uint64_t v139 = v257;
    id v140 = v242;
    if (v138 == 1)
    {
      *uint64_t v242 = 0;
      *((unsigned char *)v140 + 8) = 1;
      UnknownStorage.init()();
      uint64_t v141 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v257 + 56);
      v141((char *)v140 + v137[6], 1, 1, v128);
      v141((char *)v140 + v137[7], 1, 1, v128);
      v141((char *)v140 + v137[8], 1, 1, v128);
      uint64_t v139 = v257;
      uint64_t v142 = (char *)v140 + v137[9];
      *(_DWORD *)uint64_t v142 = 0;
      v142[4] = 1;
      *((unsigned char *)v140 + v137[10]) = 2;
      uint64_t v143 = (char *)v140 + v137[11];
      *(_DWORD *)uint64_t v143 = 0;
      v143[4] = 1;
      sub_100522F00(v136, &qword_101677FD8);
    }
    else
    {
      sub_1006500F8(v136, (uint64_t)v242, type metadata accessor for CRLProto_TextSelection);
    }
    uint64_t v153 = v243;
    sub_100522E9C((uint64_t)v140 + v137[7], v243, (uint64_t *)&unk_101674160);
    uint64_t v154 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v139 + 48);
    if (v154(v153, 1, v128) == 1)
    {
      id v155 = v241;
      *uint64_t v241 = xmmword_101180360;
      uint64_t v156 = v155;
      UnknownStorage.init()();
      sub_100522F00(v153, (uint64_t *)&unk_101674160);
    }
    else
    {
      uint64_t v156 = v241;
      sub_1006500F8(v153, (uint64_t)v241, type metadata accessor for CRLProto_Data);
    }
    uint64_t v157 = sub_1005057FC(&qword_101675C18);
    sub_100650098((uint64_t)v140, type metadata accessor for CRLProto_TextSelection);
    sub_100510D4C(*(void *)v156, *((void *)v156 + 1));
    sub_100650098((uint64_t)v156, type metadata accessor for CRLProto_Data);
    sub_100650160();
    CRValue.init(serializedData:)();
    uint64_t v260 = v123;
    if (v123)
    {
      uint64_t v91 = v227;

      sub_100510084(v262, v261);
      sub_100650098((uint64_t)v259, type metadata accessor for CRLProto_PersistableSelectionPath);
    }
    else
    {
      uint64_t v158 = v237;
      sub_100522E9C(v269, v237, &qword_101677FD8);
      char v159 = v256;
      if (v132(v158, 1, v256) == 1)
      {
        char v160 = v235;
        *unint64_t v235 = 0;
        *((unsigned char *)v160 + 8) = 1;
        UnknownStorage.init()();
        uint64_t v161 = (char *)v160 + v159[6];
        uint64_t v162 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v257 + 56);
        uint64_t v163 = v251;
        v162(v161, 1, 1, v251);
        v162((char *)v160 + v256[7], 1, 1, v163);
        v162((char *)v160 + v256[8], 1, 1, v163);
        char v159 = v256;
        uint64_t v164 = (char *)v160 + v256[9];
        *(_DWORD *)uint64_t v164 = 0;
        v164[4] = 1;
        *((unsigned char *)v160 + v159[10]) = 2;
        v165 = (char *)v160 + v159[11];
        *(_DWORD *)v165 = 0;
        v165[4] = 1;
        sub_100522F00(v237, &qword_101677FD8);
      }
      else
      {
        char v160 = v235;
        sub_1006500F8(v158, (uint64_t)v235, type metadata accessor for CRLProto_TextSelection);
        uint64_t v163 = v251;
      }
      uint64_t v176 = v236;
      sub_100522E9C((uint64_t)v160 + v159[8], v236, (uint64_t *)&unk_101674160);
      if (v154(v176, 1, v163) == 1)
      {
        unsigned __int8 v177 = v234;
        *id v234 = xmmword_101180360;
        UnknownStorage.init()();
        sub_100522F00(v176, (uint64_t *)&unk_101674160);
      }
      else
      {
        unsigned __int8 v177 = v234;
        sub_1006500F8(v176, (uint64_t)v234, type metadata accessor for CRLProto_Data);
      }
      unint64_t v178 = v261;
      uint64_t v179 = v262;
      uint64_t v180 = (uint64_t)v247;
      sub_1005057FC(&qword_101676C70);
      sub_100650098((uint64_t)v160, type metadata accessor for CRLProto_TextSelection);
      sub_100510D4C(*(void *)v177, *((void *)v177 + 1));
      sub_100650098((uint64_t)v177, type metadata accessor for CRLProto_Data);
      uint64_t v181 = v260;
      CRValue.init(serializedData:)();
      id v182 = v227;

      sub_100510084(v179, v178);
      if (v181)
      {

        sub_100650098((uint64_t)v259, type metadata accessor for CRLProto_PersistableSelectionPath);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v157 - 8) + 8))(v180, v157);
      }
      else
      {
        sub_100650098((uint64_t)v259, type metadata accessor for CRLProto_PersistableSelectionPath);
        uint64_t v183 = v226;
        swift_storeEnumTagMultiPayload();
        v254((char *)v180, 0, 1, v183);
        uint64_t v184 = (uint64_t)v182 + OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo;
        swift_beginAccess();
        sub_10064FFE8(v180, v184);
        swift_endAccess();
      }
      return (char *)v182;
    }
    return v91;
  }
  uint64_t v145 = v238;
  sub_100522E9C(v269, v238, &qword_101677FD8);
  id v146 = v256;
  int v147 = v132(v145, 1, v256);
  uint64_t v148 = v257;
  unint64_t v149 = v245;
  if (v147 == 1)
  {
    void *v245 = 0;
    *((unsigned char *)v149 + 8) = 1;
    UnknownStorage.init()();
    uint64_t v150 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v257 + 56);
    v150((char *)v149 + v146[6], 1, 1, v128);
    v150((char *)v149 + v146[7], 1, 1, v128);
    v150((char *)v149 + v146[8], 1, 1, v128);
    uint64_t v148 = v257;
    unint64_t v151 = (char *)v149 + v146[9];
    *(_DWORD *)unint64_t v151 = 0;
    v151[4] = 1;
    *((unsigned char *)v149 + v146[10]) = 2;
    uint64_t v152 = (char *)v149 + v146[11];
    *(_DWORD *)uint64_t v152 = 0;
    v152[4] = 1;
    sub_100522F00(v145, &qword_101677FD8);
  }
  else
  {
    sub_1006500F8(v145, (uint64_t)v245, type metadata accessor for CRLProto_TextSelection);
  }
  uint64_t v166 = (uint64_t)v239;
  uint64_t v167 = (uint64_t)v149 + v146[6];
  uint64_t v168 = v240;
  sub_100522E9C(v167, v240, (uint64_t *)&unk_101674160);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v148 + 48))(v168, 1, v128) == 1)
  {
    *(_OWORD *)uint64_t v166 = xmmword_101180360;
    UnknownStorage.init()();
    sub_100522F00(v168, (uint64_t *)&unk_101674160);
  }
  else
  {
    sub_1006500F8(v168, v166, type metadata accessor for CRLProto_Data);
  }
  uint64_t v169 = v226;
  sub_1005057FC(&qword_101675C18);
  sub_100650098((uint64_t)v245, type metadata accessor for CRLProto_TextSelection);
  sub_100510D4C(*(void *)v166, *(void *)(v166 + 8));
  sub_100650098(v166, type metadata accessor for CRLProto_Data);
  sub_100650160();
  CRValue.init(serializedData:)();
  if (v123)
  {
    uint64_t v91 = v227;

    sub_100510084(v262, v261);
    goto LABEL_25;
  }
  uint64_t v170 = v231;
  sub_100522E9C(v269, v231, &qword_101677FD8);
  v171 = v256;
  if (v132(v170, 1, v256) == 1)
  {
    uint64_t v172 = v228;
    *id v228 = 0;
    *((unsigned char *)v172 + 8) = 1;
    UnknownStorage.init()();
    id v173 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v257 + 56);
    v173((char *)v172 + v171[6], 1, 1, v128);
    v173((char *)v172 + v171[7], 1, 1, v128);
    v173((char *)v172 + v171[8], 1, 1, v128);
    objc_super v174 = (char *)v172 + v171[9];
    *(_DWORD *)objc_super v174 = 0;
    v174[4] = 1;
    *((unsigned char *)v172 + v171[10]) = 2;
    uint64_t v175 = (char *)v172 + v171[11];
    *(_DWORD *)uint64_t v175 = 0;
    v175[4] = 1;
    sub_100522F00(v231, &qword_101677FD8);
  }
  else
  {
    uint64_t v185 = v170;
    uint64_t v172 = v228;
    sub_1006500F8(v185, (uint64_t)v228, type metadata accessor for CRLProto_TextSelection);
  }
  id v186 = (unsigned int *)((char *)v172 + v171[9]);
  uint64_t v187 = *v186;
  int v188 = *((unsigned __int8 *)v186 + 4);
  uint64_t v189 = sub_1005057FC(&qword_101676C78);
  uint64_t v190 = (uint64_t)v172;
  uint64_t v191 = v189;
  uint64_t v192 = *(int *)(v189 + 48);
  sub_100650098(v190, type metadata accessor for CRLProto_TextSelection);
  if (v188) {
    uint64_t v193 = 0;
  }
  else {
    uint64_t v193 = v187;
  }
  *(void *)&v246[v192] = v193;
  uint64_t v194 = v256;
  uint64_t v195 = v232;
  sub_100522E9C(v269, v232, &qword_101677FD8);
  if (v132(v195, 1, v194) == 1)
  {
    id v196 = v229;
    *BOOL v229 = 0;
    *((unsigned char *)v196 + 8) = 1;
    UnknownStorage.init()();
    id v197 = (char *)v196 + v194[6];
    id v198 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v257 + 56);
    v198(v197, 1, 1, v128);
    v198((char *)v196 + v256[7], 1, 1, v128);
    v198((char *)v196 + v256[8], 1, 1, v128);
    uint64_t v194 = v256;
    NSString v199 = (char *)v196 + v256[9];
    *(_DWORD *)NSString v199 = 0;
    v199[4] = 1;
    *((unsigned char *)v196 + v194[10]) = 2;
    NSString v200 = (char *)v196 + v194[11];
    *(_DWORD *)NSString v200 = 0;
    v200[4] = 1;
    sub_100522F00(v232, &qword_101677FD8);
  }
  else
  {
    uint64_t v201 = v195;
    id v196 = v229;
    sub_1006500F8(v201, (uint64_t)v229, type metadata accessor for CRLProto_TextSelection);
  }
  uint64_t v202 = (uint64_t)v196;
  char v203 = *((unsigned char *)v196 + v194[10]) & 1;
  uint64_t v204 = *(int *)(v191 + 64);
  sub_100650098(v202, type metadata accessor for CRLProto_TextSelection);
  v246[v204] = v203;
  uint64_t v205 = v233;
  sub_100522E9C(v269, v233, &qword_101677FD8);
  if (v132(v205, 1, v194) == 1)
  {
    uint64_t v206 = v230;
    *int v230 = 0;
    *((unsigned char *)v206 + 8) = 1;
    UnknownStorage.init()();
    v207 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v257 + 56);
    v207((char *)v206 + v194[6], 1, 1, v128);
    v207((char *)v206 + v194[7], 1, 1, v128);
    uint64_t v208 = v128;
    id v209 = v206;
    v207((char *)v206 + v194[8], 1, 1, v208);
    v210 = (char *)v206 + v194[9];
    *(_DWORD *)v210 = 0;
    v210[4] = 1;
    *((unsigned char *)v206 + v194[10]) = 2;
    id v211 = (char *)v206 + v194[11];
    *(_DWORD *)id v211 = 0;
    v211[4] = 1;
    sub_100522F00(v233, &qword_101677FD8);
  }
  else
  {
    id v209 = v230;
    sub_1006500F8(v205, (uint64_t)v230, type metadata accessor for CRLProto_TextSelection);
  }
  v212 = v227;
  v213 = v254;
  unint64_t v214 = v261;

  sub_100510084(v262, v214);
  uint64_t v215 = (unsigned int *)((char *)v209 + v194[11]);
  uint64_t v216 = *v215;
  v217 = v212;
  LODWORD(v212) = *((unsigned __int8 *)v215 + 4);
  uint64_t v218 = *(int *)(v191 + 80);
  sub_100650098((uint64_t)v209, type metadata accessor for CRLProto_TextSelection);
  BOOL v219 = v212 == 0;
  Class v220 = v217;
  if (!v219) {
    uint64_t v216 = 0;
  }
  sub_100650098(v133, type metadata accessor for CRLProto_PersistableSelectionPath);
  uint64_t v221 = (uint64_t)v246;
  *(void *)&v246[v218] = v216;
  swift_storeEnumTagMultiPayload();
  v213((char *)v221, 0, 1, v169);
  uint64_t v222 = (uint64_t)&v220[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo];
  swift_beginAccess();
  uint64_t v223 = v222;
  uint64_t v91 = v220;
  sub_10064FFE8(v221, v223);
  swift_endAccess();
  return v91;
}

uint64_t sub_10064CB84(uint64_t a1)
{
  uint64_t v300 = a1;
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v272 = (uint64_t)&v270 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  uint64_t v279 = (uint64_t)&v270 - v6;
  __chkstk_darwin(v7, v8);
  uint64_t v278 = (uint64_t)&v270 - v9;
  uint64_t v299 = type metadata accessor for CRCodableVersion();
  uint64_t v301 = *(void *)(v299 - 8);
  __chkstk_darwin(v299, v10);
  v281 = (char *)&v270 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  v291 = (char *)&v270 - v14;
  __chkstk_darwin(v15, v16);
  v294 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&v270 - v17);
  uint64_t v18 = sub_1005057FC(&qword_101677FD8);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v271 = (uint64_t)&v270 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  uint64_t v277 = (uint64_t)&v270 - v23;
  __chkstk_darwin(v24, v25);
  uint64_t v290 = (uint64_t)&v270 - v26;
  __chkstk_darwin(v27, v28);
  uint64_t v285 = (uint64_t)&v270 - v29;
  __chkstk_darwin(v30, v31);
  uint64_t v283 = (uint64_t)&v270 - v32;
  __chkstk_darwin(v33, v34);
  v280 = (char *)&v270 - v35;
  __chkstk_darwin(v36, v37);
  uint64_t v276 = (uint64_t)&v270 - v38;
  __chkstk_darwin(v39, v40);
  uint64_t v289 = (uint64_t)&v270 - v41;
  uint64_t v42 = type metadata accessor for CRLProto_TextSelection(0);
  uint64_t v43 = *(void *)(v42 - 8);
  __chkstk_darwin(v42, v44);
  v273 = (char **)((char *)&v270 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v46, v47);
  v287 = (char **)((char *)&v270 - v48);
  __chkstk_darwin(v49, v50);
  v293 = (char **)((char *)&v270 - v51);
  __chkstk_darwin(v52, v53);
  v284 = (char *)&v270 - v54;
  __chkstk_darwin(v55, v56);
  v282 = (char **)((char *)&v270 - v57);
  __chkstk_darwin(v58, v59);
  v288 = (char **)((char *)&v270 - v60);
  __chkstk_darwin(v61, v62);
  v286 = (char **)((char *)&v270 - v63);
  __chkstk_darwin(v64, v65);
  v292 = (char **)((char *)&v270 - v66);
  uint64_t v307 = sub_1005057FC(&qword_101675C18);
  uint64_t v304 = *(void *)(v307 - 8);
  __chkstk_darwin(v307, v67);
  v297 = (char *)&v270 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v69, v70);
  v295 = (char *)&v270 - v71;
  __chkstk_darwin(v72, v73);
  v298 = (char *)&v270 - v74;
  uint64_t v75 = type metadata accessor for UUID();
  unint64_t v317 = *(void *)(v75 - 8);
  v318 = (uint64_t (*)(void, void, void))v75;
  __chkstk_darwin(v75, v76);
  uint64_t v78 = (char *)&v270 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for CRLProto_Data(0);
  uint64_t v80 = *(void *)(v79 - 8);
  __chkstk_darwin(v79, v81);
  v270 = (char *)&v270 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v83, v84);
  v275 = (char *)&v270 - v85;
  __chkstk_darwin(v86, v87);
  v274 = (char *)&v270 - v88;
  __chkstk_darwin(v89, v90);
  unint64_t v92 = (char **)((char *)&v270 - v91);
  uint64_t v93 = sub_1005057FC(&qword_101676C68);
  __chkstk_darwin(v93 - 8, v94);
  uint64_t v302 = (uint64_t)&v270 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v96, v97);
  v313 = (char *)&v270 - v98;
  __chkstk_darwin(v99, v100);
  v310 = (char **)((char *)&v270 - v101);
  uint64_t v102 = type metadata accessor for CRLProto_PersistableSelectionPath(0);
  __chkstk_darwin(v102, v103);
  unint64_t v105 = (char *)&v270 - ((v104 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v106 = _swiftEmptyArrayStorage;
  *(void *)unint64_t v105 = _swiftEmptyArrayStorage;
  v105[8] = 0;
  UnknownStorage.init()();
  uint64_t v306 = v102;
  uint64_t v107 = *(int *)(v102 + 28);
  uint64_t v311 = v43;
  v312 = v105;
  id v108 = *(void (**)(void))(v43 + 56);
  v308 = &v105[v107];
  v309 = (int *)v42;
  uint64_t v303 = v43 + 56;
  v305 = v108;
  v108();
  uint64_t v109 = (unint64_t *)(v315
                            + OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_mostSpecificItemSelectionUUIDs);
  swift_beginAccess();
  unint64_t v110 = *v109;
  int64_t v111 = *(void *)(*v109 + 16);
  uint64_t v319 = v79;
  uint64_t v320 = v80;
  if (v111)
  {
    v321 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1006BB8C4(0, v111, 0);
    unint64_t v112 = v317 + 16;
    unint64_t v317 = *(void *)(v317 + 16);
    unint64_t v113 = (*(unsigned __int8 *)(v112 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v112 + 64);
    unint64_t v296 = v110;
    unint64_t v114 = v110 + v113;
    unint64_t v316 = *(void *)(v112 + 56);
    uint64_t v115 = (void (**)(char *, void))(v112 - 8);
    unint64_t v116 = v112;
    do
    {
      uint64_t v117 = v318;
      unint64_t v118 = v116;
      ((void (*)(char *, unint64_t, uint64_t (*)(void, void, void)))v317)(v78, v114, v318);
      UnknownStorage.init()();
      uint64_t v322 = UUID.uuid.getter();
      char v323 = v119;
      char v324 = v120;
      char v325 = v121;
      char v326 = v122;
      char v327 = v123;
      char v328 = v124;
      char v329 = v125;
      char v330 = v126;
      UUID.uuid.getter();
      type metadata accessor for __DataStorage();
      swift_allocObject();
      uint64_t v127 = __DataStorage.init(bytes:length:)();
      *unint64_t v92 = 0x1000000000;
      v92[1] = v127 | 0x4000000000000000;
      (*v115)(v78, v117);
      unint64_t v106 = v321;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB8C4(0, *((void *)v106 + 2) + 1, 1);
        unint64_t v106 = v321;
      }
      unint64_t v129 = *((void *)v106 + 2);
      unint64_t v128 = *((void *)v106 + 3);
      if (v129 >= v128 >> 1)
      {
        sub_1006BB8C4(v128 > 1, v129 + 1, 1);
        unint64_t v106 = v321;
      }
      *((void *)v106 + 2) = v129 + 1;
      uint64_t v80 = v320;
      sub_1006500F8((uint64_t)v92, (uint64_t)v106+ ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))+ *(void *)(v320 + 72) * v129, type metadata accessor for CRLProto_Data);
      v114 += v316;
      --v111;
      uint64_t v79 = v319;
      unint64_t v116 = v118;
    }
    while (v111);
    swift_bridgeObjectRelease();
  }
  uint64_t v130 = (uint64_t)v312;
  swift_bridgeObjectRelease();
  *(void *)uint64_t v130 = v106;
  uint64_t v131 = v315 + OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo;
  swift_beginAccess();
  uint64_t v132 = (void (*)(void, void, void))v310;
  sub_100522E9C(v131, (uint64_t)v310, &qword_101676C68);
  uint64_t v133 = (void (*)(char *, uint64_t))type metadata accessor for CRLPersistableSelectionPath.UserInfo(0);
  uint64_t v134 = *(uint64_t (**)(uint64_t, uint64_t, void (*)(char *, uint64_t)))(*((void *)v133 - 1) + 48);
  int v135 = v134((uint64_t)v132, 1, v133);
  uint64_t v136 = (uint64_t)v313;
  if (v135 == 1)
  {
    sub_100522F00((uint64_t)v132, &qword_101676C68);
    char v137 = 0;
  }
  else
  {
    BOOL v138 = swift_getEnumCaseMultiPayload() == 2;
    uint64_t v139 = (uint64_t)v132;
    char v137 = v138;
    sub_100650098(v139, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
  }
  *(unsigned char *)(v130 + 8) = v137;
  sub_100522E9C(v131, v136, &qword_101676C68);
  if (v134(v136, 1, v133) == 1) {
    goto LABEL_57;
  }
  uint64_t v140 = v302;
  sub_100522E9C(v136, v302, &qword_101676C68);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v155 = v140 + *(int *)(sub_1005057FC(&qword_101676C70) + 48);
    uint64_t v156 = *(void (**)(char *, uint64_t, uint64_t))(v304 + 32);
    uint64_t v157 = v295;
    uint64_t v158 = v307;
    v156(v295, v140, v307);
    v156(v297, v155, v158);
    uint64_t v159 = v290;
    sub_100522E9C((uint64_t)v308, v290, &qword_101677FD8);
    char v160 = *(unsigned int (**)(void, void, void))(v311 + 48);
    uint64_t v161 = v309;
    v311 += 48;
    v318 = (uint64_t (*)(void, void, void))v160;
    if (v160(v159, 1, v309) == 1)
    {
      uint64_t v162 = v293;
      void *v293 = 0;
      *((unsigned char *)v162 + 8) = 1;
      UnknownStorage.init()();
      uint64_t v163 = (char *)v162 + v161[6];
      uint64_t v164 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56);
      v164(v163, 1, 1, v79);
      v164((char *)v162 + v309[7], 1, 1, v79);
      v164((char *)v162 + v309[8], 1, 1, v79);
      uint64_t v161 = v309;
      v165 = (char *)v162 + v309[9];
      *(_DWORD *)v165 = 0;
      v165[4] = 1;
      *((unsigned char *)v162 + v161[10]) = 2;
      uint64_t v166 = (char *)v162 + v161[11];
      *(_DWORD *)uint64_t v166 = 0;
      v166[4] = 1;
      sub_100522F00(v159, &qword_101677FD8);
    }
    else
    {
      uint64_t v162 = v293;
      sub_1006500F8(v159, (uint64_t)v293, type metadata accessor for CRLProto_TextSelection);
    }
    *uint64_t v162 = 1;
    *((unsigned char *)v162 + 8) = 1;
    uint64_t v177 = (uint64_t)v308;
    sub_100522F00((uint64_t)v308, &qword_101677FD8);
    sub_1006500F8((uint64_t)v162, v177, type metadata accessor for CRLProto_TextSelection);
    ((void (*)(uint64_t, void, uint64_t, int *))v305)(v177, 0, 1, v161);
    uint64_t v178 = v301;
    uint64_t v180 = v301 + 104;
    uint64_t v179 = *(char ***)(v301 + 104);
    uint64_t v181 = v291;
    LODWORD(v315) = enum case for CRCodableVersion.version3(_:);
    uint64_t v182 = v299;
    v310 = v179;
    ((void (*)(char *))v179)(v291);
    unint64_t v183 = sub_100650160();
    uint64_t v184 = v314;
    uint64_t v185 = CRValue.serializedData(_:version:)();
    unint64_t v316 = v186;
    unint64_t v317 = v185;
    if (v184)
    {
      (*(void (**)(char *, uint64_t))(v178 + 8))(v181, v182);
      uint64_t v133 = *(void (**)(char *, uint64_t))(v304 + 8);
      v133(v297, v158);
      v133(v157, v158);
    }
    else
    {
      unint64_t v296 = v183;
      uint64_t v302 = v180;
      uint64_t v195 = *(char **)(v178 + 8);
      uint64_t v301 = v178 + 8;
      v298 = v195;
      ((void (*)(char *, uint64_t))v195)(v181, v182);
      uint64_t v196 = v277;
      sub_100522E9C(v177, v277, &qword_101677FD8);
      id v197 = v309;
      int v198 = v318(v196, 1, v309);
      uint64_t v314 = 0;
      NSString v199 = v287;
      if (v198 == 1)
      {
        void *v287 = 0;
        *((unsigned char *)v199 + 8) = 1;
        UnknownStorage.init()();
        uint64_t v201 = v319;
        uint64_t v200 = v320;
        uint64_t v202 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v320 + 56);
        v202((char *)v199 + v197[6], 1, 1, v319);
        v202((char *)v199 + v197[7], 1, 1, v201);
        v202((char *)v199 + v197[8], 1, 1, v201);
        char v203 = (char *)v199 + v197[9];
        *(_DWORD *)char v203 = 0;
        v203[4] = 1;
        *((unsigned char *)v199 + v197[10]) = 2;
        uint64_t v204 = (char *)v199 + v197[11];
        *(_DWORD *)uint64_t v204 = 0;
        v204[4] = 1;
        sub_100522F00(v196, &qword_101677FD8);
      }
      else
      {
        sub_1006500F8(v196, (uint64_t)v287, type metadata accessor for CRLProto_TextSelection);
        uint64_t v201 = v319;
        uint64_t v200 = v320;
      }
      uint64_t v221 = v297;
      uint64_t v222 = v279;
      uint64_t v223 = (uint64_t)v275;
      uint64_t v224 = (uint64_t)v199 + v197[7];
      sub_100522E9C(v224, v279, (uint64_t *)&unk_101674160);
      v294 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v200 + 48);
      v293 = (void *)(v200 + 48);
      int v225 = v294(v222, 1, v201);
      uint64_t v226 = v197;
      uint64_t v227 = v299;
      if (v225 == 1)
      {
        *(_OWORD *)uint64_t v223 = xmmword_101180360;
        UnknownStorage.init()();
        sub_100522F00(v222, (uint64_t *)&unk_101674160);
      }
      else
      {
        sub_1006500F8(v222, v223, type metadata accessor for CRLProto_Data);
      }
      sub_100510084(*(void *)v223, *(void *)(v223 + 8));
      unint64_t v228 = v316;
      *(void *)uint64_t v223 = v317;
      *(void *)(v223 + 8) = v228;
      sub_100522F00(v224, (uint64_t *)&unk_101674160);
      sub_1006500F8(v223, v224, type metadata accessor for CRLProto_Data);
      uint64_t v230 = v320 + 56;
      BOOL v229 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v320 + 56);
      v229(v224, 0, 1, v201);
      uint64_t v231 = (uint64_t)v308;
      sub_100522F00((uint64_t)v308, &qword_101677FD8);
      sub_1006500F8((uint64_t)v287, v231, type metadata accessor for CRLProto_TextSelection);
      ((void (*)(uint64_t, void, uint64_t, int *))v305)(v231, 0, 1, v226);
      uint64_t v232 = v281;
      ((void (*)(char *, void, uint64_t))v310)(v281, v315, v227);
      uint64_t v233 = v307;
      uint64_t v234 = v314;
      uint64_t v235 = CRValue.serializedData(_:version:)();
      uint64_t v237 = v234;
      if (!v234)
      {
        uint64_t v315 = v236;
        unint64_t v316 = v235;
        unint64_t v317 = (unint64_t)v229;
        uint64_t v320 = v230;
        ((void (*)(char *, uint64_t))v298)(v232, v227);
        uint64_t v254 = v271;
        sub_100522E9C(v231, v271, &qword_101677FD8);
        uint64_t v255 = v226;
        int v256 = v318(v254, 1, v226);
        uint64_t v130 = (uint64_t)v312;
        if (v256 == 1)
        {
          uint64_t v257 = v254;
          uint64_t v258 = v273;
          void *v273 = 0;
          *((unsigned char *)v258 + 8) = 1;
          UnknownStorage.init()();
          uint64_t v259 = v319;
          uint64_t v260 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v317;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v317)((char *)v258 + v255[6], 1, 1, v319);
          v260((char *)v258 + v255[7], 1, 1, v259);
          v260((char *)v258 + v255[8], 1, 1, v259);
          unint64_t v261 = (char *)v258 + v255[9];
          *(_DWORD *)unint64_t v261 = 0;
          v261[4] = 1;
          *((unsigned char *)v258 + v255[10]) = 2;
          uint64_t v262 = (char *)v258 + v255[11];
          *(_DWORD *)uint64_t v262 = 0;
          v262[4] = 1;
          sub_100522F00(v257, &qword_101677FD8);
        }
        else
        {
          uint64_t v263 = v254;
          uint64_t v258 = v273;
          sub_1006500F8(v263, (uint64_t)v273, type metadata accessor for CRLProto_TextSelection);
          uint64_t v259 = v319;
        }
        uint64_t v264 = (uint64_t)v270;
        uint64_t v265 = (uint64_t)v258 + v255[8];
        uint64_t v266 = v272;
        sub_100522E9C(v265, v272, (uint64_t *)&unk_101674160);
        if (v294(v266, 1, v259) == 1)
        {
          *(_OWORD *)uint64_t v264 = xmmword_101180360;
          UnknownStorage.init()();
          sub_100522F00(v266, (uint64_t *)&unk_101674160);
        }
        else
        {
          sub_1006500F8(v266, v264, type metadata accessor for CRLProto_Data);
        }
        uint64_t v136 = (uint64_t)v313;
        sub_100510084(*(void *)v264, *(void *)(v264 + 8));
        uint64_t v267 = v315;
        *(void *)uint64_t v264 = v316;
        *(void *)(v264 + 8) = v267;
        sub_100522F00(v265, (uint64_t *)&unk_101674160);
        sub_1006500F8(v264, v265, type metadata accessor for CRLProto_Data);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v317)(v265, 0, 1, v259);
        uint64_t v268 = (uint64_t)v308;
        sub_100522F00((uint64_t)v308, &qword_101677FD8);
        sub_1006500F8((uint64_t)v273, v268, type metadata accessor for CRLProto_TextSelection);
        ((void (*)(uint64_t, void, uint64_t, int *))v305)(v268, 0, 1, v255);
        uint64_t v133 = *(void (**)(char *, uint64_t))(v304 + 8);
        uint64_t v269 = v307;
        v133(v297, v307);
        v133(v295, v269);
LABEL_58:
        sub_100522F00(v136, &qword_101676C68);
        sub_100650050(&qword_101677FE0, (void (*)(uint64_t))type metadata accessor for CRLProto_PersistableSelectionPath);
        uint64_t v252 = Message.serializedData(partial:)();
        if (!v237)
        {
          uint64_t v133 = (void (*)(char *, uint64_t))v252;
          sub_100650098(v130, type metadata accessor for CRLProto_PersistableSelectionPath);
          return (uint64_t)v133;
        }
LABEL_59:
        sub_100650098(v130, type metadata accessor for CRLProto_PersistableSelectionPath);
        return (uint64_t)v133;
      }
      ((void (*)(char *, uint64_t))v298)(v232, v227);
      uint64_t v133 = *(void (**)(char *, uint64_t))(v304 + 8);
      v133(v221, v233);
      v133(v295, v233);
    }
    uint64_t v130 = (uint64_t)v312;
    uint64_t v136 = (uint64_t)v313;
    goto LABEL_47;
  }
  uint64_t v133 = (void (*)(char *, uint64_t))v307;
  if (EnumCaseMultiPayload)
  {
    sub_100650098(v140, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
LABEL_57:
    uint64_t v237 = v314;
    goto LABEL_58;
  }
  uint64_t v142 = (int *)sub_1005057FC(&qword_101676C78);
  unint64_t v143 = *(void *)(v140 + v142[12]);
  LODWORD(v315) = *(unsigned __int8 *)(v140 + v142[16]);
  unint64_t v144 = *(void *)(v140 + v142[20]);
  unint64_t v316 = v143;
  unint64_t v317 = v144;
  (*(void (**)(char *, uint64_t, void (*)(char *, uint64_t)))(v304 + 32))(v298, v140, v133);
  uint64_t v145 = (uint64_t)v308;
  uint64_t v146 = v289;
  sub_100522E9C((uint64_t)v308, v289, &qword_101677FD8);
  int v147 = *(unsigned int (**)(void, void, void))(v311 + 48);
  uint64_t v148 = v309;
  v311 += 48;
  v318 = (uint64_t (*)(void, void, void))v147;
  if (v147(v146, 1, v309) == 1)
  {
    unint64_t v149 = v292;
    void *v292 = 0;
    *((unsigned char *)v149 + 8) = 1;
    UnknownStorage.init()();
    uint64_t v150 = (char *)v149 + v148[6];
    uint64_t v151 = v319;
    uint64_t v152 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v320 + 56);
    v152(v150, 1, 1, v319);
    v152((char *)v149 + v309[7], 1, 1, v151);
    v152((char *)v149 + v309[8], 1, 1, v151);
    uint64_t v148 = v309;
    uint64_t v153 = (char *)v149 + v309[9];
    *(_DWORD *)uint64_t v153 = 0;
    v153[4] = 1;
    *((unsigned char *)v149 + v148[10]) = 2;
    uint64_t v154 = (char *)v149 + v148[11];
    *(_DWORD *)uint64_t v154 = 0;
    v154[4] = 1;
    sub_100522F00(v146, &qword_101677FD8);
  }
  else
  {
    unint64_t v149 = v292;
    sub_1006500F8(v146, (uint64_t)v292, type metadata accessor for CRLProto_TextSelection);
  }
  uint64_t v167 = v305;
  uint64_t v168 = v301;
  uint64_t v169 = (char *)v294;
  *unint64_t v149 = 0;
  *((unsigned char *)v149 + 8) = 1;
  sub_100522F00(v145, &qword_101677FD8);
  sub_1006500F8((uint64_t)v149, v145, type metadata accessor for CRLProto_TextSelection);
  ((void (*)(uint64_t, void, uint64_t, int *))v167)(v145, 0, 1, v148);
  uint64_t v170 = v169;
  uint64_t v133 = (void (*)(char *, uint64_t))v169;
  uint64_t v171 = v299;
  (*(void (**)(char *, void, uint64_t))(v168 + 104))(v170, enum case for CRCodableVersion.version3(_:), v299);
  sub_100650160();
  uint64_t v172 = v307;
  id v173 = v298;
  uint64_t v174 = v314;
  uint64_t v175 = (char **)CRValue.serializedData(_:version:)();
  uint64_t v314 = v174;
  if (v174)
  {
    (*(void (**)(void *, uint64_t))(v168 + 8))(v133, v171);
    (*(void (**)(char *, uint64_t))(v304 + 8))(v173, v172);
LABEL_47:
    sub_100522F00(v136, &qword_101676C68);
    goto LABEL_59;
  }
  uint64_t v302 = v176;
  v310 = v175;
  (*(void (**)(void *, uint64_t))(v168 + 8))(v133, v171);
  uint64_t v187 = v276;
  sub_100522E9C(v145, v276, &qword_101677FD8);
  if (v318(v187, 1, v148) == 1)
  {
    int v188 = v286;
    void *v286 = 0;
    *((unsigned char *)v188 + 8) = 1;
    UnknownStorage.init()();
    uint64_t v189 = v319;
    uint64_t v190 = v320;
    uint64_t v191 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v320 + 56);
    v191((char *)v188 + v148[6], 1, 1, v319);
    v191((char *)v188 + v148[7], 1, 1, v189);
    v191((char *)v188 + v148[8], 1, 1, v189);
    uint64_t v192 = v188;
    uint64_t v130 = (uint64_t)v312;
    uint64_t v193 = (char *)v188 + v148[9];
    *(_DWORD *)uint64_t v193 = 0;
    v193[4] = 1;
    *((unsigned char *)v188 + v148[10]) = 2;
    uint64_t v194 = (char *)v188 + v148[11];
    *(_DWORD *)uint64_t v194 = 0;
    v194[4] = 1;
    sub_100522F00(v187, &qword_101677FD8);
  }
  else
  {
    uint64_t v192 = v286;
    sub_1006500F8(v187, (uint64_t)v286, type metadata accessor for CRLProto_TextSelection);
    uint64_t v189 = v319;
    uint64_t v190 = v320;
  }
  uint64_t v205 = (uint64_t)v284;
  uint64_t v206 = v278;
  uint64_t v207 = (uint64_t)v274;
  uint64_t v208 = (uint64_t)v192 + v148[6];
  sub_100522E9C(v208, v278, (uint64_t *)&unk_101674160);
  int v209 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v190 + 48))(v206, 1, v189);
  uint64_t v136 = (uint64_t)v313;
  if (v209 == 1)
  {
    *(_OWORD *)uint64_t v207 = xmmword_101180360;
    UnknownStorage.init()();
    sub_100522F00(v206, (uint64_t *)&unk_101674160);
  }
  else
  {
    sub_1006500F8(v206, v207, type metadata accessor for CRLProto_Data);
  }
  uint64_t v210 = (uint64_t)v280;
  sub_100510084(*(void *)v207, *(void *)(v207 + 8));
  uint64_t v211 = v302;
  *(void *)uint64_t v207 = v310;
  *(void *)(v207 + 8) = v211;
  sub_100522F00(v208, (uint64_t *)&unk_101674160);
  sub_1006500F8(v207, v208, type metadata accessor for CRLProto_Data);
  v212 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v320 + 56);
  v320 += 56;
  v212(v208, 0, 1, v189);
  uint64_t v213 = (uint64_t)v308;
  sub_100522F00((uint64_t)v308, &qword_101677FD8);
  sub_1006500F8((uint64_t)v286, v213, type metadata accessor for CRLProto_TextSelection);
  ((void (*)(uint64_t, void, uint64_t, int *))v305)(v213, 0, 1, v148);
  if (!HIDWORD(v316))
  {
    sub_100522E9C(v213, v210, &qword_101677FD8);
    int v214 = v318(v210, 1, v148);
    uint64_t v215 = v288;
    if (v214 == 1)
    {
      void *v288 = 0;
      *((unsigned char *)v215 + 8) = 1;
      UnknownStorage.init()();
      uint64_t v216 = (char *)v215 + v148[6];
      uint64_t v217 = v319;
      v212((uint64_t)v216, 1, 1, v319);
      v212((uint64_t)v288 + v148[7], 1, 1, v217);
      uint64_t v218 = v217;
      uint64_t v215 = v288;
      v212((uint64_t)v288 + v148[8], 1, 1, v218);
      BOOL v219 = (char *)v215 + v148[9];
      *(_DWORD *)BOOL v219 = 0;
      v219[4] = 1;
      *((unsigned char *)v215 + v148[10]) = 2;
      Class v220 = (char *)v215 + v148[11];
      *(_DWORD *)Class v220 = 0;
      v220[4] = 1;
      sub_100522F00(v210, &qword_101677FD8);
    }
    else
    {
      sub_1006500F8(v210, (uint64_t)v288, type metadata accessor for CRLProto_TextSelection);
    }
    uint64_t v238 = (char *)v215 + v148[9];
    *(_DWORD *)uint64_t v238 = v316;
    v238[4] = 0;
    uint64_t v239 = (uint64_t)v308;
    sub_100522F00((uint64_t)v308, &qword_101677FD8);
    sub_1006500F8((uint64_t)v215, v239, type metadata accessor for CRLProto_TextSelection);
    uint64_t v240 = v148;
    ((void (*)(uint64_t, void, uint64_t, int *))v305)(v239, 0, 1, v148);
    uint64_t v241 = v283;
    sub_100522E9C(v239, v283, &qword_101677FD8);
    if (v318(v241, 1, v148) == 1)
    {
      uint64_t v242 = v282;
      void *v282 = 0;
      *((unsigned char *)v242 + 8) = 1;
      UnknownStorage.init()();
      uint64_t v243 = v319;
      v212((uint64_t)v242 + v240[6], 1, 1, v319);
      v212((uint64_t)v242 + v240[7], 1, 1, v243);
      v212((uint64_t)v242 + v240[8], 1, 1, v243);
      uint64_t v244 = (char *)v242 + v240[9];
      *(_DWORD *)uint64_t v244 = 0;
      v244[4] = 1;
      *((unsigned char *)v242 + v240[10]) = 2;
      v245 = (char *)v242 + v240[11];
      *(_DWORD *)v245 = 0;
      v245[4] = 1;
      sub_100522F00(v241, &qword_101677FD8);
    }
    else
    {
      uint64_t v242 = v282;
      sub_1006500F8(v241, (uint64_t)v282, type metadata accessor for CRLProto_TextSelection);
      uint64_t v243 = v319;
    }
    *((unsigned char *)v242 + v240[10]) = v315;
    uint64_t v246 = (uint64_t)v308;
    sub_100522F00((uint64_t)v308, &qword_101677FD8);
    sub_1006500F8((uint64_t)v242, v246, type metadata accessor for CRLProto_TextSelection);
    ((void (*)(uint64_t, void, uint64_t, int *))v305)(v246, 0, 1, v240);
    if (!HIDWORD(v317))
    {
      objc_super v247 = v240;
      uint64_t v248 = v285;
      sub_100522E9C(v246, v285, &qword_101677FD8);
      if (v318(v248, 1, v247) == 1)
      {
        *(void *)uint64_t v205 = 0;
        *(unsigned char *)(v205 + 8) = 1;
        UnknownStorage.init()();
        v212(v205 + v247[6], 1, 1, v243);
        v212(v205 + v247[7], 1, 1, v243);
        v212(v205 + v247[8], 1, 1, v243);
        uint64_t v249 = v205 + v247[9];
        *(_DWORD *)uint64_t v249 = 0;
        *(unsigned char *)(v249 + 4) = 1;
        *(unsigned char *)(v205 + v247[10]) = 2;
        uint64_t v250 = v205 + v247[11];
        *(_DWORD *)uint64_t v250 = 0;
        *(unsigned char *)(v250 + 4) = 1;
        sub_100522F00(v248, &qword_101677FD8);
      }
      else
      {
        sub_1006500F8(v248, v205, type metadata accessor for CRLProto_TextSelection);
      }
      uint64_t v251 = v205 + v247[11];
      *(_DWORD *)uint64_t v251 = v317;
      *(unsigned char *)(v251 + 4) = 0;
      uint64_t v133 = (void (*)(char *, uint64_t))v308;
      sub_100522F00((uint64_t)v308, &qword_101677FD8);
      sub_1006500F8(v205, (uint64_t)v133, type metadata accessor for CRLProto_TextSelection);
      ((void (*)(void (*)(char *, uint64_t), void, uint64_t, int *))v305)(v133, 0, 1, v247);
      (*(void (**)(char *, uint64_t))(v304 + 8))(v298, v307);
      goto LABEL_57;
    }
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_10064EDD4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLPersistableSelectionPath(0);
  return [super dealloc];
}

uint64_t sub_10064EE54()
{
  return type metadata accessor for CRLPersistableSelectionPath(0);
}

uint64_t type metadata accessor for CRLPersistableSelectionPath(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_101677F00);
}

void sub_10064EE7C()
{
  sub_10064EF1C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10064EF1C()
{
  if (!qword_101677F10)
  {
    type metadata accessor for CRLPersistableSelectionPath.UserInfo(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101677F10);
    }
  }
}

uint64_t type metadata accessor for CRLPersistableSelectionPath.UserInfo(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_101677F88);
}

uint64_t *sub_10064EF94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = sub_1005057FC(&qword_101675C18);
      uint64_t v12 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16);
      v12(a1, a2, v11);
      uint64_t v13 = sub_1005057FC(&qword_101676C70);
      v12((uint64_t *)((char *)a1 + *(int *)(v13 + 48)), (uint64_t *)((char *)a2 + *(int *)(v13 + 48)), v11);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_1005057FC(&qword_101675C18);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = (int *)sub_1005057FC(&qword_101676C78);
      *(uint64_t *)((char *)a1 + v9[12]) = *(uint64_t *)((char *)a2 + v9[12]);
      *((unsigned char *)a1 + v9[16]) = *((unsigned char *)a2 + v9[16]);
      *(uint64_t *)((char *)a1 + v9[20]) = *(uint64_t *)((char *)a2 + v9[20]);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10064F150(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v7 = sub_1005057FC(&qword_101675C18);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v7 - 8), a1, v7);
    uint64_t v6 = a1 + *(int *)(sub_1005057FC(&qword_101676C70) + 48);
    uint64_t v5 = v7;
    uint64_t v4 = v8;
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v3 = sub_1005057FC(&qword_101675C18);
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    uint64_t v5 = v3;
    uint64_t v6 = a1;
  }

  return v4(v6, v5);
}

char *sub_10064F248(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = sub_1005057FC(&qword_101675C18);
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    v10(a1, a2, v9);
    uint64_t v11 = sub_1005057FC(&qword_101676C70);
    v10(&a1[*(int *)(v11 + 48)], &a2[*(int *)(v11 + 48)], v9);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_1005057FC(&qword_101675C18);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)sub_1005057FC(&qword_101676C78);
    *(void *)&a1[v8[12]] = *(void *)&a2[v8[12]];
    a1[v8[16]] = a2[v8[16]];
    *(void *)&a1[v8[20]] = *(void *)&a2[v8[20]];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_10064F3C0(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100650098((uint64_t)a1, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = sub_1005057FC(&qword_101675C18);
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      v10(a1, a2, v9);
      uint64_t v11 = sub_1005057FC(&qword_101676C70);
      v10(&a1[*(int *)(v11 + 48)], &a2[*(int *)(v11 + 48)], v9);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_1005057FC(&qword_101675C18);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = (int *)sub_1005057FC(&qword_101676C78);
      *(void *)&a1[v8[12]] = *(void *)&a2[v8[12]];
      a1[v8[16]] = a2[v8[16]];
      *(void *)&a1[v8[20]] = *(void *)&a2[v8[20]];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

char *sub_10064F55C(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = sub_1005057FC(&qword_101675C18);
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
    v10(a1, a2, v9);
    uint64_t v11 = sub_1005057FC(&qword_101676C70);
    v10(&a1[*(int *)(v11 + 48)], &a2[*(int *)(v11 + 48)], v9);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_1005057FC(&qword_101675C18);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    uint64_t v8 = (int *)sub_1005057FC(&qword_101676C78);
    *(void *)&a1[v8[12]] = *(void *)&a2[v8[12]];
    a1[v8[16]] = a2[v8[16]];
    *(void *)&a1[v8[20]] = *(void *)&a2[v8[20]];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_10064F6D4(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100650098((uint64_t)a1, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = sub_1005057FC(&qword_101675C18);
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
      v10(a1, a2, v9);
      uint64_t v11 = sub_1005057FC(&qword_101676C70);
      v10(&a1[*(int *)(v11 + 48)], &a2[*(int *)(v11 + 48)], v9);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_1005057FC(&qword_101675C18);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = (int *)sub_1005057FC(&qword_101676C78);
      *(void *)&a1[v8[12]] = *(void *)&a2[v8[12]];
      a1[v8[16]] = a2[v8[16]];
      *(void *)&a1[v8[20]] = *(void *)&a2[v8[20]];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_10064F870()
{
  sub_10064F94C();
  if (v1 <= 0x3F)
  {
    v2[4] = *(void *)(v0 - 8) + 64;
    v2[5] = (char *)&value witness table for Builtin.Int64 + 64;
    void v2[6] = &unk_101185A38;
    v2[7] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_getTupleTypeLayout();
    uint64_t v4 = &v3;
    swift_getTupleTypeLayout2();
    uint64_t v5 = v2;
    swift_initEnumMetadataMultiPayload();
  }
}

void sub_10064F94C()
{
  if (!qword_101677F98)
  {
    sub_1005D3BF8();
    unint64_t v0 = type metadata accessor for CRAttributedString.Cursor();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101677F98);
    }
  }
}

uint64_t sub_10064F9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101675C18);
  uint64_t v63 = *(void *)(v4 - 8);
  uint64_t v64 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v61 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v62 = (char *)&v59 - v9;
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v59 - v12;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v59 - v16;
  uint64_t v18 = type metadata accessor for CRLPersistableSelectionPath.UserInfo(0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v59 - v24;
  uint64_t v26 = sub_1005057FC(&qword_101677FC8);
  __chkstk_darwin(v26 - 8, v27);
  uint64_t v29 = (char *)&v59 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = (uint64_t)&v29[*(int *)(v30 + 56)];
  sub_1006501BC(a1, (uint64_t)v29, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
  sub_1006501BC(a2, v31, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1006501BC((uint64_t)v29, (uint64_t)v21, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
      uint64_t v38 = *(int *)(sub_1005057FC(&qword_101676C70) + 48);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v40 = v64;
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v48 = *(void (**)(char *, uint64_t))(v63 + 8);
        v48(&v21[v38], v64);
        v48(v21, v40);
        goto LABEL_13;
      }
      uint64_t v41 = v63;
      uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 32);
      v42(v13, v31, v64);
      v42(v62, (uint64_t)&v21[v38], v40);
      v42(v61, v31 + v38, v40);
      sub_1005D3BF8();
      char v43 = static CRAttributedString.Cursor.== infix(_:_:)();
      uint64_t v44 = *(void (**)(char *, uint64_t))(v41 + 8);
      v44(v21, v40);
      if (v43)
      {
        uint64_t v46 = v61;
        uint64_t v45 = v62;
        char v47 = static CRAttributedString.Cursor.== infix(_:_:)();
        v44(v46, v40);
        v44(v45, v40);
        v44(v13, v40);
        goto LABEL_7;
      }
      v44(v61, v40);
      v44(v62, v40);
      v44(v13, v40);
      goto LABEL_22;
    case 2u:
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_13;
      }
      goto LABEL_11;
    case 3u:
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_13;
      }
LABEL_11:
      sub_100650098((uint64_t)v29, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
      char v47 = 1;
      return v47 & 1;
    default:
      sub_1006501BC((uint64_t)v29, (uint64_t)v25, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
      uint64_t v32 = (int *)sub_1005057FC(&qword_101676C78);
      uint64_t v33 = v32[12];
      uint64_t v62 = *(char **)&v25[v33];
      uint64_t v34 = v32[16];
      int v35 = v25[v34];
      uint64_t v36 = v32[20];
      uint64_t v37 = *(void *)&v25[v36];
      if (swift_getEnumCaseMultiPayload())
      {
        (*(void (**)(char *, uint64_t))(v63 + 8))(v25, v64);
LABEL_13:
        sub_100522F00((uint64_t)v29, &qword_101677FC8);
        goto LABEL_23;
      }
      LODWORD(v61) = v35;
      uint64_t v60 = v37;
      uint64_t v49 = *(char **)(v31 + v33);
      int v50 = *(unsigned __int8 *)(v31 + v34);
      uint64_t v51 = *(void *)(v31 + v36);
      uint64_t v52 = v63;
      uint64_t v53 = v64;
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v17, v31, v64);
      sub_1005D3BF8();
      char v54 = static CRAttributedString.Cursor.== infix(_:_:)();
      uint64_t v55 = *(void (**)(char *, uint64_t))(v52 + 8);
      v55(v25, v53);
      if ((v54 & 1) == 0)
      {
        uint64_t v57 = v17;
        uint64_t v56 = v53;
        goto LABEL_21;
      }
      if (v62 != v49)
      {
        uint64_t v57 = v17;
        uint64_t v56 = v64;
LABEL_21:
        v55(v57, v56);
LABEL_22:
        sub_100650098((uint64_t)v29, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
LABEL_23:
        char v47 = 0;
        return v47 & 1;
      }
      uint64_t v56 = v64;
      if (v61 != v50)
      {
        uint64_t v57 = v17;
        goto LABEL_21;
      }
      char v47 = v60 == v51;
      v55(v17, v64);
LABEL_7:
      sub_100650098((uint64_t)v29, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
      return v47 & 1;
  }
}

unint64_t sub_10064FFA8()
{
  unint64_t result = qword_101677FD0;
  if (!qword_101677FD0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101677FD0);
  }
  return result;
}

uint64_t sub_10064FFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101676C68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100650050(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100650098(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1006500F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_100650160()
{
  unint64_t result = qword_101675C20;
  if (!qword_101675C20)
  {
    sub_100522D34(&qword_101675C18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101675C20);
  }
  return result;
}

uint64_t sub_1006501BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_100650228()
{
  unint64_t result = qword_101677FE8;
  if (!qword_101677FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677FE8);
  }
  return result;
}

unint64_t sub_100650280()
{
  unint64_t result = qword_101677FF0;
  if (!qword_101677FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677FF0);
  }
  return result;
}

uint64_t sub_1006502D4()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100650308()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100650358()
{
  unint64_t result = qword_101677FF8;
  if (!qword_101677FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677FF8);
  }
  return result;
}

uint64_t sub_1006503AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v1 = sub_1005057FC(&qword_101678010);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v56 = (char *)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for InputConnectionBehavior();
  uint64_t v57 = *(void *)(v54 - 8);
  __chkstk_darwin(v54, v4);
  uint64_t v53 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v52 - 8);
  __chkstk_darwin(v52, v7);
  uint64_t v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Locale();
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v12 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v51 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v17 = sub_1005057FC(&qword_101673B38);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v20 = (char *)v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  char v47 = (char *)v46 - v23;
  uint64_t v24 = sub_1005057FC(&qword_101691F20);
  __chkstk_darwin(v24 - 8, v25);
  uint64_t v27 = (char *)v46 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v28 - 8, v29);
  uint64_t v31 = (char *)v46 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = v31;
  uint64_t v32 = sub_1005057FC(&qword_101673B48);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v46[1] = v15 + 56;
  uint64_t v49 = v32;
  int v50 = v33;
  v33(v31, 1, 1, v14);
  uint64_t v34 = type metadata accessor for CRLBoardEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v27, 1, 1, v34);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, enum case for LocalizedStringResource.BundleDescription.main(_:), v52);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  int v35 = v47;
  IntentDialog.init(_:)();
  uint64_t v36 = type metadata accessor for IntentDialog();
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56);
  v37(v35, 0, 1, v36);
  v37(v20, 1, 1, v36);
  LODWORD(v52) = enum case for InputConnectionBehavior.default(_:);
  uint64_t v38 = *(void (**)(char *))(v57 + 104);
  v57 += 104;
  v46[0] = v38;
  uint64_t v39 = v53;
  uint64_t v40 = v54;
  v38(v53);
  sub_100651FFC((unint64_t *)&qword_101673B60, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  uint64_t v41 = v48;
  uint64_t v42 = IntentParameter<>.init(description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  char v43 = v55;
  *uint64_t v55 = v42;
  sub_1005057FC(&qword_101678018);
  v50(v41, 1, 1, v51);
  uint64_t v44 = type metadata accessor for String.IntentInputOptions();
  uint64_t v60 = 0;
  uint64_t v61 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v56, 1, 1, v44);
  v37(v35, 1, 1, v36);
  ((void (*)(char *, void, uint64_t))v46[0])(v39, v52, v40);
  v43[1] = IntentParameter<>.init(description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  sub_1005057FC(&qword_101673B50);
  unint64_t v58 = 0xD00000000000001FLL;
  unint64_t v59 = 0x800000010123B260;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  v43[2] = result;
  v43[6] = (uint64_t)&type metadata for CRLRenameBoardIntentPerformer;
  v43[7] = (uint64_t)&off_101517150;
  return result;
}

uint64_t sub_100650AA0(uint64_t a1)
{
  v2[22] = a1;
  v2[23] = v1;
  uint64_t v3 = type metadata accessor for LocalizedStringResource.BundleDescription();
  v2[24] = v3;
  v2[25] = *(void *)(v3 - 8);
  v2[26] = swift_task_alloc();
  type metadata accessor for Locale();
  v2[27] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  v2[28] = swift_task_alloc();
  type metadata accessor for LocalizedStringResource();
  v2[29] = swift_task_alloc();
  sub_1005057FC(&qword_101673B38);
  v2[30] = swift_task_alloc();
  sub_1005057FC(&qword_101672C30);
  v2[31] = swift_task_alloc();
  v2[32] = type metadata accessor for CRLBoardEntity();
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Logger();
  v2[35] = v4;
  v2[36] = *(void *)(v4 - 8);
  v2[37] = swift_task_alloc();
  return _swift_task_switch(sub_100650CE0, 0, 0);
}

uint64_t sub_100650CE0()
{
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = (id)static OS_os_log.appIntents;
  Logger.init(_:)();
  IntentParameter.wrappedValue.getter();
  uint64_t v3 = v0[13];
  unint64_t v2 = v0[14];
  v0[38] = v3;
  v0[39] = v2;
  if (v2)
  {
    uint64_t v4 = v3 & 0xFFFFFFFFFFFFLL;
    if ((v2 & 0x2000000000000000) != 0) {
      uint64_t v4 = HIBYTE(v2) & 0xF;
    }
    if (v4)
    {
      IntentParameter.wrappedValue.getter();
      AppDependency.wrappedValue.getter();
      v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
      v0[6] = &off_10152F800;
      v0[40] = *sub_10050F848(v0 + 2, (uint64_t)&type metadata for CRLBoardLibraryProvidingDependency);
      v0[41] = type metadata accessor for MainActor();
      v0[42] = static MainActor.shared.getter();
      uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
      return _swift_task_switch(sub_1006510AC, v6, v5);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = v0[36];
  uint64_t v15 = v0[35];
  uint64_t v16 = v0[37];
  uint64_t v8 = v0[30];
  uint64_t v9 = v0[25];
  uint64_t v10 = v0[26];
  uint64_t v11 = v0[24];
  IntentParameter.projectedValue.getter();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v10, enum case for LocalizedStringResource.BundleDescription.main(_:), v11);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  IntentDialog.init(_:)();
  uint64_t v12 = type metadata accessor for IntentDialog();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  type metadata accessor for AppIntentError();
  sub_100651FFC(&qword_101675F98, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
  swift_allocError();
  IntentParameter.needsValueError(_:)();
  swift_release();
  sub_100522F00(v8, &qword_101673B38);
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v16, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1006510AC()
{
  uint64_t v1 = v0[39];
  uint64_t v2 = v0[40];
  uint64_t v3 = v0[38];
  uint64_t v4 = (void *)v0[31];
  swift_release();
  uint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = v5;
  v0[43] = sub_1006F7E58(v3, v1, 0, v4, v7);
  v0[44] = v8;
  sub_100522F00(v0[31], &qword_101672C30);

  return _swift_task_switch(sub_1006511DC, 0, 0);
}

uint64_t sub_1006511DC()
{
  sub_10050F848(v0 + 2, v0[5]);
  v0[45] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[46] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100651298;
  uint64_t v2 = v0[43];
  uint64_t v3 = v0[44];
  uint64_t v4 = v0[34];
  return sub_100EDFE94(v4, v2, v3, 0);
}

uint64_t sub_100651298(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v3;
  *(void *)(*v3 + 376) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v7;
    uint64_t v9 = sub_100651680;
  }
  else
  {
    *(void *)(v5 + 384) = a2;
    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v10;
    uint64_t v9 = sub_100651418;
  }
  return _swift_task_switch(v9, v6, v8);
}

uint64_t sub_100651418()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10065148C, 0, 0);
}

uint64_t sub_10065148C()
{
  uint64_t v1 = v0[43];
  uint64_t v2 = v0[44];
  uint64_t v4 = v0[36];
  uint64_t v3 = v0[37];
  uint64_t v8 = v0[35];
  uint64_t v5 = v0[33];
  sub_1005F6324(v0[34]);
  swift_bridgeObjectRelease();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 2));
  IntentParameter.wrappedValue.getter();
  v0[15] = v1;
  v0[16] = v2;
  EntityProperty.wrappedValue.setter();
  sub_1005F6324(v5);
  IntentParameter.wrappedValue.getter();
  v0[21] = IntentParameter.projectedValue.getter();
  sub_100651FFC((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  sub_1005F6380();
  static IntentResult.result<A, B>(value:opensIntent:)();
  swift_release();
  sub_1005F6324(v5);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100651680()
{
  swift_release();
  return _swift_task_switch(sub_1006516E8, 0, 0);
}

uint64_t sub_1006516E8()
{
  swift_bridgeObjectRelease();
  v0[49] = v0[47];
  sub_1005F6324(v0[34]);
  return _swift_task_switch(sub_100651760, 0, 0);
}

uint64_t sub_100651760()
{
  uint64_t v30 = v0;
  uint64_t v1 = *(void *)(v0 + 392);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  *(void *)(v0 + 160) = v1;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    uint64_t v2 = *(void *)(v0 + 80);
    uint64_t v3 = *(void *)(v0 + 88);
    unsigned __int8 v4 = *(unsigned char *)(v0 + 96);
    sub_100651F78(v2, v3, v4);
    sub_100651F78(v2, v3, v4);
    swift_bridgeObjectRetain();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    BOOL v7 = os_log_type_enabled(v5, v6);
    unint64_t v8 = *(void *)(v0 + 312);
    if (v7)
    {
      uint64_t v26 = *(void *)(v0 + 304);
      uint64_t v9 = swift_slowAlloc();
      uint64_t v27 = (void *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 144) = sub_100E04348(v26, v8, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v9 + 12) = 2112;
      sub_100651FA8();
      swift_allocError();
      *(void *)uint64_t v10 = v2;
      *(void *)(v10 + 8) = v3;
      *(unsigned char *)(v10 + 16) = v4;
      sub_100651F78(v2, v3, v4);
      uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 152) = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v27 = v11;
      sub_100651F90(v2, v3, v4);
      sub_100651F90(v2, v3, v4);
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Tried to rename board with invalid title: %s - %@", (uint8_t *)v9, 0x16u);
      sub_1005057FC(&qword_101678028);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      sub_100651F90(v2, v3, v4);
      sub_100651F90(v2, v3, v4);
    }
    uint64_t v17 = *(void *)(v0 + 288);
    uint64_t v16 = *(void *)(v0 + 296);
    uint64_t v18 = *(void *)(v0 + 280);
    uint64_t v19 = *(void *)(v0 + 240);
    IntentParameter.projectedValue.getter();
    sub_1006F6830(v2, v3, v4);
    sub_100651F90(v2, v3, v4);
    IntentDialog.init(_:)();
    uint64_t v20 = type metadata accessor for IntentDialog();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
    type metadata accessor for AppIntentError();
    sub_100651FFC(&qword_101675F98, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    IntentParameter.needsValueError(_:)();
    swift_release();
    sub_100522F00(v19, &qword_101673B38);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    swift_errorRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 138412290;
      swift_errorRetain();
      uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 136) = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v28 = v15;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Error renaming the board: %@", v14, 0xCu);
      sub_1005057FC(&qword_101678028);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v22 = *(void *)(v0 + 288);
    uint64_t v21 = *(void *)(v0 + 296);
    uint64_t v23 = *(void *)(v0 + 280);
    type metadata accessor for AppIntentError();
    sub_100651FFC(&qword_101675F98, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    static AppIntentError.Unrecoverable.unknown.getter();
    swift_willThrow();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_100651DE0(uint64_t a1)
{
  unint64_t v2 = sub_100652044();

  return static AssistantSchemaIntent.title.getter(a1, v2);
}

uint64_t sub_100651E30(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528488;
  return sub_100650AA0(a1);
}

uint64_t sub_100651ECC(uint64_t a1)
{
  unint64_t v2 = sub_100650358();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_100651F0C()
{
  unint64_t result = qword_101678008;
  if (!qword_101678008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101678008);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUpdateBoardIntent()
{
  return &type metadata for CRLUpdateBoardIntent;
}

uint64_t sub_100651F78(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100651F90(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_100651FA8()
{
  unint64_t result = qword_101678030;
  if (!qword_101678030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101678030);
  }
  return result;
}

uint64_t sub_100651FFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100652044()
{
  unint64_t result = qword_101678038;
  if (!qword_101678038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101678038);
  }
  return result;
}

void sub_100652098(char *a1, void *a2)
{
  UUID.init()();
  v25.receiver = v2;
  v25.super_class = (Class)type metadata accessor for CRLURLRep();
  id v5 = [super initWithLayout:a1 canvas:a2];
  if (!a2)
  {
    BOOL v7 = a1;
LABEL_12:

    return;
  }
  os_log_type_t v6 = (char *)v5;
  BOOL v7 = a2;
  if (![v7 isCanvasInteractive])
  {
    uint64_t v11 = v7;
LABEL_11:

    goto LABEL_12;
  }
  id v8 = [v6 layout];
  id v9 = [v8 info];

  if (v9)
  {
    type metadata accessor for CRLURLItem();
    if (swift_dynamicCastClass())
    {
      uint64_t v10 = OBJC_IVAR____TtC8Freeform9CRLURLRep_downloadObserverIdentifier;
      uint64_t v11 = sub_100949540();
      swift_unknownObjectRelease();
      uint64_t v12 = &v11[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
      uint64_t v13 = *(void *)&v11[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
      uint64_t v14 = *(void *)&v11[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
      sub_10050F848(&v11[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v13);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 64))(v13, v14))
      {
        uint64_t v15 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v24 = v11;
        uint64_t v17 = *((void *)v12 + 3);
        uint64_t v16 = *((void *)v12 + 4);
        sub_10050F848(v12, v17);
        uint64_t v23 = *(void (**)(char *, uint64_t, void (*)(), uint64_t, uint64_t, uint64_t))(v16 + 72);
        swift_retain();
        uint64_t v18 = v16;
        uint64_t v11 = v24;
        v23(&v6[v10], 2, sub_100653724, v15, v17, v18);
        swift_release_n();
        uint64_t v19 = *((void *)v12 + 3);
        uint64_t v20 = *((void *)v12 + 4);
        sub_10050F848(v12, v19);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v20 + 64))(v19, v20))
        {
          uint64_t v21 = *((void *)v12 + 3);
          uint64_t v22 = *((void *)v12 + 4);
          sub_10050F848(v12, v21);
          (*(void (**)(uint64_t, uint64_t))(v22 + 88))(v21, v22);
        }
      }

      os_log_type_t v6 = a1;
      a1 = v7;
      goto LABEL_11;
    }
    swift_unknownObjectRelease();
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLRep.swift", 80, 2, 70, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLRep.swift", 80, 2, 70);
  __break(1u);
}

void sub_1006523F4()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(v1, v4);
  id v5 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v6 - 8, v7);
  id v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (objc_class *)type metadata accessor for CRLURLRep();
  v45.receiver = v0;
  v45.super_class = v10;
  [super willBeRemoved];
  id v11 = [v0 layout];
  id v12 = [v11 info];

  if (!v12) {
    goto LABEL_11;
  }
  type metadata accessor for CRLURLItem();
  uint64_t v13 = swift_dynamicCastClass();
  if (!v13)
  {
    swift_unknownObjectRelease();
LABEL_11:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLRep.swift", 80, 2, 70, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLRep.swift", 80, 2, 70);
    __break(1u);
    return;
  }
  uint64_t v14 = (char *)*(id *)(v13 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  swift_unknownObjectRelease();
  uint64_t v15 = *(void *)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 16));
  uint64_t v16 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
  uint64_t v17 = *(void **)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  if (v17)
  {
    id v18 = *(id *)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  }
  else
  {
    Class v40 = (Class)type metadata accessor for CRLAssetManager();
    uint64_t v19 = (char *)objc_allocWithZone(v40);
    v39[1] = &v19[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
    swift_unknownObjectWeakInit();
    uint64_t v43 = v3;
    uint64_t v20 = v1;
    uint64_t v21 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
    type metadata accessor for CRLUnfairLock();
    uint64_t v22 = swift_allocObject();
    uint64_t v41 = v0;
    uint64_t v23 = v22;
    v39[0] = v14;
    uint64_t v24 = v19;
    uint64_t v42 = v9;
    objc_super v25 = v24;
    uint64_t v26 = (_DWORD *)swift_slowAlloc();
    *uint64_t v26 = 0;
    *(void *)(v23 + 16) = v26;
    atomic_thread_fence(memory_order_acq_rel);
    *(void *)&v19[v21] = v23;
    uint64_t v1 = v20;
    id v5 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
    *(void *)&v25[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
    uint64_t v27 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
    *(void *)&v25[v27] = [self mapTableWithKeyOptions:517 valueOptions:0];
    *(void *)&v25[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
    uint64_t v28 = (void *)v39[0];
    swift_unknownObjectWeakAssign();

    v44.receiver = v25;
    id v9 = v42;
    v44.super_class = v40;
    id v29 = [super init];

    uint64_t v30 = *(void **)&v14[v16];
    *(void *)&v14[v16] = v29;
    id v18 = v29;

    uint64_t v0 = v41;
    uint64_t v17 = 0;
  }
  uint64_t v31 = *(os_unfair_lock_s **)(v15 + 16);
  id v32 = v17;
  os_unfair_lock_unlock(v31);

  uint64_t v33 = OBJC_IVAR____TtC8Freeform9CRLURLRep_downloadObserverIdentifier;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v35 = Strong;
    uint64_t v36 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v9, 1, 1, v36);
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, &v0[v33], v1);
    unint64_t v37 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v38 = (char *)swift_allocObject();
    *((void *)v38 + 2) = 0;
    *((void *)v38 + 3) = 0;
    *((void *)v38 + 4) = v35;
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(&v38[v37], v5, v1);
    sub_1005912D0((uint64_t)v9, (uint64_t)&unk_101678080, (uint64_t)v38);

    swift_release();
  }
  else
  {
  }
}

void sub_1006528FC()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    if (([Strong hasBeenRemoved] & 1) == 0)
    {
      uint64_t v2 = CRLLinkViewHostingRep.reloadView.getter();
      [v2 removeFromSuperview];

      uint64_t v3 = OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView;
      uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView];
      if (v4)
      {
        CRLLinkViewHostingRep.updateReloadView()();
        uint64_t v4 = *(void **)&v1[v3];
      }
      *(void *)&v1[v3] = 0;

      [v1 setNeedsDisplay];
      id v5 = (char *)[v1 interactiveCanvasController];
      [v5 invalidateContentLayersForRep:v1];

      uint64_t v1 = v5;
    }
  }
}

void sub_1006529DC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4, v7);
  uint64_t v8 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v8 - 8, v9);
  id v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = (objc_class *)type metadata accessor for CRLURLRep();
  v67.receiver = v2;
  v67.super_class = v12;
  [super processChangedProperty:a1];
  if (a1 != 49) {
    return;
  }
  id v13 = [v2 layout];
  id v14 = [v13 info];

  if (!v14) {
    goto LABEL_20;
  }
  uint64_t v65 = type metadata accessor for CRLURLItem();
  uint64_t v15 = swift_dynamicCastClass();
  if (!v15)
  {
    swift_unknownObjectRelease();
LABEL_20:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLRep.swift", 80, 2, 70, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLRep.swift", 80, 2, 70);
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v63 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = v5;
  uint64_t v16 = (char *)*(id *)(v15 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  swift_unknownObjectRelease();
  uint64_t v17 = *(void *)&v16[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 16));
  uint64_t v18 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
  uint64_t v19 = *(void **)&v16[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  if (v19)
  {
    id v20 = *(id *)&v16[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  }
  else
  {
    Class v61 = (Class)type metadata accessor for CRLAssetManager();
    uint64_t v21 = (char *)objc_allocWithZone(v61);
    uint64_t v60 = &v21[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
    swift_unknownObjectWeakInit();
    uint64_t v58 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
    type metadata accessor for CRLUnfairLock();
    uint64_t v22 = swift_allocObject();
    uint64_t v62 = v4;
    uint64_t v23 = v22;
    unint64_t v59 = v16;
    uint64_t v24 = v21;
    objc_super v25 = (_DWORD *)swift_slowAlloc();
    *objc_super v25 = 0;
    *(void *)(v23 + 16) = v25;
    atomic_thread_fence(memory_order_acq_rel);
    *(void *)&v21[v58] = v23;
    *(void *)&v24[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
    uint64_t v26 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
    *(void *)&v24[v26] = [self mapTableWithKeyOptions:517 valueOptions:0];
    *(void *)&v24[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
    uint64_t v27 = v59;
    swift_unknownObjectWeakAssign();

    v66.receiver = v24;
    v66.super_class = v61;
    id v28 = [super init];

    id v29 = *(void **)&v16[v18];
    *(void *)&v16[v18] = v28;
    id v20 = v28;

    uint64_t v4 = v62;
    uint64_t v19 = 0;
  }
  uint64_t v30 = *(os_unfair_lock_s **)(v17 + 16);
  id v31 = v19;
  os_unfair_lock_unlock(v30);

  id v32 = &v2[OBJC_IVAR____TtC8Freeform9CRLURLRep_downloadObserverIdentifier];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v34 = Strong;
    uint64_t v35 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v11, 1, 1, v35);
    uint64_t v36 = v63;
    uint64_t v37 = v64;
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v63, v32, v4);
    unint64_t v38 = (*(unsigned __int8 *)(v37 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    uint64_t v39 = (char *)swift_allocObject();
    *((void *)v39 + 2) = 0;
    *((void *)v39 + 3) = 0;
    *((void *)v39 + 4) = v34;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v39[v38], v36, v4);
    sub_1005912D0((uint64_t)v11, (uint64_t)&unk_101693C10, (uint64_t)v39);

    swift_release();
  }
  else
  {
  }
  id v40 = [v2 layout];
  id v41 = [v40 info];

  if (!v41) {
    goto LABEL_22;
  }
  if (!swift_dynamicCastClass())
  {
LABEL_21:
    swift_unknownObjectRelease();
LABEL_22:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLRep.swift", 80, 2, 70, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLRep.swift", 80, 2, 70);
    __break(1u);
    return;
  }
  uint64_t v42 = sub_100949540();
  swift_unknownObjectRelease();
  uint64_t v43 = &v42[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
  uint64_t v44 = *(void *)&v42[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
  uint64_t v45 = *(void *)&v42[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
  sub_10050F848(&v42[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v44);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v45 + 64))(v44, v45))
  {
    uint64_t v46 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v47 = *((void *)v43 + 3);
    uint64_t v48 = *((void *)v43 + 4);
    sub_10050F848(v43, v47);
    uint64_t v49 = *(void (**)(char *, uint64_t, void (*)(), uint64_t, uint64_t, uint64_t))(v48 + 72);
    swift_retain();
    v49(v32, 2, sub_100653724, v46, v47, v48);
    swift_release_n();
    uint64_t v50 = *((void *)v43 + 3);
    uint64_t v51 = *((void *)v43 + 4);
    sub_10050F848(v43, v50);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v51 + 64))(v50, v51))
    {
      uint64_t v52 = *((void *)v43 + 3);
      uint64_t v53 = *((void *)v43 + 4);
      sub_10050F848(v43, v52);
      (*(void (**)(uint64_t, uint64_t))(v53 + 88))(v52, v53);
    }
  }

  uint64_t v54 = CRLLinkViewHostingRep.reloadView.getter();
  [v54 removeFromSuperview];

  uint64_t v55 = OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView;
  uint64_t v56 = *(void **)&v2[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView];
  if (v56)
  {
    CRLLinkViewHostingRep.updateReloadView()();
    uint64_t v56 = *(void **)&v2[v55];
  }
  *(void *)&v2[v55] = 0;

  [v2 setNeedsDisplay];
  id v57 = [v2 interactiveCanvasController];
  [v57 invalidateContentLayersForRep:v2];
}

void sub_1006531EC()
{
  id v1 = [v0 layout];
  id v2 = [v1 info];

  if (v2)
  {
    type metadata accessor for CRLURLItem();
    if (swift_dynamicCastClass()) {
      return;
    }
    swift_unknownObjectRelease();
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLRep.swift", 80, 2, 70, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLRep.swift", 80, 2, 70);
  __break(1u);
}

void sub_10065331C()
{
  uint64_t v0 = (char *)sub_100653428();
  if (v0)
  {
    id v1 = v0;
    uint64_t v2 = OBJC_IVAR____TtC8Freeform12CRLURLEditor_reloadTask;
    if (*(void *)&v0[OBJC_IVAR____TtC8Freeform12CRLURLEditor_reloadTask])
    {
      swift_retain();
      sub_1005057FC(&qword_101672BD0);
      Task.cancel()();
      swift_release();
    }
    *(void *)&v1[v2] = 0;

    swift_release();
  }

  CRLLinkViewHostingRep.tearDownReload()();
}

void *sub_100653428()
{
  id v1 = [v0 interactiveCanvasController];
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 editorController];

    if (v3)
    {
      if (type metadata accessor for CRLURLEditor()) {
        ObjCClassFromMetadatCATransform3D a = swift_getObjCClassFromMetadata();
      }
      else {
        ObjCClassFromMetadatCATransform3D a = 0;
      }
      id v5 = [v3 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
      uint64_t v2 = (void *)swift_dynamicCastClass();

      if (!v2) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

uint64_t sub_1006534F8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform9CRLURLRep_downloadObserverIdentifier;
  uint64_t v2 = type metadata accessor for UUID();
  id v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

id sub_100653564()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLURLRep();
  return [super dealloc];
}

uint64_t sub_100653608()
{
  return type metadata accessor for CRLURLRep();
}

uint64_t type metadata accessor for CRLURLRep()
{
  uint64_t result = qword_101678070;
  if (!qword_101678070) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10065365C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1006536EC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100653724()
{
}

uint64_t sub_100653734()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100653808(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528488;
  return sub_100AE3FB8(a1, v5, v6, v7, v8);
}

uint64_t sub_100653904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[23] = a8;
  v9[24] = v8;
  v9[21] = a6;
  v9[22] = a7;
  v9[19] = a4;
  v9[20] = a5;
  v9[17] = a2;
  v9[18] = a3;
  unsigned char v9[16] = a1;
  v9[25] = *v8;
  uint64_t v10 = type metadata accessor for DispatchQoS.QoSClass();
  v9[26] = v10;
  v9[27] = *(void *)(v10 - 8);
  v9[28] = swift_task_alloc();
  return _swift_task_switch(sub_1006539FC, 0, 0);
}

uint64_t sub_1006539FC()
{
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v3 = v0[26];
  uint64_t v4 = self;
  URL._bridgeToObjectiveC()(v5);
  uint64_t v7 = v6;
  v0[29] = v6;
  sub_100656064();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for DispatchQoS.QoSClass.default(_:), v3);
  uint64_t v8 = static OS_dispatch_queue.global(qos:)();
  v0[30] = v8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_100653BA0;
  uint64_t v9 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100654020;
  v0[13] = &unk_10150D148;
  v0[14] = v9;
  [v4 readArchiveFromURL:v7 options:5 queue:v8 completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100653BA0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 248) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_100653F34;
  }
  else
  {
    uint64_t v2 = sub_100653CC4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100653CC4()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void **)(v0 + 232);

  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 184);
    uint64_t v4 = *(void *)(v0 + 192);
    uint64_t v5 = *(void *)(v0 + 168);
    uint64_t v6 = *(void *)(v0 + 176);
    long long v24 = *(_OWORD *)(v0 + 152);
    uint64_t v8 = *(void *)(v0 + 136);
    uint64_t v7 = *(void *)(v0 + 144);
    uint64_t v25 = *(void *)(v0 + 128);
    type metadata accessor for CRLFileReadAssistant.ReadCoordinatorChannelProvider();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v1;
    *(_OWORD *)(v9 + 24) = v24;
    *(void *)(v9 + 40) = v5;
    *(void *)(v9 + 48) = v6;
    if (v3) {
      uint64_t v10 = 7;
    }
    else {
      uint64_t v10 = 3;
    }
    *(void *)(v4 + 16) = v9;
    type metadata accessor for CRLSerializableObjectReadCoordinator();
    uint64_t v11 = (void *)swift_allocObject();
    uint64_t v12 = swift_retain();
    id v13 = sub_100655F3C(v12, v8, v7, v10, v11, (uint64_t (*)(void))type metadata accessor for CRLFileReadAssistant.ReadCoordinatorChannelProvider, (uint64_t)&off_10150D128);
    uint64_t v14 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v25, v14);
    *(void *)(v4 + 24) = v13;
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v16 = *(void *)(v0 + 192);
    return v15(v16);
  }
  else
  {
    uint64_t v19 = *(void **)(v0 + 136);
    uint64_t v18 = *(void **)(v0 + 144);
    uint64_t v20 = *(void *)(v0 + 128);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1005F7CE8();
    swift_allocError();
    unsigned char *v21 = 0;
    swift_willThrow();

    uint64_t v22 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v20, v22);
    swift_deallocPartialClassInstance();
    swift_task_dealloc();
    uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
    return v23();
  }
}

uint64_t sub_100653F34()
{
  uint64_t v1 = (void *)v0[30];
  uint64_t v2 = (void *)v0[29];
  uint64_t v4 = (void *)v0[17];
  uint64_t v3 = (void *)v0[18];
  uint64_t v5 = v0[16];
  swift_willThrow();

  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100654020(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1005057FC(&qword_101672BD0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    uint64_t v11 = a2;
    uint64_t v8 = *(void *)(*(void *)(v3 + 64) + 40);
    id v9 = a2;
    sub_10051B3EC((uint64_t)&v11, v8, &qword_101678290);
    return swift_continuation_throwingResume();
  }
}

id sub_1006540EC()
{
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = [v2 pathExtension];

  if (!v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  NSString v4 = [v1 stringByAppendingPathComponent:v3];

  if (!v4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = *(void **)(v0 + 16);
  id v6 = [v5 entryForName:v4];

  if (!v6) {
    return 0;
  }
  id v7 = [v5 readChannelForEntry:v6];

  return v7;
}

uint64_t sub_100654220()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

id sub_100654268()
{
  NSString v1 = *(void **)(*(void *)v0 + 16);
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 entryForName:v2];

  if (!v3) {
    return 0;
  }
  id v4 = [v1 readChannelForEntry:v3];

  return v4;
}

id sub_100654300()
{
  NSString v1 = *(void **)(*(void *)v0 + 16);
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 entryForName:v2];

  if (!v3) {
    return 0;
  }
  id v4 = [v1 readChannelForEntry:v3];

  return v4;
}

id sub_100654398()
{
  return sub_1006540EC();
}

uint64_t sub_1006543BC()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLFileReadAssistant()
{
  return self;
}

uint64_t type metadata accessor for CRLFileReadAssistant.ReadCoordinatorChannelProvider()
{
  return self;
}

uint64_t sub_100654444()
{
  NSString v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *NSString v1 = v0;
  v1[1] = sub_1006544D0;
  return sub_100654BB4();
}

uint64_t sub_1006544D0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 24) = a1;
  swift_task_dealloc();
  if (v1)
  {
    id v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_100654604, 0, 0);
  }
}

uint64_t sub_100654604()
{
  v0[4] = *(void *)(v0[3] + 24);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10065469C;
  return sub_100B905B4();
}

uint64_t sub_10065469C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1006548D4;
  }
  else
  {
    *(void *)(v4 + 56) = a1;
    uint64_t v5 = sub_1006547C4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1006547C4()
{
  if (sub_1002094B0(v0[7]))
  {
    sub_1005F7CE8();
    swift_allocError();
    *uint64_t v1 = 14;
    swift_willThrow();
    swift_release();
    NSString v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v0[8] = v4;
    void *v4 = v0;
    v4[1] = sub_100654938;
    return sub_100B8FD00();
  }
}

uint64_t sub_1006548D4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100654938(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 72) = a1;
  *(void *)(v3 + 80) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_100654B50;
  }
  else {
    uint64_t v4 = sub_100654A4C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100654A4C()
{
  type metadata accessor for CRLBoard(0);
  uint64_t v1 = swift_dynamicCastClass();
  if (v1)
  {
    uint64_t v2 = v1;
    swift_release();
    uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v3(v2);
  }
  else
  {
    swift_unknownObjectRelease();
    sub_1005F7CE8();
    swift_allocError();
    *uint64_t v5 = 1;
    swift_willThrow();
    swift_release();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_100654B50()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100654BB4()
{
  v1[2] = v0;
  uint64_t v2 = type metadata accessor for URL();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return _swift_task_switch(sub_100654C74, 0, 0);
}

uint64_t sub_100654C74()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_readAssistant;
  v0[6] = OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_readAssistant;
  uint64_t v3 = *(void *)(v1 + v2);
  if (v3)
  {
    swift_retain();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
    return v4(v3);
  }
  else
  {
    (*(void (**)(void, uint64_t, void))(v0[4] + 16))(v0[5], v1 + OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_url, v0[3]);
    uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_store);
    uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_context);
    uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_options);
    type metadata accessor for CRLFileReadAssistant();
    swift_allocObject();
    id v9 = v6;
    id v10 = v7;
    uint64_t v11 = (void *)swift_task_alloc();
    v0[7] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_100654E28;
    uint64_t v12 = v0[5];
    return sub_100653904(v12, (uint64_t)v9, (uint64_t)v10, 0x6472616F62, 0xE500000000000000, 0x617461646174656DLL, 0xE800000000000000, v8);
  }
}

uint64_t sub_100654E28(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100654FDC;
  }
  else
  {
    *(void *)(v4 + 72) = a1;
    uint64_t v5 = sub_100654F50;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100654F50()
{
  *(void *)(v0[2] + v0[6]) = v0[9];
  swift_retain();
  swift_release();
  uint64_t v1 = v0[9];
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t sub_100654FDC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006551A8(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  void *v4 = v2;
  v4[1] = sub_100655250;
  return sub_100654444();
}

uint64_t sub_100655250(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void **)(*v2 + 16);
  uint64_t v7 = *v2;
  swift_task_dealloc();

  uint64_t v8 = *(void (***)(void, void, void))(v5 + 24);
  if (v3)
  {
    id v9 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
    ((void (**)(void, void, void *))v8)[2](v8, 0, v9);

    _Block_release(v8);
  }
  else
  {
    ((void (**)(void, void *, void))v8)[2](v8, a1, 0);
    _Block_release(v8);
  }
  id v10 = *(uint64_t (**)(void))(v7 + 8);
  return v10();
}

uint64_t sub_100655558(const void *a1, void *a2)
{
  v2[2] = a2;
  sub_1005057FC((uint64_t *)&unk_101674520);
  v2[3] = swift_task_alloc();
  v2[4] = swift_task_alloc();
  v2[5] = _Block_copy(a1);
  a2;
  uint64_t v5 = (void *)swift_task_alloc();
  void v2[6] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100655650;
  return sub_100654BB4();
}

uint64_t sub_100655650(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 56) = a1;
  swift_task_dealloc();
  if (v1)
  {

    uint64_t v4 = *(void (***)(void, void, void))(v3 + 40);
    uint64_t v5 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
    ((void (**)(void, void, void *))v4)[2](v4, 0, v5);

    _Block_release(v4);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v3 + 8);
    return v6();
  }
  else
  {
    return _swift_task_switch(sub_1006557E8, 0, 0);
  }
}

uint64_t sub_1006557E8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100655884;
  uint64_t v2 = *(void *)(v0 + 32);
  return sub_100B90A34(v2);
}

uint64_t sub_100655884()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100655B10;
  }
  else {
    uint64_t v2 = sub_100655998;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100655998()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = (void *)v0[2];
  swift_release();
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v1, 0, 1, v4);

  sub_10051B3EC(v1, v2, (uint64_t *)&unk_101674520);
  Class isa = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) != 1)
  {
    uint64_t v7 = v0[3];
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v8 = (void (**)(void, void, void))v0[5];
  ((void (**)(void, Class, void))v8)[2](v8, isa, 0);
  _Block_release(v8);

  swift_task_dealloc();
  swift_task_dealloc();
  id v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100655B10()
{
  uint64_t v1 = (void *)v0[2];
  swift_release();

  uint64_t v2 = (void (**)(void, void, void))v0[5];
  uint64_t v3 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  ((void (**)(void, void, void *))v2)[2](v2, 0, v3);

  _Block_release(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100655CA0()
{
  return type metadata accessor for CRLBoardFileReadAssistant();
}

uint64_t type metadata accessor for CRLBoardFileReadAssistant()
{
  uint64_t result = qword_101678248;
  if (!qword_101678248) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100655CF4()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFileReadAssistantOptions()
{
  return &type metadata for CRLFileReadAssistantOptions;
}

unint64_t sub_100655DC0()
{
  unint64_t result = qword_101678258;
  if (!qword_101678258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101678258);
  }
  return result;
}

unint64_t sub_100655E18()
{
  unint64_t result = qword_101678260;
  if (!qword_101678260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101678260);
  }
  return result;
}

unint64_t sub_100655E70()
{
  unint64_t result = qword_101678268;
  if (!qword_101678268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101678268);
  }
  return result;
}

unint64_t sub_100655EC8()
{
  unint64_t result = qword_101678270;
  if (!qword_101678270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_101678270);
  }
  return result;
}

void *sub_100655F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_100655F3C(a1, a2, a3, a4, a5, (uint64_t (*)(void))type metadata accessor for CRLItemProviderReadAssistant.ReadCoordinatorChannelProvider, (uint64_t)&off_10150AC90);
}

void *sub_100655F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t (*a6)(void), uint64_t a7)
{
  uint64_t v20[3] = a6(0);
  v20[4] = a7;
  v20[0] = a1;
  uint64_t v13 = (char *)a5 + OBJC_IVAR____TtC8Freeform36CRLSerializableObjectReadCoordinator_metadata;
  uint64_t v14 = type metadata accessor for CRLProto_ObjectMetadata(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_1005498A4((uint64_t)v20, (uint64_t)(a5 + 2));
  a5[7] = a2;
  a5[8] = a3;
  a5[9] = a4;
  uint64_t v15 = (objc_class *)type metadata accessor for CRLUUIDRemapHelper();
  uint64_t v16 = objc_allocWithZone(v15);
  *(void *)&v16[OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_objectUUIDMap] = _swiftEmptyDictionarySingleton;
  *(void *)&v16[OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_assetUUIDMap] = _swiftEmptyDictionarySingleton;
  v16[OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_shouldResetObjectUUIDs] = (a4 & 4) != 0;
  v19.receiver = v16;
  v19.super_class = v15;
  [super init];
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v20);
  a5[10] = v17;
  return a5;
}

unint64_t sub_100656064()
{
  unint64_t result = qword_1016725C0;
  if (!qword_1016725C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1016725C0);
  }
  return result;
}

uint64_t sub_1006560A8()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100528488;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_101678298 + dword_101678298);
  return v5(v2, v3);
}

uint64_t sub_100656160()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006561A0()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100528D08;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1016782A8 + dword_1016782A8);
  return v5(v2, v3);
}

uint64_t sub_100656250()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100528D08;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_10169FAA8 + dword_10169FAA8);
  return v6(v2, v3, v4);
}

uint64_t sub_100656314(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_10169FAB8 + dword_10169FAB8);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1006563E0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100656428()
{
  type metadata accessor for CRLTaskQueue.CRLWrappedTaskProvider();

  return static UUID.== infix(_:_:)();
}

uint64_t sub_10065647C()
{
  return sub_100656428();
}

uint64_t sub_10065648C()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLTaskQueue()
{
  return sub_100568E70();
}

uint64_t sub_1006564DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_1006564E4()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_100656580(void *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    uint64_t v7 = *(int *)(a3 + 44);
    uint64_t v8 = (char *)a1 + v7;
    id v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for UUID();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_retain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_100656668(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_1006566E0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 44);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for UUID();
  id v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_retain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_100656778(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = (char *)a1 + v7;
  id v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_OWORD *sub_10065680C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 44);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *sub_100656888(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 44);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_100656914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100656928);
}

uint64_t sub_100656928(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1006569D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006569EC);
}

void *sub_1006569EC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    void *result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 44);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for CRLTaskQueue.CRLWrappedTaskProvider()
{
  return sub_100568E70();
}

__n128 sub_100656AAC()
{
  __asm { FMOV            V0.2D, #12.0 }
  xmmword_10171A240 = (__int128)result;
  *(__n128 *)&qword_10171A250 = result;
  return result;
}

double sub_100656AC0()
{
  double result = 0.0;
  __asm { FMOV            V1.2D, #16.0 }
  xmmword_1016783C8 = xmmword_101185EE0;
  *(_OWORD *)&qword_1016783D8 = _Q1;
  return result;
}

char *sub_100656ADC(void *a1, void *a2, char a3, char a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v15 = OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_widthAnchorConstraint] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_contentView] = a1;
  uint64_t v16 = *(void **)&v7[v15];
  *(void *)&v7[v15] = a2;
  id v17 = v7;
  id v18 = a1;
  id v19 = a2;

  v17[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_useNavigationControllerWidth] = a3;
  *(double *)&v17[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_bottomPadding] = a7;
  v17[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_useUCBMargins] = a4;
  uint64_t v20 = &v17[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate];
  *(void *)uint64_t v20 = a5;
  *((void *)v20 + 1) = a6;
  swift_unknownObjectRetain();

  v23.receiver = v17;
  v23.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
  uint64_t v21 = (char *)[v23 initWithNibName:0 bundle:0];
  if (*(void *)&v21[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder])
  {
    swift_unknownObjectWeakAssign();
  }
  swift_unknownObjectRelease();
  return v21;
}

uint64_t sub_100656D34()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_contentView;
  [*(id *)(v0 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_contentView) setLayoutMarginsRelativeArrangement:1];
  uint64_t v3 = *(void **)(v0 + v2);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_useUCBMargins) == 1)
  {
    uint64_t v4 = qword_10166EDE0;
    id v5 = v3;
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v6 = (double *)&xmmword_1016783C8;
  }
  else
  {
    uint64_t v7 = qword_10166EDD8;
    id v8 = v3;
    if (v7 != -1) {
      swift_once();
    }
    uint64_t v6 = (double *)&xmmword_10171A240;
  }
  [v3 setDirectionalLayoutMargins:*v6, v6[1], v6[2], v6[3]];

  id v9 = *(id *)(v1 + v2);
  sub_10065710C(v9);

  sub_1005057FC((uint64_t *)&unk_10168D9A0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10117E810;
  *(void *)(v10 + 32) = type metadata accessor for UITraitUserInterfaceStyle();
  *(void *)(v10 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  if (*(void *)(v1 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate))
  {
    uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = (double *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 + 8) + 32))(v1, ObjectType);
  }
  else
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  sub_1006E2210((uint64_t)v13);
  UIViewController.registerForTraitChanges<A>(_:handler:)();
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

void sub_10065710C(id a1)
{
  uint64_t v2 = v1;
  id v4 = [v1 view];
  if (!v4)
  {
    __break(1u);
    goto LABEL_41;
  }
  id v5 = v4;
  uint64_t v6 = self;
  id v7 = [v6 systemBackgroundColor];
  [v5 setBackgroundColor:v7];

  id v8 = [v2 view];
  if (!v8)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  id v9 = v8;
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v10 = [v6 systemBackgroundColor];
  [a1 setBackgroundColor:v10];

  [a1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v11 = [v2 view];
  if (!v11)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v12 = v11;
  [v11 addSubview:a1];

  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10117FBD0;
  id v14 = [v2 view];
  if (!v14)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v15 = v14;
  id v16 = [v14 safeAreaLayoutGuide];

  id v17 = [v16 topAnchor];
  id v18 = [a1 topAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18];

  *(void *)(v13 + 32) = v19;
  id v20 = [v2 view];
  if (!v20)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v21 = v20;
  id v22 = [v20 safeAreaLayoutGuide];

  id v23 = [v22 bottomAnchor];
  id v24 = [a1 bottomAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24 constant:*(double *)&v2[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_bottomPadding]];

  *(void *)(v13 + 40) = v25;
  id v26 = [v2 view];
  if (!v26)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v27 = v26;
  id v28 = [v26 leadingAnchor];

  id v29 = [a1 leadingAnchor];
  id v30 = [v28 constraintEqualToAnchor:v29];

  *(void *)(v13 + 48) = v30;
  uint64_t v77 = v13;
  specialized Array._endMutation()();
  unint64_t v31 = v13;
  if (v2[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_useNavigationControllerWidth] != 1) {
    goto LABEL_17;
  }
  id v32 = [v2 navigationController];
  if (!v32) {
    goto LABEL_17;
  }
  uint64_t v33 = v32;
  id v34 = [v32 view];

  if (!v34)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  [v34 frame];
  CGFloat v36 = v35;
  CGFloat v38 = v37;
  CGFloat v40 = v39;
  CGFloat v42 = v41;

  v79.origin.double x = v36;
  v79.origin.double y = v38;
  v79.size.double width = v40;
  v79.size.double height = v42;
  double Width = CGRectGetWidth(v79);
  id v44 = [v2 view];
  if (!v44)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  uint64_t v45 = v44;
  id v46 = [v44 widthAnchor];

  id v47 = [v46 constraintEqualToConstant:Width];
  uint64_t v48 = OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_widthAnchorConstraint;
  uint64_t v49 = *(void **)&v2[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_widthAnchorConstraint];
  *(void *)&v2[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_widthAnchorConstraint] = v47;

  uint64_t v50 = *(void **)&v2[v48];
  if (!v50)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  id v51 = v50;
  id v52 = [a1 widthAnchor];
  id v53 = [v2 view];
  if (!v53)
  {
LABEL_52:
    __break(1u);
    return;
  }
  uint64_t v54 = v53;
  id v55 = [v53 widthAnchor];

  a1 = [v52 constraintEqualToAnchor:v55];
  if (v31 >> 62) {
    goto LABEL_37;
  }
  uint64_t v2 = *(char **)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
  for (id i = v2 + 2; __OFADD__(v2, 2); id i = v2 + 2)
  {
    __break(1u);
LABEL_17:
    id v57 = [v2 view];
    if (!v57) {
      goto LABEL_46;
    }
    uint64_t v58 = v57;
    id v59 = [v57 widthAnchor];

    if (*(void *)&v2[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate])
    {
      uint64_t v60 = *(void *)&v2[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate + 8];
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v60 + 104))(ObjectType, v60);
    }
    else
    {
      if (qword_10166EDF0 != -1) {
        swift_once();
      }
      double v62 = *(double *)&qword_10171A278;
    }
    id v63 = [v59 constraintEqualToConstant:v62];

    uint64_t v64 = OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_widthAnchorConstraint;
    uint64_t v65 = *(void **)&v2[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_widthAnchorConstraint];
    *(void *)&v2[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_widthAnchorConstraint] = v63;

    objc_super v66 = *(void **)&v2[v64];
    if (!v66) {
      goto LABEL_47;
    }
    id v51 = v66;
    id v67 = [a1 widthAnchor];
    id v68 = [v2 view];
    if (!v68) {
      goto LABEL_48;
    }
    uint64_t v69 = v68;
    id v70 = [v68 widthAnchor];

    a1 = [v67 constraintEqualToAnchor:v70];
    if (v31 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v75 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      id i = (char *)(v75 + 2);
      if (!__OFADD__(v75, 2)) {
        break;
      }
    }
    else
    {
      uint64_t v71 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id i = (char *)(v71 + 2);
      if (!__OFADD__(v71, 2)) {
        break;
      }
    }
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    uint64_t v2 = (char *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  sub_101044ABC(i, 1);
  specialized Array._endMutation()();
  id v72 = v51;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v73 = a1;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  uint64_t v74 = self;
  sub_10050BF48(0, (unint64_t *)&qword_101674200);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v74 activateConstraints:isa];
}

void sub_100657940()
{
  uint64_t v1 = v0;
  v28.receiver = v0;
  v28.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
  [super viewDidLayoutSubviews];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_widthAnchorConstraint];
  if (v2)
  {
    if (v0[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_useNavigationControllerWidth] == 1)
    {
      id v3 = v2;
      id v4 = [v1 navigationController];
      if (!v4) {
        goto LABEL_17;
      }
      id v5 = v4;
      id v6 = [v4 view];

      if (!v6)
      {
        __break(1u);
        return;
      }
      [v6 frame];
      CGFloat v8 = v7;
      CGFloat v10 = v9;
      CGFloat v12 = v11;
      CGFloat v14 = v13;

      v29.origin.double x = v8;
      v29.origin.double y = v10;
      v29.size.double width = v12;
      v29.size.double height = v14;
      double Width = CGRectGetWidth(v29);
      [v3 constant];
      if (Width == v16) {
        goto LABEL_17;
      }
    }
    else if (*(void *)&v0[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate])
    {
      uint64_t v17 = *(void *)&v0[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate + 8];
      uint64_t ObjectType = swift_getObjectType();
      id v19 = *(double (**)(uint64_t, uint64_t))(v17 + 104);
      id v20 = v2;
      double v21 = v19(ObjectType, v17);
      [v20 constant];
      if (v21 == v22)
      {
LABEL_17:

        return;
      }
      uint64_t v23 = swift_getObjectType();
      double Width = v19(v23, v17);
    }
    else
    {
      uint64_t v24 = qword_10166EDF0;
      id v25 = v2;
      if (v24 != -1) {
        swift_once();
      }
      double v26 = *(double *)&qword_10171A278;
      [v25 constant];
      if (v26 == v27) {
        goto LABEL_17;
      }
      if (qword_10166EDF0 != -1) {
        swift_once();
      }
      double Width = *(double *)&qword_10171A278;
    }
    [v2 setConstant:Width];
    sub_100657BE4();
    goto LABEL_17;
  }
}

uint64_t sub_100657BE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder];
  if (v2 && ((*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x110))() & 1) != 0)
  {
    id v3 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0xF8);
    id v4 = v2;
    id v5 = (void *)v3();
    if (v5)
    {
      id v6 = v5;
      sub_1006580C8(v5, v4);

      id v4 = v6;
    }
  }
  double v7 = self;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100659308;
  *(void *)(v9 + 24) = v8;
  v14[4] = sub_100659320;
  v14[5] = v9;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = *(void *)"";
  void v14[2] = sub_1006D9628;
  v14[3] = &unk_10150D570;
  CGFloat v10 = _Block_copy(v14);
  id v11 = v1;
  swift_retain();
  swift_release();
  [v7 performWithoutAnimation:v10];
  _Block_release(v10);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

void sub_100657DF0(void *a1)
{
  id v2 = [a1 navigationController];
  if (v2)
  {
    id v17 = v2;
    id v3 = [a1 navigationController];
    id v4 = [v3 visibleViewController];

    if (v4)
    {
      sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
      id v5 = a1;
      id v6 = v4;
      char v7 = static NSObject.== infix(_:_:)();

      if (v7)
      {
        sub_100657F44(v8, v9, v10, v11);
        double v13 = v12;
        double v15 = v14;
        [v17 setPreferredContentSize:];
        id v16 = [v17 parentViewController];
        [v16 setPreferredContentSize:v13, v15];
      }
    }
  }
}

void sub_100657F44(double a1, double a2, double a3, double a4)
{
  id v5 = v4;
  if (v4[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_useNavigationControllerWidth] != 1
    || (id v6 = [v4 navigationController]) == 0)
  {
    if (*(void *)&v4[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate])
    {
      uint64_t v18 = *(void *)&v4[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate + 8];
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v18 + 104))(ObjectType, v18);
    }
    else
    {
      if (qword_10166EDF0 != -1) {
        swift_once();
      }
      double Width = *(double *)&qword_10171A278;
    }
    goto LABEL_10;
  }
  char v7 = v6;
  id v8 = [v6 view];

  if (v8)
  {
    [v8 frame];
    CGFloat v10 = v9;
    CGFloat v12 = v11;
    CGFloat v14 = v13;
    CGFloat v16 = v15;

    v20.origin.double x = v10;
    v20.origin.double y = v12;
    v20.size.double width = v14;
    v20.size.double height = v16;
    double Width = CGRectGetWidth(v20);
LABEL_10:
    LODWORD(a3) = 1148846080;
    LODWORD(a4) = 1112014848;
    [*(id *)&v5[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_contentView] systemLayoutSizeFittingSize:Width withHorizontalFittingPriority:UILayoutFittingCompressedSize.height verticalFittingPriority:a3, a4];
    return;
  }
  __break(1u);
}

uint64_t sub_1006580C8(void *a1, void *a2)
{
  id v3 = v2;
  uint64_t v6 = *(void *)&v2[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate];
  if (v6)
  {
    uint64_t v7 = *(void *)&v2[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate + 8];
    uint64_t ObjectType = swift_getObjectType();
    v21[0] = v6;
    uint64_t v9 = *(void *)(v7 + 8);
    CGFloat v10 = *(void (**)(void *, char *, uint64_t, uint64_t))(v9 + 8);
    swift_unknownObjectRetain();
    v10(a1, v3, ObjectType, v9);
    swift_unknownObjectRelease();
  }
  double v11 = *(void **)&v3[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder];
  *(void *)&v3[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder] = a2;
  id v12 = a2;

  double v13 = self;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v3;
  *(void *)(v14 + 24) = a1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1006592B8;
  *(void *)(v15 + 24) = v14;
  v21[4] = sub_100659320;
  v21[5] = v15;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = *(void *)"";
  void v21[2] = sub_1006D9628;
  v21[3] = &unk_10150D4F8;
  CGFloat v16 = _Block_copy(v21);
  id v17 = v3;
  id v18 = a1;
  swift_retain();
  swift_release();
  [v13 performWithoutAnimation:v16];
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

void sub_1006582C4(char *a1, void *a2)
{
  uint64_t v4 = OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_contentView;
  [*(id *)&a1[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_contentView] removeFromSuperview];
  uint64_t v5 = OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_widthAnchorConstraint;
  uint64_t v6 = *(void **)&a1[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_widthAnchorConstraint];
  if (v6)
  {
    id v7 = v6;
    id v8 = [a1 view];
    if (!v8)
    {
LABEL_18:
      __break(1u);
      return;
    }
    uint64_t v9 = v8;
    [v8 removeConstraint:v7];

    CGFloat v10 = *(void **)&a1[v5];
    *(void *)&a1[v5] = 0;
  }
  double v11 = *(void **)&a1[v4];
  *(void *)&a1[v4] = a2;
  id v12 = a2;

  [v12 setLayoutMarginsRelativeArrangement:1];
  if (a1[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_useUCBMargins] == 1)
  {
    if (qword_10166EDE0 != -1) {
      swift_once();
    }
    double v13 = (double *)&xmmword_1016783C8;
  }
  else
  {
    if (qword_10166EDD8 != -1) {
      swift_once();
    }
    double v13 = (double *)&xmmword_10171A240;
  }
  [v12 setDirectionalLayoutMargins:*v13, v13[1], v13[2], v13[3]];
  sub_10065710C(v12);
  id v14 = [a1 view];
  if (!v14)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v15 = v14;
  [v14 setNeedsLayout];

  id v16 = [a1 view];
  if (!v16)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v17 = v16;
  [v16 layoutIfNeeded];
}

id sub_1006584F4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
  [super dealloc];
}

uint64_t type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController()
{
  return self;
}

uint64_t sub_1006585B8(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  sub_1006580C8(a2, a3);
  sub_100657F44(v8, v9, v10, v11);
  *a4 = v12;
  a4[1] = v13;
  return sub_1006580C8(a5, a3);
}

uint64_t sub_10065860C(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  swift_beginAccess();
  [a1 setPreferredContentSize:*(double *)(a2 + 16), *(double *)(a2 + 24)];
  id v9 = [a1 parentViewController];
  if (v9)
  {
    double v10 = v9;
    swift_beginAccess();
    [v10 setPreferredContentSize:*(double *)(a2 + 16), *(double *)(a2 + 24)];
  }
  return sub_1006580C8(a4, a5);
}

uint64_t sub_1006586DC(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(*v2 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
  if (!v3) {
    return 0;
  }
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v3) + 0x180);
  id v7 = v3;
  LOBYTE(a2) = v6(a1, a2);

  return a2 & 1;
}

uint64_t sub_100658784()
{
  uint64_t v1 = *(void **)(*v0 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
  if (v1) {
    return (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x188))() & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1006587FC()
{
  uint64_t v1 = *(void **)(*v0 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
  if (!v1) {
    return 0;
  }
  objc_super v2 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x190);
  id v3 = v1;
  LOBYTE(v2) = v2();

  return v2 & 1;
}

uint64_t sub_10065888C()
{
  return sub_100658B5C();
}

uint64_t sub_1006588B0(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(*v2 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
  if (!v3) {
    return 0;
  }
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v3) + 0x1C0);
  id v7 = v3;
  LOBYTE(a2) = v6(a1, a2);

  return a2 & 1;
}

uint64_t sub_100658958(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(*v2 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
  if (!v3) {
    return 0;
  }
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v3) + 0x1C8);
  id v7 = v3;
  LOBYTE(a2) = v6(a1, a2);

  return a2 & 1;
}

void sub_100658A00(char *a1, id a2)
{
  if (*(void *)&a1[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate])
  {
    uint64_t v4 = *(void *)&a1[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate + 8];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v6 = *(void *)(v4 + 8);
    id v7 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 24);
    swift_unknownObjectRetain();
    v7(a1, ObjectType, v6);
    swift_unknownObjectRelease();
  }
  unsigned int v8 = [a2 crl_isUserInterfaceStyleDark];
  id v9 = [a1 traitCollection];
  unsigned int v10 = [v9 crl_isUserInterfaceStyleDark];

  if (v8 != v10)
  {
    double v11 = *(void **)&a1[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder];
    if (v11)
    {
      uint64_t v12 = *(uint64_t (**)(void))((swift_isaMask & *v11) + 0xF8);
      uint64_t v13 = v11;
      id v14 = (void *)v12();
      if (v14)
      {
        uint64_t v15 = v14;
        sub_1006580C8(v14, v13);

        uint64_t v13 = v15;
      }
    }
  }
}

uint64_t sub_100658B5C()
{
  uint64_t v1 = v0;
  objc_super v2 = (char *)OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_contentView;
  id v3 = &selRef_addCullingListener_;
  id v4 = [*(id *)&v0[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_contentView] arrangedSubviews];
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  id v7 = *(void **)((char *)v1 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
  if (!v7) {
    goto LABEL_15;
  }
  unsigned int v8 = *(uint64_t (**)(void))((swift_isaMask & *v7) + 0xF8);
  id v9 = v7;
  uint64_t v10 = v8();
  if (!v10)
  {

LABEL_15:
    uint64_t v24 = 0;
    goto LABEL_16;
  }
  double v11 = (void *)v10;
  uint64_t v48 = v6;
  uint64_t v49 = v2;
  id v12 = *(id *)&v2[(void)v1];
  sub_100657F44(v13, v14, v15, v16);
  double v18 = v17;
  double v20 = v19;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 24) = 0;
  *(void *)(v21 + 16) = 0;
  double v22 = self;
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = v1;
  v23[3] = v11;
  v23[4] = v9;
  v23[5] = v21 + 16;
  v23[6] = v12;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_1006591D0;
  *(void *)(v24 + 24) = v23;
  uint64_t v54 = sub_1006591F0;
  id v55 = (void *)v24;
  aBlock = _NSConcreteStackBlock;
  uint64_t v51 = *(void *)"";
  id v52 = sub_1006D9628;
  id v53 = &unk_10150D430;
  id v25 = _Block_copy(&aBlock);
  id v47 = v9;
  objc_super v2 = (char *)v12;
  double v26 = v1;
  id v27 = v11;
  swift_retain();
  swift_release();
  [v22 performWithoutAnimation:v25];
  _Block_release(v25);
  LOBYTE(v25) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v25)
  {
    __break(1u);
    goto LABEL_29;
  }
  id v46 = v2;
  if (v18 == *(double *)(v21 + 16) && v20 == *(double *)(v21 + 24)) {
    goto LABEL_12;
  }
  id v28 = [v26 navigationController];
  id v29 = [v28 visibleViewController];

  if (!v29) {
    goto LABEL_12;
  }
  sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
  id v30 = v26;
  id v31 = v29;
  char v32 = static NSObject.== infix(_:_:)();

  if ((v32 & 1) == 0) {
    goto LABEL_12;
  }
  id v33 = [v30 navigationController];
  if (v33)
  {
    id v34 = v33;
    double v35 = (void *)swift_allocObject();
    v35[2] = v34;
    v35[3] = v21;
    v35[4] = v30;
    v35[5] = v27;
    v35[6] = v47;
    uint64_t v54 = sub_100659268;
    id v55 = v35;
    aBlock = _NSConcreteStackBlock;
    uint64_t v51 = *(void *)"";
    id v52 = sub_100679958;
    id v53 = &unk_10150D480;
    CGFloat v36 = _Block_copy(&aBlock);
    double v37 = v47;
    CGFloat v38 = v30;
    id v39 = v27;
    id v40 = v34;
    swift_retain();
    swift_release();
    [v22 animateWithDuration:v36 animations:0.3];

    _Block_release(v36);
    swift_release();
  }
  else
  {
LABEL_12:
    sub_1006580C8(v27, v47);
    swift_release();
  }
  uint64_t v24 = (uint64_t)sub_1006591D0;
  uint64_t v6 = v48;
  objc_super v2 = v49;
  id v3 = &selRef_addCullingListener_;
LABEL_16:
  id v41 = [*(id *)&v2[(void)v1] v3[359]];
  unint64_t v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v42 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v43 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v6 < v43)
  {
    if (qword_10166F678 == -1) {
      goto LABEL_23;
    }
    goto LABEL_29;
  }
  if (v43 < v6)
  {
    if (qword_10166F680 == -1)
    {
LABEL_23:
      NSString v44 = String._bridgeToObjectiveC()();
      CRLAccessibilityPostAnnouncementNotification(v1, v44);

      CRLAccessibilityPostLayoutChangedNotification(*(void **)&v2[(void)v1]);
      return sub_1005174AC(v24);
    }
LABEL_29:
    swift_once();
    goto LABEL_23;
  }
  return sub_1005174AC(v24);
}

uint64_t sub_100659170()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100659180()
{
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1006591D0()
{
  return sub_1006585B8(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_1006591E0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006591F0()
{
  return sub_1006D9600(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1006591F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100659208()
{
  return swift_release();
}

uint64_t sub_100659210()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100659268()
{
  return sub_10065860C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_100659278()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1006592B8()
{
  sub_1006582C4(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1006592C0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006592D0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100659308()
{
  sub_100657DF0(*(void **)(v0 + 16));
}

uint64_t sub_100659310()
{
  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100659340()
{
  unint64_t result = qword_101678448;
  if (!qword_101678448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101678448);
  }
  return result;
}

unint64_t sub_100659398()
{
  unint64_t result = qword_101678450;
  if (!qword_101678450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101678450);
  }
  return result;
}

uint64_t sub_1006593EC()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100659420()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10065943C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v69 = a1;
  uint64_t v1 = sub_1005057FC(&qword_101678470);
  __chkstk_darwin(v1 - 8, v2);
  double v62 = &v49[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v68 = type metadata accessor for InputConnectionBehavior();
  uint64_t v71 = *(void *)(v68 - 8);
  __chkstk_darwin(v68, v4);
  id v67 = &v49[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1005057FC(&qword_101673B38);
  __chkstk_darwin(v6 - 8, v7);
  Class v61 = &v49[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9, v10);
  objc_super v66 = &v49[-v11];
  uint64_t v12 = sub_1005057FC(&qword_101691F20);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v65 = &v49[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v15 - 8, v16);
  id v63 = &v49[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  double v22 = &v49[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = type metadata accessor for Locale();
  __chkstk_darwin(v23 - 8, v24);
  uint64_t v25 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v25 - 8, v26);
  uint64_t v64 = type metadata accessor for LocalizedStringResource();
  uint64_t v70 = *(void *)(v64 - 8);
  __chkstk_darwin(v64, v27);
  __chkstk_darwin(v28, v29);
  uint64_t v58 = &v49[-v30];
  uint64_t v60 = sub_1005057FC(&qword_101673B48);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v31 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  char v32 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v19 + 104);
  v32(v22, enum case for LocalizedStringResource.BundleDescription.main(_:), v18);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  unsigned int v50 = v31;
  uint64_t v52 = v18;
  v32(v22, v31, v18);
  uint64_t v51 = v32;
  uint64_t v53 = v19 + 104;
  id v33 = v63;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  id v34 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v70 + 56);
  v70 += 56;
  id v59 = v34;
  v34(v33, 0, 1, v64);
  uint64_t v35 = type metadata accessor for CRLBoardEntity();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v65, 1, 1, v35);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v32(v22, v31, v18);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  CGFloat v36 = v66;
  IntentDialog.init(_:)();
  uint64_t v37 = type metadata accessor for IntentDialog();
  uint64_t v38 = *(void *)(v37 - 8);
  id v39 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
  uint64_t v57 = v38 + 56;
  uint64_t v56 = v39;
  v39(v36, 0, 1, v37);
  v39(v61, 1, 1, v37);
  unsigned int v54 = enum case for InputConnectionBehavior.default(_:);
  id v40 = *(void (**)(void))(v71 + 104);
  v71 += 104;
  id v55 = (void (*)(unsigned char *, void, uint64_t))v40;
  v40(v67);
  sub_10065AC2C((unint64_t *)&qword_101673B60, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  id v41 = v63;
  *uint64_t v69 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  uint64_t v65 = (unsigned char *)sub_1005057FC(&qword_101678478);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v42 = v50;
  uint64_t v43 = v52;
  NSString v44 = v51;
  v51(v22, v50, v52);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v44(v22, v42, v43);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v59(v41, 0, 1, v64);
  uint64_t v45 = type metadata accessor for AttributedString();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v62, 1, 1, v45);
  v56(v66, 1, 1, v37);
  v55(v67, v54, v68);
  uint64_t v46 = IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)();
  id v47 = v69;
  v69[1] = v46;
  sub_1005057FC(&qword_101673B50);
  unint64_t v72 = 0xD00000000000001FLL;
  unint64_t v73 = 0x800000010123B260;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  void v47[2] = result;
  v47[6] = (uint64_t)&type metadata for CRLBoardItemInsertionPerformer;
  v47[7] = (uint64_t)&off_101527730;
  return result;
}

uint64_t sub_100659DF8(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  sub_1005057FC(&qword_101678470);
  v2[14] = swift_task_alloc();
  v2[15] = type metadata accessor for CRLBoardEntity();
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Logger();
  v2[18] = v3;
  v2[19] = *(void *)(v3 - 8);
  v2[20] = swift_task_alloc();
  return _swift_task_switch(sub_100659F28, 0, 0);
}

uint64_t sub_100659F28()
{
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = (id)static OS_os_log.appIntents;
  Logger.init(_:)();
  IntentParameter.wrappedValue.getter();
  IntentParameter.wrappedValue.getter();
  AppDependency.wrappedValue.getter();
  v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[6] = &off_10152F800;
  uint64_t v6 = (char *)&dword_1016966C0 + dword_1016966C0;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[21] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10065A090;
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[14];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, void *))v6)(6, v3, v4, v0 + 2);
}

uint64_t sub_10065A090(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 176) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 136);
    sub_10065ABCC(*(void *)(v4 + 112));
    sub_1005F6324(v5);
    uint64_t v6 = sub_10065A344;
  }
  else
  {
    uint64_t v7 = v4 + 16;
    uint64_t v8 = *(void *)(v4 + 136);
    uint64_t v9 = *(void *)(v4 + 112);

    sub_10065ABCC(v9);
    sub_1005F6324(v8);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v7);
    uint64_t v6 = sub_10065A1EC;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_10065A1EC()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[16];
  IntentParameter.wrappedValue.getter();
  v0[11] = IntentParameter.projectedValue.getter();
  sub_10065AC2C((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  sub_1005F6380();
  static IntentResult.result<A, B>(value:opensIntent:)();
  swift_release();
  sub_1005F6324(v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10065A344()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 2));
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error inserting sticky note: %@", v3, 0xCu);
    sub_1005057FC(&qword_101678028);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = v0[19];
  uint64_t v6 = v0[20];
  uint64_t v8 = v0[18];
  type metadata accessor for _PrebuiltAppIntentError();
  sub_10065AC2C((unint64_t *)&qword_101678490, (void (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError);
  swift_allocError();
  static _UnrecoverableError.unknownError.getter();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_10065A5B8()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  sub_100568B28(v9, qword_10171A260);
  sub_100556B74(v9, (uint64_t)qword_10171A260);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_10065A7B8()
{
  uint64_t v0 = sub_1005057FC(&qword_101678498);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v2 = sub_1005057FC(&qword_1016784A0);
  __chkstk_darwin(v2, v3);
  sub_10065AB78();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v4._object = (void *)0x8000000101242180;
  v4._countAndFlagsBits = 0xD000000000000015;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  sub_1005057FC(&qword_1016784A8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v5._countAndFlagsBits = 544175136;
  v5._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1005057FC(&qword_1016784B0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v6);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_10065A9A8@<X0>(uint64_t a1@<X8>)
{
  if (qword_10166EDE8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_100556B74(v2, (uint64_t)qword_10171A260);
  Swift::String v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_10065AA54(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528488;
  return sub_100659DF8(a1);
}

uint64_t sub_10065AAF0(uint64_t a1)
{
  unint64_t v2 = sub_10065AB78();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for CRLAddStickyNoteToBoardIntent()
{
  return &type metadata for CRLAddStickyNoteToBoardIntent;
}

uint64_t sub_10065AB3C()
{
  return sub_100523288(&qword_101678460, &qword_101678468);
}

unint64_t sub_10065AB78()
{
  unint64_t result = qword_101678480;
  if (!qword_101678480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_101678480);
  }
  return result;
}

uint64_t sub_10065ABCC(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101678470);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10065AC2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10065AC74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10065ACA0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

id sub_10065ACCC(char a1, char a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v5[OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_footerViewHeight] = 0;
  char v12 = a1 & 1;
  uint64_t v13 = &v5[OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_footerViewContentInsets];
  long long v14 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  *uint64_t v13 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  v13[1] = v14;
  uint64_t v15 = OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_coreLayout;
  type metadata accessor for CRLItemCollectionCoreFooterAwareLayout();
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = 0;
  *(void *)(v16 + 56) = 0;
  *(void *)(v16 + 32) = 0;
  *(void *)(v16 + 40) = 0;
  *(void *)(v16 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v5[v15] = v16;
  v5[OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_layoutStyle] = v12;
  v5[OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_containsInvitations] = a2;
  if (a5)
  {
    uint64_t v27 = a3;
    uint64_t v28 = a4;
    aBlock = _NSConcreteStackBlock;
    uint64_t v24 = *(void *)"";
    uint64_t v25 = sub_10065AEF4;
    uint64_t v26 = &unk_10150D668;
    uint64_t v17 = _Block_copy(&aBlock);
    swift_retain();
    id v18 = a5;
    swift_release();
    v21.receiver = v5;
    v21.super_class = ObjectType;
    id v19 = [super initWithSectionProvider:v17 configuration:v18];
    swift_release();
  }
  else
  {
    uint64_t v27 = a3;
    uint64_t v28 = a4;
    aBlock = _NSConcreteStackBlock;
    uint64_t v24 = *(void *)"";
    uint64_t v25 = sub_10065AEF4;
    uint64_t v26 = &unk_10150D640;
    uint64_t v17 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v22.receiver = v5;
    v22.super_class = ObjectType;
    id v19 = [super initWithSectionProvider:v17];
    swift_release();
  }
  _Block_release(v17);
  return v19;
}

id sub_10065AEF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  Swift::String v6 = (void *)v5(a2, a3);
  swift_release();
  swift_unknownObjectRelease();

  return v6;
}

uint64_t sub_10065AF98()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_coreLayout];
  *(void *)(v2 + 56) = &off_10150D620;
  swift_unknownObjectWeakAssign();
  double v3 = *(double *)&v0[OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_footerViewHeight];
  *(double *)(v2 + 24) = v3;
  *(unsigned char *)(v2 + 16) = v3 > 0.0;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  v6.receiver = v0;
  v6.super_class = ObjectType;
  swift_retain();
  [super prepareLayout];
  *(double *)(v2 + 32) = sub_10065B868();
  *(void *)(v2 + 40) = v4;
  return swift_release();
}

void *sub_10065B0D4()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v2 = result;
    v3.receiver = result;
    v3.super_class = ObjectType;
    swift_retain();
    [super collectionViewContentSize];

    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_10065B18C(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = (void *)Strong;
    swift_retain();
    id v12 = [v11 collectionView];

    if (v12)
    {
      [v12 bounds];
      double v14 = v13;
      double v16 = v15;
      swift_release();

      if (v14 != a3 || v16 != a4) {
        return 1;
      }
    }
    else
    {
      swift_release();
    }
  }
  v19.receiver = v4;
  v19.super_class = ObjectType;
  return (uint64_t)[super shouldInvalidateLayoutForBoundsChange:a1, a2, a3, a4];
}

uint64_t sub_10065B434()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  NSString v3 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v14.receiver = v1;
  v14.super_class = ObjectType;
  id v5 = [super layoutAttributesForSupplementaryViewOfKind:v3 atIndexPath:isa];

  if (!v5) {
    return 0;
  }
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_101177E70;
  *(void *)(inited + 32) = v5;
  unint64_t v13 = inited;
  specialized Array._endMutation()();
  id v7 = v5;
  swift_retain();
  unint64_t v8 = sub_10065BAEC(v13);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v8)
  {
    swift_release();

LABEL_12:
    return 0;
  }
  if (!(v8 >> 62))
  {
    if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v12)
  {
LABEL_11:
    swift_bridgeObjectRelease();

    swift_release();
    goto LABEL_12;
  }
LABEL_5:
  if ((v8 & 0xC000000000000001) != 0)
  {
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v10 = *(id *)(v8 + 32);
LABEL_8:
    id v11 = v10;
    swift_bridgeObjectRelease();

    swift_release();
    return (uint64_t)v11;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for CRLCollectionViewCompositionalLayout()
{
  return self;
}

double sub_10065B868()
{
  if (*(unsigned char *)(v0 + 16) != 1) {
    return 0.0;
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0.0;
  }
  uint64_t v2 = Strong;
  id v3 = [Strong collectionView];
  if (!v3)
  {

    return 0.0;
  }
  uint64_t v4 = v3;
  id v5 = (objc_class *)type metadata accessor for CRLCollectionViewCompositionalLayout();
  v26.receiver = v2;
  v26.super_class = v5;
  [super collectionViewContentSize];
  id v6 = [v4 superview];
  [v4 bounds];
  double v8 = v7;
  v25.receiver = v2;
  v25.super_class = v5;
  [super collectionViewContentSize];
  double v10 = v9;
  char v11 = sub_10065BA5C();
  if (v6)
  {
    char v12 = v11;
    [v6 bounds];
    if (v12) {
      double v14 = v10;
    }
    else {
      double v14 = v13;
    }
    if (v13 < v8) {
      double v10 = v14;
    }
    else {
      double v10 = v13;
    }
  }
  v24.receiver = v2;
  v24.super_class = v5;
  [super collectionViewContentSize];
  double v16 = v15;
  [v4 _effectiveContentInset];
  double v18 = v17;
  [v4 safeAreaInsets];
  double v20 = v10 - (v18 + v19);
  v27.origin.double x = sub_10065BDE4();
  double MinY = CGRectGetMinY(v27);
  v28.origin.double x = 0.0;
  v28.origin.double y = 0.0;
  v28.size.double width = v16;
  v28.size.double height = v20;
  if (MinY >= CGRectGetMaxY(v28)
    || (v29.origin.double x = sub_10065BDE4(),
        double MaxY = CGRectGetMaxY(v29),
        v30.origin.double x = 0.0,
        v30.origin.double y = 0.0,
        v30.size.double width = v16,
        v30.size.double height = v20,
        CGRectGetMaxY(v30) >= MaxY))
  {
  }
  else
  {
    v31.origin.double x = sub_10065BDE4();
    CGRectGetHeight(v31);
  }
  return v16;
}

unint64_t sub_10065BA5C()
{
  unint64_t result = (unint64_t)[v0 numberOfSections];
  if ((result & 0x8000000000000000) == 0)
  {
    unint64_t v2 = result;
    if (!result) {
      return 0;
    }
    id v3 = 0;
    uint64_t v4 = (char *)(result - 1);
    while ((char *)v2 != v3)
    {
      id v5 = [v0 numberOfItemsInSection:v3];
      BOOL v6 = (uint64_t)v5 <= 0;
      unint64_t result = (uint64_t)v5 > 0;
      if (!v6 || v4 == v3++) {
        return result;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10065BAEC(unint64_t a1)
{
  if (!a1) {
    return a1;
  }
  id v3 = (double *)v1;
  if (*(unsigned char *)(v1 + 16) != 1)
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  unint64_t v31 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v4 = result;
    if (result) {
      goto LABEL_5;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    unint64_t v15 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_39;
    }
    goto LABEL_23;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain_n();
  if (!v4) {
    goto LABEL_22;
  }
LABEL_5:
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v6 = 0;
  unint64_t v29 = 0x800000010123E270;
  do
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(a1 + 8 * v6 + 32);
    }
    double v8 = v7;
    id v9 = [v7 representedElementKind];
    if (!v9)
    {
LABEL_7:

      goto LABEL_8;
    }
    double v10 = v9;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    if (v11 == 0xD00000000000001DLL && v13 == v29)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0) {
        goto LABEL_7;
      }
    }
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
LABEL_8:
    ++v6;
  }
  while (v4 != v6);
  swift_bridgeObjectRelease();
  unint64_t v15 = v31;
  if ((v31 & 0x8000000000000000) == 0)
  {
LABEL_23:
    if ((v15 & 0x4000000000000000) != 0) {
      goto LABEL_39;
    }
    uint64_t v16 = *(void *)(v15 + 16);
    uint64_t result = swift_retain();
    if (v16) {
      goto LABEL_25;
    }
LABEL_40:
    swift_release_n();
    return a1;
  }
LABEL_39:
  swift_retain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v16 = result;
  if (!result) {
    goto LABEL_40;
  }
LABEL_25:
  if (v16 >= 1)
  {
    for (uint64_t i = 0; i != v16; ++i)
    {
      if ((v15 & 0xC000000000000001) != 0) {
        id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v26 = *(id *)(v15 + 8 * i + 32);
      }
      CGRect v27 = v26;
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        double v18 = (void *)Strong;
        double v19 = (objc_class *)type metadata accessor for CRLCollectionViewCompositionalLayout();
        v30.receiver = v18;
        v30.super_class = v19;
        [super collectionViewContentSize];
        double v21 = v20;
        double v23 = v22;

        if (v3[4] > v21) {
          double v24 = v3[4];
        }
        else {
          double v24 = v21;
        }
        if (v3[5] > v23) {
          double v25 = v3[5];
        }
        else {
          double v25 = v23;
        }
      }
      else
      {
        double v24 = 0.0;
        double v25 = 0.0;
      }
      [v27 setFrame:0.0, v25 - v3[3], v24];
    }
    goto LABEL_40;
  }
LABEL_43:
  __break(1u);
  return result;
}

double sub_10065BDE4()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    v4.receiver = Strong;
    v4.super_class = (Class)type metadata accessor for CRLCollectionViewCompositionalLayout();
    [super collectionViewContentSize];
  }
  unint64_t v2 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v2) {

  }
  return 0.0;
}

uint64_t sub_10065BEAC()
{
  sub_100523398(v0 + 48);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLItemCollectionCoreFooterAwareLayout()
{
  return self;
}

uint64_t sub_10065BF08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10065BF18()
{
  return swift_release();
}

unint64_t sub_10065BF20()
{
  unint64_t result = qword_101678668;
  if (!qword_101678668)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101678668);
  }
  return result;
}

void sub_10065BF60()
{
  *(void *)&v0[OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_footerViewHeight] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_footerViewContentInsets];
  long long v2 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  *(_OWORD *)uint64_t v1 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  *((_OWORD *)v1 + 1) = v2;
  uint64_t v3 = OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_coreLayout;
  type metadata accessor for CRLItemCollectionCoreFooterAwareLayout();
  uint64_t v4 = swift_allocObject();
  *(unsigned char *)(v4 + 16) = 0;
  *(void *)(v4 + 56) = 0;
  *(void *)(v4 + 32) = 0;
  *(void *)(v4 + 40) = 0;
  *(void *)(v4 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[v3] = v4;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

double *sub_10065C038(unint64_t a1, void *a2, void *a3)
{
  id v5 = sub_1006679C8(a1, (uint64_t)a2, (uint64_t)a3);

  return v5;
}

double *sub_10065C080(uint64_t a1)
{
  uint64_t v6 = _swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 40)
  {
    sub_10050BF84(i, (uint64_t)v5);
    sub_1005057FC(&qword_101673060);
    if (!swift_dynamicCast()) {
      break;
    }
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();
  swift_unknownObjectRelease();
  return 0;
}

double *sub_10065C188(unint64_t a1)
{
  return sub_10065C3E8(a1, (unint64_t)sub_1006BB884);
}

double *sub_10065C1A0(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v16 = _swiftEmptyArrayStorage;
  sub_1006BB8E4(0, v3 & ~(v3 >> 63), 0);
  uint64_t v4 = v16;
  if (!v2)
  {
    unint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      return v4;
    }
LABEL_7:
    for (uint64_t i = 4; ; ++i)
    {
      uint64_t v6 = i - 4;
      if ((a1 & 0xC000000000000001) != 0)
      {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v8 = i - 3;
        if (__OFADD__(v6, 1)) {
          goto LABEL_22;
        }
      }
      else
      {
        id v7 = *(id *)(a1 + 8 * i);
        uint64_t v8 = i - 3;
        if (__OFADD__(v6, 1))
        {
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
      }
      id v14 = v7;
      sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
      sub_1005057FC(&qword_1016787A8);
      if (!swift_dynamicCast())
      {
        uint64_t v13 = 0;
        memset(v12, 0, sizeof(v12));
        swift_release();
        sub_100522F00((uint64_t)v12, &qword_1016787B0);
        return 0;
      }
      sub_10053974C(v12, (uint64_t)v15);
      sub_10053974C(v15, (uint64_t)v12);
      uint64_t v4 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB8E4(0, *((void *)v4 + 2) + 1, 1);
        uint64_t v4 = v16;
      }
      unint64_t v10 = *((void *)v4 + 2);
      unint64_t v9 = *((void *)v4 + 3);
      if (v10 >= v9 >> 1)
      {
        sub_1006BB8E4(v9 > 1, v10 + 1, 1);
        uint64_t v4 = v16;
      }
      *((void *)v4 + 2) = v10 + 1;
      sub_10053974C(v12, (uint64_t)&v4[5 * v10 + 4]);
      if (v8 == v2) {
        return v4;
      }
    }
  }
  swift_bridgeObjectRetain();
  unint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v2) {
    goto LABEL_7;
  }
  return v4;
}

double *sub_10065C3D0(unint64_t a1)
{
  return sub_10065C3E8(a1, (unint64_t)sub_1006BBAC4);
}

double *sub_10065C3E8(unint64_t a1, unint64_t a2)
{
  unint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_40;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    ((void (*)(void, uint64_t, void))a2)(0, v5 & ~(v5 >> 63), 0);
    uint64_t v6 = _swiftEmptyArrayStorage;
    if (v4) {
      break;
    }
    unint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v6;
    }
LABEL_7:
    double v25 = (void (*)(BOOL, unint64_t, uint64_t))a2;
    if ((v3 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v9 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        uint64_t v10 = v8;
        swift_getObjectType();
        uint64_t v11 = swift_conformsToProtocol2();
        if (v11) {
          uint64_t v12 = v11;
        }
        else {
          uint64_t v12 = 0;
        }
        if (v11) {
          uint64_t v13 = v10;
        }
        else {
          uint64_t v13 = 0;
        }
        if (!v13)
        {
          swift_release();
          swift_unknownObjectRelease();
          return 0;
        }
        a2 = *(void *)&_swiftEmptyArrayStorage[2];
        double v14 = _swiftEmptyArrayStorage[3];
        if (a2 >= *(void *)&v14 >> 1) {
          v25(*(void *)&v14 > 1uLL, a2 + 1, 1);
        }
        *(void *)&_swiftEmptyArrayStorage[2] = a2 + 1;
        unint64_t v15 = &_swiftEmptyArrayStorage[2 * a2];
        *((void *)v15 + 4) = v13;
        *((void *)v15 + 5) = v12;
        if (v9 == v4) {
          return v6;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v16 = 0;
      id v26 = (char *)(v3 + 32);
      while (1)
      {
        uint64_t v17 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          break;
        }
        unint64_t v3 = *(void *)&v26[8 * v16];
        swift_getObjectType();
        uint64_t v18 = swift_conformsToProtocol2();
        if (v18) {
          uint64_t v19 = v18;
        }
        else {
          uint64_t v19 = 0;
        }
        if (v18) {
          unint64_t v20 = v3;
        }
        else {
          unint64_t v20 = 0;
        }
        if (!v20)
        {
          swift_release();
          return 0;
        }
        a2 = *(void *)&_swiftEmptyArrayStorage[2];
        double v21 = _swiftEmptyArrayStorage[3];
        id v22 = (id)v3;
        if (a2 >= *(void *)&v21 >> 1) {
          v25(*(void *)&v21 > 1uLL, a2 + 1, 1);
        }
        *(void *)&_swiftEmptyArrayStorage[2] = a2 + 1;
        double v23 = &_swiftEmptyArrayStorage[2 * a2];
        *((void *)v23 + 4) = v20;
        *((void *)v23 + 5) = v19;
        ++v16;
        if (v17 == v4) {
          return v6;
        }
      }
    }
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  unint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v4) {
    goto LABEL_7;
  }
  return v6;
}

double *sub_10065C650(unint64_t a1)
{
  uint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  specialized ContiguousArray.reserveCapacity(_:)();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        type metadata accessor for CRLShapeItem();
        if (!swift_dynamicCastClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v4 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        uint64_t v8 = *(void **)(v6 + 8 * v5);
        type metadata accessor for CRLShapeItem();
        uint64_t v9 = swift_dynamicCastClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        ++v5;
        if (v7 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    specialized ContiguousArray.reserveCapacity(_:)();
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10065C830()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting);
  id v2 = [v1 interactiveCanvasController];
  unint64_t v3 = v2;
  if (v2)
  {
    uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath);
    if (v4)
    {
      id v5 = v4;
      id v6 = [v3 infosForSelectionPath:v5];
      uint64_t v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v8 = sub_1006B99BC(v7);
      swift_bridgeObjectRelease();
      uint64_t v9 = sub_10065C080((uint64_t)v8);

      swift_release();
      if (v9)
      {
        id v10 = v3;
        uint64_t v11 = sub_100668568((unint64_t)v9, v10);
        swift_bridgeObjectRelease();

        unint64_t v3 = (void *)sub_100CDCFF0((unint64_t)v11);
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
    }
    else
    {
    }
    unint64_t v3 = 0;
  }
LABEL_8:
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath) = v3;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath);
  if (!v12)
  {
LABEL_14:
    uint64_t v17 = 0;
    goto LABEL_15;
  }
  id v13 = v12;
  id v14 = [v1 interactiveCanvasController];
  if (!v14)
  {

    goto LABEL_14;
  }
  unint64_t v15 = v14;
  id v16 = [v14 selectionModelTranslator];
  uint64_t v17 = v16;
  if (v16)
  {
    id v18 = [v16 boardItemsForSelectionPath:v13];

    type metadata accessor for CRLBoardItem(0);
    sub_100668520((unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
    uint64_t v17 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)();
  }
LABEL_15:
  uint64_t v19 = sub_1006686EC((unint64_t)v17);
  swift_bridgeObjectRelease();
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_flattenedBoardItemsForCurrentSelectionPath) = v19;

  return swift_bridgeObjectRelease();
}

void sub_10065CAB8()
{
  qword_10171A278 = 0x4074000000000000;
}

void sub_10065CAC8()
{
  qword_10171A280 = 0x4071800000000000;
}

char *sub_10065CADC(void *a1, id a2)
{
  *(void *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBuilder] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBaseButton] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBuilders] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBuilders] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBaseButtons] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasElementsBuilders] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_auxiliaryPresentedBuilder] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_flattenedBoardItemsForCurrentSelectionPath] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_secondLayerPresentedBuilder] = 0;
  v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldRepositionSecondLayerPopover] = 0;
  v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldUpdateSecondLayerPermittedArrowDirections] = 0;
  v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldUpdateSecondLayerPopoverPassthroughViews] = 0;
  v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_isUpdatingMiniFormatter] = 0;
  v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_isInProcessOfPresentingSecondLayerPopover] = 0;
  unint64_t result = (char *)[a2 respondsToSelector:"asiOSCVC"];
  if (result)
  {
    id v6 = v2;
    id v7 = [a2 asiOSCVC];
    *(void *)&v6[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController] = v7;

    return sub_10067999C((uint64_t)a2, a1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10065CCF4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  id v3 = [v2 traitCollection];
  if (objc_msgSend(self, "crl_phoneUI")) {
    uint64_t v4 = 1;
  }
  else {
    uint64_t v4 = [v3 crl_isCompactWidth];
  }

  return v4;
}

void sub_10065CD94(void *a1, void *a2)
{
  uint64_t v4 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC;
  if (!*(void *)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC))
  {
    uint64_t v8 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting);
    id v9 = a2;
    id v10 = [v8 interactiveCanvasController];
    if (v10)
    {
      uint64_t v11 = v10;
      id v12 = [v10 selectionModelTranslator];
      id v13 = v12;
      if (v12)
      {
        id v14 = [v12 boardItemsForSelectionPath:v9];

        type metadata accessor for CRLBoardItem(0);
        sub_100668520((unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
        id v13 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)();
      }
    }
    else
    {

      id v13 = 0;
    }
    sub_100E08C3C((uint64_t)v13);
    swift_bridgeObjectRelease();
    sub_10065D27C(v9, 1);
    uint64_t v19 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController);
    [v19 becomeFirstResponderIfAppropriate];
    return;
  }
  if (*(void *)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath))
  {
    id v6 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath);
    id v7 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
    if (!v7) {
      goto LABEL_25;
    }
    goto LABEL_11;
  }
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
  {
    sub_100509DA0((unint64_t)_swiftEmptyArrayStorage);
    id v6 = v20;
    id v7 = *(void **)(v2 + v4);
    if (!v7) {
      goto LABEL_25;
    }
  }
  else
  {
    id v6 = &_swiftEmptySetSingleton;
    id v7 = *(void **)(v2 + v4);
    if (!v7)
    {
LABEL_25:
      swift_bridgeObjectRetain();
LABEL_26:
      char v21 = sub_1006E61EC(a1, (uint64_t)v6);
      swift_bridgeObjectRelease();
      sub_10065DFD8(1, 1, (v21 & 1) == 0);
      if ((v21 & 1) == 0)
      {
        id v22 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting);
        id v23 = a2;
        id v24 = [v22 interactiveCanvasController];
        if (v24)
        {
          double v25 = v24;
          id v26 = [v24 selectionModelTranslator];
          CGRect v27 = v26;
          if (v26)
          {
            id v28 = [v26 boardItemsForSelectionPath:v23];

            type metadata accessor for CRLBoardItem(0);
            sub_100668520((unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
            CGRect v27 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)();
          }
        }
        else
        {

          CGRect v27 = 0;
        }
        sub_100E08C3C((uint64_t)v27);
        swift_bridgeObjectRelease();
        sub_10065D27C(v23, 1);
      }
      return;
    }
  }
LABEL_11:
  swift_bridgeObjectRetain();
  id v15 = v7;
  id v16 = [v15 traitCollection];
  if (objc_msgSend(self, "crl_phoneUI"))
  {
  }
  else
  {
    unsigned int v17 = [v16 crl_isCompactWidth];

    if (!v17)
    {

      goto LABEL_26;
    }
  }
  char v18 = sub_1006E61EC(a1, (uint64_t)v6);

  if ((v18 & 1) == 0) {
    goto LABEL_26;
  }

  swift_bridgeObjectRelease();
}

void sub_10065D27C(void *a1, int a2)
{
  id v3 = v2;
  uint64_t v5 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC;
  if (*(void *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC])
  {
    sub_10065DFD8(1, 0, 1);
    int v6 = 0;
  }
  else
  {
    int v6 = a2;
  }
  uint64_t v7 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath;
  uint64_t v8 = *(void **)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath];
  *(void *)&v3[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath] = a1;
  id v9 = a1;

  sub_10065C830();
  if (sub_10065DC7C())
  {
    uint64_t v10 = *(void *)&v3[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath];
    if (v10)
    {
      swift_bridgeObjectRetain();
      sub_100660088();
      sub_10065F454(0, 0);
      id v12 = v11;
      uint64_t v14 = v13;
      unint64_t v15 = *(void *)&v3[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBuilders];
      if (v15 >> 62)
      {
        id v23 = v11;
        swift_bridgeObjectRetain();
        if (_CocoaArrayWrapper.endIndex.getter())
        {
LABEL_8:
          if ((v15 & 0xC000000000000001) != 0)
          {
            char v18 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_59;
            }
            char v18 = (char *)*(id *)(v15 + 32);
          }
          uint64_t v19 = v18;
          swift_bridgeObjectRelease();
          id v20 = *(id *)&v19[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element];

          LOBYTE(v19) = [v20 options];
          double v21 = 6.0;
          if ((v19 & 4) != 0)
          {
LABEL_19:
            char v24 = sub_10065DA68(v12, v21, 6.0);

            if ((v24 & 1) == 0)
            {
              sub_10065F454(1, 0);
              id v26 = v25;
              uint64_t v14 = v27;

              id v12 = v26;
              LOBYTE(v26) = sub_10065DA68(v12, v21, 6.0);

              if ((v26 & 1) == 0)
              {
                sub_10065F454(1, 1uLL);
                unint64_t v29 = v28;
                uint64_t v14 = v30;

                id v12 = v29;
              }
            }
            unint64_t v31 = swift_bridgeObjectRetain();
            char v32 = (void *)sub_100CDD834(v31);
            swift_bridgeObjectRelease();
            unint64_t v33 = swift_bridgeObjectRetain();
            unint64_t v34 = sub_100CDD834(v33);
            swift_bridgeObjectRelease();
            sub_100ED9378(v34, v32);
            uint64_t v84 = v35;
            CGFloat v36 = *(void **)&v3[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBuilder];
            HIDWORD(v82) = v6;
            if (v36)
            {
              sub_100CBA298(v83, v36);

              uint64_t v37 = v84;
            }
            else
            {
              uint64_t v37 = v35;
            }
            uint64_t v38 = (void *)type metadata accessor for CRLiOSMiniFormatterPresenter();
            v83[3] = v38;
            v83[4] = &off_10150D748;
            v83[0] = v3;
            id v39 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterViewController());
            uint64_t v40 = sub_1005231B4((uint64_t)v83, (uint64_t)v38);
            __n128 v41 = __chkstk_darwin(v40, v40);
            uint64_t v43 = (uint64_t *)((char *)v83 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
            (*(void (**)(uint64_t *, __n128))(v44 + 16))(v43, v41);
            uint64_t v45 = *v43;
            swift_bridgeObjectRetain();
            id v46 = v12;
            swift_bridgeObjectRetain();
            id v47 = v3;
            id v48 = sub_100668C68(v10, v46, v14, v37, v45, v39, v21, 6.0);

            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v83);
            uint64_t v49 = *(void **)&v3[v5];
            *(void *)&v3[v5] = v48;

            unsigned int v50 = *(void **)&v3[v5];
            if (v50)
            {
              uint64_t v51 = v50;
              uint64_t v52 = sub_10099985C(v10);
              swift_bridgeObjectRelease();
              uint64_t v53 = *(void **)&v51[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_crlaxCurrentPresentedRep];
              *(void *)&v51[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_crlaxCurrentPresentedRep] = v52;

              unsigned int v54 = *(void **)&v47[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController];
              id v55 = [v54 traitCollection];
              if (objc_msgSend(self, "crl_phoneUI"))
              {
              }
              else
              {
                unsigned __int8 v56 = [v55 crl_isCompactWidth];

                if ((v56 & 1) == 0) {
                  goto LABEL_36;
                }
              }
              id v57 = [v54 presentedViewController];
              if (v57)
              {
                uint64_t v58 = v57;
                type metadata accessor for CRLScenesNavigatorViewController();
                if (!swift_dynamicCastClass() || ([v58 isBeingDismissed] & 1) != 0) {
                  goto LABEL_35;
                }
                id v59 = [v54 delegate];
                if (!v59)
                {
LABEL_63:
                  __break(1u);
                  return;
                }
                uint64_t v60 = v59;
                if ([v59 respondsToSelector:"dismissPresentedViewController"])
                {
                  [v60 dismissPresentedViewController];
                  swift_unknownObjectRelease();
LABEL_35:

                  goto LABEL_36;
                }

                swift_unknownObjectRelease();
              }
LABEL_36:
              id v61 = [v54 delegate];
              if (v61)
              {
                double v62 = v61;
                if ([v61 respondsToSelector:"viewControllerForMiniFormatterForCanvasViewController:"])
                {
                  id v63 = [v62 viewControllerForMiniFormatterForCanvasViewController:v54];
                  swift_unknownObjectRelease();
                  if (v63)
                  {
                    if (*(void *)&v3[v5])
                    {
                      [v63 addChildViewController:];
                      uint64_t v64 = *(void **)&v3[v5];
                      if (v64)
                      {
                        id v65 = v64;
                        swift_bridgeObjectRelease();
                        objc_super v66 = *(void **)&v3[v5];
                        if (v66)
                        {
                          id v67 = v66;
                          char v68 = sub_10093AD78();

                          char v69 = v68 ^ 1;
                        }
                        else
                        {
                          char v69 = 1;
                        }
                        sub_100936DCC((SEL *)v63, BYTE4(v82) & 1, v69 & 1);

                        goto LABEL_47;
                      }
                      goto LABEL_62;
                    }
LABEL_61:
                    __break(1u);
LABEL_62:
                    __break(1u);
                    goto LABEL_63;
                  }
                }
                else
                {
                  swift_unknownObjectRelease();
                }
                swift_bridgeObjectRelease();
LABEL_47:
                if ((v47[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_isUpdatingMiniFormatter] & 1) == 0) {
                  [v54 updateToolbarButtons];
                }
                id v70 = &_swiftEmptySetSingleton;
                v83[0] = &_swiftEmptySetSingleton;
                if (*(void *)&v3[v5])
                {
                  id v70 = sub_10065F00C();
                  v83[0] = v70;
                }
                uint64_t v71 = *(void **)&v47[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_auxiliaryPresentedBuilder];
                if (v71)
                {
                  unint64_t v72 = *(uint64_t (**)(void))((swift_isaMask & *v71) + 0x178);
                  unint64_t v73 = v71;
                  unint64_t v74 = v72();
                  sub_10057C1E4(v74);

                  id v70 = v83[0];
                }
                uint64_t v75 = *(void *)&v47[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects];
                *(void *)&v47[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects] = v70;
                uint64_t v76 = *(void **)&v47[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_changeNotifier];
                if (v76)
                {
                  uint64_t v77 = v47;
                  id v78 = v76;
                  sub_100667E58(v75, v78, (uint64_t)v77, (SEL *)&selRef_removeObserver_forChangeSource_);

                  CGRect v79 = v77;
                  id v80 = v78;
                  uint64_t v81 = swift_bridgeObjectRetain();
                  sub_100667E58(v81, v80, (uint64_t)v79, (SEL *)&selRef_addObserver_forChangeSource_);

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                else
                {

                  swift_bridgeObjectRelease();
                }
                return;
              }
LABEL_60:
              __break(1u);
              goto LABEL_61;
            }
LABEL_59:
            __break(1u);
            goto LABEL_60;
          }
LABEL_18:
          double v21 = 12.0;
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
        id v17 = v11;
        swift_bridgeObjectRetain();
        if (v16) {
          goto LABEL_8;
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
  id v22 = *(void **)&v3[v7];
  *(void *)&v3[v7] = 0;

  sub_10065C830();
}

uint64_t sub_10065DA68(void *a1, double a2, double a3)
{
  uint64_t v7 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController);
  id v8 = [v7 traitCollection];
  id v9 = self;
  if (objc_msgSend(v9, "crl_phoneUI"))
  {
  }
  else
  {
    unsigned __int8 v10 = [v8 crl_isCompactWidth];

    if ((v10 & 1) == 0) {
      return 1;
    }
  }
  if (objc_msgSend(v9, "crl_phoneUI")
    && (objc_msgSend(self, "crl_deviceIsLandscape") & 1) != 0)
  {
    return 1;
  }
  uint64_t result = (uint64_t)[*(id *)(v3 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting) interactiveCanvasController];
  if (result)
  {
    id v12 = (void *)result;
    [(id)result visibleScaledRectForCanvasUI];
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    CGFloat v18 = v17;
    CGFloat v20 = v19;

    uint64_t result = (uint64_t)[v7 canvasView];
    if (result)
    {
      double v21 = (void *)result;
      id v22 = [(id)result window];

      if (v22)
      {
        [v22 safeAreaInsets];
        double v24 = v23;
        double v26 = v25;

        v32.origin.double x = v14;
        v32.origin.double y = v16;
        v32.size.double width = v18;
        v32.size.double height = v20;
        double Width = CGRectGetWidth(v32);
        if (sub_1003E8750()) {
          double v28 = v24;
        }
        else {
          double v28 = v26;
        }
        if (sub_1003E8750()) {
          double v29 = v26;
        }
        else {
          double v29 = v24;
        }
        double v30 = Width - v28 - v29;
        [a1 systemLayoutSizeFittingSize:UILayoutFittingCompressedSize.width, UILayoutFittingCompressedSize.height];
        return v31 + a2 + a3 < v30;
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_10065DC7C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath);
  if (!v1) {
    return 0;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = __CocoaSet.count.getter();
    swift_bridgeObjectRelease();
    if (v2 < 1) {
      return 0;
    }
  }
  else if (*(uint64_t *)(v1 + 16) < 1)
  {
    return 0;
  }
  if (sub_100679B34()) {
    return 0;
  }
  id v3 = [*(id *)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting) interactiveCanvasController];
  if (v3)
  {
    uint64_t v4 = v3;
    unsigned __int8 v5 = [v3 documentIsSharedReadOnly];

    if (v5) {
      return 0;
    }
  }
  uint64_t result = (uint64_t)[*(id *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController) delegate];
  if (result)
  {
    uint64_t v7 = (void *)result;
    if ([(id)result respondsToSelector:"currentDocumentMode"])
    {
      id v8 = [v7 currentDocumentMode];
      swift_unknownObjectRelease();
      unsigned __int8 v9 = [v8 wantsToSuppressMiniFormatter];

      if (v9) {
        return 0;
      }
    }
    else
    {
      swift_unknownObjectRelease();
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"shouldShowMiniFormatterForCurrentSelectionPathAndDocumentMode", 61, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterPresenter.swift", 103, 2, 221, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"shouldShowMiniFormatterForCurrentSelectionPathAndDocumentMode", 61, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterPresenter.swift", 103, 2, 221);
    }
    return 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10065DFD8(char a1, char a2, char a3)
{
  uint64_t v4 = *(void **)&v3[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC];
  if (!v4) {
    return;
  }
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = a3 & 1;
  *(void *)(v8 + 24) = v3;
  *(void *)(v8 + 32) = v4;
  *(unsigned char *)(v8 + 40) = a2 & 1;
  if ((a1 & 1) == 0
    || (unsigned __int8 v9 = *(void **)&v3[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController]) == 0)
  {
    id v18 = v4;
    id v12 = v3;
    goto LABEL_7;
  }
  id v18 = v4;
  unsigned __int8 v10 = v3;
  id v11 = v9;
  if (([v11 isBeingDismissed] & 1) == 0)
  {
    unint64_t v19 = *(void *)&v10[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons];
    swift_bridgeObjectRetain();
    unint64_t v13 = swift_bridgeObjectRetain();
    sub_1006E0E24(v13);
    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      if (v14) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v14)
      {
LABEL_14:
        if (v14 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v14; ++i)
        {
          if ((v19 & 0xC000000000000001) != 0) {
            id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v16 = *(id *)(v19 + 8 * i + 32);
          }
          double v17 = v16;
          [v16 setUserInteractionEnabled:0, v18];
        }
      }
    }
    swift_bridgeObjectRelease_n();
    swift_retain();
    sub_10065E6CC(a2 & 1, (uint64_t)sub_100669448, v8);

    swift_release_n();
    goto LABEL_8;
  }

LABEL_7:
  sub_10065E228(a3 & 1, v3, v4, a2 & 1);
  swift_release();
LABEL_8:
}

void sub_10065E228(char a1, char *a2, void *a3, char a4)
{
  if (a1)
  {
    if (!a3) {
      return;
    }
    goto LABEL_12;
  }
  uint64_t v7 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC;
  uint64_t v8 = *(void **)&a2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC];
  if (!v8)
  {
    if (a3)
    {
LABEL_12:
      sub_10093935C(a4 & 1, 1);
      return;
    }
    id v16 = 0;
    goto LABEL_15;
  }
  if (!a3) {
    return;
  }
  type metadata accessor for CRLiOSMiniFormatterViewController();
  id v9 = a3;
  id v10 = v8;
  char v11 = static NSObject.== infix(_:_:)();

  if ((v11 & 1) == 0) {
    goto LABEL_12;
  }
  id v12 = *(void **)&a2[v7];
  if (v12)
  {
    id v13 = v9;
    id v14 = v12;
    char v15 = static NSObject.== infix(_:_:)();

    if (v15)
    {
      id v16 = *(void **)&a2[v7];
      if (v16)
      {
        id v17 = v16;
        char v18 = sub_10093AD78();
        sub_10093935C(a4 & 1, (v18 & 1) == 0);

        id v16 = *(void **)&a2[v7];
      }
LABEL_15:
      *(void *)&a2[v7] = 0;

      unint64_t v19 = &_swiftEmptySetSingleton;
      CGRect v32 = &_swiftEmptySetSingleton;
      if (*(void *)&a2[v7])
      {
        unint64_t v19 = sub_10065F00C();
        CGRect v32 = v19;
      }
      CGFloat v20 = *(void **)&a2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_auxiliaryPresentedBuilder];
      if (v20)
      {
        double v21 = *(uint64_t (**)(void))((swift_isaMask & *v20) + 0x178);
        id v22 = v20;
        unint64_t v23 = v21();
        sub_10057C1E4(v23);

        unint64_t v19 = v32;
      }
      uint64_t v24 = *(void *)&a2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects];
      *(void *)&a2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects] = v19;
      double v25 = *(void **)&a2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_changeNotifier];
      if (v25)
      {
        id v26 = v25;
        uint64_t v27 = a2;
        sub_100667E58(v24, v26, (uint64_t)v27, (SEL *)&selRef_removeObserver_forChangeSource_);

        id v28 = v26;
        double v29 = v27;
        uint64_t v30 = swift_bridgeObjectRetain();
        sub_100667E58(v30, v28, (uint64_t)v29, (SEL *)&selRef_addObserver_forChangeSource_);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      if ((a2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_isUpdatingMiniFormatter] & 1) == 0) {
        [*(id *)&a2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController] updateToolbarButtons];
      }
      double v31 = *(void **)&a2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath];
      *(void *)&a2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath] = 0;

      sub_10065C830();
    }
  }
}

uint64_t sub_10065E4CC()
{
  unint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons);
  swift_bridgeObjectRetain();
  unint64_t v1 = swift_bridgeObjectRetain();
  sub_1006E0E24(v1);
  uint64_t v2 = sub_100590530(v11);
  swift_bridgeObjectRelease();
  id v12 = v2;
  id v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBaseButton);
  swift_bridgeObjectRetain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*((void *)v12 + 2) >= *((void *)v12 + 3) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRelease();

  uint64_t v4 = *((void *)v2 + 2);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    uint64_t v6 = v4 - 1;
    while (1)
    {
      double v7 = v12[v5 + 4];
      if (v7 != 0.0)
      {
        id v8 = *(id *)&v7;
        id v9 = [v8 contextMenuInteraction];
        [v9 dismissMenu];
      }
      if (v6 == v5) {
        break;
      }
      if (__OFADD__(++v5, 1))
      {
        __break(1u);
        return swift_bridgeObjectRelease_n();
      }
    }
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

void sub_10065E6CC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController);
  if (v4)
  {
    id v13 = v4;
    if ([v13 isBeingDismissed]) {
      goto LABEL_7;
    }
    id v8 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController);
    id v9 = [v8 presentedViewController];
    if (!v9) {
      goto LABEL_7;
    }
    id v10 = v9;
    sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
    id v13 = v13;
    id v11 = v10;
    LOBYTE(v10) = static NSObject.== infix(_:_:)();

    if (v10)
    {
      if (a2)
      {
        aBlock[4] = a2;
        void aBlock[5] = a3;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(void *)"";
        aBlock[2] = sub_100679958;
        aBlock[3] = &unk_10150D8D0;
        id v12 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
      }
      else
      {
        id v12 = 0;
      }
      [v8 dismissViewControllerAnimated:a1 & 1 completion:v12];
      _Block_release(v12);
      sub_10065E894();
    }
    else
    {
LABEL_7:
    }
  }
}

uint64_t sub_10065E894()
{
  sub_1006632BC();
  if (v1)
  {
    uint64_t v2 = v1;
    *((unsigned char *)v1 + OBJC_IVAR____TtC8Freeform34CRLiOSMiniFormatterBaseLayerButton_isPresentingPopover) = 0;
    [v1 setHighlighted:0];
  }
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_secondLayerPresentedBuilder);
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_secondLayerPresentedBuilder) = 0;

  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController) = 0;

  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController);
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController) = 0;

  uint64_t v6 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
  if (!v6) {
    goto LABEL_28;
  }
  uint64_t v28 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC;
  double v7 = *(void **)&v6[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_stackViewForDisplay];
  uint64_t v30 = v6;
  id v8 = [v7 arrangedSubviews];
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v29 = v0;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v10 = result;
    id v12 = (void *)&unk_101678000;
    if (result) {
      goto LABEL_6;
    }
LABEL_25:
    swift_bridgeObjectRelease_n();

    double v25 = *(void **)(v29 + v28);
    if (v25)
    {
      id v26 = [v25 view];
      if (v26)
      {
        v32[0] = v26;
        uint64_t v27 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();

LABEL_29:
        CRLAccessibilityPostLayoutChangedNotification(v27);
        return swift_unknownObjectRelease();
      }
    }
LABEL_28:
    uint64_t v27 = 0;
    goto LABEL_29;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  id v12 = &unk_101678000;
  if (!v10) {
    goto LABEL_25;
  }
LABEL_6:
  if (v10 >= 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = (uint64_t)&v30[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_delegate];
    unint64_t v15 = v9 & 0xC000000000000001;
    while (1)
    {
      id v17 = v15 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v9 + 8 * v13 + 32);
      char v18 = v17;
      sub_1005498A4(v14, (uint64_t)v32);
      sub_1005057FC((uint64_t *)&unk_101678780);
      type metadata accessor for CRLiOSMiniFormatterPresenter();
      if (swift_dynamicCast()) {
        break;
      }
      uint64_t v16 = 1;
LABEL_9:
      ++v13;
      [v18 setIsAccessibilityElement:v16];

      if (v10 == v13) {
        goto LABEL_25;
      }
    }
    unint64_t v19 = *(void **)&v31[v12[215]];
    if (v19 && (id v20 = [v19 topViewController]) != 0)
    {
      double v21 = v20;
      type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
      uint64_t v22 = swift_dynamicCastClass();
      if (v22)
      {
        uint64_t v23 = *(void *)(v22 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);

        BOOL v24 = v23 == 0;
        id v12 = (void *)&unk_101678000;
        uint64_t v16 = v24;
        goto LABEL_22;
      }
    }
    else
    {
    }
    uint64_t v16 = 1;
LABEL_22:
    unint64_t v15 = v9 & 0xC000000000000001;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

id sub_10065EBC4()
{
  unint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController];
  *(void *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController] = 0;

  uint64_t v3 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_auxiliaryPresentedBuilder;
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_auxiliaryPresentedBuilder];
  *(void *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_auxiliaryPresentedBuilder] = 0;

  uint64_t v5 = &_swiftEmptySetSingleton;
  unint64_t v19 = &_swiftEmptySetSingleton;
  if (*(void *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC])
  {
    uint64_t v5 = sub_10065F00C();
    unint64_t v19 = v5;
  }
  uint64_t v6 = *(void **)&v0[v3];
  if (v6)
  {
    double v7 = *(uint64_t (**)(void))((swift_isaMask & *v6) + 0x178);
    id v8 = v6;
    unint64_t v9 = v7();
    sub_10057C1E4(v9);

    uint64_t v5 = v19;
  }
  uint64_t v10 = *(void *)&v0[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects];
  *(void *)&v1[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects] = v5;
  id v11 = *(void **)&v1[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_changeNotifier];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = v1;
    sub_100667E58(v10, v12, (uint64_t)v13, (SEL *)&selRef_removeObserver_forChangeSource_);

    id v14 = v12;
    unint64_t v15 = v13;
    uint64_t v16 = swift_bridgeObjectRetain();
    sub_100667E58(v16, v14, (uint64_t)v15, (SEL *)&selRef_addObserver_forChangeSource_);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v17 = *(void **)&v1[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController];

  return [v17 becomeFirstResponderIfAppropriate];
}

void sub_10065ED80()
{
  unint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath];
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC];
    if (v3)
    {
      uint64_t v4 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_isUpdatingMiniFormatter;
      v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_isUpdatingMiniFormatter] = 1;
      id v5 = v3;
      uint64_t v6 = v2;
      id v7 = v1;
      sub_10065E228(0, v6, v3, 0);

      sub_10065D27C(v7, 0);
      v2[v4] = 0;
    }
  }
}

BOOL sub_10065EEC0()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (!v1) {
    return 0;
  }
  id v2 = [v1 topViewController];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
  uint64_t v4 = swift_dynamicCastClass();
  BOOL v5 = v4 != 0;
  if (v4)
  {
    uint64_t v6 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
    id v7 = v6;

    if (v6)
    {
      uint64_t v3 = v7;
      goto LABEL_6;
    }
    return 0;
  }
LABEL_6:

  return v5;
}

uint64_t sub_10065EF98()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
  if (!v1) {
    return 0;
  }
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_repTrackingViewHelper);
  if (!v2) {
    return 0;
  }
  id v3 = v2;
  uint64_t v4 = sub_10080AF0C();

  uint64_t v5 = *(unsigned __int8 *)(v4 + 56);
  swift_release();
  return v5;
}

void *sub_10065F00C()
{
  uint64_t v1 = v0;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBuilder);
  if (v2)
  {
    id v3 = v2;
    unint64_t v4 = sub_1007FE0AC();
    if (v4) {
      sub_10057C1E4(v4);
    }
    sub_10057C1E4((unint64_t)&_swiftEmptySetSingleton);
  }
  unint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBuilders);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v6 = (uint64_t)result;
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (void *)swift_bridgeObjectRetain_n();
  }
  if (v6)
  {
    if (v6 < 1)
    {
      __break(1u);
      goto LABEL_37;
    }
    uint64_t v8 = 0;
    do
    {
      if ((v5 & 0xC000000000000001) != 0) {
        unint64_t v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        unint64_t v9 = *(id *)(v5 + 8 * v8 + 32);
      }
      uint64_t v10 = v9;
      ++v8;
      uint64_t v11 = (*(uint64_t (**)(void))((swift_isaMask & *v9) + 0x178))();

      sub_1006E0E3C(v11);
    }
    while (v6 != v8);
  }
  swift_bridgeObjectRelease_n();
  unint64_t v12 = sub_100CDCE0C((unint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  sub_10057C1E4(v12);
  unint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBuilders);
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v14 = (uint64_t)result;
    if (!result) {
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (void *)swift_bridgeObjectRetain_n();
    if (!v14) {
      goto LABEL_25;
    }
  }
  if (v14 < 1)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v15 = 0;
  do
  {
    if ((v13 & 0xC000000000000001) != 0) {
      uint64_t v16 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v16 = *(id *)(v13 + 8 * v15 + 32);
    }
    id v17 = v16;
    ++v15;
    uint64_t v18 = (*(uint64_t (**)(void))((swift_isaMask & *v16) + 0x178))();

    sub_1006E0E3C(v18);
  }
  while (v14 != v15);
LABEL_25:
  swift_bridgeObjectRelease_n();
  unint64_t v19 = sub_100CDCE0C((unint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  sub_10057C1E4(v19);
  unint64_t v20 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasElementsBuilders);
  if (!(v20 >> 62))
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (void *)swift_bridgeObjectRetain_n();
    if (v21) {
      goto LABEL_27;
    }
LABEL_35:
    swift_bridgeObjectRelease_n();
    unint64_t v26 = sub_100CDCE0C((unint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    sub_10057C1E4(v26);
    return &_swiftEmptySetSingleton;
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v21 = (uint64_t)result;
  if (!result) {
    goto LABEL_35;
  }
LABEL_27:
  if (v21 >= 1)
  {
    uint64_t v22 = 0;
    do
    {
      if ((v20 & 0xC000000000000001) != 0) {
        uint64_t v23 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v23 = *(id *)(v20 + 8 * v22 + 32);
      }
      BOOL v24 = v23;
      ++v22;
      uint64_t v25 = (*(uint64_t (**)(void))((swift_isaMask & *v23) + 0x178))();

      sub_1006E0E3C(v25);
    }
    while (v21 != v22);
    goto LABEL_35;
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_10065F454(char a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = _swiftEmptyArrayStorage;
  unint64_t v51 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBuilders);
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    int64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    int64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  char v49 = a2;
  if (v8)
  {
    unint64_t v50 = (unint64_t)_swiftEmptyArrayStorage;
    unint64_t v9 = (double **)&v50;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v8 < 0)
    {
      __break(1u);
      goto LABEL_71;
    }
    uint64_t v12 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0) {
        unint64_t v13 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        unint64_t v13 = *(id *)(v7 + 8 * v12 + 32);
      }
      uint64_t v14 = v13;
      ++v12;
      (*(void (**)(void))((swift_isaMask & *v13) + 0xD8))();

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v8 != v12);
    uint64_t v15 = (double *)v50;
    swift_bridgeObjectRelease();
    uint64_t v6 = _swiftEmptyArrayStorage;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = _swiftEmptyArrayStorage;
  }
  uint64_t v16 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons;
  *(void *)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons) = v15;
  swift_bridgeObjectRelease();
  unint64_t v17 = *(void *)(v3 + v16);
  if (v17 >> 62)
  {
    sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
    swift_bridgeObjectRetain();
    unint64_t v18 = _bridgeCocoaArray<A>(_:)();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
    unint64_t v18 = v17;
  }
  swift_bridgeObjectRelease();
  sub_1006E0E0C(v18);
  if (!(v51 >> 62))
  {
    unint64_t v9 = *(double ***)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9) {
      goto LABEL_16;
    }
LABEL_22:
    uint64_t v10 = _swiftEmptyArrayStorage;
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v19) {
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = (double **)_CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_16:
  uint64_t v10 = sub_100F629F0(0, 1, 1, _swiftEmptyArrayStorage);
  a2 = *((void *)v10 + 2);
  unint64_t v11 = *((void *)v10 + 3);
  int64_t v8 = a2 + 1;
  if (a2 >= v11 >> 1) {
LABEL_71:
  }
    uint64_t v10 = sub_100F629F0((double *)(v11 > 1), v8, 1, v10);
  *((void *)v10 + 2) = v8;
  *(void *)&v10[a2 + 4] = v9;
LABEL_23:
  unint64_t v20 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBuilders);
  uint64_t v48 = (uint64_t)v10;
  if ((a1 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    if (v20 >> 62) {
      goto LABEL_45;
    }
    goto LABEL_36;
  }
  unint64_t v50 = (unint64_t)_swiftEmptyArrayStorage;
  if (v20 >> 62) {
    goto LABEL_74;
  }
  uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v21) {
    goto LABEL_75;
  }
LABEL_26:
  if (v21 < 1)
  {
    __break(1u);
    goto LABEL_78;
  }
  for (uint64_t i = 0; i != v21; ++i)
  {
    if ((v20 & 0xC000000000000001) != 0) {
      uint64_t v23 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v23 = (char *)*(id *)(v20 + 8 * i + 32);
    }
    BOOL v24 = v23;
    if ([*(id *)&v23[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element] tag] == (id)23)
    {
    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v20 = v50;
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v50 >> 62)
  {
LABEL_45:
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v25) {
      goto LABEL_37;
    }
  }
  else
  {
LABEL_36:
    while (1)
    {
      uint64_t v25 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v25) {
        break;
      }
LABEL_37:
      unint64_t v50 = (unint64_t)v6;
      specialized ContiguousArray.reserveCapacity(_:)();
      if ((v25 & 0x8000000000000000) == 0)
      {
        uint64_t v6 = 0;
        do
        {
          if ((v20 & 0xC000000000000001) != 0) {
            unint64_t v26 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            unint64_t v26 = *(id *)(v20 + 8 * (void)v6 + 32);
          }
          uint64_t v27 = v26;
          uint64_t v6 = (double *)((char *)v6 + 1);
          (*(void (**)(void))((swift_isaMask & *v26) + 0xD8))();

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        while ((double *)v25 != v6);
        uint64_t v28 = (double *)v50;
        swift_bridgeObjectRelease();
        goto LABEL_47;
      }
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      swift_bridgeObjectRetain();
      uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
      if (v21) {
        goto LABEL_26;
      }
LABEL_75:
      swift_bridgeObjectRelease();
      unint64_t v20 = (unint64_t)_swiftEmptyArrayStorage;
      if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
        goto LABEL_45;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v28 = _swiftEmptyArrayStorage;
LABEL_47:
  uint64_t v29 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBaseButtons;
  *(void *)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBaseButtons) = v28;
  swift_bridgeObjectRelease();
  unint64_t v30 = *(void *)(v3 + v29);
  if (v30 >> 62)
  {
    sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
    swift_bridgeObjectRetain();
    unint64_t v20 = _bridgeCocoaArray<A>(_:)();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
    unint64_t v20 = v30;
  }
  swift_bridgeObjectRelease();
  sub_1006E0E0C(v20);
  double v31 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBuilder);
  if (v31)
  {
    uint64_t v21 = v31;
    if (!sub_101060C38())
    {
LABEL_54:

      goto LABEL_55;
    }
    sub_101060540();
    uint64_t v32 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBaseButton;
    unint64_t v33 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBaseButton);
    *(void *)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBaseButton) = v34;

    uint64_t v35 = *(void **)(v3 + v32);
    if (!v35)
    {
      __break(1u);
      return;
    }
    id v36 = v35;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    unint64_t v20 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v20 < *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_53:
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      goto LABEL_54;
    }
LABEL_78:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_53;
  }
LABEL_55:
  unint64_t v37 = v51;
  unint64_t v38 = v51 >> 62;
  if (v51 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3) {
      goto LABEL_57;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v3)
    {
LABEL_57:
      if (v3 < 1) {
        goto LABEL_73;
      }
      uint64_t v39 = 0;
      do
      {
        if ((v37 & 0xC000000000000001) != 0) {
          id v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v40 = *(id *)(v37 + 8 * v39 + 32);
        }
        uint64_t v42 = v40;
        ++v39;
        LODWORD(v41) = 1144750080;
        [v40 setContentHuggingPriority:1 forAxis:v41];
      }
      while (v3 != v39);
    }
  }
  swift_bridgeObjectRelease_n();
  if (v38)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  id v43 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v45 = [v43 initWithArrangedSubviews:isa];

  id v46 = [self tertiarySystemFillColor];
  sub_10065FCEC(v48, (uint64_t)v46);
  swift_bridgeObjectRelease();

  double v47 = 12.0;
  if (v49) {
    double v47 = 10.0;
  }
  [v45 setSpacing:v47];
  [v45 setDistribution:3];
  [v45 setAlignment:3];
}

uint64_t sub_10065FCEC(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = result;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    do
    {
      uint64_t v12 = *(void *)(v4 + 8 * v5 + 32);
      id v13 = [objc_allocWithZone((Class)UIView) init];
      [v13 setBackgroundColor:a2];
      id v14 = [v13 layer];
      [v14 setMasksToBounds:1];

      id v15 = [v13 layer];
      [v15 setCornerRadius:1.0];

      id v16 = [v13 layer];
      [v16 setCornerCurve:kCACornerCurveContinuous];

      [v2 insertArrangedSubview:v13 atIndex:v12];
      id v17 = [v2 axis];
      if (v17 == (id)1)
      {
        id v6 = [v13 heightAnchor];
        id v7 = [v6 constraintEqualToConstant:1.0];

        [v7 setActive:1];
        id v8 = [v13 widthAnchor];
        id v9 = [v2 widthAnchor];
        id v10 = [v8 constraintEqualToAnchor:v9 multiplier:1.0];
      }
      else
      {
        if (v17)
        {
          uint64_t result = _assertionFailure(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        id v18 = [v13 widthAnchor];
        id v19 = [v18 constraintEqualToConstant:2.0];

        [v19 setActive:1];
        id v20 = [v13 heightAnchor];
        id v21 = [v20 constraintEqualToConstant:28.0];

        [v21 setActive:1];
        id v8 = [v13 centerYAnchor];
        id v9 = [v2 centerYAnchor];
        id v10 = [v8 constraintEqualToAnchor:v9];
      }
      ++v5;
      id v11 = v10;

      [v11 setActive:1];
    }
    while (v3 != v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100660088()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBuilders;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBuilders] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  *(void *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_generalElementsBaseButtons] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v3 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBuilder;
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBuilder];
  *(void *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBuilder] = 0;

  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBaseButton];
  *(void *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_ellipsisBaseButton] = 0;

  uint64_t v6 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBuilders;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBuilders] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  *(void *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v7 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasElementsBuilders;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasElementsBuilders] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  sub_1006602B0();
  sub_1006604A4(v8);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  *(void *)&v1[v7] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  *(void *)&v1[v2] = v10;
  swift_bridgeObjectRelease();
  *(void *)&v1[v6] = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [self elementWithName:v13 image:0 type:1 action:0];

  id v15 = *(void **)&v1[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_editorController];
  id v16 = *(void **)&v1[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting];
  id v17 = v14;
  id v18 = v15;
  id v19 = [v16 interactiveCanvasController];
  id v20 = objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterEllipsisBuilder());
  id v21 = v1;
  id v22 = sub_100521CB4((uint64_t)v1, (uint64_t)&off_10150E1B8, (uint64_t)&off_10150D6C8, v17, v18, v19);

  id v23 = *(id *)&v1[v3];
  *(void *)&v1[v3] = v22;
}

void sub_1006602B0()
{
  uint64_t v1 = v0;
  sub_10050BF48(0, (unint64_t *)&unk_1016787F0);
  uint64_t v2 = NSArray.init(arrayLiteral:)();
  id v3 = [*(id *)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_editorController) currentEditors];
  sub_1005057FC((uint64_t *)&unk_1016838C0);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    sub_10050BF48(0, (unint64_t *)&unk_101678800);
    id v8 = v2;
    static Array._conditionallyBridgeFromObjectiveC(_:result:)();

    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_13;
  }
LABEL_3:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v7 = *(void **)(v4 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      if ([v7 respondsToSelector:"addMiniFormatterElementsToArray:atPoint:"])
      {
        if ([v7 respondsToSelector:"addMiniFormatterElementsToArray:atPoint:"]) {
          [v7 addMiniFormatterElementsToArray:v2 atPoint:0.0, 0.0];
        }
      }
      swift_unknownObjectRelease();
    }
    goto LABEL_13;
  }
  __break(1u);
}

double *sub_1006604A4(unint64_t a1)
{
  uint64_t v2 = v1;
  id v17 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = (double *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v4 = (uint64_t)result;
    if (result) {
      goto LABEL_3;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = (double *)swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_19;
  }
LABEL_3:
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = (char *)*(id *)(a1 + 8 * v6 + 32);
      }
      uint64_t v7 = v8;
      id v9 = [v8 elementType:v17];
      if (v9 == (id)2)
      {
        id v14 = *(void **)&v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_editorController];
        id v15 = [*(id *)&v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting] interactiveCanvasController];
        id v16 = sub_1005221D8(v7, v2, v14, v15);

        NSString v13 = v16;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v17 & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      else
      {
        if (v9) {
          goto LABEL_6;
        }
        uint64_t v10 = *(void **)&v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_editorController];
        id v11 = [*(id *)&v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting] interactiveCanvasController];
        uint64_t v12 = sub_1005221D8(v7, v2, v10, v11);

        NSString v13 = v12;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      uint64_t v7 = v13;
LABEL_6:
      ++v6;

      if (v4 == v6) {
        goto LABEL_19;
      }
    }
  }
  __break(1u);
  return result;
}

double *sub_100660724(void *a1, void *a2)
{
  uint64_t v3 = v2;
  id v57 = _swiftEmptyArrayStorage;
  uint64_t v6 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
  if (!v6) {
    goto LABEL_24;
  }
  id v7 = v6;
  char v8 = sub_10093B1E8();
  id v9 = [*(id *)(v3 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting) interactiveCanvasController];
  if (v9)
  {
    uint64_t v10 = v9;
    unint64_t v50 = a1;
    id v11 = a2;
    id v12 = [v10 infosForSelectionPath:v11];
    uint64_t v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    id v14 = sub_1006B99BC(v13);
    swift_bridgeObjectRelease();
    id v15 = sub_10065C080((uint64_t)v14);

    swift_release();
    if (v15)
    {
      id v16 = v10;
      id v17 = sub_100668568((unint64_t)v15, v16);
      swift_bridgeObjectRelease();

      uint64_t v18 = sub_100CDCFF0((unint64_t)v17);
      swift_bridgeObjectRelease();
      if ((v18 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = __CocoaSet.count.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v19 = *(void *)(v18 + 16);
      }
      uint64_t v20 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath);
      if (v20)
      {
        swift_bridgeObjectRetain();
        uint64_t v21 = swift_bridgeObjectRetain();
        char v22 = sub_100A3E574(v21, v20);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        if (v8)
        {
          a1 = v50;
          goto LABEL_20;
        }
        a1 = v50;
        if ((v22 & 1) == 0 && v19) {
          goto LABEL_20;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        a1 = v50;
        if (v8 & 1 | (v19 != 0)) {
          goto LABEL_20;
        }
      }
LABEL_23:

      goto LABEL_24;
    }

    a1 = v50;
  }
  if (*(void *)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath))
  {
    if ((v8 & 1) == 0) {
      goto LABEL_23;
    }
  }
  else if ((v8 & 1) == 0)
  {
    goto LABEL_23;
  }
LABEL_20:
  id v23 = v7;
  BOOL v24 = sub_100F639AC(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v26 = *((void *)v24 + 2);
  unint64_t v25 = *((void *)v24 + 3);
  if (v26 >= v25 >> 1) {
    BOOL v24 = sub_100F639AC((double *)(v25 > 1), v26 + 1, 1, v24);
  }
  uint64_t v55 = type metadata accessor for CRLiOSMiniFormatterViewController();
  unsigned __int8 v56 = &off_10151B1A0;
  *(void *)&long long v54 = v23;
  *((void *)v24 + 2) = v26 + 1;
  sub_10053974C(&v54, (uint64_t)&v24[5 * v26 + 4]);

  id v57 = v24;
LABEL_24:
  uint64_t v27 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (v27)
  {
    id v28 = v27;
    id v29 = [v28 viewControllers];
    sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
    unint64_t v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v31 = a2;
    id v32 = a1;
    unint64_t v33 = sub_1006682F0(v30, (uint64_t)v32, (uint64_t)v31);
    swift_bridgeObjectRelease();

    uint64_t v34 = sub_10065C1A0((unint64_t)v33);
    swift_bridgeObjectRelease();
    if (v34) {
      sub_1006E235C((uint64_t)v34);
    }
  }
  uint64_t v35 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController);
  if (!v35
    || (*(void *)&long long v54 = *(void *)(v3
                                    + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController),
        sub_10050BF48(0, (unint64_t *)&qword_1016745A0),
        id v36 = v35,
        sub_1005057FC(&qword_1016787A8),
        (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v53 = 0;
    long long v51 = 0u;
    long long v52 = 0u;
    goto LABEL_39;
  }
  if (!*((void *)&v52 + 1))
  {
LABEL_39:
    sub_100522F00((uint64_t)&v51, &qword_1016787B0);
    return v57;
  }
  sub_10053974C(&v51, (uint64_t)&v54);
  uint64_t v37 = v55;
  unint64_t v38 = v56;
  sub_10050F848(&v54, v55);
  if (((uint64_t (*)(void *, void *, uint64_t, _UNKNOWN **))v38[3])(a1, a2, v37, v38))
  {
    sub_1005498A4((uint64_t)&v54, (uint64_t)&v51);
    uint64_t v39 = v57;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v39 = sub_100F639AC(0, *((void *)v39 + 2) + 1, 1, v39);
      id v57 = v39;
    }
    unint64_t v41 = *((void *)v39 + 2);
    unint64_t v40 = *((void *)v39 + 3);
    if (v41 >= v40 >> 1) {
      id v57 = sub_100F639AC((double *)(v40 > 1), v41 + 1, 1, v39);
    }
    uint64_t v42 = *((void *)&v52 + 1);
    uint64_t v43 = v53;
    uint64_t v44 = sub_1005231B4((uint64_t)&v51, *((uint64_t *)&v52 + 1));
    __n128 v45 = __chkstk_darwin(v44, v44);
    double v47 = (char *)&v50 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v48 + 16))(v47, v45);
    sub_100667930(v41, (uint64_t)v47, (uint64_t *)&v57, v42, v43);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v51);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v54);
  return v57;
}

double *sub_100660CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = _swiftEmptyArrayStorage;
  uint64_t v6 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
  if (v6)
  {
    id v7 = v6;
    sub_10093560C(a1, a2);
    if (v8)
    {
      id v9 = v7;
      uint64_t v10 = sub_100F639AC(0, 1, 1, _swiftEmptyArrayStorage);
      unint64_t v12 = *((void *)v10 + 2);
      unint64_t v11 = *((void *)v10 + 3);
      if (v12 >= v11 >> 1) {
        uint64_t v10 = sub_100F639AC((double *)(v11 > 1), v12 + 1, 1, v10);
      }
      uint64_t v42 = type metadata accessor for CRLiOSMiniFormatterViewController();
      uint64_t v43 = &off_10151B1A0;
      *(void *)&long long v41 = v9;
      *((void *)v10 + 2) = v12 + 1;
      sub_10053974C(&v41, (uint64_t)&v10[5 * v12 + 4]);

      uint64_t v44 = v10;
    }
    else
    {
    }
  }
  uint64_t v13 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (v13)
  {
    id v14 = v13;
    id v15 = [v14 viewControllers];
    sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
    unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    __chkstk_darwin(v17, v18);
    *(void *)&void v36[2] = a1;
    *(void *)&v36[3] = a2;
    uint64_t v19 = sub_1008757EC(sub_1006693E8, v36, v16);
    uint64_t v20 = sub_10065C1A0((unint64_t)v19);
    swift_bridgeObjectRelease();
    if (v20) {
      sub_1006E235C((uint64_t)v20);
    }
  }
  uint64_t v21 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController);
  if (!v21
    || (*(void *)&long long v41 = *(void *)(v3
                                    + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController),
        sub_10050BF48(0, (unint64_t *)&qword_1016745A0),
        id v22 = v21,
        sub_1005057FC(&qword_1016787A8),
        (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v40 = 0;
    long long v38 = 0u;
    long long v39 = 0u;
    goto LABEL_22;
  }
  if (!*((void *)&v39 + 1))
  {
LABEL_22:
    sub_100522F00((uint64_t)&v38, &qword_1016787B0);
    return v44;
  }
  sub_10053974C(&v38, (uint64_t)&v41);
  uint64_t v23 = v42;
  BOOL v24 = v43;
  sub_10050F848(&v41, v42);
  if (((uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **))v24[2])(a1, a2, v23, v24))
  {
    sub_1005498A4((uint64_t)&v41, (uint64_t)&v38);
    unint64_t v25 = v44;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      unint64_t v25 = sub_100F639AC(0, *((void *)v25 + 2) + 1, 1, v25);
      uint64_t v44 = v25;
    }
    unint64_t v27 = *((void *)v25 + 2);
    unint64_t v26 = *((void *)v25 + 3);
    if (v27 >= v26 >> 1) {
      uint64_t v44 = sub_100F639AC((double *)(v26 > 1), v27 + 1, 1, v25);
    }
    uint64_t v28 = *((void *)&v39 + 1);
    uint64_t v29 = v40;
    uint64_t v30 = sub_1005231B4((uint64_t)&v38, *((uint64_t *)&v39 + 1));
    __n128 v31 = __chkstk_darwin(v30, v30);
    unint64_t v33 = (char *)&v37 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v34 + 16))(v33, v31);
    sub_100667930(v27, (uint64_t)v33, (uint64_t *)&v44, v28, v29);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v38);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v41);
  return v44;
}

uint64_t sub_100661098(id *a1, uint64_t a2, uint64_t a3)
{
  id v15 = *a1;
  sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
  id v5 = v15;
  sub_1005057FC(&qword_1016787A8);
  if (swift_dynamicCast())
  {
    sub_10053974C(v10, (uint64_t)v12);
    uint64_t v6 = v13;
    uint64_t v7 = v14;
    sub_10050F848(v12, v13);
    char v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, a3, v6, v7);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v12);
  }
  else
  {
    uint64_t v11 = 0;
    memset(v10, 0, sizeof(v10));
    sub_100522F00((uint64_t)v10, &qword_1016787B0);
    char v8 = 0;
  }
  return v8 & 1;
}

double *sub_1006611A8()
{
  uint64_t v1 = v0;
  uint64_t v43 = _swiftEmptyArrayStorage;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
  if (!v2) {
    goto LABEL_6;
  }
  id v3 = v2;
  if ((sub_10093B1E8() & 1) == 0)
  {

    goto LABEL_6;
  }
  id v4 = v3;
  id v5 = sub_100F639AC(0, 1, 1, _swiftEmptyArrayStorage);
  uint64_t v7 = *((void *)v5 + 2);
  unint64_t v6 = *((void *)v5 + 3);
  int64_t v8 = v7 + 1;
  if (v7 >= v6 >> 1) {
    goto LABEL_43;
  }
  while (1)
  {
    uint64_t v41 = type metadata accessor for CRLiOSMiniFormatterViewController();
    uint64_t v42 = &off_10151B1A0;
    *(void *)&long long v40 = v4;
    *((void *)v5 + 2) = v8;
    sub_10053974C(&v40, (uint64_t)&v5[5 * v7 + 4]);

    uint64_t v43 = v5;
LABEL_6:
    id v9 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
    if (!v9) {
      goto LABEL_29;
    }
    id v5 = v9;
    id v4 = [v5 viewControllers];
    int64_t v8 = sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
    uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v36 = _swiftEmptyArrayStorage;
    if ((unint64_t)v7 >> 62) {
      break;
    }
    unint64_t v6 = v7 & 0xFFFFFFFFFFFFFF8;
    uint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v10) {
      goto LABEL_25;
    }
LABEL_9:
    if (v10 >= 1)
    {
      unint64_t v33 = v5;
      uint64_t v34 = v1;
      uint64_t v11 = 0;
      while (1)
      {
        if ((v7 & 0xC000000000000001) != 0) {
          id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v12 = *(id *)(v7 + 8 * v11 + 32);
        }
        id v35 = v12;
        id v13 = v12;
        sub_1005057FC(&qword_1016787A8);
        if (swift_dynamicCast())
        {
          sub_10053974C(&v37, (uint64_t)&v40);
          uint64_t v15 = v41;
          uint64_t v14 = v42;
          sub_10050F848(&v40, v41);
          LOBYTE(v14) = ((uint64_t (*)(uint64_t, _UNKNOWN **))v14[4])(v15, v14);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v40);
          if (v14)
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            goto LABEL_13;
          }
        }
        else
        {
          uint64_t v39 = 0;
          long long v37 = 0u;
          long long v38 = 0u;
          sub_100522F00((uint64_t)&v37, &qword_1016787B0);
        }

LABEL_13:
        if (v10 == ++v11)
        {
          swift_bridgeObjectRelease();
          unint64_t v16 = v36;
          id v5 = v33;
          uint64_t v1 = v34;
          goto LABEL_26;
        }
      }
    }
    __break(1u);
LABEL_43:
    id v5 = sub_100F639AC((double *)(v6 > 1), v8, 1, v5);
  }
  if (v7 < 0) {
    id v4 = (id)v7;
  }
  else {
    id v4 = (id)(v7 & 0xFFFFFFFFFFFFFF8);
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v10) {
    goto LABEL_9;
  }
LABEL_25:
  swift_bridgeObjectRelease();
  unint64_t v16 = _swiftEmptyArrayStorage;
LABEL_26:
  uint64_t v17 = sub_10065C1A0((unint64_t)v16);
  swift_release();
  if (v17) {
    sub_1006E235C((uint64_t)v17);
  }

LABEL_29:
  uint64_t v18 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController);
  if (!v18
    || (*(void *)&long long v40 = *(void *)(v1
                                    + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController),
        sub_10050BF48(0, (unint64_t *)&qword_1016745A0),
        id v19 = v18,
        sub_1005057FC(&qword_1016787A8),
        (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v39 = 0;
    long long v37 = 0u;
    long long v38 = 0u;
    goto LABEL_40;
  }
  if (!*((void *)&v38 + 1))
  {
LABEL_40:
    sub_100522F00((uint64_t)&v37, &qword_1016787B0);
    return v43;
  }
  sub_10053974C(&v37, (uint64_t)&v40);
  uint64_t v20 = v41;
  uint64_t v21 = v42;
  sub_10050F848(&v40, v41);
  if (((uint64_t (*)(uint64_t, _UNKNOWN **))v21[4])(v20, v21))
  {
    sub_1005498A4((uint64_t)&v40, (uint64_t)&v37);
    id v22 = v43;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      id v22 = sub_100F639AC(0, *((void *)v22 + 2) + 1, 1, v22);
      uint64_t v43 = v22;
    }
    unint64_t v24 = *((void *)v22 + 2);
    unint64_t v23 = *((void *)v22 + 3);
    if (v24 >= v23 >> 1) {
      uint64_t v43 = sub_100F639AC((double *)(v23 > 1), v24 + 1, 1, v22);
    }
    uint64_t v25 = *((void *)&v38 + 1);
    uint64_t v26 = v39;
    uint64_t v27 = sub_1005231B4((uint64_t)&v37, *((uint64_t *)&v38 + 1));
    __n128 v28 = __chkstk_darwin(v27, v27);
    uint64_t v30 = (char *)&v33 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v31 + 16))(v30, v28);
    sub_100667930(v24, (uint64_t)v30, (uint64_t *)&v43, v25, v26);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v37);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v40);
  return v43;
}

double *sub_1006616B4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
  if (v1)
  {
    sub_1005057FC((uint64_t *)&unk_1016787E0);
    uint64_t v2 = (double *)swift_allocObject();
    *((_OWORD *)v2 + 1) = xmmword_10117E810;
    *((void *)v2 + 7) = type metadata accessor for CRLiOSMiniFormatterViewController();
    *((void *)v2 + 8) = &off_10151B1A0;
    *((void *)v2 + 4) = v1;
  }
  else
  {
    uint64_t v2 = _swiftEmptyArrayStorage;
  }
  id v3 = v1;
  return v2;
}

uint64_t sub_100661734(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    int64_t v8 = (void *)(result + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v9 = v8[3];
      uint64_t v10 = v8[4];
      sub_10050F848(v8, v9);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 48))(a2, a3, a4, v9, v10);
      v8 += 5;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

double *sub_100661808(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
  id v6 = v3;
  sub_100935924(a1, a2);
  if ((v7 & 1) == 0)
  {

    return _swiftEmptyArrayStorage;
  }
  sub_1005057FC(&qword_1016787D8);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10117E810;
  *(void *)(v8 + 56) = type metadata accessor for CRLiOSMiniFormatterViewController();
  *(void *)(v8 + 64) = &off_10151B188;
  *(void *)(v8 + 32) = v6;
  return (double *)v8;
}

void sub_1006618B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1 + 32;
    double height = UILayoutFittingCompressedSize.height;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1005498A4(v2, (uint64_t)v84);
      uint64_t v10 = sub_10050F848(v84, v84[3]);
      uint64_t v11 = *v10;
      id v12 = *(void **)(*v10 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_repTrackingViewHelper);
      if (v12)
      {
        id v13 = v12;
        sub_10080B038();
      }
      uint64_t v14 = sub_10050F848((void *)(v11 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_delegate), *(void *)(v11 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_delegate + 24));
      uint64_t v15 = *v14;
      uint64_t v16 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController;
      uint64_t v17 = *(void **)(*v14 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
      if (!v17) {
        goto LABEL_11;
      }
      id v18 = [v17 topViewController];
      if (!v18) {
        goto LABEL_11;
      }
      id v6 = v18;
      type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
      uint64_t v19 = swift_dynamicCastClass();
      if (v19)
      {
        uint64_t v20 = *(void **)(v19 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
        id v21 = v20;

        if (!v20) {
          goto LABEL_11;
        }

        id v22 = *(void **)(v15 + v16);
        if (!v22) {
          goto LABEL_11;
        }
        id v6 = v22;
        id v23 = [v6 visibleViewController];
        if (v23) {
          break;
        }
      }
LABEL_10:

LABEL_11:
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v84);
      v2 += 40;
      if (!--v1)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    id v7 = v23;
    uint64_t v24 = swift_dynamicCastClass();
    if (!v24 || (uint64_t v25 = *(void **)(v15 + v16)) == 0)
    {
LABEL_9:

      id v6 = v7;
      goto LABEL_10;
    }
    uint64_t v26 = (unsigned char *)v24;
    id v9 = v25;
    id v27 = [v9 visibleViewController];
    if (!v27)
    {
LABEL_8:

      id v6 = v7;
      id v7 = v9;
      goto LABEL_9;
    }
    id v83 = v9;
    id v9 = v27;
    if (swift_dynamicCastClass())
    {
      sub_10050BF48(0, (unint64_t *)&qword_101672E50);
      if ((static NSObject.== infix(_:_:)() & 1) == 0)
      {
        id v8 = v83;
        goto LABEL_7;
      }
      __n128 v28 = *(void **)(v15 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController);
      if (v28)
      {
        id v29 = [v28 presentationController];
        if (v29)
        {
          id v5 = v29;
          self;
          uint64_t v30 = swift_dynamicCastObjCClass();
          if (v30)
          {
            id v81 = (id)v30;
            id v82 = v5;
            if (v26[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_useNavigationControllerWidth] == 1
              && (id v33 = [v26 navigationController]) != 0)
            {
              id v78 = v33;
              id v34 = [v33 view];

              if (!v34)
              {
                __break(1u);
                return;
              }
              [v34 frame];
              CGFloat v36 = v35;
              CGFloat v38 = v37;
              CGFloat v40 = v39;
              CGFloat v42 = v41;

              v85.origin.CGFloat x = v36;
              v85.origin.CGFloat y = v38;
              v85.size.double width = v40;
              v85.size.double height = v42;
              double Width = CGRectGetWidth(v85);
            }
            else if (*(void *)&v26[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate])
            {
              uint64_t v79 = *(void *)&v26[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_delegate
                                  + 8];
              uint64_t ObjectType = swift_getObjectType();
              (*(void (**)(uint64_t))(v79 + 104))(ObjectType);
            }
            else
            {
              if (qword_10166EDF0 != -1) {
                swift_once();
              }
              double Width = *(double *)&qword_10171A278;
            }
            LODWORD(v31) = 1148846080;
            LODWORD(v32) = 1112014848;
            [*(id *)&v26[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_contentView] systemLayoutSizeFittingSize:Width height:v31 v32];
            uint64_t v46 = *(void *)(v15 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
            if (v46
              && (double v47 = *(void **)(v46
                                 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_repTrackingViewHelper)) != 0)
            {
              double v48 = v45;
              double v49 = *(double *)&v26[OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_bottomPadding];
              id v50 = v47;
              uint64_t v51 = sub_10080AF0C();

              int v52 = *(unsigned __int8 *)(v51 + 56);
              uint64_t v80 = v51;
              uint64_t v53 = swift_bridgeObjectRetain();
              long long v54 = (void *)sub_10099985C(v53);
              swift_bridgeObjectRelease();
              id v55 = [v54 interactiveCanvasController];

              if (v55)
              {
                uint64_t Strong = swift_unknownObjectWeakLoadStrong();
                if (Strong)
                {
                  id v57 = (void *)Strong;
                  double v77 = v48 + v49 + 10.0;
                  [v55 visibleScaledRectForCanvasUI];
                  CGFloat v59 = v58;
                  CGFloat v61 = v60;
                  CGFloat v63 = v62;
                  CGFloat v65 = v64;
                  [v57 frame];
                  CGFloat y = v86.origin.y;
                  CGFloat x = v86.origin.x;
                  CGFloat v66 = v86.size.width;
                  CGFloat rect = v86.size.height;
                  double MinY = CGRectGetMinY(v86);
                  v87.origin.CGFloat x = v59;
                  v87.origin.CGFloat y = v61;
                  v87.size.double width = v63;
                  v87.size.double height = v65;
                  double v76 = MinY - CGRectGetMinY(v87);
                  v88.origin.CGFloat x = v59;
                  v88.origin.CGFloat y = v61;
                  v88.size.double width = v63;
                  v88.size.double height = v65;
                  double MaxY = CGRectGetMaxY(v88);
                  v89.origin.CGFloat y = y;
                  v89.origin.CGFloat x = x;
                  v89.size.double width = v66;
                  v89.size.double height = rect;
                  double v69 = CGRectGetMaxY(v89);

                  int v70 = *(unsigned __int8 *)(v80 + 56);
                  swift_release();
                  BOOL v71 = v77 <= MaxY - v69;
                  if (v70) {
                    BOOL v71 = v77 <= v76;
                  }
                  uint64_t v72 = 1;
                  if (v52) {
                    uint64_t v72 = 2;
                  }
                  if (v71) {
                    uint64_t v4 = v72;
                  }
                  else {
                    uint64_t v4 = 3;
                  }
                }
                else
                {
                  swift_release();

                  uint64_t v4 = 3;
                }
              }
              else
              {
                swift_release();
                uint64_t v4 = 3;
              }
            }
            else
            {
              uint64_t v4 = 2;
            }
            [v81 setPermittedArrowDirections:v4, rect, y, x];
            id v5 = v83;
            id v83 = v82;
          }

          id v6 = v7;
          id v7 = v5;
        }
      }
    }
    id v8 = v9;
    id v9 = v83;
LABEL_7:

    id v6 = v7;
    id v7 = v8;
    goto LABEL_8;
  }
}

double sub_100661ED8@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC;
  if (!*(void *)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC)) {
    goto LABEL_21;
  }
  if (sub_100668E18(a2))
  {
    if (*(void *)(v3 + v5))
    {
      id v32 = *(id *)(v3 + v5);
      *(void *)(a3 + 24) = type metadata accessor for CRLiOSMiniFormatterViewController();
      *(void *)(a3 + 32) = &off_10151B168;
      *(void *)a3 = v32;
      id v8 = v32;
      return result;
    }
    goto LABEL_21;
  }
  char v10 = sub_100662238(a1, (uint64_t)a2);
  uint64_t v11 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if ((v10 & 1) == 0)
  {
    if (v11)
    {
      uint64_t v28 = a3;
      double v31 = a2;
      id v29 = v11;
      id v12 = [v29 viewControllers];
      sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
      unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v13 >> 62) {
        goto LABEL_33;
      }
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      while (v14)
      {
        unint64_t v15 = v13 & 0xC000000000000001;
        if ((v13 & 0xC000000000000001) != 0) {
          id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v16 = *(id *)(v13 + 32);
        }

        if (v14 == 1) {
          break;
        }
        uint64_t v17 = 5;
        unint64_t v30 = v13 & 0xC000000000000001;
        while (1)
        {
          id v18 = v15 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v13 + 8 * v17);
          uint64_t v19 = v18;
          uint64_t v20 = v17 - 3;
          if (__OFADD__(v17 - 4, 1)) {
            break;
          }
          type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
          uint64_t v21 = swift_dynamicCastClass();
          if (v21)
          {
            id v22 = *(void **)(v21 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
            if (v22)
            {
              id v23 = *(uint64_t (**)(uint64_t, void *))((swift_isaMask & *v22) + 0x1C0);
              uint64_t v24 = v14;
              unint64_t v25 = v13;
              id v26 = v19;
              id v27 = v22;
              LOBYTE(v23) = v23(a1, v31);

              unint64_t v13 = v25;
              uint64_t v14 = v24;
              unint64_t v15 = v30;

              if (v23)
              {

                swift_bridgeObjectRelease();
                sub_1005057FC((uint64_t *)&unk_1016787C8);
                a3 = v28;
                goto LABEL_11;
              }
            }
          }

          ++v17;
          if (v20 == v14) {
            goto LABEL_20;
          }
        }
        __break(1u);
LABEL_33:
        swift_bridgeObjectRetain();
        uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
LABEL_20:

      swift_bridgeObjectRelease();
      a3 = v28;
    }
    goto LABEL_21;
  }
  if (!v11 || ![v11 topViewController]) {
    goto LABEL_21;
  }
  sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
  sub_1005057FC((uint64_t *)&unk_1016787C8);
LABEL_11:
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_21:
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_100662238(uint64_t a1, uint64_t a2)
{
  sub_1006602B0();
  sub_1006604A4(v5);
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v8 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (!v8) {
    goto LABEL_7;
  }
  id v9 = [v8 topViewController];
  if (!v9) {
    goto LABEL_7;
  }
  char v10 = v9;
  type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
  uint64_t v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_bridgeObjectRelease();

    return 1;
  }
  id v12 = *(void **)(v11 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
  id v13 = v12;

  if (v12)
  {
    uint64_t v14 = v13;
    unint64_t v15 = sub_1006681A4(v7, (uint64_t)v14);
    swift_bridgeObjectRelease();

    if (v15)
    {

      char v16 = (*(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v14) + 0x1C0))(a1, a2);
      return v16 & 1;
    }
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
  }
  return 1;
}

double sub_1006623B4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = sub_100662688(a1, a2);
  unint64_t v6 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if ((v5 & 1) == 0)
  {
    if (v6)
    {
      id v23 = v6;
      id v8 = [v23 viewControllers];
      sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
      unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v9 >> 62) {
        goto LABEL_27;
      }
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      while (v10)
      {
        unint64_t v11 = v9 & 0xC000000000000001;
        if ((v9 & 0xC000000000000001) != 0) {
          id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v12 = *(id *)(v9 + 32);
        }

        if (v10 == 1) {
          break;
        }
        uint64_t v13 = 5;
        unint64_t v24 = v9;
        while (1)
        {
          id v14 = v11 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v9 + 8 * v13);
          unint64_t v15 = v14;
          uint64_t v16 = v13 - 3;
          if (__OFADD__(v13 - 4, 1)) {
            break;
          }
          type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
          uint64_t v17 = swift_dynamicCastClass();
          if (v17)
          {
            id v18 = *(void **)(v17 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
            if (v18)
            {
              uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v18) + 0x1C8);
              uint64_t v20 = v10;
              id v21 = v15;
              id v22 = v18;
              LOBYTE(v19) = v19(a1, a2);

              uint64_t v10 = v20;
              unint64_t v9 = v24;

              if (v19)
              {

                swift_bridgeObjectRelease();
                sub_1005057FC((uint64_t *)&unk_1016787C8);
                goto LABEL_5;
              }
            }
          }

          ++v13;
          if (v16 == v10) {
            goto LABEL_14;
          }
        }
        __break(1u);
LABEL_27:
        swift_bridgeObjectRetain();
        uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
LABEL_14:

      swift_bridgeObjectRelease();
    }
    goto LABEL_15;
  }
  if (!v6 || ![v6 topViewController]) {
    goto LABEL_15;
  }
  sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
  sub_1005057FC((uint64_t *)&unk_1016787C8);
LABEL_5:
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_100662688(uint64_t a1, uint64_t a2)
{
  sub_1006602B0();
  sub_1006604A4(v5);
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v8 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (!v8) {
    goto LABEL_7;
  }
  id v9 = [v8 topViewController];
  if (!v9) {
    goto LABEL_7;
  }
  uint64_t v10 = v9;
  type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
  uint64_t v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_bridgeObjectRelease();

    return 1;
  }
  id v12 = *(void **)(v11 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
  id v13 = v12;

  if (v12)
  {
    id v14 = v13;
    unint64_t v15 = sub_1006681A4(v7, (uint64_t)v14);
    swift_bridgeObjectRelease();

    if (v15)
    {

      char v16 = (*(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v14) + 0x1C8))(a1, a2);
      return v16 & 1;
    }
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
  }
  return 1;
}

void sub_100662804(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1005498A4(a1, (uint64_t)v20);
  sub_1005057FC((uint64_t *)&unk_1016787C8);
  sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC];
    if (v3
      && (id v4 = v3,
          id v5 = v19,
          char v6 = static NSObject.== infix(_:_:)(),
          v5,
          v4,
          (v6 & 1) != 0))
    {
      sub_10065DFD8(1, 1, 0);
    }
    else
    {
      uint64_t v7 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController;
      id v8 = [*(id *)&v1[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController] topViewController];
      if (v8
        && (id v9 = v8,
            id v10 = v19,
            char v11 = static NSObject.== infix(_:_:)(),
            v10,
            v10,
            v9,
            (v11 & 1) != 0))
      {
        [v1 dismissSecondLayerPopover];
      }
      else
      {
        id v12 = *(void **)&v1[v7];
        if (!v12) {
          goto LABEL_13;
        }
        id v13 = [v12 viewControllers];
        unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        LOBYTE(v13) = sub_100ED5B20((uint64_t)v19, v14);
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0) {
          goto LABEL_13;
        }
        unint64_t v15 = *(void **)&v2[v7];
        if (v15
          && ([v15 popToViewController:v19 animated:1],
              (char v16 = *(void **)&v2[v7]) != 0))
        {
          id v17 = v16;
          id v18 = [v17 popViewControllerAnimated:1];
        }
        else
        {
LABEL_13:
        }
      }
    }
  }
}

void sub_100662A08()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (!v1) {
    return;
  }
  id v16 = v1;
  id v2 = [v16 popoverPresentationController];
  if (v2)
  {
    uint64_t v3 = v2;
    sub_1006632BC();
    if (v4)
    {
      id v5 = v4;
      [v3 setSourceView:v4];
      v19[0] = *(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons);
      swift_bridgeObjectRetain();
      unint64_t v6 = swift_bridgeObjectRetain();
      sub_1006E0E24(v6);
      id v7 = v5;
      id v8 = sub_100667C78(v19[0]);
      swift_bridgeObjectRelease();

      if ((unint64_t)v8 >> 62)
      {
        sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
        _bridgeCocoaArray<A>(_:)();
      }
      else
      {
        swift_bridgeObjectRetain();
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
      }
      swift_bridgeObjectRelease();
      sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v3 setPassthroughViews:isa];
    }
    if (UIAccessibilityIsVoiceOverRunning())
    {
      id v10 = [self currentTraitCollection];
      id v11 = [v10 horizontalSizeClass];

      if (v11 == (id)2)
      {
        if (UIAccessibilityFocusedElement(UIAccessibilityNotificationVoiceOverIdentifier))
        {
          _bridgeAnyObjectToAny(_:)();
          swift_unknownObjectRelease();
        }
        else
        {
          memset(v18, 0, sizeof(v18));
        }
        sub_10052E248((uint64_t)v18, (uint64_t)v19);
        if (v19[3])
        {
          sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
          if (swift_dynamicCast())
          {
            id v12 = [v3 presentedView];
            id v13 = (void *)sub_100662D68(v12, v17);

            if (v13)
            {
              UIAccessibilityNotifications v14 = UIAccessibilityLayoutChangedNotification;
              id v15 = v13;
              UIAccessibilityPostNotification(v14, v15);
            }
            else
            {
            }
          }
          else
          {
          }
        }
        else
        {

          sub_100522F00((uint64_t)v19, &qword_101672BF0);
        }
        return;
      }
    }
  }
}

uint64_t sub_100662D68(void *a1, void *a2)
{
  id v3 = a1;
  if (!a1) {
    return (uint64_t)v3;
  }
  id v5 = a1;
  if ([v5 accessibilityElementsHidden]) {
    goto LABEL_3;
  }
  if ([v5 isAccessibilityElement])
  {
    id v6 = [v5 accessibilityLabel];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v10 = v9;
    }
    else
    {
      uint64_t v8 = 0;
      uint64_t v10 = 0;
    }
    id v16 = [a2 accessibilityLabel];
    if (v16)
    {
      id v17 = v16;
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v20 = v19;

      if (v10)
      {
        if (!v20) {
          goto LABEL_37;
        }
        if (v8 == v18 && v10 == v20)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v21 & 1) == 0) {
            goto LABEL_3;
          }
        }
      }
      else if (v20)
      {
        goto LABEL_37;
      }
    }
    else if (v10)
    {
      goto LABEL_37;
    }
    id v22 = [v5 accessibilityIdentifier];
    if (v22)
    {
      id v23 = v22;
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v26 = v25;
    }
    else
    {
      uint64_t v24 = 0;
      uint64_t v26 = 0;
    }
    id v27 = [a2 accessibilityIdentifier];
    if (v27)
    {
      uint64_t v28 = v27;
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v31 = v30;

      if (v26)
      {
        if (v31)
        {
          if (v24 == v29 && v26 == v31)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_41;
          }
          char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v32)
          {
LABEL_41:
            unint64_t v33 = (unint64_t)[v5 accessibilityTraits];
            UIAccessibilityTraits v34 = UIAccessibilityTraitNotEnabled | UIAccessibilityTraitSelected;
            if ((((unint64_t)[a2 accessibilityTraits] ^ v33) & ~v34) == 0) {
              return (uint64_t)v3;
            }
          }
LABEL_3:

          return 0;
        }
      }
      else if (!v31)
      {
        goto LABEL_41;
      }
    }
    else if (!v26)
    {
      goto LABEL_41;
    }
LABEL_37:

    swift_bridgeObjectRelease();
    return 0;
  }
  id v11 = [v5 subviews];
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v13 = (id *)sub_10065C038(v12, v2, a2);
  uint64_t result = swift_bridgeObjectRelease();
  if (!((unint64_t)v13 >> 62))
  {
    if (*(void *)(((unint64_t)v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_9;
    }
LABEL_44:
    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v35) {
    goto LABEL_44;
  }
LABEL_9:
  if (((unint64_t)v13 & 0xC000000000000001) != 0)
  {
    id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_12;
  }
  if (*(void *)(((unint64_t)v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v15 = v13[4];
LABEL_12:
    id v3 = v15;
    swift_bridgeObjectRelease();

    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

void sub_1006630F4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (v1)
  {
    id v10 = v1;
    id v2 = [v10 popoverPresentationController];
    if (v2)
    {
      id v3 = v2;
      sub_1006632BC();
      if (v4)
      {
        id v5 = v4;
        unint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons);
        swift_bridgeObjectRetain();
        unint64_t v6 = swift_bridgeObjectRetain();
        sub_1006E0E24(v6);
        id v7 = v5;
        uint64_t v8 = sub_100667C78(v11);
        swift_bridgeObjectRelease();

        if ((unint64_t)v8 >> 62)
        {
          sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
          _bridgeCocoaArray<A>(_:)();
        }
        else
        {
          swift_bridgeObjectRetain();
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
          sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
        }
        swift_bridgeObjectRelease();
        sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v3 setPassthroughViews:isa];
      }
    }
  }
}

void sub_1006632BC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (v1)
  {
    id v2 = [v1 topViewController];
    if (v2)
    {
      id v3 = v2;
      type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
      uint64_t v4 = swift_dynamicCastClass();
      if (!v4) {
        goto LABEL_11;
      }
      id v5 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
      unint64_t v6 = v5;

      if (!v5) {
        return;
      }
      id v7 = *(id *)&v6[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element];

      id v3 = v7;
      unint64_t v8 = swift_bridgeObjectRetain();
      unint64_t v9 = sub_100667B44(v8);
      char v11 = v10;
      swift_bridgeObjectRelease();

      if (v11)
      {
LABEL_11:
      }
      else
      {
        uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons);
        if ((v12 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          swift_bridgeObjectRelease();
          goto LABEL_10;
        }
        if ((v9 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v9 < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          *(id *)(v12 + 8 * v9 + 32);
LABEL_10:

          return;
        }
        __break(1u);
      }
    }
  }
}

void sub_100663428(uint64_t a1, void *a2)
{
  id v3 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (!v3) {
    return;
  }
  id v33 = v3;
  id v5 = [v33 visibleViewController];
  if (v5)
  {
    id v6 = v5;
    type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
    if (!swift_dynamicCastClass()) {
      goto LABEL_28;
    }
    sub_10050BF48(0, (unint64_t *)&qword_101672E50);
    if ((static NSObject.== infix(_:_:)() & 1) == 0)
    {
      id v22 = v33;
      id v33 = v6;
LABEL_29:

      goto LABEL_30;
    }
    id v7 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController);
    if (!v7 || (id v8 = [v7 presentationController]) == 0)
    {
LABEL_28:
      id v22 = v6;
      goto LABEL_29;
    }
    id v9 = v8;
    self;
    uint64_t v10 = swift_dynamicCastObjCClass();
    if (!v10)
    {
      id v23 = v9;
LABEL_27:

      goto LABEL_28;
    }
    id v15 = (void *)v10;
    if (a2)
    {
      [a2 systemLayoutSizeFittingSize:UILayoutFittingCompressedSize.width, UILayoutFittingCompressedSize.height];
      if (qword_10166EDD8 != -1)
      {
        double v31 = v17;
        double v32 = v16;
        swift_once();
        double v16 = v32;
        double v17 = v31;
      }
      uint64_t v18 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
      if (v18)
      {
        uint64_t v19 = *(void **)(v18 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_repTrackingViewHelper);
        if (v19)
        {
          double v20 = v16 + *((double *)&xmmword_10171A240 + 1) + unk_10171A258;
          double v21 = v17 + *(double *)&xmmword_10171A240 + *(double *)&qword_10171A250;
          goto LABEL_20;
        }
      }
    }
    else
    {
      sub_100657F44(v11, v12, v13, v14);
      uint64_t v26 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
      if (v26)
      {
        uint64_t v19 = *(void **)(v26 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_repTrackingViewHelper);
        if (v19)
        {
          double v20 = v24;
          double v21 = v25;
LABEL_20:
          id v27 = v19;
          uint64_t v28 = sub_10080AF0C();

          int v29 = *(unsigned __int8 *)(v28 + 56);
          LOBYTE(v27) = sub_100A49EB8(v20, v21 + 10.0);
          swift_release();
          if (v27)
          {
            if (v29) {
              uint64_t v30 = 2;
            }
            else {
              uint64_t v30 = 1;
            }
          }
          else
          {
            uint64_t v30 = 3;
          }
          goto LABEL_26;
        }
      }
    }
    uint64_t v30 = 2;
LABEL_26:
    [v15 setPermittedArrowDirections:v30];
    id v23 = v33;
    id v33 = v9;
    goto LABEL_27;
  }
LABEL_30:
}

void sub_1006636E4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_secondLayerPresentedBuilder);
}

id sub_100663814()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterPresenter();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSMiniFormatterPresenter()
{
  return self;
}

void sub_1006639A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  unint64_t v4 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
    if (!__CocoaSet.count.getter()) {
      return;
    }
  }
  else if (!*(void *)(a2 + 16))
  {
    return;
  }
  unint64_t v5 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (!__CocoaSet.count.getter()) {
      return;
    }
  }
  else if (!*(void *)(a1 + 16))
  {
    return;
  }
  if (!v4)
  {
    uint64_t v6 = *(void *)(v2 + 16);
    if (v5) {
      goto LABEL_11;
    }
LABEL_13:
    uint64_t v7 = *(void *)(a1 + 16);
    goto LABEL_14;
  }
  uint64_t v6 = __CocoaSet.count.getter();
  if (!v5) {
    goto LABEL_13;
  }
LABEL_11:
  uint64_t v7 = __CocoaSet.count.getter();
LABEL_14:
  if (v6 >= v7) {
    uint64_t v8 = a1;
  }
  else {
    uint64_t v8 = v2;
  }
  if (v6 < v7) {
    uint64_t v2 = a1;
  }
  if ((v8 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLBoardItem(0);
    sub_100668520((unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
    Set.Iterator.init(_cocoa:)();
    uint64_t v8 = v38;
    uint64_t v35 = v39;
    uint64_t v9 = v40;
    uint64_t v10 = v41;
    unint64_t v11 = v42;
  }
  else
  {
    uint64_t v12 = -1 << *(unsigned char *)(v8 + 32);
    uint64_t v35 = v8 + 56;
    uint64_t v9 = ~v12;
    uint64_t v13 = -v12;
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v11 = v14 & *(void *)(v8 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
  }
  type metadata accessor for CRLBoardItem(0);
  int64_t v34 = (unint64_t)(v9 + 64) >> 6;
  unint64_t v15 = v2 & 0xC000000000000001;
  uint64_t v36 = v2 + 56;
  uint64_t v33 = v8;
  while (1)
  {
    while (1)
    {
      uint64_t v17 = v10;
      if ((v8 & 0x8000000000000000) == 0) {
        break;
      }
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_59;
      }
      swift_dynamicCast();
      double v20 = v37;
      if (v15) {
        goto LABEL_26;
      }
LABEL_48:
      if (!*(void *)(v2 + 16)) {
        goto LABEL_55;
      }
      Swift::Int v25 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
      uint64_t v26 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v27 = v25 & ~v26;
      if (((*(void *)(v36 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
        goto LABEL_55;
      }
      id v28 = *(id *)(*(void *)(v2 + 48) + 8 * v27);
      char v29 = static NSObject.== infix(_:_:)();

      if (v29)
      {
LABEL_56:

        swift_bridgeObjectRelease();
LABEL_58:
        sub_10052E1EC();
        return;
      }
      uint64_t v30 = ~v26;
      while (1)
      {
        unint64_t v27 = (v27 + 1) & v30;
        if (((*(void *)(v36 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
          break;
        }
        id v31 = *(id *)(*(void *)(v2 + 48) + 8 * v27);
        char v32 = static NSObject.== infix(_:_:)();

        if (v32) {
          goto LABEL_56;
        }
      }
LABEL_55:

      uint64_t v8 = v33;
      unint64_t v15 = v2 & 0xC000000000000001;
    }
    if (v11)
    {
      unint64_t v18 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v19 = v18 | (v10 << 6);
      goto LABEL_47;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      return;
    }
    if (v21 >= v34) {
      goto LABEL_59;
    }
    unint64_t v22 = *(void *)(v35 + 8 * v21);
    ++v10;
    if (!v22)
    {
      uint64_t v10 = v17 + 2;
      if (v17 + 2 >= v34) {
        goto LABEL_59;
      }
      unint64_t v22 = *(void *)(v35 + 8 * v10);
      if (!v22)
      {
        uint64_t v10 = v17 + 3;
        if (v17 + 3 >= v34) {
          goto LABEL_59;
        }
        unint64_t v22 = *(void *)(v35 + 8 * v10);
        if (!v22)
        {
          uint64_t v10 = v17 + 4;
          if (v17 + 4 >= v34) {
            goto LABEL_59;
          }
          unint64_t v22 = *(void *)(v35 + 8 * v10);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_46:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_47:
    double v20 = *(void **)(*(void *)(v8 + 48) + 8 * v19);
    double v37 = v20;
    id v24 = v20;
    if (!v15) {
      goto LABEL_48;
    }
LABEL_26:
    char v16 = __CocoaSet.contains(_:)();

    if (v16)
    {
      swift_bridgeObjectRelease();
      goto LABEL_58;
    }
  }
  uint64_t v23 = v17 + 5;
  while (v34 != v23)
  {
    unint64_t v22 = *(void *)(v35 + 8 * v23++);
    if (v22)
    {
      uint64_t v10 = v23 - 1;
      goto LABEL_46;
    }
  }
LABEL_59:
  swift_bridgeObjectRelease();
  sub_10052E1EC();
}

void sub_100663E28()
{
  uint64_t v1 = v0;
  id v2 = [*(id *)&v0[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_editorController] selectionPath];
  uint64_t v3 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath;
  unint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath];
  *(void *)&v1[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_selectionPath] = v2;
  id v5 = v2;

  sub_10065C830();
  uint64_t v6 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController;
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController];
  if (v7)
  {
    id v8 = [v7 topViewController];
    if (v8)
    {
      uint64_t v9 = v8;
      type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
      uint64_t v10 = swift_dynamicCastClass();
      if (v10)
      {
        unint64_t v11 = *(void **)(v10 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
        id v12 = v11;

        if (v11)
        {

          v1[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldRepositionSecondLayerPopover] = 1;
          v1[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldUpdateSecondLayerPopoverPassthroughViews] = 1;
          v1[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldUpdateSecondLayerPermittedArrowDirections] = 1;
        }
      }
      else
      {
      }
    }
  }
  uint64_t v13 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC;
  uint64_t v14 = *(void **)&v1[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC];
  if (v14)
  {
    unint64_t v15 = *(void **)&v1[v3];
    if (v15)
    {
      uint64_t v16 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_isUpdatingMiniFormatter;
      v1[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_isUpdatingMiniFormatter] = 1;
      id v17 = v14;
      unint64_t v18 = v1;
      id v19 = v15;
      sub_10065E228(0, v18, v14, 0);

      sub_10065D27C(v19, 0);
      v1[v16] = 0;
    }
  }
  double v20 = *(void **)&v1[v6];
  if (v20)
  {
    id v21 = [v20 topViewController];
    if (v21)
    {
      unint64_t v22 = v21;
      type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
      uint64_t v23 = swift_dynamicCastClass();
      if (!v23)
      {
LABEL_16:

        goto LABEL_17;
      }
      id v24 = *(void **)(v23 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
      id v25 = v24;

      if (v24)
      {

        sub_1006632BC();
        if (v26)
        {
          unint64_t v22 = v26;
          *((unsigned char *)v26 + OBJC_IVAR____TtC8Freeform34CRLiOSMiniFormatterBaseLayerButton_isPresentingPopover) = 1;
          [v26 setHighlighted:1];
          goto LABEL_16;
        }
      }
    }
  }
LABEL_17:
  unint64_t v27 = *(char **)&v1[v13];
  if (!v27) {
    return;
  }
  id v28 = *(void **)&v27[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_stackViewForDisplay];
  double v45 = v27;
  id v29 = [v28 arrangedSubviews];
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  unint64_t v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v30 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    char v32 = (void *)&unk_101678000;
    if (v31) {
      goto LABEL_20;
    }
LABEL_39:
    swift_bridgeObjectRelease_n();

    return;
  }
  uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  char v32 = &unk_101678000;
  if (!v31) {
    goto LABEL_39;
  }
LABEL_20:
  if (v31 >= 1)
  {
    uint64_t v33 = 0;
    uint64_t v34 = (uint64_t)&v45[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_delegate];
    unint64_t v35 = v30 & 0xC000000000000001;
    while (1)
    {
      id v37 = v35 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v30 + 8 * v33 + 32);
      uint64_t v38 = v37;
      sub_1005498A4(v34, (uint64_t)v47);
      sub_1005057FC((uint64_t *)&unk_101678780);
      type metadata accessor for CRLiOSMiniFormatterPresenter();
      if (swift_dynamicCast()) {
        break;
      }
      uint64_t v36 = 1;
LABEL_23:
      ++v33;
      [v38 setIsAccessibilityElement:v36];

      if (v31 == v33) {
        goto LABEL_39;
      }
    }
    uint64_t v39 = *(void **)&v46[v32[215]];
    if (v39 && (id v40 = [v39 topViewController]) != 0)
    {
      uint64_t v41 = v40;
      type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
      uint64_t v42 = swift_dynamicCastClass();
      if (v42)
      {
        uint64_t v43 = *(void *)(v42 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);

        BOOL v44 = v43 == 0;
        char v32 = (void *)&unk_101678000;
        uint64_t v36 = v44;
        goto LABEL_36;
      }
    }
    else
    {
    }
    uint64_t v36 = 1;
LABEL_36:
    unint64_t v35 = v30 & 0xC000000000000001;
    goto LABEL_23;
  }
  __break(1u);
}

void sub_100664274()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController);
  if (v1)
  {
    id v7 = v1;
    if (([v7 isBeingDismissed] & 1) == 0)
    {
      id v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController);
      id v3 = [v2 presentedViewController];
      if (v3)
      {
        unint64_t v4 = v3;
        sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
        id v5 = v7;
        id v6 = v4;
        LOBYTE(v4) = static NSObject.== infix(_:_:)();

        if (v4)
        {
          [v2 dismissViewControllerAnimated:1 completion:0];
          sub_10065E894();
        }
      }
    }
  }
}

uint64_t sub_1006643E4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath);
  if (!v1) {
    return 0;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    if (__CocoaSet.count.getter() != 1) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + 16);
    swift_bridgeObjectRetain();
    if (v2 != 1)
    {
LABEL_17:
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  id v3 = (void *)sub_10099985C(v1);
  swift_bridgeObjectRelease();
  if (v3)
  {
    id v4 = [v3 knobs];
    sub_10050BF48(0, &qword_1016787C0);
    unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v5 >> 62) {
      goto LABEL_21;
    }
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v6)
    {
      uint64_t v7 = 4;
      while (1)
      {
        id v8 = (v5 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : *(id *)(v5 + 8 * v7);
        uint64_t v9 = v8;
        uint64_t v10 = v7 - 3;
        if (__OFADD__(v7 - 4, 1)) {
          break;
        }
        type metadata accessor for CRLConnectionLineKnob();
        if (swift_dynamicCastClass())
        {
          swift_bridgeObjectRelease();

          return 1;
        }

        ++v7;
        if (v10 == v6) {
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_21:
      swift_bridgeObjectRetain();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
LABEL_16:

    goto LABEL_17;
  }
  return 0;
}

void sub_10066459C(void *a1, void *a2, void *a3)
{
  objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController());
  id v7 = a1;
  id v8 = v3;
  id v9 = a3;
  uint64_t v46 = sub_100656ADC(v7, a3, 0, 0, (uint64_t)v3, (uint64_t)&off_10150D6C8, 0.0);
  [v7 systemLayoutSizeFittingSize:UILayoutFittingCompressedSize.width, UILayoutFittingCompressedSize.height];
  double v11 = v10;
  double v13 = v12;
  if (qword_10166EDD8 != -1) {
    swift_once();
  }
  uint64_t v14 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC;
  uint64_t v15 = *(void *)&v8[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC];
  if (v15
    && (uint64_t v16 = *(void **)(v15 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_repTrackingViewHelper)) != 0)
  {
    double v17 = v11 + *((double *)&xmmword_10171A240 + 1) + unk_10171A258;
    double v18 = v13 + *(double *)&xmmword_10171A240 + *(double *)&qword_10171A250;
    id v19 = v16;
    uint64_t v20 = sub_10080AF0C();

    int v21 = *(unsigned __int8 *)(v20 + 56);
    LOBYTE(v19) = sub_100A49EB8(v17, v18 + 10.0);
    swift_release();
    if (v19)
    {
      if (v21) {
        uint64_t v22 = 2;
      }
      else {
        uint64_t v22 = 1;
      }
    }
    else
    {
      uint64_t v22 = 3;
    }
  }
  else
  {
    uint64_t v22 = 2;
  }
  sub_100664980((uint64_t)v46, a2, v22);
  uint64_t v23 = *(char **)&v8[v14];
  if (!v23)
  {

    return;
  }
  id v24 = *(void **)&v23[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_stackViewForDisplay];
  BOOL v44 = v23;
  id v25 = [v24 arrangedSubviews];
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  unint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v26 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    if (v27) {
      goto LABEL_14;
    }
LABEL_34:
    swift_bridgeObjectRelease_n();

    return;
  }
  uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v27) {
    goto LABEL_34;
  }
LABEL_14:
  if (v27 >= 1)
  {
    uint64_t v28 = 0;
    uint64_t v29 = (uint64_t)&v44[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_delegate];
    unint64_t v30 = (uint64_t *)&unk_101678780;
    unint64_t v31 = v26 & 0xC000000000000001;
    unint64_t v45 = v26 & 0xC000000000000001;
    while (1)
    {
      if (v31) {
        id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v33 = *(id *)(v26 + 8 * v28 + 32);
      }
      uint64_t v34 = v33;
      sub_1005498A4(v29, (uint64_t)v48);
      sub_1005057FC(v30);
      type metadata accessor for CRLiOSMiniFormatterPresenter();
      if (swift_dynamicCast())
      {
        unint64_t v35 = *(void **)&v47[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController];
        if (v35 && (id v36 = [v35 topViewController]) != 0)
        {
          id v37 = v36;
          uint64_t v38 = swift_dynamicCastClass();
          if (v38)
          {
            uint64_t v39 = v29;
            unint64_t v40 = v26;
            uint64_t v41 = v30;
            uint64_t v42 = *(void *)(v38 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);

            BOOL v43 = v42 == 0;
            unint64_t v30 = v41;
            unint64_t v26 = v40;
            uint64_t v29 = v39;
            unint64_t v31 = v45;
            uint64_t v32 = v43;
            goto LABEL_18;
          }
        }
        else
        {
        }
      }
      uint64_t v32 = 1;
LABEL_18:
      ++v28;
      [v34 setIsAccessibilityElement:v32];

      if (v27 == v28) {
        goto LABEL_34;
      }
    }
  }
  __break(1u);
}

void sub_100664980(uint64_t a1, void *a2, uint64_t a3)
{
  if ((v3[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_isInProcessOfPresentingSecondLayerPopover] & 1) == 0)
  {
    id v4 = v3;
    v3[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_isInProcessOfPresentingSecondLayerPopover] = 1;
    sub_10065E6CC(1, 0, 0);
    id v8 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:a1];
    [v8 setNavigationBarHidden:1 animated:0];
    [v8 setDelegate:v3];
    id v9 = (objc_class *)type metadata accessor for CRLiOSMiniFormatterPopoverWrappedNavigationController();
    double v10 = (char *)objc_allocWithZone(v9);
    *(void *)&v10[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterPopoverWrappedNavigationController_wrappedNavigationController] = v8;
    v40.receiver = v10;
    v40.super_class = v9;
    id v11 = v8;
    [super initWithNibName:0 bundle:0];
    [v12 setModalPresentationStyle:7];
    double v13 = *(void **)&v4[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController];
    *(void *)&v4[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController] = v12;
    id v14 = v12;

    id v15 = [v14 popoverPresentationController];
    if (v15)
    {
      uint64_t v16 = v15;
      [v15 setDelegate:v4];
      [v16 setSourceView:a2];
      [v16 setPermittedArrowDirections:a3];
      aBlock[0] = *(void *)&v4[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_inspectorElementsBaseButtons];
      swift_bridgeObjectRetain();
      unint64_t v17 = swift_bridgeObjectRetain();
      sub_1006E0E24(v17);
      id v18 = a2;
      id v19 = sub_100667C78(aBlock[0]);
      swift_bridgeObjectRelease();

      if ((unint64_t)v19 >> 62)
      {
        sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
        _bridgeCocoaArray<A>(_:)();
      }
      else
      {
        swift_bridgeObjectRetain();
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
      }
      swift_bridgeObjectRelease();
      sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v16 setPassthroughViews:isa];

      int v21 = *(void **)&v4[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController];
      *(void *)&v4[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController] = v11;
      id v22 = v11;

      uint64_t v23 = *(void **)&v4[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController];
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = v4;
      aBlock[4] = (unint64_t)sub_10066850C;
      void aBlock[5] = v24;
      aBlock[0] = (unint64_t)_NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = (unint64_t)sub_100679958;
      aBlock[3] = (unint64_t)&unk_10150D858;
      id v25 = _Block_copy(aBlock);
      unint64_t v26 = v4;
      swift_release();
      [v23 presentViewController:v14 animated:1 completion:v25];
      _Block_release(v25);
      uint64_t v27 = &_swiftEmptySetSingleton;
      aBlock[0] = (unint64_t)&_swiftEmptySetSingleton;
      if (*(void *)&v26[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC])
      {
        uint64_t v27 = sub_10065F00C();
        aBlock[0] = (unint64_t)v27;
      }
      uint64_t v28 = *(void **)&v26[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_auxiliaryPresentedBuilder];
      if (v28)
      {
        uint64_t v29 = *(uint64_t (**)(void))((swift_isaMask & *v28) + 0x178);
        unint64_t v30 = v28;
        unint64_t v31 = v29();
        sub_10057C1E4(v31);

        uint64_t v27 = (void *)aBlock[0];
      }
      uint64_t v32 = *(void *)&v26[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects];
      *(void *)&v26[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects] = v27;
      id v33 = *(void **)&v26[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_changeNotifier];
      if (v33)
      {
        uint64_t v34 = v26;
        id v35 = v33;
        sub_100667E58(v32, v35, (uint64_t)v34, (SEL *)&selRef_removeObserver_forChangeSource_);

        id v36 = v34;
        id v37 = v35;
        uint64_t v38 = swift_bridgeObjectRetain();
        sub_100667E58(v38, v37, (uint64_t)v36, (SEL *)&selRef_addObserver_forChangeSource_);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease();
      }
    }
    else
    {
    }
  }
}

void sub_100664E64()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController) traitCollection];
  if (objc_msgSend(self, "crl_phoneUI"))
  {
  }
  else
  {
    unsigned __int8 v2 = [v1 crl_isCompactWidth];

    if ((v2 & 1) == 0) {
      return;
    }
  }
  id v3 = [*(id *)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting) interactiveCanvasController];
  if (v3)
  {
    id v4 = v3;
    [v3 unobscuredFrameDidChange];
    [v4 scrollCurrentSelectionToVisibleWithOptions:1];
  }
}

void sub_100664F68(void *a1, void *a2)
{
  id v4 = *(void **)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController];
  *(void *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController] = a1;
  id v5 = a1;

  uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_auxiliaryPresentedBuilder];
  *(void *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_auxiliaryPresentedBuilder] = a2;
  id v7 = a2;

  [v5 setModalPresentationStyle:7];
  id v8 = [v5 view];
  if (v8)
  {
    id v9 = v8;
    [v8 setAccessibilityViewIsModal:1];

    id v10 = [v5 popoverPresentationController];
    if (v10)
    {
      id v62 = v10;
      [v10 setDelegate:v2];
      [v62 setPermittedArrowDirections:12];
      uint64_t v11 = *(void *)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_repsForCurrentSelectionPath];
      if (v11)
      {
        id v12 = *(void **)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController];
        swift_bridgeObjectRetain();
        id v13 = [v12 canvasView];
        [v62 setSourceView:v13];

        double v14 = sub_100A4A098(v11);
        double v16 = v15;
        double v18 = v17;
        double v20 = v19;
        swift_bridgeObjectRelease();
        id v21 = [*(id *)&v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting] interactiveCanvasController];
        if (v21)
        {
          id v22 = v21;
          [v21 convertUnscaledToBoundsRect:v14, v16, v18, v20];
          CGFloat v24 = v23;
          CGFloat v26 = v25;
          CGFloat v28 = v27;
          CGFloat v30 = v29;
          [v22 visibleScaledRectForCanvasUI];
          v72.origin.CGFloat x = v31;
          CGFloat v58 = v31;
          CGFloat v33 = v32;
          CGFloat v35 = v34;
          CGFloat v37 = v36;
          v65.origin.CGFloat x = v24;
          v65.origin.CGFloat y = v26;
          v65.size.CGFloat width = v28;
          v65.size.CGFloat height = v30;
          v72.origin.CGFloat y = v33;
          v72.size.CGFloat width = v35;
          v72.size.CGFloat height = v37;
          CGRect v66 = CGRectIntersection(v65, v72);
          CGFloat x = v66.origin.x;
          CGFloat y = v66.origin.y;
          CGFloat width = v66.size.width;
          CGFloat height = v66.size.height;
          double v42 = CGRectGetWidth(v66);
          CGFloat v59 = x;
          CGFloat v60 = y;
          v67.origin.CGFloat x = x;
          v67.origin.CGFloat y = y;
          CGFloat v61 = width;
          v67.size.CGFloat width = width;
          double v43 = height;
          v67.size.CGFloat height = height;
          double v44 = v42 * CGRectGetHeight(v67);
          v68.origin.CGFloat x = v58;
          v68.origin.CGFloat y = v33;
          v68.size.CGFloat width = v35;
          v68.size.CGFloat height = v37;
          double v45 = CGRectGetWidth(v68);
          v69.origin.CGFloat x = v58;
          v69.origin.CGFloat y = v33;
          v69.size.CGFloat width = v35;
          v69.size.CGFloat height = v37;
          if (v45 * CGRectGetHeight(v69) >= v44 + v44)
          {
            double MidY = v60;
            double v48 = v61;
            double MidX = v59;
          }
          else
          {
            v70.origin.CGFloat x = x;
            v70.origin.CGFloat y = v60;
            v70.size.CGFloat width = v61;
            v70.size.CGFloat height = height;
            double MidX = CGRectGetMidX(v70);
            v71.origin.CGFloat x = x;
            v71.origin.CGFloat y = v60;
            v71.size.CGFloat width = v61;
            v71.size.CGFloat height = height;
            double MidY = CGRectGetMidY(v71);
            double v48 = 1.0;
            double v43 = 1.0;
          }
        }
        else
        {
          double v48 = 0.0;
          double v43 = 0.0;
          double MidX = 0.0;
          double MidY = 0.0;
        }
        [v62 setSourceRect:MidX, MidY, v48, v43];
      }
      else
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"presentAuxiliary(popoverVC:from:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterPresenter.swift", 103, 2, 1085, (uint64_t)"Cannot present an auxiliary popover without any reps selected on casnvas", 72, 2u, (uint64_t)_swiftEmptyArrayStorage);
        LOBYTE(v57) = 2;
        id v55 = "Cannot present an auxiliary popover without any reps selected on casnvas";
        uint64_t v56 = 72;
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentAuxiliary(popoverVC:from:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterPresenter.swift", 103, 2, 1085);
      }
      [v2 dismissSecondLayerPopover:v55, v56, v57];
      id v49 = [v5 traitCollection];
      if (objc_msgSend(self, "crl_phoneUI"))
      {
      }
      else if (!v49 {
             || (unsigned __int8 v50 = objc_msgSend(v49, "crl_isCompactWidth"), v49, (v50 & 1) == 0))
      }
      {
        sub_10065DFD8(1, 1, 0);
      }
      if (v11)
      {
        uint64_t v51 = *(void **)&v2[OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController];
        uint64_t v52 = swift_allocObject();
        *(void *)(v52 + 16) = v5;
        aBlock[4] = sub_100666C84;
        void aBlock[5] = v52;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(void *)"";
        aBlock[2] = sub_100679958;
        aBlock[3] = &unk_10150D808;
        uint64_t v53 = _Block_copy(aBlock);
        id v54 = v5;
        swift_release();
        [v51 presentViewController:v54 animated:1 completion:v53];

        _Block_release(v53);
      }
      else
      {
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1006654C4(void *a1)
{
  UIAccessibilityNotifications v1 = UIAccessibilityScreenChangedNotification;
  id v2 = [a1 view];
  UIAccessibilityPostNotification(v1, v2);
}

void sub_10066552C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController;
  id v5 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (v5)
  {
    id v6 = [v5 topViewController];
    if (v6)
    {
      id v7 = v6;
      sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
      id v8 = a1;
      id v9 = v7;
      char v10 = static NSObject.== infix(_:_:)();

      if ((v10 & 1) != 0 && ([v8 isBeingPresented] & 1) == 0)
      {
        uint64_t v11 = *(void **)(v2 + v4);
        if (v11)
        {
          id v12 = *(void **)(v2
                         + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController);
          if (v12)
          {
            id v13 = v11;
            id v14 = v12;
            sub_100657F44(v15, v16, v17, v18);
            [v13 setPreferredContentSize:];
            id v19 = v14;
            [v13 preferredContentSize];
            [v19 setPreferredContentSize:];
          }
        }
      }
    }
  }
}

void sub_100665690()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (v2)
  {
    id v3 = [v2 topViewController];
    if (v3)
    {
      id v14 = v3;
      type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
      if (swift_dynamicCastClass()
        && (uint64_t v4 = *(void **)(v0 + v1)) != 0
        && (id v5 = *(void **)(v0
                          + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController)) != 0)
      {
        id v6 = v4;
        id v7 = v5;
        sub_100657F44(v8, v9, v10, v11);
        [v6 setPreferredContentSize:];
        id v12 = v7;
        [v6 preferredContentSize];
        [v12 setPreferredContentSize:];

        id v13 = v12;
      }
      else
      {
        id v13 = v14;
      }
    }
  }
}

void sub_1006657A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  id v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v32 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  double v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  double v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  id v19 = (char *)&v26 - v18;
  double v20 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (v20)
  {
    id v31 = v20;

    sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
    uint64_t v29 = v3;
    uint64_t v30 = v7;
    uint64_t v27 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    CGFloat v28 = *(void (**)(char *, uint64_t))(v12 + 8);
    v28(v15, v11);
    uint64_t v21 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_100666C2C;
    void aBlock[5] = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_100679958;
    aBlock[3] = &unk_10150D7B8;
    id v22 = _Block_copy(aBlock);
    swift_retain();
    double v23 = v10;
    static DispatchQoS.unspecified.getter();
    CGFloat v33 = _swiftEmptyArrayStorage;
    sub_100668520((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    uint64_t v24 = v32;
    uint64_t v26 = v11;
    sub_1005057FC((uint64_t *)&unk_1016725D0);
    sub_10056B494();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    double v25 = (void *)v27;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v2);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v23, v30);
    v28(v19, v26);
    swift_release();
    swift_release();
  }
}

void sub_100665BB4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
    if (v2)
    {
      id v3 = v2;
      id v4 = [v3 topViewController];
      if (v4)
      {
        id v5 = v4;
        UIAccessibilityNotifications v6 = UIAccessibilityLayoutChangedNotification;
        id v7 = [v4 view];
        UIAccessibilityPostNotification(v6, v7);

        uint64_t v1 = v5;
        id v3 = v7;
      }

      uint64_t v1 = v3;
    }
  }
}

void sub_100665C90()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting) interactiveCanvasController];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = (char *)[v1 commandController];

    if (v3)
    {
      sub_10078F988(0);
      id v4 = &v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas];
      swift_beginAccess();
      uint64_t v5 = *(void *)v4;
      if (*(void *)v4 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
        if (v6)
        {
LABEL_5:
          unint64_t v7 = v6 - 1;
          if (!__OFSUB__(v6, 1))
          {
            if ((v5 & 0xC000000000000001) == 0)
            {
              if ((v7 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else if (v7 < *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                uint64_t v6 = *(void *)(v5 + 8 * v7 + 32);
                swift_retain();
LABEL_10:
                swift_bridgeObjectRelease();
                int v8 = *(unsigned __int8 *)(v6 + 16);
                if (v8 == 3 || v8 == 2 || v8 == 1) {
                  goto LABEL_29;
                }
                id v4 = *(char **)v4;
                if (!((unint64_t)v4 >> 62))
                {
                  uint64_t v9 = *(void *)(((unint64_t)v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  swift_bridgeObjectRetain_n();
                  if (v9)
                  {
LABEL_15:
                    if (v9 < 1)
                    {
                      __break(1u);
                      return;
                    }
                    uint64_t v10 = 0;
                    do
                    {
                      if (((unint64_t)v4 & 0xC000000000000001) != 0)
                      {
                        uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                      }
                      else
                      {
                        uint64_t v11 = *(void *)&v4[8 * v10 + 32];
                        swift_retain();
                      }
                      ++v10;
                      uint64_t v12 = *(id *)(v11 + 24);
                      sub_10078D41C(v12, 0);
                      swift_release();
                    }
                    while (v9 != v10);
                  }
LABEL_28:
                  swift_bridgeObjectRelease_n();
                  *(unsigned char *)(v6 + 16) = 1;
LABEL_29:

                  swift_release();
                  return;
                }
LABEL_27:
                swift_bridgeObjectRetain_n();
                uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
                if (v9) {
                  goto LABEL_15;
                }
                goto LABEL_28;
              }
              __break(1u);
              goto LABEL_27;
            }
LABEL_24:
            uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_10;
          }
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
      }
      else
      {
        uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v6) {
          goto LABEL_5;
        }
      }
      swift_bridgeObjectRelease();
      id v3 = "enableProgressiveEnqueuingInCurrentGroup() called without a group being open.";
      id v4 = "enableProgressiveEnqueuingInCurrentGroup()";
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 680, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.", 77, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.");
      sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 680);
      SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v13, v14);
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      goto LABEL_23;
    }
  }
}

id sub_100665FAC()
{
  id result = [*(id *)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting) interactiveCanvasController];
  if (result)
  {
    uint64_t v2 = result;
    id v3 = (char *)[result commandController];

    if (v3)
    {
      id v4 = &v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas];
      swift_beginAccess();
      if (*(void *)v4 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();

        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v5 = *(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      return (id)(v5 > 0);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_10066609C()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
  if (!v1) {
    goto LABEL_9;
  }
  id v2 = [v1 view];
  if (!v2)
  {
    __break(1u);
    return;
  }
  id v3 = v2;
  id v4 = [v2 window];

  if (!v4)
  {
LABEL_9:
    if (qword_10166EDF0 == -1) {
      return;
    }
LABEL_11:
    swift_once();
    return;
  }
  [v4 frame];
  double v6 = v5;

  if (qword_10166EDF0 != -1) {
    swift_once();
  }
  if (*(double *)&qword_10171A278 >= v6 && qword_10166EDF8 != -1) {
    goto LABEL_11;
  }
}

void sub_1006661E0(void *a1)
{
  uint64_t v2 = v1;
  id v4 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (v4)
  {
    id v5 = [v4 visibleViewController];
    if (v5)
    {
      double v6 = v5;
      sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
      id v7 = a1;
      id v8 = v6;
      char v9 = static NSObject.== infix(_:_:)();

      if (v9)
      {
        sub_10065E894();
      }
    }
  }
}

id sub_1006662B4(uint64_t a1)
{
  id result = *(id *)(v1 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
  if (result) {
    return [result pushViewController:a1 animated:1];
  }
  return result;
}

void sub_1006662EC()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting) interactiveCanvasController];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v1 commandController];

    if (v3)
    {
      sub_10078FB90(0);
    }
  }
}

void sub_1006663A0(void *a1, uint64_t a2)
{
}

void sub_1006663D0(void *a1)
{
}

void sub_1006663F4(void *a1)
{
}

uint64_t sub_100666494(void *a1, void *a2)
{
  id v4 = [a1 presentedViewController];
  id v5 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController);
  if (v4)
  {
    double v6 = v4;
    if (!v5)
    {

      return -1;
    }
    sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
    id v7 = v5;
    id v8 = v6;
    char v9 = static NSObject.== infix(_:_:)();

    if ((v9 & 1) == 0) {
      return -1;
    }
  }
  else if (v5)
  {
    return -1;
  }
  if ((objc_msgSend(self, "crl_phoneUI") & 1) != 0
    || (objc_msgSend(a2, "crl_isCompactWidth") & 1) != 0)
  {
    return 1;
  }
  return -1;
}

void sub_1006665DC(void *a1)
{
  uint64_t v2 = v1;
  id v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController);
  id v5 = v4;
  id v6 = [a1 presentedViewController];
  id v7 = v6;
  if (!v4)
  {
    if (!v6) {
      goto LABEL_8;
    }

LABEL_7:
    goto LABEL_9;
  }
  if (!v6) {
    goto LABEL_7;
  }
  sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
  id v8 = v5;
  char v9 = static NSObject.== infix(_:_:)();

  if (v9) {
LABEL_8:
  }
    sub_10065E894();
LABEL_9:
  uint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedAuxiliaryViewController);
  id v15 = v10;
  id v11 = [a1 presentedViewController];
  if (v10)
  {
    if (v11)
    {
      id v14 = v11;
      sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
      id v12 = v15;
      char v13 = static NSObject.== infix(_:_:)();

      if ((v13 & 1) == 0) {
        return;
      }
      goto LABEL_14;
    }
    id v11 = v15;
  }
  else if (!v11)
  {
LABEL_14:
    sub_10065EBC4();
    return;
  }
}

void sub_1006668EC()
{
  v16.receiver = v0;
  v16.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v2 = v1;
  id v3 = [self systemBackgroundColor];
  [v2 setBackgroundColor:v3];

  id v4 = *(void **)&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterPopoverWrappedNavigationController_wrappedNavigationController];
  [v4 willMoveToParentViewController:v0];
  [v0 addChildViewController:v4];
  id v5 = [v4 view];
  if (!v5)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v6 = v5;
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v7 = [v0 view];
  if (!v7)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v8 = v7;
  id v9 = [v4 view];
  if (!v9)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v10 = v9;
  [v8 addSubview:v9];

  [v4 didMoveToParentViewController:v0];
  id v11 = [v0 view];
  if (!v11) {
    return;
  }
  id v12 = v11;
  id v13 = [v4 view];
  if (!v13)
  {
LABEL_15:
    __break(1u);
    return;
  }
  id v14 = v13;
  Class isa = [v13 crl_constraintsToAllSidesOfItem:v12];

  if (!isa)
  {
    sub_10050BF48(0, (unint64_t *)&qword_101674200);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  [self activateConstraints:isa];
}

uint64_t type metadata accessor for CRLiOSMiniFormatterPopoverWrappedNavigationController()
{
  return self;
}

uint64_t sub_100666BF4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100666C2C()
{
}

uint64_t sub_100666C34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100666C44()
{
  return swift_release();
}

uint64_t sub_100666C4C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100666C84()
{
  sub_1006654C4(*(void **)(v0 + 16));
}

int64_t sub_100666C90(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (id result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100666D74(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 8 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_100666DC4(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(unsigned int *)(*(void *)(a4 + 48) + 4 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

void sub_100666E14(uint64_t a1, int a2, char a3, uint64_t a4)
{
}

void sub_100666E2C(uint64_t a1, int a2, char a3, uint64_t a4)
{
}

void sub_100666E40(uint64_t a1, int a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      __CocoaSet.element(at:)();
      sub_10050BF48(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (__CocoaSet.Index.age.getter() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  __CocoaSet.Index.element.getter();
  sub_10050BF48(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  a5 = v17;
  swift_unknownObjectRelease();
  Swift::Int v8 = NSObject._rawHashValue(seed:)(*(void *)(a4 + 40));
  uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v7 = v8 & ~v9;
  if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v10 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
  char v11 = static NSObject.== infix(_:_:)();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v7 = (v7 + 1) & v12;
      if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_23;
      }
      id v13 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
      char v14 = static NSObject.== infix(_:_:)();
    }
    while ((v14 & 1) == 0);
  }

LABEL_17:
  id v15 = *(void **)(*(void *)(a4 + 48) + 8 * v7);

  id v16 = v15;
}

uint64_t sub_1006670B0(unint64_t a1, int a2, char a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  id v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v11, v14);
  uint64_t v17 = (char *)&v34 - v16;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) == 0)
    {
      if ((a1 & 0x8000000000000000) != 0 || 1 << *(unsigned char *)(a4 + 32) <= (uint64_t)a1)
      {
        __break(1u);
      }
      else if ((*(void *)(a4 + 8 * (a1 >> 6) + 56) >> a1))
      {
        if (*(_DWORD *)(a4 + 36) == a2)
        {
LABEL_17:
          uint64_t v18 = *(void *)(*(void *)(a4 + 48) + 8 * a1);
          swift_retain();
          return v18;
        }
        __break(1u);
        goto LABEL_10;
      }
      __break(1u);
      goto LABEL_21;
    }
LABEL_10:
    uint64_t result = __CocoaSet.Index.age.getter();
    if (result == *(_DWORD *)(a4 + 36))
    {
      double v36 = v13;
      uint64_t v41 = __CocoaSet.Index.element.getter();
      type metadata accessor for CRLTransactableHashableWrapper();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v19 = v40;
      swift_unknownObjectRelease();
      Hasher.init(_seed:)();
      uint64_t v20 = *(void *)(v19 + 24);
      uint64_t v39 = v19;
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v20 + 32))(ObjectType, v20);
      sub_100668520((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
      dispatch thunk of Hashable.hash(into:)();
      id v22 = *(void (**)(char *, uint64_t))(v9 + 8);
      uint64_t v37 = v9 + 8;
      uint64_t v38 = v8;
      v22(v17, v8);
      Swift::Int v23 = Hasher._finalize()();
      uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
      a1 = v23 & ~v24;
      uint64_t v35 = a4 + 56;
      if ((*(void *)(a4 + 56 + ((a1 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a1))
      {
        uint64_t v34 = ~v24;
        while (1)
        {
          uint64_t v8 = a4;
          uint64_t v25 = *(void *)(*(void *)(*(void *)(a4 + 48) + 8 * a1) + 24);
          uint64_t v26 = swift_getObjectType();
          uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v25 + 32);
          swift_retain();
          v27(v26, v25);
          uint64_t v28 = *(void *)(v39 + 24);
          uint64_t v29 = swift_getObjectType();
          uint64_t v30 = v36;
          (*(void (**)(uint64_t, uint64_t))(v28 + 32))(v29, v28);
          char v31 = static UUID.== infix(_:_:)();
          uint64_t v32 = v30;
          uint64_t v33 = v38;
          v22(v32, v38);
          v22(v17, v33);
          swift_release();
          if (v31) {
            break;
          }
          a1 = (a1 + 1) & v34;
          a4 = v8;
          if (((*(void *)(v35 + ((a1 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a1) & 1) == 0) {
            goto LABEL_15;
          }
        }
      }
      else
      {
LABEL_15:
        swift_release();
        __break(1u);
      }
      swift_release();
      a4 = v8;
      goto LABEL_17;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (a3)
  {
    uint64_t v41 = __CocoaSet.element(at:)();
    type metadata accessor for CRLTransactableHashableWrapper();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v18 = v40;
    swift_unknownObjectRelease();
    return v18;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1006674B4@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_10066756C(a1, a2, a3, type metadata accessor for CRLBoardIdentifier, type metadata accessor for CRLBoardIdentifier, a4);
}

uint64_t sub_1006674D0@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (result < 0 || 1 << *(unsigned char *)(a3 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2) {
    return sub_10050BF84(*(void *)(a3 + 48) + 40 * result, a4);
  }
LABEL_8:
  __break(1u);
  return result;
}

void sub_100667528(uint64_t a1, int a2, char a3, uint64_t a4)
{
}

void sub_10066753C(uint64_t a1, int a2, char a3, uint64_t a4)
{
}

uint64_t sub_100667550@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_10066756C(a1, a2, a3, type metadata accessor for CRLBoardLibraryViewModel.Item, type metadata accessor for CRLBoardLibraryViewModel.Item, a4);
}

uint64_t sub_10066756C@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t (*a4)(void)@<X4>, uint64_t (*a5)(void)@<X5>, uint64_t a6@<X8>)
{
  if (result < 0 || (uint64_t v6 = result, 1 << *(unsigned char *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    uint64_t v9 = *(void *)(a3 + 48);
    uint64_t v10 = a4(0);
    return sub_100668C00(v9 + *(void *)(*(void *)(v10 - 8) + 72) * v6, a6, a5);
  }
LABEL_8:
  __break(1u);
  return result;
}

void sub_100667614(uint64_t a1, int a2, char a3, uint64_t a4)
{
}

void sub_100667628(uint64_t a1, int a2, char a3, uint64_t a4)
{
}

void sub_100667640(uint64_t a1, int a2, char a3, uint64_t a4, void (*a5)(void))
{
  unint64_t v8 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      __CocoaSet.element(at:)();
      a5(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (__CocoaSet.Index.age.getter() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  __CocoaSet.Index.element.getter();
  a5(0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  unint64_t v5 = v18;
  swift_unknownObjectRelease();
  Swift::Int v9 = NSObject._rawHashValue(seed:)(*(void *)(a4 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v8 = v9 & ~v10;
  if (((*(void *)(a4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v11 = *(id *)(*(void *)(a4 + 48) + 8 * v8);
  char v12 = static NSObject.== infix(_:_:)();

  if ((v12 & 1) == 0)
  {
    uint64_t v13 = ~v10;
    do
    {
      unint64_t v8 = (v8 + 1) & v13;
      if (((*(void *)(a4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_23;
      }
      id v14 = *(id *)(*(void *)(a4 + 48) + 8 * v8);
      char v15 = static NSObject.== infix(_:_:)();
    }
    while ((v15 & 1) == 0);
  }

LABEL_17:
  uint64_t v16 = *(void **)(*(void *)(a4 + 48) + 8 * v8);

  id v17 = v16;
}

uint64_t sub_1006678A8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  Swift::Int v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_100667930(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  Swift::Int v9 = sub_1005767BC((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v9, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_10053974C(&v12, v10 + 40 * a1 + 32);
}

double *sub_1006679C8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v5);
      unint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      uint64_t v9 = sub_100662D68(v6, a3);

      if (v9)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      ++v5;
      if (v8 == v4) {
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
LABEL_16:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100667B44(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2) {
      goto LABEL_3;
    }
    return 0;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v2) {
    return 0;
  }
LABEL_3:
  sub_10050BF48(0, (unint64_t *)&qword_101672E50);
  for (uint64_t i = 0; ; ++i)
  {
    id v4 = (a1 & 0xC000000000000001) != 0
       ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
       : *(id *)(a1 + 8 * i + 32);
    uint64_t v5 = v4;
    char v6 = static NSObject.== infix(_:_:)();

    if (v6) {
      break;
    }
    uint64_t v7 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    if (v7 == v2) {
      return 0;
    }
  }
  return i;
}

double *sub_100667C78(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        char v6 = v5;
        unint64_t v7 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_16;
        }
        if ([v5 showsMenuAsPrimaryAction]
          || (sub_10050BF48(0, (unint64_t *)&unk_101672590), (static NSObject.== infix(_:_:)() & 1) != 0))
        {
        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        ++v3;
        if (v7 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v3 < *(void *)(v4 + 16)) {
        break;
      }
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v5 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void sub_100667E18(uint64_t a1, void *a2, uint64_t a3)
{
}

void sub_100667E38(uint64_t a1, void *a2, uint64_t a3)
{
}

void sub_100667E58(uint64_t a1, void *a2, uint64_t a3, SEL *a4)
{
  uint64_t v6 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLBoardItem(0);
    sub_100668520((unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
    Set.Iterator.init(_cocoa:)();
    uint64_t v6 = v25;
    uint64_t v23 = v26;
    uint64_t v7 = v27;
    uint64_t v8 = v28;
    unint64_t v9 = v29;
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v23 = a1 + 56;
    uint64_t v11 = ~v10;
    uint64_t v12 = -v10;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v9 = v13 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v7 = v11;
    uint64_t v8 = 0;
  }
  uint64_t v21 = v7;
  int64_t v22 = (unint64_t)(v7 + 64) >> 6;
  if (v6 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v9)
    {
      uint64_t v14 = (v9 - 1) & v9;
      unint64_t v15 = __clz(__rbit64(v9)) | (v8 << 6);
      uint64_t v16 = v8;
      goto LABEL_29;
    }
    int64_t v18 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      break;
    }
    if (v18 >= v22) {
      goto LABEL_32;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    uint64_t v16 = v8 + 1;
    if (!v19)
    {
      uint64_t v16 = v8 + 2;
      if (v8 + 2 >= v22) {
        goto LABEL_32;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v16);
      if (!v19)
      {
        uint64_t v16 = v8 + 3;
        if (v8 + 3 >= v22) {
          goto LABEL_32;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v16);
        if (!v19)
        {
          uint64_t v16 = v8 + 4;
          if (v8 + 4 >= v22) {
            goto LABEL_32;
          }
          unint64_t v19 = *(void *)(v23 + 8 * v16);
          if (!v19)
          {
            uint64_t v16 = v8 + 5;
            if (v8 + 5 >= v22) {
              goto LABEL_32;
            }
            unint64_t v19 = *(void *)(v23 + 8 * v16);
            if (!v19)
            {
              uint64_t v20 = v8 + 6;
              while (v22 != v20)
              {
                unint64_t v19 = *(void *)(v23 + 8 * v20++);
                if (v19)
                {
                  uint64_t v16 = v20 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_10052E1EC();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v14 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v16 << 6);
LABEL_29:
    id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v15);
    if (!v17) {
      goto LABEL_32;
    }
    while (1)
    {
      [a2 *a4:a3:v17:v21];

      uint64_t v8 = v16;
      unint64_t v9 = v14;
      if ((v6 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for CRLBoardItem(0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v17 = v30;
        swift_unknownObjectRelease();
        uint64_t v16 = v8;
        uint64_t v14 = v9;
        if (v30) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_100668150(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 16 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

void *sub_1006681A4(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    sub_10050BF48(0, (unint64_t *)&qword_101672E50);
    a2 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      if (static NSObject.== infix(_:_:)())
      {
        swift_bridgeObjectRelease();
        return v7;
      }

      ++v5;
      if (v8 == v4) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

double *sub_1006682F0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = a1;
  unint64_t v29 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      unint64_t v19 = v3;
      unint64_t v5 = 0;
      unint64_t v6 = v3 & 0xC000000000000001;
      uint64_t v7 = (unint64_t *)&qword_1016745A0;
      uint64_t v22 = v3 & 0xFFFFFFFFFFFFFF8;
      while (v6)
      {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        unint64_t v9 = v8;
        unint64_t v10 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_18;
        }
        id v25 = v8;
        sub_10050BF48(0, v7);
        id v11 = v9;
        sub_1005057FC(&qword_1016787A8);
        if (swift_dynamicCast())
        {
          uint64_t v12 = v7;
          uint64_t v13 = v4;
          unint64_t v14 = v6;
          sub_10053974C(v23, (uint64_t)v26);
          uint64_t v15 = v27;
          uint64_t v16 = v28;
          sub_10050F848(v26, v27);
          char v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 24))(a2, a3, v15, v16);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v26);
          if (v17)
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
          else
          {
          }
          unint64_t v6 = v14;
          uint64_t v4 = v13;
          uint64_t v7 = v12;
          unint64_t v3 = v19;
        }
        else
        {
          uint64_t v24 = 0;
          memset(v23, 0, sizeof(v23));
          sub_100522F00((uint64_t)v23, &qword_1016787B0);
        }
        ++v5;
        if (v10 == v4) {
          return v29;
        }
      }
      if (v5 < *(void *)(v22 + 16)) {
        break;
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      if (!v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v8 = *(id *)(v3 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void sub_10066850C()
{
  *(unsigned char *)(*(void *)(v0 + 16)
           + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_isInProcessOfPresentingSecondLayerPopover) = 0;
}

uint64_t sub_100668520(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double *sub_100668568(unint64_t a1, void *a2)
{
  if (a1 >> 62)
  {
LABEL_12:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      uint64_t v5 = 4;
      do
      {
        uint64_t v6 = v5 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_11;
          }
        }
        else
        {
          uint64_t v7 = *(void *)(a1 + 8 * v5);
          swift_unknownObjectRetain();
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_11:
            __break(1u);
            goto LABEL_12;
          }
        }
        id v9 = [a2 repsForInfo:v7];
        sub_10050BF48(0, (unint64_t *)&qword_101678790);
        sub_10055A7A4();
        uint64_t v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
        swift_unknownObjectRelease();

        sub_1006E144C(v10);
        ++v5;
      }
      while (v8 != v4);
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1006686EC(unint64_t a1)
{
  unint64_t v1 = (void *)a1;
  if (!a1) {
    return (uint64_t)v1;
  }
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v3 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v3 = *(void *)(a1 + 16);
  }
  uint64_t v4 = _swiftEmptyArrayStorage;
  if (!v3)
  {
LABEL_44:
    uint64_t v39 = *((void *)v4 + 2);
    if (v39)
    {
      swift_bridgeObjectRetain();
      uint64_t v40 = 0;
      unint64_t v1 = &_swiftEmptySetSingleton;
      do
      {
        uint64_t v41 = v1;
        unint64_t v42 = *(void *)&v4[v40++ + 4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100ED8BC4(v42, v41);
        unint64_t v1 = v43;
        swift_bridgeObjectRelease();
      }
      while (v39 != v40);
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v1 = &_swiftEmptySetSingleton;
    }
    swift_bridgeObjectRelease();
    return (uint64_t)v1;
  }
  id v49 = _swiftEmptyArrayStorage;
  sub_1006BB684(0, v3 & ~(v3 >> 63), 0);
  if (v2)
  {
    uint64_t result = __CocoaSet.startIndex.getter();
    char v7 = 1;
  }
  else
  {
    uint64_t result = sub_1006678A8((uint64_t)v1);
    char v7 = v8 & 1;
  }
  uint64_t v46 = result;
  uint64_t v47 = v6;
  char v48 = v7;
  if (v3 < 0) {
    goto LABEL_53;
  }
  uint64_t v9 = 0;
  while (v9 != v3)
  {
    sub_100667640(v46, v47, v48, (uint64_t)v1, (void (*)(void))type metadata accessor for CRLBoardItem);
    unint64_t v19 = v18;
    type metadata accessor for CRLGroupItem();
    if (swift_dynamicCastClass())
    {
      id v20 = v19;
      uint64_t v21 = sub_1005430E4();
      if ((unint64_t)v21 >> 62)
      {
        swift_bridgeObjectRetain();
        _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      type metadata accessor for CRLBoardItem(0);
      sub_100668520((unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
      uint64_t result = Set.init(minimumCapacity:)();
      v45[0] = result;
      if ((unint64_t)v21 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t result = swift_bridgeObjectRelease();
        if (!v22)
        {
LABEL_31:

          swift_bridgeObjectRelease();
          uint64_t v28 = (void *)v45[0];
          goto LABEL_32;
        }
      }
      else
      {
        uint64_t v22 = *(void *)(((unint64_t)v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v22) {
          goto LABEL_31;
        }
      }
      if (v22 < 1) {
        goto LABEL_52;
      }
      if (((unint64_t)v21 & 0xC000000000000001) != 0)
      {
        for (uint64_t i = 0; i != v22; ++i)
        {
          uint64_t v30 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          sub_100CB7040(&v44, v30);
        }
      }
      else
      {
        for (uint64_t j = 0; j != v22; ++j)
        {
          double v32 = v21[j + 4];
          sub_100CB7040(&v44, *(id *)&v32);
        }
      }
      goto LABEL_31;
    }
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_101177E70;
    *(void *)(inited + 32) = v19;
    v45[0] = inited;
    specialized Array._endMutation()();
    unint64_t v24 = v45[0];
    if (v45[0] >> 62)
    {
      id v37 = v19;
      swift_bridgeObjectRetain();
      uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v38)
      {
LABEL_42:
        swift_bridgeObjectRelease();

        uint64_t v28 = &_swiftEmptySetSingleton;
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v25 = *(void *)((v45[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v26 = v19;
      if (!v25) {
        goto LABEL_42;
      }
    }
    sub_100508DCC(v24);
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();

LABEL_32:
    uint64_t v33 = v49;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1006BB684(0, *((void *)v33 + 2) + 1, 1);
      uint64_t v33 = v49;
    }
    unint64_t v35 = *((void *)v33 + 2);
    unint64_t v34 = *((void *)v33 + 3);
    if (v35 >= v34 >> 1)
    {
      uint64_t result = sub_1006BB684(v34 > 1, v35 + 1, 1);
      uint64_t v33 = v49;
    }
    *((void *)v33 + 2) = v35 + 1;
    *(void *)&v33[v35 + 4] = v28;
    if (v2)
    {
      if ((v48 & 1) == 0) {
        goto LABEL_54;
      }
      if (__CocoaSet.Index.handleBitPattern.getter()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      sub_1005057FC(&qword_1016787A0);
      double v36 = (uint64_t (*)(unint64_t *, void))Set.Index._asCocoa.modify();
      __CocoaSet.formIndex(after:isUnique:)();
      uint64_t result = v36(v45, 0);
    }
    else
    {
      uint64_t v10 = v46;
      uint64_t v11 = v47;
      char v12 = v48;
      int64_t v13 = sub_100666C90(v46, v47, v48, (uint64_t)v1);
      uint64_t v15 = v14;
      char v17 = v16;
      uint64_t result = sub_10056A4C4(v10, v11, v12);
      uint64_t v46 = v13;
      uint64_t v47 = v15;
      char v48 = v17 & 1;
    }
    if (++v9 == v3)
    {
      sub_10056A4C4(v46, v47, v48);
      uint64_t v4 = v49;
      goto LABEL_44;
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_100668C00(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_100668C68(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, double a7, double a8)
{
  v23[3] = type metadata accessor for CRLiOSMiniFormatterPresenter();
  v23[4] = &off_10150D748;
  v23[0] = a5;
  uint64_t v16 = OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_contentView;
  id v17 = objc_allocWithZone((Class)UIView);
  int64_t v18 = a6;
  *(void *)&a6[v16] = [v17 init];
  *(void *)&v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_repTrackingViewHelper] = 0;
  *(void *)&v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_fixedPositionDynamicOperationViewHelper] = 0;
  v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_viewDidAppear] = 0;
  v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_isAnimatingDisplay] = 0;
  v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_isAnimatingHide] = 0;
  v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_needsRefreshWhenAppears] = 0;
  v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_isHidingMiniFormatter] = 0;
  *(void *)&v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_crlaxCurrentPresentedRep] = 0;
  *(void *)&v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_reps] = a1;
  *(void *)&v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_stackViewForDisplay] = a2;
  *(void *)&v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_numberOfButtons] = a3;
  *(void *)&v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_builders] = a4;
  sub_1005498A4((uint64_t)v23, (uint64_t)&v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_delegate]);
  *(double *)&v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_leadingMargin] = a7;
  *(double *)&v18[OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterViewController_trailingMargin] = a8;
  id v19 = a2;

  v22.receiver = v18;
  v22.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterViewController();
  [super initWithNibName:0 bundle:0];
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v23);
  return v20;
}

BOOL sub_100668E18(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting);
  id v4 = [v3 interactiveCanvasController];
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = [v4 editorController];
    if (v6)
    {
      char v7 = v6;
      uint64_t v8 = swift_allocObject();
      *(unsigned char *)(v8 + 16) = 0;
      uint64_t v9 = (unsigned char *)(v8 + 16);
      v26[4] = sub_1006693E0;
      v26[5] = v8;
      v26[0] = _NSConcreteStackBlock;
      v26[1] = *(void *)"";
      uint64_t v26[2] = sub_1005B74EC;
      void v26[3] = &unk_10150D8A8;
      uint64_t v10 = _Block_copy(v26);
      swift_retain();
      swift_release();
      [v7 enumerateEditorsOnStackUsingBlock:v10];

      _Block_release(v10);
      swift_beginAccess();
      LOBYTE(v7) = *v9;

      swift_release();
      if (v7) {
        return 1;
      }
    }
    else
    {
    }
  }
  id v11 = a1;
  id v12 = [v3 interactiveCanvasController];
  if (v12)
  {
    int64_t v13 = v12;
    id v14 = [v12 selectionModelTranslator];
    uint64_t v15 = v14;
    if (v14)
    {
      id v16 = [v14 boardItemsForSelectionPath:v11];

      type metadata accessor for CRLBoardItem(0);
      sub_100668520((unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
      uint64_t v15 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)();
    }
  }
  else
  {

    uint64_t v15 = 0;
  }
  uint64_t v17 = sub_1006686EC((unint64_t)v15);
  swift_bridgeObjectRelease();
  if (!v17) {
    return 1;
  }
  uint64_t v18 = *(void *)(v1
                  + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_flattenedBoardItemsForCurrentSelectionPath);
  if (!v18) {
    goto LABEL_19;
  }
  id v19 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_canvasViewController);
  swift_bridgeObjectRetain();
  id v20 = [v19 traitCollection];
  if ((objc_msgSend(self, "crl_phoneUI") & 1) == 0)
  {
    unsigned int v22 = [v20 crl_isCompactWidth];

    if (v22)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    sub_1006639A8(v18, v17);
    char v24 = v23;
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0) {
      goto LABEL_20;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    return 1;
  }
  swift_bridgeObjectRelease();

LABEL_20:
  if ((v17 & 0xC000000000000001) != 0) {
    uint64_t v25 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v25 = *(void *)(v17 + 16);
  }
  swift_bridgeObjectRelease();
  return v25 == 0;
}

void sub_100669178()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldRepositionSecondLayerPopover) == 1)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldRepositionSecondLayerPopover) = 0;
    sub_100662A08();
  }
  if (*(unsigned char *)(v0
                + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldUpdateSecondLayerPopoverPassthroughViews) == 1)
  {
    *(unsigned char *)(v0
             + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldUpdateSecondLayerPopoverPassthroughViews) = 0;
    sub_1006630F4();
  }
  uint64_t v1 = OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldUpdateSecondLayerPermittedArrowDirections;
  if (*(unsigned char *)(v0
                + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_shouldUpdateSecondLayerPermittedArrowDirections) == 1)
  {
    unint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
    if (v2)
    {
      id v7 = v2;
      id v3 = [v7 visibleViewController];
      if (v3)
      {
        id v4 = v3;
        type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
        uint64_t v5 = swift_dynamicCastClass();
        if (v5)
        {
          *(unsigned char *)(v0 + v1) = 0;
          sub_100663428(v5, 0);
          id v6 = v7;
          id v7 = v4;
        }
        else
        {
          id v6 = v4;
        }
      }
    }
  }
}

void sub_100669284(void *a1, void *a2)
{
  type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
  uint64_t v5 = swift_dynamicCastClass();
  if (v5)
  {
    id v6 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform49CRLiOSMiniFormatterPopoverContainerViewController_builder);
    id v7 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_secondLayerPresentedBuilder);
    *(void *)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_secondLayerPresentedBuilder) = v6;
    id v18 = a2;
    id v8 = v6;

    [a1 setNavigationBarHidden:1 animated:1];
    uint64_t v9 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedNavigationController);
    if (v9)
    {
      uint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_presentedWrappedNavigationController);
      if (v10)
      {
        id v11 = v9;
        id v12 = v10;
        sub_100657F44(v13, v14, v15, v16);
        [v11 setPreferredContentSize:];
        id v17 = v12;
        [v11 preferredContentSize];
        [v17 setPreferredContentSize:];
      }
    }
    sub_100664E64();
  }
}

uint64_t sub_1006693D0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1006693E0(void *a1, unsigned char *a2)
{
  return sub_100D5CEA0(a1, a2, v2);
}

uint64_t sub_1006693E8(id *a1)
{
  return sub_100661098(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_100669408()
{
  return _swift_deallocObject(v0, 41, 7);
}

void sub_100669448()
{
  sub_10065E228(*(unsigned char *)(v0 + 16), *(char **)(v0 + 24), *(void **)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_10066947C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  if (type metadata accessor for CRLUSDZEditor()) {
    ObjCClassFromMetadatCATransform3D a = swift_getObjCClassFromMetadata();
  }
  else {
    ObjCClassFromMetadatCATransform3D a = 0;
  }
  [v1 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
  id v3 = (void *)swift_dynamicCastClass();
  if (v3) {
    [v3 showMediaReplaceUI:v0];
  }

  return swift_unknownObjectRelease();
}

id sub_100669520()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMiniFormatterUSDZDataProvider();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLMiniFormatterUSDZDataProvider()
{
  return self;
}

uint64_t CRLWPWritingDirection.asNSWritingDirection.getter(uint64_t result)
{
  if ((unint64_t)(result + 1) >= 3)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"asNSWritingDirection", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 39, (uint64_t)"Unknown direction.", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"asNSWritingDirection", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 39);
    return -1;
  }
  return result;
}

uint64_t CRLWPWritingDirection.description.getter(uint64_t a1)
{
  switch(a1)
  {
    case -1:
      return 0x6C61727574614ELL;
    case 0:
      return 0x206F74207466654CLL;
    case 1:
      return 0x6F74207468676952;
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"description", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 55, (uint64_t)"Unknown writing direction.", 26, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"description", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 55);
  return 0x2E6E776F6E6B6E55;
}

uint64_t initializeBufferWithCopyOfBuffer for CRLColorModelCMYKData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLColorModelCMYKData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLColorModelCMYKData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLColorModelCMYKData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLColorModelCMYKData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSceneSavedRectData()
{
  return &type metadata for CRLSceneSavedRectData;
}

uint64_t *sub_1006698F8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101683E40);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101699FC0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    double v13 = (char *)a1 + v12;
    double v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1005057FC(&qword_101699FD0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100669A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101683E40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101699FC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_1005057FC(&qword_101699FD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100669B74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101683E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101699FC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_101699FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100669C98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101683E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101699FC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_101699FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100669DC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101683E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101699FC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_101699FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100669EE8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101683E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101699FC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_101699FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10066A010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10066A024);
}

uint64_t sub_10066A024(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101699FC0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_1005057FC(&qword_101699FD0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[7]);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_10066A190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10066A1A4);
}

uint64_t sub_10066A1A4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101699FC0);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t result = sub_1005057FC(&qword_101699FD0);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[7]) = (a2 - 1);
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[6];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for CRLBoardScenesCRDTData(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_1016788F0);
}

void sub_10066A32C()
{
  sub_10066A43C();
  if (v0 <= 0x3F)
  {
    sub_10066A4D8();
    if (v1 <= 0x3F)
    {
      sub_10066A59C();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10066A43C()
{
  if (!qword_101678900)
  {
    type metadata accessor for UUID();
    sub_10066C5A4((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
    unint64_t v0 = type metadata accessor for CROrderedSet();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101678900);
    }
  }
}

void sub_10066A4D8()
{
  if (!qword_101678908)
  {
    type metadata accessor for UUID();
    sub_10066C5A4((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
    unint64_t v0 = type metadata accessor for CRDictionary();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101678908);
    }
  }
}

void sub_10066A59C()
{
  if (!qword_101678910)
  {
    type metadata accessor for UUID();
    sub_10066C5A4((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_10066A668();
    sub_10066A6BC();
    unint64_t v0 = type metadata accessor for CRDictionary();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101678910);
    }
  }
}

unint64_t sub_10066A668()
{
  unint64_t result = qword_101678918;
  if (!qword_101678918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101678918);
  }
  return result;
}

unint64_t sub_10066A6BC()
{
  unint64_t result = qword_101678920;
  if (!qword_101678920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101678920);
  }
  return result;
}

uint64_t sub_10066A710()
{
  qword_10171A288 = 97;
  unk_10171A290 = 0xE100000000000000;
  qword_10171A298 = swift_getKeyPath();
  unk_10171A2A0 = 98;
  qword_10171A2A8 = 0xE100000000000000;
  qword_10171A2B0 = swift_getKeyPath();
  qword_10171A2B8 = 99;
  qword_10171A2C0 = 0xE100000000000000;
  uint64_t result = swift_getKeyPath();
  qword_10171A2C8 = result;
  return result;
}

uint64_t sub_10066A780(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = &v20.i8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v8 = UUID.uuidString.getter();
  uint64_t v10 = v9;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v8;
  *(void *)(inited + 40) = v10;
  sub_1005057FC((uint64_t *)&unk_101683E40);
  if (CROrderedSet.contains(_:)())
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"insertScene(from:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Scenes/CRLScenesData.swift", 96, 2, 50, (uint64_t)"Trying to insert scene which already exists for UUID %{public}", 62, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"insertScene(from:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Scenes/CRLScenesData.swift", 96, 2, 50);
  }
  swift_bridgeObjectRelease();
  CROrderedSet.append(_:)();
  uint64_t v11 = *(void (**)(__int8 *, uint64_t, uint64_t))(v3 + 16);
  v11(v6, a1, v2);
  uint64_t v12 = type metadata accessor for CRLSceneDataValue(0);
  uint64_t v13 = (uint64_t *)(a1 + *(int *)(v12 + 20));
  uint64_t v14 = v13[1];
  v20.i64[0] = *v13;
  v20.i64[1] = v14;
  type metadata accessor for CRLBoardScenesCRDTData(0);
  swift_bridgeObjectRetain();
  sub_1005057FC((uint64_t *)&unk_101699FC0);
  CRDictionary.subscript.setter();
  v11(v6, a1, v2);
  uint64_t v15 = (float64_t *)(a1 + *(int *)(v12 + 24));
  v16.f64[0] = *v15;
  v17.f64[0] = v15[1];
  v16.f64[1] = v15[2];
  v17.f64[1] = v15[3];
  *(float32x2_t *)&v16.f64[0] = vcvt_f32_f64(v16);
  v18.i64[0] = LODWORD(v16.f64[0]);
  v18.i64[1] = HIDWORD(v16.f64[0]);
  int8x16_t v20 = vorrq_s8((int8x16_t)vshll_n_s32((int32x2_t)vcvt_f32_f64(v17), 0x20uLL), v18);
  uint64_t v21 = _swiftEmptyDictionarySingleton;
  sub_1005057FC(&qword_101699FD0);
  return CRDictionary.subscript.setter();
}

BOOL sub_10066AA50()
{
  uint64_t v0 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1005057FC((uint64_t *)&unk_101683E40);
  CROrderedSet.remove(_:)();
  int v9 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  if (v9 == 1)
  {
    sub_100522F00((uint64_t)v3, (uint64_t *)&unk_101674520);
    if (qword_10166FAF8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v10 = (void *)static OS_os_log.crlScenes;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v12 = v10;
    uint64_t v13 = UUID.uuidString.getter();
    uint64_t v15 = v14;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v13;
    *(void *)(inited + 40) = v15;
    uint64_t v16 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Scene attribute lookup failed for UUID %{public}", 48, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(v8, v3, v4);
    type metadata accessor for CRLBoardScenesCRDTData(0);
    sub_1005057FC((uint64_t *)&unk_101699FC0);
    CRDictionary.removeValue(forKey:)();
    swift_bridgeObjectRelease();
    sub_1005057FC(&qword_101699FD0);
    CRDictionary.removeValue(forKey:)();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return v9 != 1;
}

uint64_t sub_10066AD54(uint64_t a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  __n128 v26 = a3;
  __n128 v27 = a5;
  __n128 v24 = a2;
  __n128 v25 = a4;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005057FC((uint64_t *)&unk_101683E40);
  char v11 = CROrderedSet.contains(_:)();
  if (v11)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
    *(void *)&v12.f64[0] = v24.n128_u64[0];
    *(void *)&v12.f64[1] = v25.n128_u64[0];
    float32x2_t v13 = vcvt_f32_f64(v12);
    *(void *)&v14.f64[0] = v26.n128_u64[0];
    *(void *)&v14.f64[1] = v27.n128_u64[0];
    v15.i64[0] = v13.u32[0];
    v15.i64[1] = v13.u32[1];
    int8x16_t v28 = vorrq_s8((int8x16_t)vshll_n_s32((int32x2_t)vcvt_f32_f64(v14), 0x20uLL), v15);
    unint64_t v29 = _swiftEmptyDictionarySingleton;
    type metadata accessor for CRLBoardScenesCRDTData(0);
    sub_1005057FC(&qword_101699FD0);
    CRDictionary.subscript.setter();
  }
  else
  {
    if (qword_10166FAF8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v16 = (void *)static OS_os_log.crlScenes;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v18 = v16;
    uint64_t v19 = UUID.uuidString.getter();
    uint64_t v21 = v20;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v19;
    *(void *)(inited + 40) = v21;
    uint64_t v22 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v18, (uint64_t)&_mh_execute_header, v22, (uint64_t)"Scene rename failed for UUID %{public}", 38, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  return v11 & 1;
}

uint64_t sub_10066AFB0(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101678A48);
  __chkstk_darwin(v3 - 8, v4);
  CGRect v66 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_1005057FC(&qword_101678A50);
  uint64_t v69 = *(void *)(v70 - 8);
  __chkstk_darwin(v70, v6);
  CGRect v68 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v79 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v9);
  id v83 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  CGRect v72 = (char *)&v62 - v13;
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v14 - 8, v15);
  float64x2_t v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  double v76 = (char *)&v62 - v20;
  uint64_t v21 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v23);
  CGFloat v63 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v26);
  int8x16_t v28 = (char *)&v62 - v27;
  uint64_t v29 = sub_1005057FC(&qword_101683E70);
  uint64_t v73 = *(void *)(v29 - 8);
  __n128 v31 = __chkstk_darwin(v29, v30);
  uint64_t v33 = (char *)&v62 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = v22;
  unint64_t v34 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v22 + 16);
  uint64_t v67 = v1;
  v34(v28, v1, v21, v31);
  uint64_t v35 = sub_100523288(&qword_101674530, (uint64_t *)&unk_101683E40);
  swift_bridgeObjectRetain();
  double v36 = v76;
  uint64_t v65 = v21;
  uint64_t v62 = v35;
  id v37 = v72;
  dispatch thunk of Sequence.makeIterator()();
  uint64_t v38 = sub_100523288(&qword_101674538, &qword_101683E70);
  double v77 = v33;
  uint64_t v78 = v29;
  uint64_t v75 = v38;
  dispatch thunk of IteratorProtocol.next()();
  CGRect v88 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48);
  uint64_t v89 = v79 + 48;
  if (v88(v36, 1, v8) != 1)
  {
    CGRect v85 = *(void (**)(char *, char *, uint64_t))(v79 + 32);
    uint64_t v86 = v79 + 32;
    uint64_t v82 = v79 + 16;
    unint64_t v41 = v79 + 56;
    CGRect v87 = (void (**)(char *, uint64_t))(v79 + 8);
    uint64_t v74 = a1;
    do
    {
      v85(v37, v36, v8);
      uint64_t v42 = *(void *)(a1 + 16);
      if (v42)
      {
        unint64_t v71 = v41 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
        uint64_t v43 = a1 + ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80));
        uint64_t v81 = *(void *)(v79 + 72);
        uint64_t v84 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 16);
        swift_bridgeObjectRetain();
        while (1)
        {
          v84(v17, v43, v8);
          id v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v41;
          (*(void (**)(char *, void, uint64_t, uint64_t))v41)(v17, 0, 1, v8);
          if (v88(v17, 1, v8) == 1) {
            break;
          }
          double v45 = v83;
          uint64_t v46 = v17;
          v85(v83, v17, v8);
          uint64_t v47 = v8;
          char v48 = v37;
          uint64_t v80 = sub_10066C5A4((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
          char v49 = dispatch thunk of static Equatable.== infix(_:_:)();
          unsigned __int8 v50 = *v87;
          uint64_t v51 = v45;
          uint64_t v52 = v47;
          (*v87)(v51, v47);
          if (v49)
          {
            uint64_t v53 = v74;
            swift_bridgeObjectRelease();
            v50(v48, v52);
            (*(void (**)(char *, uint64_t))(v73 + 8))(v77, v78);
            swift_bridgeObjectRelease();
            uint64_t v90 = v53;
            sub_1005057FC(&qword_101683E60);
            sub_100523288(&qword_101678A58, &qword_101683E60);
            sub_100523288(&qword_101678A60, (uint64_t *)&unk_101683E40);
            id v54 = v68;
            uint64_t v55 = v65;
            BidirectionalCollection<>.difference<A>(from:)();
            sub_100523288(&qword_101678A68, (uint64_t *)&unk_101683E40);
            uint64_t v56 = (uint64_t)v66;
            RangeReplaceableCollection.applying(_:)();
            uint64_t v57 = v64;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v56, 1, v55) != 1)
            {
              CGFloat v61 = v63;
              (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v63, v56, v55);
              CROrderedSet.removeAll()();
              CROrderedSet.append<A>(contentsOf:)();
              (*(void (**)(char *, uint64_t))(v57 + 8))(v61, v55);
              (*(void (**)(char *, uint64_t))(v69 + 8))(v54, v70);
              return 1;
            }
            sub_100522F00(v56, &qword_101678A48);
            if (qword_10166FAF8 != -1) {
              swift_once();
            }
            swift_beginAccess();
            id v58 = (id)static OS_os_log.crlScenes;
            uint64_t v59 = static os_log_type_t.default.getter();
            sub_100BAC898((uint64_t)v58, (uint64_t)&_mh_execute_header, v59, (uint64_t)"Failed to apply scene reordering.", 33, 2, (uint64_t)_swiftEmptyArrayStorage);

            (*(void (**)(char *, uint64_t))(v69 + 8))(v54, v70);
            return 0;
          }
          v43 += v81;
          --v42;
          id v37 = v48;
          float64x2_t v17 = v46;
          uint64_t v8 = v47;
          if (!v42) {
            goto LABEL_13;
          }
        }
      }
      else
      {
        id v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v41;
        swift_bridgeObjectRetain();
LABEL_13:
        v44(v17, 1, 1, v8);
      }
      a1 = v74;
      swift_bridgeObjectRelease();
      (*v87)(v37, v8);
      double v36 = v76;
      dispatch thunk of IteratorProtocol.next()();
    }
    while (v88(v36, 1, v8) != 1);
  }
  (*(void (**)(char *, uint64_t))(v73 + 8))(v77, v78);
  swift_bridgeObjectRelease();
  if (qword_10166FAF8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v39 = (id)static OS_os_log.crlScenes;
  uint64_t v40 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v39, (uint64_t)&_mh_execute_header, v40, (uint64_t)"Reordered scene IDs are not equal to existing scene IDs.", 56, 2, (uint64_t)_swiftEmptyArrayStorage);

  return 0;
}

uint64_t sub_10066B9A0@<X0>(void *a1@<X8>)
{
  if (qword_10166EE00 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_10171A290;
  uint64_t v4 = qword_10171A298;
  uint64_t v3 = unk_10171A2A0;
  uint64_t v5 = qword_10171A2A8;
  uint64_t v6 = qword_10171A2B0;
  uint64_t v7 = qword_10171A2B8;
  uint64_t v8 = qword_10171A2C0;
  uint64_t v9 = qword_10171A2C8;
  *a1 = qword_10171A288;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  a1[8] = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();

  return swift_retain();
}

uint64_t sub_10066BA68(uint64_t a1)
{
  uint64_t v2 = sub_10066C5A4(&qword_101678A40, (void (*)(uint64_t))type metadata accessor for CRLBoardScenesCRDTData);

  return static CRStruct_3.fieldKeys.getter(a1, v2);
}

uint64_t sub_10066BAD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for UUID();
  sub_10066C5A4((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  CROrderedSet.init()();
  CRDictionary.init()();
  sub_10066A668();
  sub_10066A6BC();
  uint64_t result = CRDictionary.init()();
  *(void *)(a2 + *(int *)(a1 + 28)) = _swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_10066BBE8(uint64_t a1)
{
  uint64_t v2 = sub_10066C5A4(&qword_101678968, (void (*)(uint64_t))type metadata accessor for CRLBoardScenesCRDTData);

  return CRType.context.getter(a1, v2);
}

uint64_t sub_10066BC54()
{
  sub_10066C5A4(&qword_101678A40, (void (*)(uint64_t))type metadata accessor for CRLBoardScenesCRDTData);

  return CRStruct_3.actionUndoingDifference(from:)();
}

uint64_t sub_10066BCD8()
{
  sub_10066C5A4(&qword_101678A40, (void (*)(uint64_t))type metadata accessor for CRLBoardScenesCRDTData);

  return CRStruct_3.apply(_:)();
}

uint64_t sub_10066BD54()
{
  sub_10066C5A4(&qword_101678A40, (void (*)(uint64_t))type metadata accessor for CRLBoardScenesCRDTData);

  return CRStruct_3.hasDelta(from:)();
}

uint64_t sub_10066BDD0()
{
  sub_10066C5A4(&qword_101678A40, (void (*)(uint64_t))type metadata accessor for CRLBoardScenesCRDTData);

  return CRStruct_3.delta(_:from:)();
}

uint64_t sub_10066BE64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10066C5A4(&qword_101678A40, (void (*)(uint64_t))type metadata accessor for CRLBoardScenesCRDTData);

  return CRStruct_3.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_10066BEE0()
{
  sub_10066C5A4(&qword_101678A40, (void (*)(uint64_t))type metadata accessor for CRLBoardScenesCRDTData);

  return CRStruct_3.merge(delta:)();
}

uint64_t sub_10066BF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10066C5A4(&qword_101678A40, (void (*)(uint64_t))type metadata accessor for CRLBoardScenesCRDTData);

  return CRStruct_3.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_10066BFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10066C5A4(&qword_101678A40, (void (*)(uint64_t))type metadata accessor for CRLBoardScenesCRDTData);

  return CRStruct_3.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_10066C064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10066C5A4(&qword_101678A40, (void (*)(uint64_t))type metadata accessor for CRLBoardScenesCRDTData);

  return CRStruct_3.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_10066C0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10066C5A4(&qword_101678A40, (void (*)(uint64_t))type metadata accessor for CRLBoardScenesCRDTData);

  return CRStruct_3.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_10066C174()
{
  sub_10066C5A4(&qword_101678A40, (void (*)(uint64_t))type metadata accessor for CRLBoardScenesCRDTData);

  return CRStruct_3.needToFinalizeTimestamps()();
}

uint64_t sub_10066C1E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10066C5A4(&qword_101678A40, (void (*)(uint64_t))type metadata accessor for CRLBoardScenesCRDTData);

  return CRStruct_3.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_10066C25C()
{
  sub_10066C5A4(&qword_101678A40, (void (*)(uint64_t))type metadata accessor for CRLBoardScenesCRDTData);

  return CRStruct_3.merge(_:)();
}

uint64_t sub_10066C2D8()
{
  return CRDT.serializedData(_:version:)();
}

uint64_t sub_10066C358()
{
  return CRDT.init(serializedData:)();
}

uint64_t sub_10066C3E8()
{
  return CRStruct_3.init(from:)();
}

uint64_t sub_10066C468()
{
  return CRStruct_3.encode(to:)();
}

uint64_t sub_10066C4E0(uint64_t a1)
{
  uint64_t v2 = sub_10066C5A4(&qword_101678A40, (void (*)(uint64_t))type metadata accessor for CRLBoardScenesCRDTData);

  return CRStruct_3.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_10066C55C()
{
  return sub_10066C5A4(&qword_101678958, (void (*)(uint64_t))type metadata accessor for CRLBoardScenesCRDTData);
}

uint64_t sub_10066C5A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10066C5EC()
{
  return sub_10066C5A4(&qword_101678960, (void (*)(uint64_t))type metadata accessor for CRLBoardScenesCRDTData);
}

uint64_t sub_10066C634()
{
  return sub_10066C5A4(&qword_101678968, (void (*)(uint64_t))type metadata accessor for CRLBoardScenesCRDTData);
}

uint64_t sub_10066C67C()
{
  return sub_100523288(&qword_101678970, &qword_101678978);
}

uint64_t sub_10066C6B8()
{
  return sub_10066C5A4(&qword_101678980, (void (*)(uint64_t))type metadata accessor for CRLBoardScenesCRDTData);
}

uint64_t sub_10066C700()
{
  return sub_10066C5A4(&qword_101678988, (void (*)(uint64_t))type metadata accessor for CRLBoardScenesCRDTData);
}

uint64_t sub_10066C748()
{
  return sub_100523288(&qword_101678990, (uint64_t *)&unk_101683E40);
}

uint64_t sub_10066C784()
{
  return sub_100523288(&qword_101678998, (uint64_t *)&unk_101699FC0);
}

uint64_t sub_10066C7C0()
{
  return sub_100523288(&qword_1016789A0, &qword_101699FD0);
}

uint64_t sub_10066C7FC()
{
  return sub_10066C5A4(&qword_1016789A8, (void (*)(uint64_t))type metadata accessor for CRLBoardScenesCRDTData);
}

uint64_t sub_10066C844()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x6174614474636572;
  }
}

uint64_t sub_10066C884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10066D560(a1, a2);
  *a3 = result;
  return result;
}

void sub_10066C8AC(void *a1@<X8>)
{
  *a1 = &off_1015031C8;
}

uint64_t sub_10066C8BC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10066D048();
  unint64_t v5 = sub_10066D0A0();

  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_10066C914(uint64_t a1)
{
  unint64_t v2 = sub_10066D0A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10066C950(uint64_t a1)
{
  unint64_t v2 = sub_10066D0A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10066C98C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_101678A28);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_10066D0A0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  long long v13 = *v3;
  char v12 = 0;
  sub_10066D898();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    *(void *)&long long v13 = *((void *)v3 + 2);
    char v12 = 1;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t SyncEvent.SentDatabaseChanges.deletedZoneIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t sub_10066CB54(float32x4_t *a1, float32x4_t *a2)
{
  if (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(*a1, *a2)), 0xFuLL)))) {
    return sub_100ED60AC(a1[1].i64[0], a2[1].i64[0]);
  }
  else {
    return 0;
  }
}

double sub_10066CB8C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10066D650(a1, &v5);
  if (!v2)
  {
    double result = *(double *)&v5;
    *(_OWORD *)a2 = v5;
    *(void *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_10066CBD0(void *a1)
{
  return sub_10066C98C(a1);
}

uint64_t sub_10066CBE8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10066D8EC();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_10066CC3C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10066D8EC();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_10066CC90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10066A668();
  unint64_t v7 = sub_10066A6BC();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_10066CD00(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10066D8EC();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_10066CD4C()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_10066CD9C()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_10066CDE4(uint64_t a1)
{
  unint64_t v2 = sub_10066D1E4();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_10066CE34()
{
  unint64_t result = qword_1016789B0;
  if (!qword_1016789B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016789B0);
  }
  return result;
}

unint64_t sub_10066CE8C()
{
  unint64_t result = qword_1016789B8;
  if (!qword_1016789B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016789B8);
  }
  return result;
}

unint64_t sub_10066CEE8()
{
  unint64_t result = qword_1016789C0;
  if (!qword_1016789C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016789C0);
  }
  return result;
}

unint64_t sub_10066CF40()
{
  unint64_t result = qword_1016789C8;
  if (!qword_1016789C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016789C8);
  }
  return result;
}

unint64_t sub_10066CF98()
{
  unint64_t result = qword_1016789D0;
  if (!qword_1016789D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016789D0);
  }
  return result;
}

unint64_t sub_10066CFF0()
{
  unint64_t result = qword_1016789D8;
  if (!qword_1016789D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016789D8);
  }
  return result;
}

unint64_t sub_10066D048()
{
  unint64_t result = qword_1016789E0;
  if (!qword_1016789E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016789E0);
  }
  return result;
}

unint64_t sub_10066D0A0()
{
  unint64_t result = qword_1016789E8;
  if (!qword_1016789E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016789E8);
  }
  return result;
}

unint64_t sub_10066D0F8()
{
  unint64_t result = qword_1016789F0;
  if (!qword_1016789F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016789F0);
  }
  return result;
}

unint64_t sub_10066D150()
{
  unint64_t result = qword_1016789F8;
  if (!qword_1016789F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016789F8);
  }
  return result;
}

uint64_t sub_10066D1A4()
{
  return sub_100523288(&qword_101678A00, &qword_101678A08);
}

unint64_t sub_10066D1E4()
{
  unint64_t result = qword_101678A10;
  if (!qword_101678A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101678A10);
  }
  return result;
}

uint64_t sub_10066D238(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardScenesCRDTData(0);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  char v12 = (char *)&v24 - v11;
  uint64_t v14 = __chkstk_darwin(v10, v13);
  uint64_t v16 = (char *)&v24 - v15;
  __chkstk_darwin(v14, v17);
  uint64_t v19 = (char *)&v24 - v18;
  type metadata accessor for UUID();
  sub_10066C5A4((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  char v20 = static CROrderedSet.== infix(_:_:)();
  sub_10066D4A0(a1, (uint64_t)v19);
  sub_10066D4A0(a2, (uint64_t)v16);
  if ((v20 & 1) == 0)
  {
    sub_10066D504((uint64_t)v16);
    sub_10066D504((uint64_t)v19);
    sub_10066D4A0(a1, (uint64_t)v12);
    sub_10066D4A0(a2, (uint64_t)v8);
    goto LABEL_5;
  }
  char v21 = static CRDictionary.== infix(_:_:)();
  sub_10066D504((uint64_t)v16);
  sub_10066D504((uint64_t)v19);
  sub_10066D4A0(a1, (uint64_t)v12);
  sub_10066D4A0(a2, (uint64_t)v8);
  if ((v21 & 1) == 0)
  {
LABEL_5:
    char v22 = 0;
    goto LABEL_6;
  }
  sub_10066A668();
  sub_10066A6BC();
  char v22 = static CRDictionary.== infix(_:_:)();
LABEL_6:
  sub_10066D504((uint64_t)v8);
  sub_10066D504((uint64_t)v12);
  return v22 & 1;
}

uint64_t sub_10066D4A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardScenesCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10066D504(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardScenesCRDTData(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10066D560(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6174614474636572 && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10066D650@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_101678A18);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_10066D0A0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  char v15 = 0;
  sub_10066D844();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v10 = v14[0];
  uint64_t v11 = v14[1];
  sub_1005057FC((uint64_t *)&unk_101687A40);
  char v15 = 1;
  sub_100557304();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v12 = v14[0];
  uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  *a2 = v10;
  a2[1] = v11;
  a2[2] = v12;
  return result;
}

unint64_t sub_10066D844()
{
  unint64_t result = qword_101678A20;
  if (!qword_101678A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101678A20);
  }
  return result;
}

unint64_t sub_10066D898()
{
  unint64_t result = qword_101678A30;
  if (!qword_101678A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101678A30);
  }
  return result;
}

unint64_t sub_10066D8EC()
{
  unint64_t result = qword_101678A38;
  if (!qword_101678A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101678A38);
  }
  return result;
}

uint64_t type metadata accessor for CRLSceneDataValue(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101678AC8);
}

uint64_t *sub_10066D960(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (_OWORD *)((char *)a1 + v9);
    uint64_t v14 = (_OWORD *)((char *)a2 + v9);
    long long v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10066DA48(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10066DAC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (_OWORD *)(a1 + v8);
  uint64_t v13 = (_OWORD *)(a2 + v8);
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10066DB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  v11[2] = v12[2];
  v11[3] = v12[3];
  return a1;
}

uint64_t sub_10066DC20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_10066DCAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (_OWORD *)(a1 + v12);
  long long v14 = (_OWORD *)(a2 + v12);
  long long v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  return a1;
}

uint64_t sub_10066DD4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10066DD60);
}

uint64_t sub_10066DD60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10066DE24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10066DE38);
}

uint64_t sub_10066DE38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10066DEF8()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLSceneSavedRectData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    double *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10066E064);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          double *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSceneSavedRectData.CodingKeys()
{
  return &type metadata for CRLSceneSavedRectData.CodingKeys;
}

unint64_t sub_10066E0A0()
{
  unint64_t result = qword_101678B08;
  if (!qword_101678B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101678B08);
  }
  return result;
}

id sub_10066E0F8(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_playNormalImage] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_playPressedImage] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_pauseNormalImage] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_pausePressedImage] = 0;
  uint64_t v3 = OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_imageRenderable;
  unsigned int v4 = self;
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 renderable];
  v5[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying] = 0;
  v5[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isBeingTracked] = 0;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for CRLUSDZPlayPauseKnob();
  id v6 = [super initWithType:0 position:5 radius:a1 tag:0.0 onRep:0.0];
  sub_10066E2C4();
  [v6 setWorksWithStylus:1];
  [v6 setWorksWhenRepLocked:1];
  [v6 setWorksWhenDocumentIsSharedReadOnly:1];
  sub_10066EA9C();
  sub_10066E87C();

  return v6;
}

id sub_10066E2C4()
{
  id result = [v0 rep];
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v2 = result;
  type metadata accessor for CRLUSDZRep(0);
  [(id)swift_dynamicCastClassUnconditional() boundsForStandardKnobs];
  double v4 = v3;
  double v6 = v5;

  [v0 radius];
  double v8 = v7;
  id result = [v0 rep];
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v9 = result;
  id v10 = [(id)swift_dynamicCastClassUnconditional() canvas];

  if (v10)
  {
    [v10 viewScale];
    double v12 = v11;
  }
  else
  {
    double v12 = 1.0;
  }
  double v13 = (v8 + 8.0) / v12;
  int v14 = sub_1003E86EC();
  double v15 = v4 * 0.5 - v13;
  if (v14) {
    double v15 = -v15;
  }

  return [v0 setOffset:v15, v6 * 0.5 - v13];
}

uint64_t sub_10066E42C()
{
  unint64_t v1 = v0;
  id v2 = [v0 knobImage];
  double v3 = *(void **)&v0[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_playNormalImage];
  if (v2)
  {
    double v4 = v2;
    if (v3)
    {
      sub_10066EF08();
      id v5 = v3;
      id v6 = v4;
      char v7 = static NSObject.== infix(_:_:)();

      if (v7) {
        goto LABEL_6;
      }
    }
    else
    {
    }
  }
  else if (!v3)
  {
LABEL_6:
    char v8 = 1;
    return v8 & 1;
  }
  id v9 = [v1 knobImage];
  id v10 = *(void **)&v1[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_playPressedImage];
  char v8 = v10 == 0;
  if (v9)
  {
    double v11 = v9;
    if (v10)
    {
      sub_10066EF08();
      id v12 = v10;
      id v13 = v11;
      char v8 = static NSObject.== infix(_:_:)();

      double v11 = v12;
    }
    else
    {
      char v8 = 0;
    }
  }
  return v8 & 1;
}

void sub_10066E58C()
{
  [v0 radius];
  double v2 = -v1;
  [v0 radius];
  double v4 = -v3;
  [v0 radius];
  double v6 = v5 + v5;
  [v0 radius];
  id v8 = [self bezierPathWithOvalInRect:v2, v4, v6, v7 + v7];
  [v0 setHitRegionPath:v8];
}

id sub_10066E6A8()
{
  id v1 = [self renderable];
  [v1 addSubrenderable:*(void *)&v0[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_imageRenderable]];
  [v0 radius];
  double v2 = sub_100064070();
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  [v0 radius];
  id v10 = [self bezierPathWithContinuousCornerRoundedRect:v2 cornerRadius:v4 v6, v8, v9];
  [v1 setBounds:v2, v4, v6, v8];
  id v11 = [v10 CGPath];
  [v1 setPath:v11];

  id v12 = (void *)sub_10066EFA0();
  if (v12)
  {
    id v13 = v12;
    id v14 = [v12 CGColor];
  }
  else
  {
    id v14 = 0;
  }
  [v1 setFillColor:v14];

  return v1;
}

void sub_10066E87C()
{
  id v22 = [v0 knobImage];
  if (v22)
  {
    id v1 = [v0 renderable];
    if (v1)
    {
      double v2 = v1;
      double v3 = self;
      [v3 begin];
      [v3 disableActions];
      id v4 = [v0 rep];
      double v5 = 1.0;
      if (v4)
      {
        double v6 = v4;
        id v7 = [v4 canvas];

        if (v7)
        {
          [v7 contentsScale];
          double v5 = v8;
        }
      }
      uint64_t v9 = OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_imageRenderable;
      id v10 = *(id *)&v0[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_imageRenderable];
      [v22 size];
      [v10 setBounds:sub_100064070()];

      [v2 bounds];
      double v15 = sub_100065738(v11, v12, v13, v14);
      double v17 = v16;
      char v18 = sub_10066E42C();
      double v19 = v15 + 2.88;
      if ((v18 & 1) == 0) {
        double v19 = v15;
      }
      [*(id *)&v0[v9] setPosition:v19, v17];
      id v20 = *(id *)&v0[v9];
      id v21 = [v22 CGImageForContentsScale:v5];
      [v20 setContents:v21];

      [v3 commit];
    }
  }
}

void sub_10066EA9C()
{
  id v1 = sub_10066ED28();
  double v3 = v2;
  id v4 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_playNormalImage);
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_playNormalImage) = v1;
  id v5 = v1;

  double v6 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_playPressedImage);
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_playPressedImage) = v3;
  id v7 = v3;

  id v8 = sub_10066ED28();
  uint64_t v10 = v9;
  CGFloat v11 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_pauseNormalImage);
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_pauseNormalImage) = v8;
  id v12 = v8;

  id v13 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_pausePressedImage);
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_pausePressedImage) = v10;
}

void sub_10066EB98(void **a1)
{
  id v2 = [self secondaryLabelColor];
  id v3 = [objc_allocWithZone((Class)CRLColor) initWithUIColor:v2];

  id v4 = *a1;
  *a1 = v3;
}

id sub_10066EC54()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUSDZPlayPauseKnob();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLUSDZPlayPauseKnob()
{
  return self;
}

id sub_10066ED28()
{
  id v0 = [self configurationWithPointSize:3 weight:22.0];
  swift_bridgeObjectRetain();
  id v1 = v0;
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v3 = [self systemImageNamed:v2 withConfiguration:v1];

  if (v3)
  {
    id v4 = [objc_allocWithZone((Class)CRLImage) initWithUIImage:v3];
  }
  else
  {
    id v4 = 0;
  }
  id v5 = self;
  id v6 = [v5 whiteColor];
  if (v4) {
    id v7 = [v4 compositedImageWithColor:v6 alpha:20 blendMode:1.0];
  }
  else {
    id v7 = 0;
  }
  id v8 = v7;
  id v9 = [v5 blackColor];
  if (v7)
  {
    id v10 = v8;
    [v10 compositedImageWithColor:v9 alpha:20 blendMode:0.333333333];
  }
  else
  {
  }
  return v7;
}

unint64_t sub_10066EF08()
{
  unint64_t result = qword_101677090;
  if (!qword_101677090)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101677090);
  }
  return result;
}

uint64_t sub_10066EF48()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isBeingTracked)) {
    id v1 = &OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_pausePressedImage;
  }
  else {
    id v1 = &OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_pauseNormalImage;
  }
  NSString v2 = &OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_playPressedImage;
  if (!*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isBeingTracked)) {
    NSString v2 = &OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_playNormalImage;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying)) {
    id v3 = v1;
  }
  else {
    id v3 = v2;
  }
  return *(void *)(v0 + *v3);
}

uint64_t sub_10066EFA0()
{
  uint64_t v9 = 0;
  uint64_t v0 = self;
  id v1 = [(id)v0 traitCollectionWithUserInterfaceStyle:1];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &v9;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_10066F14C;
  *(void *)(v3 + 24) = v2;
  aBlock[4] = sub_1006591F0;
  void aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_1006D9628;
  aBlock[3] = &unk_10150DA80;
  id v4 = _Block_copy(aBlock);
  id v5 = v1;
  swift_retain();
  swift_release();
  [v0 crl_withTraitCollectionAsCurrent:v5 performBlock:v4];

  _Block_release(v4);
  LOBYTE(v0) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = v9;
    swift_release();
    return v7;
  }
  return result;
}

uint64_t sub_10066F13C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10066F14C()
{
  sub_10066EB98(*(void ***)(v0 + 16));
}

uint64_t sub_10066F154()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10066F164(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10066F174()
{
  return swift_release();
}

uint64_t sub_10066F17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  sub_1005057FC(&qword_101672E90);
  v3[13] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URL();
  v3[14] = v4;
  v3[15] = *(void *)(v4 - 8);
  unsigned char v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  return _swift_task_switch(sub_10066F280, 0, 0);
}

uint64_t sub_10066F280()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 80) + 16);
  *(void *)(v0 + 144) = v1;
  if (v1)
  {
    sub_10050F848(*(void **)(v0 + 96), *(void *)(*(void *)(v0 + 96) + 24));
    *(void *)(v0 + 152) = type metadata accessor for MainActor();
    *(void *)(v0 + 160) = static MainActor.shared.getter();
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10066F3D4;
    uint64_t v3 = *(void *)(v0 + 88);
    return sub_100EDC29C(v3);
  }
  else
  {
    sub_1006700E8();
    swift_allocError();
    *id v5 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_10066F3D4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 176) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
    id v8 = sub_10066F9D0;
  }
  else
  {
    *(void *)(v4 + 184) = a1;
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v9;
    id v8 = sub_10066F554;
  }
  return _swift_task_switch(v8, v5, v7);
}

uint64_t sub_10066F554()
{
  uint64_t v1 = v0[23];
  swift_release();
  v0[5] = &type metadata for CRLBoardLibraryHeadlessControllerDependency;
  v0[6] = &off_10152F7E0;
  v0[2] = v1;
  return _swift_task_switch(sub_10066F5D8, 0, 0);
}

uint64_t sub_10066F5D8()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = _swiftEmptyArrayStorage;
  uint64_t v3 = *(void (**)(uint64_t, unint64_t, uint64_t))(v1 + 16);
  v1 += 16;
  unint64_t v31 = (*(unsigned __int8 *)(v1 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 64);
  unint64_t v4 = v0[10] + v31;
  uint64_t v5 = *(void *)(v1 + 56);
  unint64_t v34 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 40);
  double v36 = _swiftEmptyArrayStorage;
  uint64_t v32 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 32);
  uint64_t v33 = v3;
  uint64_t v6 = (void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  uint64_t v29 = (void (**)(void, void))(v1 - 8);
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  uint64_t v30 = v5;
  while (1)
  {
    uint64_t v9 = v0[13];
    uint64_t v8 = v0[14];
    v33(v9, v4, v8);
    id v10 = *v34;
    (*v34)(v9, 0, 1, v8);
    if ((*v32)(v9, 1, v8) == 1) {
      break;
    }
    uint64_t v11 = *v6;
    (*v6)((char *)v0[17], v0[13], v0[14]);
    uint64_t v12 = URL.scheme.getter();
    if (v13)
    {
      uint64_t v14 = v12;
      uint64_t v15 = v13;
      BOOL v16 = v12 == 0x7370747468 && v13 == 0xE500000000000000;
      if (v16
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
        || v14 == 1886680168 && v15 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_14:
        v11((char *)v0[16], v0[17], v0[14]);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB824(0, *((void *)v2 + 2) + 1, 1);
          uint64_t v2 = v36;
        }
        unint64_t v18 = *((void *)v2 + 2);
        unint64_t v17 = *((void *)v2 + 3);
        if (v18 >= v17 >> 1)
        {
          sub_1006BB824(v17 > 1, v18 + 1, 1);
          uint64_t v2 = v36;
        }
        uint64_t v19 = v0[16];
        uint64_t v20 = v0[14];
        *((void *)v2 + 2) = v18 + 1;
        id v21 = (char *)v2 + v31 + v18 * v30;
        uint64_t v5 = v30;
        v11(v21, v19, v20);
        double v36 = v2;
        goto LABEL_3;
      }
      char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_14;
      }
    }
    (*v29)(v0[17], v0[14]);
LABEL_3:
    ++v7;
    v4 += v5;
    if (v7 == v0[18])
    {
      v10(v0[13], 1, 1, v0[14]);
      break;
    }
  }
  v0[24] = v2;
  uint64_t v23 = v0[18];
  uint64_t v24 = v0[13];
  swift_bridgeObjectRelease();
  sub_1005CCBB8(v24);
  if (*((void *)v2 + 2) != v23)
  {
    if (qword_10166FB50 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v25 = (id)static OS_os_log.appIntents;
    uint64_t v26 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v25, (uint64_t)&_mh_execute_header, v26, (uint64_t)"Attempted to import non web urls as link previews", 49, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
  uint64_t v35 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_101686AF0 + dword_101686AF0);
  uint64_t v27 = (void *)swift_task_alloc();
  v0[25] = v27;
  void *v27 = v0;
  v27[1] = sub_10066FAB8;
  return v35((uint64_t)v2, (uint64_t)(v0 + 2));
}

uint64_t sub_10066F9D0()
{
  swift_release();
  return _swift_task_switch(sub_10066FA38, 0, 0);
}

uint64_t sub_10066FA38()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10066FAB8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 208) = a1;
  *(void *)(v3 + 216) = v1;
  swift_task_dealloc();
  if (v1)
  {
    unint64_t v4 = sub_10066FF30;
  }
  else
  {
    swift_release();
    unint64_t v4 = sub_10066FBD4;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10066FBD4()
{
  sub_10050F848(v0 + 2, v0[5]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[28] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10066FC78;
  uint64_t v2 = v0[26];
  return sub_100E17CF0(v2);
}

uint64_t sub_10066FC78()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10066FD74, 0, 0);
}

uint64_t sub_10066FD74()
{
  uint64_t v1 = *sub_10050F848(*(void **)(v0 + 96), *(void *)(*(void *)(v0 + 96) + 24));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10066FE1C;
  return sub_100E32DC8(v0 + 16, v1);
}

uint64_t sub_10066FE1C()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100670054;
  }
  else {
    uint64_t v2 = sub_10066FFC4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10066FF30()
{
  swift_release();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10066FFC4()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 208);
  return v1(v2);
}

uint64_t sub_100670054()
{
  swift_bridgeObjectRelease();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_1006700E8()
{
  unint64_t result = qword_101678B78;
  if (!qword_101678B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101678B78);
  }
  return result;
}

uint64_t initializeWithCopy for CRLInsertURLToBoardIntentPerformer(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for CRLInsertURLToBoardIntentPerformer(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t assignWithTake for CRLInsertURLToBoardIntentPerformer(uint64_t a1, uint64_t a2)
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for CRLInsertURLToBoardIntentPerformer()
{
  return &type metadata for CRLInsertURLToBoardIntentPerformer;
}

uint64_t UUID.init(crl_data:)(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v5) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      uint64_t v5 = (int)v5;
LABEL_6:
      if (v5 == 16)
      {
        if (!v2) {
          goto LABEL_18;
        }
        if (v2 != 1)
        {
          uint64_t v9 = *(void *)(a1 + 16);
          swift_retain();
          swift_retain();
          if (!__DataStorage._bytes.getter())
          {
LABEL_26:
            __DataStorage._length.getter();
            __break(1u);
            JUMPOUT(0x1006704D0);
          }
          if (!__OFSUB__(v9, __DataStorage._offset.getter()))
          {
            __DataStorage._length.getter();
            swift_release();
            swift_release();
            goto LABEL_18;
          }
          goto LABEL_23;
        }
        if ((int)a1 <= a1 >> 32)
        {
          if (!__DataStorage._bytes.getter())
          {
LABEL_25:
            __DataStorage._length.getter();
            __break(1u);
            goto LABEL_26;
          }
          if (!__OFSUB__((int)a1, __DataStorage._offset.getter()))
          {
            __DataStorage._length.getter();
LABEL_18:
            UUID.init(uuid:)();
            return sub_100510084(a1, a2);
          }
LABEL_24:
          __break(1u);
          goto LABEL_25;
        }
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
LABEL_13:
      sub_1006704E0();
      swift_allocError();
      swift_willThrow();
      return sub_100510084(a1, a2);
    case 2uLL:
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      BOOL v8 = __OFSUB__(v6, v7);
      uint64_t v5 = v6 - v7;
      if (!v8) {
        goto LABEL_6;
      }
      goto LABEL_21;
    case 3uLL:
      goto LABEL_13;
    default:
      uint64_t v5 = BYTE6(a2);
      goto LABEL_6;
  }
}

unint64_t sub_1006704E0()
{
  unint64_t result = qword_101678B80;
  if (!qword_101678B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101678B80);
  }
  return result;
}

uint64_t UUID.crl_data()()
{
  uint64_t __src = UUID.uuid.getter();
  char v10 = v0;
  char v11 = v1;
  char v12 = v2;
  char v13 = v3;
  char v14 = v4;
  char v15 = v5;
  char v16 = v6;
  char v17 = v7;
  UUID.uuid.getter();
  return sub_100670608(&__src, 16);
}

uint64_t sub_100670608(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_100CD835C(__src, &__src[a2]);
  }
  type metadata accessor for __DataStorage();
  swift_allocObject();
  __DataStorage.init(bytes:length:)();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  type metadata accessor for Data.RangeReference();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

unint64_t sub_1006706C0()
{
  unint64_t result = qword_101678B88;
  if (!qword_101678B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101678B88);
  }
  return result;
}

unsigned char *_s15UUIDCodingErrorOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        double *result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      double *result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1006707B0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for UUID.UUIDCodingError()
{
  return &type metadata for UUID.UUIDCodingError;
}

double sub_1006707E8@<D0>(uint64_t a1@<X8>)
{
  int v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  if (sub_10050BF48(0, (unint64_t *)&qword_101678BC0)) {
    ObjCClassFromMetadatCATransform3D a = swift_getObjCClassFromMetadata();
  }
  else {
    ObjCClassFromMetadatCATransform3D a = 0;
  }
  id v5 = [v3 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
  self;
  char v6 = (void *)swift_dynamicCastObjCClass();
  if (!v6)
  {
    swift_unknownObjectRelease();
LABEL_9:
    *(void *)(a1 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return result;
  }
  id v7 = [v6 anyBoardItem];
  swift_unknownObjectRelease();
  if (!v7) {
    goto LABEL_9;
  }
  type metadata accessor for CRLBoardItem(0);
  sub_1005057FC(&qword_101678BC8);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_100670900()
{
  uint64_t v0 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v0 - 8, v1);
  int v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006707E8((uint64_t)&v10);
  if (!v11)
  {
    sub_100522F00((uint64_t)&v10, &qword_101684FC0);
    uint64_t v8 = type metadata accessor for CRLAssetData();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
    goto LABEL_5;
  }
  sub_10053974C(&v10, (uint64_t)v12);
  uint64_t v4 = v13;
  uint64_t v5 = v14;
  sub_10050F848(v12, v13);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v12);
  uint64_t v6 = type metadata accessor for CRLAssetData();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v3, 1, v6) == 1)
  {
LABEL_5:
    sub_100522F00((uint64_t)v3, (uint64_t *)&unk_10167D2B0);
    return 0;
  }
  uint64_t v7 = *(void *)&v3[*(int *)(v6 + 20)];
  swift_bridgeObjectRetain();
  sub_100671108((uint64_t)v3);
  return v7;
}

id sub_100670AA4()
{
  uint64_t v0 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v0 - 8, v1);
  int v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v9 - 8, v10);
  char v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006707E8((uint64_t)&v34);
  if (v35)
  {
    sub_10053974C(&v34, (uint64_t)v36);
    uint64_t v13 = v37;
    uint64_t v14 = v38;
    sub_10050F848(v36, v37);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
    uint64_t v15 = type metadata accessor for CRLAssetData();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v12, 1, v15) == 1)
    {
      sub_100522F00((uint64_t)v12, (uint64_t *)&unk_10167D2B0);
    }
    else
    {
      uint64_t v17 = v37;
      uint64_t v18 = v38;
      sub_10050F848(v36, v37);
      uint64_t v19 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
      uint64_t v20 = *(void *)&v19[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v20 + 16));
      uint64_t v21 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
      char v22 = *(void **)&v19[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
      if (v22)
      {
        id v23 = *(id *)&v19[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
      }
      else
      {
        id v24 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
        id v25 = v19;
        id v26 = sub_100EAFDE4((uint64_t)v25);

        uint64_t v27 = *(void **)&v19[v21];
        *(void *)&v19[v21] = v26;
        id v23 = v26;

        char v22 = 0;
      }
      int8x16_t v28 = *(os_unfair_lock_s **)(v20 + 16);
      id v29 = v22;
      os_unfair_lock_unlock(v28);
      sub_100EA7CA0((uint64_t)v12, 0, 3, 0, 0, v3);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
        URL._bridgeToObjectiveC()(v30);
        uint64_t v32 = v31;
        id v16 = [v31 crl_fileSize];

        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
        sub_100671108((uint64_t)v12);
        goto LABEL_12;
      }
      sub_100522F00((uint64_t)v3, &qword_101672E90);

      sub_100671108((uint64_t)v12);
    }
    id v16 = 0;
LABEL_12:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v36);
    return v16;
  }
  sub_100522F00((uint64_t)&v34, &qword_101684FC0);
  return 0;
}

id sub_100670E4C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  if (sub_10050BF48(0, &qword_101678BB8)) {
    ObjCClassFromMetadatCATransform3D a = swift_getObjCClassFromMetadata();
  }
  else {
    ObjCClassFromMetadatCATransform3D a = 0;
  }
  id v3 = [v1 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
  self;
  id v4 = (id)swift_dynamicCastObjCClass();
  if (v4)
  {
    self;
    uint64_t v5 = (void *)swift_dynamicCastObjCClass();
    if (v5) {
      id v4 = [v5 canRemoveImageBackground];
    }
    else {
      id v4 = 0;
    }
  }
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_100670F20()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  if (sub_10050BF48(0, &qword_101678BB8)) {
    ObjCClassFromMetadatCATransform3D a = swift_getObjCClassFromMetadata();
  }
  else {
    ObjCClassFromMetadatCATransform3D a = 0;
  }
  [v1 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
  self;
  if (swift_dynamicCastObjCClass())
  {
    self;
    id v3 = (void *)swift_dynamicCastObjCClass();
    if (v3) {
      [v3 removeImageBackground:v0];
    }
  }

  return swift_unknownObjectRelease();
}

uint64_t sub_100670FFC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  if (sub_10050BF48(0, &qword_101678BB8)) {
    ObjCClassFromMetadatCATransform3D a = swift_getObjCClassFromMetadata();
  }
  else {
    ObjCClassFromMetadatCATransform3D a = 0;
  }
  [v1 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
  self;
  id v3 = (void *)swift_dynamicCastObjCClass();
  if (v3) {
    [v3 showMediaReplaceUI:v0];
  }

  return swift_unknownObjectRelease();
}

id sub_1006710B0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMiniFormatterMediaDataProvider();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLMiniFormatterMediaDataProvider()
{
  return self;
}

uint64_t sub_100671108(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLAssetData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100671164(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for AnyCancellable();
    sub_1006793F4(&qword_101677490, 255, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v3 = v20;
    uint64_t v4 = v21;
    unint64_t v5 = v22;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
      uint64_t v12 = v4;
      goto LABEL_29;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v13 >= v9) {
      return sub_10052E1EC();
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    uint64_t v12 = v4 + 1;
    if (!v14)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        return sub_10052E1EC();
      }
      unint64_t v14 = *(void *)(v17 + 8 * v12);
      if (!v14)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v9) {
          return sub_10052E1EC();
        }
        unint64_t v14 = *(void *)(v17 + 8 * v12);
        if (!v14)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v9) {
            return sub_10052E1EC();
          }
          unint64_t v14 = *(void *)(v17 + 8 * v12);
          if (!v14)
          {
            uint64_t v12 = v4 + 5;
            if (v4 + 5 >= v9) {
              return sub_10052E1EC();
            }
            unint64_t v14 = *(void *)(v17 + 8 * v12);
            if (!v14)
            {
              uint64_t v15 = v4 + 6;
              while (v9 != v15)
              {
                unint64_t v14 = *(void *)(v17 + 8 * v15++);
                if (v14)
                {
                  uint64_t v12 = v15 - 1;
                  goto LABEL_28;
                }
              }
              return sub_10052E1EC();
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_29:
    uint64_t v16 = *(void *)(*(void *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v16) {
      return sub_10052E1EC();
    }
    while (1)
    {
      AnyCancellable.cancel()();
      uint64_t result = swift_release();
      uint64_t v4 = v12;
      unint64_t v5 = v10;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for AnyCancellable();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v12 = v4;
        uint64_t v10 = v5;
        if (v23) {
          continue;
        }
      }
      return sub_10052E1EC();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100671424(uint64_t a1)
{
  uint64_t v43 = sub_1005057FC(&qword_1016791B0);
  uint64_t v3 = __chkstk_darwin(v43, v2);
  uint64_t v42 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3, v5);
  uint64_t v41 = (uint64_t)&v37 - v7;
  __chkstk_darwin(v6, v8);
  uint64_t v40 = (char *)&v37 - v9;
  uint64_t v47 = _swiftEmptyArrayStorage;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v38 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v39 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v44 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  uint64_t v16 = v42;
  while (1)
  {
    if (v13)
    {
      uint64_t v45 = (v13 - 1) & v13;
      int64_t v46 = v15;
      unint64_t v17 = __clz(__rbit64(v13)) | (v15 << 6);
      goto LABEL_5;
    }
    int64_t v33 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v33 >= v39) {
      goto LABEL_23;
    }
    unint64_t v34 = *(void *)(v38 + 8 * v33);
    int64_t v35 = v15 + 1;
    if (!v34)
    {
      int64_t v35 = v15 + 2;
      if (v15 + 2 >= v39) {
        goto LABEL_23;
      }
      unint64_t v34 = *(void *)(v38 + 8 * v35);
      if (!v34)
      {
        int64_t v35 = v15 + 3;
        if (v15 + 3 >= v39) {
          goto LABEL_23;
        }
        unint64_t v34 = *(void *)(v38 + 8 * v35);
        if (!v34)
        {
          int64_t v35 = v15 + 4;
          if (v15 + 4 >= v39) {
            goto LABEL_23;
          }
          unint64_t v34 = *(void *)(v38 + 8 * v35);
          if (!v34) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v45 = (v34 - 1) & v34;
    int64_t v46 = v35;
    unint64_t v17 = __clz(__rbit64(v34)) + (v35 << 6);
LABEL_5:
    uint64_t v18 = v44;
    uint64_t v19 = *(void *)(v44 + 48);
    uint64_t v20 = type metadata accessor for UUID();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = v21;
    uint64_t v23 = *(void (**)(char *, unint64_t, uint64_t))(v21 + 16);
    id v24 = v40;
    v23(v40, v19 + *(void *)(v21 + 72) * v17, v20);
    uint64_t v25 = *(void *)(*(void *)(v18 + 56) + 8 * v17);
    uint64_t v26 = v43;
    *(void *)&v24[*(int *)(v43 + 48)] = v25;
    uint64_t v27 = (uint64_t)v24;
    uint64_t v28 = v41;
    sub_10051B3EC(v27, v41, &qword_1016791B0);
    uint64_t v29 = *(int *)(v26 + 48);
    v23(v16, v28, v20);
    uint64_t v30 = *(void *)(v28 + v29);
    *(void *)&v16[v29] = v30;
    swift_beginAccess();
    uint64_t v31 = *(void *)(v30 + 16);
    uint64_t v32 = *(void (**)(char *, uint64_t))(v22 + 8);
    swift_retain();
    swift_bridgeObjectRetain();
    v32(v16, v20);
    sub_100522F00(v28, &qword_1016791B0);
    uint64_t result = sub_1006E24D4(v31);
    unint64_t v13 = v45;
    int64_t v15 = v46;
  }
  uint64_t v36 = v15 + 5;
  if (v15 + 5 >= v39)
  {
LABEL_23:
    swift_release();
    return (uint64_t)v47;
  }
  unint64_t v34 = *(void *)(v38 + 8 * v36);
  if (v34)
  {
    int64_t v35 = v15 + 5;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v35 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v35 >= v39) {
      goto LABEL_23;
    }
    unint64_t v34 = *(void *)(v38 + 8 * v35);
    ++v36;
    if (v34) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1006717B4(void *a1@<X8>)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = Strong;
    uint64_t v4 = sub_100678C94(v3);
    a1[3] = type metadata accessor for CRLCloudAssetDownloader();
    a1[4] = &off_10150E2E8;

    *a1 = v4;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(store:)", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2, 23, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(store:)", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2, 23);
    sub_100679060();
    swift_allocError();
    *uint64_t v5 = 0xD00000000000002CLL;
    v5[1] = 0x80000001012434D0;
    swift_willThrow();
  }
}

void *sub_100671914@<X0>(void *a1@<X8>)
{
  *(void *)&v10.sa_data[6] = 0;
  *(void *)v10.sa_datCATransform3D a = 0;
  *(_WORD *)&v10.sa_len = 528;
  SCNetworkReachabilityRef v3 = SCNetworkReachabilityCreateWithAddress(0, &v10);
  if (v3)
  {
    SCNetworkReachabilityRef v4 = v3;
    uint64_t v5 = type metadata accessor for CRLNetworkReachabilityListener();
    swift_allocObject();
    uint64_t result = sub_100A59D64(v4);
    if (!v1)
    {
      a1[3] = v5;
      a1[4] = &off_10151F648;
      *a1 = result;
    }
  }
  else
  {
    if (qword_10166FA30 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v7 = (id)static OS_os_log.crlNetworkReachability;
    uint64_t v8 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Failed to create network rechability for zero address.", 54, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_10067900C();
    swift_allocError();
    *uint64_t v9 = 0;
    return (void *)swift_willThrow();
  }
  return result;
}

uint64_t sub_100671A9C(uint64_t (*a1)(uint64_t))
{
  return a1(1);
}

uint64_t sub_100671ACC(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)(v2 + 272) + 16))
  {
    swift_bridgeObjectRetain();
    sub_100955FC8(a1);
    if (v6)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      sub_10095B460(a2);
      swift_endAccess();
      swift_release();
      return swift_release();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_100671B9C(uint64_t a1, uint64_t a2)
{
  return swift_release();
}

uint64_t sub_100671C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_100671C4C, a4, 0);
}

uint64_t sub_100671C4C()
{
  sub_100672064(*(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100671CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_100671CCC, a4, 0);
}

uint64_t sub_100671CCC()
{
  sub_100671D2C(*(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100671D2C(uint64_t a1)
{
  if (qword_10166FA38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlAssetDownloadManager;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v4 = v2;
  uint64_t v5 = UUID.uuidString.getter();
  uint64_t v7 = v6;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v8 = sub_100528BE4();
  *(void *)(inited + 64) = v8;
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  uint64_t v9 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v9, (uint64_t)"The AssetDownloadManager was being informed that an asset is ready to download asset: %{public}@. Resetting download attempts.", 126, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v10 = sub_100675DE4(a1);
  uint64_t v11 = (void *)static OS_os_log.crlAssetDownloadManager;
  uint64_t v12 = swift_initStackObject();
  *(_OWORD *)(v12 + 16) = xmmword_10117E810;
  id v13 = v11;
  uint64_t v14 = UUID.uuidString.getter();
  *(void *)(v12 + 56) = &type metadata for String;
  *(void *)(v12 + 64) = v8;
  *(void *)(v12 + 32) = v14;
  *(void *)(v12 + 40) = v15;
  uint64_t v16 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v16, (uint64_t)"resetDownloadAttempts for assetUUID: %@", 39, 2, v12);
  swift_setDeallocating();
  swift_arrayDestroy();

  *(void *)(v10
            + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts) = 0;
  swift_release();
  return sub_100672064(a1);
}

void *sub_100671F4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = v1 + 176;
  swift_beginAccess();
  sub_100522E9C(v1 + 176, (uint64_t)&v9, &qword_101679228);
  uint64_t v5 = v10;
  uint64_t v6 = sub_100522F00((uint64_t)&v9, &qword_101679228);
  if (!v5)
  {
    uint64_t result = (*(void *(**)(long long *__return_ptr, uint64_t))(v1 + 120))(&v9, v6);
    if (v2) {
      return result;
    }
    sub_10051B3EC((uint64_t)&v9, (uint64_t)v8, &qword_101679228);
    swift_beginAccess();
    sub_1006063BC((uint64_t)v8, v4, &qword_101679228);
    swift_endAccess();
  }
  uint64_t result = (void *)sub_100522E9C(v4, (uint64_t)&v9, &qword_101679228);
  if (v10) {
    return (void *)sub_10053974C(&v9, a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_100672064(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3, v6);
  uint64_t v7 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100674938();
  sub_100674B50();
  uint64_t v12 = sub_100675DE4(a1);
  uint64_t v13 = v12;
  if (*(void *)(v12
                 + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask))
  {
    return swift_release();
  }
  else
  {
    if ((double)*(uint64_t *)(v12
                            + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts)
       * (double)*(uint64_t *)(v12
                            + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts) <= 273.0)
      double v15 = (double)*(uint64_t *)(v12
                               + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts)
          * (double)*(uint64_t *)(v12
                               + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts);
    else {
      double v15 = 273.0;
    }
    uint64_t v16 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v11, 1, 1, v16);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
    uint64_t v24 = sub_1006793F4(&qword_1016791D0, v17, (void (*)(uint64_t))type metadata accessor for CRLAssetDownloadManager);
    unint64_t v18 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    unint64_t v19 = (v5 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = v24;
    *(void *)(v20 + 16) = v1;
    *(void *)(v20 + 24) = v21;
    *(double *)(v20 + 32) = v15;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v20 + v18, v7, v3);
    *(void *)(v20 + v19) = v1;
    *(void *)(v20 + ((v19 + 15) & 0xFFFFFFFFFFFFFFF8)) = v13;
    swift_retain_n();
    swift_retain();
    uint64_t v22 = sub_1005912D0((uint64_t)v11, (uint64_t)&unk_101679220, v20);
    sub_100676748(v22);
    swift_release();
    return swift_release();
  }
}

uint64_t sub_100672348(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 168) = a6;
  *(void *)(v7 + 176) = a7;
  *(void *)(v7 + 160) = a5;
  *(double *)(v7 + 152) = a1;
  return _swift_task_switch(sub_100672370, a6, 0);
}

uint64_t sub_100672370()
{
  double v1 = *(double *)(v0 + 152);
  if (v1 > 0.0)
  {
    if (qword_10166FA38 != -1)
    {
      swift_once();
      double v1 = *(double *)(v0 + 152);
    }
    swift_beginAccess();
    uint64_t v2 = (void *)static OS_os_log.crlAssetDownloadManager;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    id v4 = v2;
    uint64_t v5 = UUID.uuidString.getter();
    uint64_t v7 = v6;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v5;
    *(void *)(inited + 40) = v7;
    *(void *)(inited + 96) = &type metadata for Double;
    *(void *)(inited + 104) = &protocol witness table for Double;
    *(double *)(inited + 72) = v1;
    uint64_t v8 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v8, (uint64_t)"CRLAssetDownloadManager download task for assetUUID %@ delayed by %.2f seconds", 78, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    double v10 = v1 * 1000000000.0;
    if ((~COERCE__INT64(v1 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v10 > -1.0)
      {
        if (v10 < 1.84467441e19)
        {
          unint64_t v11 = (unint64_t)v10;
          uint64_t v12 = (void *)swift_task_alloc();
          *(void *)(v0 + 184) = v12;
          *uint64_t v12 = v0;
          v12[1] = sub_100672618;
          unint64_t v9 = v11;
          return static Task<>.sleep(nanoseconds:)(v9);
        }
LABEL_15:
        __break(1u);
        return static Task<>.sleep(nanoseconds:)(v9);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_100672770;
  uint64_t v14 = *(void *)(v0 + 168);
  v13[32] = *(void *)(v0 + 176);
  v13[33] = v14;
  return _swift_task_switch(sub_100672884, v14, 0);
}

uint64_t sub_100672618()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0) {
    swift_errorRelease();
  }
  id v4 = (void *)swift_task_alloc();
  v2[24] = v4;
  void *v4 = v3;
  v4[1] = sub_100672770;
  uint64_t v5 = v2[21];
  v4[32] = v2[22];
  v4[33] = v5;
  return _swift_task_switch(sub_100672884, v5, 0);
}

uint64_t sub_100672770()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  double v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100672864(uint64_t a1)
{
  *(void *)(v2 + 256) = a1;
  *(void *)(v2 + 264) = v1;
  return _swift_task_switch(sub_100672884, v1, 0);
}

uint64_t sub_100672884()
{
  uint64_t v1 = v0[32];
  if ((*(unsigned char *)(v1
                 + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_wasCancelled) & 1) != 0
    || *(void *)(v1
                 + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask)
    && (swift_retain(), isCancelled = swift_task_isCancelled(), swift_release(), uint64_t v1 = v0[32], (isCancelled & 1) != 0))
  {
    sub_100676450(1);
    sub_100672D50(v1);
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    uint64_t v5 = OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_assetUUID;
    v0[34] = OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_assetUUID;
    uint64_t v6 = v1 + v5;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[35] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1006729C0;
    return sub_1006732F0(v6);
  }
}

uint64_t sub_1006729C0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 288) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 264);
  if (v0) {
    uint64_t v4 = sub_100672B54;
  }
  else {
    uint64_t v4 = sub_100672AEC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100672AEC()
{
  sub_100673EEC(v0[32] + v0[34]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100672B54()
{
  if (qword_10166FA38 != -1) {
    swift_once();
  }
  uint64_t v15 = v0[32];
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.crlAssetDownloadManager;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  id v3 = v1;
  uint64_t v4 = UUID.uuidString.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v7 = sub_100528BE4();
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  swift_getErrorValue();
  uint64_t v8 = Error.publicDescription.getter(v0[25], v0[26]);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 72) = v8;
  *(void *)(inited + 80) = v9;
  swift_getErrorValue();
  uint64_t v10 = Error.fullDescription.getter(v0[28]);
  *(void *)(inited + 136) = &type metadata for String;
  *(void *)(inited + 144) = v7;
  *(void *)(inited + 112) = v10;
  *(void *)(inited + 120) = v11;
  uint64_t v12 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Failed to perform download task for asset. assetUUID=%@ error=%{public}@ %@", 75, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_100672D50(v15);
  swift_errorRelease();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

void sub_100672D50(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v6 = __chkstk_darwin(v3, v5);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1
     + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_assetUUID;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v8, a1+ OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_assetUUID, v3, v6);
  swift_beginAccess();
  uint64_t v10 = *(void *)(v1 + 272);
  if (!*(void *)(v10 + 16)) {
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_100955FC8((uint64_t)v8);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
    goto LABEL_12;
  }
  uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
  swift_retain();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
  swift_release();
  if (v13 == a1)
  {
    if ((*(unsigned char *)(a1
                   + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_wasCancelled) & 1) != 0
      || *(void *)(a1
                   + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask)
      && (swift_retain(), char isCancelled = swift_task_isCancelled(), swift_release(), (isCancelled & 1) != 0))
    {
      if (qword_10166FA38 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v15 = (void *)static OS_os_log.crlAssetDownloadManager;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      id v17 = v15;
      uint64_t v18 = UUID.uuidString.getter();
      uint64_t v20 = v19;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v18;
      *(void *)(inited + 40) = v20;
      uint64_t v21 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v17, (uint64_t)&_mh_execute_header, v21, (uint64_t)"Stopped trying to download asset. Notifying of cancel. assetUUID=%@", 67, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      sub_1006779B4();
    }
    else
    {
      if (qword_10166FA38 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v29 = (void *)static OS_os_log.crlAssetDownloadManager;
      uint64_t v44 = sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v30 = swift_initStackObject();
      long long v43 = xmmword_10117E810;
      *(_OWORD *)(v30 + 16) = xmmword_10117E810;
      id v31 = v29;
      uint64_t v32 = UUID.uuidString.getter();
      uint64_t v34 = v33;
      *(void *)(v30 + 56) = &type metadata for String;
      unint64_t v35 = sub_100528BE4();
      *(void *)(v30 + 64) = v35;
      *(void *)(v30 + 32) = v32;
      *(void *)(v30 + 40) = v34;
      uint64_t v36 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v31, (uint64_t)&_mh_execute_header, v36, (uint64_t)"Failed to download asset. Notifying of failure. assetUUID=%@", 60, 2, v30);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      sub_1006772EC();
      if (*(uint64_t *)(a1
                      + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts) <= 2)
      {
        uint64_t v37 = (void *)static OS_os_log.crlAssetDownloadManager;
        uint64_t v38 = swift_initStackObject();
        *(_OWORD *)(v38 + 16) = v43;
        id v39 = v37;
        uint64_t v40 = UUID.uuidString.getter();
        *(void *)(v38 + 56) = &type metadata for String;
        *(void *)(v38 + 64) = v35;
        *(void *)(v38 + 32) = v40;
        *(void *)(v38 + 40) = v41;
        uint64_t v42 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v39, (uint64_t)&_mh_execute_header, v42, (uint64_t)"Failed to download asset. Auto-Retrying. assetUUID=%@", 53, 2, v38);
        swift_setDeallocating();
        swift_arrayDestroy();

        sub_100672064(v9);
      }
    }
    return;
  }
LABEL_12:
  if (qword_10166FA38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v22 = (void *)static OS_os_log.crlAssetDownloadManager;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v23 = swift_initStackObject();
  *(_OWORD *)(v23 + 16) = xmmword_10117E810;
  id v24 = v22;
  uint64_t v25 = UUID.uuidString.getter();
  uint64_t v27 = v26;
  *(void *)(v23 + 56) = &type metadata for String;
  *(void *)(v23 + 64) = sub_100528BE4();
  *(void *)(v23 + 32) = v25;
  *(void *)(v23 + 40) = v27;
  uint64_t v28 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v24, (uint64_t)&_mh_execute_header, v28, (uint64_t)"The AssetRequestInfo associated with ended download task no longer exists but we are trying to end it. assetUUID=%@", 115, 2, v23);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

uint64_t sub_1006732F0(uint64_t a1)
{
  v2[19] = a1;
  v2[20] = v1;
  uint64_t v3 = type metadata accessor for URL();
  v2[21] = v3;
  v2[22] = *(void *)(v3 - 8);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  sub_1005057FC(&qword_101672E90);
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  return _swift_task_switch(sub_100673400, v1, 0);
}

uint64_t sub_100673400()
{
  v0[27] = *(void *)(v0[20] + 112);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[28] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1006734B0;
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[19];
  return sub_100EA869C(v2, v3, 0, 0, 3);
}

uint64_t sub_1006734B0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 160);
  swift_task_dealloc();
  return _swift_task_switch(sub_1006735C0, v1, 0);
}

uint64_t sub_1006735C0()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[22];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  v0[29] = v4;
  v0[30] = (v3 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  int v5 = v4(v1, 1, v2);
  sub_100522F00(v1, &qword_101672E90);
  if (v5 == 1)
  {
    if (qword_10166FA38 != -1) {
      swift_once();
    }
    swift_beginAccess();
    __n128 v6 = (void *)static OS_os_log.crlAssetDownloadManager;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v8 = v6;
    uint64_t v9 = UUID.uuidString.getter();
    uint64_t v11 = v10;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v9;
    *(void *)(inited + 40) = v11;
    uint64_t v12 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v12, (uint64_t)"CRLAssetDownloadManager _performDownloadRequest() assetUUID: %@", 63, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_100671F4C((uint64_t)(v0 + 11));
    sub_10050F848(v0 + 11, v0[14]);
    uint64_t v15 = (void *)swift_task_alloc();
    v0[31] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_10067387C;
    uint64_t v16 = v0[19];
    return sub_10067B4CC(v16);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_10067387C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 256) = a1;
  *(void *)(v4 + 264) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 160);
  if (v1) {
    __n128 v6 = sub_100673BA4;
  }
  else {
    __n128 v6 = sub_1006739B0;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1006739B0()
{
  uint64_t v1 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[29];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[21];
  sub_100522E9C(v0[32] + OBJC_IVAR____TtC8Freeform24CRLAssetSyncRemoteRecord_downloadedFileURL, v2, &qword_101672E90);
  if (v1(v2, 1, v3) == 1)
  {
    sub_100522F00(v0[25], &qword_101672E90);
    sub_100679060();
    swift_allocError();
    void *v4 = 0;
    v4[1] = 0;
    swift_willThrow();
    swift_release();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 11));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    uint64_t v7 = v0[32];
    (*(void (**)(void, void, void))(v0[22] + 32))(v0[24], v0[25], v0[21]);
    uint64_t v8 = v7 + OBJC_IVAR____TtC8Freeform24CRLAssetSyncRemoteRecord_metadata;
    uint64_t v9 = (uint64_t *)(v8 + *(int *)(type metadata accessor for CRLAssetSyncMetadata() + 20));
    uint64_t v10 = *v9;
    uint64_t v11 = v9[1];
    uint64_t v12 = (void *)swift_task_alloc();
    v0[34] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_100673C34;
    uint64_t v13 = v0[23];
    uint64_t v14 = v0[24];
    return sub_100EAE5B0(v13, v8, v10, v11, v14, 0);
  }
}

uint64_t sub_100673BA4()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 88);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100673C34()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[20];
    uint64_t v4 = sub_100673E30;
  }
  else
  {
    uint64_t v6 = v2[22];
    uint64_t v5 = v2[23];
    uint64_t v8 = v2[20];
    uint64_t v7 = v2[21];
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v2[36] = v9;
    v2[37] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v9(v5, v7);
    uint64_t v4 = sub_100673D74;
    uint64_t v3 = v8;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100673D74()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[36];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[21];
  swift_release();
  v1(v2, v3);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 11));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100673E30()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[22];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 11));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100673EEC(uint64_t a1)
{
  swift_beginAccess();
  if (*(void *)(*(void *)(v1 + 272) + 16))
  {
    swift_bridgeObjectRetain();
    sub_100955FC8(a1);
    if (v3)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      sub_100676CBC();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_beginAccess();
  sub_10095B330(a1);
  swift_endAccess();
  uint64_t result = swift_release();
  if (!*(void *)(*(void *)(v1 + 272) + 16))
  {
    sub_100674A4C();
    return sub_10067505C();
  }
  return result;
}

uint64_t sub_100673FE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = 0;
  v8[3] = 0;
  v8[4] = v1;
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  swift_retain();
  if (v9 == 1)
  {
    sub_100522F00((uint64_t)v5, &qword_101672BB0);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
    if (v8[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v11 = 0;
    }
  }
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = &unk_101679210;
  *(void *)(v13 + 24) = v8;
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    long long v15[2] = v10;
    uint64_t v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_100674224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_100674244, a4, 0);
}

uint64_t sub_100674244()
{
  sub_1006742A4();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006742A4()
{
  uint64_t v1 = sub_1005057FC(&qword_1016791C0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v39 - v7;
  swift_beginAccess();
  uint64_t v9 = *(void *)(v0 + 272);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v41 = v9 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v42 = (unint64_t)(v11 + 63) >> 6;
  int64_t v40 = v42 - 1;
  uint64_t v44 = v9;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v46 = 0;
  uint64_t v15 = &qword_101679180;
  long long v45 = xmmword_10117D8C0;
  long long v43 = (char *)&type metadata for () + 8;
  while (1)
  {
    if (v13)
    {
      unint64_t v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v18 = v17 | (v46 << 6);
LABEL_7:
      uint64_t v19 = v44;
      uint64_t v20 = *(void *)(v44 + 48);
      uint64_t v21 = type metadata accessor for UUID();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v4, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v21);
      uint64_t v22 = *(void *)(v19 + 56);
      uint64_t v23 = sub_1005057FC(v15);
      *(void *)&v4[*(int *)(v23 + 48)] = *(void *)(v22 + 8 * v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v4, 0, 1, v23);
      swift_retain();
      goto LABEL_26;
    }
    int64_t v24 = v46 + 1;
    if (__OFADD__(v46, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v24 < v42)
    {
      unint64_t v25 = *(void *)(v41 + 8 * v24);
      if (v25) {
        goto LABEL_11;
      }
      int64_t v26 = v46 + 2;
      ++v46;
      if (v24 + 1 < v42)
      {
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (v25) {
          goto LABEL_14;
        }
        int64_t v46 = v24 + 1;
        if (v24 + 2 < v42)
        {
          unint64_t v25 = *(void *)(v41 + 8 * (v24 + 2));
          if (v25)
          {
            v24 += 2;
            goto LABEL_11;
          }
          int64_t v26 = v24 + 3;
          int64_t v46 = v24 + 2;
          if (v24 + 3 < v42) {
            break;
          }
        }
      }
    }
LABEL_25:
    uint64_t v27 = sub_1005057FC(v15);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v4, 1, 1, v27);
    unint64_t v13 = 0;
LABEL_26:
    sub_10051B3EC((uint64_t)v4, (uint64_t)v8, &qword_1016791C0);
    uint64_t v28 = sub_1005057FC(v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v8, 1, v28) == 1) {
      return swift_release();
    }
    uint64_t v29 = v15;
    uint64_t v30 = *(void *)&v8[*(int *)(v28 + 48)];
    *(unsigned char *)(v30
             + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_wasCancelled) = 1;
    if (qword_10166FA38 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v31 = (void *)static OS_os_log.crlAssetDownloadManager;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v45;
    id v33 = v31;
    uint64_t v34 = UUID.uuidString.getter();
    uint64_t v36 = v35;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v34;
    *(void *)(inited + 40) = v36;
    uint64_t v37 = *(void *)(v30
                    + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts);
    *(void *)(inited + 96) = &type metadata for Int;
    *(void *)(inited + 104) = &protocol witness table for Int;
    *(void *)(inited + 72) = v37;
    uint64_t v38 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v33, (uint64_t)&_mh_execute_header, v38, (uint64_t)"Asset %{public}@ download was cancelled on the %d attempt", 57, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    if (*(void *)(v30
                   + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask))
    {
      swift_retain();
      Task.cancel()();
      swift_release();
    }
    uint64_t v15 = v29;
    swift_release();
    uint64_t v16 = type metadata accessor for UUID();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v8, v16);
  }
  unint64_t v25 = *(void *)(v41 + 8 * v26);
  if (v25)
  {
LABEL_14:
    int64_t v24 = v26;
LABEL_11:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v18 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v46 = v24;
    goto LABEL_7;
  }
  while (1)
  {
    int64_t v24 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v24 >= v42)
    {
      int64_t v46 = v40;
      goto LABEL_25;
    }
    unint64_t v25 = *(void *)(v41 + 8 * v24);
    ++v26;
    if (v25) {
      goto LABEL_11;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_10067484C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = a5;
  return _swift_task_switch(sub_10067486C, a4, 0);
}

uint64_t sub_10067486C()
{
  uint64_t v1 = v0[5];
  swift_beginAccess();
  if (*(void *)(*(void *)(v1 + 272) + 16))
  {
    uint64_t v2 = v0[6];
    swift_bridgeObjectRetain();
    sub_100955FC8(v2);
    if (v3)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      sub_100676450(0);
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_100674938()
{
  if (!*(void *)(v0 + 216))
  {
    type metadata accessor for CRLAssetDownloadManager.CullingListener();
    uint64_t v1 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    *(void *)(v0 + 216) = v1;
    swift_retain_n();
    swift_release();
    if (qword_10166F8D8 != -1) {
      swift_once();
    }
    os_unfair_lock_lock(*((os_unfair_lock_t *)off_101690438 + 2));
    if (qword_10166F8E0 != -1) {
      swift_once();
    }
    [(id)qword_101690440 addObject:v1];
    os_unfair_lock_unlock(*((os_unfair_lock_t *)off_101690438 + 2));
    swift_release_n();
  }
}

uint64_t sub_100674A4C()
{
  uint64_t v1 = *(void *)(v0 + 216);
  if (v1)
  {
    uint64_t result = swift_beginAccess();
    if (!*(void *)(*(void *)(v0 + 272) + 16))
    {
      uint64_t v3 = qword_10166F8D8;
      swift_retain();
      if (v3 != -1) {
        swift_once();
      }
      os_unfair_lock_lock(*((os_unfair_lock_t *)off_101690438 + 2));
      if (qword_10166F8E0 != -1) {
        swift_once();
      }
      [(id)qword_101690440 removeObject:v1];
      os_unfair_lock_unlock(*((os_unfair_lock_t *)off_101690438 + 2));
      swift_release();
      *(void *)(v0 + 216) = 0;
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100674B50()
{
  swift_beginAccess();
  sub_100522E9C(v0 + 224, (uint64_t)v5, &qword_1016791E0);
  uint64_t v1 = v6;
  uint64_t result = sub_100522F00((uint64_t)v5, &qword_1016791E0);
  if (!v1)
  {
    (*(void (**)(void *__return_ptr, uint64_t))(v0 + 136))(v5, result);
    sub_1005498A4((uint64_t)v5, (uint64_t)v4);
    sub_10051B3EC((uint64_t)v4, (uint64_t)v3, &qword_1016791E0);
    swift_beginAccess();
    sub_1006063BC((uint64_t)v3, v0 + 224, &qword_1016791E0);
    swift_endAccess();
    sub_10050F848(v5, v6);
    sub_1005057FC(&qword_1016791E8);
    OS_dispatch_queue.sync<A>(execute:)();
    swift_allocObject();
    swift_weakInit();
    sub_100523288(&qword_1016791F0, &qword_1016791E8);
    Publisher<>.sink(receiveValue:)();
    swift_release();
    swift_release();
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    sub_10050F848(v5, v6);
    OS_dispatch_queue.sync<A>(execute:)();
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v5);
  }
  return result;
}

uint64_t sub_100674EAC(unsigned char *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  uint64_t result = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 1)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      uint64_t v7 = result;
      uint64_t v8 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
      uint64_t v9 = (void *)swift_allocObject();
      v9[2] = 0;
      _OWORD v9[3] = 0;
      v9[4] = v7;
      sub_1005912D0((uint64_t)v6, (uint64_t)&unk_101679200, (uint64_t)v9);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100674FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_100674FFC, a4, 0);
}

uint64_t sub_100674FFC()
{
  sub_10067525C();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10067505C()
{
  swift_beginAccess();
  sub_100522E9C(v0 + 224, (uint64_t)&v3, &qword_1016791E0);
  if (!*((void *)&v4 + 1)) {
    return sub_100522F00((uint64_t)&v3, &qword_1016791E0);
  }
  sub_10053974C(&v3, (uint64_t)v6);
  swift_beginAccess();
  if (!*(void *)(*(void *)(v0 + 272) + 16))
  {
    sub_10050F848(v6, v6[3]);
    OS_dispatch_queue.sync<A>(execute:)();
    swift_beginAccess();
    uint64_t v2 = swift_bridgeObjectRetain();
    sub_100671164(v2);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 264) = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    long long v3 = 0u;
    long long v4 = 0u;
    swift_beginAccess();
    sub_1006063BC((uint64_t)&v3, v0 + 224, &qword_1016791E0);
    swift_endAccess();
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v6);
}

uint64_t sub_10067525C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v78 = (uint64_t)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5, v8);
  CGRect v72 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v67 - v11;
  uint64_t v13 = sub_1005057FC(&qword_1016791C0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v67 - v19;
  swift_beginAccess();
  uint64_t v21 = *(void *)(v0 + 272);
  uint64_t v22 = *(void *)(v21 + 64);
  uint64_t v75 = v21 + 64;
  uint64_t v23 = 1 << *(unsigned char *)(v21 + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v89 = v24 & v22;
  uint64_t v83 = v6 + 16;
  CGRect v87 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v70 = v7 + 7;
  uint64_t v84 = (void (**)(char *, uint64_t))(v6 + 8);
  int64_t v81 = (unint64_t)(v23 + 63) >> 6;
  int64_t v68 = v81 - 1;
  uint64_t v82 = v21;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v88 = 0;
  long long v77 = xmmword_10117E810;
  uint64_t v69 = (char *)&type metadata for () + 8;
  uint64_t v79 = v5;
  uint64_t v80 = v6;
  unint64_t v71 = v12;
  uint64_t v86 = v16;
  for (i = v20; ; uint64_t v20 = i)
  {
    if (v89)
    {
      unint64_t v26 = __clz(__rbit64(v89));
      v89 &= v89 - 1;
      unint64_t v27 = v26 | (v88 << 6);
LABEL_8:
      uint64_t v28 = v82;
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v16, *(void *)(v82 + 48) + *(void *)(v6 + 72) * v27, v5);
      uint64_t v29 = *(void *)(v28 + 56);
      uint64_t v30 = sub_1005057FC(&qword_101679180);
      *(void *)&v16[*(int *)(v30 + 48)] = *(void *)(v29 + 8 * v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v16, 0, 1, v30);
      swift_retain();
      goto LABEL_27;
    }
    int64_t v31 = v88 + 1;
    if (__OFADD__(v88, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    if (v31 < v81)
    {
      unint64_t v32 = *(void *)(v75 + 8 * v31);
      if (v32) {
        goto LABEL_12;
      }
      int64_t v33 = v88 + 2;
      ++v88;
      if (v31 + 1 < v81)
      {
        unint64_t v32 = *(void *)(v75 + 8 * v33);
        if (v32) {
          goto LABEL_15;
        }
        int64_t v88 = v31 + 1;
        if (v31 + 2 < v81)
        {
          unint64_t v32 = *(void *)(v75 + 8 * (v31 + 2));
          if (v32)
          {
            v31 += 2;
            goto LABEL_12;
          }
          int64_t v33 = v31 + 3;
          int64_t v88 = v31 + 2;
          if (v31 + 3 < v81) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v34 = sub_1005057FC(&qword_101679180);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v16, 1, 1, v34);
    unint64_t v89 = 0;
LABEL_27:
    sub_10051B3EC((uint64_t)v16, (uint64_t)v20, &qword_1016791C0);
    uint64_t v35 = sub_1005057FC(&qword_101679180);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v20, 1, v35) == 1) {
      return swift_release();
    }
    uint64_t v36 = v20;
    uint64_t v37 = *(void *)&v20[*(int *)(v35 + 48)];
    uint64_t v38 = *v87;
    (*v87)(v12, v36, v5);
    if ((*(unsigned char *)(v37
                   + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_wasCancelled) & 1) != 0
      || *(void *)(v37
                   + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask)
      && (swift_retain(), char isCancelled = swift_task_isCancelled(), swift_release(), (isCancelled & 1) != 0))
    {
      (*v84)(v12, v5);
      uint64_t result = swift_release();
    }
    else
    {
      if (qword_10166FA38 != -1) {
        swift_once();
      }
      swift_beginAccess();
      int64_t v40 = (void *)static OS_os_log.crlAssetDownloadManager;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v77;
      id v42 = v40;
      uint64_t v43 = UUID.uuidString.getter();
      uint64_t v45 = v44;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v43;
      *(void *)(inited + 40) = v45;
      uint64_t v46 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v42, (uint64_t)&_mh_execute_header, v46, (uint64_t)"resetDownloadAttempts for assetUUID: %@", 39, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      *(void *)(v37
                + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts) = 0;
      uint64_t v6 = v80;
      if (!*(void *)(v1 + 216))
      {
        type metadata accessor for CRLAssetDownloadManager.CullingListener();
        uint64_t v47 = swift_allocObject();
        swift_weakInit();
        swift_weakAssign();
        *(void *)(v1 + 216) = v47;
        swift_retain_n();
        swift_release();
        if (qword_10166F8D8 != -1) {
          swift_once();
        }
        os_unfair_lock_lock(*((os_unfair_lock_t *)off_101690438 + 2));
        if (qword_10166F8E0 != -1) {
          swift_once();
        }
        [(id)qword_101690440 addObject:v47];
        os_unfair_lock_unlock(*((os_unfair_lock_t *)off_101690438 + 2));
        swift_release_n();
      }
      sub_100674B50();
      uint64_t v48 = sub_100675DE4((uint64_t)v12);
      uint64_t v49 = v48;
      if (!*(void *)(v48
                      + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask))
      {
        if ((double)*(uint64_t *)(v48
                                + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts)
           * (double)*(uint64_t *)(v48
                                + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts) <= 273.0)
          double v50 = (double)*(uint64_t *)(v48
                                   + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts)
              * (double)*(uint64_t *)(v48
                                   + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts);
        else {
          double v50 = 273.0;
        }
        uint64_t v51 = type metadata accessor for TaskPriority();
        uint64_t v74 = *(void *)(v51 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v78, 1, 1, v51);
        uint64_t v52 = v12;
        uint64_t v53 = v72;
        uint64_t v54 = v79;
        (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v72, v52, v79);
        uint64_t v73 = sub_1006793F4(&qword_1016791D0, v55, (void (*)(uint64_t))type metadata accessor for CRLAssetDownloadManager);
        unint64_t v56 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
        uint64_t v76 = v49;
        unint64_t v57 = (v70 + v56) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v58 = swift_allocObject();
        uint64_t v59 = v73;
        *(void *)(v58 + 16) = v1;
        *(void *)(v58 + 24) = v59;
        *(double *)(v58 + 32) = v50;
        v38((char *)(v58 + v56), v53, v54);
        uint64_t v60 = v74;
        *(void *)(v58 + v57) = v1;
        *(void *)(v58 + ((v57 + 15) & 0xFFFFFFFFFFFFFFF8)) = v76;
        LODWORD(v54) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v78, 1, v51);
        swift_retain_n();
        swift_retain();
        if (v54 == 1)
        {
          sub_100522F00(v78, &qword_101672BB0);
        }
        else
        {
          uint64_t v61 = v78;
          TaskPriority.rawValue.getter();
          (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v61, v51);
        }
        uint64_t v12 = v71;
        if (*(void *)(v58 + 16))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v62 = dispatch thunk of Actor.unownedExecutor.getter();
          uint64_t v64 = v63;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v62 = 0;
          uint64_t v64 = 0;
        }
        uint64_t v65 = swift_allocObject();
        *(void *)(v65 + 16) = &unk_1016791D8;
        *(void *)(v65 + 24) = v58;
        if (v64 | v62)
        {
          uint64_t v90 = 0;
          uint64_t v91 = 0;
          uint64_t v92 = v62;
          uint64_t v93 = v64;
        }
        uint64_t v6 = v80;
        uint64_t v66 = swift_task_create();
        sub_100676748(v66);
        swift_release();
      }
      swift_release();
      swift_release();
      uint64_t v5 = v79;
      uint64_t result = ((uint64_t (*)(char *, uint64_t))*v84)(v12, v79);
    }
    uint64_t v16 = v86;
  }
  unint64_t v32 = *(void *)(v75 + 8 * v33);
  if (v32)
  {
LABEL_15:
    int64_t v31 = v33;
LABEL_12:
    unint64_t v89 = (v32 - 1) & v32;
    unint64_t v27 = __clz(__rbit64(v32)) + (v31 << 6);
    int64_t v88 = v31;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v31 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v31 >= v81)
    {
      int64_t v88 = v68;
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v75 + 8 * v31);
    ++v33;
    if (v32) {
      goto LABEL_12;
    }
  }
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_100675DE4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t *)(v1 + 272);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v1 + 272);
  if (!*(void *)(v9 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_100955FC8(a1);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v13(v7, a1, v3);
    type metadata accessor for CRLAssetDownloadManager.AssetRequestInfo();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12
              + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask) = 0;
    *(unsigned char *)(v12
             + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_wasCancelled) = 0;
    *(void *)(v12
              + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts) = 0;
    *(void *)(v12
              + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_observers) = &_swiftEmptyDictionarySingleton;
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v12+ OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_assetUUID, v7, v3);
    v13(v7, a1, v3);
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v8;
    *uint64_t v8 = 0x8000000000000000;
    sub_100972778(v12, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
    *uint64_t v8 = v17;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    swift_endAccess();
    return v12;
  }
  uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
  swift_retain();
  swift_bridgeObjectRelease();
  return v12;
}

void sub_100676024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v4;
  uint64_t v14 = (uint64_t *)(v4
                  + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_observers);
  swift_beginAccess();
  uint64_t v15 = *v14;
  if (!*(void *)(*v14 + 16))
  {
LABEL_10:
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
    type metadata accessor for CRLAssetDownloadManager.ObserverHandlerInfos();
    uint64_t v26 = swift_allocObject();
    sub_1005057FC(&qword_1016791B8);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_10117E810;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = a3;
    *(void *)(v28 + 24) = a4;
    *(void *)(v27 + 32) = a2;
    *(void *)(v27 + 40) = sub_1006798F4;
    *(void *)(v27 + 48) = v28;
    *(void *)(v26 + 16) = v27;
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v38 = *v14;
    uint64_t *v14 = 0x8000000000000000;
    sub_100972954(v26, (uint64_t)v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v14 = v38;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    swift_endAccess();
    if ((a2 & 1) == 0) {
      return;
    }
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_100955FC8(a1);
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a3;
  *(void *)(v19 + 24) = a4;
  uint64_t v20 = (double **)(v18 + 16);
  swift_beginAccess();
  uint64_t v21 = *(double **)(v18 + 16);
  swift_retain();
  char v22 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v18 + 16) = v21;
  if ((v22 & 1) == 0)
  {
    uint64_t v21 = sub_100F6212C(0, *((void *)v21 + 2) + 1, 1, v21);
    *uint64_t v20 = v21;
  }
  unint64_t v24 = *((void *)v21 + 2);
  unint64_t v23 = *((void *)v21 + 3);
  if (v24 >= v23 >> 1)
  {
    uint64_t v21 = sub_100F6212C((double *)(v23 > 1), v24 + 1, 1, v21);
    *uint64_t v20 = v21;
  }
  *((void *)v21 + 2) = v24 + 1;
  unint64_t v25 = &v21[3 * v24];
  *((void *)v25 + 4) = a2;
  *((void *)v25 + 5) = sub_1006798F4;
  *((void *)v25 + 6) = v19;
  swift_endAccess();
  swift_release();
  if (a2)
  {
LABEL_11:
    if (*(void *)(v36
                   + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask))
    {
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = a3;
      *(void *)(v30 + 24) = a4;
      aBlock[4] = sub_100679278;
      void aBlock[5] = v30;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100679958;
      aBlock[3] = &unk_10150DFD0;
      int64_t v31 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      unint64_t v32 = v31;
      if (+[NSThread isMainThread])
      {
        v32[2](v32);
      }
      else
      {
        id v33 = &_dispatch_main_q;
        id v34 = &_dispatch_main_q;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, v32);
      }
      _Block_release(v32);
    }
  }
}

void sub_100676450(char a1)
{
  uint64_t v2 = v1;
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_wasCancelled) = 1;
  if (qword_10166FA38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = (void *)static OS_os_log.crlAssetDownloadManager;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v6 = v4;
  uint64_t v7 = UUID.uuidString.getter();
  uint64_t v9 = v8;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v9;
  uint64_t v10 = *(void *)(v2
                  + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts);
  *(void *)(inited + 96) = &type metadata for Int;
  *(void *)(inited + 104) = &protocol witness table for Int;
  *(void *)(inited + 72) = v10;
  uint64_t v11 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v11, (uint64_t)"Asset %{public}@ download was cancelled on the %d attempt", 57, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  if (*(void *)(v2
                 + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  else if (a1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"cancelDownload(expectDownloadTask:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2, 471, (uint64_t)"Download task was expected during cancellation.", 47, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"cancelDownload(expectDownloadTask:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2, 471);
  }
}

uint64_t sub_1006766A0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v4 = swift_bridgeObjectRetain() + 40;
    do
    {
      uint64_t v5 = *(void (**)(uint64_t *))(v4 - 8);
      uint64_t v6 = a2;
      swift_retain();
      v5(&v6);
      swift_release();
      v4 += 16;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100676748(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v35 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for DispatchQoS();
  uint64_t v34 = *(void *)(v36 - 8);
  __chkstk_darwin(v36, v6);
  id v33 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask;
  if (*(void *)(v1
                 + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask))
  {
    swift_retain();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"notifyDownloadStarted(downloadTask:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2, 499, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"notifyDownloadStarted(downloadTask:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2, 499);
    swift_release();
  }
  *(void *)(v1 + v8) = a1;
  swift_retain();
  uint64_t result = swift_release();
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_wasCancelled) = 0;
  uint64_t v10 = *(void *)(v1
                  + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts);
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v1
              + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts) = v12;
    swift_beginAccess();
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v14 = sub_100671424(v13);
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      swift_bridgeObjectRetain();
      unint64_t v16 = (uint64_t *)(v14 + 48);
      char v17 = _swiftEmptyArrayStorage;
      do
      {
        uint64_t v18 = *(v16 - 2);
        uint64_t v19 = *(v16 - 1);
        uint64_t v20 = *v16;
        uint64_t v21 = swift_allocObject();
        *(void *)(v21 + 16) = v19;
        *(void *)(v21 + 24) = v20;
        if (v18)
        {
          uint64_t v22 = swift_allocObject();
          *(void *)(v22 + 16) = sub_100679934;
          *(void *)(v22 + 24) = v21;
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v17 = sub_100F639C0(0, *((void *)v17 + 2) + 1, 1, v17);
          }
          unint64_t v24 = *((void *)v17 + 2);
          unint64_t v23 = *((void *)v17 + 3);
          if (v24 >= v23 >> 1) {
            char v17 = sub_100F639C0((double *)(v23 > 1), v24 + 1, 1, v17);
          }
          *((void *)v17 + 2) = v24 + 1;
          unint64_t v25 = &v17[2 * v24];
          *((void *)v25 + 4) = sub_1006798F4;
          *((void *)v25 + 5) = v22;
        }
        else
        {
          swift_retain();
          swift_release();
        }
        v16 += 3;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      char v17 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease();
    if (*((void *)v17 + 2))
    {
      sub_100656064();
      uint64_t v26 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = v17;
      *(void *)(v27 + 24) = 0;
      aBlock[4] = sub_1006798F0;
      void aBlock[5] = v27;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100679958;
      aBlock[3] = &unk_10150DF30;
      uint64_t v28 = _Block_copy(aBlock);
      uint64_t v29 = v33;
      static DispatchQoS.unspecified.getter();
      uint64_t v39 = _swiftEmptyArrayStorage;
      sub_1006793F4((unint64_t *)&qword_1016747E0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1005057FC((uint64_t *)&unk_1016725D0);
      sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
      uint64_t v30 = v35;
      uint64_t v31 = v38;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v28);

      (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v31);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v36);
      return swift_release();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_100676CBC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  id v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v41 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  int64_t v40 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v0
            + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask) = 0;
  swift_release();
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_wasCancelled) = 0;
  if (qword_10166FA38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v9 = (void *)static OS_os_log.crlAssetDownloadManager;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v11 = v9;
  uint64_t v12 = UUID.uuidString.getter();
  uint64_t v14 = v13;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v12;
  *(void *)(inited + 40) = v14;
  uint64_t v15 = *(void *)(v1
                  + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts);
  *(void *)(inited + 96) = &type metadata for Int;
  *(void *)(inited + 104) = &protocol witness table for Int;
  *(void *)(inited + 72) = v15;
  uint64_t v16 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Successful asset %{public}@ download on attempt %d", 50, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_beginAccess();
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_100671424(v17);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    uint64_t v37 = v6;
    uint64_t v38 = v3;
    uint64_t v39 = v2;
    swift_bridgeObjectRetain();
    uint64_t v20 = (uint64_t *)(v18 + 48);
    uint64_t v21 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v23 = *(v20 - 2);
      uint64_t v22 = *(v20 - 1);
      uint64_t v24 = *v20;
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v22;
      *(void *)(v25 + 24) = v24;
      if ((v23 & 2) != 0)
      {
        uint64_t v26 = swift_allocObject();
        *(void *)(v26 + 16) = sub_100679934;
        *(void *)(v26 + 24) = v25;
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v21 = sub_100F639C0(0, *((void *)v21 + 2) + 1, 1, v21);
        }
        unint64_t v28 = *((void *)v21 + 2);
        unint64_t v27 = *((void *)v21 + 3);
        if (v28 >= v27 >> 1) {
          uint64_t v21 = sub_100F639C0((double *)(v27 > 1), v28 + 1, 1, v21);
        }
        *((void *)v21 + 2) = v28 + 1;
        uint64_t v29 = &v21[2 * v28];
        *((void *)v29 + 4) = sub_1006798F4;
        *((void *)v29 + 5) = v26;
      }
      else
      {
        swift_retain();
        swift_release();
      }
      v20 += 3;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    uint64_t v2 = v39;
    uint64_t v3 = v38;
    uint64_t v6 = v37;
  }
  else
  {
    uint64_t v21 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)v21 + 2)) {
    return swift_bridgeObjectRelease();
  }
  sub_100656064();
  uint64_t v30 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v21;
  *(void *)(v31 + 24) = 1;
  aBlock[4] = sub_1006798F0;
  void aBlock[5] = v31;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = &unk_10150DE90;
  uint64_t v32 = _Block_copy(aBlock);
  id v33 = v40;
  static DispatchQoS.unspecified.getter();
  uint64_t v43 = _swiftEmptyArrayStorage;
  sub_1006793F4((unint64_t *)&qword_1016747E0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  uint64_t v34 = v42;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v32);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v34, v2);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v33, v6);
  return swift_release();
}

uint64_t sub_1006772EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v41 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42, v6);
  uint64_t v39 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask;
  if (!*(void *)(v0
                  + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"notifyFailure()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2, 516, (uint64_t)"invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"notifyFailure()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2, 516);
  }
  *(void *)(v0 + v8) = 0;
  swift_release();
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_wasCancelled) = 0;
  if (qword_10166FA38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v9 = (void *)static OS_os_log.crlAssetDownloadManager;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v11 = v9;
  uint64_t v12 = UUID.uuidString.getter();
  uint64_t v14 = v13;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v12;
  *(void *)(inited + 40) = v14;
  uint64_t v15 = *(void *)(v1
                  + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts);
  *(void *)(inited + 96) = &type metadata for Int;
  *(void *)(inited + 104) = &protocol witness table for Int;
  *(void *)(inited + 72) = v15;
  uint64_t v16 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Failed asset %{public}@ download on attempt %d", 46, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_beginAccess();
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_100671424(v17);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    uint64_t v37 = v3;
    uint64_t v38 = v2;
    swift_bridgeObjectRetain();
    uint64_t v20 = (uint64_t *)(v18 + 48);
    uint64_t v21 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v23 = *(v20 - 2);
      uint64_t v22 = *(v20 - 1);
      uint64_t v24 = *v20;
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v22;
      *(void *)(v25 + 24) = v24;
      if ((v23 & 4) != 0)
      {
        uint64_t v26 = swift_allocObject();
        *(void *)(v26 + 16) = sub_100679934;
        *(void *)(v26 + 24) = v25;
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v21 = sub_100F639C0(0, *((void *)v21 + 2) + 1, 1, v21);
        }
        unint64_t v28 = *((void *)v21 + 2);
        unint64_t v27 = *((void *)v21 + 3);
        if (v28 >= v27 >> 1) {
          uint64_t v21 = sub_100F639C0((double *)(v27 > 1), v28 + 1, 1, v21);
        }
        *((void *)v21 + 2) = v28 + 1;
        uint64_t v29 = &v21[2 * v28];
        *((void *)v29 + 4) = sub_1006798F4;
        *((void *)v29 + 5) = v26;
      }
      else
      {
        swift_retain();
        swift_release();
      }
      v20 += 3;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    uint64_t v2 = v38;
    uint64_t v3 = v37;
  }
  else
  {
    uint64_t v21 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)v21 + 2)) {
    return swift_bridgeObjectRelease();
  }
  sub_100656064();
  uint64_t v30 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v21;
  *(void *)(v31 + 24) = 2;
  aBlock[4] = sub_1006798F0;
  void aBlock[5] = v31;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = &unk_10150DDF0;
  uint64_t v32 = _Block_copy(aBlock);
  id v33 = v39;
  static DispatchQoS.unspecified.getter();
  uint64_t v43 = _swiftEmptyArrayStorage;
  sub_1006793F4((unint64_t *)&qword_1016747E0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  uint64_t v34 = v41;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v32);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v34, v2);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v33, v42);
  return swift_release();
}

uint64_t sub_1006779B4()
{
  uint64_t v38 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v37 = *(void *)(v38 - 8);
  __chkstk_darwin(v38, v1);
  uint64_t v35 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for DispatchQoS();
  uint64_t v34 = *(void *)(v36 - 8);
  __chkstk_darwin(v36, v3);
  id v33 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask;
  uint64_t v6 = *(void *)(v0
                 + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask);
  if (v6)
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    aBlock[0] = v6;
    swift_retain_n();
    sub_1005057FC(&qword_1016791A8);
    uint64_t v8 = String.init<A>(describing:)();
    uint64_t v10 = v9;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v11 = sub_100528BE4();
    *(void *)(inited + 32) = v8;
    *(void *)(inited + 64) = v11;
    *(void *)(inited + 40) = v10;
    if (swift_task_isCancelled())
    {
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"notifyCancelled()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2, 527, (uint64_t)"Task was expected to be cancelled. task=%@", 42, 2u, inited);
      sub_1005598CC(inited, (uint64_t)"notifyCancelled()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2, 527);
      swift_bridgeObjectRelease();
    }
    swift_release();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"notifyCancelled()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2, 525, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"notifyCancelled()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetDownloadManager.swift", 95, 2, 525);
  }
  *(void *)(v0 + v5) = 0;
  swift_release();
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_wasCancelled) = 1;
  swift_beginAccess();
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_100671424(v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = (uint64_t *)(v13 + 48);
    uint64_t v16 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v18 = *(v15 - 2);
      uint64_t v17 = *(v15 - 1);
      uint64_t v19 = *v15;
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v17;
      *(void *)(v20 + 24) = v19;
      if ((v18 & 8) != 0)
      {
        uint64_t v21 = swift_allocObject();
        *(void *)(v21 + 16) = sub_100523358;
        *(void *)(v21 + 24) = v20;
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v16 = sub_100F639C0(0, *((void *)v16 + 2) + 1, 1, v16);
        }
        unint64_t v23 = *((void *)v16 + 2);
        unint64_t v22 = *((void *)v16 + 3);
        if (v23 >= v22 >> 1) {
          uint64_t v16 = sub_100F639C0((double *)(v22 > 1), v23 + 1, 1, v16);
        }
        *((void *)v16 + 2) = v23 + 1;
        uint64_t v24 = &v16[2 * v23];
        *((void *)v24 + 4) = sub_1006791DC;
        *((void *)v24 + 5) = v21;
      }
      else
      {
        swift_retain();
        swift_release();
      }
      v15 += 3;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)v16 + 2)) {
    return swift_bridgeObjectRelease();
  }
  sub_100656064();
  uint64_t v25 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v16;
  *(void *)(v26 + 24) = 3;
  aBlock[4] = sub_1006791BC;
  void aBlock[5] = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = &unk_10150DD50;
  unint64_t v27 = _Block_copy(aBlock);
  unint64_t v28 = v33;
  static DispatchQoS.unspecified.getter();
  uint64_t v39 = _swiftEmptyArrayStorage;
  sub_1006793F4((unint64_t *)&qword_1016747E0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  uint64_t v29 = v35;
  uint64_t v30 = v38;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v29, v30);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v36);
  return swift_release();
}

uint64_t sub_100678064()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_assetUUID;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100678124(unint64_t a1)
{
  uint64_t v30 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30, v3);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = result;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v13 = _swiftEmptyArrayStorage;
    if (v12)
    {
      uint64_t v31 = _swiftEmptyArrayStorage;
      uint64_t result = sub_1006BB544(0, v12 & ~(v12 >> 63), 0);
      if (v12 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v26 = v11;
      unint64_t v27 = v9;
      uint64_t v14 = 0;
      uint64_t v13 = v31;
      unint64_t v28 = a1 & 0xC000000000000001;
      uint64_t v29 = v12;
      unint64_t v15 = a1;
      do
      {
        if (v28) {
          uint64_t v16 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v16 = (char *)*(id *)(a1 + 8 * v14 + 32);
        }
        uint64_t v17 = v16;
        uint64_t v18 = &v16[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
        uint64_t v19 = *((void *)v18 + 3);
        uint64_t v20 = *((void *)v18 + 4);
        sub_10050F848(v18, v19);
        (*(void (**)(uint64_t, uint64_t))(v20 + 24))(v19, v20);

        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v31 = v13;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1006BB544(0, *((void *)v13 + 2) + 1, 1);
          uint64_t v13 = v31;
        }
        unint64_t v23 = *((void *)v13 + 2);
        unint64_t v22 = *((void *)v13 + 3);
        a1 = v15;
        if (v23 >= v22 >> 1)
        {
          sub_1006BB544(v22 > 1, v23 + 1, 1);
          uint64_t v13 = v31;
        }
        ++v14;
        *((void *)v13 + 2) = v23 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))((unint64_t)v13+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v23, v5, v30);
        uint64_t v31 = v13;
      }
      while (v29 != v14);
      uint64_t v11 = v26;
      uint64_t v9 = v27;
    }
    static TaskPriority.high.getter();
    uint64_t v24 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v9, 0, 1, v24);
    uint64_t v25 = (void *)swift_allocObject();
    v25[2] = 0;
    void v25[3] = 0;
    v25[4] = v11;
    v25[5] = v13;
    swift_retain();
    sub_100B107F4((uint64_t)v9, (uint64_t)&unk_1016791A0, (uint64_t)v25);
    swift_release();
    swift_release();
    return sub_100522F00((uint64_t)v9, &qword_101672BB0);
  }
  return result;
}

uint64_t sub_100678484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[22] = a4;
  v5[23] = a5;
  uint64_t v7 = type metadata accessor for UUID();
  unsigned char v5[24] = v7;
  v5[25] = *(void *)(v7 - 8);
  v5[26] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_101674520);
  v5[27] = swift_task_alloc();
  return _swift_task_switch(sub_100678578, a4, 0);
}

uint64_t sub_100678578()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[25];
    uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = v0[22] + 272;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    v3 += 16;
    uint64_t v6 = v7;
    uint64_t v8 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 40);
    uint64_t v33 = *(void *)(v3 + 56);
    uint64_t v34 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    uint64_t v31 = (void (**)(void, void))(v3 - 8);
    uint64_t v32 = (void (**)(void, void, void))(v3 + 16);
    uint64_t v30 = v5;
    unint64_t v28 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 40);
    uint64_t v29 = v7;
    while (1)
    {
      uint64_t v9 = v0[27];
      uint64_t v10 = v0[24];
      v6(v9, v4, v10);
      uint64_t v11 = *v8;
      (*v8)(v9, 0, 1, v10);
      if ((*v34)(v9, 1, v10) == 1) {
        break;
      }
      (*v32)(v0[26], v0[27], v0[24]);
      uint64_t v12 = *(void *)v5;
      if (*(void *)(*(void *)v5 + 16))
      {
        uint64_t v13 = v0[26];
        swift_bridgeObjectRetain();
        unint64_t v14 = sub_100955FC8(v13);
        if (v15)
        {
          uint64_t v16 = *(void *)(*(void *)(v12 + 56) + 8 * v14);
          swift_retain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v16
                   + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_wasCancelled) = 1;
          if (qword_10166FA38 != -1) {
            swift_once();
          }
          swift_beginAccess();
          uint64_t v17 = (void *)static OS_os_log.crlAssetDownloadManager;
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
          id v19 = v17;
          uint64_t v20 = UUID.uuidString.getter();
          uint64_t v22 = v21;
          *(void *)(inited + 56) = &type metadata for String;
          *(void *)(inited + 64) = sub_100528BE4();
          *(void *)(inited + 32) = v20;
          *(void *)(inited + 40) = v22;
          uint64_t v23 = *(void *)(v16
                          + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadAttempts);
          *(void *)(inited + 96) = &type metadata for Int;
          *(void *)(inited + 104) = &protocol witness table for Int;
          *(void *)(inited + 72) = v23;
          uint64_t v24 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v24, (uint64_t)"Asset %{public}@ download was cancelled on the %d attempt", 57, 2, inited);
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();

          if (*(void *)(v16
                         + OBJC_IVAR____TtCC8Freeform23CRLAssetDownloadManagerP33_57C3D83DDAF123485FE9A9EAF267205F16AssetRequestInfo_downloadTask))
          {
            swift_retain();
            Task.cancel()();
            swift_release();
          }
          swift_release();
          uint64_t v5 = v30;
          uint64_t v8 = v28;
          uint64_t v6 = v29;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      (*v31)(v0[26], v0[24]);
      v4 += v33;
      if (!--v2)
      {
        v11(v0[27], 1, 1, v0[24]);
        break;
      }
    }
  }
  else
  {
    uint64_t v25 = *(void (**)(void, uint64_t, uint64_t, void))(v0[25] + 56);
    swift_bridgeObjectRetain();
    v25(v0[27], 1, 1, v0[24]);
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(void))v0[1];
  return v26();
}

uint64_t sub_100678A30()
{
  swift_weakDestroy();

  return swift_deallocClassInstance();
}

uint64_t sub_100678A68()
{
  swift_release();
  swift_release();
  sub_100522F00(v0 + 176, &qword_101679228);
  swift_release();
  sub_100522F00(v0 + 224, &qword_1016791E0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_100678AD8()
{
  sub_100678A68();

  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for CRLAssetDownloadManager()
{
  return self;
}

uint64_t sub_100678B28()
{
  return type metadata accessor for CRLAssetDownloadManager.AssetRequestInfo();
}

uint64_t type metadata accessor for CRLAssetDownloadManager.AssetRequestInfo()
{
  uint64_t result = qword_101678E78;
  if (!qword_101678E78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100678B7C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLAssetDownloadManager.ObserverHandlerInfos()
{
  return self;
}

uint64_t type metadata accessor for CRLAssetDownloadManager.CullingListener()
{
  return self;
}

ValueMetadata *type metadata accessor for CRLAssetDownloadManager.CRLAssetDownloadManagerThrottlingConfiguration()
{
  return &type metadata for CRLAssetDownloadManager.CRLAssetDownloadManagerThrottlingConfiguration;
}

void *sub_100678C94(void *a1)
{
  uint64_t v2 = type metadata accessor for CRLCloudKitOperationSink();
  uint64_t v3 = swift_allocObject();
  if (qword_10166EE68 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_10171A488;
  *(void *)(v3 + 16) = qword_10171A488;
  v16[3] = v2;
  v16[4] = &off_10150E2F8;
  v16[0] = v3;
  type metadata accessor for CRLCloudAssetDownloader();
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v6 = sub_1005231B4((uint64_t)v16, v2);
  __chkstk_darwin(v6, v6);
  uint64_t v8 = (uint64_t *)((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v9 + 16))(v8);
  uint64_t v10 = *v8;
  uint64_t v14 = v2;
  char v15 = &off_10150E2F8;
  *(void *)&long long v13 = v10;
  id v11 = v4;
  swift_retain();
  swift_defaultActor_initialize();
  v5[15] = 0;
  swift_unknownObjectWeakInit();
  v5[21] = &_swiftEmptySetSingleton;
  v5[22] = &_swiftEmptyDictionarySingleton;
  v5[15] = &off_10150DCA0;
  swift_unknownObjectWeakAssign();

  sub_10053974C(&v13, (uint64_t)(v5 + 16));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v16);
  swift_release();
  return v5;
}

uint64_t sub_100678E6C(char *a1)
{
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = *(void *)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v3 + 16));
  uint64_t v4 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  uint64_t v5 = *(void **)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v5)
  {
    id v6 = *(id *)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v7 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    uint64_t v8 = a1;
    id v9 = sub_100EAFDE4((uint64_t)v8);

    uint64_t v10 = *(void **)&a1[v4];
    *(void *)&a1[v4] = v9;
    id v6 = v9;

    uint64_t v5 = 0;
  }
  id v11 = *(os_unfair_lock_s **)(v3 + 16);
  id v12 = v5;
  os_unfair_lock_unlock(v11);
  type metadata accessor for CRLAssetDownloadManager();
  uint64_t v13 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_OWORD *)(v13 + 224) = 0u;
  *(_OWORD *)(v13 + 240) = 0u;
  *(_OWORD *)(v13 + 192) = 0u;
  *(_OWORD *)(v13 + 208) = 0u;
  *(_OWORD *)(v13 + 176) = 0u;
  *(void *)(v13 + 256) = 0;
  *(void *)(v13 + 264) = &_swiftEmptySetSingleton;
  *(void *)(v13 + 272) = &_swiftEmptyDictionarySingleton;
  *(void *)(v13 + 112) = v6;
  *(void *)(v13 + 120) = sub_100678FF0;
  *(void *)(v13 + 128) = v2;
  *(void *)(v13 + 136) = sub_100671914;
  *(void *)(v13 + 144) = 0;
  *(void *)(v13 + 152) = 3;
  *(_OWORD *)(v13 + 160) = xmmword_101186B10;
  return v13;
}

uint64_t sub_100678FB8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100678FF0(void *a1@<X8>)
{
}

unint64_t sub_10067900C()
{
  unint64_t result = qword_101679168;
  if (!qword_101679168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101679168);
  }
  return result;
}

unint64_t sub_100679060()
{
  unint64_t result = qword_101679170;
  if (!qword_101679170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_101679170);
  }
  return result;
}

uint64_t sub_1006790B4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1006790FC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_100678484(a1, v4, v5, v7, v6);
}

uint64_t sub_1006791BC()
{
  return sub_1006766A0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1006791C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1006791D4()
{
  return swift_release();
}

uint64_t sub_1006791DC(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_100679208()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100679240()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100679278()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_1006792A8()
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = v0 + v3;
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = *(void *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));
  id v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *id v9 = v1;
  v9[1] = sub_100528D08;
  v9[21] = v7;
  v9[22] = v8;
  v9[20] = v6;
  v9[19] = v5;
  return _swift_task_switch(sub_100672370, v7, 0);
}

void sub_1006793D8()
{
  sub_100A5A640(v0);
}

uint64_t sub_1006793F4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10067943C@<X0>(void *a1@<X8>)
{
  return sub_100A5A828(v1, a1);
}

uint64_t sub_100679458()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100679490(unsigned char *a1)
{
  return sub_100674EAC(a1);
}

uint64_t sub_100679498()
{
  return sub_100A5A24C(v0);
}

uint64_t sub_1006794B8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_100528D08;
  v3[2] = v2;
  return _swift_task_switch(sub_100674FFC, v2, 0);
}

uint64_t sub_100679564()
{
  uint64_t v2 = *(void *)(v0 + 32);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_100528D08;
  v3[2] = v2;
  return _swift_task_switch(sub_100674244, v2, 0);
}

uint64_t sub_10067960C(uint64_t a1)
{
  unint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100528488;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1016743D0 + dword_1016743D0);
  return v6(a1, v4);
}

uint64_t sub_1006796C8()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1006797C0()
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = v0 + v3;
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = *(void *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));
  id v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *id v9 = v1;
  v9[1] = sub_100528488;
  v9[21] = v7;
  v9[22] = v8;
  v9[20] = v6;
  v9[19] = v5;
  return _swift_task_switch(sub_100672370, v7, 0);
}

uint64_t sub_100679958(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

char *sub_10067999C(uint64_t a1, void *a2)
{
  v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_isInDynamicMode] = 0;
  uint64_t v5 = v2;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    sub_100508DCC((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v6 = &_swiftEmptySetSingleton;
  }
  *(void *)&v5[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects] = v6;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting] = a1;
  id v7 = [(id)swift_unknownObjectRetain() interactiveCanvasController];
  id v8 = [v7 changeNotifier];

  *(void *)&v5[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_changeNotifier] = v8;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_editorController] = a2;
  id v9 = a2;

  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for CRLMiniFormatterStateManager();
  id v10 = [super init];
  uint64_t v11 = self;
  id v12 = (char *)v10;
  id v13 = [v11 defaultCenter];
  [v13 addObserver:v12 selector:"selectionPathDidChangeWithNotification:" name:@"CRLEditorControllerSelectionPathDidChangeNotification" object:*(void *)&v12[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_editorController]];

  sub_10067A054();
  swift_unknownObjectRelease();

  return v12;
}

id sub_100679B34()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting) interactiveCanvasController];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = [v1 editorController];
  if (v3)
  {
    uint64_t v4 = swift_allocObject();
    *(unsigned char *)(v4 + 16) = 0;
    uint64_t v5 = (unsigned __int8 *)(v4 + 16);
    v8[4] = sub_1006693E0;
    v8[5] = v4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = *(void *)"";
    _OWORD v8[2] = sub_1005B74EC;
    v8[3] = &unk_10150E2C0;
    uint64_t v6 = _Block_copy(v8);
    swift_retain();
    swift_release();
    [v3 enumerateEditorsOnStackUsingBlock:v6];

    _Block_release(v6);
    swift_beginAccess();
    id v3 = (id)*v5;

    swift_release();
  }
  else
  {
  }
  return v3;
}

void CRLMiniFormatterStateManager.processChanges(_:forChangeSource:)(uint64_t a1, uint64_t a2)
{
  if ((v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_isInDynamicMode] & 1) == 0)
  {
    id v5 = [*(id *)&v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting] interactiveCanvasController];
    if (v5)
    {
      uint64_t v6 = v5;
      sub_100522D7C(a2, (uint64_t)v11);
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = a1;
      *(void *)(v7 + 24) = v2;
      sub_100575CE8(v11, (_OWORD *)(v7 + 32));
      _DWORD v10[4] = sub_10067A600;
      void v10[5] = v7;
      v10[0] = _NSConcreteStackBlock;
      v10[1] = *(void *)"";
      long long v10[2] = sub_100679958;
      void v10[3] = &unk_10150E160;
      id v8 = _Block_copy(v10);
      swift_bridgeObjectRetain();
      id v9 = v2;
      swift_release();
      [v6 performBlockOnMainThreadAfterLayoutIfNecessary:v8];
      _Block_release(v8);
    }
  }
}

void sub_100679DE0(void *a1)
{
  uint64_t v2 = v1;
  id v3 = [a1 userInfo];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v6;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v5 + 16) && (unint64_t v7 = sub_10095647C((uint64_t)v18), (v8 & 1) != 0))
    {
      sub_100522D7C(*(void *)(v5 + 56) + 32 * v7, (uint64_t)&v21);
    }
    else
    {
      long long v21 = 0u;
      long long v22 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10050BFE0((uint64_t)v18);
    if (*((void *)&v22 + 1))
    {
      sub_10050BF48(0, (unint64_t *)&qword_1016792E8);
      if (swift_dynamicCast())
      {
        id v9 = (void *)v19;
        id v10 = [*(id *)&v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_editorController] selectionPath];
        if (v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_isInDynamicMode] == 1
          || (id v11 = [*(id *)&v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting] interactiveCanvasController]) == 0)
        {
        }
        else
        {
          id v12 = v11;
          id v13 = (void *)swift_allocObject();
          void v13[2] = v10;
          v13[3] = v2;
          v13[4] = v9;
          v18[4] = sub_10067AEF0;
          v18[5] = v13;
          v18[0] = _NSConcreteStackBlock;
          v18[1] = *(void *)"";
          _OWORD v18[2] = sub_100679958;
          v18[3] = &unk_10150E270;
          uint64_t v14 = _Block_copy(v18);
          id v15 = v10;
          uint64_t v16 = v2;
          id v17 = v9;
          swift_release();
          [v12 performBlockOnMainThreadAfterLayoutIfNecessary:v14];
          _Block_release(v14);
        }
      }
    }
    else
    {
      sub_100522F00((uint64_t)&v21, &qword_101672BF0);
    }
  }
}

void sub_10067A054()
{
  id v0 = [self defaultCenter];
  if (qword_10166FC68 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_10171BEB0;
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v5[4] = sub_10067AEA0;
  v5[5] = v2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = *(void *)"";
  v5[2] = sub_1005E5680;
  void v5[3] = &unk_10150E220;
  id v3 = _Block_copy(v5);
  swift_release();
  id v4 = [v0 addObserverForName:v1 object:0 queue:0 usingBlock:v3];
  _Block_release(v3);
  swift_unknownObjectRelease();
}

uint64_t sub_10067A2A4(unint64_t a1, void *a2, uint64_t a3)
{
  void (*v24)(long long *__return_ptr, id, uint64_t);
  long long v25;
  uint64_t v26;
  unsigned char v27[40];
  uint64_t vars8;

  unint64_t v5 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v6 = result;
    if (result)
    {
LABEL_3:
      char v8 = &swift_isaMask;
      uint64_t v24 = *(void (**)(long long *__return_ptr, id, uint64_t))((swift_isaMask & *a2) + 0x138);
      uint64_t v23 = *(uint64_t (**)(void *, uint64_t))((swift_isaMask & *a2) + 0x120);
      long long v22 = *(uint64_t (**)(void *, uint64_t))((swift_isaMask & *a2) + 0x100);
      if (v6 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v9 = 0;
        uint64_t v20 = a3;
        unint64_t v21 = v5 & 0xC000000000000001;
        do
        {
          if (v21) {
            id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v10 = *(id *)(v5 + 8 * v9 + 32);
          }
          id v11 = v10;
          v24(&v25, v10, a3);
          if (v26)
          {
            sub_10053974C(&v25, (uint64_t)v27);
            (*(void (**)(unsigned char *))((*v8 & *a2) + 0x140))(v27);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v27);
          }
          else
          {
            sub_100522F00((uint64_t)&v25, &qword_1016792F8);
          }
          if (v23(v11, a3))
          {
            (*(void (**)(void))((*v8 & *a2) + 0x128))();
            swift_bridgeObjectRelease();
          }
          uint64_t v12 = v22(v11, a3);
          if (v12)
          {
            uint64_t v13 = v12;
            uint64_t v14 = *v8 & *a2;
            id v15 = v8;
            uint64_t v16 = v6;
            unint64_t v17 = v5;
            uint64_t v18 = *(void (**)(uint64_t, void *, void, uint64_t))(v14 + 280);
            id v19 = v11;
            v18(v13, v11, 0, 1);
            unint64_t v5 = v17;
            uint64_t v6 = v16;
            char v8 = v15;
            a3 = v20;
            swift_bridgeObjectRelease();
          }
          ++v9;
        }
        while (v6 != v9);
        return swift_bridgeObjectRelease();
      }
      return result;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10067A5B8()
{
  swift_bridgeObjectRelease();

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 32);

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10067A600()
{
  return sub_10067A2A4(*(void *)(v0 + 16), *(void **)(v0 + 24), v0 + 32);
}

uint64_t sub_10067A60C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10067A61C()
{
  return swift_release();
}

void sub_10067A6B8(void *a1, void *a2, void *a3)
{
  sub_10050BF48(0, (unint64_t *)&qword_101672E50);
  id v6 = [*(id *)((char *)a2 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_editorController) selectionPath];
  char v7 = static NSObject.== infix(_:_:)();

  if (v7)
  {
    (*(void (**)(long long *__return_ptr, void *, void *))((swift_isaMask & *a2) + 0x130))(&v13, a3, a1);
    if (v14)
    {
      sub_10053974C(&v13, (uint64_t)v15);
      (*(void (**)(unsigned char *))((swift_isaMask & *a2) + 0x140))(v15);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v15);
    }
    else
    {
      sub_100522F00((uint64_t)&v13, &qword_1016792F8);
    }
    uint64_t v8 = (*(uint64_t (**)(void *, void *))((swift_isaMask & *a2) + 0xF8))(a3, a1);
    if (v8)
    {
      uint64_t v9 = v8;
      id v10 = *(void (**)(uint64_t, void *, void *, void))((swift_isaMask & *a2) + 0x118);
      id v11 = a3;
      id v12 = a1;
      v10(v9, a3, a1, 0);
      swift_bridgeObjectRelease();
    }
  }
}

double sub_10067A934@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

void CRLMiniFormatterStateManager.init()()
{
}

id CRLMiniFormatterStateManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMiniFormatterStateManager();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLMiniFormatterStateManager()
{
  return self;
}

void sub_10067AA68()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_isInDynamicMode) & 1) == 0)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_isInDynamicMode) = 1;
    id v1 = [*(id *)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting) interactiveCanvasController];
    if (v1)
    {
      objc_super v2 = v1;
      id v3 = (char *)[v1 editingCoordinator];

      if (v3)
      {
        if (*(void *)&v3[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_suspendResumeCoordinator])
        {
          sub_10074058C(0xD00000000000001BLL, 0x8000000101243B30);
        }
        else
        {
          __break(1u);
        }
      }
    }
  }
}

void sub_10067AB4C()
{
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_isInDynamicMode) == 1)
  {
    id v1 = v0;
    *((unsigned char *)v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_isInDynamicMode) = 0;
    id v2 = [*(id *)((char *)v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_canvasLayerHosting) interactiveCanvasController];
    if (v2)
    {
      id v3 = v2;
      id v4 = (char *)[v2 editingCoordinator];

      if (v4)
      {
        if (!*(void *)&v4[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_suspendResumeCoordinator])
        {
          __break(1u);
          return;
        }
        sub_100740C8C(0xD00000000000001BLL, 0x8000000101243B30);
      }
    }
    uint64_t v5 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x110))();
    if (v5)
    {
      (*(void (**)(uint64_t, uint64_t, void, uint64_t))((swift_isaMask & *v1) + 0x118))(v5, 2, 0, 2);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_10067ACC4()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (v0)
  {
    uint64_t v1 = v0;
    *(void *)&long long v10 = 0xD000000000000021;
    *((void *)&v10 + 1) = 0x8000000101243B00;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v1 + 16) && (unint64_t v2 = sub_10095647C((uint64_t)v12), (v3 & 1) != 0))
    {
      sub_100522D7C(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v10);
    }
    else
    {
      long long v10 = 0u;
      long long v11 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10050BFE0((uint64_t)v12);
    uint64_t v4 = *((void *)&v11 + 1);
    sub_100522F00((uint64_t)&v10, &qword_101672BF0);
    if (v4)
    {
      swift_beginAccess();
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v8 = Strong;
        if (*((unsigned char *)Strong + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_isInDynamicMode) == 1
          || (uint64_t v9 = (*(uint64_t (**)(void *, uint64_t, uint64_t))((swift_isaMask & *Strong) + 0x108))(Strong, v6, v7)) == 0)
        {
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, void))((swift_isaMask & *v8) + 0x118))(v9, 1, 0);

          swift_bridgeObjectRelease();
        }
      }
    }
  }
}

uint64_t sub_10067AE68()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10067AEA0()
{
}

uint64_t sub_10067AEA8()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_10067AEF0()
{
  sub_10067A6B8(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10067AEFC()
{
  return _swift_deallocObject(v0, 17, 7);
}

void sub_10067AF28(void *a1, id a2)
{
  uint64_t v4 = *(void **)(v2 + 16);
  id v5 = [a2 ownerName];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  if (v6) {
    BOOL v9 = 0;
  }
  else {
    BOOL v9 = v8 == 0xE000000000000000;
  }
  if (!v9 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v10)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        long long v13 = &selRef_sharedCloudDatabase;
        goto LABEL_14;
      }
    }
  }
  long long v13 = &selRef_privateCloudDatabase;
LABEL_14:
  id v14 = [v4 *v13];
  swift_bridgeObjectRelease();
  [a1 setDatabase:v14];
  [v14 addOperation:a1];
}

uint64_t sub_10067B080()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLCloudKitOperationSink()
{
  return self;
}

uint64_t sub_10067B0DC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v8 - 8, v9);
  unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  char v12 = (char *)&v37 - v11;
  int v39 = a3;
  if (a3)
  {
    uint64_t v37 = (char *)&v37 - v11;
    uint64_t v38 = v4;
    swift_errorRetain();
    uint64_t v20 = a2;
    if (qword_10166FBD8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    unint64_t v21 = (void *)static OS_os_log.assetManagement;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    id v23 = v21;
    uint64_t v24 = UUID.uuidString.getter();
    uint64_t v26 = v25;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v27 = sub_100528BE4();
    *(void *)(inited + 64) = v27;
    *(void *)(inited + 32) = v24;
    *(void *)(inited + 40) = v26;
    swift_getErrorValue();
    uint64_t v28 = Error.localizedDescription.getter();
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v27;
    *(void *)(inited + 72) = v28;
    *(void *)(inited + 80) = v29;
    uint64_t v30 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v23, (uint64_t)&_mh_execute_header, v30, (uint64_t)"CRLCloudAssetDownloader _downloadFinished(assetUUID:%@, result: failed) - %@ ", 77, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_10067FFD4(v20, 1);
    a2 = v20;
    char v12 = v37;
    uint64_t v4 = v38;
  }
  else
  {
    if (qword_10166FBD8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    long long v13 = (void *)static OS_os_log.assetManagement;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v14 = swift_initStackObject();
    *(_OWORD *)(v14 + 16) = xmmword_10117E810;
    id v15 = v13;
    uint64_t v16 = UUID.uuidString.getter();
    uint64_t v18 = v17;
    *(void *)(v14 + 56) = &type metadata for String;
    *(void *)(v14 + 64) = sub_100528BE4();
    *(void *)(v14 + 32) = v16;
    *(void *)(v14 + 40) = v18;
    uint64_t v19 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v19, (uint64_t)"CRLCloudAssetDownloader _downloadFinished(assetUUID:%@, result: success) ", 73, 2, v14);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  swift_beginAccess();
  if (*(void *)(*(void *)(v4 + 176) + 16))
  {
    swift_bridgeObjectRetain();
    sub_100955FC8(a1);
    if (v31)
    {
      uint64_t v32 = v12;
      uint64_t v33 = a2;
      int v34 = v39 & 1;
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v35 = v33;
      char v12 = v32;
      sub_10067FA30(v35, v34);
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_beginAccess();
  sub_10095C480(a1);
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  sub_100D16510(a1, (uint64_t)v12);
  sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101674520);
  return swift_endAccess();
}

uint64_t sub_10067B4CC(uint64_t a1)
{
  v2[54] = a1;
  v2[55] = v1;
  uint64_t v3 = type metadata accessor for UUID();
  v2[56] = v3;
  v2[57] = *(void *)(v3 - 8);
  v2[58] = swift_task_alloc();
  v2[59] = swift_task_alloc();
  v2[60] = swift_task_alloc();
  return _swift_task_switch(sub_10067B5A8, v1, 0);
}

uint64_t sub_10067B5A8()
{
  uint64_t v1 = v0[54];
  uint64_t v2 = v0[55];
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 168);
  swift_bridgeObjectRetain();
  LOBYTE(v1) = sub_1006E3E24(v1, v3);
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v4 = v0[55] + 176;
    swift_beginAccess();
    uint64_t v5 = *(void *)v4;
    if (*(void *)(*(void *)v4 + 16))
    {
      uint64_t v6 = v0[54];
      swift_bridgeObjectRetain();
      unint64_t v7 = sub_100955FC8(v6);
      if (v8)
      {
        uint64_t v9 = *(void *)(*(void *)(v5 + 56) + 8 * v7);
        swift_retain();
        swift_bridgeObjectRelease();
LABEL_10:
        v0[61] = v9;
        if (qword_10166FB88 != -1) {
          swift_once();
        }
        swift_beginAccess();
        long long v22 = (void *)static OS_os_log.dataSync;
        v0[62] = sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117E810;
        id v24 = v22;
        uint64_t v25 = UUID.uuidString.getter();
        uint64_t v27 = v26;
        *(void *)(inited + 56) = &type metadata for String;
        unint64_t v28 = sub_100528BE4();
        v0[63] = v28;
        *(void *)(inited + 64) = v28;
        *(void *)(inited + 32) = v25;
        *(void *)(inited + 40) = v27;
        uint64_t v29 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v24, (uint64_t)&_mh_execute_header, v29, (uint64_t)"Waiting on an ongoing download for asset: %@", 44, 2, inited);
        swift_setDeallocating();
        v0[64] = sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        UUID.init()();
        uint64_t v30 = (void *)static OS_os_log.dataSync;
        uint64_t v31 = swift_initStackObject();
        *(_OWORD *)(v31 + 16) = xmmword_10117D8C0;
        id v32 = v30;
        uint64_t v33 = UUID.uuidString.getter();
        *(void *)(v31 + 56) = &type metadata for String;
        *(void *)(v31 + 64) = v28;
        *(void *)(v31 + 32) = v33;
        *(void *)(v31 + 40) = v34;
        uint64_t v35 = UUID.uuidString.getter();
        *(void *)(v31 + 96) = &type metadata for String;
        *(void *)(v31 + 104) = v28;
        *(void *)(v31 + 72) = v35;
        *(void *)(v31 + 80) = v36;
        uint64_t v37 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v32, (uint64_t)&_mh_execute_header, v37, (uint64_t)"Adding observer %{public}@ for asset %{public}@", 47, 2, v31);
        swift_setDeallocating();
        swift_arrayDestroy();

        int v39 = (uint64_t (*)(void))((char *)&dword_101679520 + dword_101679520);
        uint64_t v38 = (void *)swift_task_alloc();
        v0[65] = v38;
        void *v38 = v0;
        v38[1] = sub_10067BAB0;
        return v39();
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v17 = v0[60];
    uint64_t v19 = v0[56];
    uint64_t v18 = v0[57];
    uint64_t v20 = v0[54];
    sub_1005057FC(&qword_101679518);
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = _swiftEmptyArrayStorage;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v17, v20, v19);
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v40 = *(void *)v4;
    *(void *)uint64_t v4 = 0x8000000000000000;
    sub_1009756E4(v9, v17, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v4 = v40;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    swift_endAccess();
    goto LABEL_10;
  }
  uint64_t v10 = v0[60];
  uint64_t v12 = v0[57];
  unint64_t v11 = (char *)v0[58];
  uint64_t v13 = v0[56];
  (*(void (**)(char *, void, uint64_t))(v12 + 16))(v11, v0[54], v13);
  swift_beginAccess();
  sub_100CB4BC8(v10, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v13);
  swift_endAccess();
  uint64_t v14 = (void *)swift_task_alloc();
  v0[68] = v14;
  void *v14 = v0;
  v14[1] = sub_10067BD6C;
  uint64_t v15 = v0[54];
  return sub_10067C0AC(v15);
}

uint64_t sub_10067BAB0(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[66] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[55];
  if (v1)
  {
    uint64_t v6 = sub_10067BF58;
  }
  else
  {
    v4[67] = a1;
    uint64_t v6 = sub_10067BBEC;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_10067BBEC()
{
  uint64_t v1 = v0[63];
  uint64_t v2 = v0[59];
  uint64_t v3 = v0[57];
  uint64_t v15 = v0[56];
  uint64_t v4 = (void *)static OS_os_log.dataSync;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v6 = v4;
  uint64_t v7 = UUID.uuidString.getter();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v8;
  uint64_t v9 = UUID.uuidString.getter();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v1;
  *(void *)(inited + 72) = v9;
  *(void *)(inited + 80) = v10;
  uint64_t v11 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v11, (uint64_t)"Observer %{public}@ received asset download result for asset %{public}@", 71, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v15);
  uint64_t v12 = v0[67];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(uint64_t))v0[1];
  return v13(v12);
}

uint64_t sub_10067BD6C(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[69] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[55];
  if (v1)
  {
    id v6 = sub_10067C000;
  }
  else
  {
    v4[70] = a1;
    id v6 = sub_10067BEA8;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_10067BEA8()
{
  uint64_t v1 = v0[70];
  uint64_t v2 = v0[54];
  swift_retain();
  sub_10067B0DC(v2, v1, 0);
  swift_release();
  uint64_t v3 = v0[70];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v3);
}

uint64_t sub_10067BF58()
{
  uint64_t v1 = v0[59];
  uint64_t v2 = v0[56];
  uint64_t v3 = v0[57];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10067C000()
{
  uint64_t v1 = v0[69];
  uint64_t v2 = v0[54];
  swift_errorRetain();
  sub_10067B0DC(v2, v1, 1);
  swift_errorRelease();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10067C0AC(uint64_t a1)
{
  v2[17] = a1;
  v2[18] = v1;
  uint64_t v3 = type metadata accessor for UUID();
  v2[19] = v3;
  v2[20] = *(void *)(v3 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = type metadata accessor for CRLAssetReferrerIdentifier(0);
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  v2[28] = type metadata accessor for CRLCloudAssetDownloader.DownloadRequest();
  v2[29] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CRLAssetAddress();
  v2[30] = v4;
  v2[31] = *(void *)(v4 - 8);
  v2[32] = swift_task_alloc();
  return _swift_task_switch(sub_10067C284, v1, 0);
}

uint64_t sub_10067C284()
{
  static Task<>.checkCancellation()();
  if (qword_10166FBD8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.assetManagement;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v5 = v3;
  uint64_t v6 = UUID.uuidString.getter();
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  uint64_t v9 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v9, (uint64_t)"CRLCloudAssetDownloader _downloadAsset(assetUUID:%@) ", 53, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 264) = Strong;
  if (Strong)
  {
    return _swift_task_switch(sub_10067C58C, 0, 0);
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_downloadAsset(assetUUID:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudAssetDownloader.swift", 88, 2, 119, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_downloadAsset(assetUUID:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudAssetDownloader.swift", 88, 2, 119);
    sub_100679060();
    swift_allocError();
    *uint64_t v11 = 0xD00000000000002CLL;
    v11[1] = 0x8000000101243EF0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
}

uint64_t sub_10067C58C()
{
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[17];
  uint64_t v3 = swift_task_alloc();
  v0[34] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[35] = v4;
  uint64_t v5 = sub_1005057FC(&qword_101679510);
  void *v4 = v0;
  v4[1] = sub_10067C694;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000019, 0x8000000101243F20, sub_10067FDC4, v3, v5);
}

uint64_t sub_10067C694()
{
  *(void *)(*(void *)v1 + 288) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10067CD7C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10067C7B0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10067C7B0()
{
  uint64_t v1 = v0[18];
  v0[37] = v0[16];
  return _swift_task_switch(sub_10067C7D4, v1, 0);
}

uint64_t sub_10067C7D4()
{
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 304) = v2;
  if (v2)
  {
    uint64_t v4 = *(void *)(v0 + 240);
    uint64_t v3 = *(void *)(v0 + 248);
    *(void *)(v0 + 312) = sub_10050BF48(0, &qword_10167BED0);
    int v5 = *(_DWORD *)(v3 + 80);
    *(_DWORD *)(v0 + 384) = v5;
    unint64_t v6 = (v5 + 32) & ~(unint64_t)v5;
    *(void *)(v0 + 320) = sub_10050BF48(0, (unint64_t *)&qword_101674210);
    *(void *)(v0 + 328) = CKCurrentUserDefaultName;
    uint64_t v7 = *(void *)(v3 + 72);
    *(void *)(v0 + 344) = 0;
    *(void *)(v0 + 352) = 0;
    *(void *)(v0 + 336) = v7;
    uint64_t v8 = *(void *)(v0 + 256);
    uint64_t v9 = *(void *)(v0 + 200);
    sub_10067FDCC(v1 + v6, v8, (uint64_t (*)(void))type metadata accessor for CRLAssetAddress);
    uint64_t v10 = v8 + *(int *)(v4 + 24);
    sub_10067FDCC(v10, v9, type metadata accessor for CRLAssetReferrerIdentifier);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v12 = *(void *)(v0 + 216);
    uint64_t v13 = *(void *)(v0 + 200);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = *(void *)(v0 + 152);
      uint64_t v15 = *(void *)(v0 + 160);
      uint64_t v16 = sub_1005057FC(&qword_101674240);
      sub_10067FE34(v13 + *(int *)(v16 + 48), v12, type metadata accessor for CRLBoardIdentifier);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
    else
    {
      sub_10067FE34(*(void *)(v0 + 200), *(void *)(v0 + 216), type metadata accessor for CRLBoardIdentifier);
    }
    sub_10067FDCC(v10, *(void *)(v0 + 192), type metadata accessor for CRLAssetReferrerIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = *(void *)(v0 + 192);
      uint64_t v21 = *(void *)(v0 + 176);
      uint64_t v23 = *(void *)(v0 + 152);
      uint64_t v22 = *(void *)(v0 + 160);
      uint64_t v24 = v20 + *(int *)(sub_1005057FC(&qword_101674240) + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v21, v20, v23);
    }
    else
    {
      uint64_t v25 = *(void *)(v0 + 208);
      uint64_t v26 = *(void *)(v0 + 176);
      uint64_t v27 = *(void *)(v0 + 152);
      uint64_t v28 = *(void *)(v0 + 160);
      sub_10067FE34(*(void *)(v0 + 192), v25, type metadata accessor for CRLBoardIdentifier);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v26, v25, v27);
      uint64_t v24 = *(void *)(v0 + 208);
    }
    uint64_t v29 = *(void *)(v0 + 216);
    uint64_t v30 = *(void *)(v0 + 168);
    uint64_t v32 = *(void *)(v0 + 152);
    uint64_t v31 = *(void *)(v0 + 160);
    sub_10067FE9C(v24, type metadata accessor for CRLBoardIdentifier);
    uint64_t v33 = UUID.uuidString.getter();
    uint64_t v61 = v34;
    uint64_t v62 = v33;
    uint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
    v63(v30, v29, v32);
    uint64_t v35 = (uint64_t *)(v29 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
    uint64_t v36 = *v35;
    uint64_t v37 = (void *)v35[1];
    if (!*v35 && v37 == (void *)0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v37 = v38;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    uint64_t v39 = *(void *)(v0 + 232);
    uint64_t v58 = *(void *)(v0 + 240);
    uint64_t v59 = *(void *)(v0 + 256);
    uint64_t v60 = *(int **)(v0 + 224);
    uint64_t v57 = *(void *)(v0 + 216);
    uint64_t v40 = *(void *)(v0 + 168);
    uint64_t v56 = *(void *)(v0 + 176);
    uint64_t v42 = *(void *)(v0 + 152);
    uint64_t v41 = *(void *)(v0 + 160);
    *(void *)(v0 + 112) = 0x5F6472616F42;
    *(void *)(v0 + 120) = 0xE600000000000000;
    v43._countAndFlagsBits = UUID.uuidString.getter();
    String.append(_:)(v43);
    swift_bridgeObjectRelease();
    v44._countAndFlagsBits = v36;
    v44._object = v37;
    Class isa = CKRecordZoneID.init(zoneName:ownerName:)(*(Swift::String *)(v0 + 112), v44).super.isa;
    uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
    v46(v40, v42);
    v47._object = v61;
    v47._countAndFlagsBits = v62;
    Class v48 = CKRecordID.init(recordName:zoneID:)(v47, (CKRecordZoneID)isa).super.isa;
    v46(v56, v42);
    sub_10067FE9C(v57, type metadata accessor for CRLBoardIdentifier);
    uint64_t v49 = (uint64_t *)(v59 + *(int *)(v58 + 20));
    uint64_t v51 = *v49;
    uint64_t v50 = v49[1];
    ((void (*)(uint64_t))v63)(v39);
    *(void *)(v39 + v60[5]) = v48;
    uint64_t v52 = (void *)(v39 + v60[6]);
    void *v52 = v51;
    v52[1] = v50;
    uint64_t v53 = (void *)(v39 + v60[7]);
    void *v53 = v51;
    v53[1] = v50;
    swift_bridgeObjectRetain_n();
    uint64_t v54 = (void *)swift_task_alloc();
    *(void *)(v0 + 360) = v54;
    *uint64_t v54 = v0;
    v54[1] = sub_10067CEB4;
    uint64_t v55 = *(void *)(v0 + 144);
    v54[3] = *(void *)(v0 + 232);
    v54[4] = v55;
    return _swift_task_switch(sub_10067D6D8, v55, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_100679060();
    swift_allocError();
    *uint64_t v17 = xmmword_101186D00;
    swift_willThrow();
    swift_unknownObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
}

uint64_t sub_10067CD7C()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_task_dealloc();
  return _swift_task_switch(sub_10067CDE8, v1, 0);
}

uint64_t sub_10067CDE8()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10067CEB4(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[46] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[29];
  uint64_t v6 = v4[18];
  if (v1)
  {
    sub_10067FE9C(v5, (uint64_t (*)(void))type metadata accessor for CRLCloudAssetDownloader.DownloadRequest);
    uint64_t v7 = sub_10067D150;
  }
  else
  {
    v4[47] = a1;
    sub_10067FE9C(v5, (uint64_t (*)(void))type metadata accessor for CRLCloudAssetDownloader.DownloadRequest);
    uint64_t v7 = sub_10067D038;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_10067D038()
{
  sub_10067FE9C(v0[32], (uint64_t (*)(void))type metadata accessor for CRLAssetAddress);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[47];
  return v1(v2);
}

uint64_t sub_10067D150()
{
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 352) + 1;
  swift_errorRelease();
  sub_10067FE9C(v2, (uint64_t (*)(void))type metadata accessor for CRLAssetAddress);
  if (v3 == v1)
  {
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_unknownObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 352) + 1;
    *(void *)(v0 + 344) = *(void *)(v0 + 368);
    *(void *)(v0 + 352) = v6;
    uint64_t v7 = *(void *)(v0 + 256);
    uint64_t v8 = *(void *)(v0 + 240);
    uint64_t v9 = *(void *)(v0 + 200);
    sub_10067FDCC(*(void *)(v0 + 296)+ ((*(unsigned __int8 *)(v0 + 384) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 384))+ *(void *)(v0 + 336) * v6, v7, (uint64_t (*)(void))type metadata accessor for CRLAssetAddress);
    uint64_t v10 = v7 + *(int *)(v8 + 24);
    sub_10067FDCC(v10, v9, type metadata accessor for CRLAssetReferrerIdentifier);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v12 = *(void *)(v0 + 216);
    uint64_t v13 = *(void *)(v0 + 200);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = *(void *)(v0 + 152);
      uint64_t v15 = *(void *)(v0 + 160);
      uint64_t v16 = sub_1005057FC(&qword_101674240);
      sub_10067FE34(v13 + *(int *)(v16 + 48), v12, type metadata accessor for CRLBoardIdentifier);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
    else
    {
      sub_10067FE34(*(void *)(v0 + 200), *(void *)(v0 + 216), type metadata accessor for CRLBoardIdentifier);
    }
    sub_10067FDCC(v10, *(void *)(v0 + 192), type metadata accessor for CRLAssetReferrerIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = *(void *)(v0 + 192);
      uint64_t v18 = *(void *)(v0 + 176);
      uint64_t v20 = *(void *)(v0 + 152);
      uint64_t v19 = *(void *)(v0 + 160);
      uint64_t v21 = v17 + *(int *)(sub_1005057FC(&qword_101674240) + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v18, v17, v20);
    }
    else
    {
      uint64_t v22 = *(void *)(v0 + 208);
      uint64_t v23 = *(void *)(v0 + 176);
      uint64_t v24 = *(void *)(v0 + 152);
      uint64_t v25 = *(void *)(v0 + 160);
      sub_10067FE34(*(void *)(v0 + 192), v22, type metadata accessor for CRLBoardIdentifier);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v23, v22, v24);
      uint64_t v21 = *(void *)(v0 + 208);
    }
    uint64_t v26 = *(void *)(v0 + 216);
    uint64_t v27 = *(void *)(v0 + 168);
    uint64_t v29 = *(void *)(v0 + 152);
    uint64_t v28 = *(void *)(v0 + 160);
    sub_10067FE9C(v21, type metadata accessor for CRLBoardIdentifier);
    uint64_t v30 = UUID.uuidString.getter();
    uint64_t v58 = v31;
    uint64_t v59 = v30;
    uint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
    v60(v27, v26, v29);
    uint64_t v32 = (uint64_t *)(v26 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
    uint64_t v33 = *v32;
    uint64_t v34 = (void *)v32[1];
    if (!*v32 && v34 == (void *)0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v34 = v35;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    uint64_t v36 = *(void *)(v0 + 232);
    uint64_t v55 = *(void *)(v0 + 240);
    uint64_t v56 = *(void *)(v0 + 256);
    uint64_t v57 = *(int **)(v0 + 224);
    uint64_t v54 = *(void *)(v0 + 216);
    uint64_t v37 = *(void *)(v0 + 168);
    uint64_t v53 = *(void *)(v0 + 176);
    uint64_t v39 = *(void *)(v0 + 152);
    uint64_t v38 = *(void *)(v0 + 160);
    *(void *)(v0 + 112) = 0x5F6472616F42;
    *(void *)(v0 + 120) = 0xE600000000000000;
    v40._countAndFlagsBits = UUID.uuidString.getter();
    String.append(_:)(v40);
    swift_bridgeObjectRelease();
    v41._countAndFlagsBits = v33;
    v41._object = v34;
    Class isa = CKRecordZoneID.init(zoneName:ownerName:)(*(Swift::String *)(v0 + 112), v41).super.isa;
    Swift::String v43 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v43(v37, v39);
    v44._object = v58;
    v44._countAndFlagsBits = v59;
    Class v45 = CKRecordID.init(recordName:zoneID:)(v44, (CKRecordZoneID)isa).super.isa;
    v43(v53, v39);
    sub_10067FE9C(v54, type metadata accessor for CRLBoardIdentifier);
    uint64_t v46 = (uint64_t *)(v56 + *(int *)(v55 + 20));
    uint64_t v48 = *v46;
    uint64_t v47 = v46[1];
    ((void (*)(uint64_t))v60)(v36);
    *(void *)(v36 + v57[5]) = v45;
    uint64_t v49 = (void *)(v36 + v57[6]);
    void *v49 = v48;
    v49[1] = v47;
    uint64_t v50 = (void *)(v36 + v57[7]);
    *uint64_t v50 = v48;
    v50[1] = v47;
    swift_bridgeObjectRetain_n();
    uint64_t v51 = (void *)swift_task_alloc();
    *(void *)(v0 + 360) = v51;
    *uint64_t v51 = v0;
    v51[1] = sub_10067CEB4;
    uint64_t v52 = *(void *)(v0 + 144);
    v51[3] = *(void *)(v0 + 232);
    v51[4] = v52;
    return _swift_task_switch(sub_10067D6D8, v52, 0);
  }
}

uint64_t sub_10067D6B8(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return _swift_task_switch(sub_10067D6D8, v1, 0);
}

uint64_t sub_10067D6D8()
{
  long long v20 = *(_OWORD *)(v0 + 24);
  id v1 = [objc_allocWithZone((Class)CKFetchRecordsOperation) init];
  *(void *)(v0 + 40) = v1;
  uint64_t v2 = (int *)type metadata accessor for CRLCloudAssetDownloader.DownloadRequest();
  uint64_t v3 = (uint64_t *)(v20 + v2[6]);
  uint64_t v21 = *v3;
  uint64_t v23 = v3[1];
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = 0x7465737341;
  v4._object = (void *)0xE500000000000000;
  String.append(_:)(v4);
  uint64_t v5 = v21;
  uint64_t v6 = v23;
  uint64_t v7 = (uint64_t *)(v20 + v2[7]);
  uint64_t v22 = *v7;
  uint64_t v24 = v7[1];
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = 0x74654D7465737341;
  v8._object = (void *)0xED00006174616461;
  String.append(_:)(v8);
  uint64_t v9 = *(void **)(v20 + v2[5]);
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_101177E70;
  *(void *)(v10 + 32) = v9;
  specialized Array._endMutation()();
  sub_10050BF48(0, &qword_10167BED0);
  id v11 = v9;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 setRecordIDs:isa];

  sub_1005057FC((uint64_t *)&unk_101672610);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10117D8C0;
  *(void *)(v13 + 32) = v5;
  *(void *)(v13 + 40) = v6;
  *(void *)(v13 + 48) = v22;
  *(void *)(v13 + 56) = v24;
  CKFetchRecordsOperation.desiredKeys.setter();
  uint64_t v14 = swift_task_alloc();
  *(void *)(v0 + 48) = v14;
  *(void *)(v14 + 16) = v11;
  *(void *)(v14 + 24) = v1;
  uint64_t v15 = swift_task_alloc();
  *(void *)(v0 + 56) = v15;
  *(void *)(v15 + 16) = v1;
  *(void *)(v15 + 24) = v11;
  *(_OWORD *)(v15 + 32) = v20;
  id v16 = v1;
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v17;
  uint64_t v18 = type metadata accessor for CRLAssetSyncRemoteRecord();
  *uint64_t v17 = v0;
  v17[1] = sub_10067D988;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v0 + 16, &unk_1016794F8, v15, sub_10067F130, v14, 0, 0, v18);
}