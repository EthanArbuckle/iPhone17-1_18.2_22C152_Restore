ValueMetadata *type metadata accessor for CRLFreehandDrawingLassoTypeData()
{
  return &type metadata for CRLFreehandDrawingLassoTypeData;
}

void *sub_10052E698@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_10052E6B8(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_10052E6C4()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10052E724()
{
  return RawRepresentable<>.encode(to:)();
}

void sub_10052E774(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_10052E784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10052EA84();
  unint64_t v7 = sub_10052E9DC();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_10052E7F8()
{
  return CRValue<>.init(from:)();
}

uint64_t sub_10052E864()
{
  return CRValue<>.encode(to:)();
}

uint64_t sub_10052E8C4(uint64_t a1)
{
  unint64_t v2 = sub_10052EA84();
  unint64_t v3 = sub_10052EA30();

  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for Int);
}

unint64_t sub_10052E92C()
{
  unint64_t result = qword_101672938;
  if (!qword_101672938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101672938);
  }
  return result;
}

unint64_t sub_10052E984()
{
  unint64_t result = qword_101672940;
  if (!qword_101672940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101672940);
  }
  return result;
}

unint64_t sub_10052E9DC()
{
  unint64_t result = qword_101672948;
  if (!qword_101672948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101672948);
  }
  return result;
}

unint64_t sub_10052EA30()
{
  unint64_t result = qword_101672950;
  if (!qword_101672950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101672950);
  }
  return result;
}

unint64_t sub_10052EA84()
{
  unint64_t result = qword_101672958;
  if (!qword_101672958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101672958);
  }
  return result;
}

uint64_t sub_10052EAD8(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672A68);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  v267 = (char *)&v250 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v7);
  v278 = (char *)&v250 - v8;
  uint64_t v9 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v268 = (uint64_t)&v250 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v14 = __chkstk_darwin(v12 - 8, v13);
  v254 = (char *)&v250 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14, v16);
  v258 = (char *)&v250 - v18;
  __chkstk_darwin(v17, v19);
  *(void *)&long long v269 = (char *)&v250 - v20;
  uint64_t v21 = type metadata accessor for UUID();
  uint64_t v270 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21, v22);
  v253 = (char *)&v250 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v23, v25);
  v257 = (char *)&v250 - v27;
  uint64_t v29 = __chkstk_darwin(v26, v28);
  v31 = (char *)&v250 - v30;
  uint64_t v33 = __chkstk_darwin(v29, v32);
  v279 = (char *)&v250 - v34;
  __chkstk_darwin(v33, v35);
  v266 = (char *)&v250 - v36;
  uint64_t v252 = v1;
  unint64_t v37 = *(void *)(v1 + 32);
  if ((v37 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLTransactableHashableWrapper();
    sub_1005307D8();
    uint64_t result = Set.Iterator.init(_cocoa:)();
    unint64_t v37 = (unint64_t)v291;
    v264 = v292;
    uint64_t v39 = v293;
    uint64_t v40 = v294;
    uint64_t v41 = v295;
  }
  else
  {
    uint64_t v42 = -1 << *(unsigned char *)(v37 + 32);
    uint64_t v43 = *(void *)(v37 + 56);
    v264 = (char *)(v37 + 56);
    uint64_t v44 = ~v42;
    uint64_t v45 = -v42;
    if (v45 < 64) {
      uint64_t v46 = ~(-1 << v45);
    }
    else {
      uint64_t v46 = -1;
    }
    uint64_t v41 = v46 & v43;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v39 = v44;
    uint64_t v40 = 0;
  }
  uint64_t v260 = v39;
  id v262 = (id)(v37 & 0x7FFFFFFFFFFFFFFFLL);
  int64_t v263 = (unint64_t)(v39 + 64) >> 6;
  v285 = (uint64_t (**)(char *, uint64_t))(v270 + 8);
  v273 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v270 + 48);
  long long v272 = xmmword_10117E800;
  v261 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v283 = a1;
  uint64_t v286 = v21;
  v280 = v31;
  v265 = (uint64_t (*)(char *, uint64_t))v37;
  while ((v37 & 0x8000000000000000) != 0)
  {
    uint64_t v50 = __CocoaSet.Iterator.next()();
    if (!v50) {
      goto LABEL_45;
    }
    uint64_t v289 = v50;
    type metadata accessor for CRLTransactableHashableWrapper();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v51 = v290;
    swift_unknownObjectRelease();
    uint64_t v52 = v51;
    uint64_t v49 = v40;
    uint64_t v48 = v41;
    if (!v52)
    {
LABEL_45:
      sub_10052E1EC();
      id v99 = *(id *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner);
      uint64_t v100 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner + 8);
      uint64_t v260 = a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner;
      uint64_t v101 = v252;
      swift_beginAccess();
      uint64_t v102 = *(void *)(v101 + 16);
      uint64_t v103 = *(void *)(v102 + 64);
      uint64_t v255 = v102 + 64;
      uint64_t v104 = 1 << *(unsigned char *)(v102 + 32);
      uint64_t v105 = -1;
      if (v104 < 64) {
        uint64_t v105 = ~(-1 << v104);
      }
      v266 = (char *)(v270 + 16);
      v274 = (void (**)(char *, uint64_t, uint64_t))(v270 + 32);
      uint64_t v275 = v100;
      uint64_t v271 = v100 + 16;
      int64_t v259 = (unint64_t)(v104 + 63) >> 6;
      uint64_t v251 = v259 - 1;
      id v276 = v99;
      unint64_t v106 = v105 & v103;
      swift_unknownObjectRetain();
      *(void *)&long long v269 = v102;
      uint64_t result = swift_bridgeObjectRetain();
      uint64_t v107 = 0;
      long long v256 = xmmword_10117E810;
      uint64_t v108 = v282;
      uint64_t v109 = (uint64_t)v267;
      uint64_t v110 = (uint64_t)v278;
      while (2)
      {
        if (v106)
        {
          v284 = (uint64_t (*)(char *, uint64_t))((v106 - 1) & v106);
          uint64_t v281 = v107;
          unint64_t v119 = __clz(__rbit64(v106)) | (v107 << 6);
          goto LABEL_54;
        }
        uint64_t v123 = v107 + 1;
        if (__OFADD__(v107, 1))
        {
          __break(1u);
          goto LABEL_148;
        }
        if (v123 >= v259) {
          goto LABEL_65;
        }
        unint64_t v124 = *(void *)(v255 + 8 * v123);
        if (v124)
        {
LABEL_58:
          v284 = (uint64_t (*)(char *, uint64_t))((v124 - 1) & v124);
          unint64_t v119 = __clz(__rbit64(v124)) + (v123 << 6);
          uint64_t v281 = v123;
LABEL_54:
          uint64_t v120 = v269;
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v270 + 16))(v109, *(void *)(v269 + 48) + *(void *)(v270 + 72) * v119, v21);
          uint64_t v121 = *(void *)(v120 + 56);
          uint64_t v122 = sub_1005057FC(&qword_101672A70);
          *(void *)(v109 + *(int *)(v122 + 48)) = *(void *)(v121 + 8 * v119);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v122 - 8) + 56))(v109, 0, 1, v122);
          swift_retain();
          uint64_t v110 = (uint64_t)v278;
LABEL_67:
          sub_100530830(v109, v110);
          uint64_t v126 = sub_1005057FC(&qword_101672A70);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v126 - 8) + 48))(v110, 1, v126) == 1)
          {
            swift_release();
            uint64_t v174 = v252;
            swift_beginAccess();
            uint64_t v175 = *(void *)(v174 + 24);
            if ((v175 & 0xC000000000000001) != 0)
            {
              swift_bridgeObjectRetain();
              __CocoaSet.makeIterator()();
              type metadata accessor for CRLTransactableHashableWrapper();
              sub_1005307D8();
              uint64_t result = Set.Iterator.init(_cocoa:)();
              uint64_t v175 = v296;
              v267 = v297;
              int64_t v176 = v298;
              uint64_t v177 = v299;
              unint64_t v178 = v300;
            }
            else
            {
              uint64_t v180 = -1 << *(unsigned char *)(v175 + 32);
              uint64_t v181 = *(void *)(v175 + 56);
              v267 = (char *)(v175 + 56);
              uint64_t v182 = ~v180;
              uint64_t v183 = -v180;
              if (v183 < 64) {
                uint64_t v184 = ~(-1 << v183);
              }
              else {
                uint64_t v184 = -1;
              }
              unint64_t v178 = v184 & v181;
              uint64_t result = swift_bridgeObjectRetain();
              int64_t v176 = v182;
              uint64_t v177 = 0;
            }
            int64_t v263 = v176;
            v265 = (uint64_t (*)(char *, uint64_t))(v175 & 0x7FFFFFFFFFFFFFFFLL);
            v266 = (char *)((unint64_t)(v176 + 64) >> 6);
            long long v269 = xmmword_10117D8C0;
            v264 = (char *)&type metadata for Swift.AnyObject + 8;
            uint64_t v271 = v175;
            if ((v175 & 0x8000000000000000) == 0) {
              goto LABEL_107;
            }
            while (2)
            {
              while (2)
              {
                uint64_t v185 = __CocoaSet.Iterator.next()();
                if (!v185) {
                  goto LABEL_146;
                }
                uint64_t v282 = v108;
                uint64_t v301 = v185;
                type metadata accessor for CRLTransactableHashableWrapper();
                swift_unknownObjectRetain();
                swift_dynamicCast();
                v186 = (char *)v287;
                swift_unknownObjectRelease();
                uint64_t v187 = v177;
                uint64_t v188 = v178;
                if (!v186)
                {
LABEL_146:
                  sub_10052E1EC();
                  return swift_unknownObjectRelease();
                }
LABEL_119:
                v280 = (char *)v188;
                uint64_t v275 = v187;
                v278 = v186;
                uint64_t v192 = *((void *)v186 + 2);
                uint64_t v193 = *((void *)v186 + 3);
                uint64_t v194 = *(void *)(v260 + 8);
                uint64_t ObjectType = swift_getObjectType();
                uint64_t v196 = swift_getObjectType();
                v197 = *(void (**)(uint64_t, uint64_t))(v193 + 32);
                swift_unknownObjectRetain();
                swift_unknownObjectRetain();
                v198 = v279;
                uint64_t v277 = v192;
                uint64_t v281 = v196;
                v197(v196, v193);
                uint64_t v199 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v194 + 16))(v198, ObjectType, v194);
                swift_unknownObjectRelease();
                v284 = *v285;
                v284(v198, v286);
                if (v199)
                {
                  type metadata accessor for CRLBoardItem(0);
                  uint64_t v200 = swift_dynamicCastClass();
                  if (v200)
                  {
                    v201 = (void *)v200;
                    uint64_t v281 = v199;
                    if (qword_10166FBD0 != -1) {
                      swift_once();
                    }
                    swift_beginAccess();
                    v202 = (void *)static OS_os_log.boardItemLifecycle;
                    sub_1005057FC((uint64_t *)&unk_101672B40);
                    uint64_t inited = swift_initStackObject();
                    *(_OWORD *)(inited + 16) = v272;
                    v204 = *(void (**)(void))((swift_isaMask & *v201) + 0x88);
                    v274 = v202;
                    v205 = v253;
                    v204();
                    uint64_t v206 = UUID.uuidString.getter();
                    uint64_t v208 = v207;
                    v209 = v205;
                    uint64_t v210 = v286;
                    v284(v209, v286);
                    *(void *)(inited + 56) = &type metadata for String;
                    unint64_t v211 = sub_100528BE4();
                    *(void *)(inited + 32) = v206;
                    uint64_t v270 = inited + 32;
                    *(void *)(inited + 64) = v211;
                    *(void *)(inited + 40) = v208;
                    swift_unknownObjectRetain();
                    id v212 = [v201 description];
                    uint64_t v213 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                    uint64_t v215 = v214;
                    swift_unknownObjectRelease();

                    *(void *)(inited + 96) = &type metadata for String;
                    *(void *)(inited + 104) = v211;
                    *(void *)(inited + 72) = v213;
                    *(void *)(inited + 80) = v215;
                    uint64_t v216 = (uint64_t)v254;
                    (*(void (**)(void))((swift_isaMask & *v201) + 0xB8))();
                    if ((*v273)(v216, 1, v210) == 1)
                    {
                      uint64_t v217 = sub_100510824(v216);
                      v218 = (uint64_t *)(inited + 112);
                      *(void *)(inited + 136) = &type metadata for String;
                      *(void *)(inited + 144) = v211;
                      goto LABEL_132;
                    }
                    uint64_t v231 = v216;
                    uint64_t v232 = UUID.uuidString.getter();
                    unint64_t v234 = v233;
                    uint64_t v217 = v284((char *)v231, v210);
                    v218 = (uint64_t *)(inited + 112);
                    *(void *)(inited + 136) = &type metadata for String;
                    *(void *)(inited + 144) = v211;
                    if (v234)
                    {
                      uint64_t *v218 = v232;
                    }
                    else
                    {
LABEL_132:
                      uint64_t *v218 = 7104878;
                      unint64_t v234 = 0xE300000000000000;
                    }
                    *(void *)(inited + 120) = v234;
                    uint64_t v235 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v201) + 0x2E8))(v217);
                    if (v235)
                    {
                      v236 = (void *)v235;
                      uint64_t v237 = *(void *)(v235 + OBJC_IVAR____TtC8Freeform8CRLBoard_data)
                           + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
                      swift_beginAccess();
                      uint64_t v238 = v237;
                      uint64_t v239 = v268;
                      sub_100530898(v238, v268);
                      swift_retain();
                      sub_1005057FC(&qword_101674550);
                      v240 = v279;
                      CRRegister.wrappedValue.getter();
                      sub_1005308FC(v239);

                      swift_release();
                      uint64_t v241 = UUID.uuidString.getter();
                      unint64_t v243 = v242;
                      v284(v240, v286);
                      v244 = (uint64_t *)(inited + 152);
                      *(void *)(inited + 176) = &type metadata for String;
                      *(void *)(inited + 184) = v211;
                      if (v243)
                      {
                        uint64_t *v244 = v241;
                        uint64_t v245 = v283;
                        uint64_t v175 = v271;
                        uint64_t v246 = v275;
LABEL_138:
                        *(void *)(inited + 160) = v243;
                        uint64_t v247 = static os_log_type_t.default.getter();
                        v248 = v274;
                        sub_100BAC898((uint64_t)v274, (uint64_t)&_mh_execute_header, v247, (uint64_t)"➡️⭕ CRLUndoingAction undo() un-create %{public}@%{public}@ with parentID %{public}@. Board: %{public}@", 108, 0, inited);
                        swift_setDeallocating();
                        sub_1005057FC(&qword_101672B50);
                        swift_arrayDestroy();

                        swift_unknownObjectRetain();
                        sub_101031278(v201, 0, 0, v245);
                        swift_unknownObjectRelease_n();
                        swift_release();
                        uint64_t result = swift_unknownObjectRelease();
                        uint64_t v177 = v246;
                        unint64_t v178 = (unint64_t)v280;
                        uint64_t v108 = v282;
                        if (v175 < 0) {
                          continue;
                        }
LABEL_107:
                        if (v178)
                        {
                          uint64_t v188 = (v178 - 1) & v178;
                          unint64_t v189 = __clz(__rbit64(v178)) | (v177 << 6);
                          uint64_t v187 = v177;
                        }
                        else
                        {
                          uint64_t v187 = v177 + 1;
                          if (__OFADD__(v177, 1)) {
                            goto LABEL_149;
                          }
                          if (v187 >= (uint64_t)v266) {
                            goto LABEL_146;
                          }
                          unint64_t v190 = *(void *)&v267[8 * v187];
                          if (!v190)
                          {
                            uint64_t v191 = v177 + 2;
                            if (v177 + 2 >= (uint64_t)v266) {
                              goto LABEL_146;
                            }
                            unint64_t v190 = *(void *)&v267[8 * v191];
                            if (v190) {
                              goto LABEL_116;
                            }
                            uint64_t v191 = v177 + 3;
                            if (v177 + 3 >= (uint64_t)v266) {
                              goto LABEL_146;
                            }
                            unint64_t v190 = *(void *)&v267[8 * v191];
                            if (v190)
                            {
LABEL_116:
                              uint64_t v187 = v191;
                            }
                            else
                            {
                              uint64_t v187 = v177 + 4;
                              if (v177 + 4 >= (uint64_t)v266) {
                                goto LABEL_146;
                              }
                              unint64_t v190 = *(void *)&v267[8 * v187];
                              if (!v190)
                              {
                                v249 = (char *)(v177 + 5);
                                while (v266 != v249)
                                {
                                  unint64_t v190 = *(void *)&v267[8 * (void)v249++];
                                  if (v190)
                                  {
                                    uint64_t v187 = (uint64_t)(v249 - 1);
                                    goto LABEL_117;
                                  }
                                }
                                goto LABEL_146;
                              }
                            }
                          }
LABEL_117:
                          uint64_t v188 = (v190 - 1) & v190;
                          unint64_t v189 = __clz(__rbit64(v190)) + (v187 << 6);
                        }
                        uint64_t v282 = v108;
                        v186 = *(char **)(*(void *)(v175 + 48) + 8 * v189);
                        swift_retain();
                        if (!v186) {
                          goto LABEL_146;
                        }
                        goto LABEL_119;
                      }
                    }
                    else
                    {
                      v244 = (uint64_t *)(inited + 152);
                      *(void *)(inited + 176) = &type metadata for String;
                      *(void *)(inited + 184) = v211;
                    }
                    uint64_t v245 = v283;
                    uint64_t v175 = v271;
                    uint64_t v246 = v275;
                    uint64_t *v244 = 7104878;
                    unint64_t v243 = 0xE300000000000000;
                    goto LABEL_138;
                  }
                  swift_unknownObjectRelease();
                }
                break;
              }
              if (qword_10166FBD0 != -1) {
                swift_once();
              }
              swift_beginAccess();
              v219 = (void *)static OS_os_log.boardItemLifecycle;
              sub_1005057FC((uint64_t *)&unk_101672B40);
              uint64_t v220 = swift_initStackObject();
              *(_OWORD *)(v220 + 16) = v269;
              v274 = v219;
              v221 = v279;
              uint64_t v222 = v277;
              v197(v281, v193);
              uint64_t v223 = UUID.uuidString.getter();
              uint64_t v225 = v224;
              v284(v221, v286);
              *(void *)(v220 + 56) = &type metadata for String;
              unint64_t v226 = sub_100528BE4();
              *(void *)(v220 + 64) = v226;
              *(void *)(v220 + 32) = v223;
              *(void *)(v220 + 40) = v225;
              uint64_t v287 = v222;
              uint64_t v288 = v193;
              swift_unknownObjectRetain();
              sub_1005057FC(&qword_101672A78);
              uint64_t v227 = String.init<A>(describing:)();
              *(void *)(v220 + 96) = &type metadata for String;
              *(void *)(v220 + 104) = v226;
              *(void *)(v220 + 72) = v227;
              *(void *)(v220 + 80) = v228;
              uint64_t v229 = static os_log_type_t.default.getter();
              v230 = v274;
              sub_100BAC898((uint64_t)v274, (uint64_t)&_mh_execute_header, v229, (uint64_t)"➡️⭕ CRLUndoingAction undo() un-create %{public}@%{public}@ from old snapshot.", 83, 0, v220);
              swift_setDeallocating();
              sub_1005057FC(&qword_101672B50);
              swift_arrayDestroy();

              sub_101032C58(v222, 0, 0, v283, v281, v193);
              swift_unknownObjectRelease();
              uint64_t result = swift_release();
              uint64_t v177 = v275;
              unint64_t v178 = (unint64_t)v280;
              uint64_t v108 = v282;
              uint64_t v175 = v271;
              if (v271 < 0) {
                continue;
              }
              goto LABEL_107;
            }
          }
          int64_t v127 = *(void *)(v110 + *(int *)(v126 + 48));
          (*v274)(v31, v110, v21);
          uint64_t v128 = swift_getObjectType();
          uint64_t v129 = (*(uint64_t (**)(char *, uint64_t))(v275 + 16))(v31, v128);
          uint64_t v277 = v130;
          if (v129)
          {
            uint64_t v131 = v129;
            type metadata accessor for CRLBoardItem(0);
            uint64_t v132 = swift_dynamicCastClass();
            if (v132)
            {
              v133 = (void *)v132;
              int64_t v263 = v127;
              uint64_t v282 = v108;
              uint64_t v134 = qword_10166FBD0;
              swift_unknownObjectRetain();
              if (v134 != -1) {
                swift_once();
              }
              swift_beginAccess();
              v135 = (void *)static OS_os_log.boardItemLifecycle;
              sub_1005057FC((uint64_t *)&unk_101672B40);
              uint64_t v136 = swift_initStackObject();
              *(_OWORD *)(v136 + 16) = v272;
              v137 = *(void (**)(void))((swift_isaMask & *v133) + 0x88);
              id v262 = v135;
              v138 = v257;
              v137();
              uint64_t v139 = UUID.uuidString.getter();
              uint64_t v141 = v140;
              uint64_t v142 = v286;
              v265 = *v285;
              v265(v138, v286);
              *(void *)(v136 + 56) = &type metadata for String;
              unint64_t v143 = sub_100528BE4();
              *(void *)(v136 + 32) = v139;
              v261 = (char *)(v136 + 32);
              *(void *)(v136 + 64) = v143;
              *(void *)(v136 + 40) = v141;
              swift_unknownObjectRetain();
              id v144 = [v133 description];
              uint64_t v145 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v147 = v146;
              swift_unknownObjectRelease();

              *(void *)(v136 + 96) = &type metadata for String;
              *(void *)(v136 + 104) = v143;
              *(void *)(v136 + 72) = v145;
              *(void *)(v136 + 80) = v147;
              uint64_t v148 = (uint64_t)v258;
              (*(void (**)(void))((swift_isaMask & *v133) + 0xB8))();
              unsigned int v149 = (*v273)(v148, 1, v142);
              v264 = (char *)v143;
              if (v149 == 1)
              {
                uint64_t v150 = sub_100510824(v148);
                v151 = (uint64_t *)(v136 + 112);
                *(void *)(v136 + 136) = &type metadata for String;
                *(void *)(v136 + 144) = v143;
                a1 = v283;
                uint64_t v110 = (uint64_t)v278;
                v152 = (void (*)(char *, uint64_t))v265;
                goto LABEL_77;
              }
              uint64_t v153 = UUID.uuidString.getter();
              unint64_t v155 = v154;
              uint64_t v156 = v142;
              v152 = (void (*)(char *, uint64_t))v265;
              uint64_t v150 = v265((char *)v148, v156);
              v151 = (uint64_t *)(v136 + 112);
              *(void *)(v136 + 136) = &type metadata for String;
              *(void *)(v136 + 144) = v143;
              if (v155)
              {
                uint64_t *v151 = v153;
                a1 = v283;
                uint64_t v110 = (uint64_t)v278;
              }
              else
              {
                a1 = v283;
                uint64_t v110 = (uint64_t)v278;
LABEL_77:
                uint64_t *v151 = 7104878;
                unint64_t v155 = 0xE300000000000000;
              }
              *(void *)(v136 + 120) = v155;
              uint64_t v157 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v133) + 0x2E8))(v150);
              if (v157)
              {
                v158 = (void *)v157;
                uint64_t v159 = *(void *)(v157 + OBJC_IVAR____TtC8Freeform8CRLBoard_data)
                     + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
                swift_beginAccess();
                uint64_t v160 = v159;
                uint64_t v161 = v268;
                sub_100530898(v160, v268);
                swift_retain();
                sub_1005057FC(&qword_101674550);
                v162 = v152;
                v163 = v279;
                CRRegister.wrappedValue.getter();
                sub_1005308FC(v161);

                swift_release();
                uint64_t v164 = UUID.uuidString.getter();
                unint64_t v166 = v165;
                v162(v163, v286);
                v167 = (uint64_t *)(v136 + 152);
                v168 = v264;
                *(void *)(v136 + 176) = &type metadata for String;
                *(void *)(v136 + 184) = v168;
                if (v166)
                {
                  uint64_t *v167 = v164;
                  v169 = v262;
                  int64_t v127 = v263;
                  a1 = v283;
                  goto LABEL_84;
                }
                v169 = v262;
                int64_t v127 = v263;
                a1 = v283;
              }
              else
              {
                v167 = (uint64_t *)(v136 + 152);
                int64_t v127 = v263;
                v170 = v264;
                *(void *)(v136 + 176) = &type metadata for String;
                *(void *)(v136 + 184) = v170;
                v169 = v262;
              }
              uint64_t *v167 = 7104878;
              unint64_t v166 = 0xE300000000000000;
LABEL_84:
              *(void *)(v136 + 160) = v166;
              uint64_t v171 = static os_log_type_t.default.getter();
              sub_100BAC898((uint64_t)v169, (uint64_t)&_mh_execute_header, v171, (uint64_t)"➡️ CRLUndoingAction undo() undo mutation of %{public}@%{public}@ with parentID %{public}@. Board: %{public}@", 112, 0, v136);
              swift_setDeallocating();
              sub_1005057FC(&qword_101672B50);
              swift_arrayDestroy();
              swift_unknownObjectRelease();

              uint64_t v108 = v282;
              uint64_t v109 = (uint64_t)v267;
            }
            uint64_t v172 = v277;
            sub_10103405C(v131, v277);
            if (v108)
            {
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              v179 = v280;
              swift_release();
              (*v285)(v179, v286);
              return swift_release();
            }
            uint64_t v173 = swift_getObjectType();
            (*(void (**)(int64_t, uint64_t, uint64_t, uint64_t))(v172 + 72))(v127, a1, v173, v172);
            v31 = v280;
            swift_unknownObjectRelease();
            swift_release();
          }
          else
          {
            uint64_t v111 = v108;
            if (qword_10166F9E0 != -1) {
              swift_once();
            }
            swift_beginAccess();
            v112 = (void *)static OS_os_log.crlWarning;
            sub_1005057FC((uint64_t *)&unk_101672B40);
            uint64_t v113 = swift_initStackObject();
            *(_OWORD *)(v113 + 16) = v256;
            id v114 = v112;
            uint64_t v115 = UUID.uuidString.getter();
            uint64_t v117 = v116;
            *(void *)(v113 + 56) = &type metadata for String;
            *(void *)(v113 + 64) = sub_100528BE4();
            *(void *)(v113 + 32) = v115;
            *(void *)(v113 + 40) = v117;
            uint64_t v118 = static os_log_type_t.default.getter();
            sub_100BAC898((uint64_t)v114, (uint64_t)&_mh_execute_header, v118, (uint64_t)"Unable to find transactable to apply undoingMutations for %{public}@", 68, 2, v113);
            swift_release();
            swift_setDeallocating();
            sub_1005057FC(&qword_101672B50);
            swift_arrayDestroy();

            uint64_t v108 = v111;
            a1 = v283;
            uint64_t v109 = (uint64_t)v267;
            uint64_t v110 = (uint64_t)v278;
          }
          uint64_t v21 = v286;
          uint64_t result = (*v285)(v31, v286);
          uint64_t v107 = v281;
          unint64_t v106 = (unint64_t)v284;
          continue;
        }
        break;
      }
      v107 += 2;
      if (v123 + 1 >= v259) {
        goto LABEL_95;
      }
      unint64_t v124 = *(void *)(v255 + 8 * v107);
      if (v124)
      {
LABEL_61:
        uint64_t v123 = v107;
        goto LABEL_58;
      }
      if (v123 + 2 >= v259)
      {
LABEL_65:
        uint64_t v281 = v107;
      }
      else
      {
        unint64_t v124 = *(void *)(v255 + 8 * (v123 + 2));
        if (v124)
        {
          v123 += 2;
          goto LABEL_58;
        }
        uint64_t v107 = v123 + 3;
        if (v123 + 3 >= v259)
        {
          uint64_t v281 = v123 + 2;
        }
        else
        {
          unint64_t v124 = *(void *)(v255 + 8 * v107);
          if (v124) {
            goto LABEL_61;
          }
          while (1)
          {
            uint64_t v123 = v107 + 1;
            if (__OFADD__(v107, 1)) {
              goto LABEL_150;
            }
            if (v123 >= v259) {
              break;
            }
            unint64_t v124 = *(void *)(v255 + 8 * v123);
            ++v107;
            if (v124) {
              goto LABEL_58;
            }
          }
          uint64_t v123 = v251;
LABEL_95:
          uint64_t v281 = v123;
        }
      }
      uint64_t v125 = sub_1005057FC(&qword_101672A70);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v109, 1, 1, v125);
      v284 = 0;
      goto LABEL_67;
    }
LABEL_31:
    uint64_t v56 = *(void *)(v52 + 16);
    v57 = *(void (***)(char *, uint64_t, uint64_t))(v52 + 24);
    v284 = (uint64_t (*)(char *, uint64_t))v52;
    type metadata accessor for CRLBoardItem(0);
    uint64_t v58 = swift_dynamicCastClass();
    if (!v58)
    {
      swift_unknownObjectRetain();
      v31 = v280;
      goto LABEL_9;
    }
    v59 = (void *)v58;
    v274 = v57;
    uint64_t v277 = v48;
    uint64_t v281 = v49;
    uint64_t v60 = qword_10166FBD0;
    swift_unknownObjectRetain_n();
    if (v60 != -1) {
      swift_once();
    }
    swift_beginAccess();
    v61 = (void *)static OS_os_log.boardItemLifecycle;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v62 = swift_initStackObject();
    *(_OWORD *)(v62 + 16) = v272;
    v63 = *(void (**)(void))((swift_isaMask & *v59) + 0x88);
    id v276 = v61;
    v64 = v266;
    v63();
    uint64_t v65 = UUID.uuidString.getter();
    uint64_t v67 = v66;
    v68 = *v285;
    (*v285)(v64, v286);
    *(void *)(v62 + 56) = &type metadata for String;
    unint64_t v69 = sub_100528BE4();
    *(void *)(v62 + 32) = v65;
    uint64_t v275 = v62 + 32;
    *(void *)(v62 + 64) = v69;
    *(void *)(v62 + 40) = v67;
    swift_unknownObjectRetain();
    id v70 = [v59 description];
    uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v73 = v72;
    swift_unknownObjectRelease();

    *(void *)(v62 + 96) = &type metadata for String;
    *(void *)(v62 + 104) = v69;
    *(void *)(v62 + 72) = v71;
    *(void *)(v62 + 80) = v73;
    uint64_t v74 = v286;
    uint64_t v75 = v269;
    (*(void (**)(void))((swift_isaMask & *v59) + 0xB8))();
    unsigned int v76 = (*v273)(v75, 1, v74);
    uint64_t v271 = (uint64_t)v68;
    if (v76 == 1)
    {
      uint64_t v77 = sub_100510824(v75);
      v78 = (uint64_t *)(v62 + 112);
      *(void *)(v62 + 136) = &type metadata for String;
      *(void *)(v62 + 144) = v69;
      unint64_t v79 = v69;
    }
    else
    {
      uint64_t v80 = UUID.uuidString.getter();
      uint64_t v81 = v75;
      uint64_t v82 = v80;
      unint64_t v84 = v83;
      uint64_t v77 = v68((char *)v81, v74);
      v78 = (uint64_t *)(v62 + 112);
      *(void *)(v62 + 136) = &type metadata for String;
      *(void *)(v62 + 144) = v69;
      unint64_t v79 = v69;
      if (v84)
      {
        uint64_t v85 = v74;
        uint64_t *v78 = v82;
        goto LABEL_39;
      }
    }
    uint64_t v85 = v74;
    uint64_t *v78 = 7104878;
    unint64_t v84 = 0xE300000000000000;
LABEL_39:
    *(void *)(v62 + 120) = v84;
    uint64_t v86 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v59) + 0x2E8))(v77);
    if (!v86)
    {
      v95 = (uint64_t *)(v62 + 152);
      *(void *)(v62 + 176) = &type metadata for String;
      *(void *)(v62 + 184) = v79;
LABEL_43:
      v31 = v280;
      unint64_t v37 = (unint64_t)v265;
      v57 = v274;
      uint64_t *v95 = 7104878;
      unint64_t v94 = 0xE300000000000000;
      uint64_t v96 = v283;
      goto LABEL_44;
    }
    v87 = (void *)v86;
    uint64_t v88 = *(void *)(v86 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    uint64_t v89 = v88;
    uint64_t v90 = v268;
    sub_100530898(v89, v268);
    swift_retain();
    sub_1005057FC(&qword_101674550);
    v91 = v279;
    CRRegister.wrappedValue.getter();
    sub_1005308FC(v90);

    swift_release();
    uint64_t v92 = UUID.uuidString.getter();
    unint64_t v94 = v93;
    ((void (*)(char *, uint64_t))v271)(v91, v85);
    v95 = (uint64_t *)(v62 + 152);
    *(void *)(v62 + 176) = &type metadata for String;
    *(void *)(v62 + 184) = v79;
    if (!v94) {
      goto LABEL_43;
    }
    uint64_t *v95 = v92;
    uint64_t v96 = v283;
    v31 = v280;
    unint64_t v37 = (unint64_t)v265;
    v57 = v274;
LABEL_44:
    *(void *)(v62 + 160) = v94;
    uint64_t v97 = static os_log_type_t.default.getter();
    id v98 = v276;
    sub_100BAC898((uint64_t)v276, (uint64_t)&_mh_execute_header, v97, (uint64_t)"➡️🟢 CRLUndoingAction undo() un-delete %{public}@%{public}@ with parentID %{public}@. Board: %{public}@", 109, 0, v62);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    swift_unknownObjectRelease();

    uint64_t v49 = v281;
    uint64_t v48 = v277;
    a1 = v96;
    uint64_t v21 = v286;
LABEL_9:
    uint64_t v47 = swift_getObjectType();
    sub_101033A4C(v56, 2, a1, v47, (uint64_t)v57);
    swift_release();
    uint64_t result = swift_unknownObjectRelease();
    uint64_t v40 = v49;
    uint64_t v41 = v48;
  }
  if (v41)
  {
    uint64_t v48 = (v41 - 1) & v41;
    uint64_t v49 = v40;
    goto LABEL_30;
  }
  int64_t v53 = v40 + 1;
  if (!__OFADD__(v40, 1))
  {
    if (v53 >= v263) {
      goto LABEL_45;
    }
    uint64_t v54 = *(void *)&v264[8 * v53];
    uint64_t v49 = v40 + 1;
    if (!v54)
    {
      uint64_t v49 = v40 + 2;
      if (v40 + 2 >= v263) {
        goto LABEL_45;
      }
      uint64_t v54 = *(void *)&v264[8 * v49];
      if (!v54)
      {
        uint64_t v49 = v40 + 3;
        if (v40 + 3 >= v263) {
          goto LABEL_45;
        }
        uint64_t v54 = *(void *)&v264[8 * v49];
        if (!v54)
        {
          uint64_t v49 = v40 + 4;
          if (v40 + 4 >= v263) {
            goto LABEL_45;
          }
          uint64_t v54 = *(void *)&v264[8 * v49];
          if (!v54)
          {
            uint64_t v55 = v40 + 5;
            do
            {
              if (v263 == v55) {
                goto LABEL_45;
              }
              uint64_t v54 = *(void *)&v264[8 * v55++];
            }
            while (!v54);
            uint64_t v49 = v55 - 1;
          }
        }
      }
    }
    uint64_t v48 = (v54 - 1) & v54;
LABEL_30:
    uint64_t v52 = swift_retain();
    if (!v52) {
      goto LABEL_45;
    }
    goto LABEL_31;
  }
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
  return result;
}

uint64_t sub_10053076C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLUndoingAction()
{
  return self;
}

unint64_t sub_1005307D8()
{
  unint64_t result = qword_10169A0A0;
  if (!qword_10169A0A0)
  {
    type metadata accessor for CRLTransactableHashableWrapper();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169A0A0);
  }
  return result;
}

uint64_t sub_100530830(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672A68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100530898(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005308FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardCRDTData(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1005309B4(uint64_t a1, id a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = (char *)objc_allocWithZone(v4);
  uint64_t v9 = &v8[OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_id];
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  if (a2)
  {
    uint64_t v12 = v8;
    a2 = a2;
    [a2 copy];
    _bridgeAnyObjectToAny(_:)();

    swift_unknownObjectRelease();
    sub_100531444();
    swift_dynamicCast();
    *(void *)&v12[OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_lineEnd] = v16;
  }
  else
  {
    *(void *)&v8[OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_lineEnd] = 0;
    uint64_t v13 = v8;
  }
  *(void *)&v8[OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_chirality] = a3;

  v17.receiver = v8;
  v17.super_class = v4;
  id v14 = [super init];
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);

  return v14;
}

void sub_100530D8C(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5 = v3;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v9 = [a1 getBoardItemForUUID:isa];

  if (!v9) {
    goto LABEL_11;
  }
  type metadata accessor for CRLShapeItem();
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10)
  {

LABEL_11:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetLineEnd.swift", 92, 2, 41, (uint64_t)"Unable to retrieve shape item.", 30, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve shape item.");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetLineEnd.swift", 92, 2, 41);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v19, v20);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v11 = v10;
  id v12 = v9;
  sub_10103405C(v11, (uint64_t)&off_101518040);

  if (v4)
  {

    return;
  }
  uint64_t v13 = *(void *)(v5 + OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_chirality);
  if (!v13)
  {
    id v14 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_lineEnd);
    id v15 = v14;
    sub_100A9BE98(v14);
LABEL_9:
    id v18 = v12;
    sub_101023724(v11, (uint64_t)&off_101518040, a3);

    return;
  }
  if (v13 == 1)
  {
    uint64_t v16 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_lineEnd);
    id v17 = v16;
    sub_100A9C528(v16);
    goto LABEL_9;
  }
LABEL_12:
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
}

void sub_10053101C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_lineEnd);
}

id sub_100531098()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetLineEnd();
  return [super dealloc];
}

uint64_t sub_100531150()
{
  return type metadata accessor for CRLCommandSetLineEnd();
}

uint64_t type metadata accessor for CRLCommandSetLineEnd()
{
  uint64_t result = qword_101672AA8;
  if (!qword_101672AA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005311A4()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCommandSetLineEndChirality()
{
  return &type metadata for CRLCommandSetLineEndChirality;
}

unint64_t sub_100531260()
{
  unint64_t result = qword_101672AB8;
  if (!qword_101672AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101672AB8);
  }
  return result;
}

id sub_1005312B4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v7 = &v3[OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_id];
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
  if (a2)
  {
    uint64_t v10 = v3;
    id v11 = a2;
    [v11 copy];
    _bridgeAnyObjectToAny(_:)();

    swift_unknownObjectRelease();
    sub_100531444();
    swift_dynamicCast();
    *(void *)&v10[OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_lineEnd] = v15;
  }
  else
  {
    *(void *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_lineEnd] = 0;
    id v12 = v3;
  }
  *(void *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_chirality] = a3;

  v16.receiver = v3;
  v16.super_class = (Class)type metadata accessor for CRLCommandSetLineEnd();
  id v13 = [super init];
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  return v13;
}

unint64_t sub_100531444()
{
  unint64_t result = qword_101672AC0;
  if (!qword_101672AC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101672AC0);
  }
  return result;
}

uint64_t sub_100531484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[40] = a4;
  type metadata accessor for CRLBoardCRDTData(0);
  v4[41] = swift_task_alloc();
  type metadata accessor for UUID();
  v4[42] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v4[43] = swift_task_alloc();
  v4[44] = type metadata accessor for MainActor();
  v4[45] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[46] = v6;
  v4[47] = v5;
  return _swift_task_switch(sub_1005315A4, v6, v5);
}

uint64_t sub_1005315A4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[48] = Strong;
  if (!Strong)
  {
    swift_release();
LABEL_11:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  objc_super v2 = (char *)Strong;
  uint64_t v3 = swift_unknownObjectWeakLoadStrong();
  v0[49] = v3;
  if (!v3)
  {
    swift_release();
LABEL_10:

    goto LABEL_11;
  }
  uint64_t v4 = (unsigned char *)v3;
  [*(id *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] endEditing];
  if ((v4[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_isNetworkReachable] & 1) == 0)
  {
    swift_release();
    sub_100533CE4();
    goto LABEL_9;
  }
  uint64_t v5 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shareSyncAwaitTask;
  v0[50] = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shareSyncAwaitTask;
  if (*(void *)&v2[v5 + 8])
  {
    swift_release();
LABEL_9:

    goto LABEL_10;
  }
  uint64_t v19 = v0[43];
  uint64_t v9 = v0[41];
  uint64_t v8 = v0[42];
  uint64_t v10 = *(char **)(*(void *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v11 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v12 = *(void *)&v10[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100539548(v12, v9, type metadata accessor for CRLBoardCRDTData);
  id v13 = v10;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_1005387C0(v9, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  id v14 = (uint64_t *)(*(void *)&v10[v11] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v15 = *v14;
  unint64_t v16 = v14[1];
  swift_bridgeObjectRetain();
  sub_100753370(v8, v15, v16, v19);

  v0[51] = static MainActor.shared.getter();
  uint64_t v18 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[52] = v18;
  v0[53] = v17;
  return _swift_task_switch(sub_100531874, v18, v17);
}

uint64_t sub_100531874()
{
  uint64_t v1 = *(void *)(v0 + 344);
  objc_super v2 = (void *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  if (*v2) {
    BOOL v3 = 0;
  }
  else {
    BOOL v3 = v2[1] == 0xE000000000000000;
  }
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 432) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1005319A4;
    uint64_t v5 = *(void *)(v0 + 344);
    return sub_100ED787C(v5);
  }
  else
  {
    swift_release();
    *(unsigned char *)(v0 + 505) = 1;
    *(void *)(v0 + 440) = swift_allocObject();
    uint64_t v7 = *(void *)(v0 + 368);
    uint64_t v8 = *(void *)(v0 + 376);
    return _swift_task_switch(sub_100531B50, v7, v8);
  }
}

uint64_t sub_1005319A4(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 504) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 424);
  uint64_t v4 = *(void *)(v2 + 416);
  return _swift_task_switch(sub_100531ACC, v4, v3);
}

uint64_t sub_100531ACC()
{
  swift_release();
  *(unsigned char *)(v0 + 505) = *(unsigned char *)(v0 + 504);
  *(void *)(v0 + 440) = swift_allocObject();
  uint64_t v1 = *(void *)(v0 + 368);
  uint64_t v2 = *(void *)(v0 + 376);
  return _swift_task_switch(sub_100531B50, v1, v2);
}

uint64_t sub_100531B50()
{
  *(unsigned char *)(v0[55] + 16) = *((unsigned char *)v0 + 505);
  id v1 = [self sharedApplication];
  id v2 = [v1 delegate];

  if (!v2)
  {
    __break(1u);
    goto LABEL_30;
  }
  char v3 = *((unsigned char *)v0 + 505);
  type metadata accessor for CRLiOSAppDelegate();
  swift_dynamicCastClassUnconditional();
  swift_retain();
  swift_unknownObjectRelease();
  unsigned __int8 v4 = sub_100AC1C10();
  swift_release();
  if ((v3 & 1) == 0)
  {
    int v5 = v4;
    if (v4 == 1)
    {
      uint64_t v6 = v0[55];
      uint64_t v7 = (uint64_t *)(v0[48] + v0[50]);
      Class v8 = sub_100D3EC2C(v0[43]);
      v0[56] = v8;
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = v8;
      *(void *)(v9 + 24) = v6;
      uint64_t v10 = *v7;
      uint64_t v11 = v7[1];
      *uint64_t v7 = 0x4008000000000000;
      v7[1] = (uint64_t)&unk_101672B60;
      v7[2] = v9;
      uint64_t v12 = v8;
      swift_retain();
      sub_10053890C(v10, v11);
      double v13 = *(double *)v7;
      v0[57] = *v7;
      uint64_t v14 = v7[1];
      v0[58] = v14;
      uint64_t v15 = v7[2];
      v0[59] = v15;
      if (v14)
      {
        double v16 = v13;
        uint64_t v122 = (uint64_t (*)(double, uint64_t, uint64_t, uint64_t))((char *)&dword_101672B68 + dword_101672B68);
        swift_retain();
        uint64_t v17 = (void *)swift_task_alloc();
        v0[60] = v17;
        *uint64_t v17 = v0;
        v17[1] = sub_100532C48;
        return v122(v16, (uint64_t)v122, v14, v15);
      }
LABEL_30:
      __break(1u);
      JUMPOUT(0x100532C38);
    }
  }
  switch(v5)
  {
    case 1:
      uint64_t v44 = v0[55];
      swift_beginAccess();
      if (*(unsigned char *)(v44 + 16) != 1)
      {
        swift_release();
        v68 = self;
        id v69 = [v68 mainBundle];
        NSString v70 = String._bridgeToObjectiveC()();
        NSString v71 = String._bridgeToObjectiveC()();
        id v72 = [v69 localizedStringForKey:v70 value:v71 table:0];

        uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v27 = v73;

        id v74 = [v68 mainBundle];
        NSString v75 = String._bridgeToObjectiveC()();
        NSString v76 = String._bridgeToObjectiveC()();
        id v77 = [v74 localizedStringForKey:v75 value:v76 table:0];

        uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v40 = v78;

        id v79 = [v68 mainBundle];
        NSString v80 = String._bridgeToObjectiveC()();
        NSString v81 = String._bridgeToObjectiveC()();
        id v82 = [v79 localizedStringForKey:v80 value:v81 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v66 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v67 = [self actionWithTitle:v66 style:0 handler:0];
        goto LABEL_19;
      }
      id v45 = sub_100E3C594();
      id v46 = [v45 mode];

      LODWORD(v45) = [v46 wantsToEndForNonPopoverPresentations];
      if (v45)
      {
        id v47 = sub_100E3C594();
        [v47 resetToDefaultModeAnimated:1];
      }
      uint64_t v48 = (void *)swift_task_alloc();
      v0[61] = v48;
      *uint64_t v48 = v0;
      v48[1] = sub_1005333BC;
      uint64_t v49 = v0[43];
      uint64_t result = sub_100ED3CA0(v49, 1);
      break;
    case 2:
      swift_release();
      unsigned int v50 = [self loggedInUserHasManagedAppleID];
      uint64_t v51 = self;
      id v52 = [v51 mainBundle];
      if (!v50)
      {
        NSString v84 = String._bridgeToObjectiveC()();
        NSString v85 = String._bridgeToObjectiveC()();
        id v86 = [v52 localizedStringForKey:v84 value:v85 table:0];

        uint64_t v120 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v124 = v87;

        id v88 = [v51 mainBundle];
        NSString v89 = String._bridgeToObjectiveC()();
        NSString v90 = String._bridgeToObjectiveC()();
        id v91 = [v88 localizedStringForKey:v89 value:v90 table:0];

        uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v27 = v92;

        id v93 = [v51 mainBundle];
        NSString v94 = String._bridgeToObjectiveC()();
        NSString v95 = String._bridgeToObjectiveC()();
        id v96 = [v93 localizedStringForKey:v94 value:v95 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v97 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        v0[20] = sub_100534D40;
        v0[21] = 0;
        v0[16] = _NSConcreteStackBlock;
        v0[17] = *(void *)"";
        v0[18] = sub_10051CE64;
        v0[19] = &unk_101507240;
        id v98 = _Block_copy(v0 + 16);
        swift_release();
        id v99 = self;
        id v35 = [v99 actionWithTitle:v97 style:0 handler:v98];
        _Block_release(v98);

        id v100 = [v51 mainBundle];
        NSString v101 = String._bridgeToObjectiveC()();
        NSString v102 = String._bridgeToObjectiveC()();
        id v103 = [v100 localizedStringForKey:v101 value:v102 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v40 = v124;
        NSString v41 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        uint64_t v42 = v120;
        id v43 = [v99 actionWithTitle:v41 style:1 handler:0];
        goto LABEL_21;
      }
      NSString v53 = String._bridgeToObjectiveC()();
      NSString v54 = String._bridgeToObjectiveC()();
      id v55 = [v52 localizedStringForKey:v53 value:v54 table:0];

      uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v40 = v56;

      id v57 = [v51 mainBundle];
      NSString v58 = String._bridgeToObjectiveC()();
      NSString v59 = String._bridgeToObjectiveC()();
      id v60 = [v57 localizedStringForKey:v58 value:v59 table:0];

      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v27 = v61;

      id v62 = [v51 mainBundle];
      NSString v63 = String._bridgeToObjectiveC()();
      NSString v64 = String._bridgeToObjectiveC()();
      id v65 = [v62 localizedStringForKey:v63 value:v64 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v66 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v67 = [self actionWithTitle:v66 style:0 handler:0];
LABEL_19:
      id v35 = v67;

      id v83 = 0;
      goto LABEL_22;
    default:
      swift_release();
      uint64_t v19 = self;
      id v20 = [v19 mainBundle];
      NSString v21 = String._bridgeToObjectiveC()();
      NSString v22 = String._bridgeToObjectiveC()();
      id v23 = [v20 localizedStringForKey:v21 value:v22 table:0];

      uint64_t v119 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v123 = v24;

      uint64_t v25 = sub_100DC1930();
      uint64_t v27 = v26;
      id v28 = [v19 mainBundle];
      NSString v29 = String._bridgeToObjectiveC()();
      NSString v30 = String._bridgeToObjectiveC()();
      id v31 = [v28 localizedStringForKey:v29 value:v30 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v32 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v0[26] = sub_10053976C;
      v0[27] = 0;
      v0[22] = _NSConcreteStackBlock;
      v0[23] = *(void *)"";
      v0[24] = sub_10051CE64;
      v0[25] = &unk_101507218;
      uint64_t v33 = _Block_copy(v0 + 22);
      swift_release();
      uint64_t v34 = self;
      id v35 = [v34 actionWithTitle:v32 style:0 handler:v33];
      _Block_release(v33);

      id v36 = [v19 mainBundle];
      NSString v37 = String._bridgeToObjectiveC()();
      NSString v38 = String._bridgeToObjectiveC()();
      id v39 = [v36 localizedStringForKey:v37 value:v38 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v40 = v123;
      NSString v41 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v42 = v119;
      id v43 = [v34 actionWithTitle:v41 style:1 handler:0];
LABEL_21:
      id v83 = v43;

LABEL_22:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v104 = v35;
      NSString v105 = String._bridgeToObjectiveC()();
      uint64_t v125 = v40;
      swift_bridgeObjectRelease();
      NSString v106 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v107 = [self alertControllerWithTitle:v105 message:v106 preferredStyle:1];

      [v107 addAction:v104];
      if (v83) {
        [v107 addAction:v83];
      }
      uint64_t v121 = v83;
      uint64_t v108 = v25;
      uint64_t v109 = v42;
      if (qword_10166FBE0 != -1) {
        swift_once();
      }
      uint64_t v110 = (void *)v0[48];
      uint64_t v117 = (void *)v0[49];
      uint64_t v118 = v0[43];
      swift_beginAccess();
      uint64_t v111 = (void *)static OS_os_log.shareState;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v113 = sub_100528BE4();
      *(void *)(inited + 32) = v109;
      *(void *)(inited + 40) = v125;
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v113;
      *(void *)(inited + 64) = v113;
      *(void *)(inited + 72) = v108;
      *(void *)(inited + 80) = v27;
      id v114 = v111;
      uint64_t v115 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v114, (uint64_t)&_mh_execute_header, v115, (uint64_t)"Presenting alert: %@ %@", 23, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      [v110 presentViewController:v107 animated:1 completion:0];
      sub_1005387C0(v118, type metadata accessor for CRLBoardIdentifier);
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v116 = (uint64_t (*)(void))v0[1];
      uint64_t result = v116();
      break;
  }
  return result;
}

uint64_t sub_100532C48()
{
  uint64_t v3 = *v1;
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v4 = *(void *)(v2 + 464);
  uint64_t v5 = *(void *)(v2 + 456);
  if (v0)
  {
    swift_errorRelease();
    sub_10053890C(v5, v4);
    uint64_t v6 = *(void *)(v3 + 368);
    uint64_t v7 = *(void *)(v3 + 376);
    Class v8 = sub_1005335F8;
  }
  else
  {
    sub_10053890C(v5, v4);
    uint64_t v6 = *(void *)(v3 + 368);
    uint64_t v7 = *(void *)(v3 + 376);
    Class v8 = sub_100532DCC;
  }
  return _swift_task_switch(v8, v6, v7);
}

uint64_t sub_100532DCC()
{
  id v1 = (void *)v0[56];
  uint64_t v2 = (uint64_t *)(v0[48] + v0[50]);
  uint64_t v3 = *v2;
  uint64_t v4 = v2[1];
  *uint64_t v2 = 0;
  v2[1] = 0;
  v2[2] = 0;
  sub_10053890C(v3, v4);

  uint64_t v5 = v0[55];
  swift_beginAccess();
  if (*(unsigned char *)(v5 + 16) == 1)
  {
    id v6 = sub_100E3C594();
    id v7 = [v6 mode];

    LODWORD(v6) = [v7 wantsToEndForNonPopoverPresentations];
    if (v6)
    {
      id v8 = sub_100E3C594();
      [v8 resetToDefaultModeAnimated:1];
    }
    uint64_t v9 = (void *)swift_task_alloc();
    v0[61] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1005333BC;
    uint64_t v10 = v0[43];
    return sub_100ED3CA0(v10, 1);
  }
  else
  {
    swift_release();
    uint64_t v12 = self;
    id v13 = [v12 mainBundle];
    NSString v14 = String._bridgeToObjectiveC()();
    NSString v15 = String._bridgeToObjectiveC()();
    id v16 = [v13 localizedStringForKey:v14 value:v15 table:0];

    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    id v20 = [v12 mainBundle];
    NSString v21 = String._bridgeToObjectiveC()();
    NSString v22 = String._bridgeToObjectiveC()();
    id v23 = [v20 localizedStringForKey:v21 value:v22 table:0];

    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v26 = v25;

    id v27 = [v12 mainBundle];
    NSString v28 = String._bridgeToObjectiveC()();
    NSString v29 = String._bridgeToObjectiveC()();
    id v30 = [v27 localizedStringForKey:v28 value:v29 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v32 = [self actionWithTitle:v31 style:0 handler:0];

    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v33 = v32;
    uint64_t v47 = v24;
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v48 = v17;
    NSString v35 = String._bridgeToObjectiveC()();
    uint64_t v36 = v19;
    swift_bridgeObjectRelease();
    id v37 = [self alertControllerWithTitle:v34 message:v35 preferredStyle:1];

    [v37 addAction:v33];
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    NSString v38 = (void *)v0[48];
    id v45 = (void *)v0[49];
    uint64_t v46 = v0[43];
    swift_beginAccess();
    id v39 = (void *)static OS_os_log.shareState;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v41 = sub_100528BE4();
    *(void *)(inited + 32) = v47;
    *(void *)(inited + 40) = v26;
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v41;
    *(void *)(inited + 64) = v41;
    *(void *)(inited + 72) = v48;
    *(void *)(inited + 80) = v36;
    id v42 = v39;
    uint64_t v43 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v42, (uint64_t)&_mh_execute_header, v43, (uint64_t)"Presenting alert: %@ %@", 23, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    [v38 presentViewController:v37 animated:1 completion:0];
    sub_1005387C0(v46, type metadata accessor for CRLBoardIdentifier);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v44 = (uint64_t (*)(void))v0[1];
    return v44();
  }
}

uint64_t sub_1005333BC(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    uint64_t v5 = v4[46];
    uint64_t v6 = v4[47];
    id v7 = sub_100533BDC;
  }
  else
  {
    v4[62] = a1;
    uint64_t v5 = v4[46];
    uint64_t v6 = v4[47];
    id v7 = sub_1005334E8;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_1005334E8()
{
  uint64_t v1 = (void *)v0[62];
  uint64_t v2 = (char *)v0[48];
  uint64_t v3 = (void *)v0[49];
  uint64_t v4 = v0[43];
  swift_release();
  id v5 = *(id *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shareSheetProvider];
  id v6 = sub_100E3C90C();
  sub_100646C24(v6, v2, v1);

  sub_1005387C0(v4, type metadata accessor for CRLBoardIdentifier);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1005335F8()
{
  uint64_t v1 = (void *)v0[56];
  uint64_t v2 = (uint64_t *)(v0[48] + v0[50]);
  uint64_t v3 = *v2;
  uint64_t v4 = v2[1];
  *uint64_t v2 = 0;
  v2[1] = 0;
  v2[2] = 0;
  sub_10053890C(v3, v4);

  uint64_t v5 = v0[55];
  swift_beginAccess();
  if (*(unsigned char *)(v5 + 16) == 1)
  {
    id v6 = sub_100E3C594();
    id v7 = [v6 mode];

    LODWORD(v6) = [v7 wantsToEndForNonPopoverPresentations];
    if (v6)
    {
      id v8 = sub_100E3C594();
      [v8 resetToDefaultModeAnimated:1];
    }
    uint64_t v9 = (void *)swift_task_alloc();
    v0[61] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1005333BC;
    uint64_t v10 = v0[43];
    return sub_100ED3CA0(v10, 1);
  }
  else
  {
    swift_release();
    uint64_t v12 = self;
    id v13 = [v12 mainBundle];
    NSString v14 = String._bridgeToObjectiveC()();
    NSString v15 = String._bridgeToObjectiveC()();
    id v16 = [v13 localizedStringForKey:v14 value:v15 table:0];

    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    id v20 = [v12 mainBundle];
    NSString v21 = String._bridgeToObjectiveC()();
    NSString v22 = String._bridgeToObjectiveC()();
    id v23 = [v20 localizedStringForKey:v21 value:v22 table:0];

    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v26 = v25;

    id v27 = [v12 mainBundle];
    NSString v28 = String._bridgeToObjectiveC()();
    NSString v29 = String._bridgeToObjectiveC()();
    id v30 = [v27 localizedStringForKey:v28 value:v29 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v32 = [self actionWithTitle:v31 style:0 handler:0];

    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v33 = v32;
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v46 = v17;
    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v36 = [self alertControllerWithTitle:v34 message:v35 preferredStyle:1];

    [v36 addAction:v33];
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    NSString v38 = (void *)v0[48];
    id v37 = (void *)v0[49];
    uint64_t v45 = v0[43];
    swift_beginAccess();
    id v39 = (void *)static OS_os_log.shareState;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v41 = sub_100528BE4();
    *(void *)(inited + 32) = v24;
    *(void *)(inited + 40) = v26;
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v41;
    *(void *)(inited + 64) = v41;
    *(void *)(inited + 72) = v46;
    *(void *)(inited + 80) = v19;
    id v42 = v39;
    uint64_t v43 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v42, (uint64_t)&_mh_execute_header, v43, (uint64_t)"Presenting alert: %@ %@", 23, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    [v38 presentViewController:v36 animated:1 completion:0];
    sub_1005387C0(v45, type metadata accessor for CRLBoardIdentifier);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v44 = (uint64_t (*)(void))v0[1];
    return v44();
  }
}

uint64_t sub_100533BDC()
{
  uint64_t v1 = (char *)v0[48];
  uint64_t v2 = (void *)v0[49];
  uint64_t v3 = v0[43];
  swift_release();
  id v4 = *(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shareSheetProvider];
  id v5 = sub_100E3C90C();
  sub_100646C24(v5, v1, 0);

  sub_1005387C0(v3, type metadata accessor for CRLBoardIdentifier);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

void sub_100533CE4()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  id v8 = [v0 mainBundle];
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v8 localizedStringForKey:v9 value:v10 table:0];

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v17 = [self alertControllerWithTitle:v15 message:v16 preferredStyle:1];

  id v18 = [v0 mainBundle];
  NSString v19 = String._bridgeToObjectiveC()();
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v18 localizedStringForKey:v19 value:v20 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v23 = [self actionWithTitle:v22 style:1 handler:0];

  [v17 addAction:v23];
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v24 = (void *)static OS_os_log.shareState;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v26 = sub_100528BE4();
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v26;
  *(void *)(inited + 64) = v26;
  *(void *)(inited + 72) = v12;
  *(void *)(inited + 80) = v14;
  id v27 = v24;
  uint64_t v28 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v27, (uint64_t)&_mh_execute_header, v28, (uint64_t)"Presenting alert: %@ %@", 23, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  [v29 presentViewController:v17 animated:1 completion:0];
}

uint64_t sub_1005340E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[18] = a2;
  v3[19] = a3;
  uint64_t v4 = type metadata accessor for Notification();
  v3[20] = v4;
  v3[21] = *(void *)(v4 - 8);
  v3[22] = swift_task_alloc();
  sub_1005057FC(&qword_101672BE0);
  v3[23] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for NSNotificationCenter.Notifications.Iterator();
  v3[24] = v5;
  v3[25] = *(void *)(v5 - 8);
  v3[26] = swift_task_alloc();
  v3[27] = type metadata accessor for MainActor();
  v3[28] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[29] = v7;
  v3[30] = v6;
  return _swift_task_switch(sub_100534264, v7, v6);
}

uint64_t sub_100534264()
{
  id v1 = [self defaultCenter];
  if (qword_10166F428 != -1) {
    swift_once();
  }
  NSNotificationCenter.notifications(named:object:)();

  NSNotificationCenter.Notifications.makeAsyncIterator()();
  v0[31] = static MainActor.shared.getter();
  uint64_t v2 = sub_100539704(&qword_101672BE8, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator);
  NSString v3 = (void *)swift_task_alloc();
  v0[32] = v3;
  *NSString v3 = v0;
  v3[1] = sub_1005343CC;
  uint64_t v4 = v0[23];
  uint64_t v5 = v0[24];
  return dispatch thunk of AsyncIteratorProtocol.next()(v4, v5, v2);
}

uint64_t sub_1005343CC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 248);
  if (v0)
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v6 = v5;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v7 = sub_100534910;
  }
  else
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v6 = v8;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v7 = sub_100534564;
  }
  return _swift_task_switch(v7, v4, v6);
}

uint64_t sub_100534564()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 240);
  return _swift_task_switch(sub_1005345C8, v1, v2);
}

uint64_t sub_1005345C8()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 168);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 192));
    swift_release();
LABEL_3:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  uint64_t v6 = (_OWORD *)(v0 + 56);
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(*(void *)(v0 + 176), v1, v2);
  uint64_t v7 = Notification.userInfo.getter();
  if (!v7)
  {
    *uint64_t v6 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
LABEL_16:
    sub_100522F00(v0 + 56, &qword_101672BF0);
    goto LABEL_17;
  }
  uint64_t v8 = v7;
  *(void *)(v0 + 112) = 0xD00000000000001DLL;
  *(void *)(v0 + 120) = 0x80000001012394A0;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v8 + 16) && (unint64_t v9 = sub_10095647C(v0 + 16), (v10 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v8 + 56) + 32 * v9, v0 + 56);
  }
  else
  {
    *uint64_t v6 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10050BFE0(v0 + 16);
  if (!*(void *)(v0 + 80)) {
    goto LABEL_16;
  }
  sub_1005057FC(&qword_101672BF8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 160));
    goto LABEL_18;
  }
  uint64_t v12 = *(void *)(v0 + 168);
  uint64_t v11 = *(void *)(v0 + 176);
  uint64_t v13 = *(void *)(v0 + 160);
  char v14 = sub_1006E5068(*(void **)(v0 + 144), *(void *)(v0 + 136));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  if (v14)
  {
    uint64_t v15 = *(void *)(v0 + 152);
    (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 192));
    swift_release();
    swift_beginAccess();
    *(unsigned char *)(v15 + 16) = 1;
    goto LABEL_3;
  }
LABEL_18:
  *(void *)(v0 + 248) = static MainActor.shared.getter();
  uint64_t v16 = sub_100539704(&qword_101672BE8, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator);
  id v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v17;
  *id v17 = v0;
  v17[1] = sub_1005343CC;
  uint64_t v18 = *(void *)(v0 + 184);
  uint64_t v19 = *(void *)(v0 + 192);
  return dispatch thunk of AsyncIteratorProtocol.next()(v18, v19, v16);
}

uint64_t sub_100534910()
{
  *(void *)(v0 + 128) = *(void *)(v0 + 264);
  sub_1005057FC(&qword_101672BD0);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_100534994(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 88) = a3;
  *(void *)(v4 + 96) = a4;
  *(double *)(v4 + 80) = a1;
  return _swift_task_switch(sub_1005349B8, 0, 0);
}

uint64_t sub_1005349B8()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  sub_1005057FC(&qword_101672B70);
  uint64_t inited = swift_initStackObject();
  v0[13] = inited;
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 32) = v2;
  *(void *)(inited + 40) = v1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(void *)(inited + 48) = &unk_101672B80;
  *(void *)(inited + 56) = v5;
  swift_retain();
  uint64_t v6 = swift_task_alloc();
  v0[14] = v6;
  *(void *)(v6 + 16) = inited;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_1016743B0);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[15] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100534B30;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 17, (char *)&type metadata for () + 8, v7, 0, 0, &unk_101672B90, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_100534B30()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_100534CB0;
  }
  else
  {
    swift_setDeallocating();
    sub_1005057FC(&qword_101672BA0);
    swift_arrayDestroy();
    swift_task_dealloc();
    *(unsigned char *)(v2 + 137) = *(unsigned char *)(v2 + 136);
    uint64_t v3 = sub_100534C8C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100534C8C()
{
  if ((*(unsigned char *)(v0 + 137) & 1) == 0) {
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  __break(1u);
  return result;
}

uint64_t sub_100534CB0()
{
  swift_task_dealloc();
  swift_setDeallocating();
  sub_1005057FC(&qword_101672BA0);
  swift_arrayDestroy();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_100534D40()
{
  uint64_t v0 = self;

  return [v0 crl_openICloudPreferencePane];
}

uint64_t sub_100534D78()
{
  v1[31] = v0;
  type metadata accessor for CRLBoardCRDTData(0);
  v1[32] = swift_task_alloc();
  type metadata accessor for UUID();
  v1[33] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v1[34] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[35] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[36] = v3;
  v1[37] = v2;
  return _swift_task_switch(sub_100534E94, v3, v2);
}

uint64_t sub_100534E94()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[38] = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v4 = v0[33];
    uint64_t v3 = v0[34];
    uint64_t v5 = v0[32];
    uint64_t v6 = *(void *)(v0[31] + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);
    v0[39] = v6;
    uint64_t v7 = *(char **)(v6 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    uint64_t v8 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v9 = *(void *)&v7[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100539548(v9, v5, type metadata accessor for CRLBoardCRDTData);
    uint64_t v10 = v7;
    swift_retain();
    sub_1005057FC(&qword_101674550);
    CRRegister.wrappedValue.getter();
    sub_1005387C0(v5, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    uint64_t v11 = (uint64_t *)(*(void *)&v7[v8] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v12 = *v11;
    unint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_100753370(v4, v12, v13, v3);

    uint64_t v14 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardShareController);
    v0[40] = v14;
    uint64_t v15 = *(void **)(*(void *)(v14 + 112) + 112);
    v0[41] = v15;
    swift_retain();
    id v16 = v15;
    id v17 = (void *)swift_task_alloc();
    v0[42] = v17;
    *id v17 = v0;
    v17[1] = sub_100535188;
    uint64_t v18 = v0[34];
    return sub_100ED3CA0(v18, 0);
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"presentCloudShareOptionsViewController()", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-SharingAdditions.swift", 112, 2, 141, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentCloudShareOptionsViewController()", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-SharingAdditions.swift", 112, 2, 141);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
}

uint64_t sub_100535188(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 344) = a1;
  *(void *)(v4 + 352) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 296);
  uint64_t v6 = *(void *)(v3 + 288);
  if (v1) {
    uint64_t v7 = sub_100535718;
  }
  else {
    uint64_t v7 = sub_1005352CC;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_1005352CC()
{
  swift_release();
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 344);
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.shareState;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = inited;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v5 = inited + 32;
  if (v1)
  {
    uint64_t v6 = *(void **)(v0 + 344);
    *(void *)(v0 + 112) = sub_100538CB4();
    *(void *)(v0 + 120) = sub_100539704((unint64_t *)&qword_101682FE0, (void (*)(uint64_t))sub_100538CB4);
    *(void *)(v0 + 88) = v6;
    sub_10053974C((long long *)(v0 + 88), v5);
  }
  else
  {
    *(void *)(inited + 56) = &type metadata for String;
    uint64_t v6 = 0;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(v4 + 32) = 0;
    *(void *)(v4 + 40) = 0xE000000000000000;
  }
  id v7 = v2;
  id v8 = v6;
  uint64_t v9 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Presenting manage share UI for share: %@", 40, 2, v4);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v10 = *(void **)(v0 + 328);
  if (v1)
  {
    uint64_t v11 = *(void *)(v0 + 312);
    uint64_t v12 = *(void *)(v0 + 248);
    id v13 = objc_allocWithZone((Class)UICloudSharingController);
    id v14 = v8;
    id v15 = [v13 initWithShare:v14 container:v10];
    [v15 setDelegate:v12];
    [v15 setModalPresentationStyle:2];
    id v16 = *(void **)(v11 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
    *(void *)(v0 + 152) = &type metadata for CRLFeatureFlags;
    *(void *)(v0 + 160) = sub_1005396A8();
    *(unsigned char *)(v0 + 128) = 12;
    id v17 = v16;
    LOBYTE(v12) = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 128);
    if (v12)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (*(void *)(v0 + 240))
      {

        if (qword_10166FAE0 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v18 = (id)static OS_os_log.crlFollow;
        uint64_t v19 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v18, (uint64_t)&_mh_execute_header, v19, (uint64_t)"Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

        sub_1007ECCE4(0);
      }
    }
    uint64_t v20 = *(void **)(v0 + 328);
    uint64_t v21 = *(void **)(v0 + 304);
    uint64_t v22 = *(void *)(v0 + 272);
    id v23 = *(void **)(v0 + 248);

    [v23 presentViewController:v15 animated:1 completion:0];
    swift_release();

    sub_1005387C0(v22, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    uint64_t v24 = *(void **)(v0 + 304);
    sub_1005387C0(*(void *)(v0 + 272), type metadata accessor for CRLBoardIdentifier);

    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_100535718()
{
  uint64_t v1 = (void *)v0[41];
  uint64_t v2 = (void *)v0[38];
  uint64_t v3 = v0[34];
  swift_release();
  swift_release();

  sub_1005387C0(v3, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_100535880(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v51 = a1;
  uint64_t v5 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v5 - 8, v6);
  id v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v13 - 8, v14);
  id v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v20 = __chkstk_darwin(v17, v19);
  uint64_t v52 = (uint64_t)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20, v22);
  uint64_t v53 = (uint64_t)&v50 - v24;
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v28 = (char *)&v50 - v27;
  __chkstk_darwin(v26, v29);
  NSString v31 = (char *)&v50 - v30;
  NSString v54 = v3;
  id v32 = [v3 view];
  if (!v32)
  {
    __break(1u);
    return;
  }
  id v33 = v32;
  id v34 = [v32 window];

  if (v34)
  {
    id v35 = [a2 zoneID];
    sub_100D29C10((uint64_t)v16);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    {
      sub_100522F00((uint64_t)v16, &qword_101672C30);
      return;
    }
    sub_1005394E4((uint64_t)v16, (uint64_t)v31);
    id v36 = *(char **)(*(void *)&v54[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                   + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    uint64_t v37 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v38 = *(void *)&v36[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100539548(v38, (uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
    id v39 = v36;
    swift_retain();
    sub_1005057FC(&qword_101674550);
    CRRegister.wrappedValue.getter();
    sub_1005387C0((uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    uint64_t v40 = (uint64_t *)(*(void *)&v36[v37] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v41 = *v40;
    unint64_t v42 = v40[1];
    swift_bridgeObjectRetain();
    sub_100753370((uint64_t)v12, v41, v42, (uint64_t)v28);

    LOBYTE(v41) = static UUID.== infix(_:_:)();
    uint64_t v43 = v53;
    sub_100539548((uint64_t)v28, v53, type metadata accessor for CRLBoardIdentifier);
    uint64_t v44 = v52;
    sub_100539548((uint64_t)v31, v52, type metadata accessor for CRLBoardIdentifier);
    if (v41)
    {
      uint64_t v45 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      uint64_t v46 = *(void *)(v43 + v45);
      uint64_t v47 = *(void *)(v43 + v45 + 8);
      uint64_t v48 = (void *)(v44 + v45);
      if (v46 == *v48 && v47 == v48[1])
      {
        sub_1005387C0(v44, type metadata accessor for CRLBoardIdentifier);
        sub_1005387C0(v43, type metadata accessor for CRLBoardIdentifier);
        sub_1005387C0((uint64_t)v28, type metadata accessor for CRLBoardIdentifier);
LABEL_11:
        sub_100DB2E18(v51, v54);
        goto LABEL_12;
      }
      char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_1005387C0(v44, type metadata accessor for CRLBoardIdentifier);
      sub_1005387C0(v43, type metadata accessor for CRLBoardIdentifier);
      sub_1005387C0((uint64_t)v28, type metadata accessor for CRLBoardIdentifier);
      if (v49) {
        goto LABEL_11;
      }
    }
    else
    {
      sub_1005387C0(v44, type metadata accessor for CRLBoardIdentifier);
      sub_1005387C0(v43, type metadata accessor for CRLBoardIdentifier);
      sub_1005387C0((uint64_t)v28, type metadata accessor for CRLBoardIdentifier);
    }
LABEL_12:
    sub_1005387C0((uint64_t)v31, type metadata accessor for CRLBoardIdentifier);
  }
}

void sub_100535F20(void *a1)
{
  id v59 = a1;
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  id v60 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v5 - 8, v6);
  id v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v56 = *(void *)(v9 - 8);
  uint64_t v57 = v9;
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v13 = (void *)static OS_os_log.shareState;
  uint64_t v55 = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  long long v54 = xmmword_10117E810;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v15 = *(char **)(*(void *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v16 = *(void *)&v15[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  id v58 = v1;
  uint64_t v17 = v16 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100539548(v17, (uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
  id v18 = v13;
  uint64_t v19 = v15;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_1005387C0((uint64_t)v8, type metadata accessor for CRLBoardCRDTData);

  swift_release();
  uint64_t v20 = UUID.description.getter();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v12, v57);
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v20;
  *(void *)(inited + 40) = v22;
  uint64_t v23 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v18, (uint64_t)&_mh_execute_header, v23, (uint64_t)"Share completed or updated for board %@", 39, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v24 = type metadata accessor for TaskPriority();
  uint64_t v25 = (uint64_t)v60;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v60, 1, 1, v24);
  type metadata accessor for MainActor();
  uint64_t v26 = (char *)v58;
  id v27 = v59;
  uint64_t v28 = static MainActor.shared.getter();
  uint64_t v29 = (void *)swift_allocObject();
  v29[2] = v28;
  v29[3] = &protocol witness table for MainActor;
  v29[4] = v26;
  v29[5] = v27;
  sub_1006D9114(v25, (uint64_t)&unk_101672C20, (uint64_t)v29);
  swift_release();
  uint64_t v30 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController;
  NSString v31 = *(void **)&v26[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController];
  if (v31)
  {
    id v32 = (id)static OS_os_log.shareState;
    id v33 = v31;
    uint64_t v34 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v32, (uint64_t)&_mh_execute_header, v34, (uint64_t)"Updating toolbar buttons.", 25, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v36 = Strong;
      id v37 = [Strong traitCollection];
      sub_1005919EC(v37, (int)[*(id *)&v36[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] documentIsSharedReadOnly], (uint64_t)v61);
      sub_100591DC0(v61, 0);
      sub_1005393A8((uint64_t)v61);

      id v33 = v37;
    }

    uint64_t v38 = *(void **)&v26[v30];
    if (v38)
    {
      id v39 = (id)static OS_os_log.shareState;
      uint64_t v40 = v38;
      uint64_t v41 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v39, (uint64_t)&_mh_execute_header, v41, (uint64_t)"Updating collaboration button with new item provider.", 53, 2, (uint64_t)_swiftEmptyArrayStorage);

      unint64_t v42 = (char *)sub_100DEA974();
      if (v42)
      {
        uint64_t v43 = v42;
        uint64_t v44 = (id *)&v40[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem];
        swift_beginAccess();
        if (*v44)
        {
          uint64_t v45 = (char *)*v44;
          [v45 setItemProvider:v43];

          uint64_t v40 = v45;
        }

        uint64_t v40 = v43;
      }

      uint64_t v46 = *(void **)&v26[v30];
      if (v46)
      {
        uint64_t v47 = v46;
        sub_100DEA324();
        uint64_t v48 = sub_100DE9FD4();
        char v49 = (void *)static OS_os_log.shareState;
        uint64_t v50 = swift_initStackObject();
        *(_OWORD *)(v50 + 16) = v54;
        *(void *)(v50 + 56) = &type metadata for Int;
        *(void *)(v50 + 64) = &protocol witness table for Int;
        *(void *)(v50 + 32) = v48;
        id v51 = v49;
        uint64_t v52 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v51, (uint64_t)&_mh_execute_header, v52, (uint64_t)"Updating active participant count to: %d.", 41, 2, v50);
        swift_setDeallocating();
        swift_arrayDestroy();

        uint64_t v53 = (id *)&v47[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem];
        swift_beginAccess();
        if (*v53) {
          [*v53 setActiveParticipantCount:v48];
        }
      }
    }
  }
}

uint64_t sub_100536584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  type metadata accessor for CRLBoardCRDTData(0);
  v5[8] = swift_task_alloc();
  type metadata accessor for UUID();
  v5[9] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v5[10] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[11] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[12] = v7;
  v5[13] = v6;
  return _swift_task_switch(sub_1005366A4, v7, v6);
}

uint64_t sub_1005366A4()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 112) = Strong;
  if (Strong)
  {
    uint64_t v3 = *(void *)(v0 + 72);
    uint64_t v2 = *(void *)(v0 + 80);
    uint64_t v4 = *(void *)(v0 + 64);
    id v17 = *(id *)(v0 + 56);
    uint64_t v5 = *(char **)(*(void *)(*(void *)(v0 + 48)
                              + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                  + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    uint64_t v6 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v7 = *(void *)&v5[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100539548(v7, v4, type metadata accessor for CRLBoardCRDTData);
    id v8 = v5;
    swift_retain();
    sub_1005057FC(&qword_101674550);
    CRRegister.wrappedValue.getter();
    sub_1005387C0(v4, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    uint64_t v9 = (uint64_t *)(*(void *)&v5[v6] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v10 = *v9;
    unint64_t v11 = v9[1];
    swift_bridgeObjectRetain();
    sub_100753370(v3, v10, v11, v2);

    id v12 = [v17 share];
    *(void *)(v0 + 120) = v12;
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_10053691C;
    uint64_t v14 = *(void *)(v0 + 80);
    return sub_100ED4738(v14, (uint64_t)v12, 0);
  }
  else
  {
    swift_release();
    **(unsigned char **)(v0 + 40) = *(void *)(v0 + 112) == 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
}

uint64_t sub_10053691C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 120);
  uint64_t v4 = *(void **)(*v1 + 112);
  uint64_t v5 = *(void *)(*v1 + 80);
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  sub_1005387C0(v5, type metadata accessor for CRLBoardIdentifier);

  uint64_t v6 = *(void *)(v2 + 104);
  uint64_t v7 = *(void *)(v2 + 96);
  if (v0) {
    id v8 = sub_100536B54;
  }
  else {
    id v8 = sub_100536AC0;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_100536AC0()
{
  swift_release();
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 112) == 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100536B54()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100536C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  type metadata accessor for CRLBoardCRDTData(0);
  v4[7] = swift_task_alloc();
  type metadata accessor for UUID();
  v4[8] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v4[9] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[10] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[11] = v6;
  v4[12] = v5;
  return _swift_task_switch(sub_100536D60, v6, v5);
}

uint64_t sub_100536D60()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 104) = Strong;
  if (Strong)
  {
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v2 = *(void *)(v0 + 72);
    uint64_t v4 = *(void *)(v0 + 56);
    uint64_t v5 = *(char **)(*(void *)(*(void *)(v0 + 48)
                              + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                  + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    uint64_t v6 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v7 = *(void *)&v5[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100539548(v7, v4, type metadata accessor for CRLBoardCRDTData);
    uint64_t v8 = v5;
    swift_retain();
    sub_1005057FC(&qword_101674550);
    CRRegister.wrappedValue.getter();
    sub_1005387C0(v4, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    uint64_t v9 = (uint64_t *)(*(void *)&v5[v6] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v10 = *v9;
    unint64_t v11 = v9[1];
    swift_bridgeObjectRetain();
    sub_100753370(v3, v10, v11, v2);

    id v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v12;
    *id v12 = v0;
    v12[1] = sub_100536FB0;
    uint64_t v13 = *(void *)(v0 + 72);
    return sub_100ED4738(v13, 0, 1);
  }
  else
  {
    swift_release();
    **(unsigned char **)(v0 + 40) = *(void *)(v0 + 104) == 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
}

uint64_t sub_100536FB0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 104);
  uint64_t v4 = *(void *)(*v1 + 72);
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  sub_1005387C0(v4, type metadata accessor for CRLBoardIdentifier);

  uint64_t v5 = *(void *)(v2 + 96);
  uint64_t v6 = *(void *)(v2 + 88);
  if (v0) {
    uint64_t v7 = sub_1005371D0;
  }
  else {
    uint64_t v7 = sub_10053713C;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_10053713C()
{
  swift_release();
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 104) == 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005371D0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1005373C0(uint64_t a1, uint64_t a2)
{
  [*(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) scrollToCollaborator:a1 withSelectionPath:a2];
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController);
  if (v3)
  {
    uint64_t v4 = qword_10166FBE0;
    uint64_t v5 = v3;
    if (v4 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v6 = (id)static OS_os_log.shareState;
    uint64_t v7 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Dismissing Gelato Interstitial popover", 38, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t v8 = (id *)&v5[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem];
    swift_beginAccess();
    if (*v8) {
      [*v8 dismissPopoverAnimated:1 completion:0];
    }
  }
}

void sub_1005374F4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController);
  if (v1)
  {
    uint64_t v2 = qword_10166FBE0;
    uint64_t v3 = v1;
    if (v2 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v4 = (id)static OS_os_log.shareState;
    uint64_t v5 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v5, (uint64_t)"Dismissing Gelato Interstitial popover", 38, 2, (uint64_t)_swiftEmptyArrayStorage);

    id v6 = (id *)&v3[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem];
    swift_beginAccess();
    if (*v6) {
      [*v6 dismissPopoverAnimated:1 completion:0];
    }
  }
  sub_100733BF8(v0, (uint64_t)sub_10053762C, 0);
}

void sub_10053762C()
{
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.crlDefault;
  uint64_t v1 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v0, (uint64_t)&_mh_execute_header, v1, (uint64_t)"Finished upgrading security.", 28, 2, (uint64_t)_swiftEmptyArrayStorage);
}

id sub_1005376DC(int a1, id a2)
{
  return [a2 dismissViewControllerAnimated:1 completion:0];
}

void sub_1005376F4(void *a1, void *a2, void *a3)
{
  id v6 = objc_allocWithZone((Class)type metadata accessor for CRLiOSParticipantContactViewController());
  id v7 = CRLiOSParticipantContactViewController.init(contact:doneAction:)(a1, a2);
  [v7 setModalPresentationStyle:2];
  [a3 presentViewController:v7 animated:1 completion:0];
}

uint64_t sub_10053779C()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  id v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController];
  if (v5)
  {
    uint64_t v6 = qword_10166FBE0;
    id v7 = v5;
    if (v6 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v8 = (id)static OS_os_log.shareState;
    uint64_t v9 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Dismissing Gelato Interstitial popover", 38, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t v10 = (id *)&v7[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem];
    swift_beginAccess();
    if (*v10) {
      [*v10 dismissPopoverAnimated:1 completion:0];
    }
  }
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
  type metadata accessor for MainActor();
  id v12 = v0;
  uint64_t v13 = static MainActor.shared.getter();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = v12;
  sub_1005912FC((uint64_t)v4, (uint64_t)&unk_101672C40, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_1005379A4(uint64_t a1)
{
  v1[2] = a1;
  v1[3] = type metadata accessor for MainActor();
  v1[4] = static MainActor.shared.getter();
  uint64_t v2 = (void *)swift_task_alloc();
  v1[5] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100537A54;
  return sub_100534D78();
}

uint64_t sub_100537A54()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v4 = v3;
    uint64_t v5 = sub_100539770;
  }
  else
  {
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v4 = v6;
    uint64_t v5 = sub_100537BD8;
  }
  return _swift_task_switch(v5, v2, v4);
}

uint64_t sub_100537BD8()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = (BOOL *)v0[2];
  swift_release();
  *uint64_t v2 = v1 != 0;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100537C4C(double a1)
{
  *(double *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100537C6C, 0, 0);
}

uint64_t sub_100537C6C(unint64_t a1)
{
  double v2 = *(double *)(v1 + 16) * 1000000000.0;
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v2 <= -1.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v2 >= 1.84467441e19)
  {
LABEL_9:
    __break(1u);
    return static Task<>.sleep(nanoseconds:)(a1);
  }
  unint64_t v3 = (unint64_t)v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100537D50;
  a1 = v3;
  return static Task<>.sleep(nanoseconds:)(a1);
}

uint64_t sub_100537D50()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return _swift_task_switch(sub_100537E84, 0, 0);
  }
}

uint64_t sub_100537E84()
{
  uint64_t v1 = *(void *)(v0 + 32);
  static Task<>.checkCancellation()();
  if (!v1)
  {
    sub_100538C60();
    swift_allocError();
    swift_willThrow();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100537F1C(uint64_t a1, uint64_t a2)
{
  v2[9] = a1;
  v2[10] = a2;
  sub_1005057FC(&qword_101672BB0);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  return _swift_task_switch(sub_100537FC0, 0, 0);
}

uint64_t sub_100537FC0()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    unint64_t v3 = (long long *)(v1 + 32);
    uint64_t v4 = type metadata accessor for TaskPriority();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    uint64_t v21 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v20 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v8 = *(void *)(v0 + 88);
      uint64_t v7 = *(void *)(v0 + 96);
      long long v23 = *v3;
      v22(v7, 1, 1, v4);
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = 0;
      uint64_t v10 = (void *)(v9 + 16);
      *(void *)(v9 + 24) = 0;
      *(_OWORD *)(v9 + 32) = v23;
      sub_100538BF8(v7, v8);
      LODWORD(v8) = (*v21)(v8, 1, v4);
      swift_retain_n();
      uint64_t v11 = *(void *)(v0 + 88);
      if (v8 == 1)
      {
        sub_100522F00(*(void *)(v0 + 88), &qword_101672BB0);
        if (!*v10) {
          goto LABEL_8;
        }
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*v20)(v11, v4);
        if (!*v10)
        {
LABEL_8:
          uint64_t v12 = 0;
          uint64_t v14 = 0;
          goto LABEL_9;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
LABEL_9:
      uint64_t v15 = **(void **)(v0 + 72);
      uint64_t v16 = v14 | v12;
      if (v14 | v12)
      {
        uint64_t v16 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v12;
        *(void *)(v0 + 40) = v14;
      }
      uint64_t v6 = *(void *)(v0 + 96);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v16;
      *(void *)(v0 + 64) = v15;
      swift_task_create();
      swift_release();
      swift_release();
      sub_100522F00(v6, &qword_101672BB0);
      ++v3;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  id v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v17;
  uint64_t v18 = sub_1005057FC(&qword_101672BC8);
  *id v17 = v0;
  v17[1] = sub_1005382D4;
  return ThrowingTaskGroup.next(isolation:)(v0 + 120, 0, 0, v18);
}

uint64_t sub_1005382D4()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10053849C;
  }
  else {
    uint64_t v2 = sub_1005383E8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005383E8()
{
  sub_1005057FC(&qword_101672BD0);
  ThrowingTaskGroup.cancelAll()();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 120);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10053849C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100538508(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_100528488;
  return v8(a1);
}

uint64_t sub_1005385E4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1005385F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_100538694;
  return sub_100537F1C(a2, a3);
}

uint64_t sub_100538694(char a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(unsigned char **)(v4 + 16) = a1 & 1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_1005387A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005387B8()
{
  return swift_release();
}

uint64_t sub_1005387C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100538820()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100538860(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100528D08;
  return sub_1005340E0(a1, v5, v4);
}

uint64_t sub_10053890C(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10053891C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10053892C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528D08;
  v3[2] = v2;
  return _swift_task_switch(sub_100537C6C, 0, 0);
}

uint64_t sub_1005389D8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100528D08;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_101672B88 + dword_101672B88);
  return v8(a1, a2, v6);
}

uint64_t sub_100538A94()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100538AD4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100528488;
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[2] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_100528488;
  return v8(a1);
}

uint64_t sub_100538BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100538C60()
{
  unint64_t result = qword_101672BD8;
  if (!qword_101672BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101672BD8);
  }
  return result;
}

unint64_t sub_100538CB4()
{
  unint64_t result = qword_101672C00;
  if (!qword_101672C00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_101672C00);
  }
  return result;
}

uint64_t sub_100538CF4()
{
  uint64_t v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(char **)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v6 = *(void *)&v5[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100539548(v6, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  uint64_t v7 = v5;
  sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  uint64_t v8 = v10[1];
  sub_1005387C0((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);

  return v8;
}

void sub_100538E28()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  id v37 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v35 - 8);
  __chkstk_darwin(v35, v9);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v12 = (void *)static OS_os_log.shareState;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v14 = *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator];
  id v36 = v0;
  uint64_t v15 = *(char **)(v14 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v16 = *(void *)&v15[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100539548(v16, (uint64_t)v7, type metadata accessor for CRLBoardCRDTData);
  id v17 = v12;
  uint64_t v18 = v15;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_1005387C0((uint64_t)v7, type metadata accessor for CRLBoardCRDTData);

  swift_release();
  uint64_t v19 = UUID.description.getter();
  uint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v35);
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v19;
  *(void *)(inited + 40) = v21;
  uint64_t v22 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v17, (uint64_t)&_mh_execute_header, v22, (uint64_t)"Stopped sharing for board %@", 28, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v23 = type metadata accessor for TaskPriority();
  uint64_t v24 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v37, 1, 1, v23);
  type metadata accessor for MainActor();
  uint64_t v25 = (char *)v36;
  uint64_t v26 = static MainActor.shared.getter();
  id v27 = (void *)swift_allocObject();
  v27[2] = v26;
  v27[3] = &protocol witness table for MainActor;
  v27[4] = v25;
  sub_1006D9114(v24, (uint64_t)&unk_101672C10, (uint64_t)v27);
  swift_release();
  uint64_t v28 = *(void **)&v25[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController];
  if (v28)
  {
    id v29 = (id)static OS_os_log.shareState;
    id v30 = v28;
    uint64_t v31 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v29, (uint64_t)&_mh_execute_header, v31, (uint64_t)"Updating toolbar buttons.", 25, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v33 = Strong;
      id v34 = [Strong traitCollection];
      sub_1005919EC(v34, (int)[*(id *)&v33[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] documentIsSharedReadOnly], (uint64_t)v38);
      sub_100591DC0(v38, 0);
      sub_1005393A8((uint64_t)v38);

      id v30 = v34;
    }
  }
}

uint64_t sub_1005392F4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100536C44(a1, v4, v5, v6);
}

uint64_t sub_1005393A8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005393DC()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100539424(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_100536584(a1, v4, v5, v7, v6);
}

uint64_t sub_1005394E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100539548(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005395B4()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1005395F4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528488;
  return sub_1005379A4(a1);
}

unint64_t sub_1005396A8()
{
  unint64_t result = qword_101672C50;
  if (!qword_101672C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101672C50);
  }
  return result;
}

uint64_t sub_100539704(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10053974C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

UIFontTextStyle sub_100539774()
{
  qword_101719E00 = (uint64_t)UIFontTextStyleTitle2;
  return UIFontTextStyleTitle2;
}

UIFontWeight sub_10053978C()
{
  UIFontWeight result = UIFontWeightBold;
  qword_101719E08 = *(void *)&UIFontWeightBold;
  return result;
}

id sub_1005397A4(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_labelColor, &qword_101719E10);
}

UIFontTextStyle sub_1005397B8()
{
  qword_101719E18 = (uint64_t)UIFontTextStyleBody;
  return UIFontTextStyleBody;
}

UIFontWeight sub_1005397D0()
{
  UIFontWeight result = UIFontWeightRegular;
  qword_101719E20 = *(void *)&UIFontWeightRegular;
  return result;
}

id sub_1005397E8(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_secondaryLabelColor, &qword_101719E28);
}

void sub_1005397FC()
{
  qword_101719E30 = 0x4028000000000000;
}

void sub_10053980C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier;
  int v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier
                          + 24);
  if ((v2 + 64) <= 0x3Du
    && (v2 == 192 ? (BOOL v3 = (*(void *)(v1 + 8) | *(void *)(v1 + 16) | *(void *)v1) == 0) : (BOOL v3 = 0), v3))
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_showsRecentlyDeletedInfo) = 1;
    sub_10053BB6C(0, 0, 0, 0xC0u);
  }
  else
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_showsRecentlyDeletedInfo) = 0;
  }
  sub_100539D2C();
  unsigned int v4 = *(unsigned __int8 *)(v1 + 24);
  if (v4 <= 0xFD)
  {
    uint64_t v8 = *(void **)(v1 + 8);
    uint64_t v7 = *(void *)(v1 + 16);
    uint64_t v9 = *(void **)v1;
    sub_10053BB6C(v9, v8, v7, v4);
    sub_100B80A34((unint64_t)v9, (unint64_t)v8, v7, v4);
    sub_10053BB8C(v9, v8, v7, v4);
    uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_titleLabel);
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
    uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_titleLabel);
  }
  [v6 setText:v5];

  *(unsigned char *)(v0
           + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_shouldAnimateNextCollapseStateToggle) = 0;

  sub_100539978();
}

void sub_100539978()
{
  unsigned int v1 = v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier
                         + 24];
  BOOL v2 = v1 >= 0xFE;
  int v3 = v1 & 0xC0;
  uint64_t v6 = !v2
    && v3 == 128
    && *(void *)&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier] == 0;
  uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_collapseButton];
  [v7 setHidden:v6 ^ 1];
  [*(id *)&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_pinLabelToLeadingEdgeOfCollapseButtonConstraint] setActive:v6];
  uint64_t v8 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_isCollapsed;
  int v9 = v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_isCollapsed];
  id v10 = [self mainBundle];
  if (v9 == 1)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = [v10 localizedStringForKey:v11 value:v12 table:0];
  }
  else
  {
    NSString v14 = String._bridgeToObjectiveC()();
    NSString v15 = String._bridgeToObjectiveC()();
    id v13 = [v10 localizedStringForKey:v14 value:v15 table:0];
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setAccessibilityLabel:v16];

  double v17 = 0.0;
  if (v0[v8]) {
    double v18 = 90.0;
  }
  else {
    double v18 = 0.0;
  }
  if (sub_1003E8750()) {
    double v18 = -v18;
  }
  if (v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_shouldAnimateNextCollapseStateToggle]) {
    double v17 = 0.2;
  }
  uint64_t v19 = self;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v0;
  *(double *)(v20 + 24) = v18;
  v23[4] = sub_10053BEA8;
  v23[5] = v20;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = *(void *)"";
  v23[2] = sub_100679958;
  v23[3] = &unk_101507448;
  uint64_t v21 = _Block_copy(v23);
  uint64_t v22 = v0;
  swift_release();
  [v19 animateWithDuration:v21 animations:v17];
  _Block_release(v21);
}

void sub_100539C9C(uint64_t a1, double a2)
{
  id v3 = [*(id *)(a1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_collapseButton) imageView];
  if (v3)
  {
    unsigned int v4 = v3;
    double v5 = sub_10053BEB4(a2);
    CGAffineTransformMakeRotation(&v6, v5);
    [v4 setTransform:&v6];
  }
}

void sub_100539D2C()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_showsRecentlyDeletedInfo) == 1)
  {
    if (qword_10166EB80 != -1) {
      swift_once();
    }
    uint64_t v1 = qword_10166EB88;
    id v2 = (id)qword_101719E18;
    if (v1 != -1) {
      swift_once();
    }
    if (qword_10166EB90 != -1) {
      swift_once();
    }
    id v9 = (id)qword_101719E28;
    uint64_t v3 = 1;
  }
  else
  {
    if (qword_10166EB68 != -1) {
      swift_once();
    }
    uint64_t v4 = qword_10166EB70;
    id v2 = (id)qword_101719E00;
    if (v4 != -1) {
      swift_once();
    }
    if (qword_10166EB78 != -1) {
      swift_once();
    }
    id v9 = (id)qword_101719E10;
    if (sub_1003E8750()) {
      uint64_t v3 = 0;
    }
    else {
      uint64_t v3 = 2;
    }
  }
  double v5 = *(void **)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_titleLabel);
  id v6 = [self preferredFontDescriptorWithTextStyle:v2];
  uint64_t v7 = self;
  [v6 pointSize];
  id v8 = [v7 systemFontOfSize:];

  [v5 setFont:v8];
  [v5 setTextColor:v9];
  [v5 setTextAlignment:v3];
}

char *sub_100539FD4(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = sub_1005057FC(&qword_10168A8B0);
  __chkstk_darwin(v9 - 8, v10);
  NSString v12 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = &v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier];
  *((void *)v13 + 1) = 0;
  *((void *)v13 + 2) = 0;
  *(void *)id v13 = 0;
  v13[24] = -2;
  v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_showsRecentlyDeletedInfo] = 0;
  v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_isCollapsed] = 0;
  uint64_t v14 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_titleLabel;
  id v15 = objc_allocWithZone((Class)UILabel);
  NSString v16 = v4;
  *(void *)&v4[v14] = [v15 init];
  *(void *)&v16[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_pinLabelToLeadingEdgeOfCollapseButtonConstraint] = 0;
  *(void *)&v16[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_titleLabelTopConstraint] = 0;
  uint64_t v17 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_collapseButton;
  *(void *)&v16[v17] = [objc_allocWithZone((Class)UIButton) init];
  v16[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_shouldAnimateNextCollapseStateToggle] = 0;
  *(void *)&v16[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_delegate + 8] = 0;
  swift_unknownObjectWeakInit();

  double v18 = (objc_class *)_s13SectionHeaderCMa();
  v86.receiver = v16;
  v86.super_class = v18;
  uint64_t v19 = (char *)[super initWithFrame:a1, a2, a3, a4];
  uint64_t v20 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_titleLabel;
  uint64_t v21 = *(void **)&v19[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_titleLabel];
  uint64_t v22 = v19;
  [v21 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v21 setNumberOfLines:0];
  LODWORD(v23) = 1148846080;
  [v21 setContentCompressionResistancePriority:1 forAxis:v23];
  sub_100539D2C();
  [v22 addSubview:v21];
  uint64_t v24 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_collapseButton;
  static UIButton.Configuration.plain()();
  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = [self systemImageNamed:v25];

  UIButton.Configuration.image.setter();
  uint64_t v27 = type metadata accessor for UIButton.Configuration();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v12, 0, 1, v27);
  UIButton.configuration.setter();
  uint64_t v28 = *(void **)&v22[v24];
  [v28 setTranslatesAutoresizingMaskIntoConstraints:0];
  LODWORD(v29) = 1148846080;
  [v28 setContentCompressionResistancePriority:0 forAxis:v29];
  [v28 addTarget:v22 action:"collapseButtonTapped:" forControlEvents:64];
  [v28 setContentHorizontalAlignment:5];
  id v30 = self;
  id v31 = v28;
  id v32 = [v30 mainBundle];
  NSString v33 = String._bridgeToObjectiveC()();
  NSString v34 = String._bridgeToObjectiveC()();
  id v35 = [v32 localizedStringForKey:v33 value:v34 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v31 setAccessibilityLabel:v36];

  id v37 = [*(id *)&v22[v24] imageView];
  if (v37)
  {
    uint64_t v38 = v37;
    [v37 setClipsToBounds:0];
  }
  id v39 = [*(id *)&v22[v24] imageView];
  if (v39)
  {
    uint64_t v40 = v39;
    [v39 setContentMode:4];
  }
  [v22 addSubview:*(void *)&v22[v24]];
  id v41 = [v22 trailingAnchor];
  id v42 = [*(id *)&v19[v20] trailingAnchor];
  id v43 = [v41 constraintEqualToAnchor:v42];

  type metadata accessor for UILayoutPriority(0);
  int v84 = 1065353216;
  int v85 = 1148846080;
  sub_10053BFE0();
  static _UIKitNumericRawRepresentable.- infix(_:_:)();
  LODWORD(v44) = v83;
  [v43 setPriority:v44];
  id v45 = [*(id *)&v22[v24] leadingAnchor];
  id v46 = [*(id *)&v19[v20] trailingAnchor];
  if (qword_10166EB98 != -1) {
    swift_once();
  }
  id v47 = [v45 constraintEqualToAnchor:v46 constant:*(double *)&qword_101719E30];

  uint64_t v48 = *(void **)&v22[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_pinLabelToLeadingEdgeOfCollapseButtonConstraint];
  *(void *)&v22[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_pinLabelToLeadingEdgeOfCollapseButtonConstraint] = v47;
  id v82 = v47;

  id v49 = [*(id *)&v19[v20] topAnchor];
  id v50 = [v22 topAnchor];
  uint64_t v51 = v20;
  id v52 = [v49 constraintEqualToAnchor:v50];

  uint64_t v53 = *(void **)&v22[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_titleLabelTopConstraint];
  *(void *)&v22[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_titleLabelTopConstraint] = v52;
  id v54 = v52;

  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_10117E9C0;
  *(void *)(v55 + 32) = v54;
  uint64_t v56 = *(void **)&v19[v20];
  id v81 = v54;
  id v57 = [v56 leadingAnchor];
  id v58 = [v22 leadingAnchor];
  id v59 = [v57 constraintEqualToAnchor:v58];

  *(void *)(v55 + 40) = v59;
  *(void *)(v55 + 48) = v43;
  id v80 = v43;
  id v60 = [v22 bottomAnchor];
  id v61 = [*(id *)&v19[v51] bottomAnchor];
  id v62 = [v60 constraintEqualToAnchor:v61 constant:8.0];

  *(void *)(v55 + 56) = v62;
  id v63 = [*(id *)&v22[v24] centerYAnchor];
  id v64 = [*(id *)&v19[v51] centerYAnchor];
  id v65 = [v63 constraintEqualToAnchor:v64];

  *(void *)(v55 + 64) = v65;
  id v66 = [v22 trailingAnchor];
  id v67 = [*(id *)&v22[v24] trailingAnchor];
  id v68 = [v66 constraintEqualToAnchor:v67 constant:*(double *)&qword_101719E30];

  *(void *)(v55 + 72) = v68;
  id v69 = [*(id *)&v22[v24] heightAnchor];
  id v70 = [*(id *)&v19[v51] heightAnchor];
  id v71 = [v69 constraintEqualToAnchor:v70];

  *(void *)(v55 + 80) = v71;
  id v72 = *(void **)&v22[v24];
  id v73 = [v72 widthAnchor];
  id v74 = [v72 heightAnchor];
  id v75 = [v73 constraintEqualToAnchor:v74];

  *(void *)(v55 + 88) = v75;
  uint64_t v83 = v55;
  specialized Array._endMutation()();
  NSString v76 = self;
  sub_10053BBC0();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v76 activateConstraints:isa];

  return v22;
}

id sub_10053A9F8()
{
  return sub_10053AD10(_s13SectionHeaderCMa);
}

uint64_t _s13SectionHeaderCMa()
{
  return self;
}

id sub_10053AACC(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_separatorColor, &qword_101719E38);
}

id sub_10053AAE0(double a1, double a2, double a3, double a4)
{
  v18.receiver = v4;
  v18.super_class = (Class)_s13GridSeparatorCMa();
  [super initWithFrame:a1, a2, a3, a4];
  uint64_t v10 = qword_10166EBA0;
  id v11 = v9;
  if (v10 != -1) {
    swift_once();
  }
  [v11 setBackgroundColor:qword_101719E38];
  NSString v12 = self;
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_101177E70;
  id v14 = [v11 heightAnchor];

  id v15 = [v14 constraintEqualToConstant:0.5];
  *(void *)(v13 + 32) = v15;
  specialized Array._endMutation()();
  sub_10053BBC0();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v12 activateConstraints:isa];

  return v11;
}

id sub_10053ACF8()
{
  return sub_10053AD10(_s13GridSeparatorCMa);
}

id sub_10053AD10(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t _s13GridSeparatorCMa()
{
  return self;
}

void sub_10053AD6C()
{
  qword_101672C58 = 0x4038000000000000;
}

void sub_10053AD7C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_iCloudStatusLabel;
  id v10 = objc_allocWithZone((Class)UILabel);
  id v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  *(void *)&v11[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_syncDidEndObserver] = 0;
  *(void *)&v11[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_syncDidBeginObserver] = 0;

  v62.receiver = v11;
  v62.super_class = (Class)_s18iCloudStatusFooterCMa();
  NSString v12 = (char *)objc_msgSendSuper2(&v62, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v13 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_iCloudStatusLabel;
  id v14 = *(void **)&v12[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_iCloudStatusLabel];
  id v15 = v12;
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v14 setNumberOfLines:1];
  [v14 setTextAlignment:1];
  NSString v16 = self;
  id v17 = v14;
  id v18 = [v16 mainBundle];
  NSString v19 = String._bridgeToObjectiveC()();
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v18 localizedStringForKey:v19 value:v20 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v17 setText:v22];

  double v23 = *(void **)&v12[v13];
  uint64_t v24 = self;
  id v25 = v23;
  id v26 = [v24 preferredFontForTextStyle:UIFontTextStyleFootnote compatibleWithTraitCollection:0];
  [v25 setFont:v26];

  uint64_t v27 = *(void **)&v12[v13];
  [v27 setAdjustsFontForContentSizeCategory:1];
  [v15 addSubview:v27];
  uint64_t v28 = self;
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_10117DF50;
  id v30 = [v15 centerXAnchor];
  id v31 = [v27 centerXAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31];

  *(void *)(v29 + 32) = v32;
  id v33 = [v15 bottomAnchor];
  id v34 = [*(id *)&v12[v13] lastBaselineAnchor];
  if (qword_10166EBA8 != -1) {
    swift_once();
  }
  id v35 = [v33 constraintEqualToAnchor:v34 constant:*(double *)&qword_101672C58];

  *(void *)(v29 + 40) = v35;
  aBlock = (void **)v29;
  specialized Array._endMutation()();
  sub_10053BBC0();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v28 activateConstraints:isa];

  id v37 = self;
  id v38 = [v37 defaultCenter];
  if (qword_10166FE48 != -1) {
    swift_once();
  }
  uint64_t v39 = qword_10171C3A8;
  uint64_t v40 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v60 = sub_10053BC38;
  uint64_t v61 = v40;
  aBlock = _NSConcreteStackBlock;
  uint64_t v57 = *(void *)"";
  id v58 = sub_1005E5680;
  id v59 = &unk_101507380;
  id v41 = _Block_copy(&aBlock);
  swift_release();
  id v42 = [v38 addObserverForName:v39 object:0 queue:0 usingBlock:v41];
  _Block_release(v41);

  *(void *)&v15[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_syncDidBeginObserver] = v42;
  swift_unknownObjectRelease();
  id v43 = [v37 defaultCenter];
  if (qword_10166FE40 != -1) {
    swift_once();
  }
  uint64_t v44 = qword_10171C3A0;
  uint64_t v45 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v60 = sub_10053BC88;
  uint64_t v61 = v45;
  aBlock = _NSConcreteStackBlock;
  uint64_t v57 = *(void *)"";
  id v58 = sub_1005E5680;
  id v59 = &unk_1015073A8;
  id v46 = _Block_copy(&aBlock);
  swift_release();
  id v47 = [v43 addObserverForName:v44 object:0 queue:0 usingBlock:v46];
  _Block_release(v46);

  *(void *)&v15[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_syncDidEndObserver] = v47;
  swift_unknownObjectRelease();
  id v48 = [self sharedApplication];
  id v49 = [v48 delegate];

  if (v49)
  {
    type metadata accessor for CRLiOSAppDelegate();
    uint64_t v50 = *(void *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_syncDriver);
    if (v50)
    {
      if (*(unsigned char *)(v50 + 136))
      {
        swift_unknownObjectRelease();
        char v51 = 0;
      }
      else
      {
        char v52 = *(unsigned char *)(v50 + 137);
        swift_unknownObjectRelease();
        char v51 = v52 ^ 1;
      }
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isFetchingChanges", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2, 206, (uint64_t)"Asking for fetch status before the sync driver exists.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
      LOBYTE(v55) = 2;
      uint64_t v53 = "Asking for fetch status before the sync driver exists.";
      uint64_t v54 = 54;
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFetchingChanges", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2, 206);
      swift_unknownObjectRelease();
      char v51 = 1;
    }
    [*(id *)&v12[v13] setHidden:v51 & 1, v53, v54, v55];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10053B54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 48) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10053B5E4, v6, v5);
}

uint64_t sub_10053B5E4()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v2 = (void *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_iCloudStatusLabel) setHidden:0];
  }
  objc_super v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10053B690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v11 = static MainActor.shared.getter();
  NSString v12 = (void *)swift_allocObject();
  v12[2] = v11;
  v12[3] = &protocol witness table for MainActor;
  v12[4] = a2;
  sub_1005912D0((uint64_t)v9, a4, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_10053B7A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 48) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10053B83C, v6, v5);
}

uint64_t sub_10053B83C()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v2 = (void *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_iCloudStatusLabel) setHidden:1];
  }
  objc_super v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

id sub_10053B9C4()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_syncDidEndObserver];
  if (v1)
  {
    id v2 = self;
    swift_unknownObjectRetain();
    id v3 = [v2 defaultCenter];
    [v3 removeObserver:v1];
    swift_unknownObjectRelease();
  }
  uint64_t v4 = *(void *)&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_syncDidBeginObserver];
  if (v4)
  {
    uint64_t v5 = self;
    swift_unknownObjectRetain();
    id v6 = [v5 defaultCenter];
    [v6 removeObserver:v4];
    swift_unknownObjectRelease();
  }
  v8.receiver = v0;
  v8.super_class = (Class)_s18iCloudStatusFooterCMa();
  return [super dealloc];
}

uint64_t _s18iCloudStatusFooterCMa()
{
  return self;
}

id sub_10053BB6C(id result, id a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 >> 6 == 2) {
    return result;
  }
  if (!(a4 >> 6)) {
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

void sub_10053BB8C(void *a1, id a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 0xFDu) {
    sub_10053BBA0(a1, a2, a3, a4);
  }
}

void sub_10053BBA0(void *a1, id a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 >> 6 == 2)
  {
  }
  else if (!(a4 >> 6))
  {
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_10053BBC0()
{
  unint64_t result = qword_101674200;
  if (!qword_101674200)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101674200);
  }
  return result;
}

uint64_t sub_10053BC00()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10053BC38(uint64_t a1)
{
  return sub_10053B690(a1, v1, (uint64_t)&unk_101507408, (uint64_t)&unk_101672D50);
}

uint64_t sub_10053BC70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10053BC80()
{
  return swift_release();
}

uint64_t sub_10053BC88(uint64_t a1)
{
  return sub_10053B690(a1, v1, (uint64_t)&unk_1015073E0, (uint64_t)&unk_101672D40);
}

uint64_t sub_10053BCC4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528488;
  return sub_10053B7A4(a1, v4, v5, v6);
}

uint64_t sub_10053BD7C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10053BDBC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_10053B54C(a1, v4, v5, v6);
}

uint64_t sub_10053BE70()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10053BEA8()
{
  sub_100539C9C(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

double sub_10053BEB4(double a1)
{
  return a1 * 0.0174532925;
}

void sub_10053BEC4()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier];
  *((void *)v1 + 1) = 0;
  *((void *)v1 + 2) = 0;
  *(void *)uint64_t v1 = 0;
  v1[24] = -2;
  v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_showsRecentlyDeletedInfo] = 0;
  v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_isCollapsed] = 0;
  uint64_t v2 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_titleLabel;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_pinLabelToLeadingEdgeOfCollapseButtonConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_titleLabelTopConstraint] = 0;
  uint64_t v3 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_collapseButton;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UIButton) init];
  v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_shouldAnimateNextCollapseStateToggle] = 0;
  *(void *)&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_delegate + 8] = 0;
  swift_unknownObjectWeakInit();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

unint64_t sub_10053BFE0()
{
  unint64_t result = qword_101672D58;
  if (!qword_101672D58)
  {
    type metadata accessor for UILayoutPriority(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101672D58);
  }
  return result;
}

double sub_10053C048(uint64_t a1)
{
  return *(double *)(v1 + *(int *)(a1 + 32) + 8) + *(double *)(v1 + *(int *)(a1 + 32) + 16);
}

double sub_10053C05C(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + *(int *)(a1 + 48));
  uint64_t v4 = v2[3];
  uint64_t v3 = v2[4];
  sub_10050F848(v2, v4);
  double v5 = (*(double (**)(uint64_t))(*(void *)(v3 + 32) + 8))(v4);
  uint64_t v7 = v2[3];
  uint64_t v6 = v2[4];
  sub_10050F848(v2, v7);
  return v5 + (*(double (**)(uint64_t))(*(void *)(v6 + 32) + 32))(v7);
}

double sub_10053C0F8()
{
  return *(double *)(v0 + 8) + *(double *)(v0 + 16);
}

double sub_10053C104()
{
  double v1 = *(double *)(v0 + 8);
  return v1 + sub_1006C9400(*(void *)v0);
}

double sub_10053C134()
{
  double v1 = v0[2];
  sub_1006FA854(*v0, v1);
  return v1 + v2;
}

double sub_10053C168()
{
  double v1 = *(double *)(v0 + 8);
  sub_100787DE4(v1);
  return v1 + v2;
}

double sub_10053C198(uint64_t a1)
{
  double v2 = *(double *)(v1 + *(int *)(a1 + 20));
  sub_100883CEC();
  return v2 + v3;
}

double sub_10053C1C4()
{
  double v1 = *(double *)(v0 + 8);
  return v1 + sub_100B32E14(*(void *)v0);
}

double sub_10053C1F4()
{
  double v1 = *(double *)(v0 + 32);
  return v1 + sub_100F7E0F4();
}

double sub_10053C21C()
{
  double v1 = *(double *)(v0 + 32);
  uint64_t v12 = 0;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v7 = 0u;
  double v2 = CACurrentMediaTime();
  id v3 = sub_100F7F094((uint64_t)&v7, v2);
  sub_10053C294((uint64_t)&v7);
  [v3 duration:v7, v8, v9, v10, v11, v12];
  double v5 = v4;

  return v1 + v5;
}

uint64_t sub_10053C294(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101684000);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

NSString sub_10053C2F4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_101719E40 = (uint64_t)result;
  return result;
}

NSString sub_10053C32C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_101719E48 = (uint64_t)result;
  return result;
}

id sub_10053C364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)&v10[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight] = a1;
  NSString v16 = &v10[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_shareURL];
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v16, a2, v17);
  NSString v19 = &v10[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardTitle];
  *NSString v19 = a3;
  v19[1] = a4;
  sub_100540CFC(a5, (uint64_t)&v10[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardIdentifier]);
  NSString v20 = &v10[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_timeStamp];
  uint64_t v21 = type metadata accessor for Date();
  uint64_t v22 = *(void *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v20, a6, v21);
  v10[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_accepted] = a7;
  double v23 = &v10[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_shareString];
  *double v23 = a8;
  v23[1] = a9;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_previewImage] = a10;
  v28.receiver = v10;
  v28.super_class = (Class)type metadata accessor for CRLSharedHighlight();
  [super init];
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(a6, v21);
  sub_100510028(a5);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a2, v17);
  return v24;
}

uint64_t sub_10053C5C0()
{
  _StringGuts.grow(_:)(82);
  v1._countAndFlagsBits = 0x203A4C5255;
  v1._object = (void *)0xE500000000000000;
  String.append(_:)(v1);
  type metadata accessor for URL();
  sub_100542288(&qword_10168E250, (void (*)(uint64_t))&type metadata accessor for URL);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 0x3A656C7469542020;
  v3._object = (void *)0xE900000000000020;
  String.append(_:)(v3);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardTitle);
  double v5 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardTitle + 8);
  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = v4;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 0x69746E6564492020;
  v7._object = (void *)0xEE00203A72656966;
  String.append(_:)(v7);
  v8._countAndFlagsBits = sub_100753038();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0x5320656D69542020;
  v9._object = (void *)0xEE00203A706D6174;
  String.append(_:)(v9);
  type metadata accessor for Date();
  sub_100542288((unint64_t *)&unk_101672F80, (void (*)(uint64_t))&type metadata accessor for Date);
  v10._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 0x7470656363412020;
  v11._object = (void *)0xEC000000203A6465;
  String.append(_:)(v11);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_accepted)) {
    uint64_t v12 = 1702195828;
  }
  else {
    uint64_t v12 = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_accepted)) {
    unint64_t v13 = 0xE400000000000000;
  }
  else {
    unint64_t v13 = 0xE500000000000000;
  }
  unint64_t v14 = v13;
  String.append(_:)(*(Swift::String *)&v12);
  swift_bridgeObjectRelease();
  v15._object = (void *)0x8000000101239E20;
  v15._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v15);
  uint64_t v16 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_shareString);
  uint64_t v17 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_shareString + 8);
  swift_bridgeObjectRetain();
  v18._countAndFlagsBits = v16;
  v18._object = v17;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  return 0;
}

id sub_10053C8B8()
{
  return sub_10053E55C(0, type metadata accessor for CRLSharedHighlight);
}

uint64_t sub_10053C9E0()
{
  return type metadata accessor for CRLSharedHighlight();
}

uint64_t type metadata accessor for CRLSharedHighlight()
{
  uint64_t result = qword_101672D90;
  if (!qword_101672D90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10053CA34()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for Date();
      if (v3 <= 0x3F) {
        return swift_updateClassMetadata2();
      }
    }
  }
  return result;
}

void sub_10053CB64()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_highlightCenter;
  id v2 = objc_allocWithZone((Class)SWHighlightCenter);
  unint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  *(void *)&v3[OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_initialSyncTimer] = 0;
  v3[OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_isSyncing] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights] = _swiftEmptyArrayStorage;
  uint64_t v4 = OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_highlightObservers;
  *(void *)&v3[v4] = [self weakObjectsHashTable];

  v23.receiver = v3;
  v23.super_class = (Class)type metadata accessor for CRLSharedHighlightController();
  double v5 = (char *)[super init];
  Swift::String v6 = *(void **)&v5[OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_highlightCenter];
  Swift::String v7 = v5;
  [v6 setDelegate:v7];
  id v8 = [self sharedApplication];
  id v9 = [v8 delegate];

  if (v9)
  {
    type metadata accessor for CRLiOSAppDelegate();
    swift_dynamicCastClassUnconditional();
    swift_retain();
    swift_unknownObjectRelease();
    int v10 = sub_100AC1C10();
    swift_release();
    if (v10 == 1)
    {
      v7[OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_isSyncing] = 1;
      if (qword_10166F9C8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v11 = (id)static OS_os_log.crlDefault;
      uint64_t v12 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Starting highlight initial sync timer.", 38, 2, (uint64_t)_swiftEmptyArrayStorage);

      id v13 = [self defaultCenter];
      if (qword_10166EBB8 != -1) {
        swift_once();
      }
      [v13 postNotificationName:qword_101719E48 object:v7 userInfo:0];

      unint64_t v14 = self;
      uint64_t v15 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_100542268;
      aBlock[5] = v15;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_10051CE64;
      aBlock[3] = &unk_1015075B0;
      uint64_t v16 = _Block_copy(aBlock);
      swift_release();
      id v17 = [v14 scheduledTimerWithTimeInterval:0 repeats:v16 block:10.0];
      _Block_release(v16);
      Swift::String v18 = *(void **)&v7[OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_initialSyncTimer];
      *(void *)&v7[OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_initialSyncTimer] = v17;
    }
    id v19 = [self defaultCenter];
    uint64_t v20 = qword_10166F878;
    uint64_t v21 = v7;
    if (v20 != -1) {
      swift_once();
    }
    [v19 addObserver:v21 selector:"iCloudStatusDidChangeWithNotification:" name:qword_10171B790 object:0];
  }
  else
  {
    __break(1u);
  }
}

void sub_10053CF8C()
{
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.crlDefault;
  uint64_t v1 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v0, (uint64_t)&_mh_execute_header, v1, (uint64_t)"Highlight initial sync timer fired.", 35, 2, (uint64_t)_swiftEmptyArrayStorage);

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v3 = (void *)Strong;
    *(unsigned char *)(Strong + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_isSyncing) = 0;
    id v4 = [self defaultCenter];
    if (qword_10166EBB0 != -1) {
      swift_once();
    }
    [v4 postNotificationName:qword_101719E40 object:v3 userInfo:0];
  }
}

uint64_t sub_10053D110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 24) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10053D1A8, v6, v5);
}

void sub_10053D1A8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  id v2 = [*(id *)(v1 + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_highlightObservers) allObjects];
  sub_1005057FC(&qword_101672F60);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v4) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      goto LABEL_10;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v5 = 0;
  unint64_t v6 = v3 & 0xC000000000000001;
  unint64_t v7 = v3;
  do
  {
    if (v6)
    {
      uint64_t v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v8 = *(void **)(v3 + 8 * v5 + 32);
      swift_unknownObjectRetain();
    }
    uint64_t v9 = *(void *)(v18 + 16);
    ++v5;
    type metadata accessor for CRLSharedHighlight();
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v8 highlightControllerHighlightsDidChange:v9 highlights:isa];

    swift_unknownObjectRelease();
    unint64_t v3 = v7;
  }
  while (v4 != v5);
LABEL_10:
  uint64_t v11 = *(void *)(v18 + 16);
  swift_bridgeObjectRelease();
  uint64_t v12 = OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_initialSyncTimer;
  id v13 = *(void **)(v11 + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_initialSyncTimer);
  if (v13)
  {
    uint64_t v14 = *(void *)(v18 + 16);
    id v15 = v13;
    [v15 fire];
    uint64_t v16 = *(void **)(v11 + v12);
    *(void *)(v11 + v12) = 0;

    *(unsigned char *)(v14 + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_isSyncing) = 0;
  }
  id v17 = *(void (**)(void))(v18 + 8);
  v17();
}

uint64_t sub_10053D3C0(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v3 - 8, v4);
  unint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)&v1[OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights];
  *(void *)&v1[OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights] = a1;
  unint64_t v8 = swift_bridgeObjectRetain();
  unsigned __int8 v9 = sub_1005BE944(v8, v7);
  swift_bridgeObjectRelease();
  if (v9)
  {
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
    type metadata accessor for MainActor();
    uint64_t v12 = v1;
    uint64_t v13 = static MainActor.shared.getter();
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = v13;
    v14[3] = &protocol witness table for MainActor;
    v14[4] = v12;
    sub_1005912D0((uint64_t)v6, (uint64_t)&unk_101672F58, (uint64_t)v14);
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10053D548(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v3 = 4;
    uint64_t v4 = 0;
    if ((a1 & 0xC000000000000001) != 0)
    {
LABEL_4:
      uint64_t v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_6;
    }
    while (1)
    {
      uint64_t v5 = (char *)*(id *)(a1 + 8 * v3);
LABEL_6:
      unint64_t v6 = v5;
      uint64_t v7 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        break;
      }
      id v8 = [*(id *)&v5[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight] hideContextMenu];
      if (v8)
      {
        unsigned __int8 v9 = v8;
        int v10 = (void (**)(void))[v8 actionBlock];

        v10[2](v10);
        _Block_release(v10);
      }

      if (v7 == v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        unint64_t v11 = swift_bridgeObjectRetain();
        uint64_t v12 = sub_100F29878(v11, a1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return sub_10053D3C0((uint64_t)v12);
      }
      uint64_t v4 = ++v3 - 4;
      if ((a1 & 0xC000000000000001) != 0) {
        goto LABEL_4;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10053D714(void *a1, uint64_t a2)
{
  return sub_10053DAC4(a1, a2) & 1;
}

void sub_10053D730(void *a1)
{
  uint64_t v37 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v37 - 8);
  __chkstk_darwin(v37, v4);
  unint64_t v6 = &v33[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v7 - 8, v8);
  int v10 = &v33[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = &v33[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v38 = OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights;
  uint64_t v39 = v1;
  id v16 = a1;
  unint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = (char *)sub_100540D60(v17);
  swift_bridgeObjectRelease();

  if (v18)
  {
    id v35 = *(id *)&v18[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight];
    (*(void (**)(unsigned char *, char *, uint64_t))(v12 + 16))(v15, &v18[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_shareURL], v11);
    uint64_t v19 = *(void *)&v18[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardTitle + 8];
    uint64_t v36 = *(void *)&v18[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardTitle];
    sub_100540CFC((uint64_t)&v18[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardIdentifier], (uint64_t)v10);
    (*(void (**)(unsigned char *, char *, uint64_t))(v3 + 16))(v6, &v18[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_timeStamp], v37);
    int v34 = v18[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_accepted];
    uint64_t v20 = *(void *)&v18[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_shareString + 8];
    uint64_t v37 = *(void *)&v18[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_shareString];
    uint64_t v21 = v39;
    uint64_t v22 = *(void **)&v18[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_previewImage];
    objc_allocWithZone((Class)type metadata accessor for CRLSharedHighlight());
    id v23 = v22;
    uint64_t v24 = (uint64_t)v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v25 = sub_10053C364(v24, (uint64_t)v15, v36, v19, (uint64_t)v10, (uint64_t)v6, (v34 & 1) == 0, v37, v20, (uint64_t)v22);
    uint64_t v26 = *(void *)(v21 + v38);
    swift_bridgeObjectRetain_n();
    sub_100E398E4((uint64_t)v18, v26);
    unint64_t v28 = v27;
    LOBYTE(v24) = v29;
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {
      id v30 = v25;
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      uint64_t v40 = v26;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v26 < 0 || (v26 & 0x4000000000000000) != 0)
      {
        uint64_t v26 = sub_100F68540(v26);
        uint64_t v40 = v26;
      }
      if ((v28 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v28 < *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v32 = *(void **)((v26 & 0xFFFFFFFFFFFFFF8) + 8 * v28 + 0x20);
        *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 8 * v28 + 0x20) = v30;

        specialized Array._endMutation()();
        uint64_t v26 = v40;
        goto LABEL_10;
      }
      __break(1u);
      return;
    }
LABEL_10:
    sub_10053D3C0(v26);
  }
}

uint64_t sub_10053DAC4(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = *a1 + OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardIdentifier;
  char v13 = static UUID.== infix(_:_:)();
  sub_100540CFC(v12, (uint64_t)v11);
  sub_100540CFC(a2, (uint64_t)v8);
  if (v13)
  {
    uint64_t v14 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v15 = *(void *)&v11[v14];
    uint64_t v16 = *(void *)&v11[v14 + 8];
    unint64_t v17 = &v8[v14];
    if (v15 == *(void *)v17 && v16 == *((void *)v17 + 1)) {
      char v19 = 1;
    }
    else {
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  else
  {
    char v19 = 0;
  }
  sub_100510028((uint64_t)v8);
  sub_100510028((uint64_t)v11);
  return v19 & 1;
}

uint64_t sub_10053DBFC()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_10053DCA8;
  return sub_10053DE44();
}

uint64_t sub_10053DCA8()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10053DDE4, v1, v0);
}

uint64_t sub_10053DDE4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10053DE44()
{
  v1[5] = v0;
  sub_1005057FC(&qword_101672E90);
  v1[6] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for URL();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  return _swift_task_switch(sub_10053DF50, 0, 0);
}

uint64_t sub_10053DF50()
{
  id v2 = [*(id *)(v1[5] + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_highlightCenter) highlights];
  sub_10050BF48(0, &qword_101672E58);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
LABEL_17:
    uint64_t v8 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_17;
  }
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v5 = 0;
  uint64_t v6 = v1[8];
  uint64_t v7 = (void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  uint64_t v40 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);
  unint64_t v41 = v3 & 0xC000000000000001;
  uint64_t v36 = v6;
  uint64_t v39 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  uint64_t v8 = _swiftEmptyArrayStorage;
  uint64_t v37 = v4;
  unint64_t v38 = v3;
  do
  {
    unint64_t v10 = (unint64_t)v8;
    if (v41) {
      id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v11 = *(id *)(v3 + 8 * v5 + 32);
    }
    uint64_t v12 = v11;
    uint64_t v13 = v1[10];
    uint64_t v15 = v1[6];
    uint64_t v14 = v1[7];
    id v16 = [v11 URL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v17 = *v7;
    (*v7)(v15, v13, v14);
    (*v40)(v15, 0, 1, v14);

    if ((*v39)(v15, 1, v14) == 1)
    {
      sub_100522F00(v1[6], &qword_101672E90);
      uint64_t v8 = (double *)v10;
      uint64_t v9 = v37;
      unint64_t v3 = v38;
    }
    else
    {
      uint64_t v18 = v1[11];
      uint64_t v19 = v1[9];
      uint64_t v20 = v1[7];
      v17(v18, v1[6], v20);
      v17(v19, v18, v20);
      uint64_t v8 = (double *)v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = (double *)sub_100F62784(0, *(void *)(v10 + 16) + 1, 1, v10);
      }
      uint64_t v9 = v37;
      unint64_t v3 = v38;
      unint64_t v22 = *((void *)v8 + 2);
      unint64_t v21 = *((void *)v8 + 3);
      if (v22 >= v21 >> 1) {
        uint64_t v8 = (double *)sub_100F62784(v21 > 1, v22 + 1, 1, (unint64_t)v8);
      }
      uint64_t v23 = v1[9];
      uint64_t v24 = v1[7];
      *((void *)v8 + 2) = v22 + 1;
      v17((uint64_t)v8+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v22, v23, v24);
    }
    ++v5;
  }
  while (v9 != v5);
LABEL_18:
  swift_bridgeObjectRelease();
  if (*((void *)v8 + 2))
  {
    id v25 = (void *)v1[5];
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v3;
    *(void *)(v26 + 24) = v25;
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = &_swiftEmptyDictionarySingleton;
    id v28 = objc_allocWithZone((Class)CKFetchShareMetadataOperation);
    id v29 = v25;
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v0 = [v28 initWithShareURLs:isa];

    [v0 setShouldFetchRootRecord:1];
    swift_retain();
    CKFetchShareMetadataOperation.perShareMetadataResultBlock.setter();
    id v31 = (void *)swift_allocObject();
    v31[2] = sub_100540FD4;
    v31[3] = v26;
    v31[4] = v27;
    swift_retain();
    swift_retain();
    CKFetchShareMetadataOperation.fetchShareMetadataResultBlock.setter();
    [v0 setQualityOfService:25];
    if (qword_10166EE68 == -1)
    {
LABEL_20:
      [(id)qword_10171A488 addOperation:v0];
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      goto LABEL_24;
    }
LABEL_28:
    swift_once();
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v32 = (id)static OS_os_log.shareState;
  uint64_t v33 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v32, (uint64_t)&_mh_execute_header, v33, (uint64_t)"Highlights did not contain any URLs.", 36, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_10053D3C0((uint64_t)_swiftEmptyArrayStorage);
LABEL_24:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v34 = (uint64_t (*)(void))v1[1];
  return v34();
}

id sub_10053E544(uint64_t a1)
{
  return sub_10053E55C(a1, type metadata accessor for CRLSharedHighlightController);
}

id sub_10053E55C(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLSharedHighlightController()
{
  return self;
}

uint64_t sub_10053E624(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v8 - 8, v9);
  id v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = 0;
  *(void *)(v13 + 32) = a1;
  *(unsigned char *)(v13 + 40) = a2 & 1;
  *(void *)(v13 + 48) = a3;
  *(void *)(v13 + 56) = a4;
  sub_1005411C4(a1, a2 & 1);
  swift_bridgeObjectRetain();
  id v14 = a4;
  sub_1005912D0((uint64_t)v11, (uint64_t)&unk_101672EA0, v13);
  return swift_release();
}

uint64_t sub_10053E750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 208) = a6;
  *(void *)(v7 + 216) = a7;
  *(unsigned char *)(v7 + 524) = a5;
  *(void *)(v7 + 200) = a4;
  uint64_t v8 = type metadata accessor for Calendar();
  *(void *)(v7 + 224) = v8;
  *(void *)(v7 + 232) = *(void *)(v8 - 8);
  *(void *)(v7 + 240) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DateComponents();
  *(void *)(v7 + 248) = v9;
  *(void *)(v7 + 256) = *(void *)(v9 - 8);
  *(void *)(v7 + 264) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Date();
  *(void *)(v7 + 272) = v10;
  *(void *)(v7 + 280) = *(void *)(v10 - 8);
  *(void *)(v7 + 288) = swift_task_alloc();
  *(void *)(v7 + 296) = swift_task_alloc();
  sub_1005057FC(&qword_101672C30);
  *(void *)(v7 + 304) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for CRLBoardIdentifier(0);
  *(void *)(v7 + 312) = v11;
  *(void *)(v7 + 320) = *(void *)(v11 - 8);
  *(void *)(v7 + 328) = swift_task_alloc();
  *(void *)(v7 + 336) = swift_task_alloc();
  sub_1005057FC(&qword_101672EB0);
  *(void *)(v7 + 344) = swift_task_alloc();
  *(void *)(v7 + 352) = swift_task_alloc();
  uint64_t v12 = type metadata accessor for URL();
  *(void *)(v7 + 360) = v12;
  *(void *)(v7 + 368) = *(void *)(v12 - 8);
  *(void *)(v7 + 376) = swift_task_alloc();
  *(void *)(v7 + 384) = swift_task_alloc();
  sub_1005057FC(&qword_101672EB8);
  *(void *)(v7 + 392) = swift_task_alloc();
  *(void *)(v7 + 400) = swift_task_alloc();
  return _swift_task_switch(sub_10053EA68, 0, 0);
}

uint64_t sub_10053EA68()
{
  uint64_t v1 = *(void *)(v0 + 200);
  if ((*(unsigned char *)(v0 + 524) & 1) == 0)
  {
    *(void *)(v0 + 192) = _swiftEmptyArrayStorage;
    char v2 = *(unsigned char *)(v1 + 32);
    *(unsigned char *)(v0 + 525) = v2;
    uint64_t v3 = 1 << v2;
    if (v3 < 64) {
      uint64_t v4 = ~(-1 << v3);
    }
    else {
      uint64_t v4 = -1;
    }
    unint64_t v5 = v4 & *(void *)(v1 + 64);
    *(void *)(v0 + 408) = CKFreeformShareType;
    *(_DWORD *)(v0 + 520) = enum case for Calendar.Component.day(_:);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    int64_t v8 = 0;
    uint64_t v9 = &qword_101672EC8;
    while (!v5)
    {
      int64_t v21 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_71;
      }
      int64_t v22 = (unint64_t)((1 << *(unsigned char *)(v0 + 525)) + 63) >> 6;
      if (v21 < v22)
      {
        uint64_t v15 = *(void *)(v0 + 200);
        uint64_t v23 = v15 + 64;
        unint64_t v24 = *(void *)(v15 + 64 + 8 * v21);
        if (v24) {
          goto LABEL_14;
        }
        int64_t v25 = v8 + 2;
        ++v8;
        if (v21 + 1 < v22)
        {
          unint64_t v24 = *(void *)(v23 + 8 * v25);
          if (v24) {
            goto LABEL_17;
          }
          int64_t v8 = v21 + 1;
          if (v21 + 2 < v22)
          {
            unint64_t v24 = *(void *)(v23 + 8 * (v21 + 2));
            if (v24)
            {
              v21 += 2;
              goto LABEL_14;
            }
            int64_t v25 = v21 + 3;
            int64_t v8 = v21 + 2;
            if (v21 + 3 < v22)
            {
              unint64_t v24 = *(void *)(v23 + 8 * v25);
              if (!v24)
              {
                while (1)
                {
                  int64_t v21 = v25 + 1;
                  if (__OFADD__(v25, 1)) {
                    break;
                  }
                  if (v21 >= v22)
                  {
                    int64_t v8 = v22 - 1;
                    goto LABEL_28;
                  }
                  unint64_t v24 = *(void *)(v23 + 8 * v21);
                  ++v25;
                  if (v24) {
                    goto LABEL_14;
                  }
                }
                __break(1u);
                return result;
              }
LABEL_17:
              int64_t v21 = v25;
LABEL_14:
              uint64_t v13 = (v24 - 1) & v24;
              unint64_t v14 = __clz(__rbit64(v24)) + (v21 << 6);
              int64_t v8 = v21;
LABEL_10:
              uint64_t v16 = *(void *)(v0 + 392);
              (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 368) + 16))(v16, *(void *)(v15 + 48) + *(void *)(*(void *)(v0 + 368) + 72) * v14, *(void *)(v0 + 360));
              uint64_t v17 = *(void *)(v15 + 56);
              uint64_t v18 = sub_1005057FC(v9);
              uint64_t v19 = *(void **)(v17 + 8 * v14);
              *(void *)(v16 + *(int *)(v18 + 48)) = v19;
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 0, 1, v18);
              id v20 = v19;
              goto LABEL_29;
            }
          }
        }
      }
LABEL_28:
      uint64_t v26 = *(void *)(v0 + 392);
      uint64_t v27 = sub_1005057FC(v9);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
      uint64_t v13 = 0;
LABEL_29:
      *(void *)(v0 + 416) = v8;
      *(void *)(v0 + 424) = v13;
      uint64_t v28 = *(void *)(v0 + 400);
      sub_1005411D0(*(void *)(v0 + 392), v28);
      uint64_t v29 = sub_1005057FC(v9);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v28, 1, v29) == 1)
      {
        swift_release();
        sub_10053D3C0(*(void *)(v0 + 192));
        goto LABEL_58;
      }
      uint64_t v30 = *(void *)(v0 + 384);
      uint64_t v31 = *(void *)(v0 + 368);
      unint64_t v32 = *(void *)(v0 + 208);
      uint64_t v33 = *(void **)(*(void *)(v0 + 400) + *(int *)(v29 + 48));
      *(void *)(v0 + 432) = v33;
      (*(void (**)(uint64_t))(v31 + 32))(v30);
      uint64_t v34 = swift_task_alloc();
      *(void *)(v34 + 16) = v30;
      swift_bridgeObjectRetain();
      id v35 = (id *)sub_1008757EC(sub_100541238, (double *)v34, v32);
      *(void *)(v0 + 440) = v7;
      swift_task_dealloc();
      if ((unint64_t)v35 >> 62)
      {
        if (!_CocoaArrayWrapper.endIndex.getter())
        {
LABEL_6:
          uint64_t v10 = *(void *)(v0 + 384);
          uint64_t v12 = *(void *)(v0 + 360);
          uint64_t v11 = *(void *)(v0 + 368);

          swift_bridgeObjectRelease();
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
          goto LABEL_7;
        }
      }
      else if (!*(void *)(((unint64_t)v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_6;
      }
      if (((unint64_t)v35 & 0xC000000000000001) != 0)
      {
        id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)(((unint64_t)v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_71:
          __break(1u);
          goto LABEL_72;
        }
        id v36 = v35[4];
      }
      uint64_t v37 = v36;
      *(void *)(v0 + 448) = v36;
      uint64_t v38 = *(void *)(v0 + 352);
      uint64_t v40 = *(void *)(v0 + 272);
      uint64_t v39 = *(void *)(v0 + 280);
      swift_bridgeObjectRelease();
      id v41 = [v37 timestamp];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v38, 0, 1, v40);
      id v42 = [v33 share];
      id v43 = [v42 values];

      sub_1005057FC((uint64_t *)&unk_101672F30);
      uint64_t v44 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v45 = static CKShare.SystemFieldKey.shareType.getter();
      if (!*(void *)(v44 + 16) || (unint64_t v47 = sub_100955F50(v45, v46), (v48 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_40:
        uint64_t v51 = 0;
        unint64_t v50 = 0xE000000000000000;
        goto LABEL_41;
      }
      uint64_t v49 = *(void *)(*(void *)(v44 + 56) + 8 * v47);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 184) = v49;
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_40;
      }
      uint64_t v51 = *(void *)(v0 + 136);
      unint64_t v50 = *(void *)(v0 + 144);
LABEL_41:
      uint64_t v108 = v7;
      if (v51 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v50 == v52)
      {
        swift_bridgeObjectRelease_n();
LABEL_45:
        uint64_t v54 = v9;
        uint64_t v55 = *(void *)(v0 + 312);
        uint64_t v56 = *(void *)(v0 + 320);
        uint64_t v57 = *(void *)(v0 + 304);
        id v58 = [v33 share];
        id v59 = [v58 recordID];

        id v60 = [v59 zoneID];
        sub_100D29C10(v57);

        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v57, 1, v55) == 1)
        {
          uint64_t v61 = *(void *)(v0 + 384);
          uint64_t v62 = *(void *)(v0 + 360);
          uint64_t v63 = *(void *)(v0 + 368);
          uint64_t v64 = *(void *)(v0 + 304);
          sub_100522F00(*(void *)(v0 + 352), &qword_101672EB0);

          (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v61, v62);
          uint64_t v65 = v64;
          id v66 = &qword_101672C30;
        }
        else
        {
          uint64_t v68 = *(void *)(v0 + 344);
          uint64_t v67 = *(void *)(v0 + 352);
          uint64_t v69 = *(void *)(v0 + 272);
          uint64_t v70 = *(void *)(v0 + 280);
          sub_1005394E4(*(void *)(v0 + 304), *(void *)(v0 + 336));
          sub_100541258(v67, v68);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69) != 1)
          {
            (*(void (**)(void, void, void))(*(void *)(v0 + 280) + 32))(*(void *)(v0 + 296), *(void *)(v0 + 344), *(void *)(v0 + 272));
            *(void *)(v0 + 456) = [v33 participantStatus];
            id v89 = [v33 share];
            id v90 = [v89 values];

            uint64_t v91 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v92 = static CKShare.SystemFieldKey.title.getter();
            if (*(void *)(v91 + 16) && (unint64_t v94 = sub_100955F50(v92, v93), (v95 & 1) != 0))
            {
              uint64_t v96 = *(void *)(*(void *)(v91 + 56) + 8 * v94);
              swift_unknownObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              *(void *)(v0 + 176) = v96;
              if (swift_dynamicCast())
              {
                uint64_t v97 = *(void *)(v0 + 152);
                unint64_t v98 = *(void *)(v0 + 160);
LABEL_67:
                *(void *)(v0 + 464) = v97;
                *(void *)(v0 + 472) = v98;
                id v99 = [v33 share];
                id v100 = [v99 participants];
                sub_10050BF48(0, (unint64_t *)&qword_101693410);
                unint64_t v101 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

                sub_100B46818(v101);
                uint64_t v103 = v102;
                uint64_t v105 = v104;

                swift_bridgeObjectRelease();
                *(void *)(v0 + 480) = v105;
                *(void *)(v0 + 488) = v103;
                id v106 = [v33 share];
                *(void *)(v0 + 496) = v106;
                id v107 = (void *)swift_task_alloc();
                *(void *)(v0 + 504) = v107;
                *id v107 = v0;
                v107[1] = sub_10053F60C;
                return sub_1005416C4((uint64_t)v106);
              }
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            uint64_t v97 = 0;
            unint64_t v98 = 0xE000000000000000;
            goto LABEL_67;
          }
          uint64_t v71 = *(void *)(v0 + 384);
          uint64_t v72 = *(void *)(v0 + 360);
          uint64_t v73 = *(void *)(v0 + 368);
          uint64_t v75 = *(void *)(v0 + 344);
          uint64_t v74 = *(void *)(v0 + 352);
          uint64_t v76 = *(void *)(v0 + 336);

          sub_100510028(v76);
          sub_100522F00(v74, &qword_101672EB0);
          (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v71, v72);
          uint64_t v65 = v75;
          id v66 = &qword_101672EB0;
        }
        uint64_t result = sub_100522F00(v65, v66);
        uint64_t v9 = v54;
        goto LABEL_51;
      }
      char v53 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v53) {
        goto LABEL_45;
      }
      uint64_t v77 = *(void *)(v0 + 384);
      uint64_t v78 = *(void *)(v0 + 360);
      uint64_t v79 = *(void *)(v0 + 368);
      sub_100522F00(*(void *)(v0 + 352), &qword_101672EB0);

      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v79 + 8))(v77, v78);
LABEL_51:
      uint64_t v7 = v108;
LABEL_7:
      int64_t v8 = *(void *)(v0 + 416);
      unint64_t v5 = *(void *)(v0 + 424);
    }
    uint64_t v13 = (v5 - 1) & v5;
    unint64_t v14 = __clz(__rbit64(v5)) | (v8 << 6);
    uint64_t v15 = *(void *)(v0 + 200);
    goto LABEL_10;
  }
  swift_errorRetain();
  sub_10053D3C0((uint64_t)_swiftEmptyArrayStorage);
  if (qword_10166F9C8 != -1) {
LABEL_72:
  }
    swift_once();
  uint64_t v80 = *(void *)(v0 + 200);
  swift_beginAccess();
  id v81 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v83 = v81;
  uint64_t v84 = Error.localizedDescription.getter();
  uint64_t v86 = v85;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v84;
  *(void *)(inited + 40) = v86;
  uint64_t v87 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v83, (uint64_t)&_mh_execute_header, v87, (uint64_t)"Unable to retrieve metadata for highlights. Error: ", 51, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_1005410E0(v80, 1);
LABEL_58:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v88 = *(uint64_t (**)(void))(v0 + 8);
  return v88();
}

uint64_t sub_10053F60C(uint64_t a1)
{
  char v2 = *(void **)(*(void *)v1 + 496);
  *(void *)(*(void *)v1 + 512) = a1;
  swift_task_dealloc();

  return _swift_task_switch(sub_10053F728, 0, 0);
}

uint64_t sub_10053F728()
{
  uint64_t v1 = *(unsigned int *)(v0 + 520);
  uint64_t v2 = *(void *)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 280);
  uint64_t v141 = *(void *)(v0 + 272);
  uint64_t v5 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 240);
  uint64_t v142 = *(void *)(v0 + 224);
  static Calendar.current.getter();
  sub_1005057FC(&qword_101672F48);
  uint64_t v6 = type metadata accessor for Calendar.Component();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10117E810;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 104))(v9 + v8, v1, v6);
  sub_100508274(v9);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  static Date.now.getter();
  Calendar.dateComponents(_:from:to:)();
  swift_bridgeObjectRelease();
  uint64_t v140 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v140(v2, v141);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v142);
  uint64_t v10 = DateComponents.day.getter();
  if (v11)
  {
    uint64_t v30 = *(void **)(v0 + 512);
    uint64_t v31 = *(void **)(v0 + 448);
    unint64_t v32 = *(void **)(v0 + 432);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v33 = v30;
    uint64_t v27 = *(void *)(v0 + 440);
    goto LABEL_17;
  }
  uint64_t v12 = *(void **)(v0 + 512);
  if (v10 > 29)
  {
    uint64_t v34 = *(void **)(v0 + 448);
    id v35 = *(void **)(v0 + 432);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v27 = *(void *)(v0 + 440);
    uint64_t v33 = v12;
    goto LABEL_17;
  }
  uint64_t v14 = *(void *)(v0 + 480);
  uint64_t v13 = *(void *)(v0 + 488);
  uint64_t v136 = *(void *)(v0 + 464);
  uint64_t v138 = *(void *)(v0 + 472);
  v135 = *(void **)(v0 + 448);
  uint64_t v143 = *(void *)(v0 + 440);
  uint64_t v15 = *(void *)(v0 + 376);
  uint64_t v17 = *(void *)(v0 + 328);
  uint64_t v16 = *(void *)(v0 + 336);
  uint64_t v18 = *(void *)(v0 + 288);
  uint64_t v19 = *(void *)(v0 + 296);
  char v134 = *(void *)(v0 + 456) == 2;
  if (!v14) {
    uint64_t v13 = 0;
  }
  uint64_t v133 = v13;
  uint64_t v20 = *(void *)(v0 + 272);
  uint64_t v21 = *(void *)(v0 + 280);
  if (v14) {
    uint64_t v22 = *(void *)(v0 + 480);
  }
  else {
    uint64_t v22 = 0xE000000000000000;
  }
  (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 368) + 16))(v15, *(void *)(v0 + 384), *(void *)(v0 + 360));
  sub_100540CFC(v16, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v18, v19, v20);
  id v23 = objc_allocWithZone((Class)type metadata accessor for CRLSharedHighlight());
  int64_t v24 = v12;
  int64_t v25 = (uint64_t *)sub_10053C364((uint64_t)v135, v15, v136, v138, v17, v18, v134, v133, v22, (uint64_t)v12);
  unint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v27 = v143;
  uint64_t v28 = sub_1005412C0(v26, (double **)v25);
  swift_bridgeObjectRelease();

  if ((unint64_t)v28 >> 62) {
    goto LABEL_81;
  }
  uint64_t v29 = *(void *)(((unint64_t)v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_10:
  swift_bridgeObjectRelease();
  if (v29)
  {

    goto LABEL_16;
  }
  int64_t v25 = v25;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(v0 + 192) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 192) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    goto LABEL_83;
  while (1)
  {
    id v36 = *(void **)(v0 + 448);
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

LABEL_16:
    uint64_t v33 = *(void **)(v0 + 432);
LABEL_17:
    uint64_t v37 = *(void *)(v0 + 368);
    uint64_t v137 = *(void *)(v0 + 360);
    uint64_t v139 = *(void *)(v0 + 384);
    int64_t v25 = *(uint64_t **)(v0 + 352);
    uint64_t v38 = *(void *)(v0 + 336);
    uint64_t v39 = *(void *)(v0 + 296);
    uint64_t v41 = *(void *)(v0 + 264);
    uint64_t v40 = *(void *)(v0 + 272);
    uint64_t v43 = *(void *)(v0 + 248);
    uint64_t v42 = *(void *)(v0 + 256);

    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
    v140(v39, v40);
    sub_100510028(v38);
    sub_100522F00((uint64_t)v25, &qword_101672EB0);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v139, v137);
    uint64_t v44 = &selRef_alignCenter_;
    int64_t v24 = *(void *)(v0 + 416);
    unint64_t v45 = *(void *)(v0 + 424);
    if (v45) {
      break;
    }
LABEL_24:
    int64_t v56 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
LABEL_80:
      __break(1u);
LABEL_81:
      uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
      goto LABEL_10;
    }
    int64_t v57 = (unint64_t)((1 << *(unsigned char *)(v0 + 525)) + 63) >> 6;
    if (v56 >= v57) {
      goto LABEL_41;
    }
    int64_t v25 = *(uint64_t **)(v0 + 200);
    id v58 = v25 + 8;
    unint64_t v59 = v25[v56 + 8];
    if (v59) {
      goto LABEL_27;
    }
    int64_t v60 = v24 + 2;
    ++v24;
    if (v56 + 1 >= v57) {
      goto LABEL_41;
    }
    unint64_t v59 = v58[v60];
    if (v59)
    {
LABEL_30:
      int64_t v56 = v60;
LABEL_27:
      uint64_t v49 = (v59 - 1) & v59;
      unint64_t v50 = __clz(__rbit64(v59)) + (v56 << 6);
      int64_t v24 = v56;
      goto LABEL_21;
    }
    int64_t v24 = v56 + 1;
    if (v56 + 2 >= v57) {
      goto LABEL_41;
    }
    unint64_t v59 = v58[v56 + 2];
    if (v59)
    {
      v56 += 2;
      goto LABEL_27;
    }
    int64_t v60 = v56 + 3;
    int64_t v24 = v56 + 2;
    if (v56 + 3 >= v57)
    {
LABEL_41:
      uint64_t v61 = *(void *)(v0 + 392);
      uint64_t v62 = sub_1005057FC(&qword_101672EC8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v61, 1, 1, v62);
      uint64_t v49 = 0;
      goto LABEL_42;
    }
    unint64_t v59 = v58[v60];
    if (v59) {
      goto LABEL_30;
    }
    while (1)
    {
      int64_t v56 = v60 + 1;
      if (__OFADD__(v60, 1)) {
        break;
      }
      if (v56 >= v57)
      {
        int64_t v24 = v57 - 1;
        goto LABEL_41;
      }
      unint64_t v59 = v58[v56];
      ++v60;
      if (v59) {
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_83:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  while (2)
  {
    while (2)
    {
      uint64_t v49 = (v45 - 1) & v45;
      unint64_t v50 = __clz(__rbit64(v45)) | (v24 << 6);
      int64_t v25 = *(uint64_t **)(v0 + 200);
LABEL_21:
      uint64_t v51 = *(void *)(v0 + 392);
      (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 368) + 16))(v51, v25[6] + *(void *)(*(void *)(v0 + 368) + 72) * v50, *(void *)(v0 + 360));
      uint64_t v52 = v25[7];
      uint64_t v53 = sub_1005057FC(&qword_101672EC8);
      uint64_t v54 = *(void **)(v52 + 8 * v50);
      *(void *)(v51 + *(int *)(v53 + 48)) = v54;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v51, 0, 1, v53);
      id v55 = v54;
LABEL_42:
      *(void *)(v0 + 416) = v24;
      *(void *)(v0 + 424) = v49;
      uint64_t v63 = *(void *)(v0 + 400);
      sub_1005411D0(*(void *)(v0 + 392), v63);
      uint64_t v64 = sub_1005057FC(&qword_101672EC8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 48))(v63, 1, v64) == 1)
      {
        swift_release();
        sub_10053D3C0(*(void *)(v0 + 192));
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        v112 = *(uint64_t (**)(void))(v0 + 8);
        return v112();
      }
      int64_t v24 = *(void *)(v0 + 384);
      uint64_t v65 = *(void *)(v0 + 368);
      unint64_t v66 = *(void *)(v0 + 208);
      int64_t v25 = *(uint64_t **)(*(void *)(v0 + 400) + *(int *)(v64 + 48));
      *(void *)(v0 + 432) = v25;
      (*(void (**)(int64_t))(v65 + 32))(v24);
      uint64_t v67 = swift_task_alloc();
      *(void *)(v67 + 16) = v24;
      swift_bridgeObjectRetain();
      uint64_t v68 = (id *)sub_1008757EC(sub_100541238, (double *)v67, v66);
      *(void *)(v0 + 440) = v27;
      swift_task_dealloc();
      if ((unint64_t)v68 >> 62)
      {
        if (!_CocoaArrayWrapper.endIndex.getter()) {
          goto LABEL_19;
        }
      }
      else if (!*(void *)(((unint64_t)v68 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_19:
        uint64_t v46 = *(void *)(v0 + 384);
        uint64_t v47 = *(void *)(v0 + 360);
        uint64_t v48 = *(void *)(v0 + 368);

        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v46, v47);
        int64_t v24 = *(void *)(v0 + 416);
        unint64_t v45 = *(void *)(v0 + 424);
        if (!v45) {
          goto LABEL_24;
        }
        continue;
      }
      break;
    }
    if (((unint64_t)v68 & 0xC000000000000001) != 0)
    {
      id v69 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)(((unint64_t)v68 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_80;
      }
      id v69 = v68[4];
    }
    uint64_t v70 = v69;
    *(void *)(v0 + 448) = v69;
    uint64_t v71 = *(void *)(v0 + 352);
    uint64_t v72 = *(void *)(v0 + 272);
    uint64_t v73 = *(void *)(v0 + 280);
    swift_bridgeObjectRelease();
    id v74 = [v70 timestamp];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v73 + 56))(v71, 0, 1, v72);
    id v75 = [v25 v44[57]];
    id v76 = [v75 values];

    sub_1005057FC((uint64_t *)&unk_101672F30);
    uint64_t v77 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v78 = static CKShare.SystemFieldKey.shareType.getter();
    if (!*(void *)(v77 + 16) || (unint64_t v80 = sub_100955F50(v78, v79), (v81 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_53;
    }
    uint64_t v82 = *(void *)(*(void *)(v77 + 56) + 8 * v80);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 184) = v82;
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_53:
      uint64_t v83 = 0;
      unint64_t v84 = 0xE000000000000000;
      goto LABEL_54;
    }
    uint64_t v83 = *(void *)(v0 + 136);
    unint64_t v84 = *(void *)(v0 + 144);
LABEL_54:
    if (v83 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v84 == v85)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_58;
    }
    char v86 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v86 & 1) == 0)
    {
      uint64_t v109 = *(void *)(v0 + 384);
      uint64_t v110 = *(void *)(v0 + 360);
      uint64_t v111 = *(void *)(v0 + 368);
      sub_100522F00(*(void *)(v0 + 352), &qword_101672EB0);

      (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v109, v110);
      goto LABEL_64;
    }
LABEL_58:
    uint64_t v87 = *(void *)(v0 + 312);
    uint64_t v88 = *(void *)(v0 + 320);
    uint64_t v89 = *(void *)(v0 + 304);
    id v90 = [v25 v44[57]];
    id v91 = [v90 recordID];

    id v92 = [v91 zoneID];
    sub_100D29C10(v89);

    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v89, 1, v87) == 1)
    {
      uint64_t v93 = *(void *)(v0 + 384);
      uint64_t v94 = *(void *)(v0 + 360);
      uint64_t v95 = *(void *)(v0 + 368);
      uint64_t v96 = *(void *)(v0 + 304);
      sub_100522F00(*(void *)(v0 + 352), &qword_101672EB0);

      (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v93, v94);
      uint64_t v97 = v96;
      unint64_t v98 = &qword_101672C30;
      goto LABEL_62;
    }
    uint64_t v99 = *(void *)(v0 + 344);
    uint64_t v100 = *(void *)(v0 + 352);
    uint64_t v101 = *(void *)(v0 + 272);
    uint64_t v102 = *(void *)(v0 + 280);
    sub_1005394E4(*(void *)(v0 + 304), *(void *)(v0 + 336));
    sub_100541258(v100, v99);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48))(v99, 1, v101) == 1)
    {
      uint64_t v103 = *(void *)(v0 + 384);
      uint64_t v104 = *(void *)(v0 + 360);
      uint64_t v105 = *(void *)(v0 + 368);
      uint64_t v107 = *(void *)(v0 + 344);
      uint64_t v106 = *(void *)(v0 + 352);
      uint64_t v108 = *(void *)(v0 + 336);

      sub_100510028(v108);
      int64_t v25 = &qword_101672EB0;
      sub_100522F00(v106, &qword_101672EB0);
      (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v103, v104);
      uint64_t v97 = v107;
      unint64_t v98 = &qword_101672EB0;
LABEL_62:
      sub_100522F00(v97, v98);
      uint64_t v44 = &selRef_alignCenter_;
LABEL_64:
      int64_t v24 = *(void *)(v0 + 416);
      unint64_t v45 = *(void *)(v0 + 424);
      if (!v45) {
        goto LABEL_24;
      }
      continue;
    }
    break;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 280) + 32))(*(void *)(v0 + 296), *(void *)(v0 + 344), *(void *)(v0 + 272));
  *(void *)(v0 + 456) = [v25 participantStatus];
  id v114 = [v25 share];
  id v115 = [v114 values];

  uint64_t v116 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v117 = static CKShare.SystemFieldKey.title.getter();
  if (*(void *)(v116 + 16) && (unint64_t v119 = sub_100955F50(v117, v118), (v120 & 1) != 0))
  {
    uint64_t v121 = *(void *)(*(void *)(v116 + 56) + 8 * v119);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 176) = v121;
    if (swift_dynamicCast())
    {
      uint64_t v122 = *(void *)(v0 + 152);
      unint64_t v123 = *(void *)(v0 + 160);
      goto LABEL_76;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v122 = 0;
  unint64_t v123 = 0xE000000000000000;
LABEL_76:
  *(void *)(v0 + 464) = v122;
  *(void *)(v0 + 472) = v123;
  id v124 = [v25 share];
  id v125 = [v124 participants];
  sub_10050BF48(0, (unint64_t *)&qword_101693410);
  unint64_t v126 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100B46818(v126);
  uint64_t v128 = v127;
  uint64_t v130 = v129;

  swift_bridgeObjectRelease();
  *(void *)(v0 + 480) = v130;
  *(void *)(v0 + 488) = v128;
  id v131 = [v25 share];
  *(void *)(v0 + 496) = v131;
  uint64_t v132 = (void *)swift_task_alloc();
  *(void *)(v0 + 504) = v132;
  *uint64_t v132 = v0;
  v132[1] = sub_10053F60C;
  return sub_1005416C4((uint64_t)v131);
}

uint64_t sub_100540518(id *a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [*a1 URL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  char v8 = static URL.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v8 & 1;
}

void sub_100540624(uint64_t a1, void *a2, char a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
    swift_beginAccess();
    id v13 = a2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *(void *)(a4 + 16);
    *(void *)(a4 + 16) = 0x8000000000000000;
    sub_100972C54((uint64_t)v13, (uint64_t)v12, isUniquelyReferenced_nonNull_native);
    *(void *)(a4 + 16) = v15;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    swift_endAccess();
    sub_100541080(a2, 0);
  }
}

uint64_t sub_100540798(uint64_t a1, char a2, void (*a3)(uint64_t, uint64_t))
{
  if (a2)
  {
    swift_errorRetain();
    a3(a1, 1);
    return sub_100541074(a1, 1);
  }
  else
  {
    swift_beginAccess();
    uint64_t v4 = swift_bridgeObjectRetain();
    a3(v4, 0);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10054084C(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v7 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v9 = v7;
  id v10 = [a1 highlights];
  sub_10050BF48(0, &qword_101672E58);
  uint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)(inited + 56) = sub_1005057FC(&qword_101672E60);
  *(void *)(inited + 64) = sub_100540E80();
  *(void *)(inited + 32) = v11;
  uint64_t v12 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Highlights changed. New highlights: %@", 38, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
  type metadata accessor for MainActor();
  id v14 = v1;
  uint64_t v15 = static MainActor.shared.getter();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v15;
  v16[3] = &protocol witness table for MainActor;
  v16[4] = v14;
  sub_1005912D0((uint64_t)v6, (uint64_t)&unk_101672E80, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_100540AAC()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_100540B58;
  return sub_10053DE44();
}

uint64_t sub_100540B58()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1005422D0, v1, v0);
}

uint64_t sub_100540CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_100540D60(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    sub_10050BF48(0, (unint64_t *)&qword_101672E50);
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v3);
      uint64_t v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      if (static NSObject.== infix(_:_:)())
      {
        swift_bridgeObjectRelease();
        return v5;
      }

      ++v3;
      if (v6 == v2) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_100540E80()
{
  unint64_t result = qword_101672E68;
  if (!qword_101672E68)
  {
    sub_100522D34(&qword_101672E60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101672E68);
  }
  return result;
}

uint64_t sub_100540EE0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100528D08;
  return sub_100540AAC();
}

uint64_t sub_100540F94()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100540FD4(uint64_t a1, char a2)
{
  return sub_10053E624(a1, a2 & 1, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_100540FE0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100541018(uint64_t a1, void *a2, char a3)
{
  sub_100540624(a1, a2, a3 & 1, v3);
}

uint64_t sub_100541024()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100541064(uint64_t a1, char a2)
{
  return sub_100540798(a1, a2 & 1, *(void (**)(uint64_t, uint64_t))(v2 + 16));
}

uint64_t sub_100541074(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  return result;
}

void sub_100541080(void *a1, char a2)
{
  if (a2) {
    swift_errorRelease();
  }
  else {
}
  }

uint64_t sub_10054108C()
{
  swift_unknownObjectRelease();
  sub_1005410E0(*(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1005410E0(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1005410EC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v9 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  id v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *id v10 = v2;
  v10[1] = sub_100528D08;
  return sub_10053E750(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1005411C4(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1005411D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672EB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100541238(id *a1)
{
  return sub_100540518(a1) & 1;
}

uint64_t sub_100541258(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672EB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double *sub_1005412C0(unint64_t a1, double **a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v8 = __chkstk_darwin(v6 - 8, v7);
  id v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  uint64_t v13 = (char *)&v26 - v12;
  uint64_t v30 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_24;
  }
  uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v14)
  {
    while (1)
    {
      uint64_t v26 = v3;
      uint64_t v27 = v14;
      unint64_t v15 = 0;
      uint64_t v16 = (uint64_t)a2 + OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardIdentifier;
      uint64_t v28 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v29 = a1 & 0xC000000000000001;
      while (v29)
      {
        unint64_t v17 = a1;
        uint64_t v18 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_10:
        uint64_t v19 = v18;
        a1 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_23;
        }
        a2 = (double **)&v18[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardIdentifier];
        uint64_t v3 = static UUID.== infix(_:_:)();
        sub_100540CFC((uint64_t)a2, (uint64_t)v13);
        sub_100540CFC(v16, (uint64_t)v10);
        if (v3)
        {
          uint64_t v20 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
          uint64_t v21 = *(void *)&v13[v20];
          uint64_t v22 = *(void *)&v13[v20 + 8];
          id v23 = &v10[v20];
          BOOL v24 = v21 == *(void *)v23 && v22 == *((void *)v23 + 1);
          if (v24)
          {
            sub_100510028((uint64_t)v10);
            sub_100510028((uint64_t)v13);
LABEL_19:
            a2 = &v30;
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            uint64_t v3 = *((void *)v30 + 2);
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            goto LABEL_6;
          }
          uint64_t v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
          sub_100510028((uint64_t)v10);
          sub_100510028((uint64_t)v13);
          if (v3) {
            goto LABEL_19;
          }
        }
        else
        {
          sub_100510028((uint64_t)v10);
          sub_100510028((uint64_t)v13);
        }

LABEL_6:
        ++v15;
        BOOL v24 = a1 == v27;
        a1 = v17;
        if (v24) {
          return v30;
        }
      }
      if (v15 < *(void *)(v28 + 16)) {
        break;
      }
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      if (!v14) {
        return _swiftEmptyArrayStorage;
      }
    }
    unint64_t v17 = a1;
    uint64_t v18 = (char *)*(id *)(a1 + 8 * v15 + 32);
    goto LABEL_10;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10054151C()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v5 = (id)static OS_os_log.crlDefault;
  uint64_t v6 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v6, (uint64_t)"iCloud status changed. Updating highlights.", 43, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
  type metadata accessor for MainActor();
  id v8 = v0;
  uint64_t v9 = static MainActor.shared.getter();
  id v10 = (void *)swift_allocObject();
  void v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v8;
  sub_1005912D0((uint64_t)v4, (uint64_t)&unk_101672F70, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_1005416C4(uint64_t a1)
{
  v1[5] = a1;
  sub_1005057FC(&qword_101672E90);
  v1[6] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for URL();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  v1[11] = type metadata accessor for MainActor();
  v1[12] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[13] = v4;
  v1[14] = v3;
  return _swift_task_switch(sub_1005417FC, v4, v3);
}

uint64_t sub_1005417FC()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v1 = CKRecord.subscript.getter();
  v0[15] = v1;
  swift_bridgeObjectRelease();
  if (v1)
  {
    self;
    uint64_t v2 = (void *)swift_dynamicCastObjCClass();
    if (v2)
    {
      id v3 = [v2 fileURL];
      if (v3)
      {
        uint64_t v4 = v3;
        uint64_t v6 = v0[8];
        uint64_t v5 = v0[9];
        uint64_t v8 = v0[6];
        uint64_t v7 = v0[7];
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
        v9(v8, v5, v7);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v7);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v7) != 1)
        {
          v9(v0[10], v0[6], v0[7]);
          id v10 = [self sharedApplication];
          id v11 = [v10 delegate];

          if (v11)
          {
            type metadata accessor for CRLiOSAppDelegate();
            uint64_t v15 = *(void *)(swift_dynamicCastClassUnconditional()
                            + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharedBoardThumbnailManager);
            swift_retain();
            uint64_t v12 = swift_unknownObjectRelease();
            if (v15)
            {
              uint64_t v16 = *(void **)(v15 + 16);
              v0[16] = v16;
              id v17 = v16;
              swift_release();
              v0[17] = static MainActor.shared.getter();
              uint64_t v18 = dispatch thunk of Actor.unownedExecutor.getter();
              uint64_t v14 = v19;
              v0[18] = v18;
              v0[19] = v19;
              uint64_t v12 = (uint64_t)sub_100541B9C;
              uint64_t v13 = v18;
              return _swift_task_switch(v12, v13, v14);
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
          return _swift_task_switch(v12, v13, v14);
        }
      }
      else
      {
        (*(void (**)(void, uint64_t, uint64_t, void))(v0[8] + 56))(v0[6], 1, 1, v0[7]);
      }
      uint64_t v25 = v0[6];
      swift_unknownObjectRelease();
      swift_release();
      sub_100522F00(v25, &qword_101672E90);
      goto LABEL_16;
    }
    swift_unknownObjectRelease();
  }
  swift_release();
  static CKShare.SystemFieldKey.thumbnailImageData.getter();
  id v20 = (id)CKRecord.subscript.getter();
  swift_bridgeObjectRelease();
  if (v20)
  {
    v0[4] = v20;
    sub_1005057FC((uint64_t *)&unk_101672F30);
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_16:
      id v20 = 0;
      goto LABEL_17;
    }
    uint64_t v21 = v0[2];
    unint64_t v22 = v0[3];
    id v23 = objc_allocWithZone((Class)CRLImage);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    id v20 = [v23 initWithData:isa];
    sub_100510084(v21, v22);
  }
LABEL_17:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(id))v0[1];
  return v26(v20);
}

uint64_t sub_100541B9C()
{
  uint64_t v1 = Data.init(contentsOf:options:)();
  v0[20] = v1;
  v0[21] = v2;
  uint64_t v3 = v1;
  unint64_t v4 = v2;
  type metadata accessor for CRLBoardPreviewImageCache.CacheEntry();
  swift_allocObject();
  sub_100510D4C(v3, v4);
  v0[22] = sub_100613A04(v3, v4);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[23] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100541D00;
  return sub_100614374();
}

uint64_t sub_100541D00(uint64_t a1)
{
  unint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 192) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[18];
    uint64_t v6 = v4[19];
    uint64_t v7 = sub_100541F74;
  }
  else
  {
    v4[25] = a1;
    uint64_t v5 = v4[18];
    uint64_t v6 = v4[19];
    uint64_t v7 = sub_100541E28;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100541E28()
{
  unint64_t v1 = v0[21];
  uint64_t v2 = v0[20];
  uint64_t v3 = (void *)v0[16];
  swift_release();
  sub_100510084(v2, v1);
  swift_release();

  uint64_t v4 = v0[13];
  uint64_t v5 = v0[14];
  return _swift_task_switch(sub_100541EB4, v4, v5);
}

uint64_t sub_100541EB4()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  swift_release();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v1);
}

uint64_t sub_100541F74()
{
  unint64_t v1 = v0[21];
  uint64_t v2 = v0[20];
  swift_release();
  swift_release();
  sub_100510084(v2, v1);
  uint64_t v3 = (void *)v0[16];
  swift_errorRelease();

  uint64_t v4 = v0[13];
  uint64_t v5 = v0[14];
  return _swift_task_switch(sub_10054200C, v4, v5);
}

uint64_t sub_10054200C()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  swift_release();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4(0);
}

uint64_t sub_1005420C4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528488;
  return sub_10053D110(a1, v4, v5, v6);
}

uint64_t sub_10054217C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100528D08;
  return sub_10053DBFC();
}

uint64_t sub_100542230()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100542268()
{
}

uint64_t sub_100542270(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100542280()
{
  return swift_release();
}

uint64_t sub_100542288(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_10054238C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUserInteractionTogglableView();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLUserInteractionTogglableView()
{
  return self;
}

void *sub_100542538()
{
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale] = 0x3FF0000000000000;
  v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_enabled] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform];
  void *v1 = 0x3FF0000000000000;
  v1[1] = 0;
  v1[2] = 0;
  v1[3] = 0x3FF0000000000000;
  v1[4] = 0;
  v1[5] = 0;
  v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas] = 1;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_lastValidContentsScaleFromDelegate] = 0x3FF0000000000000;
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for CRLCanvasBackgroundLayer();
  [super init];
  uint64_t v3 = *(void (**)(void, double))((swift_isaMask & *v2) + 0x120);
  uint64_t v4 = v2;
  v3(0, 1.0);

  return v4;
}

void *sub_100542664(void *a1)
{
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale] = 0x3FF0000000000000;
  v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_enabled] = 0;
  uint64_t v3 = &v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform];
  *uint64_t v3 = 0x3FF0000000000000;
  v3[1] = 0;
  v3[2] = 0;
  v3[3] = 0x3FF0000000000000;
  v3[4] = 0;
  v3[5] = 0;
  v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas] = 1;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_lastValidContentsScaleFromDelegate] = 0x3FF0000000000000;
  sub_10050F848(a1, a1[3]);
  uint64_t v4 = _bridgeAnythingToObjectiveC<A>(_:)();
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for CRLCanvasBackgroundLayer();
  id v5 = [super initWithLayer:v4];
  swift_unknownObjectRelease();
  sub_100522D7C((uint64_t)a1, (uint64_t)v11);
  objc_super v6 = v5;
  if (swift_dynamicCast())
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    v8.n128_u64[0] = *(void *)&v10[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale];
    (*(void (**)(uint64_t, __n128))((swift_isaMask & *v6) + 0x120))(Strong, v8);

    swift_unknownObjectRelease();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(layer:)", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasBackgroundLayer.swift", 94, 2, 90, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(layer:)", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasBackgroundLayer.swift", 94, 2, 90);
    (*(void (**)(void, double))((swift_isaMask & *v6) + 0x120))(0, 1.0);
  }

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return v6;
}

void *sub_100542934(void *a1)
{
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale] = 0x3FF0000000000000;
  v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_enabled] = 0;
  uint64_t v3 = &v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform];
  *uint64_t v3 = 0x3FF0000000000000;
  v3[1] = 0;
  v3[2] = 0;
  v3[3] = 0x3FF0000000000000;
  v3[4] = 0;
  v3[5] = 0;
  v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas] = 1;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_lastValidContentsScaleFromDelegate] = 0x3FF0000000000000;
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for CRLCanvasBackgroundLayer();
  uint64_t v4 = [super initWithCoder:a1];
  id v5 = v4;
  if (v4)
  {
    objc_super v6 = *(void (**)(void, double))((swift_isaMask & *v4) + 0x120);
    uint64_t v7 = v4;
    v6(0, 1.0);
  }
  return v5;
}

id sub_100542A74(double a1)
{
  swift_unknownObjectWeakAssign();
  *(double *)&v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale] = a1;
  if (v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_enabled] == 1) {
    [v1 setNeedsLayout];
  }

  return [v1 setMasksToBounds:1];
}

id sub_100542B94()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCanvasBackgroundLayer();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLCanvasBackgroundLayer()
{
  return self;
}

void *sub_100542C04(double a1)
{
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale] = 0x3FF0000000000000;
  v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_enabled] = 0;
  uint64_t v3 = &v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform];
  *uint64_t v3 = 0x3FF0000000000000;
  v3[1] = 0;
  v3[2] = 0;
  v3[3] = 0x3FF0000000000000;
  v3[4] = 0;
  v3[5] = 0;
  v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas] = 1;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_lastValidContentsScaleFromDelegate] = 0x3FF0000000000000;
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for CRLCanvasBackgroundLayer();
  uint64_t v4 = [super init];
  id v5 = *(void (**)(uint64_t, double))((swift_isaMask & *v4) + 0x120);
  objc_super v6 = v4;
  uint64_t v7 = swift_unknownObjectRetain();
  v5(v7, a1);

  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_100542E28()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  objc_super v2 = *(double **)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v2)
  {
    sub_100846AB0();
    objc_super v2 = *(double **)(v0 + v1);
  }
  if (v2) {
    unint64_t v3 = (unint64_t)v2;
  }
  else {
    unint64_t v3 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_15;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      uint64_t v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v7 = *(id *)(v3 + 8 * i + 32);
    }
    __n128 v8 = v7;
    (*(void (**)(void))((swift_isaMask & *v7) + 0x178))();
  }
LABEL_15:

  return swift_bridgeObjectRelease();
}

double *sub_1005430E4()
{
  unint64_t v1 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v2 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  unint64_t v3 = *(double **)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v3)
  {
    sub_100846AB0();
    unint64_t v3 = *(double **)(v0 + v2);
  }
  if (v3) {
    unint64_t v1 = (unint64_t)v3;
  }
  if (!(v1 >> 62))
  {
    uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (double *)swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_7;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = (double *)swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_17;
  }
LABEL_7:
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v1 + 8 * v6 + 32);
      }
      __n128 v8 = v7;
      type metadata accessor for CRLGroupItem();
      if (swift_dynamicCastClass())
      {
        unint64_t v9 = sub_1005430E4();
        sub_1006E0C70(v9);
      }
      id v10 = v8;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      ++v6;
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    while (v4 != v6);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

double *sub_100543298()
{
  unint64_t v1 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v2 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  unint64_t v3 = *(double **)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v3)
  {
    sub_100846AB0();
    unint64_t v3 = *(double **)(v0 + v2);
  }
  if (v3) {
    unint64_t v1 = (unint64_t)v3;
  }
  if (!(v1 >> 62))
  {
    uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (double *)swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_7;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = (double *)swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_20;
  }
LABEL_7:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(v1 + 8 * i + 32);
      }
      unint64_t v9 = v8;
      type metadata accessor for CRLGroupItem();
      if (swift_dynamicCastClass())
      {
        unint64_t v7 = sub_100543298();
        sub_1006E0C70(v7);
      }
      else
      {
        id v10 = v9;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

Class sub_100543450(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  type metadata accessor for CRLBoardItem(0);
  v5.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  return v5.super.isa;
}

double *sub_1005434BC()
{
  unint64_t v1 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v2 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  unint64_t v3 = *(double **)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v3)
  {
    sub_100846AB0();
    unint64_t v3 = *(double **)(v0 + v2);
  }
  if (v3) {
    unint64_t v1 = (unint64_t)v3;
  }
  if (!(v1 >> 62))
  {
    uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (double *)swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_7;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = (double *)swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_21;
  }
LABEL_7:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(v1 + 8 * i + 32);
      }
      unint64_t v9 = v8;
      type metadata accessor for CRLGroupItem();
      id v10 = (void *)swift_dynamicCastClass();
      if (v10 && ((*(uint64_t (**)(void))((swift_isaMask & *v10) + 0x5B8))() & 1) == 0)
      {
        unint64_t v7 = sub_1005434BC();
        sub_1006E0C70(v7);
      }
      else
      {
        id v11 = v9;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005436E8()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  uint64_t v2 = *(double **)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v2)
  {
    sub_100846AB0();
    uint64_t v2 = *(double **)(v0 + v1);
  }
  if (v2) {
    unint64_t v3 = (unint64_t)v2;
  }
  else {
    unint64_t v3 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (v3 >> 62) {
    goto LABEL_21;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v4)
  {
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (v3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v3 + 8 * v5);
      unint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      type metadata accessor for CRLGroupItem();
      if (!swift_dynamicCastClass())
      {
        swift_bridgeObjectRelease();

        return 0;
      }
      char v9 = sub_1005436E8();

      if ((v9 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
      ++v5;
      if (v8 == v4) {
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
LABEL_16:
  swift_bridgeObjectRelease();
  return 1;
}

unint64_t sub_100543860()
{
  unint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) + 24);
  if (sub_1002094A4() < v1) {
    return 1;
  }
  unint64_t result = (unint64_t)sub_1005430E4();
  unint64_t v4 = result;
  if (!(result >> 62))
  {
    uint64_t v2 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2) {
      goto LABEL_5;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    return v2;
  }
LABEL_23:
  unint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_19;
  }
LABEL_5:
  if ((v4 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_8:
    id v6 = v5;
    char v7 = (*(uint64_t (**)(void))((swift_isaMask & *v5) + 0x350))();

    if (v7)
    {
      uint64_t v8 = 0;
      uint64_t v9 = v2 - 1;
      while (1)
      {
        uint64_t v2 = v9 != v8;
        if (v9 == v8) {
          break;
        }
        unint64_t v10 = v8 + 1;
        if ((v4 & 0xC000000000000001) != 0)
        {
          id v11 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v10 >= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_22;
          }
          id v11 = *(id *)(v4 + 8 * v8 + 40);
        }
        objc_super v12 = v11;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
        char v13 = (*(uint64_t (**)(void))((swift_isaMask & *v11) + 0x350))();

        ++v8;
        if ((v13 & 1) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v2 = 1;
    }
    goto LABEL_19;
  }
  if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v5 = *(id *)(v4 + 32);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_100543A64()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  uint64_t v2 = *(double **)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v2)
  {
    sub_100846AB0();
    uint64_t v2 = *(double **)(v0 + v1);
  }
  if (v2) {
    unint64_t v3 = (unint64_t)v2;
  }
  else {
    unint64_t v3 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (v3 >> 62) {
    goto LABEL_21;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v4)
  {
    unint64_t v5 = 0;
    char v6 = 0;
    if ((v3 & 0xC000000000000001) != 0)
    {
LABEL_9:
      char v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_12;
    }
    while (v5 < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      char v7 = *(id *)(v3 + 8 * v5 + 32);
LABEL_12:
      uint64_t v8 = v7;
      unint64_t v9 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
        __break(1u);
        break;
      }
      if (v6)
      {

        char v6 = 1;
        if (v9 == v4) {
          goto LABEL_23;
        }
      }
      else
      {
        char v6 = (*(uint64_t (**)(void))((swift_isaMask & *v7) + 0x2E0))();

        if (v9 == v4) {
          goto LABEL_23;
        }
      }
      ++v5;
      if ((v3 & 0xC000000000000001) != 0) {
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  char v6 = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_100543C18()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                         + 312);
  uint64_t v2 = swift_retain();
  LOBYTE(v1) = v1(v2);
  swift_release();
  if (v1 & 1) != 0 || (sub_1008864EC()) {
    return 1;
  }
  uint64_t v3 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  uint64_t v4 = *(double **)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v4)
  {
    sub_100846AB0();
    uint64_t v4 = *(double **)(v0 + v3);
  }
  unint64_t v5 = (unint64_t)(v4 ? v4 : _swiftEmptyArrayStorage);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 >> 62)
  {
    sub_1005057FC(&qword_101673060);
    uint64_t v6 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease_n();
    unint64_t v5 = v6;
  }
  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v7) {
    return 1;
  }

  return sub_1005436E8();
}

uint64_t sub_100543DE4()
{
  if ((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x5B8))()) {
    return 1;
  }
  uint64_t v2 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  uint64_t v3 = *(double **)((char *)v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v3)
  {
    sub_100846AB0();
    uint64_t v3 = *(double **)((char *)v0 + v2);
  }
  if (v3) {
    uint64_t v4 = (id *)v3;
  }
  else {
    uint64_t v4 = (id *)_swiftEmptyArrayStorage;
  }
  if (!((unint64_t)v4 >> 62))
  {
    uint64_t v5 = *(void *)(((unint64_t)v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_10;
    }
LABEL_27:
    BOOL v1 = 1;
LABEL_28:
    swift_bridgeObjectRelease();
    return v1;
  }
LABEL_26:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_27;
  }
LABEL_10:
  if (((unint64_t)v4 & 0xC000000000000001) != 0)
  {
    uint64_t v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_13:
    uint64_t v8 = v7;
    char v9 = (*(uint64_t (**)(void))((swift_isaMask & *v7) + 0x280))();

    if (v9)
    {
      uint64_t v10 = 0;
      uint64_t v11 = v5 - 1;
      while (1)
      {
        BOOL v1 = v11 == v10;
        if (v11 == v10) {
          break;
        }
        unint64_t v12 = v10 + 1;
        if (((unint64_t)v4 & 0xC000000000000001) != 0)
        {
          char v13 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v12 >= *(void *)(((unint64_t)v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_25;
          }
          char v13 = v4[v10 + 5];
        }
        uint64_t v14 = v13;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_25:
          __break(1u);
          goto LABEL_26;
        }
        char v15 = (*(uint64_t (**)(void))((swift_isaMask & *v13) + 0x280))();

        ++v10;
        if ((v15 & 1) == 0) {
          goto LABEL_28;
        }
      }
    }
    else
    {
      BOOL v1 = 0;
    }
    goto LABEL_28;
  }
  if (*(void *)(((unint64_t)v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v7 = v4[4];
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_100544014(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  swift_bridgeObjectRetain();
  if (a1 >> 62)
  {
    sub_1005057FC(&qword_101673060);
    _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  }
  uint64_t v5 = self;
  sub_1005057FC(&qword_101673060);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v4;
  v7[3] = v2;
  v7[4] = a1;
  v12[4] = sub_100545F1C;
  v12[5] = v7;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = *(void *)"";
  v12[2] = sub_10051CE64;
  v12[3] = &unk_101507710;
  uint64_t v8 = _Block_copy(v12);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v5 temporaryLayoutControllerForInfos:isa useInBlock:v8];
  _Block_release(v8);

  uint64_t result = swift_beginAccess();
  uint64_t v10 = *(void **)(v4 + 16);
  if (v10)
  {
    id v11 = v10;
    swift_release();
    return (uint64_t)v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1005441F8(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  id v5 = sub_1005459DC(a4, a1);
  swift_beginAccess();
  uint64_t v6 = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = v5;
}

id sub_1005442CC(id result, double *a2)
{
  if (result)
  {
    uint64_t v3 = result;
    swift_beginAccess();
    CGFloat v4 = a2[2];
    CGFloat v5 = a2[3];
    CGFloat v6 = a2[4];
    CGFloat v7 = a2[5];
    id v8 = v3;
    uint64_t result = [v8 pureGeometry];
    if (result)
    {
      char v9 = result;
      [result fullTransform];
      long long v15 = *(_OWORD *)&v17.c;
      long long v16 = *(_OWORD *)&v17.a;
      long long v14 = *(_OWORD *)&v17.tx;

      *(_OWORD *)&v17.a = v16;
      *(_OWORD *)&v17.c = v15;
      *(_OWORD *)&v17.tCGFloat x = v14;
      v18.origin.CGFloat x = 0.0;
      v18.origin.CGFloat y = 0.0;
      v18.size.CGFloat width = 1.0;
      v18.size.CGFloat height = 1.0;
      CGRect v21 = CGRectApplyAffineTransform(v18, &v17);
      v19.origin.CGFloat x = v4;
      v19.origin.CGFloat y = v5;
      v19.size.CGFloat width = v6;
      v19.size.CGFloat height = v7;
      CGRect v20 = CGRectUnion(v19, v21);
      CGFloat x = v20.origin.x;
      CGFloat y = v20.origin.y;
      CGFloat width = v20.size.width;
      CGFloat height = v20.size.height;

      uint64_t result = (id)swift_beginAccess();
      a2[2] = x;
      a2[3] = y;
      a2[4] = width;
      a2[5] = height;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_1005445BC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  CGFloat v5 = *(double **)&v1[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
  if (!v5)
  {
    sub_100846AB0();
    CGFloat v5 = *(double **)&v1[v4];
  }
  if (v5) {
    CGFloat v6 = v5;
  }
  else {
    CGFloat v6 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  char v7 = sub_100ED5970((uint64_t)a1, (unint64_t)v6);
  uint64_t v8 = swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"ungroupedGeometry(forChildItem:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLGroupItem.swift", 83, 2, 221, (uint64_t)"Can't get ungrouped geometry for a board item which isn't a child of the group.", 79, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"ungroupedGeometry(forChildItem:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLGroupItem.swift", 83, 2, 221);
  }
  char v9 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xE0);
  uint64_t v10 = (void *)v9(v8);
  uint64_t v13 = (*(uint64_t (**)(void *, uint64_t, uint64_t))((swift_isaMask & *a1) + 0x2C8))(v10, v11, v12);
  if ((v13 & 1) != 0
    && ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))((swift_isaMask & *a1) + 0x280))(v13, v14, v15) & 1) == 0)
  {
    CGRect v20 = v2;
    double d = 1.0;
    tCGFloat y = 0.0;
    uint64_t v53 = v20;
    tCGFloat x = 0.0;
    CGFloat c = 0.0;
    CGFloat b = 0.0;
    double a = 1.0;
    while (1)
    {
      uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))((swift_isaMask & *(void *)v20) + 0xE0);
      uint64_t v28 = v20;
      uint64_t v31 = (void *)v27(v28, v29, v30);
      [v31 transform];
      long long v58 = *(_OWORD *)&t1.c;
      long long v63 = *(_OWORD *)&t1.a;
      long long v55 = *(_OWORD *)&t1.tx;

      t1.double a = a;
      t1.CGFloat b = b;
      t1.CGFloat c = c;
      t1.double d = d;
      t1.tCGFloat x = tx;
      t1.tCGFloat y = ty;
      *(_OWORD *)&t2.double a = v63;
      *(_OWORD *)&t2.CGFloat c = v58;
      *(_OWORD *)&t2.tCGFloat x = v55;
      CGAffineTransformConcat(&v68, &t1, &t2);
      double a = v68.a;
      CGFloat b = v68.b;
      CGFloat c = v68.c;
      double d = v68.d;
      tCGFloat x = v68.tx;
      tCGFloat y = v68.ty;
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

      if (!Strong) {
        break;
      }

      type metadata accessor for CRLBoardItem(0);
      CGRect v20 = (char *)swift_dynamicCastClass();
      if (!v20) {
        goto LABEL_16;
      }
    }
    uint64_t Strong = v28;
LABEL_16:

    uint64_t v33 = self;
    id v36 = (void *)((uint64_t (*)(void *, uint64_t, uint64_t))v9)(v33, v34, v35);
    [v36 transform];
    long long v59 = *(_OWORD *)&t1.c;
    long long v64 = *(_OWORD *)&t1.a;
    long long v56 = *(_OWORD *)&t1.tx;

    *(_OWORD *)&t1.double a = v64;
    *(_OWORD *)&t1.CGFloat c = v59;
    *(_OWORD *)&t1.tCGFloat x = v56;
    BOOL v37 = sub_10007F7EC(&t1.a);
    t1.double a = a;
    t1.CGFloat b = b;
    t1.CGFloat c = c;
    t1.double d = d;
    t1.tCGFloat x = tx;
    t1.tCGFloat y = ty;
    id v38 = [v33 infoGeometryForTransformInRoot:&t1 isChildFlipped:v37];
    [v38 transform];
    long long v60 = *(_OWORD *)&t1.c;
    long long v65 = *(_OWORD *)&t1.a;
    CGFloat v39 = t1.tx;
    CGFloat v40 = t1.ty;
    uint64_t v41 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v53
                                                          + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                            + 288);
    uint64_t v42 = swift_retain();
    uint64_t v43 = (void *)v41(v42);
    swift_release();
    [v43 transform];
    long long v54 = *(_OWORD *)&t1.c;
    long long v57 = *(_OWORD *)&t1.a;
    long long v52 = *(_OWORD *)&t1.tx;

    *(_OWORD *)&t1.double a = v65;
    *(_OWORD *)&t1.CGFloat c = v60;
    t1.tCGFloat x = v39;
    t1.tCGFloat y = v40;
    *(_OWORD *)&t2.double a = v57;
    *(_OWORD *)&t2.CGFloat c = v54;
    *(_OWORD *)&t2.tCGFloat x = v52;
    CGAffineTransformConcat(&v68, &t1, &t2);
    long long v61 = *(_OWORD *)&v68.c;
    long long v66 = *(_OWORD *)&v68.a;
    CGFloat v44 = v68.tx;
    CGFloat v45 = v68.ty;
    [v10 fullTransform];
    *(_OWORD *)&t2.double a = v66;
    *(_OWORD *)&t2.CGFloat c = v61;
    t2.tCGFloat x = v44;
    t2.tCGFloat y = v45;
    CGAffineTransformConcat(&v68, &t1, &t2);
    long long v62 = *(_OWORD *)&v68.c;
    long long v67 = *(_OWORD *)&v68.a;
    CGFloat v46 = v68.tx;
    CGFloat v47 = v68.ty;
    id v48 = [v10 widthValid];
    id v49 = [v10 heightValid];
    id v50 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
    *(_OWORD *)&t1.double a = v67;
    *(_OWORD *)&t1.CGFloat c = v62;
    t1.tCGFloat x = v46;
    t1.tCGFloat y = v47;
    id v19 = [v50 initWithFullTransform:&t1 widthValid:v48 heightValid:v49];
  }
  else
  {
    long long v16 = *(uint64_t (**)(uint64_t))(**(void **)&v2[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                            + 288);
    uint64_t v17 = swift_retain();
    CGRect v18 = (void *)v16(v17);
    swift_release();
    id v19 = [v10 geometryWithParentGeometry:v18];
  }
  return v19;
}

uint64_t sub_100544BBC()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  uint64_t v30 = v0;
  uint64_t v3 = *(double **)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v3)
  {
    sub_100846AB0();
    uint64_t v3 = *(double **)(v30 + v2);
  }
  if (v3) {
    unint64_t v4 = (unint64_t)v3;
  }
  else {
    unint64_t v4 = (unint64_t)_swiftEmptyArrayStorage;
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v4 >> 62)
  {
    sub_1005057FC(&qword_101673060);
    _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  }
  CGFloat v6 = self;
  sub_1005057FC(&qword_101673060);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v5;
  v8[3] = ObjectType;
  v8[4] = v4;
  aBlock[4] = sub_100545ECC;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_10051CE64;
  aBlock[3] = &unk_1015076C0;
  char v9 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v6 temporaryLayoutControllerForInfos:isa useInBlock:v9];
  _Block_release(v9);

  uint64_t result = swift_beginAccess();
  uint64_t v11 = *(void **)(v5 + 16);
  if (!v11) {
    goto LABEL_26;
  }
  id v12 = v11;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v13 = v30;
  sub_10088AA40(v12);

  uint64_t v14 = *(double **)(v13 + v2);
  if (!v14)
  {
    uint64_t v15 = v30;
    sub_100846AB0();
    uint64_t v14 = *(double **)(v15 + v2);
  }
  if (v14) {
    unint64_t v16 = (unint64_t)v14;
  }
  else {
    unint64_t v16 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_16;
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v17) {
    return swift_bridgeObjectRelease();
  }
LABEL_16:
  if (v17 >= 1)
  {
    uint64_t v18 = 0;
    uint64_t v28 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    unint64_t v19 = v16 & 0xC000000000000001;
    CGRect v20 = (double *)v16;
    do
    {
      if (v19) {
        CGRect v21 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        CGRect v21 = *(id *)(v16 + 8 * v18 + 32);
      }
      unint64_t v22 = v21;
      ++v18;
      id v23 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v21) + 0xE0))();
      BOOL v24 = *(uint64_t (**)(uint64_t))(**(void **)(v30 + v28) + 288);
      uint64_t v25 = swift_retain();
      uint64_t v26 = (void *)v24(v25);
      swift_release();
      id v27 = [v23 geometryRelativeToGeometry:v26];

      (*(void (**)(id))((swift_isaMask & *v22) + 0xE8))(v27);
      unint64_t v16 = (unint64_t)v20;
    }
    while (v17 != v18);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100545048()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v0
                                                       + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                         + 312);
  uint64_t v2 = swift_retain();
  char v3 = v1(v2);
  uint64_t v4 = swift_release();
  char v5 = v3 ^ 1;
  if (((*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x5B8))(v4) & 1) == 0 && (v3 & 1) == 0)
  {
    unint64_t v6 = (unint64_t)sub_1005430E4();
    unint64_t v7 = v6;
    if (v6 >> 62) {
      goto LABEL_16;
    }
    for (uint64_t i = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
    {
      type metadata accessor for CRLBoardItem(0);
      uint64_t v9 = 4;
      while (1)
      {
        uint64_t v10 = (v7 & 0xC000000000000001) != 0
            ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : *(id *)(v7 + 8 * v9);
        uint64_t v11 = v10;
        uint64_t v12 = v9 - 3;
        if (__OFADD__(v9 - 4, 1)) {
          break;
        }
        if (static NSObject.== infix(_:_:)())
        {
        }
        else
        {
          char v13 = (*(uint64_t (**)(void))((swift_isaMask & *v11) + 0x298))();

          if ((v13 & 1) == 0)
          {
            char v5 = 0;
            goto LABEL_18;
          }
        }
        ++v9;
        if (v12 == i) {
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_16:
      ;
    }
LABEL_17:
    char v5 = 1;
LABEL_18:
    swift_bridgeObjectRelease();
  }
  return v5 & 1;
}

uint64_t sub_100545264()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v0
                                                       + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                         + 288);
  uint64_t v3 = swift_retain();
  uint64_t v4 = (void *)v2(v3);
  swift_release();
  [v4 transform];
  long long v24 = v27;
  long long v25 = v26;
  long long v23 = v28;

  long long v26 = v25;
  long long v27 = v24;
  long long v28 = v23;
  if (sub_10007F910((double *)&v26, 0.0001))
  {
    char v5 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v0 + v1) + 336);
    uint64_t v6 = swift_retain();
    LOBYTE(v5) = v5(v6);
    uint64_t v7 = swift_release();
    if (v5) {
      char v8 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x290))(v7);
    }
    else {
      char v8 = 1;
    }
  }
  else
  {
    char v8 = 0;
  }
  if ((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x5B8))()) {
    return v8 & 1;
  }
  uint64_t v9 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  uint64_t v10 = *(double **)((char *)v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v10)
  {
    sub_100846AB0();
    uint64_t v10 = *(double **)((char *)v0 + v9);
  }
  if (v10) {
    uint64_t v11 = (id *)v10;
  }
  else {
    uint64_t v11 = (id *)_swiftEmptyArrayStorage;
  }
  if (!((unint64_t)v11 >> 62))
  {
    uint64_t v12 = *(void *)(((unint64_t)v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v12) {
      goto LABEL_14;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    return v8 & 1;
  }
LABEL_31:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v12) {
    goto LABEL_27;
  }
LABEL_14:
  if (((unint64_t)v11 & 0xC000000000000001) != 0)
  {
    uint64_t v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_17:
    uint64_t v15 = v14;
    char v16 = (*(uint64_t (**)(void))((swift_isaMask & *v14) + 0x298))();

    if (v16)
    {
      uint64_t v17 = 0;
      uint64_t v18 = v12 - 1;
      while (v18 != v17)
      {
        unint64_t v19 = v17 + 1;
        if (((unint64_t)v11 & 0xC000000000000001) != 0)
        {
          CGRect v20 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v19 >= *(void *)(((unint64_t)v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_30;
          }
          CGRect v20 = v11[v17 + 5];
        }
        CGRect v21 = v20;
        if (__OFADD__(v19, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
        char v22 = (*(uint64_t (**)(void))((swift_isaMask & *v20) + 0x298))();

        ++v17;
        if ((v22 & 1) == 0) {
          goto LABEL_26;
        }
      }
    }
    else
    {
LABEL_26:
      char v8 = 0;
    }
    goto LABEL_27;
  }
  if (*(void *)(((unint64_t)v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v14 = v11[4];
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

id sub_100545648()
{
  uint64_t v1 = v0;
  type metadata accessor for CRLContainerItemData(0);
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)swift_dynamicCastClassUnconditional() + 440);
  swift_retain();
  uint64_t v3 = v2(0);
  swift_release();
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  char v5 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLGroupItem());
  *(void *)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem_items] = &_swiftEmptyDictionarySingleton;
  *(_DWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem_timeStamp] = 0;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems] = 0;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs] = 0;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs] = 0;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v4;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v3;
  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
  id v6 = v4;
  return [super init];
}

id sub_1005457AC(uint64_t a1, uint64_t a2)
{
  char v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem_items] = &_swiftEmptyDictionarySingleton;
  *(_DWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem_timeStamp] = 0;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems] = 0;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs] = 0;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs] = 0;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = a1;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = a2;
  v7.receiver = v5;
  v7.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
  return [super init];
}

id sub_100545874()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLGroupItem();
  return [super dealloc];
}

uint64_t sub_1005458AC()
{
  return type metadata accessor for CRLGroupItem();
}

uint64_t type metadata accessor for CRLGroupItem()
{
  uint64_t result = qword_101673048;
  if (!qword_101673048) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100545900()
{
  return swift_updateClassMetadata2();
}

id sub_1005459DC(unint64_t a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  CGSize size = CGRectNull.size;
  *(CGPoint *)(v4 + 16) = CGRectNull.origin;
  *(CGSize *)(v4 + 32) = size;
  if (a1 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (v6) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    __asm { FMOV            V0.2D, #1.0 }
    *(_OWORD *)(v4 + 32) = _Q0;
    id v38 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) initWithPosition:*(double *)(v4 + 16) size:*(double *)(v4 + 24) 1.0 1.0];
    swift_release();
    return v38;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_16;
  }
LABEL_3:
  unint64_t v7 = a1 & 0xC000000000000001;
  swift_beginAccess();
  uint64_t v8 = 4;
  unint64_t v39 = a1;
  while (1)
  {
    if (v7) {
      id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v18 = *(id *)(a1 + 8 * v8);
    }
    unint64_t v19 = v18;
    uint64_t v20 = v8 - 3;
    if (__OFADD__(v8 - 4, 1))
    {
      __break(1u);
      goto LABEL_15;
    }
    id v21 = [a2 layoutForInfo:v18];
    if (v21) {
      break;
    }
    uint64_t v42 = self;
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_101177E70;
    *(void *)(v9 + 32) = v19;
    *(void *)&aBlock.double a = v9;
    specialized Array._endMutation()();
    uint64_t v10 = v6;
    uint64_t v11 = a2;
    swift_retain();
    id v12 = v19;
    sub_1005057FC(&qword_101673060);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = sub_100545E24;
    v14[3] = v4;
    v14[4] = v12;
    *(void *)&aBlock.tCGFloat x = sub_100545E6C;
    *(void *)&aBlock.tCGFloat y = v14;
    *(void *)&aBlock.double a = _NSConcreteStackBlock;
    aBlock.CGFloat b = *(CGFloat *)"";
    *(void *)&aBlock.CGFloat c = sub_10051CE64;
    *(void *)&aBlock.double d = &unk_101507648;
    uint64_t v15 = _Block_copy(&aBlock);
    id v16 = v12;
    swift_retain();
    swift_release();
    [v42 temporaryLayoutControllerForInfos:isa useInBlock:v15];
    uint64_t v17 = v15;
    a2 = v11;
    uint64_t v6 = v10;
    a1 = v39;
    _Block_release(v17);
    swift_release();

LABEL_5:
    ++v8;
    if (v20 == v6) {
      goto LABEL_16;
    }
  }
  char v22 = v21;
  CGFloat v23 = *(double *)(v4 + 16);
  CGFloat v24 = *(double *)(v4 + 24);
  CGFloat v25 = *(double *)(v4 + 32);
  CGFloat v26 = *(double *)(v4 + 40);
  id result = [v21 pureGeometry];
  if (result)
  {
    long long v28 = result;
    [result fullTransform];
    long long v41 = *(_OWORD *)&aBlock.c;
    *(_OWORD *)uint64_t v43 = *(_OWORD *)&aBlock.a;
    long long v40 = *(_OWORD *)&aBlock.tx;

    *(_OWORD *)&aBlock.double a = *(_OWORD *)v43;
    *(_OWORD *)&aBlock.CGFloat c = v41;
    *(_OWORD *)&aBlock.tCGFloat x = v40;
    v45.origin.CGFloat x = 0.0;
    v45.origin.CGFloat y = 0.0;
    v45.size.CGFloat width = 1.0;
    v45.size.CGFloat height = 1.0;
    CGRect v48 = CGRectApplyAffineTransform(v45, &aBlock);
    v46.origin.CGFloat x = v23;
    v46.origin.CGFloat y = v24;
    v46.size.CGFloat width = v25;
    v46.size.CGFloat height = v26;
    CGRect v47 = CGRectUnion(v46, v48);
    CGFloat x = v47.origin.x;
    CGFloat y = v47.origin.y;
    CGFloat width = v47.size.width;
    CGFloat height = v47.size.height;

    *(CGFloat *)(v4 + 16) = x;
    *(CGFloat *)(v4 + 24) = y;
    *(CGFloat *)(v4 + 32) = width;
    *(CGFloat *)(v4 + 40) = height;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_100545E14()
{
  return _swift_deallocObject(v0, 48, 7);
}

id sub_100545E24(void *a1)
{
  return sub_1005442CC(a1, v1);
}

uint64_t sub_100545E2C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100545E6C(void *a1)
{
  sub_10088F320(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100545E78(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100545E88()
{
  return swift_release();
}

uint64_t sub_100545E90()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100545ECC(void *a1)
{
  sub_1005441F8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100545EDC()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

id sub_100546028()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCanvasBackgroundView();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLCanvasBackgroundView()
{
  return self;
}

uint64_t getEnumTagSinglePayload for CRLSerializationError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CRLSerializationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *id result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005461DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSerializationError()
{
  return &type metadata for CRLSerializationError;
}

unint64_t sub_100546218()
{
  unint64_t result = qword_1016730A8;
  if (!qword_1016730A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016730A8);
  }
  return result;
}

uint64_t sub_10054626C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v8 = __chkstk_darwin(v5, v7);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = *(void **)(a1 + 24);
  *uint64_t v10 = v11;
  (*(void (**)(void *, void, uint64_t, __n128))(v6 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v5, v8);
  swift_retain();
  id v12 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v10, v5);
  uint64_t result = swift_release();
  if (v11)
  {
    uint64_t v14 = *(void *)(a1 + 16);
    type metadata accessor for SQLTransaction();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v14;
    *(unsigned char *)(inited + 24) = 0;
    swift_retain();
    sub_10079EF08();
    if (!v2)
    {
      if (sub_100945974(a2))
      {
        sub_10079F3C8();
      }
      else
      {
        id v16 = *(id *)(a1 + 32);
        uint64_t v17 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v16, (uint64_t)&_mh_execute_header, v17, (uint64_t)"The block of SQL code returned false. This means we should roll back the transaction", 84, 2, (uint64_t)_swiftEmptyArrayStorage);

        sub_10079F70C();
      }
    }
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100546594(char *a1)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v6 = __chkstk_darwin(v3, v5);
  __n128 v8 = (uint64_t *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *__n128 v8 = v9;
  (*(void (**)(void *, void, uint64_t, __n128))(v4 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v3, v6);
  uint64_t v10 = a1;
  id v11 = v9;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v8, v3);

  if (a1)
  {
    uint64_t v12 = *(void *)&v10[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database];
    type metadata accessor for SQLTransaction();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v12;
    *(unsigned char *)(inited + 24) = 0;
    swift_retain();
    sub_10079EF08();
    if (!v1)
    {
      sub_100C4503C(11);
      sub_10079F3C8();
    }
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_100546894(char *a1, uint64_t a2, uint64_t a3)
{
}

void sub_1005468C0(char *a1, uint64_t a2, uint64_t a3)
{
}

void sub_1005468EC(char *a1, uint64_t a2)
{
}

void sub_100546918(char *a1, uint64_t a2, uint64_t a3)
{
}

void sub_100546944(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v9 = __chkstk_darwin(v6, v8);
  id v11 = (uint64_t *)((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *id v11 = v12;
  (*(void (**)(void *, void, uint64_t, __n128))(v7 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v6, v9);
  char v13 = a1;
  id v14 = v12;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v7 + 8))(v11, v6);

  if (a1)
  {
    uint64_t v15 = *(void *)&v13[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database];
    type metadata accessor for SQLTransaction();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v15;
    *(unsigned char *)(inited + 24) = 0;
    swift_retain();
    sub_10079EF08();
    if (!v3)
    {
      sub_100C6AEDC(0, a3);
      sub_10079F3C8();
    }
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_100546C54(char *a1, uint64_t a2, uint64_t a3)
{
}

void sub_100546C80(char *a1, uint64_t a2, uint64_t a3)
{
}

void sub_100546CAC(char *a1, uint64_t a2, uint64_t a3)
{
}

void sub_100546CD8(char *a1, uint64_t a2, uint64_t a3)
{
}

void sub_100546D04(char *a1, uint64_t a2, uint64_t a3)
{
}

void sub_100546D30(char *a1, uint64_t a2, uint64_t a3)
{
}

void sub_100546D5C(char *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v10 = __chkstk_darwin(v7, v9);
  uint64_t v12 = (uint64_t *)((char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v13 = *(void **)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *uint64_t v12 = v13;
  (*(void (**)(void *, void, uint64_t, __n128))(v8 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v7, v10);
  id v14 = a1;
  id v15 = v13;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v12, v7);

  if (a1)
  {
    uint64_t v16 = *(void *)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database];
    type metadata accessor for SQLTransaction();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v16;
    *(unsigned char *)(inited + 24) = 0;
    swift_retain();
    sub_10079EF08();
    if (!v4)
    {
      sub_100C8A5E0(a3, v18);
      sub_10079F3C8();
    }
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_100547070(char *a1, uint64_t a2, uint64_t a3)
{
}

void sub_10054709C(char *a1, uint64_t a2)
{
}

void sub_1005470C8(char *a1, uint64_t a2, uint64_t a3, int a4)
{
  HIDWORD(v18) = a4;
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v10 = __chkstk_darwin(v7, v9);
  uint64_t v12 = (uint64_t *)((char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v13 = *(void **)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *uint64_t v12 = v13;
  (*(void (**)(void *, void, uint64_t, __n128))(v8 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v7, v10);
  id v14 = a1;
  id v15 = v13;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v12, v7);

  if (a1)
  {
    uint64_t v16 = *(void *)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database];
    type metadata accessor for SQLTransaction();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v16;
    *(unsigned char *)(inited + 24) = 0;
    swift_retain();
    sub_10079EF08();
    if (!v4)
    {
      sub_100CA8490(a3, SBYTE4(v18));
      sub_10079F3C8();
    }
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_1005473DC(char *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v19 = a2;
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v11 = __chkstk_darwin(v8, v10);
  char v13 = (uint64_t *)((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v14 = *(void **)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *char v13 = v14;
  (*(void (**)(void *, void, uint64_t, __n128))(v9 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v8, v11);
  id v15 = a1;
  id v16 = v14;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v9 + 8))(v13, v8);

  if (a1)
  {
    uint64_t v17 = *(void *)&v15[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database];
    type metadata accessor for SQLTransaction();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v17;
    *(unsigned char *)(inited + 24) = 0;
    swift_retain();
    sub_10079EF08();
    if (!v4)
    {
      sub_100CA9A60(a3, a4 & 1);
      sub_10079F3C8();
    }
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_1005476F0(char *a1, uint64_t a2, uint64_t a3)
{
}

void sub_10054771C(char *a1, uint64_t a2, uint64_t a3)
{
}

void sub_100547748(char *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  id v21 = a4;
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v11 = __chkstk_darwin(v8, v10);
  char v13 = (uint64_t (**)(uint64_t, uint64_t))((char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v14 = *(void **)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *char v13 = v14;
  (*(void (**)(void *, void, uint64_t, __n128))(v9 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v8, v11);
  id v15 = a1;
  id v16 = v14;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v9 + 8))(v13, v8);

  if (a1)
  {
    uint64_t v17 = *(void *)&v15[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database];
    type metadata accessor for SQLTransaction();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v17;
    *(unsigned char *)(inited + 24) = 0;
    swift_retain();
    sub_10079EF08();
    if (!v4)
    {
      if (v21(a2, a3))
      {
        sub_10079F3C8();
      }
      else
      {
        id v19 = *(id *)&v15[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_logCategory];
        uint64_t v20 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v20, (uint64_t)"The block of SQL code returned false. This means we should roll back the transaction", 84, 2, (uint64_t)_swiftEmptyArrayStorage);

        sub_10079F70C();
      }
    }
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_100547AB8(char *a1, uint64_t a2, uint64_t a3)
{
}

void sub_100547AE4(char *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v18 = a4;
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v10 = __chkstk_darwin(v7, v9);
  uint64_t v12 = (void (**)(uint64_t))((char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v13 = *(void **)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *uint64_t v12 = v13;
  (*(void (**)(void *, void, uint64_t, __n128))(v8 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v7, v10);
  id v14 = a1;
  id v15 = v13;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v12, v7);

  if (a1)
  {
    uint64_t v16 = *(void *)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database];
    type metadata accessor for SQLTransaction();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v16;
    *(unsigned char *)(inited + 24) = 0;
    swift_retain();
    sub_10079EF08();
    if (!v4)
    {
      v18(a3);
      sub_10079F3C8();
    }
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_100547DFC(char *a1)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v6 = __chkstk_darwin(v3, v5);
  uint64_t v8 = (uint64_t *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t, __n128))(v4 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v3, v6);
  __n128 v10 = a1;
  id v11 = v9;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v8, v3);

  if (a1)
  {
    uint64_t v12 = *(void *)&v10[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database];
    type metadata accessor for SQLTransaction();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v12;
    *(unsigned char *)(inited + 24) = 0;
    swift_retain();
    sub_10079EF08();
    if (!v1)
    {
      sub_100C98368(1);
      sub_100C9797C(1);
      sub_100C97D04();
      sub_100C986F0();
      sub_10079F3C8();
    }
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_10054813C(char *a1, uint64_t a2)
{
}

void sub_100548168(char *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v9 = __chkstk_darwin(v6, v8);
  id v11 = (uint64_t *)((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *id v11 = v12;
  (*(void (**)(void *, void, uint64_t, __n128))(v7 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v6, v9);
  char v13 = a1;
  id v14 = v12;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v7 + 8))(v11, v6);

  if (a1)
  {
    uint64_t v15 = *(void *)&v13[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database];
    type metadata accessor for SQLTransaction();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v15;
    *(unsigned char *)(inited + 24) = 0;
    swift_retain();
    uint64_t v17 = sub_10079EF08();
    if (!v3)
    {
      a3(v17);
      sub_10079F3C8();
    }
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void *initializeWithTake for CRLSyncActivityScheduleState(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for CRLSQLSchemaVersionError()
{
  return &type metadata for CRLSQLSchemaVersionError;
}

uint64_t sub_100548490@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v55 = a3;
  uint64_t v7 = type metadata accessor for CRLTweenLayerAnimation();
  uint64_t v54 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7, v8);
  id v11 = (double *)((char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = (char *)v11 + *(int *)(v9 + 28);
  UUID.init()();
  uint64_t v13 = (uint64_t)v11 + *(int *)(v7 + 36);
  uint64_t v14 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v13, 1, 1, v14);
  uint64_t v52 = v7;
  uint64_t v16 = (uint64_t)v11 + *(int *)(v7 + 40);
  v15(v16, 1, 1, v14);
  *id v11 = a4;
  sub_1005498A4((uint64_t)a1, (uint64_t)(v11 + 1));
  sub_100522E9C(a2, (uint64_t)(v11 + 6), &qword_10167E120);
  uint64_t v53 = a2;
  sub_100522E9C(a2, (uint64_t)&v63, &qword_10167E120);
  if (v64)
  {
    sub_10053974C(&v63, (uint64_t)v67);
    uint64_t v17 = v67[3];
    uint64_t v18 = v67[4];
    sub_10050F848(v67, v67[3]);
    double v19 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v18 + 24) + 8) + 8))(v17);
    uint64_t v21 = a1[3];
    uint64_t v20 = a1[4];
    sub_10050F848(a1, v21);
    double v22 = v19 - (*(double (**)(uint64_t))(*(void *)(*(void *)(v20 + 24) + 8) + 40))(v21);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v67);
  }
  else
  {
    sub_100522F00((uint64_t)&v63, &qword_10167E120);
    uint64_t v24 = a1[3];
    uint64_t v23 = a1[4];
    sub_10050F848(a1, v24);
    double v22 = a4 - (*(double (**)(uint64_t))(*(void *)(*(void *)(v23 + 24) + 8) + 40))(v24);
  }
  v11[11] = v22;
  if (v22 <= 0.0)
  {
    sub_100522F00(v53, &qword_10167E120);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    sub_100549908((uint64_t)(v11 + 1));
    uint64_t v50 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(void *)(v50 - 8) + 8))(v12, v50);
    sub_100522F00(v13, &qword_1016730B0);
    sub_100522F00(v16, &qword_1016730B0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v55, 1, 1, v52);
  }
  else
  {
    sub_10054995C((uint64_t)(v11 + 1), (uint64_t)v62);
    uint64_t result = sub_100818A24((uint64_t)v67);
    if (v67[10])
    {
      sub_10081F290((uint64_t)&v63);
      sub_1005499B8((uint64_t)v67);
      sub_100549908((uint64_t)v62);
      if (qword_10166F720 != -1) {
        swift_once();
      }
      CGFloat v26 = (void *)qword_10171B538;
      sub_100549A0C((uint64_t)&v63, (uint64_t)&v67[3]);
      *(_OWORD *)&v67[1] = xmmword_10117EE20;
      v67[0] = v26;
      v67[36] = 0;
      LODWORD(v67[37]) = 131586;
      uint64_t v27 = a1[3];
      uint64_t v28 = a1[4];
      sub_10050F848(a1, v27);
      uint64_t v29 = *(void *)(*(void *)(v28 + 24) + 8);
      uint64_t v30 = *(double (**)(uint64_t, uint64_t))(v29 + 40);
      id v31 = v26;
      double v32 = v30(v27, v29);
      sub_100549A68((uint64_t)v67, (uint64_t)&v63);
      *((double *)&v63 + 1) = v32;
      sub_100549AC4((uint64_t)v67);
      uint64_t v33 = *((void *)v11 + 11);
      sub_100549A68((uint64_t)&v63, (uint64_t)v67);
      v67[2] = v33;
      sub_100549AC4((uint64_t)&v63);
      sub_100549A68((uint64_t)v67, (uint64_t)&v63);
      CAMediaTimingFillMode v34 = v65;
      uint64_t v35 = kCAFillModeRemoved;

      CAMediaTimingFillMode v65 = kCAFillModeRemoved;
      sub_100549AC4((uint64_t)v67);
      sub_100549A68((uint64_t)&v63, (uint64_t)v67);
      BYTE1(v67[37]) = 0;
      sub_100549AC4((uint64_t)&v63);
      sub_100549A68((uint64_t)v67, (uint64_t)&v63);
      char v66 = 0;
      sub_100549AC4((uint64_t)v67);
      uint64_t v36 = a1[3];
      uint64_t v37 = a1[4];
      sub_10050F848(a1, v36);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v37 + 88))(v67, v36, v37);
      uint64_t v38 = v67[3];
      uint64_t v39 = v67[4];
      sub_10050F848(v67, v67[3]);
      char v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 184))(v38, v39);
      uint64_t v41 = v53;
      sub_100522E9C(v53, (uint64_t)v62, &qword_10167E120);
      if (v40)
      {
        sub_100522E9C((uint64_t)v62, (uint64_t)v59, &qword_10167E120);
        uint64_t v42 = v60;
        uint64_t v44 = v54;
        uint64_t v43 = v55;
        uint64_t v45 = v52;
        if (v60)
        {
          uint64_t v46 = v61;
          sub_10050F848(v59, v60);
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v46 + 88))(v56, v42, v46);
          uint64_t v47 = v57;
          uint64_t v48 = v58;
          sub_10050F848(v56, v57);
          char v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 184))(v47, v48);
          sub_100522F00(v41, &qword_10167E120);
          sub_100522F00((uint64_t)v62, &qword_10167E120);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v56);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v59);
        }
        else
        {
          sub_100522F00(v41, &qword_10167E120);
          sub_100522F00((uint64_t)v62, &qword_10167E120);
          sub_100522F00((uint64_t)v59, &qword_10167E120);
          char v49 = 1;
        }
      }
      else
      {
        sub_100522F00(v41, &qword_10167E120);
        sub_100522F00((uint64_t)v62, &qword_10167E120);
        char v49 = 0;
        uint64_t v44 = v54;
        uint64_t v43 = v55;
        uint64_t v45 = v52;
      }
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v67);
      sub_100549A68((uint64_t)&v63, (uint64_t)v67);
      BYTE3(v67[37]) = v49 & 1;
      sub_100549AC4((uint64_t)&v63);
      memcpy((char *)v11 + *(int *)(v45 + 32), v67, 0x12CuLL);
      sub_100549B18((uint64_t)v11, v43);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v43, 0, 1, v45);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
      return sub_10054BDB0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CRLTweenLayerAnimation);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100548B64()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  sub_10050F848(v0 + 1, v1);
  uint64_t v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 64))(v1, v2);
  if (!v3) {
    return (uint64_t)v3;
  }
  sub_100522E9C((uint64_t)(v0 + 6), (uint64_t)&v13, &qword_10167E120);
  if (!v14)
  {
    sub_100522F00((uint64_t)&v13, &qword_10167E120);
    return (uint64_t)v3;
  }
  sub_10053974C(&v13, (uint64_t)v15);
  uint64_t v4 = v16;
  uint64_t v5 = v17;
  sub_10050F848(v15, v16);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 64);
  id v7 = v3;
  uint64_t v8 = v6(v4, v5);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    sub_10054CE40();
    id v10 = v7;
    char v11 = static NSObject.== infix(_:_:)();

    if (v11)
    {
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v15);
      return (uint64_t)v3;
    }
  }
  else
  {
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100548CE4(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101684010);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = type metadata accessor for CRLTweenLayerAnimation();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  char v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1005498A4(a1, (uint64_t)v17);
  sub_1005057FC((uint64_t *)&unk_10167BDB0);
  int v12 = swift_dynamicCast();
  long long v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v12)
  {
    v13(v6, 0, 1, v7);
    sub_10054C908((uint64_t)v6, (uint64_t)v11);
    char v14 = sub_10054C96C(v11, v1);
    sub_10054BDB0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CRLTweenLayerAnimation);
  }
  else
  {
    v13(v6, 1, 1, v7);
    sub_100522F00((uint64_t)v6, (uint64_t *)&unk_101684010);
    char v14 = 0;
  }
  return v14 & 1;
}

id sub_100548EA0(uint64_t a1, double a2)
{
  sub_100522E9C(a1, (uint64_t)v41, (uint64_t *)&unk_101684000);
  sub_100522E9C((uint64_t)v41, (uint64_t)v37, (uint64_t *)&unk_101684000);
  uint64_t v4 = v39;
  sub_100522F00((uint64_t)v37, (uint64_t *)&unk_101684000);
  if (!v4)
  {
    sub_100818A24((uint64_t)v37);
    sub_100522F00((uint64_t)v41, (uint64_t *)&unk_101684000);
    sub_10054CE80((uint64_t)v37, (uint64_t)v41);
  }
  uint64_t v5 = v2 + *(int *)(type metadata accessor for CRLTweenLayerAnimation() + 32);
  sub_100549A68(v5, (uint64_t)v37);
  char v6 = sub_1009FCAC8();
  sub_1009FC740(v6);
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [self animationWithKeyPath:v7];

  sub_100549AC4((uint64_t)v37);
  sub_100522E9C((uint64_t)v41, (uint64_t)&v31, (uint64_t *)&unk_101684000);
  if (v36)
  {
    v38[1] = v34;
    v38[2] = v35;
    uint64_t v39 = v36;
    v37[0] = v31;
    v37[1] = v32;
    v38[0] = v33;
    sub_100522E9C((uint64_t)v37, (uint64_t)&v31, &qword_101672BF0);
    uint64_t v9 = *((void *)&v32 + 1);
    if (*((void *)&v32 + 1))
    {
      uint64_t v10 = sub_10050F848(&v31, *((uint64_t *)&v32 + 1));
      uint64_t v11 = *(void *)(v9 - 8);
      __n128 v12 = __chkstk_darwin(v10, v10);
      char v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v11 + 16))(v14, v12);
      uint64_t v15 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v31);
    }
    else
    {
      uint64_t v15 = 0;
    }
    [v8 setFromValue:v15];
    swift_unknownObjectRelease();
    sub_100522E9C((uint64_t)v38, (uint64_t)&v31, &qword_101672BF0);
    uint64_t v16 = *((void *)&v32 + 1);
    if (*((void *)&v32 + 1))
    {
      uint64_t v17 = sub_10050F848(&v31, *((uint64_t *)&v32 + 1));
      uint64_t v18 = *(void *)(v16 - 8);
      __n128 v19 = __chkstk_darwin(v17, v17);
      uint64_t v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v18 + 16))(v21, v19);
      uint64_t v22 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v16);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v31);
    }
    else
    {
      uint64_t v22 = 0;
    }
    [v8 setToValue:v22];
    swift_unknownObjectRelease();
    sub_1005499B8((uint64_t)v37);
  }
  else
  {
    sub_100522F00((uint64_t)&v31, (uint64_t *)&unk_101684000);
  }
  [v8 setBeginTime:*(double *)(v5 + 8) + a2];
  [v8 setDuration:*(double *)(v5 + 16)];
  uint64_t v23 = qword_10166F748;
  id v24 = v8;
  if (v23 != -1) {
    swift_once();
  }
  [v24 setTimingFunction:qword_10171B560];

  sub_100549A68(v5, (uint64_t)v37);
  CGFloat v25 = v40;
  if (v40)
  {
    id v26 = v24;
    id v27 = v25;
  }
  else
  {
    id v27 = [v24 fillMode];
  }
  id v28 = v25;
  sub_100549AC4((uint64_t)v37);
  [v24 setFillMode:v27];

  sub_100522F00((uint64_t)v41, (uint64_t *)&unk_101684000);
  return v24;
}

uint64_t sub_10054934C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = type metadata accessor for UUID();
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1005493C0@<X0>(uint64_t a1@<X8>)
{
  return sub_100818A24(a1);
}

uint64_t sub_1005493E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 32);
  a2[3] = (uint64_t)&type metadata for CRLBasicLayerAnimation.Def;
  a2[4] = sub_10054CB94();
  uint64_t v5 = swift_allocObject();
  *a2 = v5;

  return sub_100549A68(v4, v5 + 16);
}

void (*sub_100549450(void *a1, uint64_t a2))(void **a1)
{
  uint64_t v5 = malloc(0x28uLL);
  *a1 = v5;
  uint64_t v6 = v2 + *(int *)(a2 + 32);
  v5[3] = &type metadata for CRLBasicLayerAnimation.Def;
  v5[4] = sub_10054CB94();
  uint64_t v7 = swift_allocObject();
  *uint64_t v5 = v7;
  sub_100549A68(v6, v7 + 16);
  return sub_1005494E8;
}

void sub_1005494E8(void **a1)
{
  uint64_t v1 = *a1;
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"def", 3, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/Animations/CRLTweenLayerAnimation.swift", 119, 2, 73, (uint64_t)"Tried to set a property of a tween's def, but tween defs are calculated.", 72, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"def", 3, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/Animations/CRLTweenLayerAnimation.swift", 119, 2, 73);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);

  free(v1);
}

uint64_t sub_1005495D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100522E9C(v2 + *(int *)(a1 + 36), a2, &qword_1016730B0);
}

uint64_t sub_100549600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100522E9C(v2 + *(int *)(a1 + 40), a2, &qword_1016730B0);
}

Swift::Int sub_100549630()
{
  return Hasher._finalize()();
}

uint64_t sub_1005496C4()
{
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_100549744()
{
  return Hasher._finalize()();
}

double sub_1005497D4(uint64_t a1)
{
  return *(double *)(v1 + *(int *)(a1 + 32) + 8);
}

uint64_t sub_1005497E4(uint64_t result, double a2)
{
  *(double *)(v2 + *(int *)(result + 32) + 8) = a2;
  return result;
}

double (*sub_1005497F4(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  *(void *)(a1 + 8) = v2;
  uint64_t v3 = *(int *)(a2 + 32);
  *(_DWORD *)(a1 + 16) = v3;
  *(void *)a1 = *(void *)(v2 + v3 + 8);
  return sub_100549830;
}

double sub_100549830(uint64_t a1)
{
  double result = *(double *)a1;
  *(void *)(*(void *)(a1 + 8) + *(int *)(a1 + 16) + 8) = *(void *)a1;
  return result;
}

double sub_100549848(uint64_t a1)
{
  return *(double *)(v1 + *(int *)(a1 + 32) + 16);
}

uint64_t type metadata accessor for CRLTweenLayerAnimation()
{
  uint64_t result = qword_101673110;
  if (!qword_101673110) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005498A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100549908(uint64_t a1)
{
  return a1;
}

uint64_t sub_10054995C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1005499B8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100549A0C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100549A68(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100549AC4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100549B18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLTweenLayerAnimation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100549B7C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    long long v7 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 8, (uint64_t)(a2 + 1));
    id v8 = (_OWORD *)(v4 + 48);
    uint64_t v9 = a2 + 6;
    uint64_t v10 = a2[9];
    if (v10)
    {
      uint64_t v11 = a2[10];
      *(void *)(v4 + 72) = v10;
      *(void *)(v4 + 80) = v11;
      (**(void (***)(_OWORD *, _OWORD *))(v10 - 8))(v8, v9);
    }
    else
    {
      long long v13 = *((_OWORD *)a2 + 4);
      *id v8 = *v9;
      *(_OWORD *)(v4 + 64) = v13;
      *(void *)(v4 + 80) = a2[10];
    }
    *(void *)(v4 + 88) = a2[11];
    uint64_t v14 = a3[7];
    uint64_t v15 = v4 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = type metadata accessor for UUID();
    uint64_t v106 = *(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
    uint64_t v107 = v17;
    v106(v15, v16);
    uint64_t v18 = a3[8];
    uint64_t v19 = v4 + v18;
    uint64_t v20 = (uint64_t)a2 + v18;
    uint64_t v21 = *(void **)((char *)a2 + v18);
    *(void *)uint64_t v19 = v21;
    *(_OWORD *)(v19 + 8) = *(_OWORD *)(v20 + 8);
    uint64_t v22 = (_OWORD *)(v19 + 24);
    uint64_t v23 = (_OWORD *)(v20 + 24);
    int v24 = *(unsigned __int8 *)(v20 + 280);
    id v25 = v21;
    switch(v24)
    {
      case 0:
        uint64_t v26 = *(void *)(v20 + 48);
        if (v26)
        {
          *(void *)(v19 + 48) = v26;
          (**(void (***)(uint64_t, uint64_t))(v26 - 8))(v19 + 24, v20 + 24);
        }
        else
        {
          long long v64 = *(_OWORD *)(v20 + 40);
          *uint64_t v22 = *v23;
          *(_OWORD *)(v19 + 40) = v64;
        }
        CAMediaTimingFillMode v65 = (_OWORD *)(v19 + 56);
        char v66 = (_OWORD *)(v20 + 56);
        uint64_t v67 = *(void *)(v20 + 80);
        if (v67)
        {
          *(void *)(v19 + 80) = v67;
          (**(void (***)(_OWORD *, _OWORD *))(v67 - 8))(v65, v66);
        }
        else
        {
          long long v102 = *(_OWORD *)(v20 + 72);
          *CAMediaTimingFillMode v65 = *v66;
          *(_OWORD *)(v19 + 72) = v102;
        }
        *(unsigned char *)(v19 + 280) = 0;
        break;
      case 1:
        uint64_t v27 = *(void *)(v20 + 48);
        if (v27)
        {
          *(void *)(v19 + 48) = v27;
          (**(void (***)(uint64_t, uint64_t))(v27 - 8))(v19 + 24, v20 + 24);
        }
        else
        {
          long long v68 = *(_OWORD *)(v20 + 40);
          *uint64_t v22 = *v23;
          *(_OWORD *)(v19 + 40) = v68;
        }
        *(unsigned char *)(v19 + 280) = 1;
        break;
      case 18:
        id v28 = *(void **)(v20 + 24);
        uint64_t v29 = *(void **)(v20 + 32);
        *(void *)(v19 + 24) = v28;
        *(void *)(v19 + 32) = v29;
        char v30 = 18;
        goto LABEL_19;
      case 19:
        long long v31 = *(void **)v23;
        *(void *)(v19 + 24) = *(void *)v23;
        char v32 = 19;
        goto LABEL_31;
      case 20:
        id v28 = *(void **)(v20 + 24);
        uint64_t v29 = *(void **)(v20 + 32);
        *(void *)(v19 + 24) = v28;
        *(void *)(v19 + 32) = v29;
        char v30 = 20;
        goto LABEL_19;
      case 21:
        long long v31 = *(void **)v23;
        *(void *)(v19 + 24) = *(void *)v23;
        char v32 = 21;
        goto LABEL_31;
      case 28:
        id v28 = *(void **)(v20 + 24);
        uint64_t v29 = *(void **)(v20 + 32);
        *(void *)(v19 + 24) = v28;
        *(void *)(v19 + 32) = v29;
        char v30 = 28;
        goto LABEL_19;
      case 29:
        long long v31 = *(void **)v23;
        *(void *)(v19 + 24) = *(void *)v23;
        char v32 = 29;
        goto LABEL_31;
      case 30:
        id v28 = *(void **)(v20 + 24);
        uint64_t v29 = *(void **)(v20 + 32);
        *(void *)(v19 + 24) = v28;
        *(void *)(v19 + 32) = v29;
        char v30 = 30;
LABEL_19:
        *(unsigned char *)(v19 + 280) = v30;
        id v33 = v28;
        id v34 = v29;
        break;
      case 31:
        long long v31 = *(void **)v23;
        *(void *)(v19 + 24) = *(void *)v23;
        char v32 = 31;
        goto LABEL_31;
      case 32:
        uint64_t v35 = *(void *)(v20 + 32);
        *(void *)(v19 + 24) = *(void *)(v20 + 24);
        *(void *)(v19 + 32) = v35;
        char v36 = 32;
        goto LABEL_28;
      case 33:
        *(void *)(v19 + 24) = *(void *)v23;
        char v37 = 33;
        goto LABEL_51;
      case 34:
        uint64_t v38 = *(void *)(v20 + 48);
        if (v38)
        {
          *(void *)(v19 + 48) = v38;
          (**(void (***)(uint64_t, uint64_t))(v38 - 8))(v19 + 24, v20 + 24);
        }
        else
        {
          long long v69 = *(_OWORD *)(v20 + 40);
          *uint64_t v22 = *v23;
          *(_OWORD *)(v19 + 40) = v69;
        }
        uint64_t v70 = (_OWORD *)(v19 + 56);
        uint64_t v71 = (_OWORD *)(v20 + 56);
        uint64_t v72 = *(void *)(v20 + 80);
        if (v72)
        {
          *(void *)(v19 + 80) = v72;
          (**(void (***)(_OWORD *, _OWORD *))(v72 - 8))(v70, v71);
        }
        else
        {
          long long v103 = *(_OWORD *)(v20 + 72);
          *uint64_t v70 = *v71;
          *(_OWORD *)(v19 + 72) = v103;
        }
        *(unsigned char *)(v19 + 280) = 34;
        break;
      case 35:
        uint64_t v39 = *(void *)(v20 + 48);
        if (v39)
        {
          *(void *)(v19 + 48) = v39;
          (**(void (***)(uint64_t, uint64_t))(v39 - 8))(v19 + 24, v20 + 24);
        }
        else
        {
          long long v73 = *(_OWORD *)(v20 + 40);
          *uint64_t v22 = *v23;
          *(_OWORD *)(v19 + 40) = v73;
        }
        *(unsigned char *)(v19 + 280) = 35;
        break;
      case 36:
        uint64_t v40 = *(void *)(v20 + 32);
        *(void *)(v19 + 24) = *(void *)(v20 + 24);
        *(void *)(v19 + 32) = v40;
        char v36 = 36;
LABEL_28:
        *(unsigned char *)(v19 + 280) = v36;
        swift_bridgeObjectRetain();
        goto LABEL_52;
      case 37:
        *(void *)(v19 + 24) = *(void *)v23;
        char v37 = 37;
        goto LABEL_51;
      case 58:
        *(_OWORD *)(v19 + 24) = *(_OWORD *)(v20 + 24);
        *(_OWORD *)(v19 + 40) = *(_OWORD *)(v20 + 40);
        *(unsigned char *)(v19 + 56) = *(unsigned char *)(v20 + 56);
        long long v31 = *(void **)(v20 + 64);
        *(void *)(v19 + 64) = v31;
        *(unsigned char *)(v19 + 72) = *(unsigned char *)(v20 + 72);
        char v32 = 58;
LABEL_31:
        *(unsigned char *)(v19 + 280) = v32;
        id v41 = v31;
        break;
      case 63:
        long long v42 = *(_OWORD *)(v20 + 40);
        *uint64_t v22 = *v23;
        *(_OWORD *)(v19 + 40) = v42;
        *(_OWORD *)(v19 + 56) = *(_OWORD *)(v20 + 56);
        *(_OWORD *)(v19 + 72) = *(_OWORD *)(v20 + 72);
        uint64_t v43 = *(void **)(v20 + 88);
        uint64_t v44 = *(void **)(v20 + 96);
        *(void *)(v19 + 88) = v43;
        *(void *)(v19 + 96) = v44;
        uint64_t v45 = *(void **)(v20 + 104);
        uint64_t v46 = *(void **)(v20 + 112);
        *(void *)(v19 + 104) = v45;
        *(void *)(v19 + 112) = v46;
        uint64_t v104 = (_OWORD *)(v20 + 120);
        uint64_t v47 = *(void *)(v20 + 144);
        id v48 = v43;
        id v49 = v44;
        id v50 = v45;
        id v51 = v46;
        if (v47)
        {
          uint64_t v52 = *(void *)(v20 + 152);
          *(void *)(v19 + 144) = v47;
          *(void *)(v19 + 152) = v52;
          (**(void (***)(uint64_t, _OWORD *, uint64_t))(v47 - 8))(v19 + 120, v104, v47);
        }
        else
        {
          long long v74 = *(_OWORD *)(v20 + 136);
          *(_OWORD *)(v19 + 120) = *v104;
          *(_OWORD *)(v19 + 136) = v74;
          *(void *)(v19 + 152) = *(void *)(v20 + 152);
        }
        uint64_t v75 = *(void *)(v20 + 168);
        *(void *)(v19 + 160) = *(void *)(v20 + 160);
        *(void *)(v19 + 168) = v75;
        char v37 = 63;
        goto LABEL_51;
      case 64:
        long long v53 = *(_OWORD *)(v20 + 40);
        *uint64_t v22 = *v23;
        *(_OWORD *)(v19 + 40) = v53;
        uint64_t v54 = *(void **)(v20 + 56);
        uint64_t v55 = *(void **)(v20 + 64);
        *(void *)(v19 + 56) = v54;
        *(void *)(v19 + 64) = v55;
        long long v56 = *(void **)(v20 + 72);
        uint64_t v57 = *(void **)(v20 + 80);
        *(void *)(v19 + 72) = v56;
        *(void *)(v19 + 80) = v57;
        uint64_t v105 = (_OWORD *)(v20 + 88);
        uint64_t v58 = *(void *)(v20 + 112);
        id v59 = v54;
        id v60 = v55;
        id v61 = v56;
        id v62 = v57;
        if (v58)
        {
          uint64_t v63 = *(void *)(v20 + 120);
          *(void *)(v19 + 112) = v58;
          *(void *)(v19 + 120) = v63;
          (**(void (***)(uint64_t, _OWORD *, uint64_t))(v58 - 8))(v19 + 88, v105, v58);
        }
        else
        {
          long long v76 = *(_OWORD *)(v20 + 104);
          *(_OWORD *)(v19 + 88) = *v105;
          *(_OWORD *)(v19 + 104) = v76;
          *(void *)(v19 + 120) = *(void *)(v20 + 120);
        }
        uint64_t v77 = *(void *)(v20 + 136);
        *(void *)(v19 + 128) = *(void *)(v20 + 128);
        *(void *)(v19 + 136) = v77;
        char v37 = 64;
LABEL_51:
        *(unsigned char *)(v19 + 280) = v37;
LABEL_52:
        swift_bridgeObjectRetain();
        break;
      default:
        memcpy((void *)(v19 + 24), (const void *)(v20 + 24), 0x101uLL);
        break;
    }
    uint64_t v78 = *(void **)(v20 + 288);
    *(void *)(v19 + 288) = v78;
    *(_DWORD *)(v19 + 296) = *(_DWORD *)(v20 + 296);
    uint64_t v79 = a3[9];
    unint64_t v80 = (char *)(v4 + v79);
    char v81 = (char *)a2 + v79;
    uint64_t v82 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
    uint64_t v83 = *(void *)(v82 - 8);
    unint64_t v84 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48);
    id v85 = v78;
    if (v84(v81, 1, v82))
    {
      uint64_t v86 = sub_1005057FC(&qword_1016730B0);
      memcpy(v80, v81, *(void *)(*(void *)(v86 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v106)(v80, v81, v107);
      uint64_t v87 = *(int *)(v82 + 20);
      uint64_t v88 = &v80[v87];
      uint64_t v89 = &v81[v87];
      uint64_t v90 = *((void *)v89 + 1);
      *(void *)uint64_t v88 = *(void *)v89;
      *((void *)v88 + 1) = v90;
      id v91 = *(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56);
      swift_retain();
      v91(v80, 0, 1, v82);
    }
    uint64_t v92 = a3[10];
    uint64_t v93 = (char *)(v4 + v92);
    uint64_t v94 = (char *)a2 + v92;
    if (v84(v94, 1, v82))
    {
      uint64_t v95 = sub_1005057FC(&qword_1016730B0);
      memcpy(v93, v94, *(void *)(*(void *)(v95 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v106)(v93, v94, v107);
      uint64_t v96 = *(int *)(v82 + 20);
      uint64_t v97 = &v93[v96];
      unint64_t v98 = &v94[v96];
      uint64_t v99 = *((void *)v98 + 1);
      *(void *)uint64_t v97 = *(void *)v98;
      *((void *)v97 + 1) = v99;
      uint64_t v100 = *(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56);
      swift_retain();
      v100(v93, 0, 1, v82);
    }
  }
  return v4;
}

uint64_t sub_10054A474(uint64_t a1, int *a2)
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 8);
  if (*(void *)(a1 + 72)) {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 48);
  }
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = a1 + a2[8];

  id v8 = (id *)(v7 + 24);
  switch(*(unsigned char *)(v7 + 280))
  {
    case 0:
    case 0x22:
      if (*(void *)(v7 + 48)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v8);
      }
      if (*(void *)(v7 + 80)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v7 + 56);
      }
      break;
    case 1:
    case 0x23:
      if (*(void *)(v7 + 48)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v8);
      }
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      break;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:

      break;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      goto LABEL_19;
    case 0x21:
    case 0x25:
      goto LABEL_19;
    case 0x3A:

      break;
    case 0x3F:

      if (*(void *)(v7 + 144)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v7 + 120);
      }
      goto LABEL_19;
    case 0x40:

      if (*(void *)(v7 + 112)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v7 + 88);
      }
LABEL_19:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  uint64_t v9 = a1 + a2[9];
  uint64_t v10 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
  if (!v11(v9, 1, v10))
  {
    v6(v9, v5);
    swift_release();
  }
  uint64_t v12 = a1 + a2[10];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(v12, 1, v10);
  if (!result)
  {
    v6(v12, v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_10054A824(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 8, a2 + 8);
  uint64_t v7 = (_OWORD *)(a1 + 48);
  id v8 = (_OWORD *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 72);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = v9;
    *(void *)(a1 + 80) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 64);
    *uint64_t v7 = *v8;
    *(_OWORD *)(a1 + 64) = v11;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v104 = *(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  uint64_t v105 = v15;
  v104(v13, v14);
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void **)(a2 + v16);
  *(void *)uint64_t v17 = v19;
  *(_OWORD *)(v17 + 8) = *(_OWORD *)(v18 + 8);
  uint64_t v20 = (_OWORD *)(v17 + 24);
  uint64_t v21 = (_OWORD *)(v18 + 24);
  int v22 = *(unsigned __int8 *)(v18 + 280);
  id v23 = v19;
  switch(v22)
  {
    case 0:
      uint64_t v24 = *(void *)(v18 + 48);
      if (v24)
      {
        *(void *)(v17 + 48) = v24;
        (**(void (***)(uint64_t, uint64_t))(v24 - 8))(v17 + 24, v18 + 24);
      }
      else
      {
        long long v62 = *(_OWORD *)(v18 + 40);
        *uint64_t v20 = *v21;
        *(_OWORD *)(v17 + 40) = v62;
      }
      uint64_t v63 = (_OWORD *)(v17 + 56);
      long long v64 = (_OWORD *)(v18 + 56);
      uint64_t v65 = *(void *)(v18 + 80);
      if (v65)
      {
        *(void *)(v17 + 80) = v65;
        (**(void (***)(_OWORD *, _OWORD *))(v65 - 8))(v63, v64);
      }
      else
      {
        long long v100 = *(_OWORD *)(v18 + 72);
        *uint64_t v63 = *v64;
        *(_OWORD *)(v17 + 72) = v100;
      }
      *(unsigned char *)(v17 + 280) = 0;
      break;
    case 1:
      uint64_t v25 = *(void *)(v18 + 48);
      if (v25)
      {
        *(void *)(v17 + 48) = v25;
        (**(void (***)(uint64_t, uint64_t))(v25 - 8))(v17 + 24, v18 + 24);
      }
      else
      {
        long long v66 = *(_OWORD *)(v18 + 40);
        *uint64_t v20 = *v21;
        *(_OWORD *)(v17 + 40) = v66;
      }
      *(unsigned char *)(v17 + 280) = 1;
      break;
    case 18:
      uint64_t v26 = *(void **)(v18 + 24);
      uint64_t v27 = *(void **)(v18 + 32);
      *(void *)(v17 + 24) = v26;
      *(void *)(v17 + 32) = v27;
      char v28 = 18;
      goto LABEL_17;
    case 19:
      uint64_t v29 = *(void **)v21;
      *(void *)(v17 + 24) = *(void *)v21;
      char v30 = 19;
      goto LABEL_29;
    case 20:
      uint64_t v26 = *(void **)(v18 + 24);
      uint64_t v27 = *(void **)(v18 + 32);
      *(void *)(v17 + 24) = v26;
      *(void *)(v17 + 32) = v27;
      char v28 = 20;
      goto LABEL_17;
    case 21:
      uint64_t v29 = *(void **)v21;
      *(void *)(v17 + 24) = *(void *)v21;
      char v30 = 21;
      goto LABEL_29;
    case 28:
      uint64_t v26 = *(void **)(v18 + 24);
      uint64_t v27 = *(void **)(v18 + 32);
      *(void *)(v17 + 24) = v26;
      *(void *)(v17 + 32) = v27;
      char v28 = 28;
      goto LABEL_17;
    case 29:
      uint64_t v29 = *(void **)v21;
      *(void *)(v17 + 24) = *(void *)v21;
      char v30 = 29;
      goto LABEL_29;
    case 30:
      uint64_t v26 = *(void **)(v18 + 24);
      uint64_t v27 = *(void **)(v18 + 32);
      *(void *)(v17 + 24) = v26;
      *(void *)(v17 + 32) = v27;
      char v28 = 30;
LABEL_17:
      *(unsigned char *)(v17 + 280) = v28;
      id v31 = v26;
      id v32 = v27;
      break;
    case 31:
      uint64_t v29 = *(void **)v21;
      *(void *)(v17 + 24) = *(void *)v21;
      char v30 = 31;
      goto LABEL_29;
    case 32:
      uint64_t v33 = *(void *)(v18 + 32);
      *(void *)(v17 + 24) = *(void *)(v18 + 24);
      *(void *)(v17 + 32) = v33;
      char v34 = 32;
      goto LABEL_26;
    case 33:
      *(void *)(v17 + 24) = *(void *)v21;
      char v35 = 33;
      goto LABEL_49;
    case 34:
      uint64_t v36 = *(void *)(v18 + 48);
      if (v36)
      {
        *(void *)(v17 + 48) = v36;
        (**(void (***)(uint64_t, uint64_t))(v36 - 8))(v17 + 24, v18 + 24);
      }
      else
      {
        long long v67 = *(_OWORD *)(v18 + 40);
        *uint64_t v20 = *v21;
        *(_OWORD *)(v17 + 40) = v67;
      }
      long long v68 = (_OWORD *)(v17 + 56);
      long long v69 = (_OWORD *)(v18 + 56);
      uint64_t v70 = *(void *)(v18 + 80);
      if (v70)
      {
        *(void *)(v17 + 80) = v70;
        (**(void (***)(_OWORD *, _OWORD *))(v70 - 8))(v68, v69);
      }
      else
      {
        long long v101 = *(_OWORD *)(v18 + 72);
        _OWORD *v68 = *v69;
        *(_OWORD *)(v17 + 72) = v101;
      }
      *(unsigned char *)(v17 + 280) = 34;
      break;
    case 35:
      uint64_t v37 = *(void *)(v18 + 48);
      if (v37)
      {
        *(void *)(v17 + 48) = v37;
        (**(void (***)(uint64_t, uint64_t))(v37 - 8))(v17 + 24, v18 + 24);
      }
      else
      {
        long long v71 = *(_OWORD *)(v18 + 40);
        *uint64_t v20 = *v21;
        *(_OWORD *)(v17 + 40) = v71;
      }
      *(unsigned char *)(v17 + 280) = 35;
      break;
    case 36:
      uint64_t v38 = *(void *)(v18 + 32);
      *(void *)(v17 + 24) = *(void *)(v18 + 24);
      *(void *)(v17 + 32) = v38;
      char v34 = 36;
LABEL_26:
      *(unsigned char *)(v17 + 280) = v34;
      swift_bridgeObjectRetain();
      goto LABEL_50;
    case 37:
      *(void *)(v17 + 24) = *(void *)v21;
      char v35 = 37;
      goto LABEL_49;
    case 58:
      *(_OWORD *)(v17 + 24) = *(_OWORD *)(v18 + 24);
      *(_OWORD *)(v17 + 40) = *(_OWORD *)(v18 + 40);
      *(unsigned char *)(v17 + 56) = *(unsigned char *)(v18 + 56);
      uint64_t v29 = *(void **)(v18 + 64);
      *(void *)(v17 + 64) = v29;
      *(unsigned char *)(v17 + 72) = *(unsigned char *)(v18 + 72);
      char v30 = 58;
LABEL_29:
      *(unsigned char *)(v17 + 280) = v30;
      id v39 = v29;
      break;
    case 63:
      long long v40 = *(_OWORD *)(v18 + 40);
      *uint64_t v20 = *v21;
      *(_OWORD *)(v17 + 40) = v40;
      *(_OWORD *)(v17 + 56) = *(_OWORD *)(v18 + 56);
      *(_OWORD *)(v17 + 72) = *(_OWORD *)(v18 + 72);
      id v41 = *(void **)(v18 + 88);
      long long v42 = *(void **)(v18 + 96);
      *(void *)(v17 + 88) = v41;
      *(void *)(v17 + 96) = v42;
      uint64_t v43 = *(void **)(v18 + 104);
      uint64_t v44 = *(void **)(v18 + 112);
      *(void *)(v17 + 104) = v43;
      *(void *)(v17 + 112) = v44;
      long long v102 = (_OWORD *)(v18 + 120);
      uint64_t v45 = *(void *)(v18 + 144);
      id v46 = v41;
      id v47 = v42;
      id v48 = v43;
      id v49 = v44;
      if (v45)
      {
        uint64_t v50 = *(void *)(v18 + 152);
        *(void *)(v17 + 144) = v45;
        *(void *)(v17 + 152) = v50;
        (**(void (***)(uint64_t, _OWORD *, uint64_t))(v45 - 8))(v17 + 120, v102, v45);
      }
      else
      {
        long long v72 = *(_OWORD *)(v18 + 136);
        *(_OWORD *)(v17 + 120) = *v102;
        *(_OWORD *)(v17 + 136) = v72;
        *(void *)(v17 + 152) = *(void *)(v18 + 152);
      }
      uint64_t v73 = *(void *)(v18 + 168);
      *(void *)(v17 + 160) = *(void *)(v18 + 160);
      *(void *)(v17 + 168) = v73;
      char v35 = 63;
      goto LABEL_49;
    case 64:
      long long v51 = *(_OWORD *)(v18 + 40);
      *uint64_t v20 = *v21;
      *(_OWORD *)(v17 + 40) = v51;
      uint64_t v52 = *(void **)(v18 + 56);
      long long v53 = *(void **)(v18 + 64);
      *(void *)(v17 + 56) = v52;
      *(void *)(v17 + 64) = v53;
      uint64_t v54 = *(void **)(v18 + 72);
      uint64_t v55 = *(void **)(v18 + 80);
      *(void *)(v17 + 72) = v54;
      *(void *)(v17 + 80) = v55;
      long long v103 = (_OWORD *)(v18 + 88);
      uint64_t v56 = *(void *)(v18 + 112);
      id v57 = v52;
      id v58 = v53;
      id v59 = v54;
      id v60 = v55;
      if (v56)
      {
        uint64_t v61 = *(void *)(v18 + 120);
        *(void *)(v17 + 112) = v56;
        *(void *)(v17 + 120) = v61;
        (**(void (***)(uint64_t, _OWORD *, uint64_t))(v56 - 8))(v17 + 88, v103, v56);
      }
      else
      {
        long long v74 = *(_OWORD *)(v18 + 104);
        *(_OWORD *)(v17 + 88) = *v103;
        *(_OWORD *)(v17 + 104) = v74;
        *(void *)(v17 + 120) = *(void *)(v18 + 120);
      }
      uint64_t v75 = *(void *)(v18 + 136);
      *(void *)(v17 + 128) = *(void *)(v18 + 128);
      *(void *)(v17 + 136) = v75;
      char v35 = 64;
LABEL_49:
      *(unsigned char *)(v17 + 280) = v35;
LABEL_50:
      swift_bridgeObjectRetain();
      break;
    default:
      memcpy((void *)(v17 + 24), (const void *)(v18 + 24), 0x101uLL);
      break;
  }
  long long v76 = *(void **)(v18 + 288);
  *(void *)(v17 + 288) = v76;
  *(_DWORD *)(v17 + 296) = *(_DWORD *)(v18 + 296);
  uint64_t v77 = a3[9];
  uint64_t v78 = (char *)(a1 + v77);
  uint64_t v79 = (char *)(a2 + v77);
  uint64_t v80 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v81 = *(void *)(v80 - 8);
  uint64_t v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48);
  id v83 = v76;
  if (v82(v79, 1, v80))
  {
    uint64_t v84 = sub_1005057FC(&qword_1016730B0);
    memcpy(v78, v79, *(void *)(*(void *)(v84 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v104)(v78, v79, v105);
    uint64_t v85 = *(int *)(v80 + 20);
    uint64_t v86 = &v78[v85];
    uint64_t v87 = &v79[v85];
    uint64_t v88 = *((void *)v87 + 1);
    *(void *)uint64_t v86 = *(void *)v87;
    *((void *)v86 + 1) = v88;
    uint64_t v89 = *(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56);
    swift_retain();
    v89(v78, 0, 1, v80);
  }
  uint64_t v90 = a3[10];
  id v91 = (char *)(a1 + v90);
  uint64_t v92 = (char *)(a2 + v90);
  if (v82(v92, 1, v80))
  {
    uint64_t v93 = sub_1005057FC(&qword_1016730B0);
    memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v104)(v91, v92, v105);
    uint64_t v94 = *(int *)(v80 + 20);
    uint64_t v95 = &v91[v94];
    uint64_t v96 = &v92[v94];
    uint64_t v97 = *((void *)v96 + 1);
    *(void *)uint64_t v95 = *(void *)v96;
    *((void *)v95 + 1) = v97;
    unint64_t v98 = *(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56);
    swift_retain();
    v98(v91, 0, 1, v80);
  }
  return a1;
}

uint64_t sub_10054B0C4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  sub_10054BB2C((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  uint64_t v6 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72))
  {
    if (v6)
    {
      sub_10054BB2C((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
      goto LABEL_8;
    }
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 48);
  }
  else if (v6)
  {
    *(void *)(a1 + 72) = v6;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 48, a2 + 48);
    goto LABEL_8;
  }
  long long v7 = *(_OWORD *)(a2 + 48);
  long long v8 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = v8;
LABEL_8:
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v9 = a3[7];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v113 = *(void *)(v12 - 8);
  uint64_t v114 = v12;
  v112 = *(void (**)(uint64_t, uint64_t))(v113 + 24);
  v112(v10, v11);
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void **)(a2 + v13);
  uint64_t v17 = *(void **)v14;
  *(void *)uint64_t v14 = v16;
  id v18 = v16;

  *(void *)(v14 + 8) = *(void *)(v15 + 8);
  *(void *)(v14 + 16) = *(void *)(v15 + 16);
  if (a1 != a2)
  {
    uint64_t v19 = (_OWORD *)(v14 + 24);
    uint64_t v20 = (_OWORD *)(v15 + 24);
    sub_10054BD5C(v14 + 24);
    switch(*(unsigned char *)(v15 + 280))
    {
      case 0:
        uint64_t v21 = *(void *)(v15 + 48);
        if (v21)
        {
          *(void *)(v14 + 48) = v21;
          (**(void (***)(uint64_t, uint64_t))(v21 - 8))(v14 + 24, v15 + 24);
        }
        else
        {
          long long v57 = *(_OWORD *)(v15 + 40);
          *uint64_t v19 = *v20;
          *(_OWORD *)(v14 + 40) = v57;
        }
        id v58 = (_OWORD *)(v14 + 56);
        id v59 = (_OWORD *)(v15 + 56);
        uint64_t v60 = *(void *)(v15 + 80);
        if (v60)
        {
          *(void *)(v14 + 80) = v60;
          (**(void (***)(_OWORD *, _OWORD *))(v60 - 8))(v58, v59);
        }
        else
        {
          long long v108 = *(_OWORD *)(v15 + 72);
          *id v58 = *v59;
          *(_OWORD *)(v14 + 72) = v108;
        }
        *(unsigned char *)(v14 + 280) = 0;
        break;
      case 1:
        uint64_t v22 = *(void *)(v15 + 48);
        if (v22)
        {
          *(void *)(v14 + 48) = v22;
          (**(void (***)(uint64_t, uint64_t))(v22 - 8))(v14 + 24, v15 + 24);
        }
        else
        {
          long long v61 = *(_OWORD *)(v15 + 40);
          *uint64_t v19 = *v20;
          *(_OWORD *)(v14 + 40) = v61;
        }
        *(unsigned char *)(v14 + 280) = 1;
        break;
      case 0x12:
        id v23 = *(void **)(v15 + 24);
        *(void *)(v14 + 24) = v23;
        uint64_t v24 = *(void **)(v15 + 32);
        *(void *)(v14 + 32) = v24;
        char v25 = 18;
        goto LABEL_22;
      case 0x13:
        uint64_t v26 = *(void **)v20;
        *(void *)(v14 + 24) = *(void *)v20;
        char v27 = 19;
        goto LABEL_34;
      case 0x14:
        id v23 = *(void **)(v15 + 24);
        *(void *)(v14 + 24) = v23;
        uint64_t v24 = *(void **)(v15 + 32);
        *(void *)(v14 + 32) = v24;
        char v25 = 20;
        goto LABEL_22;
      case 0x15:
        uint64_t v26 = *(void **)v20;
        *(void *)(v14 + 24) = *(void *)v20;
        char v27 = 21;
        goto LABEL_34;
      case 0x1C:
        id v23 = *(void **)(v15 + 24);
        *(void *)(v14 + 24) = v23;
        uint64_t v24 = *(void **)(v15 + 32);
        *(void *)(v14 + 32) = v24;
        char v25 = 28;
        goto LABEL_22;
      case 0x1D:
        uint64_t v26 = *(void **)v20;
        *(void *)(v14 + 24) = *(void *)v20;
        char v27 = 29;
        goto LABEL_34;
      case 0x1E:
        id v23 = *(void **)(v15 + 24);
        *(void *)(v14 + 24) = v23;
        uint64_t v24 = *(void **)(v15 + 32);
        *(void *)(v14 + 32) = v24;
        char v25 = 30;
LABEL_22:
        *(unsigned char *)(v14 + 280) = v25;
        id v28 = v23;
        id v29 = v24;
        break;
      case 0x1F:
        uint64_t v26 = *(void **)v20;
        *(void *)(v14 + 24) = *(void *)v20;
        char v27 = 31;
        goto LABEL_34;
      case 0x20:
        *(void *)(v14 + 24) = *(void *)(v15 + 24);
        *(void *)(v14 + 32) = *(void *)(v15 + 32);
        char v30 = 32;
        goto LABEL_31;
      case 0x21:
        *(void *)(v14 + 24) = *(void *)v20;
        char v31 = 33;
        goto LABEL_54;
      case 0x22:
        uint64_t v32 = *(void *)(v15 + 48);
        if (v32)
        {
          *(void *)(v14 + 48) = v32;
          (**(void (***)(uint64_t, uint64_t))(v32 - 8))(v14 + 24, v15 + 24);
        }
        else
        {
          long long v62 = *(_OWORD *)(v15 + 40);
          *uint64_t v19 = *v20;
          *(_OWORD *)(v14 + 40) = v62;
        }
        uint64_t v63 = (_OWORD *)(v14 + 56);
        long long v64 = (_OWORD *)(v15 + 56);
        uint64_t v65 = *(void *)(v15 + 80);
        if (v65)
        {
          *(void *)(v14 + 80) = v65;
          (**(void (***)(_OWORD *, _OWORD *))(v65 - 8))(v63, v64);
        }
        else
        {
          long long v109 = *(_OWORD *)(v15 + 72);
          *uint64_t v63 = *v64;
          *(_OWORD *)(v14 + 72) = v109;
        }
        *(unsigned char *)(v14 + 280) = 34;
        break;
      case 0x23:
        uint64_t v33 = *(void *)(v15 + 48);
        if (v33)
        {
          *(void *)(v14 + 48) = v33;
          (**(void (***)(uint64_t, uint64_t))(v33 - 8))(v14 + 24, v15 + 24);
        }
        else
        {
          long long v66 = *(_OWORD *)(v15 + 40);
          *uint64_t v19 = *v20;
          *(_OWORD *)(v14 + 40) = v66;
        }
        *(unsigned char *)(v14 + 280) = 35;
        break;
      case 0x24:
        *(void *)(v14 + 24) = *(void *)(v15 + 24);
        *(void *)(v14 + 32) = *(void *)(v15 + 32);
        char v30 = 36;
LABEL_31:
        *(unsigned char *)(v14 + 280) = v30;
        swift_bridgeObjectRetain();
        goto LABEL_55;
      case 0x25:
        *(void *)(v14 + 24) = *(void *)v20;
        char v31 = 37;
        goto LABEL_54;
      case 0x3A:
        *(void *)(v14 + 24) = *(void *)(v15 + 24);
        *(void *)(v14 + 32) = *(void *)(v15 + 32);
        long long v34 = *(_OWORD *)(v15 + 40);
        *(unsigned char *)(v14 + 56) = *(unsigned char *)(v15 + 56);
        *(_OWORD *)(v14 + 40) = v34;
        uint64_t v26 = *(void **)(v15 + 64);
        *(void *)(v14 + 64) = v26;
        *(unsigned char *)(v14 + 72) = *(unsigned char *)(v15 + 72);
        char v27 = 58;
LABEL_34:
        *(unsigned char *)(v14 + 280) = v27;
        id v35 = v26;
        break;
      case 0x3F:
        long long v36 = *(_OWORD *)(v15 + 40);
        *uint64_t v19 = *v20;
        *(_OWORD *)(v14 + 40) = v36;
        long long v37 = *(_OWORD *)(v15 + 56);
        *(_OWORD *)(v14 + 72) = *(_OWORD *)(v15 + 72);
        *(_OWORD *)(v14 + 56) = v37;
        uint64_t v38 = *(void **)(v15 + 88);
        *(void *)(v14 + 88) = v38;
        id v39 = *(void **)(v15 + 96);
        *(void *)(v14 + 96) = v39;
        long long v40 = *(void **)(v15 + 104);
        *(void *)(v14 + 104) = v40;
        id v41 = *(void **)(v15 + 112);
        *(void *)(v14 + 112) = v41;
        uint64_t v110 = (_OWORD *)(v14 + 120);
        uint64_t v42 = *(void *)(v15 + 144);
        id v43 = v38;
        id v44 = v39;
        id v45 = v40;
        id v46 = v41;
        if (v42)
        {
          *(void *)(v14 + 144) = v42;
          *(void *)(v14 + 152) = *(void *)(v15 + 152);
          (**(void (***)(_OWORD *, uint64_t, uint64_t))(v42 - 8))(v110, v15 + 120, v42);
        }
        else
        {
          long long v67 = *(_OWORD *)(v15 + 120);
          long long v68 = *(_OWORD *)(v15 + 136);
          *(void *)(v14 + 152) = *(void *)(v15 + 152);
          *uint64_t v110 = v67;
          *(_OWORD *)(v14 + 136) = v68;
        }
        *(void *)(v14 + 160) = *(void *)(v15 + 160);
        *(void *)(v14 + 168) = *(void *)(v15 + 168);
        char v31 = 63;
        goto LABEL_54;
      case 0x40:
        long long v47 = *(_OWORD *)(v15 + 40);
        *uint64_t v19 = *v20;
        *(_OWORD *)(v14 + 40) = v47;
        id v48 = *(void **)(v15 + 56);
        *(void *)(v14 + 56) = v48;
        id v49 = *(void **)(v15 + 64);
        *(void *)(v14 + 64) = v49;
        uint64_t v50 = *(void **)(v15 + 72);
        *(void *)(v14 + 72) = v50;
        long long v51 = *(void **)(v15 + 80);
        *(void *)(v14 + 80) = v51;
        uint64_t v111 = (_OWORD *)(v14 + 88);
        uint64_t v52 = *(void *)(v15 + 112);
        id v53 = v48;
        id v54 = v49;
        id v55 = v50;
        id v56 = v51;
        if (v52)
        {
          *(void *)(v14 + 112) = v52;
          *(void *)(v14 + 120) = *(void *)(v15 + 120);
          (**(void (***)(_OWORD *, uint64_t, uint64_t))(v52 - 8))(v111, v15 + 88, v52);
        }
        else
        {
          long long v69 = *(_OWORD *)(v15 + 88);
          long long v70 = *(_OWORD *)(v15 + 104);
          *(void *)(v14 + 120) = *(void *)(v15 + 120);
          *uint64_t v111 = v69;
          *(_OWORD *)(v14 + 104) = v70;
        }
        *(void *)(v14 + 128) = *(void *)(v15 + 128);
        *(void *)(v14 + 136) = *(void *)(v15 + 136);
        char v31 = 64;
LABEL_54:
        *(unsigned char *)(v14 + 280) = v31;
LABEL_55:
        swift_bridgeObjectRetain();
        break;
      default:
        memcpy((void *)(v14 + 24), (const void *)(v15 + 24), 0x101uLL);
        break;
    }
  }
  long long v71 = *(void **)(v14 + 288);
  long long v72 = *(void **)(v15 + 288);
  *(void *)(v14 + 288) = v72;
  id v73 = v72;

  *(unsigned char *)(v14 + 296) = *(unsigned char *)(v15 + 296);
  *(unsigned char *)(v14 + 297) = *(unsigned char *)(v15 + 297);
  *(unsigned char *)(v14 + 298) = *(unsigned char *)(v15 + 298);
  *(unsigned char *)(v14 + 299) = *(unsigned char *)(v15 + 299);
  uint64_t v74 = a3[9];
  uint64_t v75 = (char *)(a1 + v74);
  long long v76 = (char *)(a2 + v74);
  uint64_t v77 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v78 = *(void *)(v77 - 8);
  uint64_t v79 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v78 + 48);
  int v80 = v79(v75, 1, v77);
  int v81 = v79(v76, 1, v77);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v75, v76, v114);
      uint64_t v82 = *(int *)(v77 + 20);
      id v83 = &v75[v82];
      uint64_t v84 = &v76[v82];
      uint64_t v85 = *((void *)v84 + 1);
      *(void *)id v83 = *(void *)v84;
      *((void *)v83 + 1) = v85;
      uint64_t v86 = *(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56);
      swift_retain();
      v86(v75, 0, 1, v77);
      goto LABEL_62;
    }
    goto LABEL_61;
  }
  if (v81)
  {
    sub_10054BDB0((uint64_t)v75, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
LABEL_61:
    uint64_t v87 = sub_1005057FC(&qword_1016730B0);
    memcpy(v75, v76, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_62;
  }
  ((void (*)(char *, char *, uint64_t))v112)(v75, v76, v114);
  uint64_t v100 = *(int *)(v77 + 20);
  long long v101 = &v75[v100];
  long long v102 = &v76[v100];
  uint64_t v103 = *((void *)v102 + 1);
  *(void *)long long v101 = *(void *)v102;
  *((void *)v101 + 1) = v103;
  swift_retain();
  swift_release();
LABEL_62:
  uint64_t v88 = a3[10];
  uint64_t v89 = (char *)(a1 + v88);
  uint64_t v90 = (char *)(a2 + v88);
  int v91 = v79((char *)(a1 + v88), 1, v77);
  int v92 = v79(v90, 1, v77);
  if (!v91)
  {
    if (!v92)
    {
      ((void (*)(char *, char *, uint64_t))v112)(v89, v90, v114);
      uint64_t v104 = *(int *)(v77 + 20);
      uint64_t v105 = &v89[v104];
      uint64_t v106 = &v90[v104];
      uint64_t v107 = *((void *)v106 + 1);
      *(void *)uint64_t v105 = *(void *)v106;
      *((void *)v105 + 1) = v107;
      swift_retain();
      swift_release();
      return a1;
    }
    sub_10054BDB0((uint64_t)v89, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_67;
  }
  if (v92)
  {
LABEL_67:
    uint64_t v98 = sub_1005057FC(&qword_1016730B0);
    memcpy(v89, v90, *(void *)(*(void *)(v98 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v89, v90, v114);
  uint64_t v93 = *(int *)(v77 + 20);
  uint64_t v94 = &v89[v93];
  uint64_t v95 = &v90[v93];
  uint64_t v96 = *((void *)v95 + 1);
  *(void *)uint64_t v94 = *(void *)v95;
  *((void *)v94 + 1) = v96;
  uint64_t v97 = *(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56);
  swift_retain();
  v97(v89, 0, 1, v77);
  return a1;
}

uint64_t *sub_10054BB2C(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t sub_10054BD5C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10054BDB0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10054BE10(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  long long v6 = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 8) = v6;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  memcpy((void *)(a1 + a3[8]), (const void *)(a2 + a3[8]), 0x12CuLL);
  uint64_t v12 = a3[9];
  __dst = (char *)(a1 + v12);
  uint64_t v13 = (char *)(a2 + v12);
  uint64_t v14 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = sub_1005057FC(&qword_1016730B0);
    memcpy(__dst, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v11((uint64_t)__dst, (uint64_t)v13, v10);
    *(_OWORD *)&__dst[*(int *)(v14 + 20)] = *(_OWORD *)&v13[*(int *)(v14 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
  }
  uint64_t v18 = a3[10];
  uint64_t v19 = (char *)(a1 + v18);
  uint64_t v20 = (char *)(a2 + v18);
  if (v16(v20, 1, v14))
  {
    uint64_t v21 = sub_1005057FC(&qword_1016730B0);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    v11((uint64_t)v19, (uint64_t)v20, v10);
    *(_OWORD *)&v19[*(int *)(v14 + 20)] = *(_OWORD *)&v20[*(int *)(v14 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_10054C09C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  if (*(void *)(a1 + 72)) {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 48);
  }
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v33 = *(void *)(v10 - 8);
  uint64_t v34 = v10;
  char v31 = *(void (**)(uint64_t, uint64_t))(v33 + 40);
  v31(v8, v9);
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);

  *(_OWORD *)(v12 + 8) = *(_OWORD *)(v13 + 8);
  if (a1 != a2)
  {
    sub_10054BD5C(v12 + 24);
    memcpy((void *)(v12 + 24), (const void *)(v13 + 24), 0x101uLL);
  }
  uint64_t v15 = *(void **)(v12 + 288);
  *(void *)(v12 + 288) = *(void *)(v13 + 288);

  *(unsigned char *)(v12 + 296) = *(unsigned char *)(v13 + 296);
  *(_WORD *)(v12 + 297) = *(_WORD *)(v13 + 297);
  *(unsigned char *)(v12 + 299) = *(unsigned char *)(v13 + 299);
  uint64_t v16 = a3[9];
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v32 = *(void *)(v19 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
  int v21 = v20(v17, 1, v19);
  int v22 = v20(v18, 1, v19);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v17, v18, v34);
      *(_OWORD *)&v17[*(int *)(v19 + 20)] = *(_OWORD *)&v18[*(int *)(v19 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v17, 0, 1, v19);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v22)
  {
    sub_10054BDB0((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
LABEL_10:
    uint64_t v23 = sub_1005057FC(&qword_1016730B0);
    memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_11;
  }
  ((void (*)(char *, char *, uint64_t))v31)(v17, v18, v34);
  *(_OWORD *)&v17[*(int *)(v19 + 20)] = *(_OWORD *)&v18[*(int *)(v19 + 20)];
  swift_release();
LABEL_11:
  uint64_t v24 = a3[10];
  char v25 = (char *)(a1 + v24);
  uint64_t v26 = (char *)(a2 + v24);
  int v27 = v20((char *)(a1 + v24), 1, v19);
  int v28 = v20(v26, 1, v19);
  if (!v27)
  {
    if (!v28)
    {
      ((void (*)(char *, char *, uint64_t))v31)(v25, v26, v34);
      *(_OWORD *)&v25[*(int *)(v19 + 20)] = *(_OWORD *)&v26[*(int *)(v19 + 20)];
      swift_release();
      return a1;
    }
    sub_10054BDB0((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_16;
  }
  if (v28)
  {
LABEL_16:
    uint64_t v29 = sub_1005057FC(&qword_1016730B0);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v25, v26, v34);
  *(_OWORD *)&v25[*(int *)(v19 + 20)] = *(_OWORD *)&v26[*(int *)(v19 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v25, 0, 1, v19);
  return a1;
}

uint64_t sub_10054C49C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10054C4B0);
}

uint64_t sub_10054C4B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005057FC(&qword_1016730B0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10054C5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10054C5F4);
}

uint64_t sub_10054C5F4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005057FC(&qword_1016730B0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_10054C724()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_10054C810();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10054C810()
{
  if (!qword_101673120)
  {
    type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101673120);
    }
  }
}

uint64_t sub_10054C868()
{
  return sub_10054CEE8(&qword_101673168, (void (*)(uint64_t))type metadata accessor for CRLTweenLayerAnimation);
}

uint64_t sub_10054C8B0(uint64_t a1)
{
  uint64_t result = sub_10054CEE8(&qword_101673170, (void (*)(uint64_t))type metadata accessor for CRLTweenLayerAnimation);
  *(void *)(a1 + 48) = result;
  return result;
}

uint64_t sub_10054C908(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLTweenLayerAnimation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10054C96C(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLTweenLayerAnimation();
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100522E9C((uint64_t)(a1 + 6), (uint64_t)&v19, &qword_10167E120);
  if (v20)
  {
    sub_10053974C(&v19, (uint64_t)v21);
    sub_100522E9C(a2 + 48, (uint64_t)&v17, &qword_10167E120);
    if (v18)
    {
      sub_10053974C(&v17, (uint64_t)&v19);
      uint64_t v8 = v22;
      uint64_t v9 = v23;
      sub_10050F848(v21, v22);
      int v10 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v9 + 128))(&v19, v8, v9);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v19);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v21);
      goto LABEL_9;
    }
    sub_100522F00((uint64_t)&v17, &qword_10167E120);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v21);
  }
  else
  {
    sub_100522F00((uint64_t)&v19, &qword_10167E120);
  }
  sub_100522E9C((uint64_t)(a1 + 6), (uint64_t)v21, &qword_10167E120);
  uint64_t v11 = v22;
  sub_100522F00((uint64_t)v21, &qword_10167E120);
  sub_100549B18(a2, (uint64_t)v7);
  if (v11)
  {
    sub_10054BDB0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CRLTweenLayerAnimation);
    int v10 = 0;
  }
  else
  {
    sub_100522E9C((uint64_t)(v7 + 48), (uint64_t)v21, &qword_10167E120);
    sub_10054BDB0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CRLTweenLayerAnimation);
    int v10 = v22 == 0;
    sub_100522F00((uint64_t)v21, &qword_10167E120);
  }
LABEL_9:
  uint64_t v12 = a1 + 1;
  uint64_t v14 = a1[4];
  uint64_t v13 = a1[5];
  sub_10050F848(v12, v14);
  return (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 128))(a2 + 8, v14, v13) & v10 & 1;
}

unint64_t sub_10054CB94()
{
  unint64_t result = qword_10169AEE0;
  if (!qword_10169AEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169AEE0);
  }
  return result;
}

uint64_t sub_10054CBE8()
{
  uint64_t v1 = (id *)(v0 + 40);
  switch(*(unsigned char *)(v0 + 296))
  {
    case 0:
    case 0x22:
      if (*(void *)(v0 + 64)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      if (*(void *)(v0 + 96)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 72);
      }
      break;
    case 1:
    case 0x23:
      if (*(void *)(v0 + 64)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      break;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:

      break;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 0x21:
    case 0x25:
      goto LABEL_17;
    case 0x3A:

      break;
    case 0x3F:

      if (*(void *)(v0 + 160)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 136);
      }
      goto LABEL_17;
    case 0x40:

      if (*(void *)(v0 + 128)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 104);
      }
LABEL_17:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, 316, 7);
}

unint64_t sub_10054CE40()
{
  unint64_t result = qword_10167ACF0;
  if (!qword_10167ACF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10167ACF0);
  }
  return result;
}

uint64_t sub_10054CE80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101684000);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10054CEE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10054CF30(char a1)
{
  unint64_t result = 0x7461446569766F6DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6D49726574736F70;
      break;
    case 2:
      unint64_t result = 0x6954726574736F70;
      break;
    case 3:
      unint64_t result = 0x6D69547472617473;
      break;
    case 4:
      unint64_t result = 0x656D6954646E65;
      break;
    case 5:
      unint64_t result = 0x4F6F696475417369;
      break;
    case 6:
      unint64_t result = 0x656C746974;
      break;
    case 7:
      unint64_t result = 0x726F7461657263;
      break;
    case 8:
      unint64_t result = 0x6E69706F6F4C7369;
      break;
    case 9:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_10054D088(char *a1, char *a2)
{
  return qword_10117FAD8[*a1] == qword_10117FAD8[*a2];
}

Swift::Int sub_10054D0AC()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_10117FAD8[v1]);
  return Hasher._finalize()();
}

void sub_10054D0FC()
{
  Hasher._combine(_:)(qword_10117FAD8[*v0]);
}

Swift::Int sub_10054D134()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_10117FAD8[v1]);
  return Hasher._finalize()();
}

uint64_t sub_10054D180@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100556BAC(*a1);
  *a2 = result;
  return result;
}

void sub_10054D1AC(void *a1@<X8>)
{
  *a1 = qword_10117FAD8[*v1];
}

unint64_t sub_10054D1C4()
{
  return sub_10054CF30(*v0);
}

uint64_t sub_10054D1CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100556BD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10054D1F4()
{
  return qword_10117FAD8[*v0];
}

uint64_t sub_10054D20C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100556BAC(a1);
  *a2 = result;
  return result;
}

void sub_10054D234(void *a1@<X8>)
{
  *a1 = &off_101502958;
}

uint64_t sub_10054D244(uint64_t a1, uint64_t a2)
{
  return sub_10054FAD8(a1, a2, (uint64_t (*)(void))sub_100554480, (uint64_t (*)(void))sub_1005544D8);
}

uint64_t sub_10054D270(uint64_t a1)
{
  unint64_t v2 = sub_1005544D8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10054D2AC(uint64_t a1)
{
  unint64_t v2 = sub_1005544D8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10054D2E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v67 = a1;
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v3 - 8, v4);
  long long v66 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  long long v68 = (char *)&v61 - v8;
  __chkstk_darwin(v9, v10);
  uint64_t v70 = (uint64_t)&v61 - v11;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for CRLAssetData();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v63 = (uint64_t)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)&v61 - v23;
  sub_100A68AF0(v1, (uint64_t)v16);
  long long v61 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v61(v24, v16, v12);
  uint64_t v25 = *(int *)(v17 + 20);
  uint64_t v27 = *(void *)(v1 + v25);
  uint64_t v26 = *(void *)(v1 + v25 + 8);
  uint64_t v28 = *(void *)(v1 + *(int *)(v17 + 24));
  uint64_t v29 = &v24[v25];
  *(void *)uint64_t v29 = v27;
  *((void *)v29 + 1) = v26;
  uint64_t v30 = *(int *)(v17 + 24);
  long long v69 = v24;
  *(void *)&v24[v30] = v28;
  uint64_t v31 = v18;
  uint64_t v32 = *(void (**)(char *, uint64_t))(v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v64 = v13 + 8;
  uint64_t v65 = v12;
  uint64_t v33 = v12;
  uint64_t v34 = (uint64_t)v68;
  long long v62 = v32;
  v32(v16, v33);
  id v35 = (int *)type metadata accessor for CRLMovieItemAssetData(0);
  sub_100522E9C(v1 + v35[5], v34, (uint64_t *)&unk_10167D2B0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v34, 1, v17) == 1)
  {
    sub_100522F00(v34, (uint64_t *)&unk_10167D2B0);
    uint64_t v36 = v70;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v70, 1, 1, v17);
  }
  else
  {
    uint64_t v37 = v63;
    sub_10055756C(v34, v63, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100A68AF0(v37, (uint64_t)v16);
    uint64_t v38 = v65;
    uint64_t v39 = (uint64_t)v66;
    v61(v66, v16, v65);
    uint64_t v40 = *(int *)(v17 + 20);
    uint64_t v42 = *(void *)(v37 + v40);
    uint64_t v41 = *(void *)(v37 + v40 + 8);
    uint64_t v43 = *(void *)(v37 + *(int *)(v17 + 24));
    id v44 = (void *)(v39 + v40);
    *id v44 = v42;
    v44[1] = v41;
    *(void *)(v39 + *(int *)(v17 + 24)) = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v62(v16, v38);
    sub_1005567F0(v37, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v39, 0, 1, v17);
    uint64_t v36 = v70;
    sub_10051B3EC(v39, v70, (uint64_t *)&unk_10167D2B0);
  }
  uint64_t v45 = *(void *)(v2 + v35[6]);
  uint64_t v46 = *(void *)(v2 + v35[7]);
  uint64_t v47 = *(void *)(v2 + v35[8]);
  char v48 = *(unsigned char *)(v2 + v35[9]);
  id v49 = (uint64_t *)(v2 + v35[10]);
  uint64_t v51 = *v49;
  uint64_t v50 = v49[1];
  uint64_t v52 = (uint64_t *)(v2 + v35[11]);
  uint64_t v54 = *v52;
  uint64_t v53 = v52[1];
  char v55 = *(unsigned char *)(v2 + v35[12]);
  uint64_t v56 = *(void *)(v2 + v35[13]);
  uint64_t v57 = v67;
  sub_10055756C((uint64_t)v69, v67, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_10051B3EC(v36, v57 + v35[5], (uint64_t *)&unk_10167D2B0);
  *(void *)(v57 + v35[6]) = v45;
  *(void *)(v57 + v35[7]) = v46;
  *(void *)(v57 + v35[8]) = v47;
  *(unsigned char *)(v57 + v35[9]) = v48;
  id v58 = (void *)(v57 + v35[10]);
  *id v58 = v51;
  v58[1] = v50;
  id v59 = (void *)(v57 + v35[11]);
  void *v59 = v54;
  v59[1] = v53;
  *(unsigned char *)(v57 + v35[12]) = v55;
  *(void *)(v57 + v35[13]) = v56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_10054D7C0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_1016737A8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_1005544D8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v13) = 0;
  type metadata accessor for CRLAssetData();
  sub_1005542AC(&qword_1016737B0, (void (*)(uint64_t))type metadata accessor for CRLAssetData);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for CRLMovieItemAssetData(0);
    LOBYTE(v13) = 1;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v13) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v13) = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v13) = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v13) = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v13) = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v13) = 7;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v13) = 8;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    uint64_t v13 = *(void *)(v3 + *(int *)(v10 + 52));
    v12[15] = 9;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_10054DB18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLAssetData();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v45 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1005057FC(&qword_101673798);
  uint64_t v44 = *(void *)(v46 - 8);
  __chkstk_darwin(v46, v11);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (int *)type metadata accessor for CRLMovieItemAssetData(0);
  uint64_t v16 = __chkstk_darwin(v14, v15);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void (**)(void))(v8 + 56);
  uint64_t v53 = &v18[*(int *)(v16 + 20)];
  v19();
  uint64_t v20 = &v18[v14[10]];
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  uint64_t v52 = v20;
  uint64_t v21 = &v18[v14[11]];
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = 0;
  uint64_t v51 = v21;
  uint64_t v22 = v14[12];
  v18[v22] = 2;
  uint64_t v48 = v14[13];
  id v49 = a1;
  *(void *)&v18[v48] = &_swiftEmptyDictionarySingleton;
  sub_10050F848(a1, a1[3]);
  sub_1005544D8();
  uint64_t v47 = v13;
  uint64_t v23 = v50;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v23)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v49);
    sub_100522F00((uint64_t)v53, (uint64_t *)&unk_10167D2B0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v50 = v22;
    uint64_t v24 = v44;
    LOBYTE(v55) = 0;
    sub_1005542AC(&qword_1016737A0, (void (*)(uint64_t))type metadata accessor for CRLAssetData);
    uint64_t v25 = (uint64_t)v45;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_10055756C(v25, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    LOBYTE(v55) = 1;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_100557504((uint64_t)v6, (uint64_t)v53);
    LOBYTE(v55) = 2;
    KeyedDecodingContainer.decode(_:forKey:)();
    *(void *)&v18[v14[6]] = v26;
    LOBYTE(v55) = 3;
    KeyedDecodingContainer.decode(_:forKey:)();
    *(void *)&v18[v14[7]] = v27;
    LOBYTE(v55) = 4;
    KeyedDecodingContainer.decode(_:forKey:)();
    *(void *)&v18[v14[8]] = v28;
    LOBYTE(v55) = 5;
    v18[v14[9]] = KeyedDecodingContainer.decode(_:forKey:)() & 1;
    LOBYTE(v55) = 6;
    uint64_t v29 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v31 = v30;
    uint64_t v32 = (uint64_t *)v52;
    swift_bridgeObjectRelease();
    *uint64_t v32 = v29;
    v32[1] = v31;
    LOBYTE(v55) = 7;
    uint64_t v33 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v34 = v51;
    uint64_t v35 = v33;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    *uint64_t v34 = v35;
    v34[1] = v37;
    LOBYTE(v55) = 8;
    v18[v50] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    sub_1005057FC((uint64_t *)&unk_101687A40);
    char v54 = 9;
    sub_100557304();
    uint64_t v38 = v46;
    uint64_t v39 = v47;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v39, v38);
    uint64_t v40 = v55;
    uint64_t v41 = v48;
    swift_bridgeObjectRelease();
    *(void *)&v18[v41] = v40;
    sub_100556B0C((uint64_t)v18, v43, type metadata accessor for CRLMovieItemAssetData);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v49);
    return sub_1005567F0((uint64_t)v18, type metadata accessor for CRLMovieItemAssetData);
  }
}

uint64_t sub_10054E1D0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10054E1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 52);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_10054E214())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_10054E23C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10054DB18(a1, a2);
}

uint64_t sub_10054E254(void *a1)
{
  return sub_10054D7C0(a1);
}

uint64_t sub_10054E26C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005542AC(&qword_1016737B8, (void (*)(uint64_t))type metadata accessor for CRLMovieItemAssetData);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_10054E2F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005542AC(&qword_1016737B8, (void (*)(uint64_t))type metadata accessor for CRLMovieItemAssetData);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_10054E374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005542AC(&qword_1016734F8, (void (*)(uint64_t))type metadata accessor for CRLMovieItemAssetData);
  uint64_t v7 = sub_1005542AC(&qword_1016737C0, (void (*)(uint64_t))type metadata accessor for CRLMovieItemAssetData);

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_10054E440(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005542AC(&qword_1016737B8, (void (*)(uint64_t))type metadata accessor for CRLMovieItemAssetData);

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_10054E4BC()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_10054E53C()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_10054E5B4(uint64_t a1)
{
  uint64_t v2 = sub_1005542AC(&qword_101673688, (void (*)(uint64_t))type metadata accessor for CRLMovieItemAssetData);

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_10054E630()
{
  qword_101719E88 = 97;
  unk_101719E90 = 0xE100000000000000;
  qword_101719E98 = swift_getKeyPath();
  unk_101719EA0 = 98;
  qword_101719EA8 = 0xE100000000000000;
  qword_101719EB0 = swift_getKeyPath();
  qword_101719EB8 = 99;
  qword_101719EC0 = 0xE100000000000000;
  qword_101719EC8 = swift_getKeyPath();
  unk_101719ED0 = 100;
  qword_101719ED8 = 0xE100000000000000;
  uint64_t result = swift_getKeyPath();
  qword_101719EE0 = result;
  return result;
}

uint64_t sub_10054E6B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, float a13@<S3>, uint64_t a14, unsigned __int8 a15)
{
  uint64_t v54 = a8;
  uint64_t v51 = a6;
  uint64_t v52 = a7;
  int v50 = a5;
  uint64_t v57 = a4;
  uint64_t v58 = a3;
  uint64_t v62 = a2;
  uint64_t v63 = a1;
  int v49 = a15;
  uint64_t v48 = a14;
  uint64_t v20 = sub_1005057FC(&qword_101672430);
  uint64_t v60 = *(void *)(v20 - 8);
  uint64_t v61 = v20;
  __chkstk_darwin(v20, v21);
  id v59 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1005057FC(&qword_101673480);
  uint64_t v55 = *(void *)(v23 - 8);
  uint64_t v56 = v23;
  __chkstk_darwin(v23, v24);
  uint64_t v53 = (char *)&v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1005057FC(&qword_101673478);
  uint64_t v46 = *(void *)(v26 - 8);
  uint64_t v47 = v26;
  __chkstk_darwin(v26, v27);
  uint64_t v45 = (char *)&v42 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = (int *)type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v29, v30);
  uint64_t v32 = (char *)&v42 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = (int *)type metadata accessor for CRLMovieItemCRDTData(0);
  uint64_t v44 = a9 + v33[5];
  sub_10051A3F4((uint64_t)v67);
  sub_10051B3EC((uint64_t)v67, (uint64_t)&v64, (uint64_t *)&unk_101685110);
  sub_1005057FC((uint64_t *)&unk_101685110);
  sub_100552CB8();
  CRRegister.init(wrappedValue:)();
  uint64_t v43 = a9 + v33[6];
  float v64 = 0.0;
  char v65 = 1;
  sub_1005057FC(&qword_101673520);
  sub_100552DEC();
  CRRegister.init(wrappedValue:)();
  *(void *)(a9 + v33[8]) = &_swiftEmptyDictionarySingleton;
  sub_100556B0C(v63, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100522E9C(v62, (uint64_t)&v32[v29[5]], (uint64_t *)&unk_10167D2B0);
  *(double *)&v32[v29[6]] = a10;
  *(double *)&v32[v29[7]] = a11;
  *(double *)&v32[v29[8]] = a12;
  v32[v29[9]] = v50;
  uint64_t v34 = &v32[v29[10]];
  uint64_t v35 = v52;
  *(void *)uint64_t v34 = v51;
  *((void *)v34 + 1) = v35;
  uint64_t v36 = &v32[v29[11]];
  uint64_t v37 = v48;
  *(void *)uint64_t v36 = v54;
  *((void *)v36 + 1) = v37;
  v32[v29[12]] = v49;
  *(void *)&v32[v29[13]] = &_swiftEmptyDictionarySingleton;
  sub_1005542AC(&qword_1016734F8, (void (*)(uint64_t))type metadata accessor for CRLMovieItemAssetData);
  CRRegister.init(_:)();
  sub_10051B3EC(v57, (uint64_t)&v64, (uint64_t *)&unk_101685110);
  uint64_t v38 = v45;
  CRRegister.init(_:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v46 + 40))(v44, v38, v47);
  float v64 = *(float *)&v58;
  char v65 = BYTE4(v58) & 1;
  uint64_t v39 = v53;
  CRRegister.init(_:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v55 + 40))(v43, v39, v56);
  float v64 = a13;
  long long v66 = &_swiftEmptyDictionarySingleton;
  sub_100552EB4();
  uint64_t v40 = v59;
  CRRegister.init(_:)();
  sub_100522F00(v62, (uint64_t *)&unk_10167D2B0);
  sub_1005567F0(v63, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(a9 + v33[7], v40, v61);
}

uint64_t sub_10054EBA4@<X0>(void *a1@<X8>)
{
  if (qword_10166EBC0 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_101719E90;
  uint64_t v4 = qword_101719E98;
  uint64_t v3 = unk_101719EA0;
  uint64_t v5 = qword_101719EA8;
  uint64_t v6 = qword_101719EB0;
  uint64_t v7 = qword_101719EB8;
  uint64_t v8 = qword_101719EC0;
  uint64_t v10 = qword_101719EC8;
  uint64_t v9 = unk_101719ED0;
  uint64_t v11 = qword_101719ED8;
  uint64_t v12 = qword_101719EE0;
  *a1 = qword_101719E88;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  a1[8] = v10;
  a1[9] = v9;
  a1[10] = v11;
  a1[11] = v12;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();

  return swift_retain();
}

uint64_t sub_10054EC8C(uint64_t a1)
{
  uint64_t v2 = sub_1005542AC(&qword_101673760, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);

  return static CRStruct_4.fieldKeys.getter(a1, v2);
}

uint64_t sub_10054ECF8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10054ED04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 32);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_10054ED3C())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_10054ED60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for CRLAssetData();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_101670198 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = sub_100556B74(v11, (uint64_t)qword_10171CB50);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v10, v12, v11);
  uint64_t v13 = &v10[*(int *)(v6 + 20)];
  *uint64_t v13 = 0;
  v13[1] = 0xE000000000000000;
  *(void *)&v10[*(int *)(v6 + 24)] = &_swiftEmptyDictionarySingleton;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  sub_10051A3F4((uint64_t)v17);
  sub_10051B3EC((uint64_t)v17, (uint64_t)v16, (uint64_t *)&unk_101685110);
  v15[12] = 1;
  return sub_10054E6B8((uint64_t)v10, (uint64_t)v5, 0x100000000, (uint64_t)v16, 0, 0, 0, 0, a1, 0.0, 0.0, 0.0, 15.0, 0, 0);
}

uint64_t sub_10054EF98(uint64_t a1)
{
  uint64_t v2 = sub_1005542AC(&qword_101673700, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);

  return CRType.context.getter(a1, v2);
}

uint64_t sub_10054F004()
{
  sub_1005542AC(&qword_101673760, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);

  return CRStruct_4.actionUndoingDifference(from:)();
}

uint64_t sub_10054F088()
{
  sub_1005542AC(&qword_101673760, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);

  return CRStruct_4.apply(_:)();
}

uint64_t sub_10054F104()
{
  sub_1005542AC(&qword_101673760, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);

  return CRStruct_4.hasDelta(from:)();
}

uint64_t sub_10054F180()
{
  sub_1005542AC(&qword_101673760, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);

  return CRStruct_4.delta(_:from:)();
}

uint64_t sub_10054F214(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005542AC(&qword_101673760, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);

  return CRStruct_4.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_10054F290()
{
  sub_1005542AC(&qword_101673760, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);

  return CRStruct_4.merge(delta:)();
}

uint64_t sub_10054F30C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005542AC(&qword_101673760, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);

  return CRStruct_4.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_10054F390(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005542AC(&qword_101673760, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);

  return CRStruct_4.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_10054F414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005542AC(&qword_101673760, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);

  return CRStruct_4.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_10054F4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005542AC(&qword_101673760, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);

  return CRStruct_4.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_10054F524()
{
  sub_1005542AC(&qword_101673760, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);

  return CRStruct_4.needToFinalizeTimestamps()();
}

uint64_t sub_10054F590(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005542AC(&qword_101673760, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);

  return CRStruct_4.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_10054F60C()
{
  sub_1005542AC(&qword_101673760, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);

  return CRStruct_4.merge(_:)();
}

uint64_t sub_10054F688()
{
  return CRDT.serializedData(_:version:)();
}

uint64_t sub_10054F708()
{
  return CRDT.init(serializedData:)();
}

uint64_t sub_10054F798()
{
  return CRStruct_4.init(from:)();
}

uint64_t sub_10054F818()
{
  return CRStruct_4.encode(to:)();
}

uint64_t sub_10054F890(uint64_t a1)
{
  uint64_t v2 = sub_1005542AC(&qword_101673760, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);

  return CRStruct_4.minEncodingVersion.getter(a1, v2);
}

Swift::Int sub_10054F90C()
{
  Swift::UInt v1 = (uint64_t)((unint64_t)*v0 << 63) >> 63;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10054F958()
{
  Hasher._combine(_:)((uint64_t)((unint64_t)*v0 << 63) >> 63);
}

Swift::Int sub_10054F988()
{
  Swift::UInt v1 = (uint64_t)((unint64_t)*v0 << 63) >> 63;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void *sub_10054F9D0@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == -1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_10054F9F0(uint64_t *a1@<X8>)
{
  *a1 = (uint64_t)((unint64_t)*v1 << 63) >> 63;
}

uint64_t sub_10054FA00()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x615272656E726F63;
  }
}

uint64_t sub_10054FA48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10055702C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10054FA70()
{
  return (uint64_t)((unint64_t)*v0 << 63) >> 63;
}

uint64_t sub_10054FA80@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  if (result == -1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!result) {
    char v2 = 0;
  }
  *a2 = v2;
  return result;
}

void sub_10054FA9C(void *a1@<X8>)
{
  *a1 = &off_101502988;
}

uint64_t sub_10054FAAC(uint64_t a1, uint64_t a2)
{
  return sub_10054FAD8(a1, a2, (uint64_t (*)(void))sub_100554820, (uint64_t (*)(void))sub_100554878);
}

uint64_t sub_10054FAD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v7 = a3();
  uint64_t v8 = a4();

  return static CodingKey<>.intCases.getter(a1, a2, v7, v8);
}

uint64_t sub_10054FB44(uint64_t a1)
{
  unint64_t v2 = sub_100554878();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10054FB80(uint64_t a1)
{
  unint64_t v2 = sub_100554878();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10054FBBC(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_1005057FC(&qword_101673778);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100554878();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v13 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    v11[1] = a2;
    char v12 = 1;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_10054FD48()
{
  return swift_bridgeObjectRetain();
}

uint64_t SyncEvent.FetchedDatabaseChanges.deletions.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *SyncEvent.DidFetchRecordZoneChanges.error.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_10054FD9C(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 == *(float *)a2) {
    return sub_100ED60AC(*(void *)(a1 + 8), *(void *)(a2 + 8));
  }
  else {
    return 0;
  }
}

void *sub_10054FDC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100557134(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = v5;
    *(void *)(a2 + 8) = result;
  }
  return result;
}

uint64_t sub_10054FDF0(void *a1)
{
  return sub_10054FBBC(a1, *(void *)(v1 + 8));
}

uint64_t sub_10054FE10(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10055745C();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_10054FE64(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10055745C();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_10054FEB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100552EB4();
  unint64_t v7 = sub_1005574B0();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_10054FF28(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10055745C();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_10054FF74()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_10054FFC4()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_10055000C(uint64_t a1)
{
  unint64_t v2 = sub_1005549BC();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100550058()
{
  return 4;
}

uint64_t sub_100550064(_UNKNOWN ****a1)
{
  uint64_t v2 = type metadata accessor for CRLMovieItemCRDTData(0);
  uint64_t result = __chkstk_darwin(v2, v3);
  unint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*a1 == &off_1016731C8)
  {
    uint64_t v7 = (uint64_t)a1 + qword_101719EE8;
    swift_beginAccess();
    sub_100556B0C(v7, (uint64_t)v6, type metadata accessor for CRLMovieItemCRDTData);
    swift_beginAccess();
    sub_1005542AC(&qword_101673760, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);
    swift_retain();
    CRStruct_4.merge(_:)();
    swift_endAccess();
    swift_release();
    return sub_1005567F0((uint64_t)v6, type metadata accessor for CRLMovieItemCRDTData);
  }
  return result;
}

void *sub_1005501F4(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = type metadata accessor for CRLMovieItemCRDTData(0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  char v12 = (char *)v31 - v11;
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)v31 - v19;
  uint64_t v21 = (uint64_t)v2 + *(void *)(v4 + 632);
  swift_beginAccess();
  if (a1)
  {
    v31[1] = v5;
    sub_100522E9C(v21, (uint64_t)v16, (uint64_t *)&unk_101683E10);
    sub_100523288((unint64_t *)&qword_1016737D8, (uint64_t *)&unk_101683E10);
    CRType.copy(renamingReferences:)();
    sub_100522F00((uint64_t)v16, (uint64_t *)&unk_101683E10);
    uint64_t v22 = (uint64_t)v2 + qword_101719EE8;
    swift_beginAccess();
    sub_100556B0C(v22, (uint64_t)v8, type metadata accessor for CRLMovieItemCRDTData);
    sub_1005542AC(&qword_101673700, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);
    CRType.copy(renamingReferences:)();
    sub_1005567F0((uint64_t)v8, type metadata accessor for CRLMovieItemCRDTData);
  }
  else
  {
    sub_100522E9C(v21, (uint64_t)v20, (uint64_t *)&unk_101683E10);
    uint64_t v23 = (uint64_t)v2 + qword_101719EE8;
    swift_beginAccess();
    sub_100556B0C(v23, (uint64_t)v12, type metadata accessor for CRLMovieItemCRDTData);
  }
  uint64_t v24 = v2[4];
  uint64_t v25 = v2[5];
  uint64_t v28 = v2 + 2;
  uint64_t v26 = v2[2];
  uint64_t v27 = v28[1];
  uint64_t v29 = swift_allocObject();
  sub_10055756C((uint64_t)v12, v29 + qword_101719EE8, type metadata accessor for CRLMovieItemCRDTData);
  sub_10051B3EC((uint64_t)v20, v29 + *(void *)(*(void *)v29 + 632), (uint64_t *)&unk_101683E10);
  return sub_10068B398(v27, v24, v25, v26);
}

uint64_t sub_100550570(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CRLMovieItemCRDTData(0);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5, v8);
  uint64_t v10 = &v25[-v9];
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101683E10);
  uint64_t v13 = __chkstk_darwin(v11 - 8, v12);
  uint64_t v15 = &v25[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13, v16);
  uint64_t v18 = &v25[-v17];
  if (*(_UNKNOWN ****)a1 != &off_1016731C8) {
    goto LABEL_5;
  }
  uint64_t v19 = v1 + *(void *)(*(void *)v1 + 632);
  swift_beginAccess();
  sub_100522E9C(v19, (uint64_t)v18, (uint64_t *)&unk_101683E10);
  uint64_t v20 = a1 + *(void *)(*(void *)a1 + 632);
  swift_beginAccess();
  sub_100522E9C(v20, (uint64_t)v15, (uint64_t *)&unk_101683E10);
  swift_retain();
  LOBYTE(v20) = sub_100FC1F68((uint64_t)v18, (uint64_t)v15);
  sub_100522F00((uint64_t)v15, (uint64_t *)&unk_101683E10);
  sub_100522F00((uint64_t)v18, (uint64_t *)&unk_101683E10);
  if ((v20 & 1) == 0)
  {
    swift_release();
LABEL_5:
    char v23 = 0;
    return v23 & 1;
  }
  uint64_t v21 = v1 + qword_101719EE8;
  swift_beginAccess();
  sub_100556B0C(v21, (uint64_t)v10, type metadata accessor for CRLMovieItemCRDTData);
  uint64_t v22 = a1 + qword_101719EE8;
  swift_beginAccess();
  sub_100556B0C(v22, (uint64_t)v7, type metadata accessor for CRLMovieItemCRDTData);
  char v23 = sub_100555F88((uint64_t)v10, (uint64_t)v7);
  swift_release();
  sub_1005567F0((uint64_t)v7, type metadata accessor for CRLMovieItemCRDTData);
  sub_1005567F0((uint64_t)v10, type metadata accessor for CRLMovieItemCRDTData);
  return v23 & 1;
}

uint64_t sub_10055082C(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for CRLMovieItemCRDTData(0);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v16 - v10;
  uint64_t v12 = v2 + qword_101719EE8;
  swift_beginAccess();
  if (a2)
  {
    sub_100556B0C(v12, (uint64_t)v8, type metadata accessor for CRLMovieItemCRDTData);
    sub_1005542AC(&qword_101673700, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);
    CRType.copy(renamingReferences:)();
    sub_1005567F0((uint64_t)v8, type metadata accessor for CRLMovieItemCRDTData);
  }
  else
  {
    sub_100556B0C(v12, (uint64_t)v11, type metadata accessor for CRLMovieItemCRDTData);
  }
  if (qword_10166EE10 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for CRCodableVersion();
  sub_100556B74(v13, (uint64_t)qword_10171A2D8);
  sub_1005542AC(&qword_101673718, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);
  uint64_t v14 = CRDT.serializedData(_:version:)();
  sub_1005567F0((uint64_t)v11, type metadata accessor for CRLMovieItemCRDTData);
  return v14;
}

uint64_t sub_100550A80(_UNKNOWN ****a1)
{
  uint64_t v3 = type metadata accessor for CRLMovieItemCRDTData(0);
  uint64_t v5 = __chkstk_darwin(v3, v4);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5, v8);
  uint64_t v10 = &v15[-v9];
  if (*a1 == &off_1016731C8)
  {
    uint64_t v11 = v1 + qword_101719EE8;
    swift_beginAccess();
    sub_100556B0C(v11, (uint64_t)v10, type metadata accessor for CRLMovieItemCRDTData);
    uint64_t v12 = (uint64_t)a1 + qword_101719EE8;
    swift_beginAccess();
    sub_100556B0C(v12, (uint64_t)v7, type metadata accessor for CRLMovieItemCRDTData);
    sub_1005542AC(&qword_101673760, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);
    char v13 = CRStruct_4.hasDelta(from:)();
    sub_1005567F0((uint64_t)v7, type metadata accessor for CRLMovieItemCRDTData);
    sub_1005567F0((uint64_t)v10, type metadata accessor for CRLMovieItemCRDTData);
    return v13 & 1;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100550CA0(uint64_t a1, uint64_t a2)
{
  v27[1] = a2;
  v27[0] = type metadata accessor for CRLMovieItemCRDTData(0);
  uint64_t v4 = __chkstk_darwin(v27[0], v3);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)v27 - v8;
  uint64_t v10 = sub_1005057FC(&qword_1016737D0);
  uint64_t v12 = __chkstk_darwin(v10 - 8, v11);
  uint64_t v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v15);
  uint64_t v17 = (char *)v27 - v16;
  uint64_t v18 = swift_dynamicCastClass();
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = v2 + qword_101719EE8;
    swift_beginAccess();
    sub_100556B0C(v20, (uint64_t)v9, type metadata accessor for CRLMovieItemCRDTData);
    uint64_t v21 = v19 + qword_101719EE8;
    swift_beginAccess();
    sub_100556B0C(v21, (uint64_t)v6, type metadata accessor for CRLMovieItemCRDTData);
    sub_1005542AC(&qword_101673760, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);
    swift_retain();
    CRStruct_4.delta(_:from:)();
    sub_1005567F0((uint64_t)v6, type metadata accessor for CRLMovieItemCRDTData);
    sub_1005567F0((uint64_t)v9, type metadata accessor for CRLMovieItemCRDTData);
    sub_100522E9C((uint64_t)v17, (uint64_t)v14, &qword_1016737D0);
    uint64_t v22 = sub_1005057FC(&qword_101673710);
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v14, 1, v22) == 1)
    {
      sub_100522F00((uint64_t)v17, &qword_1016737D0);
      swift_release();
      sub_100522F00((uint64_t)v14, &qword_1016737D0);
      return 0;
    }
    else
    {
      if (qword_10166EE10 != -1) {
        swift_once();
      }
      uint64_t v25 = type metadata accessor for CRCodableVersion();
      sub_100556B74(v25, (uint64_t)qword_10171A2D8);
      sub_100523288(&qword_101673708, &qword_101673710);
      uint64_t v24 = PartialCRDT.deltaSerializedData(_:version:)();
      swift_release();
      sub_100522F00((uint64_t)v17, &qword_1016737D0);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v22);
    }
    return v24;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

unint64_t sub_1005510F8(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v39 = *v3;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v38 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_101673710);
  uint64_t v40 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100510D4C(a1, a2);
  sub_100523288(&qword_101673708, &qword_101673710);
  LOBYTE(a2) = v13;
  uint64_t v18 = v41;
  PartialCRDT.init(serializedData:)();
  if (!v18)
  {
    uint64_t v36 = v12;
    uint64_t v37 = v8;
    uint64_t v41 = v9;
    swift_beginAccess();
    type metadata accessor for CRLMovieItemCRDTData(0);
    sub_1005542AC(&qword_101673760, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);
    LODWORD(a2) = CRStruct_4.merge(delta:)();
    swift_endAccess();
    if ((a2 & 1) == 0)
    {
      uint64_t v33 = v16;
      uint64_t v34 = v13;
      int v35 = a2;
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v19 = (void *)static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      uint64_t v21 = (uint64_t)v3 + *(void *)(*v3 + 632);
      swift_beginAccess();
      uint64_t v22 = v21;
      uint64_t v23 = (uint64_t)v37;
      sub_100522E9C(v22, (uint64_t)v37, (uint64_t *)&unk_101683E10);
      id v24 = v19;
      sub_1005057FC(&qword_101674550);
      uint64_t v25 = v36;
      CRRegister.wrappedValue.getter();
      sub_100522F00(v23, (uint64_t *)&unk_101683E10);
      a2 = UUID.uuidString.getter();
      uint64_t v27 = v26;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v25, v41);
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v28 = sub_100528BE4();
      *(void *)(inited + 64) = v28;
      *(void *)(inited + 32) = a2;
      *(void *)(inited + 40) = v27;
      uint64_t v42 = v3;
      swift_retain();
      uint64_t v29 = String.init<A>(describing:)();
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v28;
      *(void *)(inited + 72) = v29;
      *(void *)(inited + 80) = v30;
      uint64_t v31 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v24, (uint64_t)&_mh_execute_header, v31, (uint64_t)"Delta failed to apply for %{public}@%{public}@", 46, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      LOBYTE(a2) = v35;
      uint64_t v13 = v34;
      uint64_t v16 = v33;
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v13);
  }
  return a2 & 1;
}

unint64_t sub_1005515C8()
{
  uint64_t v0 = type metadata accessor for CRLAssetData();
  uint64_t v38 = *(void *)(v0 - 8);
  uint64_t v39 = v0;
  uint64_t v2 = __chkstk_darwin(v0, v1);
  uint64_t v34 = (uint64_t)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v33 - v5;
  uint64_t v7 = type metadata accessor for CRLMovieItemAssetData(0);
  uint64_t v8 = v7 - 8;
  uint64_t v10 = __chkstk_darwin(v7, v9);
  uint64_t v36 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v33 - v13;
  sub_1005057FC(&qword_1016737C8);
  uint64_t v15 = (int *)(sub_1005057FC(&qword_10169A0F0) - 8);
  uint64_t v16 = *(void *)v15;
  uint64_t v35 = *(void *)(*(void *)v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_10117D8C0;
  uint64_t v37 = v18;
  uint64_t v19 = (void *)(v18 + v17);
  unint64_t v20 = v18 + v17 + v15[14];
  *uint64_t v19 = 0x6569766F6DLL;
  v19[1] = 0xE500000000000000;
  swift_beginAccess();
  sub_1005057FC(&qword_1016A4070);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  sub_100556B0C((uint64_t)v14, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_1005567F0((uint64_t)v14, type metadata accessor for CRLMovieItemAssetData);
  uint64_t v21 = type metadata accessor for UUID();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v33 = *(void (**)(unint64_t, char *, uint64_t))(v22 + 16);
  v33(v20, v6, v21);
  sub_1005567F0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  uint64_t v23 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
  v23(v20, 0, 1, v21);
  id v24 = (void *)((char *)v19 + v35);
  uint64_t v25 = (char *)v19 + v35 + v15[14];
  *id v24 = 0x6D49726574736F70;
  v24[1] = 0xEB00000000656761;
  swift_beginAccess();
  uint64_t v26 = v36;
  CRRegister.wrappedValue.getter();
  uint64_t v27 = (uint64_t)v26;
  swift_endAccess();
  uint64_t v28 = (uint64_t)&v26[*(int *)(v8 + 28)];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v28, 1, v39))
  {
    sub_1005567F0(v27, type metadata accessor for CRLMovieItemAssetData);
    uint64_t v29 = 1;
  }
  else
  {
    uint64_t v30 = v28;
    uint64_t v31 = v34;
    sub_100556B0C(v30, v34, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_1005567F0(v27, type metadata accessor for CRLMovieItemAssetData);
    v33((unint64_t)v25, (char *)v31, v21);
    sub_1005567F0(v31, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    uint64_t v29 = 0;
  }
  v23((unint64_t)v25, v29, 1, v21);
  return sub_100A394EC(v37);
}

uint64_t sub_100551A1C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7, v8);
  uint64_t v10 = &v17[-v9];
  __chkstk_darwin(v11, v12);
  uint64_t v14 = &v17[-v13];
  uint64_t v15 = a1 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_assetUUIDMap;
  swift_beginAccess();
  if (*(void *)(*(void *)v15 + 16))
  {
    swift_beginAccess();
    sub_1005057FC(&qword_1016A4070);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    sub_10054D2E8((uint64_t)v14);
    uint64_t v18 = v1;
    sub_1005567F0((uint64_t)v10, type metadata accessor for CRLMovieItemAssetData);
    sub_100556B0C((uint64_t)v14, (uint64_t)v10, type metadata accessor for CRLMovieItemAssetData);
    swift_beginAccess();
    sub_100556B0C((uint64_t)v10, (uint64_t)v6, type metadata accessor for CRLMovieItemAssetData);
    CRRegister.wrappedValue.setter();
    sub_1005567F0((uint64_t)v10, type metadata accessor for CRLMovieItemAssetData);
    swift_endAccess();
    sub_1005567F0((uint64_t)v14, type metadata accessor for CRLMovieItemAssetData);
  }
  swift_beginAccess();
  sub_100F99CA4(a1);
  return swift_endAccess();
}

uint64_t sub_100551C58()
{
  return sub_1005567F0(v0 + qword_101719EE8, type metadata accessor for CRLMovieItemCRDTData);
}

uint64_t sub_100551C90()
{
  sub_100522F00(v0 + *(void *)(*(void *)v0 + 632), (uint64_t *)&unk_101683E10);
  sub_1005567F0(v0 + qword_101719EE8, type metadata accessor for CRLMovieItemCRDTData);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLMovieItemData(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016731A0);
}

uint64_t sub_100551D4C()
{
  uint64_t result = type metadata accessor for CRLMovieItemCRDTData(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLMovieItemCRDTData(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_1016734E0);
}

uint64_t *sub_100551DFC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005057FC(&qword_1016A4070);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1005057FC(&qword_101673478);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1005057FC(&qword_101673480);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    unint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_1005057FC(&qword_101672430);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100551FBC(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1005057FC(&qword_1016A4070);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_1005057FC(&qword_101673480);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_1005057FC(&qword_101672430);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100552108(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_1016A4070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_101673480);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_1005057FC(&qword_101672430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100552278(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_1016A4070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_101673480);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_1005057FC(&qword_101672430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005523F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_1016A4070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_101673480);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_1005057FC(&qword_101672430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100552560(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_1016A4070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_101673480);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_1005057FC(&qword_101672430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005526D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005526E8);
}

uint64_t sub_1005526E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_1016A4070);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1005057FC(&qword_101673478);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_1005057FC(&qword_101673480);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_1005057FC(&qword_101672430);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  unint64_t v17 = *(void *)(a1 + a3[8]);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

uint64_t sub_1005528A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005528B8);
}

uint64_t sub_1005528B8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1005057FC(&qword_1016A4070);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_1005057FC(&qword_101673478);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t v16 = sub_1005057FC(&qword_101673480);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[6];
      }
      else
      {
        uint64_t result = sub_1005057FC(&qword_101672430);
        if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
        {
          *(void *)(a1 + a4[8]) = (a2 - 1);
          return result;
        }
        uint64_t v10 = result;
        uint64_t v14 = *(void *)(result - 8);
        uint64_t v15 = a4[7];
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_100552A70()
{
  sub_100552C04();
  if (v0 <= 0x3F)
  {
    sub_100552D80(319, &qword_101673500, (uint64_t *)&unk_101685110, (void (*)(void))sub_100552CB8);
    if (v1 <= 0x3F)
    {
      sub_100552D80(319, &qword_101673518, &qword_101673520, (void (*)(void))sub_100552DEC);
      if (v2 <= 0x3F)
      {
        sub_100552E58();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_100552C04()
{
  if (!qword_1016734F0)
  {
    type metadata accessor for CRLMovieItemAssetData(255);
    sub_1005542AC(&qword_1016734F8, (void (*)(uint64_t))type metadata accessor for CRLMovieItemAssetData);
    unint64_t v0 = type metadata accessor for CRRegister();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1016734F0);
    }
  }
}

uint64_t type metadata accessor for CRLMovieItemAssetData(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_1016735D0);
}

unint64_t sub_100552CB8()
{
  unint64_t result = qword_101673508;
  if (!qword_101673508)
  {
    sub_100522D34((uint64_t *)&unk_101685110);
    sub_100552D2C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673508);
  }
  return result;
}

unint64_t sub_100552D2C()
{
  unint64_t result = qword_101673510;
  if (!qword_101673510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673510);
  }
  return result;
}

void sub_100552D80(uint64_t a1, unint64_t *a2, uint64_t *a3, void (*a4)(void))
{
  if (!*a2)
  {
    sub_100522D34(a3);
    a4();
    unint64_t v6 = type metadata accessor for CRRegister();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_100552DEC()
{
  unint64_t result = qword_101673528;
  if (!qword_101673528)
  {
    sub_100522D34(&qword_101673520);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673528);
  }
  return result;
}

void sub_100552E58()
{
  if (!qword_101673530)
  {
    sub_100552EB4();
    unint64_t v0 = type metadata accessor for CRRegister();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101673530);
    }
  }
}

unint64_t sub_100552EB4()
{
  unint64_t result = qword_101673538;
  if (!qword_101673538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673538);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for CRLColorModelMonochromeData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for CRLColorModelMonochromeData()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for CRLColorModelMonochromeData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLColorModelMonochromeData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLColorModelMonochromeData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLColorModelMonochromeData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLMovieMaskData()
{
  return &type metadata for CRLMovieMaskData;
}

char *sub_10055305C(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v36(a1, a2, v7);
    uint64_t v8 = type metadata accessor for CRLAssetData();
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    *(void *)&a1[*(int *)(v8 + 24)] = *(void *)&a2[*(int *)(v8 + 24)];
    uint64_t v13 = a3[5];
    __dst = &a1[v13];
    uint64_t v14 = &a2[v13];
    uint64_t v15 = *(void *)(v8 - 8);
    uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16(v14, 1, v8))
    {
      uint64_t v17 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
      memcpy(__dst, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v36(__dst, v14, v7);
      uint64_t v19 = *(int *)(v8 + 20);
      uint64_t v20 = &__dst[v19];
      uint64_t v21 = &v14[v19];
      uint64_t v22 = *((void *)v21 + 1);
      *(void *)uint64_t v20 = *(void *)v21;
      *((void *)v20 + 1) = v22;
      *(void *)&__dst[*(int *)(v8 + 24)] = *(void *)&v14[*(int *)(v8 + 24)];
      uint64_t v23 = *(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23(__dst, 0, 1, v8);
    }
    uint64_t v24 = a3[7];
    *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
    *(void *)&a1[v24] = *(void *)&a2[v24];
    uint64_t v25 = a3[9];
    *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
    a1[v25] = a2[v25];
    uint64_t v26 = a3[10];
    uint64_t v27 = a3[11];
    uint64_t v28 = &a1[v26];
    uint64_t v29 = &a2[v26];
    uint64_t v30 = *((void *)v29 + 1);
    *(void *)uint64_t v28 = *(void *)v29;
    *((void *)v28 + 1) = v30;
    uint64_t v31 = &a1[v27];
    uint64_t v32 = &a2[v27];
    uint64_t v33 = *((void *)v32 + 1);
    *(void *)uint64_t v31 = *(void *)v32;
    *((void *)v31 + 1) = v33;
    uint64_t v34 = a3[13];
    a1[a3[12]] = a2[a3[12]];
    *(void *)&a1[v34] = *(void *)&a2[v34];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1005532EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = type metadata accessor for CRLAssetData();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v7, 1, v6))
  {
    v5(v7, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100553434(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v34(a1, a2, v6);
  uint64_t v7 = type metadata accessor for CRLAssetData();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  uint64_t v12 = a3[5];
  __dst = (char *)(a1 + v12);
  uint64_t v13 = (char *)(a2 + v12);
  uint64_t v14 = *(void *)(v7 - 8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15(v13, 1, v7))
  {
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
    memcpy(__dst, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v34((uint64_t)__dst, (uint64_t)v13, v6);
    uint64_t v17 = *(int *)(v7 + 20);
    uint64_t v18 = &__dst[v17];
    uint64_t v19 = &v13[v17];
    uint64_t v20 = *((void *)v19 + 1);
    *(void *)uint64_t v18 = *(void *)v19;
    *((void *)v18 + 1) = v20;
    *(void *)&__dst[*(int *)(v7 + 24)] = *(void *)&v13[*(int *)(v7 + 24)];
    uint64_t v21 = *(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(__dst, 0, 1, v7);
  }
  uint64_t v22 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  uint64_t v23 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  uint64_t v24 = a3[10];
  uint64_t v25 = a3[11];
  uint64_t v26 = (void *)(a1 + v24);
  uint64_t v27 = (void *)(a2 + v24);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = (void *)(a1 + v25);
  uint64_t v30 = (void *)(a2 + v25);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  uint64_t v32 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(void *)(a1 + v32) = *(void *)(a2 + v32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100553674(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v33 + 24);
  uint64_t v35 = v6;
  v34(a1, a2);
  uint64_t v7 = type metadata accessor for CRLAssetData();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[5];
  uint64_t v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = *(void *)(v7 - 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(a1 + v11, 1, v7);
  int v17 = v15((uint64_t)v13, 1, v7);
  if (!v16)
  {
    if (!v17)
    {
      ((void (*)(char *, char *, uint64_t))v34)(v12, v13, v35);
      uint64_t v30 = *(int *)(v7 + 20);
      uint64_t v31 = &v12[v30];
      uint64_t v32 = &v13[v30];
      *(void *)uint64_t v31 = *(void *)v32;
      *((void *)v31 + 1) = *((void *)v32 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v12[*(int *)(v7 + 24)] = *(void *)&v13[*(int *)(v7 + 24)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_1005567F0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v22 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
    memcpy(v12, v13, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v12, v13, v35);
  uint64_t v18 = *(int *)(v7 + 20);
  uint64_t v19 = &v12[v18];
  uint64_t v20 = &v13[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  *(void *)&v12[*(int *)(v7 + 24)] = *(void *)&v13[*(int *)(v7 + 24)];
  uint64_t v21 = *(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21(v12, 0, 1, v7);
LABEL_7:
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v23 = a3[10];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[11];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005539E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = type metadata accessor for CRLAssetData();
  *(_OWORD *)(a1 + *(int *)(v8 + 20)) = *(_OWORD *)(a2 + *(int *)(v8 + 20));
  *(void *)(a1 + *(int *)(v8 + 24)) = *(void *)(a2 + *(int *)(v8 + 24));
  uint64_t v9 = a3[5];
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2 + v9, 1, v8))
  {
    uint64_t v13 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v6);
    *(_OWORD *)&v10[*(int *)(v8 + 20)] = *(_OWORD *)&v11[*(int *)(v8 + 20)];
    *(void *)&v10[*(int *)(v8 + 24)] = *(void *)&v11[*(int *)(v8 + 24)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v8);
  }
  uint64_t v14 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v16 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  uint64_t v17 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  return a1;
}

uint64_t sub_100553BC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v40 + 40);
  uint64_t v42 = v6;
  v41(a1, a2);
  uint64_t v7 = type metadata accessor for CRLAssetData();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[5];
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  uint64_t v16 = *(void *)(v7 - 8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(a1 + v13, 1, v7);
  int v19 = v17((uint64_t)v15, 1, v7);
  if (!v18)
  {
    if (!v19)
    {
      ((void (*)(char *, char *, uint64_t))v41)(v14, v15, v42);
      uint64_t v35 = *(int *)(v7 + 20);
      uint64_t v36 = &v14[v35];
      uint64_t v37 = &v15[v35];
      uint64_t v39 = *(void *)v37;
      uint64_t v38 = *((void *)v37 + 1);
      *(void *)uint64_t v36 = v39;
      *((void *)v36 + 1) = v38;
      swift_bridgeObjectRelease();
      *(void *)&v14[*(int *)(v7 + 24)] = *(void *)&v15[*(int *)(v7 + 24)];
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_1005567F0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
    memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v14, v15, v42);
  *(_OWORD *)&v14[*(int *)(v7 + 20)] = *(_OWORD *)&v15[*(int *)(v7 + 20)];
  *(void *)&v14[*(int *)(v7 + 24)] = *(void *)&v15[*(int *)(v7 + 24)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v7);
LABEL_7:
  uint64_t v21 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v21) = *(void *)(a2 + v21);
  uint64_t v22 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v22) = *(unsigned char *)(a2 + v22);
  uint64_t v23 = a3[10];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *uint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[11];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (uint64_t *)(a2 + v28);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  *uint64_t v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(void *)(a1 + v33) = *(void *)(a2 + v33);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100553EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100553EC4);
}

uint64_t sub_100553EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CRLAssetData();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 52));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_100553FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100553FF0);
}

uint64_t sub_100553FF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for CRLAssetData();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1005057FC((uint64_t *)&unk_10167D2B0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 52)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_100554104()
{
  type metadata accessor for CRLAssetData();
  if (v0 <= 0x3F)
  {
    sub_10055420C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10055420C()
{
  if (!qword_1016735E0)
  {
    type metadata accessor for CRLAssetData();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1016735E0);
    }
  }
}

uint64_t sub_100554264()
{
  return sub_1005542AC(&qword_101673630, (void (*)(uint64_t))type metadata accessor for CRLMovieItemAssetData);
}

uint64_t sub_1005542AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005542F4()
{
  return sub_1005542AC(&qword_1016734F8, (void (*)(uint64_t))type metadata accessor for CRLMovieItemAssetData);
}

uint64_t sub_10055433C()
{
  return sub_1005542AC(&qword_101673638, (void (*)(uint64_t))type metadata accessor for CRLMovieItemAssetData);
}

uint64_t sub_100554384()
{
  return sub_1005542AC(&qword_101673640, (void (*)(uint64_t))type metadata accessor for CRLMovieItemAssetData);
}

unint64_t sub_1005543D0()
{
  unint64_t result = qword_101673648;
  if (!qword_101673648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673648);
  }
  return result;
}

unint64_t sub_100554428()
{
  unint64_t result = qword_101673650;
  if (!qword_101673650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673650);
  }
  return result;
}

unint64_t sub_100554480()
{
  unint64_t result = qword_101673658;
  if (!qword_101673658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673658);
  }
  return result;
}

unint64_t sub_1005544D8()
{
  unint64_t result = qword_101673660;
  if (!qword_101673660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673660);
  }
  return result;
}

unint64_t sub_100554530()
{
  unint64_t result = qword_101673668;
  if (!qword_101673668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673668);
  }
  return result;
}

unint64_t sub_100554588()
{
  unint64_t result = qword_101673670;
  if (!qword_101673670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673670);
  }
  return result;
}

uint64_t sub_1005545DC()
{
  return sub_100523288(&qword_101673678, &qword_101673680);
}

uint64_t sub_100554618()
{
  return sub_1005542AC(&qword_101673688, (void (*)(uint64_t))type metadata accessor for CRLMovieItemAssetData);
}

unint64_t sub_100554664()
{
  unint64_t result = qword_101673690;
  if (!qword_101673690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673690);
  }
  return result;
}

unint64_t sub_1005546C0()
{
  unint64_t result = qword_101673698;
  if (!qword_101673698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673698);
  }
  return result;
}

unint64_t sub_100554718()
{
  unint64_t result = qword_1016736A0;
  if (!qword_1016736A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016736A0);
  }
  return result;
}

unint64_t sub_100554770()
{
  unint64_t result = qword_1016736A8;
  if (!qword_1016736A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016736A8);
  }
  return result;
}

unint64_t sub_1005547C8()
{
  unint64_t result = qword_1016736B0;
  if (!qword_1016736B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016736B0);
  }
  return result;
}

unint64_t sub_100554820()
{
  unint64_t result = qword_1016736B8;
  if (!qword_1016736B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016736B8);
  }
  return result;
}

unint64_t sub_100554878()
{
  unint64_t result = qword_1016736C0;
  if (!qword_1016736C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016736C0);
  }
  return result;
}

unint64_t sub_1005548D0()
{
  unint64_t result = qword_1016736C8;
  if (!qword_1016736C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016736C8);
  }
  return result;
}

unint64_t sub_100554928()
{
  unint64_t result = qword_1016736D0;
  if (!qword_1016736D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016736D0);
  }
  return result;
}

uint64_t sub_10055497C()
{
  return sub_100523288(&qword_1016736D8, &qword_1016736E0);
}

unint64_t sub_1005549BC()
{
  unint64_t result = qword_1016736E8;
  if (!qword_1016736E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016736E8);
  }
  return result;
}

uint64_t sub_100554A10()
{
  return sub_1005542AC(&qword_1016736F0, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);
}

uint64_t sub_100554A58()
{
  return sub_1005542AC(&qword_1016736F8, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);
}

uint64_t sub_100554AA0()
{
  return sub_1005542AC(&qword_101673700, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);
}

uint64_t sub_100554AE8()
{
  return sub_100523288(&qword_101673708, &qword_101673710);
}

uint64_t sub_100554B24()
{
  return sub_1005542AC(&qword_101673718, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);
}

uint64_t sub_100554B6C()
{
  return sub_1005542AC(&qword_101673720, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);
}

uint64_t sub_100554BB4()
{
  return sub_100523288(&qword_101673728, &qword_1016A4070);
}

uint64_t sub_100554BF0()
{
  return sub_100523288(&qword_101673730, &qword_101673478);
}

uint64_t sub_100554C2C()
{
  return sub_100523288(&qword_101673738, &qword_101673480);
}

uint64_t sub_100554C68()
{
  return sub_100523288(&qword_101673740, &qword_101672430);
}

uint64_t sub_100554CA4()
{
  return sub_1005542AC(&qword_101673748, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);
}

unint64_t sub_100554CF0()
{
  unint64_t result = qword_101673750;
  if (!qword_101673750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673750);
  }
  return result;
}

uint64_t sub_100554D44()
{
  return sub_1005542AC(&qword_101673758, (void (*)(uint64_t))type metadata accessor for CRLMovieItemAssetData);
}

uint64_t sub_100554D8C@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  type metadata accessor for CRLMovieItemCRDTData(0);
  sub_1005057FC(&qword_101673478);
  CRRegister.wrappedValue.getter();
  sub_10051B3EC((uint64_t)v3, (uint64_t)v4, (uint64_t *)&unk_101685110);
  swift_endAccess();
  return sub_10051B3EC((uint64_t)v4, a1, (uint64_t *)&unk_101685110);
}

uint64_t sub_100554E34(uint64_t a1)
{
  swift_beginAccess();
  sub_10051B3EC(a1, (uint64_t)&v3, (uint64_t *)&unk_101685110);
  type metadata accessor for CRLMovieItemCRDTData(0);
  sub_1005057FC(&qword_101673478);
  CRRegister.wrappedValue.setter();
  return swift_endAccess();
}

uint64_t sub_100554ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v141 = type metadata accessor for CRLAssetData();
  uint64_t v139 = *(void *)(v141 - 8);
  __chkstk_darwin(v141, v4);
  uint64_t v6 = (char *)&v134 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_1005057FC(&qword_10167D2D0);
  __chkstk_darwin(v138, v11);
  uint64_t v140 = (uint64_t)&v134 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLMovieItemAssetData(0);
  uint64_t v15 = __chkstk_darwin(v13, v14);
  uint64_t v146 = (uint64_t)&v134 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v20 = (char *)&v134 - v19;
  uint64_t v22 = __chkstk_darwin(v18, v21);
  uint64_t v145 = (char *)&v134 - v23;
  uint64_t v25 = __chkstk_darwin(v22, v24);
  uint64_t v142 = (uint64_t)&v134 - v26;
  uint64_t v28 = __chkstk_darwin(v25, v27);
  v152 = (char *)&v134 - v29;
  uint64_t v31 = __chkstk_darwin(v28, v30);
  uint64_t v144 = (uint64_t)&v134 - v32;
  uint64_t v34 = __chkstk_darwin(v31, v33);
  v151 = (char *)&v134 - v35;
  uint64_t v37 = __chkstk_darwin(v34, v36);
  uint64_t v150 = (char *)&v134 - v38;
  uint64_t v40 = __chkstk_darwin(v37, v39);
  uint64_t v149 = (uint64_t)&v134 - v41;
  uint64_t v43 = __chkstk_darwin(v40, v42);
  uint64_t v143 = (char *)&v134 - v44;
  uint64_t v46 = __chkstk_darwin(v43, v45);
  uint64_t v148 = (uint64_t)&v134 - v47;
  uint64_t v49 = __chkstk_darwin(v46, v48);
  uint64_t v147 = (uint64_t)&v134 - v50;
  uint64_t v52 = __chkstk_darwin(v49, v51);
  uint64_t v54 = (char *)&v134 - v53;
  uint64_t v56 = __chkstk_darwin(v52, v55);
  uint64_t v58 = (char *)&v134 - v57;
  uint64_t v60 = __chkstk_darwin(v56, v59);
  uint64_t v62 = (char *)&v134 - v61;
  __chkstk_darwin(v60, v63);
  char v65 = (char *)&v134 - v64;
  if ((static UUID.== infix(_:_:)() & 1) == 0
    || ((uint64_t v66 = *(int *)(v141 + 20),
         uint64_t v67 = *(void *)(a1 + v66),
         uint64_t v68 = *(void *)(a1 + v66 + 8),
         long long v69 = (void *)(a2 + v66),
         v67 != *v69)
     || v68 != v69[1])
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    sub_100556B0C(a1, (uint64_t)v65, type metadata accessor for CRLMovieItemAssetData);
    sub_100556B0C(a2, (uint64_t)v62, type metadata accessor for CRLMovieItemAssetData);
    goto LABEL_17;
  }
  v135 = v6;
  uint64_t v136 = (int *)v13;
  uint64_t v70 = v141;
  char v71 = sub_100ED60AC(*(void *)(a1 + *(int *)(v141 + 24)), *(void *)(a2 + *(int *)(v141 + 24)));
  uint64_t v137 = v20;
  sub_100556B0C(a1, (uint64_t)v65, type metadata accessor for CRLMovieItemAssetData);
  uint64_t v20 = v137;
  sub_100556B0C(a2, (uint64_t)v62, type metadata accessor for CRLMovieItemAssetData);
  if ((v71 & 1) == 0)
  {
LABEL_17:
    sub_1005567F0((uint64_t)v62, type metadata accessor for CRLMovieItemAssetData);
    sub_1005567F0((uint64_t)v65, type metadata accessor for CRLMovieItemAssetData);
LABEL_18:
    uint64_t v78 = (uint64_t)v145;
    uint64_t v79 = (uint64_t)v143;
    sub_100556B0C(a1, (uint64_t)v58, type metadata accessor for CRLMovieItemAssetData);
    sub_100556B0C(a2, (uint64_t)v54, type metadata accessor for CRLMovieItemAssetData);
LABEL_19:
    int v80 = v20;
    sub_1005567F0((uint64_t)v54, type metadata accessor for CRLMovieItemAssetData);
    sub_1005567F0((uint64_t)v58, type metadata accessor for CRLMovieItemAssetData);
    uint64_t v84 = v147;
    sub_100556B0C(a1, v147, type metadata accessor for CRLMovieItemAssetData);
    uint64_t v85 = v148;
    sub_100556B0C(a2, v148, type metadata accessor for CRLMovieItemAssetData);
    goto LABEL_20;
  }
  char v134 = v10;
  uint64_t v72 = v136[5];
  uint64_t v73 = (uint64_t)&v62[v72];
  uint64_t v74 = v140;
  uint64_t v75 = v140 + *(int *)(v138 + 48);
  sub_100522E9C((uint64_t)&v65[v72], v140, (uint64_t *)&unk_10167D2B0);
  uint64_t v138 = v75;
  sub_100522E9C(v73, v75, (uint64_t *)&unk_10167D2B0);
  long long v76 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v139 + 48);
  if (v76(v74, 1, v70) == 1)
  {
    sub_1005567F0((uint64_t)v62, type metadata accessor for CRLMovieItemAssetData);
    uint64_t v74 = v140;
    sub_1005567F0((uint64_t)v65, type metadata accessor for CRLMovieItemAssetData);
    int v77 = v76(v138, 1, v70);
    uint64_t v20 = v137;
    if (v77 == 1)
    {
      sub_100522F00(v74, (uint64_t *)&unk_10167D2B0);
      sub_100556B0C(a1, (uint64_t)v58, type metadata accessor for CRLMovieItemAssetData);
      sub_100556B0C(a2, (uint64_t)v54, type metadata accessor for CRLMovieItemAssetData);
      uint64_t v78 = (uint64_t)v145;
      uint64_t v79 = (uint64_t)v143;
      goto LABEL_9;
    }
    goto LABEL_32;
  }
  sub_100522E9C(v74, (uint64_t)v134, (uint64_t *)&unk_10167D2B0);
  if (v76(v138, 1, v70) == 1)
  {
    sub_1005567F0((uint64_t)v62, type metadata accessor for CRLMovieItemAssetData);
    sub_1005567F0((uint64_t)v65, type metadata accessor for CRLMovieItemAssetData);
    sub_1005567F0((uint64_t)v134, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    uint64_t v20 = v137;
LABEL_32:
    uint64_t v110 = &qword_10167D2D0;
    uint64_t v111 = v74;
LABEL_40:
    sub_100522F00(v111, v110);
    goto LABEL_18;
  }
  uint64_t v112 = (uint64_t)v135;
  sub_10055756C(v138, (uint64_t)v135, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  uint64_t v113 = (uint64_t)v134;
  char v114 = static UUID.== infix(_:_:)();
  uint64_t v20 = v137;
  if ((v114 & 1) == 0
    || ((uint64_t v115 = *(int *)(v141 + 20),
         uint64_t v116 = *(void *)(v113 + v115),
         uint64_t v117 = *(void *)(v113 + v115 + 8),
         uint64_t v118 = (void *)(v112 + v115),
         v116 != *v118)
     || v117 != v118[1])
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    sub_1005567F0(v112, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_1005567F0((uint64_t)v62, type metadata accessor for CRLMovieItemAssetData);
    sub_1005567F0((uint64_t)v65, type metadata accessor for CRLMovieItemAssetData);
    sub_1005567F0(v113, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    uint64_t v110 = (uint64_t *)&unk_10167D2B0;
    uint64_t v111 = v140;
    goto LABEL_40;
  }
  char v119 = sub_100ED60AC(*(void *)(v113 + *(int *)(v141 + 24)), *(void *)(v112 + *(int *)(v141 + 24)));
  uint64_t v120 = v112;
  char v121 = v119;
  sub_1005567F0(v120, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_1005567F0((uint64_t)v62, type metadata accessor for CRLMovieItemAssetData);
  uint64_t v20 = v137;
  sub_1005567F0((uint64_t)v65, type metadata accessor for CRLMovieItemAssetData);
  sub_1005567F0(v113, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100522F00(v140, (uint64_t *)&unk_10167D2B0);
  sub_100556B0C(a1, (uint64_t)v58, type metadata accessor for CRLMovieItemAssetData);
  sub_100556B0C(a2, (uint64_t)v54, type metadata accessor for CRLMovieItemAssetData);
  uint64_t v78 = (uint64_t)v145;
  uint64_t v79 = (uint64_t)v143;
  if ((v121 & 1) == 0) {
    goto LABEL_19;
  }
LABEL_9:
  int v80 = v20;
  int v81 = v136;
  double v82 = *(double *)&v58[v136[6]];
  sub_1005567F0((uint64_t)v58, type metadata accessor for CRLMovieItemAssetData);
  double v83 = *(double *)&v54[v81[6]];
  sub_1005567F0((uint64_t)v54, type metadata accessor for CRLMovieItemAssetData);
  uint64_t v84 = v147;
  sub_100556B0C(a1, v147, type metadata accessor for CRLMovieItemAssetData);
  uint64_t v85 = v148;
  sub_100556B0C(a2, v148, type metadata accessor for CRLMovieItemAssetData);
  if (v82 != v83)
  {
LABEL_20:
    sub_1005567F0(v85, type metadata accessor for CRLMovieItemAssetData);
    sub_1005567F0(v84, type metadata accessor for CRLMovieItemAssetData);
    sub_100556B0C(a1, v79, type metadata accessor for CRLMovieItemAssetData);
    uint64_t v89 = v79;
    uint64_t v90 = v149;
    sub_100556B0C(a2, v149, type metadata accessor for CRLMovieItemAssetData);
    uint64_t v91 = (uint64_t)v151;
    uint64_t v92 = (uint64_t)v152;
    uint64_t v93 = (uint64_t)v150;
    goto LABEL_21;
  }
  uint64_t v86 = v136;
  double v87 = *(double *)(v84 + v136[7]);
  sub_1005567F0(v84, type metadata accessor for CRLMovieItemAssetData);
  double v88 = *(double *)(v85 + v86[7]);
  sub_1005567F0(v85, type metadata accessor for CRLMovieItemAssetData);
  sub_100556B0C(a1, v79, type metadata accessor for CRLMovieItemAssetData);
  uint64_t v89 = v79;
  uint64_t v90 = v149;
  sub_100556B0C(a2, v149, type metadata accessor for CRLMovieItemAssetData);
  uint64_t v91 = (uint64_t)v151;
  uint64_t v92 = (uint64_t)v152;
  uint64_t v93 = (uint64_t)v150;
  if (v87 != v88)
  {
LABEL_21:
    sub_1005567F0(v90, type metadata accessor for CRLMovieItemAssetData);
    sub_1005567F0(v89, type metadata accessor for CRLMovieItemAssetData);
    sub_100556B0C(a1, v93, type metadata accessor for CRLMovieItemAssetData);
    sub_100556B0C(a2, v91, type metadata accessor for CRLMovieItemAssetData);
    goto LABEL_22;
  }
  double v94 = *(double *)(v89 + v136[8]);
  sub_1005567F0(v89, type metadata accessor for CRLMovieItemAssetData);
  double v95 = *(double *)(v90 + v136[8]);
  sub_1005567F0(v90, type metadata accessor for CRLMovieItemAssetData);
  sub_100556B0C(a1, v93, type metadata accessor for CRLMovieItemAssetData);
  sub_100556B0C(a2, v91, type metadata accessor for CRLMovieItemAssetData);
  if (v94 != v95)
  {
LABEL_22:
    sub_1005567F0(v91, type metadata accessor for CRLMovieItemAssetData);
    sub_1005567F0(v93, type metadata accessor for CRLMovieItemAssetData);
    uint64_t v101 = v144;
    sub_100556B0C(a1, v144, type metadata accessor for CRLMovieItemAssetData);
    sub_100556B0C(a2, v92, type metadata accessor for CRLMovieItemAssetData);
    uint64_t v102 = (uint64_t)v80;
    goto LABEL_23;
  }
  uint64_t v96 = v136;
  uint64_t v97 = v93;
  int v98 = *(unsigned __int8 *)(v93 + v136[9]);
  sub_1005567F0(v97, type metadata accessor for CRLMovieItemAssetData);
  uint64_t v99 = v91;
  int v100 = *(unsigned __int8 *)(v91 + v96[9]);
  sub_1005567F0(v99, type metadata accessor for CRLMovieItemAssetData);
  uint64_t v101 = v144;
  sub_100556B0C(a1, v144, type metadata accessor for CRLMovieItemAssetData);
  sub_100556B0C(a2, v92, type metadata accessor for CRLMovieItemAssetData);
  uint64_t v102 = (uint64_t)v80;
  if (v98 != v100)
  {
LABEL_23:
    sub_1005567F0(v92, type metadata accessor for CRLMovieItemAssetData);
    sub_1005567F0(v101, type metadata accessor for CRLMovieItemAssetData);
    uint64_t v106 = v142;
    goto LABEL_24;
  }
  uint64_t v103 = v136;
  int v104 = *(unsigned __int8 *)(v101 + v136[12]);
  sub_1005567F0(v101, type metadata accessor for CRLMovieItemAssetData);
  int v105 = *(unsigned __int8 *)(v92 + v103[12]);
  sub_1005567F0(v92, type metadata accessor for CRLMovieItemAssetData);
  if (v104 == 2)
  {
    uint64_t v106 = v142;
    if (v105 == 2)
    {
      sub_100556B0C(a1, v142, type metadata accessor for CRLMovieItemAssetData);
      sub_100556B0C(a2, v78, type metadata accessor for CRLMovieItemAssetData);
      goto LABEL_43;
    }
    goto LABEL_24;
  }
  uint64_t v106 = v142;
  if (v105 == 2)
  {
LABEL_24:
    sub_100556B0C(a1, v106, type metadata accessor for CRLMovieItemAssetData);
    sub_100556B0C(a2, v78, type metadata accessor for CRLMovieItemAssetData);
LABEL_25:
    sub_1005567F0(v78, type metadata accessor for CRLMovieItemAssetData);
    sub_1005567F0(v106, type metadata accessor for CRLMovieItemAssetData);
LABEL_26:
    sub_100556B0C(a1, v102, type metadata accessor for CRLMovieItemAssetData);
    uint64_t v107 = v146;
    sub_100556B0C(a2, v146, type metadata accessor for CRLMovieItemAssetData);
    goto LABEL_27;
  }
  sub_100556B0C(a1, v142, type metadata accessor for CRLMovieItemAssetData);
  sub_100556B0C(a2, v78, type metadata accessor for CRLMovieItemAssetData);
  if (((((v104 & 1) == 0) ^ v105) & 1) == 0) {
    goto LABEL_25;
  }
LABEL_43:
  uint64_t v122 = v136;
  uint64_t v123 = v136[10];
  id v124 = (void *)(v106 + v123);
  uint64_t v125 = *(void *)(v106 + v123 + 8);
  unint64_t v126 = (void *)(v78 + v123);
  uint64_t v127 = v126[1];
  if (!v125)
  {
    swift_bridgeObjectRetain();
    sub_1005567F0(v78, type metadata accessor for CRLMovieItemAssetData);
    sub_1005567F0(v106, type metadata accessor for CRLMovieItemAssetData);
    if (!v127) {
      goto LABEL_49;
    }
    goto LABEL_51;
  }
  if (!v127)
  {
    swift_bridgeObjectRetain();
    sub_1005567F0(v78, type metadata accessor for CRLMovieItemAssetData);
    sub_1005567F0(v106, type metadata accessor for CRLMovieItemAssetData);
LABEL_51:
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  if (*v124 == *v126 && v125 == v127)
  {
    swift_bridgeObjectRetain();
    sub_1005567F0(v78, type metadata accessor for CRLMovieItemAssetData);
    sub_1005567F0(v106, type metadata accessor for CRLMovieItemAssetData);
    swift_bridgeObjectRelease();
LABEL_49:
    sub_100556B0C(a1, v102, type metadata accessor for CRLMovieItemAssetData);
    uint64_t v107 = v146;
    sub_100556B0C(a2, v146, type metadata accessor for CRLMovieItemAssetData);
    goto LABEL_53;
  }
  char v128 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRetain();
  sub_1005567F0(v78, type metadata accessor for CRLMovieItemAssetData);
  uint64_t v122 = v136;
  sub_1005567F0(v106, type metadata accessor for CRLMovieItemAssetData);
  swift_bridgeObjectRelease();
  sub_100556B0C(a1, v102, type metadata accessor for CRLMovieItemAssetData);
  uint64_t v107 = v146;
  sub_100556B0C(a2, v146, type metadata accessor for CRLMovieItemAssetData);
  if ((v128 & 1) == 0)
  {
LABEL_27:
    sub_1005567F0(v107, type metadata accessor for CRLMovieItemAssetData);
    sub_1005567F0(v102, type metadata accessor for CRLMovieItemAssetData);
LABEL_28:
    char v108 = 0;
    return v108 & 1;
  }
LABEL_53:
  uint64_t v129 = v122[11];
  uint64_t v130 = (void *)(v102 + v129);
  uint64_t v131 = *(void *)(v102 + v129 + 8);
  uint64_t v132 = (void *)(v107 + v129);
  uint64_t v133 = v132[1];
  if (!v131)
  {
    swift_bridgeObjectRetain();
    sub_1005567F0(v107, type metadata accessor for CRLMovieItemAssetData);
    sub_1005567F0(v102, type metadata accessor for CRLMovieItemAssetData);
    if (!v133)
    {
      char v108 = 1;
      return v108 & 1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  if (!v133)
  {
    swift_bridgeObjectRetain();
    sub_1005567F0(v107, type metadata accessor for CRLMovieItemAssetData);
    sub_1005567F0(v102, type metadata accessor for CRLMovieItemAssetData);
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  if (*v130 == *v132 && v131 == v133) {
    char v108 = 1;
  }
  else {
    char v108 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRetain();
  sub_1005567F0(v107, type metadata accessor for CRLMovieItemAssetData);
  sub_1005567F0(v102, type metadata accessor for CRLMovieItemAssetData);
  swift_bridgeObjectRelease();
  return v108 & 1;
}

uint64_t sub_100555F88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLMovieItemCRDTData(0);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v49 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v48 = (char *)v45 - v10;
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v46 = (uint64_t)v45 - v13;
  uint64_t v15 = __chkstk_darwin(v12, v14);
  uint64_t v47 = (uint64_t)v45 - v16;
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v20 = (char *)v45 - v19;
  __chkstk_darwin(v18, v21);
  uint64_t v23 = (char *)v45 - v22;
  uint64_t v24 = type metadata accessor for CRLMovieItemAssetData(0);
  uint64_t v26 = __chkstk_darwin(v24 - 8, v25);
  uint64_t v28 = (char *)v45 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v29);
  uint64_t v31 = (char *)v45 - v30;
  sub_1005057FC(&qword_1016A4070);
  CRRegister.wrappedValue.getter();
  CRRegister.wrappedValue.getter();
  char v32 = sub_100554ECC((uint64_t)v31, (uint64_t)v28);
  sub_1005567F0((uint64_t)v28, type metadata accessor for CRLMovieItemAssetData);
  sub_1005567F0((uint64_t)v31, type metadata accessor for CRLMovieItemAssetData);
  sub_100556B0C(a1, (uint64_t)v23, type metadata accessor for CRLMovieItemCRDTData);
  sub_100556B0C(a2, (uint64_t)v20, type metadata accessor for CRLMovieItemCRDTData);
  if ((v32 & 1) == 0)
  {
    sub_1005567F0((uint64_t)v20, type metadata accessor for CRLMovieItemCRDTData);
    sub_1005567F0((uint64_t)v23, type metadata accessor for CRLMovieItemCRDTData);
    uint64_t v36 = (uint64_t)v48;
    uint64_t v35 = (uint64_t)v49;
    uint64_t v34 = v46;
    uint64_t v33 = v47;
LABEL_9:
    sub_100556B0C(a1, v33, type metadata accessor for CRLMovieItemCRDTData);
    sub_100556B0C(a2, v34, type metadata accessor for CRLMovieItemCRDTData);
LABEL_10:
    sub_1005567F0(v34, type metadata accessor for CRLMovieItemCRDTData);
    sub_1005567F0(v33, type metadata accessor for CRLMovieItemCRDTData);
    goto LABEL_11;
  }
  sub_1005057FC(&qword_101673478);
  CRRegister.wrappedValue.getter();
  sub_10051B3EC((uint64_t)v57, (uint64_t)v58, (uint64_t *)&unk_101685110);
  v45[1] = v4;
  CRRegister.wrappedValue.getter();
  sub_10051B3EC((uint64_t)v57, (uint64_t)v59, (uint64_t *)&unk_101685110);
  sub_10051B3EC((uint64_t)v58, (uint64_t)v57, (uint64_t *)&unk_101685110);
  sub_10051B3EC((uint64_t)v59, (uint64_t)&v57[29], (uint64_t *)&unk_101685110);
  sub_10051B3EC((uint64_t)v58, (uint64_t)v60, (uint64_t *)&unk_101685110);
  if (sub_100556850((uint64_t)v60) == 1)
  {
    sub_1005567F0((uint64_t)v20, type metadata accessor for CRLMovieItemCRDTData);
    sub_1005567F0((uint64_t)v23, type metadata accessor for CRLMovieItemCRDTData);
    sub_10051B3EC((uint64_t)&v57[29], (uint64_t)v61, (uint64_t *)&unk_101685110);
    sub_10051B3EC((uint64_t)v61, (uint64_t)v56, (uint64_t *)&unk_101685110);
    if (sub_100556850((uint64_t)v56) == 1)
    {
      sub_10051B3EC((uint64_t)v57, (uint64_t)v55, (uint64_t *)&unk_101685110);
      sub_1005569D0(v55);
      uint64_t v33 = v47;
      sub_100556B0C(a1, v47, type metadata accessor for CRLMovieItemCRDTData);
      uint64_t v34 = v46;
      sub_100556B0C(a2, v46, type metadata accessor for CRLMovieItemCRDTData);
      uint64_t v36 = (uint64_t)v48;
      uint64_t v35 = (uint64_t)v49;
      goto LABEL_15;
    }
    goto LABEL_8;
  }
  sub_10051B3EC((uint64_t)v59, (uint64_t)v55, (uint64_t *)&unk_101685110);
  if (sub_100556850((uint64_t)v55) == 1)
  {
    sub_10051B3EC((uint64_t)v58, (uint64_t)v56, (uint64_t *)&unk_101685110);
    sub_100556A44(v56);
    sub_1005567F0((uint64_t)v20, type metadata accessor for CRLMovieItemCRDTData);
    sub_1005567F0((uint64_t)v23, type metadata accessor for CRLMovieItemCRDTData);
    sub_1005569D0(v58);
LABEL_8:
    uint64_t v36 = (uint64_t)v48;
    uint64_t v35 = (uint64_t)v49;
    uint64_t v34 = v46;
    uint64_t v33 = v47;
    memcpy(v56, v57, sizeof(v56));
    sub_100556868((uint64_t)v56);
    goto LABEL_9;
  }
  sub_10051B3EC((uint64_t)v58, (uint64_t)v50, (uint64_t *)&unk_101685110);
  v61[12] = v50[12];
  v61[13] = v50[13];
  uint64_t v62 = v51;
  v61[8] = v50[8];
  v61[9] = v50[9];
  v61[11] = v50[11];
  v61[10] = v50[10];
  v61[4] = v50[4];
  v61[5] = v50[5];
  v61[7] = v50[7];
  v61[6] = v50[6];
  v61[0] = v50[0];
  v61[1] = v50[1];
  v61[3] = v50[3];
  v61[2] = v50[2];
  sub_10051B3EC((uint64_t)v59, (uint64_t)v52, (uint64_t *)&unk_101685110);
  v56[12] = v52[12];
  v56[13] = v52[13];
  *(void *)&v56[14] = v53;
  v56[8] = v52[8];
  v56[9] = v52[9];
  v56[11] = v52[11];
  v56[10] = v52[10];
  v56[4] = v52[4];
  v56[5] = v52[5];
  v56[7] = v52[7];
  v56[6] = v52[6];
  v56[0] = v52[0];
  v56[1] = v52[1];
  v56[2] = v52[2];
  void v56[3] = v52[3];
  sub_100556A44(v50);
  char v39 = sub_100A1CC04(v61, v56);
  sub_1005569D0(v59);
  sub_1005569D0(v58);
  sub_1005567F0((uint64_t)v20, type metadata accessor for CRLMovieItemCRDTData);
  sub_1005567F0((uint64_t)v23, type metadata accessor for CRLMovieItemCRDTData);
  sub_10051B3EC((uint64_t)v57, (uint64_t)v54, (uint64_t *)&unk_101685110);
  sub_1005569D0(v54);
  uint64_t v33 = v47;
  sub_100556B0C(a1, v47, type metadata accessor for CRLMovieItemCRDTData);
  uint64_t v34 = v46;
  sub_100556B0C(a2, v46, type metadata accessor for CRLMovieItemCRDTData);
  uint64_t v36 = (uint64_t)v48;
  uint64_t v35 = (uint64_t)v49;
  if ((v39 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_15:
  sub_1005057FC(&qword_101673480);
  CRRegister.wrappedValue.getter();
  float v40 = *(float *)v57;
  LODWORD(v49) = BYTE4(v57[0]);
  CRRegister.wrappedValue.getter();
  float v41 = *(float *)v57;
  char v42 = BYTE4(v57[0]);
  sub_1005567F0(v34, type metadata accessor for CRLMovieItemCRDTData);
  sub_1005567F0(v33, type metadata accessor for CRLMovieItemCRDTData);
  if ((v49 & 1) == 0)
  {
    if ((v42 & 1) == 0)
    {
      sub_100556B0C(a1, v36, type metadata accessor for CRLMovieItemCRDTData);
      sub_100556B0C(a2, v35, type metadata accessor for CRLMovieItemCRDTData);
      if (v40 != v41) {
        goto LABEL_12;
      }
      goto LABEL_20;
    }
LABEL_11:
    sub_100556B0C(a1, v36, type metadata accessor for CRLMovieItemCRDTData);
    sub_100556B0C(a2, v35, type metadata accessor for CRLMovieItemCRDTData);
    goto LABEL_12;
  }
  if ((v42 & 1) == 0) {
    goto LABEL_11;
  }
  sub_100556B0C(a1, v36, type metadata accessor for CRLMovieItemCRDTData);
  sub_100556B0C(a2, v35, type metadata accessor for CRLMovieItemCRDTData);
LABEL_20:
  sub_1005057FC(&qword_101672430);
  CRRegister.wrappedValue.getter();
  float v43 = *(float *)v57;
  uint64_t v44 = v57[1];
  CRRegister.wrappedValue.getter();
  if (v43 == *(float *)v57)
  {
    char v37 = sub_100ED60AC(v44, v57[1]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_12:
  char v37 = 0;
LABEL_13:
  sub_1005567F0(v35, type metadata accessor for CRLMovieItemCRDTData);
  sub_1005567F0(v36, type metadata accessor for CRLMovieItemCRDTData);
  return v37 & 1;
}

uint64_t sub_1005567F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100556850(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 96);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_100556868(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 232);
  uint64_t v3 = *(void *)(a1 + 240);
  uint64_t v4 = *(void *)(a1 + 248);
  uint64_t v5 = *(void *)(a1 + 256);
  uint64_t v6 = *(void *)(a1 + 264);
  uint64_t v7 = *(void *)(a1 + 272);
  uint64_t v8 = *(void *)(a1 + 280);
  uint64_t v9 = *(void *)(a1 + 288);
  long long v18 = *(_OWORD *)(a1 + 312);
  long long v19 = *(_OWORD *)(a1 + 296);
  long long v16 = *(_OWORD *)(a1 + 344);
  long long v17 = *(_OWORD *)(a1 + 328);
  long long v14 = *(_OWORD *)(a1 + 376);
  long long v15 = *(_OWORD *)(a1 + 360);
  long long v13 = *(_OWORD *)(a1 + 392);
  long long v11 = *(_OWORD *)(a1 + 424);
  long long v12 = *(_OWORD *)(a1 + 408);
  sub_100519F40(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200));
  sub_100519F40(v2, v3, v4, v5, v6, v7, v8, v9, v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v11,
    *((uint64_t *)&v11 + 1));
  return a1;
}

uint64_t *sub_1005569D0(uint64_t *a1)
{
  sub_100519F40(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25]);
  return a1;
}

void *sub_100556A44(void *a1)
{
  uint64_t v2 = a1[18];
  uint64_t v3 = a1[24];
  uint64_t v4 = a1[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10051A2E0(v2);
  swift_bridgeObjectRetain();
  sub_10051A320(v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100556B0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100556B74(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_100556BAC(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) > 9) {
    return 10;
  }
  else {
    return byte_10117FB28[a1 + 1];
  }
}

uint64_t sub_100556BD0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461446569766F6DLL && a2 == 0xE900000000000061;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D49726574736F70 && a2 == 0xEF61746144656761 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6954726574736F70 && a2 == 0xEA0000000000656DLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D6954646E65 && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4F6F696475417369 && a2 == 0xEB00000000796C6ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x726F7461657263 && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6E69706F6F4C7369 && a2 == 0xE900000000000067 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_10055702C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *sub_100557134(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101673768);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10050F848(a1, a1[3]);
  sub_100554878();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    KeyedDecodingContainer.decode(_:forKey:)();
    sub_1005057FC((uint64_t *)&unk_101687A40);
    char v11 = 1;
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    uint64_t v8 = (void *)v10[1];
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  return v8;
}

unint64_t sub_100557304()
{
  unint64_t result = qword_101673770;
  if (!qword_101673770)
  {
    sub_100522D34((uint64_t *)&unk_101687A40);
    sub_1005542AC(&qword_101687A50, (void (*)(uint64_t))&type metadata accessor for AnyCRValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673770);
  }
  return result;
}

unint64_t sub_1005573B0()
{
  unint64_t result = qword_101687A70;
  if (!qword_101687A70)
  {
    sub_100522D34((uint64_t *)&unk_101687A40);
    sub_1005542AC(&qword_101673780, (void (*)(uint64_t))&type metadata accessor for AnyCRValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101687A70);
  }
  return result;
}

unint64_t sub_10055745C()
{
  unint64_t result = qword_101673788;
  if (!qword_101673788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673788);
  }
  return result;
}

unint64_t sub_1005574B0()
{
  unint64_t result = qword_101673790;
  if (!qword_101673790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673790);
  }
  return result;
}

uint64_t sub_100557504(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10055756C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for CRLMovieMaskData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005576A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLMovieMaskData.CodingKeys()
{
  return &type metadata for CRLMovieMaskData.CodingKeys;
}

uint64_t getEnumTagSinglePayload for CRLTransactablePropertyMapKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CRLMovieItemAssetData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100557834);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLMovieItemAssetData.CodingKeys()
{
  return &type metadata for CRLMovieItemAssetData.CodingKeys;
}

unint64_t sub_100557870()
{
  unint64_t result = qword_1016737E0;
  if (!qword_1016737E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016737E0);
  }
  return result;
}

unint64_t sub_1005578C8()
{
  unint64_t result = qword_1016737E8;
  if (!qword_1016737E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016737E8);
  }
  return result;
}

BOOL CRLiOSDocumentModeHandwriting.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_100557A70(a1, (uint64_t)v6);
  if (v7)
  {
    if (swift_dynamicCast())
    {
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v3 = swift_getObjectType();

      return ObjectType == v3;
    }
  }
  else
  {
    sub_10052E2B0((uint64_t)v6);
  }
  return 0;
}

uint64_t sub_100557A70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672BF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

Swift::UInt __swiftcall CRLiOSDocumentModeHandwriting.hash()()
{
  return 23;
}

char *CRLiOSDocumentModeHandwriting.toolTray.getter()
{
  unint64_t result = (char *)[v0 boardViewController];
  if (result)
  {
    int v2 = result;
    uint64_t v3 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray;
    uint64_t v4 = *(void **)&result[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray];
    id v5 = v4;
    if (!v4)
    {
      id v5 = sub_100E48CC8();
      unsigned int v6 = *(void **)&v2[v3];
      *(void *)&v2[v3] = v5;
      id v7 = v5;
    }
    id v8 = v4;

    return (char *)v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall CRLiOSDocumentModeHandwriting.modeWillBegin(from:forced:)(CRLiOSDocumentMode from, Swift::Bool forced)
{
  char boardViewController = (char)from._boardViewController;
  Class isa = from.super.isa;
  v15.receiver = v2;
  v15.super_class = (Class)type metadata accessor for CRLiOSDocumentModeHandwriting();
  [super modeWillBeginFromMode:isa boardViewController & 1];
  id v5 = self;
  NSString v6 = String._bridgeToObjectiveC()();
  _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(11);
  sub_10050BF48(0, (unint64_t *)&qword_101672E50);
  Class v7 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v5 sendEventInDomain:v6 lazily:1 eventPayload:v7];

  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v9 = [Strong textInputResponder];
  if (v9)
  {
    id v10 = v9;
    if (objc_msgSend(v9, "crl_textInputSource") == (id)3)
    {
      id v11 = v10;
      id v10 = Strong;
    }
    else
    {
      id v12 = [Strong canvasEditor];
      if (v12)
      {
        long long v13 = v12;
        Class v14 = Set._bridgeToObjectiveC()().super.isa;
        id v11 = [v13 selectionPathWithInfos:v14];

        [Strong setSelectionPath:v11 withSelectionFlags:0];
        swift_unknownObjectRelease();
      }
      else
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"clearSelectionForBeginningModeIfNeeded()", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLiOSDocumentModeHandwriting.swift", 104, 2, 78, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"clearSelectionForBeginningModeIfNeeded()", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLiOSDocumentModeHandwriting.swift", 104, 2, 78);
        id v11 = Strong;
      }
    }

    uint64_t Strong = v10;
  }
}

Swift::Void __swiftcall CRLiOSDocumentModeHandwriting.modeDidBegin(from:forced:)(CRLiOSDocumentMode from, Swift::Bool forced)
{
  char boardViewController = (char)from._boardViewController;
  Class isa = from.super.isa;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for CRLiOSDocumentModeHandwriting();
  [super modeDidBeginFromMode:isa boardViewController & 1];
  sub_1005584CC();
}

Swift::Void __swiftcall CRLiOSDocumentModeHandwriting.modeWillEnd(for:forced:)(CRLiOSDocumentMode a1, Swift::Bool forced)
{
  uint64_t v3 = v2;
  char boardViewController = (char)a1._boardViewController;
  Class isa = a1.super.isa;
  NSString v6 = &v2[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_subscriptions];
  swift_beginAccess();
  *(void *)NSString v6 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  id v7 = [v3 boardViewController];
  if (v7)
  {
    id v8 = v7;
    id v9 = sub_100E3C594();

    [v9 removeModeObserver:v3];
    v10.receiver = v3;
    v10.super_class = (Class)type metadata accessor for CRLiOSDocumentModeHandwriting();
    [super modeWillEndForMode:isa boardViewController & 1];
  }
  else
  {
    __break(1u);
  }
}

uint64_t CRLiOSDocumentModeHandwriting.shouldSuppressKeyboard.getter()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_currentlyChangingModes)) {
    return 1;
  }
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v1 = [Strong textGesturesInFlight];

  return (uint64_t)v1;
}

Swift::Bool __swiftcall CRLiOSDocumentModeHandwriting.restrictedGestureModeShouldAllowGesture(_:)(UIGestureRecognizer a1)
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v2 = [Strong layerHost];

  if (!v2) {
    goto LABEL_6;
  }
  if (([v2 respondsToSelector:"asiOSCVC"] & 1) == 0)
  {
    swift_unknownObjectRelease();
LABEL_6:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"restrictedGestureModeShouldAllowGesture(_:)", 43, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLiOSDocumentModeHandwriting.swift", 104, 2, 118, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"restrictedGestureModeShouldAllowGesture(_:)", 43, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLiOSDocumentModeHandwriting.swift", 104, 2, 118);
LABEL_7:
    char v7 = 1;
    return v7 & 1;
  }
  id v3 = [v2 asiOSCVC];
  swift_unknownObjectRelease();
  id v4 = [v3 pencilDownGestureRecognizer];
  if (!v4)
  {

    goto LABEL_7;
  }
  objc_super v5 = v4;
  sub_10050BF48(0, (unint64_t *)&qword_101672E50);
  char v6 = static NSObject.== infix(_:_:)();

  char v7 = v6 ^ 1;
  return v7 & 1;
}

void sub_1005584CC()
{
  uint64_t v1 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v36 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1, v2);
  uint64_t v34 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3, v5);
  uint64_t v31 = (char *)&v30 - v7;
  __chkstk_darwin(v6, v8);
  objc_super v10 = (char *)&v30 - v9;
  id v11 = [self defaultCenter];
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  long long v13 = @"CRLEditorControllerDidChangeCurrentEditors";
  id v14 = [Strong editorController];
  NSNotificationCenter.publisher(for:object:)();

  *(void *)(swift_allocObject() + 16) = v0;
  unint64_t v15 = sub_100559C20();
  id v16 = v0;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  long long v17 = *(void (**)(char *, uint64_t))(v36 + 8);
  v36 += 8;
  v17(v10, v1);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v33 = Strong;
  id v18 = [Strong gestureDispatcher];
  long long v19 = v31;
  id v35 = v11;
  NSNotificationCenter.publisher(for:object:)();

  *(void *)(swift_allocObject() + 16) = v16;
  id v20 = v16;
  unint64_t v32 = v15;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  uint64_t v21 = v1;
  uint64_t v31 = (char *)v17;
  v17(v19, v1);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  if (qword_10166EEB0 != -1) {
    swift_once();
  }
  id v22 = v33;
  id v23 = [v33 textInputResponder];
  uint64_t v25 = v34;
  uint64_t v24 = v35;
  NSNotificationCenter.publisher(for:object:)();

  *(void *)(swift_allocObject() + 16) = v20;
  id v26 = v20;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  ((void (*)(char *, uint64_t))v31)(v25, v21);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v27 = [v26 boardViewController];
  if (v27)
  {
    uint64_t v28 = v27;
    id v29 = sub_100E3C594();

    [v29 addModeObserver:v26];
  }
  else
  {
    __break(1u);
  }
}

void sub_100558968()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = Notification.userInfo.getter();
  if (!v7)
  {
    long long v31 = 0u;
    long long v32 = 0u;
LABEL_13:
    sub_10052E2B0((uint64_t)&v31);
    goto LABEL_14;
  }
  uint64_t v8 = v7;
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v9;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v8 + 16) && (unint64_t v10 = sub_10095647C((uint64_t)v29), (v11 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v8 + 56) + 32 * v10, (uint64_t)&v31);
  }
  else
  {
    long long v31 = 0u;
    long long v32 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)v29);
  if (!*((void *)&v32 + 1)) {
    goto LABEL_13;
  }
  sub_1005057FC(&qword_1016738A0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_14:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"textGesturesDidEnd(_:)", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLiOSDocumentModeHandwriting.swift", 104, 2, 169, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v18 = 169;
LABEL_15:
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"textGesturesDidEnd(_:)", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLiOSDocumentModeHandwriting.swift", 104, 2, v18);
    return;
  }
  char v12 = sub_100558E90(v29[0]);
  swift_bridgeObjectRelease();
  uint64_t v13 = Notification.userInfo.getter();
  if (!v13)
  {
    long long v31 = 0u;
    long long v32 = 0u;
LABEL_27:
    sub_10052E2B0((uint64_t)&v31);
    goto LABEL_28;
  }
  uint64_t v14 = v13;
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v15;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v14 + 16) && (unint64_t v16 = sub_10095647C((uint64_t)v29), (v17 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v14 + 56) + 32 * v16, (uint64_t)&v31);
  }
  else
  {
    long long v31 = 0u;
    long long v32 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)v29);
  if (!*((void *)&v32 + 1)) {
    goto LABEL_27;
  }
  sub_10050BF48(0, &qword_1016738A8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_28:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"textGesturesDidEnd(_:)", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLiOSDocumentModeHandwriting.swift", 104, 2, 177, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v18 = 177;
    goto LABEL_15;
  }
  id v26 = (id)v29[0];
  NSSet.makeIterator()();
  NSFastEnumerationIterator.next()();
  if (!v30)
  {
LABEL_29:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    uint64_t v20 = OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_endModeCheckQueuedAfterTextGestures;
    if (*((unsigned char *)v1 + OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_endModeCheckQueuedAfterTextGestures) == 1)
    {
      sub_1005591F0();
      id v21 = v26;
    }
    else
    {
      id v21 = v26;
      if (![v26 count])
      {

        return;
      }
      if (v12)
      {
        id v22 = [v1 boardViewController];
        if (!v22)
        {
          __break(1u);
          return;
        }
        id v23 = v22;
        id v24 = sub_100E3C594();

        [v24 resetToDefaultModeAnimated:1];
        id v21 = v24;
      }
      else
      {
        sub_1005591F0();
      }
    }

    *((unsigned char *)v1 + v20) = 0;
    return;
  }
  while (1)
  {
    sub_1005057FC(&qword_101673910);
    if (swift_dynamicCast())
    {
      id v19 = [(id)v31 inputType];
      swift_unknownObjectRelease();
      if (v19 == (id)2) {
        break;
      }
    }
    NSFastEnumerationIterator.next()();
    if (!v30) {
      goto LABEL_29;
    }
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);

  *((unsigned char *)v1 + OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_endModeCheckQueuedAfterTextGestures) = 0;
}

uint64_t sub_100558E90(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10050BF48(0, (unint64_t *)&qword_101673918);
    sub_100559B80();
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v24;
    uint64_t v23 = v25;
    uint64_t v3 = v26;
    uint64_t v4 = v27;
    unint64_t v5 = v28;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v23 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v22 = (unint64_t)(v3 + 64) >> 6;
  while (1)
  {
    uint64_t v10 = v4;
    if (v1 < 0)
    {
      uint64_t v13 = __CocoaSet.Iterator.next()();
      if (!v13) {
        goto LABEL_37;
      }
      sub_10050BF48(0, (unint64_t *)&qword_101673918);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v14 = v29;
      swift_unknownObjectRelease();
      if (!v29) {
        goto LABEL_36;
      }
      goto LABEL_32;
    }
    if (!v5) {
      break;
    }
    unint64_t v11 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v12 = v11 | (v4 << 6);
LABEL_31:
    id v14 = *(id *)(*(void *)(v1 + 48) + 8 * v12);
    if (!v14) {
      goto LABEL_36;
    }
LABEL_32:
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;
    if (v18 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v20 == v21)
    {

      uint64_t result = swift_bridgeObjectRelease_n();
    }
    else
    {
      char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v9 & 1) == 0)
      {
        uint64_t v13 = 1;
        goto LABEL_37;
      }
    }
  }
  int64_t v15 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v15 >= v22) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v23 + 8 * v15);
    ++v4;
    if (!v16)
    {
      uint64_t v4 = v10 + 2;
      if (v10 + 2 >= v22) {
        goto LABEL_36;
      }
      unint64_t v16 = *(void *)(v23 + 8 * v4);
      if (!v16)
      {
        uint64_t v4 = v10 + 3;
        if (v10 + 3 >= v22) {
          goto LABEL_36;
        }
        unint64_t v16 = *(void *)(v23 + 8 * v4);
        if (!v16)
        {
          uint64_t v4 = v10 + 4;
          if (v10 + 4 >= v22) {
            goto LABEL_36;
          }
          unint64_t v16 = *(void *)(v23 + 8 * v4);
          if (!v16)
          {
            uint64_t v4 = v10 + 5;
            if (v10 + 5 >= v22) {
              goto LABEL_36;
            }
            unint64_t v16 = *(void *)(v23 + 8 * v4);
            if (!v16)
            {
              uint64_t v17 = v10 + 6;
              while (v22 != v17)
              {
                unint64_t v16 = *(void *)(v23 + 8 * v17++);
                if (v16)
                {
                  uint64_t v4 = v17 - 1;
                  goto LABEL_30;
                }
              }
LABEL_36:
              uint64_t v13 = 0;
LABEL_37:
              sub_10052E1EC();
              return v13;
            }
          }
        }
      }
    }
LABEL_30:
    unint64_t v5 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v4 << 6);
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

void sub_1005591F0()
{
  if (v0[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_stayInHandwritingModeForSelectionChange]) {
    return;
  }
  id v1 = [v0 boardViewController];
  if (!v1)
  {
    __break(1u);
    goto LABEL_38;
  }
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isClosing) == 1)
  {
LABEL_5:

    return;
  }
  char v2 = *((unsigned char *)v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isClosed);

  if (v2) {
    return;
  }
  id Strong = (id)swift_unknownObjectUnownedLoadStrong();
  if ([Strong textGesturesInFlight])
  {

    v0[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_endModeCheckQueuedAfterTextGestures] = 1;
    return;
  }
  id v3 = [Strong layerHost];
  if (!v3)
  {
LABEL_16:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"endModeIfNoFocusedTextEditor()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLiOSDocumentModeHandwriting.swift", 104, 2, 230, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"endModeIfNoFocusedTextEditor()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLiOSDocumentModeHandwriting.swift", 104, 2, 230);
    goto LABEL_17;
  }
  uint64_t v4 = v3;
  if (([v3 respondsToSelector:"asiOSCVC"] & 1) == 0)
  {
    swift_unknownObjectRelease();
    goto LABEL_16;
  }
  id v17 = [v4 asiOSCVC];
  swift_unknownObjectRelease();
  if ([v17 isHandlingScribbleWriting])
  {

LABEL_17:
    id v1 = Strong;
    goto LABEL_5;
  }
  if ([v17 isShowingRadialPalette]) {
    goto LABEL_19;
  }
  unint64_t v5 = Strong;
  if (v0[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_currentlyChangingModes]) {
    goto LABEL_21;
  }
  uint64_t v6 = (char *)[Strong textInputResponder];
  if (!v6)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"endModeIfNoFocusedTextEditor()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLiOSDocumentModeHandwriting.swift", 104, 2, 244, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"endModeIfNoFocusedTextEditor()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLiOSDocumentModeHandwriting.swift", 104, 2, 244);
LABEL_19:
    unint64_t v5 = Strong;
LABEL_21:

    id v1 = v17;
    goto LABEL_5;
  }
  uint64_t v7 = v6;
  if (*(void *)&v6[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor])
  {
    swift_unknownObjectRetain();
    id v8 = [v7 inputView];
    if (v8)
    {
      char v9 = v8;
      unsigned int v10 = [self isNullInputView:v8];
    }
    else
    {
      unsigned int v10 = 0;
    }
  }
  else
  {
    unsigned int v10 = 1;
  }
  unint64_t v11 = (void *)swift_unknownObjectUnownedLoadStrong();
  id v12 = [v11 textInputResponder];

  if (v12)
  {
    unsigned int v13 = [v12 isFirstResponder];

    if ((v13 ^ 1 | v10) != 1)
    {

      goto LABEL_34;
    }
  }
  id v14 = [v0 boardViewController];
  if (!v14)
  {
LABEL_38:
    __break(1u);
    return;
  }
  int64_t v15 = v14;
  id v16 = sub_100E3C594();

  [v16 resetToDefaultModeAnimated:1];
LABEL_34:

  swift_unknownObjectRelease();
}

Swift::Void __swiftcall CRLiOSDocumentModeHandwriting.didSetDocumentMode(_:from:animated:)(CRLiOSDocumentMode _, CRLiOSDocumentMode from, Swift::Bool animated)
{
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_currentlyChangingModes) = 0;
}

Swift::Void __swiftcall CRLiOSDocumentModeHandwriting.willSetDocumentMode(_:from:animated:)(CRLiOSDocumentMode _, CRLiOSDocumentMode from, Swift::Bool animated)
{
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_currentlyChangingModes) = 1;
}

uint64_t CRLiOSDocumentModeHandwriting.performBlockIgnoringSelectionChanges(toExitHandwritingMode:)(uint64_t (*a1)(void))
{
  uint64_t v2 = OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_stayInHandwritingModeForSelectionChange;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_stayInHandwritingModeForSelectionChange) = 1;
  uint64_t result = a1();
  *(unsigned char *)(v1 + v2) = 0;
  return result;
}

id CRLiOSDocumentModeHandwriting.handleTapOnCanvasBackground(atUnscaledPoint:)()
{
  id result = [v0 boardViewController];
  if (result)
  {
    uint64_t v2 = result;
    id v3 = sub_100E3C594();

    [v3 resetToDefaultModeAnimated:1];
    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id CRLiOSDocumentModeHandwriting.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSDocumentModeHandwriting();
  return [super dealloc];
}

void sub_1005598CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  type metadata accessor for __VaListBuilder();
  char v9 = (void *)swift_allocObject();
  v9[2] = 8;
  v9[3] = 0;
  unsigned int v10 = v9 + 3;
  v9[4] = 0;
  v9[5] = 0;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v12 = 0;
    uint64_t v13 = a1 + 32;
    while (1)
    {
      sub_1005498A4(v13 + 40 * v12, (uint64_t)v34);
      sub_10050F848(v34, v34[3]);
      uint64_t v14 = dispatch thunk of CVarArg._cVarArgEncoding.getter();
      uint64_t v15 = *v10;
      uint64_t v16 = *(void *)(v14 + 16);
      BOOL v17 = __OFADD__(*v10, v16);
      uint64_t v18 = *v10 + v16;
      if (v17)
      {
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        return;
      }
      uint64_t v19 = v14;
      uint64_t v20 = v9[4];
      if (v20 >= v18) {
        goto LABEL_18;
      }
      if (v20 + 0x4000000000000000 < 0) {
        goto LABEL_29;
      }
      uint64_t v21 = (char *)v9[5];
      if (2 * v20 > v18) {
        uint64_t v18 = 2 * v20;
      }
      v9[4] = v18;
      if ((unint64_t)(v18 - 0x1000000000000000) >> 61 != 7) {
        goto LABEL_30;
      }
      int64_t v22 = (char *)swift_slowAlloc();
      v9[5] = v22;
      if (v21) {
        break;
      }
LABEL_19:
      if (!v22) {
        goto LABEL_32;
      }
      uint64_t v24 = *(void *)(v19 + 16);
      if (v24)
      {
        uint64_t v25 = (uint64_t *)(v19 + 32);
        uint64_t v26 = *v10;
        while (1)
        {
          uint64_t v27 = *v25++;
          *(void *)&v22[8 * v26] = v27;
          uint64_t v26 = *v10 + 1;
          if (__OFADD__(*v10, 1)) {
            break;
          }
          *unsigned int v10 = v26;
          if (!--v24) {
            goto LABEL_3;
          }
        }
        __break(1u);
        goto LABEL_28;
      }
LABEL_3:
      ++v12;
      swift_bridgeObjectRelease();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v34);
      if (v12 == v11) {
        goto LABEL_25;
      }
    }
    if (v22 != v21 || v22 >= &v21[8 * v15]) {
      memmove(v22, v21, 8 * v15);
    }
    __VaListBuilder.deallocStorage(wordCount:storage:)();
LABEL_18:
    int64_t v22 = (char *)v9[5];
    goto LABEL_19;
  }
LABEL_25:
  uint64_t v28 = __VaListBuilder.va_list()();
  id v29 = self;
  StaticString.description.getter();
  NSString v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  StaticString.description.getter();
  NSString v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a8 < 0) {
    goto LABEL_31;
  }
  StaticString.description.getter();
  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v29 handleFailureInFunction:v30 file:v31 lineNumber:a8 isFatal:0 format:v32 args:v28];
  swift_release();
}

uint64_t type metadata accessor for CRLiOSDocumentModeHandwriting()
{
  return self;
}

unint64_t sub_100559B80()
{
  unint64_t result = qword_101673920;
  if (!qword_101673920)
  {
    sub_10050BF48(255, (unint64_t *)&qword_101673918);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673920);
  }
  return result;
}

uint64_t sub_100559BE8()
{
  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_100559C20()
{
  unint64_t result = qword_1016773D0;
  if (!qword_1016773D0)
  {
    type metadata accessor for NSNotificationCenter.Publisher();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016773D0);
  }
  return result;
}

void sub_100559C78()
{
}

void sub_100559C9C()
{
}

void sub_100559D44()
{
  uint64_t v1 = v0;
  v23.receiver = v0;
  v23.super_class = (Class)type metadata accessor for CRLUSDZRotationKnobTracker();
  [super beginMovingKnob];
  id v2 = [v0 knob];
  type metadata accessor for CRLUSDZRotationKnob();
  uint64_t v3 = swift_dynamicCastClass();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    if ((*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isError) & 1) == 0)
    {
      char v5 = *(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isBeingTracked);
      *(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isBeingTracked) = 1;
      if ((v5 & 1) == 0) {
        sub_100E38548();
      }
      id v6 = [v1 rep];
      [v4 position];
      [v6 convertNaturalPointToUnscaledCanvas];
      uint64_t v8 = v7;
      uint64_t v10 = v9;

      uint64_t v11 = &v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_startingUnscaledCanvasPosition];
      *(void *)uint64_t v11 = v8;
      *((void *)v11 + 1) = v10;
      uint64_t v12 = &v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_lastUnscaledCanvasPosition];
      *(void *)uint64_t v12 = v8;
      *((void *)v12 + 1) = v10;
      id v13 = [v1 rep];
      id v14 = [v13 layout];

      type metadata accessor for CRLUSDZLayout();
      if (swift_dynamicCastClass()) {
        sub_1007BC9F0();
      }
      else {
        simd_float4 v15 = matrix_identity_float4x4.columns[3];
      }
      float32x4_t v22 = (float32x4_t)v15;

      int8x16_t v16 = (int8x16_t)vmulq_f32(v22, v22);
      float32x2_t v17 = vadd_f32(*(float32x2_t *)v16.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v16, v16, 8uLL));
      if (vaddv_f32(v17) == 0.0)
      {
        float32x4_t v18 = (float32x4_t)xmmword_10117FB70;
      }
      else
      {
        unsigned __int32 v19 = vadd_f32(v17, (float32x2_t)vdup_lane_s32((int32x2_t)v17, 1)).u32[0];
        float32x2_t v20 = vrsqrte_f32((float32x2_t)v19);
        float32x2_t v21 = vmul_f32(v20, vrsqrts_f32((float32x2_t)v19, vmul_f32(v20, v20)));
        float32x4_t v18 = vmulq_n_f32(v22, vmul_f32(v21, vrsqrts_f32((float32x2_t)v19, vmul_f32(v21, v21))).f32[0]);
      }
      *(float32x4_t *)&v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_startingOrientationForRotateSession] = v18;
      *(float32x4_t *)&v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_currentOrientationForRotateSession] = v18;
      sub_10050F848(&v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_delegate], *(void *)&v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_delegate + 24]);
      sub_100B6FF8C(v1);
    }
  }
}

void sub_100559FCC()
{
  uint64_t v1 = v0;
  if (*(double *)&v0[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_totalRotationDeltaForRotateSession] != 0.0
    || *(double *)&v0[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_totalRotationDeltaForRotateSession + 8] != 0.0)
  {
    sub_1005498A4((uint64_t)&v0[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_delegate], (uint64_t)v5);
    sub_10050F848(v5, v5[3]);
    id v2 = [v0 rep];
    sub_100B69AA8(v0);

    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v5);
  }
  sub_10055A764();
  sub_10055A7A4();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for CRLUSDZRotationKnobTracker();
  [super commitChangesForReps:isa];
}

void sub_10055A13C(double a1, double a2)
{
  uint64_t v3 = (uint64_t)v2;
  id v36 = [v2 knob];
  type metadata accessor for CRLUSDZRotationKnob();
  uint64_t v6 = swift_dynamicCastClass();
  if (!v6
    || (*(unsigned char *)(v6 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isError) & 1) != 0
    || (id v7 = [v2 rep],
        objc_msgSend(v7, "convertNaturalPointToUnscaledCanvas:", a1, a2),
        double v9 = v8,
        double v11 = v10,
        v7,
        uint64_t v12 = (double *)&v2[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_lastUnscaledCanvasPosition],
        double v13 = *(double *)&v2[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_lastUnscaledCanvasPosition],
        sub_1000653B4(v9, v11, v13, *(double *)&v2[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_lastUnscaledCanvasPosition + 8]) <= 1.0))
  {
  }
  else
  {
    double v14 = sub_100064680(v9, v11, v13);
    double v16 = sub_1000646A4(v14, v15, 0.5);
    double v18 = sub_1000646A4(v16, v17, 0.0174532925);
    unsigned __int32 v19 = (double *)&v2[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_totalRotationDeltaForRotateSession];
    double v20 = sub_100064698(*(double *)(v3 + OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_totalRotationDeltaForRotateSession), *(double *)(v3 + OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_totalRotationDeltaForRotateSession + 8), v18);
    *unsigned __int32 v19 = v20;
    v19[1] = v21;
    *(float *)&double v21 = v21;
    *(float *)&unsigned int v22 = v20;
    *(double *)v23.i64 = sub_10055A390((float32x4_t)__PAIR64__(v22, LODWORD(v21)));
    float32x4_t v24 = *(float32x4_t *)(v3 + OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_startingOrientationForRotateSession);
    int32x4_t v25 = (int32x4_t)vnegq_f32(v24);
    int8x16_t v26 = (int8x16_t)vtrn2q_s32((int32x4_t)v24, vtrn1q_s32((int32x4_t)v24, v25));
    float32x4_t v27 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v24, (int8x16_t)v25, 8uLL), *(float32x2_t *)v23.f32, 1), (float32x4_t)vextq_s8(v26, v26, 8uLL), v23.f32[0]);
    float32x4_t v28 = (float32x4_t)vrev64q_s32((int32x4_t)v24);
    v28.i32[0] = v25.i32[1];
    v28.i32[3] = v25.i32[2];
    float32x4_t v29 = vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32(v24, v23, 3), v28, v23, 2), v27);
    int8x16_t v30 = (int8x16_t)vmulq_f32(v29, v29);
    float32x2_t v31 = vadd_f32(*(float32x2_t *)v30.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v30, v30, 8uLL));
    if (vaddv_f32(v31) == 0.0)
    {
      float32x4_t v32 = (float32x4_t)xmmword_10117FB70;
    }
    else
    {
      unsigned __int32 v33 = vadd_f32(v31, (float32x2_t)vdup_lane_s32((int32x2_t)v31, 1)).u32[0];
      float32x2_t v34 = vrsqrte_f32((float32x2_t)v33);
      float32x2_t v35 = vmul_f32(v34, vrsqrts_f32((float32x2_t)v33, vmul_f32(v34, v34)));
      float32x4_t v32 = vmulq_n_f32(v29, vmul_f32(v35, vrsqrts_f32((float32x2_t)v33, vmul_f32(v35, v35))).f32[0]);
    }
    *(float32x4_t *)(v3 + OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_currentOrientationForRotateSession) = v32;
    sub_10050F848((void *)(v3 + OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_delegate), *(void *)(v3 + OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_delegate + 24));
    sub_100B7027C(v3);

    *uint64_t v12 = v9;
    v12[1] = v11;
  }
}

double sub_10055A390(float32x4_t a1)
{
  __float2 v1 = __sincosf_stret(0.5 * a1.f32[0]);
  __float2 v2 = __sincosf_stret(vmuls_lane_f32(0.5, *(float32x2_t *)a1.f32, 1));
  __float2 v3 = __sincosf_stret(vmuls_lane_f32(0.5, a1, 2));
  *(float *)&double v4 = (float)(v1.__sinval * (float)(v2.__cosval * v3.__cosval))
                - (float)(v1.__cosval * (float)(v2.__sinval * v3.__sinval));
  *((float *)&v4 + 1) = (float)(v3.__cosval * (float)(v1.__cosval * v2.__sinval))
                      + (float)(v3.__sinval * (float)(v1.__sinval * v2.__cosval));
  return v4;
}

void sub_10055A4B4()
{
  __float2 v1 = v0;
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for CRLUSDZRotationKnobTracker();
  [super endMovingKnob];
  id v2 = [v0 knob];
  type metadata accessor for CRLUSDZRotationKnob();
  uint64_t v3 = swift_dynamicCastClass();
  if (v3)
  {
    double v4 = (void *)v3;
    if ((*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isError) & 1) == 0)
    {
      int v5 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isBeingTracked);
      *(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isBeingTracked) = 0;
      if (v5 == 1) {
        sub_100E38548();
      }
      id v6 = [v4 renderable];
      [v6 setHidden:0];

      id v7 = &v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_startingUnscaledCanvasPosition];
      *(void *)id v7 = 0;
      *((void *)v7 + 1) = 0;
      double v8 = &v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_lastUnscaledCanvasPosition];
      *(void *)double v8 = 0;
      *((void *)v8 + 1) = 0;
      double v9 = &v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_totalRotationDeltaForRotateSession];
      *(void *)double v9 = 0;
      *((void *)v9 + 1) = 0;
      *(_OWORD *)&v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_startingOrientationForRotateSession] = xmmword_10117FB70;
      *(_OWORD *)&v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_currentOrientationForRotateSession] = xmmword_10117FB70;
      uint64_t v10 = *(void *)(*(void *)(*sub_10050F848(&v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_delegate], *(void *)&v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_delegate+ 24])+ OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController)+ OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
      if (v10 && *(unsigned char *)(v10 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying) == 1) {
        sub_100B60B88(1);
      }
    }
  }
}

id sub_10055A6FC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUSDZRotationKnobTracker();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLUSDZRotationKnobTracker()
{
  return self;
}

unint64_t sub_10055A764()
{
  unint64_t result = qword_101678790;
  if (!qword_101678790)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101678790);
  }
  return result;
}

unint64_t sub_10055A7A4()
{
  unint64_t result = qword_10167BE30;
  if (!qword_10167BE30)
  {
    sub_10055A764();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167BE30);
  }
  return result;
}

uint64_t sub_10055A7FC()
{
  uint64_t v1 = v0;
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
  if (([v2 options] & 0x100000) != 0)
  {
    sub_10055EBD8(1, 0, 1, 34.0);
    type metadata accessor for CRLiOSMiniFormatterBaseLayerButton();
    if (!swift_dynamicCastClass())
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"makeBaseLayerButton()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterTextBuilder.swift", 105, 2, 38, (uint64_t)"There is no situation where this should not be a CRLiOSMiniFormatterBaseLayerButton", 83, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeBaseLayerButton()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterTextBuilder.swift", 105, 2, 38);
    }
    return swift_dynamicCastClassUnconditional();
  }
  else if (([v2 options] & 0x100000) != 0)
  {
    id v6 = [v2 tintColor];
    if (v6)
    {
      id v7 = v6;
      id v8 = [v6 UIColor];
    }
    else
    {
      id v8 = 0;
    }
    double v9 = sub_10051C358(0, v8, 0, 0);

    id v10 = [v2 action];
    if (v10) {
      [v9 addTarget:*(void *)(v1 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_interactiveCanvasController) action:v10 forControlEvents:64];
    }
    return (uint64_t)v9;
  }
  else
  {
    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v3 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    double v4 = sub_10051C358(v3, 0, 0, 0);

    return (uint64_t)v4;
  }
}

id sub_10055AAC4()
{
  if (qword_10166EB58 != -1) {
    swift_once();
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_displaySimplifiedStackView) != 1)
  {
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_displaySimplifiedLandscapeStackView) == 1)
    {
      id v1 = sub_10055AF10();
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_10117FBD0;
      id v9 = v1;
      swift_bridgeObjectRelease();
      *(void *)(v8 + 32) = v9;
      *(void *)(v8 + 40) = sub_10055B3C0();
      id v10 = (char *)sub_10055B568(0, 0, 1);
      id v11 = sub_100ACB784(*(void *)&v10[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_singleRowPalette], *(void *)&v10[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_singleRowPalette + 8], *(void *)&v10[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_singleRowPalette + 16]);

      *(void *)(v8 + 48) = v11;
      specialized Array._endMutation()();
      double v6 = 16.0;
      goto LABEL_17;
    }
    double v6 = *(double *)&qword_101719DD8;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
    if (([v12 options] & 0x2000) != 0)
    {
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_10117DF50;
      *(void *)(v15 + 32) = sub_100562E14();
      id v16 = sub_100563038();
    }
    else
    {
      unsigned int v13 = [v12 options];
      sub_1005057FC((uint64_t *)&unk_101676C10);
      if ((v13 & 0x20000) == 0)
      {
        uint64_t v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_10117FBD0;
        *(void *)(v14 + 32) = sub_10055B748();
        *(void *)(v14 + 40) = sub_10055DE50();
        *(void *)(v14 + 48) = sub_10055FBFC();
LABEL_16:
        specialized Array._endMutation()();
        id v1 = 0;
        goto LABEL_17;
      }
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_10117DF50;
      *(void *)(v15 + 32) = sub_100563268();
      id v16 = sub_100563468();
    }
    *(void *)(v15 + 40) = v16;
    goto LABEL_16;
  }
  id v1 = sub_10055AF10();
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10117DF50;
  id v3 = v1;
  swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = sub_10055B3B0();
  specialized Array._endMutation()();
  id v4 = sub_10055B568(1, 0x4030000000000000, 0);
  id v5 = sub_100ACAAB8();

  double v6 = 16.0;
  if (v5)
  {
    id v7 = v5;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
LABEL_17:
  id v17 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v19 = [v17 initWithArrangedSubviews:isa];

  [v19 setAxis:1];
  [v19 setSpacing:v6];
  [v19 setAlignment:0];
  if (v1)
  {
    [v19 setCustomSpacing:v1 afterView:0.0];
  }
  return v19;
}

BOOL sub_10055AEC8()
{
  return ((unint64_t)[*(id *)(v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element) options] & 0x100000) == 0;
}

uint64_t sub_10055AF00()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_isEditingText);
}

id sub_10055AF10()
{
  id v1 = v0;
  id v2 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v3 = [self mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 localizedStringForKey:v4 value:v5 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setText:v7];

  int v8 = sub_1003E86EC();
  uint64_t v9 = 2;
  if (!v8) {
    uint64_t v9 = 0;
  }
  int v10 = v1[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_displaysCloseButton];
  if (v1[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_displaysCloseButton]) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = 1;
  }
  if (v1[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_displaysCloseButton]) {
    double v12 = 20.0;
  }
  else {
    double v12 = 17.0;
  }
  [v2 setTextAlignment:v11];
  id v13 = [self systemFontOfSize:v12 weight:UIFontWeightSemibold];
  [v2 setFont:v13];

  [v2 sizeToFit];
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_101177E70;
  *(void *)(v14 + 32) = v2;
  uint64_t v27 = v14;
  specialized Array._endMutation()();
  if (v10 == 1)
  {
    sub_10050BF48(0, (unint64_t *)&unk_101672590);
    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    *(void *)(swift_allocObject() + 16) = v1;
    id v15 = v2;
    id v16 = v1;
    v28.value.super.super.Class isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v17 = UIButton.init(type:primaryAction:)(UIButtonTypeClose, v28).super.super.super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  else
  {
    id v18 = v2;
  }
  double v19 = *(double *)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_headerViewHeight];
  if (qword_10166EB50 != -1) {
    swift_once();
  }
  double v20 = *(double *)&qword_101719DD0;
  id v21 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v23 = [v21 initWithArrangedSubviews:isa];

  [v23 setAxis:0];
  [v23 setAlignment:3];
  [v23 setDistribution:0];
  [v23 setSpacing:v20];
  id v24 = [v23 heightAnchor];
  id v25 = [v24 constraintGreaterThanOrEqualToConstant:v19];

  [v25 setActive:1];
  swift_bridgeObjectRelease();

  return v23;
}

id sub_10055B3B0()
{
  return sub_10055B3CC(90.0);
}

id sub_10055B3C0()
{
  return sub_10055B3CC(160.0);
}

id sub_10055B3CC(double a1)
{
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10117DF50;
  *(void *)(v2 + 32) = sub_10055E5AC();
  *(void *)(v2 + 40) = sub_10055EBD8(0, 1, 0, a1);
  specialized Array._endMutation()();
  id v3 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v5 = [v3 initWithArrangedSubviews:isa];

  [v5 setAxis:0];
  [v5 setAlignment:0];
  [v5 setDistribution:0];
  [v5 setSpacing:8.0];
  id v6 = [v5 heightAnchor];
  id v7 = [v6 constraintGreaterThanOrEqualToConstant:46.0];

  [v7 setActive:1];
  swift_bridgeObjectRelease();

  return v5;
}

id sub_10055B568(char a1, uint64_t a2, char a3)
{
  char v24 = a3 & 1;
  id v4 = [self mainBundle];
  NSString v5 = String._bridgeToObjectiveC()();
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v4 localizedStringForKey:v5 value:v6 table:0];

  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  uint64_t v10 = v3 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v13 = *(void *)(v10 + 8);
  uint64_t v12 = *(void *)(v10 + 16);
  uint64_t v14 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
  id v15 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_editorController);
  id v16 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_interactiveCanvasController);
  LOBYTE(v5) = *(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_isEditingText);
  id v17 = objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterColorPaletteBuilder());
  id v18 = v16;
  id v19 = v14;
  id v20 = v15;
  id v21 = sub_100ACED98(Strong, v13, v12, v19, v20, v16, a1, 0, v23, v9, a2, v24, (char)v5);
  swift_unknownObjectRelease();

  return v21;
}

id sub_10055B748()
{
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_101177E70;
  sub_10055B9B4();
  *(void *)(v0 + 32) = v1;
  uint64_t v12 = v0;
  specialized Array._endMutation()();
  Class v2 = sub_10055D620();
  if (v2)
  {
    uint64_t v3 = v2;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if (qword_10166EB50 != -1) {
    swift_once();
  }
  double v4 = *(double *)&qword_101719DD0;
  id v5 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v7 = [v5 initWithArrangedSubviews:isa];

  [v7 setAxis:0];
  [v7 setAlignment:0];
  [v7 setDistribution:0];
  [v7 setSpacing:v4];
  if (qword_10166EB60 != -1) {
    swift_once();
  }
  double v8 = *(double *)&qword_101719DE0;
  id v9 = [v7 heightAnchor];
  id v10 = [v9 constraintGreaterThanOrEqualToConstant:v8];

  [v10 setActive:1];
  swift_bridgeObjectRelease();

  return v7;
}

void sub_10055B9B4()
{
  uint64_t v0 = sub_1005057FC(&qword_101673A90);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for IndexSet();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v55 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = self;
  id v10 = [v9 systemImageNamed:v8];

  if (!v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v9 systemImageNamed:v11];

  if (!v12)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v54 = v4;
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v9 systemImageNamed:v13];

  if (!v14)
  {
LABEL_16:
    __break(1u);
    return;
  }
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117FBD0;
  *(void *)(inited + 32) = v10;
  *(void *)(inited + 40) = v12;
  *(void *)(inited + 48) = v14;
  uint64_t v57 = inited;
  specialized Array._endMutation()();
  uint64_t v53 = v57;
  sub_1005057FC((uint64_t *)&unk_101672610);
  uint64_t v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_10117DF40;
  id v17 = self;
  id v52 = v14;
  id v51 = v12;
  id v50 = v10;
  id v18 = [v17 mainBundle];
  NSString v19 = String._bridgeToObjectiveC()();
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v18 localizedStringForKey:v19 value:v20 table:0];

  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;

  *(void *)(v16 + 32) = v22;
  *(void *)(v16 + 40) = v24;
  id v25 = [v17 mainBundle];
  NSString v26 = String._bridgeToObjectiveC()();
  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = [v25 localizedStringForKey:v26 value:v27 table:0];

  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = v30;

  *(void *)(v16 + 48) = v29;
  *(void *)(v16 + 56) = v31;
  id v32 = [v17 mainBundle];
  NSString v33 = String._bridgeToObjectiveC()();
  NSString v34 = String._bridgeToObjectiveC()();
  id v35 = [v32 localizedStringForKey:v33 value:v34 table:0];

  uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v38 = v37;

  *(void *)(v16 + 64) = v36;
  *(void *)(v16 + 72) = v38;
  char v39 = v55;
  IndexSet.init()();
  __int16 v40 = sub_10099299C();
  if (v40 != 2)
  {
    __int16 v41 = v40;
    __int16 v42 = sub_100992B00();
    if (v42 != 2)
    {
      __int16 v43 = v42;
      __int16 v44 = sub_100992C64();
      if (v44 != 2)
      {
        __int16 v45 = v44;
        if ((v41 & 0x101) == 1) {
          IndexSet.insert(_:)(0);
        }
        if ((v43 & 0x101) == 1) {
          IndexSet.insert(_:)(1);
        }
        if ((v45 & 0x101) == 1) {
          IndexSet.insert(_:)(2);
        }
      }
    }
  }
  uint64_t v46 = swift_allocObject();
  uint64_t v47 = v56;
  *(void *)(v46 + 16) = v56;
  uint64_t v48 = v54;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v39, v54);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v48);
  id v49 = v47;
  sub_10051DB44();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100522F00((uint64_t)v3, &qword_101673A90);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v39, v48);
}

void sub_10055BFB8()
{
  uint64_t v1 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider);
  __int16 v2 = sub_10099299C();
  if (v2 != 2)
  {
    __int16 v3 = v2;
    __int16 v4 = sub_100992B00();
    if (v4 != 2)
    {
      __int16 v5 = v4;
      __int16 v6 = sub_100992C64();
      if (v6 != 2)
      {
        __int16 v7 = v6;
        BOOL v8 = IndexSet.contains(_:)(0);
        BOOL v9 = v8;
        if ((v3 & 0x100) != 0 || ((((v3 & 1) == 0) ^ v8) & 1) == 0)
        {
          id v10 = *(void **)&v1[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
          uint64_t v11 = swift_allocObject();
          *(void *)(v11 + 16) = 0;
          *(void *)(v11 + 24) = 0;
          char v39 = sub_100565100;
          uint64_t v40 = v11;
          CGAffineTransform aBlock = _NSConcreteStackBlock;
          uint64_t v36 = *(void *)"";
          uint64_t v37 = sub_1005B74EC;
          uint64_t v38 = &unk_101508090;
          id v12 = _Block_copy(&aBlock);
          NSString v34 = v1;
          swift_retain();
          swift_release();
          [v10 enumerateEditorsOnStackUsingBlock:v12];
          _Block_release(v12);
          swift_beginAccess();
          uint64_t v13 = *(void *)(v11 + 16);
          uint64_t v14 = *(void *)(v11 + 24);
          swift_unknownObjectRetain();
          swift_release();
          if (v13)
          {
            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(BOOL, uint64_t, uint64_t))(v14 + 80))(v9, ObjectType, v14);

            swift_unknownObjectRelease();
          }
          else
          {
          }
        }
        BOOL v16 = IndexSet.contains(_:)(1);
        BOOL v17 = v16;
        if ((v5 & 0x100) != 0 || ((((v5 & 1) == 0) ^ v16) & 1) == 0)
        {
          id v18 = *(void **)&v1[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
          uint64_t v19 = swift_allocObject();
          *(void *)(v19 + 16) = 0;
          *(void *)(v19 + 24) = 0;
          char v39 = sub_100565100;
          uint64_t v40 = v19;
          CGAffineTransform aBlock = _NSConcreteStackBlock;
          uint64_t v36 = *(void *)"";
          uint64_t v37 = sub_1005B74EC;
          uint64_t v38 = &unk_1015080B8;
          NSString v20 = _Block_copy(&aBlock);
          id v21 = v1;
          swift_retain();
          swift_release();
          [v18 enumerateEditorsOnStackUsingBlock:v20];
          _Block_release(v20);
          swift_beginAccess();
          uint64_t v22 = *(void *)(v19 + 16);
          uint64_t v23 = *(void *)(v19 + 24);
          swift_unknownObjectRetain();
          swift_release();
          if (v22)
          {
            uint64_t v24 = swift_getObjectType();
            (*(void (**)(BOOL, uint64_t, uint64_t))(v23 + 96))(v17, v24, v23);

            swift_unknownObjectRelease();
          }
          else
          {
          }
        }
        BOOL v25 = IndexSet.contains(_:)(2);
        BOOL v26 = v25;
        if ((v7 & 0x100) != 0 || ((((v7 & 1) == 0) ^ v25) & 1) == 0)
        {
          NSString v27 = *(void **)&v1[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
          uint64_t v28 = swift_allocObject();
          *(void *)(v28 + 16) = 0;
          *(void *)(v28 + 24) = 0;
          char v39 = sub_100565100;
          uint64_t v40 = v28;
          CGAffineTransform aBlock = _NSConcreteStackBlock;
          uint64_t v36 = *(void *)"";
          uint64_t v37 = sub_1005B74EC;
          uint64_t v38 = &unk_1015080E0;
          uint64_t v29 = _Block_copy(&aBlock);
          uint64_t v30 = v1;
          swift_retain();
          swift_release();
          [v27 enumerateEditorsOnStackUsingBlock:v29];
          _Block_release(v29);
          swift_beginAccess();
          uint64_t v31 = *(void *)(v28 + 16);
          uint64_t v32 = *(void *)(v28 + 24);
          swift_unknownObjectRetain();
          swift_release();
          if (v31)
          {
            uint64_t v33 = swift_getObjectType();
            (*(void (**)(BOOL, uint64_t, uint64_t))(v32 + 112))(v26, v33, v32);

            swift_unknownObjectRelease();
          }
          else
          {
          }
        }
      }
    }
  }
}

void *sub_10055C488(char a1)
{
  swift_getObjectType();
  uint64_t v2 = type metadata accessor for UIButton.Configuration();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  __int16 v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  id v10 = (char *)&v20 - v9;
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [self systemImageNamed:v11];

  if (a1)
  {
    sub_100520A20(v12);
    sub_10050BF48(0, (unint64_t *)&unk_101672590);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v10, v2);
    uint64_t v13 = (void *)UIButton.init(configuration:primaryAction:)();
    [v13 setPointerInteractionEnabled:1];
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
  }
  else
  {
    uint64_t v14 = self;
    id v15 = [v14 labelColor];
    id v16 = [v14 labelColor];
    uint64_t v13 = sub_1005200E8(v12, 0, 0, 0, 0, 0, v15, v16, 0);
  }
  [v13 setShowsMenuAsPrimaryAction:1];
  sub_10055C70C(1);
  id v18 = v17;
  [v13 setMenu:v17];

  return v13;
}

void sub_10055C70C(char a1)
{
  uint64_t v2 = v1;
  __int16 v4 = sub_10099299C();
  if (v4 == 2) {
    return;
  }
  __int16 v5 = v4;
  __int16 v6 = sub_100992B00();
  if (v6 == 2) {
    return;
  }
  __int16 v7 = v6;
  __int16 v8 = sub_100992C64();
  if (v8 == 2) {
    return;
  }
  __int16 v9 = v8;
  __int16 v10 = sub_100992DC8();
  if (v10 == 2) {
    return;
  }
  __int16 v68 = v10;
  NSString v11 = String._bridgeToObjectiveC()();
  double v82 = self;
  id v12 = [v82 systemImageNamed:v11];

  uint64_t v79 = v12;
  if (!v12)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  char v13 = v5 & 1;
  char v14 = HIBYTE(v5) & 1;
  int v81 = self;
  id v15 = [v81 mainBundle];
  NSString v16 = String._bridgeToObjectiveC()();
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  char v76 = v14;
  char v77 = v13;
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [v82 systemImageNamed:v19];

  if (!v20)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v21 = [v81 mainBundle];
  NSString v22 = String._bridgeToObjectiveC()();
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = [v21 localizedStringForKey:v22 value:v23 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = [v82 systemImageNamed:v25];

  char v71 = v26;
  if (!v26)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v27 = v7 & 1;
  char v70 = HIBYTE(v7) & 1;
  unsigned int v28 = v9 & 1;
  int v29 = v9 & 0x100;
  id v30 = [v81 mainBundle];
  NSString v31 = String._bridgeToObjectiveC()();
  NSString v32 = String._bridgeToObjectiveC()();
  id v33 = [v30 localizedStringForKey:v31 value:v32 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  char v34 = BYTE1(v29);
  if (v29) {
    uint64_t v35 = 2;
  }
  else {
    uint64_t v35 = v28;
  }
  uint64_t v69 = v35;
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v2;
  *(unsigned char *)(v36 + 24) = v77;
  *(unsigned char *)(v36 + 25) = v76;
  id v78 = v79;
  id v37 = v2;
  uint64_t v38 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v37;
  *(unsigned char *)(v39 + 24) = v27;
  *(unsigned char *)(v39 + 25) = v70;
  id v40 = v37;
  id v41 = v20;
  __int16 v42 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v40;
  *(unsigned char *)(v43 + 24) = v28;
  *(unsigned char *)(v43 + 25) = v34;
  id v75 = v40;
  id v80 = v71;
  uint64_t v67 = v43;
  __int16 v44 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_10117FBD0;
  *(void *)(v45 + 32) = v44;
  *(void *)(v45 + 40) = v42;
  *(void *)(v45 + 48) = v38;
  unint64_t v83 = v45;
  specialized Array._endMutation()();
  UIMenuElementSize v46 = v83;
  id v47 = v44;
  id v48 = v42;
  id v49 = v38;
  id v50 = v49;
  if ((a1 & 1) == 0) {
    goto LABEL_17;
  }
  id v72 = v49;
  id v73 = v48;
  id v74 = v47;
  NSString v51 = String._bridgeToObjectiveC()();
  id v52 = [v82 systemImageNamed:v51];

  if (!v52)
  {
LABEL_26:
    __break(1u);
    return;
  }
  id v53 = [v81 mainBundle];
  NSString v54 = String._bridgeToObjectiveC()();
  NSString v55 = String._bridgeToObjectiveC()();
  id v56 = [v53 localizedStringForKey:v54 value:v55 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = v75;
  *(unsigned char *)(v57 + 24) = v68 & 1;
  *(unsigned char *)(v57 + 25) = HIBYTE(v68) & 1;
  id v58 = v75;
  id v59 = v52;
  uint64_t v60 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  uint64_t v61 = v60;
  if (v83 >> 62)
  {
    id v65 = v60;
    swift_bridgeObjectRetain();
    uint64_t v66 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if ((v66 & 0x8000000000000000) == 0) {
      goto LABEL_16;
    }
    __break(1u);
    goto LABEL_23;
  }
  id v62 = v60;
LABEL_16:
  sub_100F49AC4(0, 0, (uint64_t)v61);

  UIMenuElementSize v46 = v83;
  id v47 = v74;
  id v50 = v72;
  id v48 = v73;
LABEL_17:
  if ((unint64_t)v46 >> 62)
  {
    sub_10050BF48(0, &qword_10167ADE0);
    swift_bridgeObjectRetain();
    UIMenuElementSize preferredElementSize = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10050BF48(0, &qword_10167ADE0);
    UIMenuElementSize preferredElementSize = v46;
  }
  swift_bridgeObjectRelease();
  sub_10050BF48(0, &qword_101673A80);
  v64._countAndFlagsBits = 0;
  v64._object = (void *)0xE000000000000000;
  v84.value.super.Class isa = 0;
  v84.is_nil = 0;
  UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v64, (Swift::String_optional)0, v84, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, 0);
}

void sub_10055CFE0(uint64_t a1, uint64_t a2, char a3)
{
  __int16 v4 = *(char **)(a2 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider);
  __int16 v5 = *(void **)&v4[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 24) = 0;
  *(void *)(v6 + 16) = 0;
  v12[4] = sub_100565100;
  v12[5] = v6;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = *(void *)"";
  v12[2] = sub_1005B74EC;
  v12[3] = &unk_101508068;
  __int16 v7 = _Block_copy(v12);
  __int16 v8 = v4;
  swift_retain();
  swift_release();
  [v5 enumerateEditorsOnStackUsingBlock:v7];
  _Block_release(v7);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v6 + 16);
  uint64_t v10 = *(void *)(v6 + 24);
  swift_unknownObjectRetain();
  swift_release();
  if (v9)
  {
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(BOOL, uint64_t, uint64_t))(v10 + 80))((a3 & 1) == 0, ObjectType, v10);

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

void sub_10055D170(uint64_t a1, uint64_t a2, char a3)
{
  __int16 v4 = *(char **)(a2 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider);
  __int16 v5 = *(void **)&v4[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 24) = 0;
  *(void *)(v6 + 16) = 0;
  v12[4] = sub_100565100;
  v12[5] = v6;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = *(void *)"";
  v12[2] = sub_1005B74EC;
  v12[3] = &unk_101508040;
  __int16 v7 = _Block_copy(v12);
  __int16 v8 = v4;
  swift_retain();
  swift_release();
  [v5 enumerateEditorsOnStackUsingBlock:v7];
  _Block_release(v7);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v6 + 16);
  uint64_t v10 = *(void *)(v6 + 24);
  swift_unknownObjectRetain();
  swift_release();
  if (v9)
  {
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(BOOL, uint64_t, uint64_t))(v10 + 96))((a3 & 1) == 0, ObjectType, v10);

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

void sub_10055D300(uint64_t a1, uint64_t a2, char a3)
{
  __int16 v4 = *(char **)(a2 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider);
  __int16 v5 = *(void **)&v4[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 24) = 0;
  *(void *)(v6 + 16) = 0;
  v12[4] = sub_100565100;
  v12[5] = v6;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = *(void *)"";
  v12[2] = sub_1005B74EC;
  v12[3] = &unk_101508018;
  __int16 v7 = _Block_copy(v12);
  __int16 v8 = v4;
  swift_retain();
  swift_release();
  [v5 enumerateEditorsOnStackUsingBlock:v7];
  _Block_release(v7);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v6 + 16);
  uint64_t v10 = *(void *)(v6 + 24);
  swift_unknownObjectRetain();
  swift_release();
  if (v9)
  {
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(BOOL, uint64_t, uint64_t))(v10 + 112))((a3 & 1) == 0, ObjectType, v10);

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

void sub_10055D490(uint64_t a1, uint64_t a2, char a3)
{
  __int16 v4 = *(char **)(a2 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider);
  __int16 v5 = *(void **)&v4[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 24) = 0;
  *(void *)(v6 + 16) = 0;
  v12[4] = sub_100565100;
  v12[5] = v6;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = *(void *)"";
  v12[2] = sub_1005B74EC;
  v12[3] = &unk_101507FF0;
  __int16 v7 = _Block_copy(v12);
  __int16 v8 = v4;
  swift_retain();
  swift_release();
  [v5 enumerateEditorsOnStackUsingBlock:v7];
  _Block_release(v7);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v6 + 16);
  uint64_t v10 = *(void *)(v6 + 24);
  swift_unknownObjectRetain();
  swift_release();
  if (v9)
  {
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(BOOL, uint64_t, uint64_t))(v10 + 144))((a3 & 1) == 0, ObjectType, v10);

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

Class sub_10055D620()
{
  uint64_t v0 = (void *)sub_100993370();
  if (!v0) {
    return 0;
  }
  uint64_t v2 = v0;
  char v3 = v1;
  id v4 = [v0 referenceColor];
  if (!v4 || (v5 = v4, id v6 = [v4 UIColor], v5, !v6))
  {

    return 0;
  }
  id v7 = [self mainBundle];
  NSString v8 = String._bridgeToObjectiveC()();
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];

  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  if (v3)
  {
    NSString v17 = String._bridgeToObjectiveC()();
    id v14 = [self imageNamed:v17];

    Class v15 = sub_10051D070(0, v14, v11, v13, 65.0);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v14 = v6;
    Class v15 = sub_10051D070(v6, 0, v11, v13, 65.0);

    swift_bridgeObjectRelease();
  }

  return v15;
}

uint64_t sub_10055D840(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v36 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for UIButton.Configuration.Size();
  uint64_t v7 = *(void *)(v35 - 8);
  __chkstk_darwin(v35, v8);
  id v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UIButton.Configuration.TitleAlignment();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  Class v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC((uint64_t *)&unk_1016725A0);
  __chkstk_darwin(v16 - 8, v17);
  NSString v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()();
  swift_bridgeObjectRetain();
  UIButton.Configuration.title.setter();
  *(void *)(swift_allocObject() + 16) = a3;
  id v20 = a3;
  UIConfigurationTextAttributesTransformer.init(_:)();
  uint64_t v21 = type metadata accessor for UIConfigurationTextAttributesTransformer();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v19, 0, 1, v21);
  UIButton.Configuration.titleTextAttributesTransformer.setter();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v15, enum case for UIButton.Configuration.TitleAlignment.leading(_:), v11);
  UIButton.Configuration.titleAlignment.setter();
  UIButton.Configuration.titleLineBreakMode.setter();
  UIButton.Configuration.contentInsets.setter();
  id v22 = [self configurationWithPointSize:4 weight:17.0];
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = [self systemImageNamed:v23];

  if (v24)
  {
    id v25 = [self labelColor];
    id v26 = [v24 imageWithTintColor:v25];
  }
  UIButton.Configuration.image.setter();
  UIButton.Configuration.imagePlacement.setter();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, enum case for UIButton.Configuration.Size.medium(_:), v35);
  UIButton.Configuration.buttonSize.setter();
  id v27 = [self mainScreen];
  id v28 = [v27 traitCollection];

  LODWORD(v27) = [v28 crl_isUserInterfaceStyleDark];
  int v29 = self;
  id v30 = &selRef_tertiarySystemBackgroundColor;
  if (!v27) {
    id v30 = &selRef_secondarySystemBackgroundColor;
  }
  id v31 = [v29 *v30 v35];
  UIButton.Configuration.baseBackgroundColor.setter();
  id v32 = [self labelColor];
  UIButton.Configuration.baseForegroundColor.setter();
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v36, enum case for UIButton.Configuration.CornerStyle.fixed(_:), v38);
  UIButton.Configuration.cornerStyle.setter();
  id v33 = (uint64_t (*)(unsigned char *, void))UIButton.Configuration.background.modify();
  UIBackgroundConfiguration.cornerRadius.setter();
  return v33(v39, 0);
}

uint64_t sub_10055DD4C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for AttributeContainer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a3, a1, v6);
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  if (!a2 || !objc_msgSend(a2, "fontWithSize:", 17.0, KeyPath)) {
    id v7 = [self systemFontOfSize:17.0 weight:UIFontWeightRegular];
  }
  sub_100522B9C();
  return AttributeContainer.subscript.setter();
}

id sub_10055DE50()
{
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10117FBD0;
  *(void *)(v0 + 32) = sub_10055EBD8(0, 1, 0, 91.0);
  *(void *)(v0 + 40) = sub_10055EA08();
  *(void *)(v0 + 48) = sub_10055E074();
  specialized Array._endMutation()();
  if (qword_10166EB50 != -1) {
    swift_once();
  }
  double v1 = *(double *)&qword_101719DD0;
  id v2 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v4 = [v2 initWithArrangedSubviews:isa];

  [v4 setAxis:0];
  [v4 setAlignment:0];
  [v4 setDistribution:0];
  [v4 setSpacing:v1];
  if (qword_10166EB60 != -1) {
    swift_once();
  }
  double v5 = *(double *)&qword_101719DE0;
  id v6 = [v4 heightAnchor];
  id v7 = [v6 constraintGreaterThanOrEqualToConstant:v5];

  [v7 setActive:1];
  swift_bridgeObjectRelease();

  return v4;
}

id sub_10055E074()
{
  swift_getObjectType();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = [self systemImageNamed:v0];

  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  char v3 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v4 = self;
  id v5 = [v4 labelColor];
  id v6 = [v4 labelColor];
  id v7 = sub_1005200E8(v1, 0, 0, v3, 0, 0, v5, v6, 0);

  id v8 = [v7 widthAnchor];
  id v9 = [v8 constraintEqualToConstant:65.0];

  [v9 setActive:1];
  id v10 = self;
  id v11 = v7;
  id v12 = [v10 mainBundle];
  NSString v13 = String._bridgeToObjectiveC()();
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v12 localizedStringForKey:v13 value:v14 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v11 setAccessibilityLabel:v16];

  id v17 = v11;
  id v18 = [v17 accessibilityLabel];
  [v17 setLargeContentTitle:v18];

  return v17;
}

void sub_10055E3A8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (char *)Strong;
    uint64_t v2 = Strong + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v3 = *(void *)(v2 + 16);
      id v4 = [objc_allocWithZone((Class)UIFontPickerViewControllerConfiguration) init];
      [v4 set_includeDefaultFont:1];
      [v4 setIncludeFaces:1];
      uint64_t v5 = type metadata accessor for CRLiOSMiniFormatterFontPickerViewController();
      uint64_t ObjectType = swift_getObjectType();
      id v7 = v4;
      uint64_t v8 = swift_unknownObjectRetain();
      id v9 = sub_10056533C(v8, (uint64_t)v7, v5, ObjectType, v3);
      swift_unknownObjectRelease();

      id v10 = *(id *)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider];
      id v11 = (void *)sub_10099282C();
      char v13 = v12;

      if (v11)
      {
        if ((v13 & 1) == 0)
        {
          id v14 = v9;
          id v15 = [v11 platformFont];
          id v16 = [v15 fontDescriptor];

          [v14 setSelectedFontDescriptor:v16];
          id v11 = v16;
        }
      }
      [v9 setDelegate:v1];
      (*(void (**)(id, char *, uint64_t, uint64_t))(v3 + 32))(v9, v1, ObjectType, v3);

      swift_unknownObjectRelease();
    }
    else
    {
      id v9 = v1;
    }
  }
}

void *sub_10055E5AC()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for UIButton.Configuration();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  id v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  id v10 = (char *)v34 - v9;
  uint64_t v11 = sub_10099282C();
  if (!v11) {
    goto LABEL_5;
  }
  char v12 = (void *)v11;
  char v13 = sub_100992B00();
  if (v13 == 2 || (char v14 = v13, v15 = sub_10099299C(), v15 == 2))
  {

LABEL_5:
    id v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0xE000000000000000;
    goto LABEL_6;
  }
  char v25 = v15;
  NSString v26 = [v12 postScriptName];
  if (!v26)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  unsigned int v27 = [self isSystemFontName:v26];

  v34[1] = v1;
  if (v27)
  {
    id v28 = [self mainBundle];
    v34[0] = v28;
    NSString v29 = String._bridgeToObjectiveC()();
    NSString v30 = String._bridgeToObjectiveC()();
    id v31 = [v28 localizedStringForKey:v29 value:v30 table:0];
  }
  else
  {
    id v31 = [v12 displayName];
  }
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v32;

  id v33 = [v12 copyWithSize:v25 & 1 bold:v14 & 1 italic:17.0];
  id v16 = [v33 platformFont];

LABEL_6:
  sub_10055D840(v17, v18, v16);
  swift_bridgeObjectRelease();
  sub_10050BF48(0, (unint64_t *)&unk_101672590);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v10, v2);
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  NSString v19 = (void *)UIButton.init(configuration:primaryAction:)();
  [v19 setContentHorizontalAlignment:3];
  id v20 = [v19 titleLabel];
  if (v20)
  {
    uint64_t v21 = v20;
    [v20 setMinimumScaleFactor:0.5];
  }
  id v22 = [v19 titleLabel];
  if (v22)
  {
    NSString v23 = v22;
    [v22 setAdjustsFontSizeToFitWidth:1];

    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
  }
  return v19;
}

id sub_10055EA08()
{
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10117DF50;
  *(void *)(v0 + 32) = sub_10055F3D8();
  *(void *)(v0 + 40) = sub_10055F794();
  specialized Array._endMutation()();
  id v1 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v3 = [v1 initWithArrangedSubviews:isa];

  [v3 setAxis:0];
  [v3 setAlignment:0];
  [v3 setDistribution:0];
  [v3 setSpacing:1.0];
  if (qword_10166EB60 != -1) {
    swift_once();
  }
  double v4 = *(double *)&qword_101719DE0;
  id v5 = [v3 heightAnchor];
  id v6 = [v5 constraintGreaterThanOrEqualToConstant:v4];

  [v6 setActive:1];
  swift_bridgeObjectRelease();

  [v3 setDistribution:1];
  return v3;
}

id sub_10055EBD8(char a1, char a2, char a3, double a4)
{
  uint64_t v5 = v4;
  swift_getObjectType();
  uint64_t v9 = sub_100992424();
  uint64_t v10 = v9 & 0xFF00000000;
  float v11 = *(float *)&v9;
  if (*(float *)&v9 > 999.0) {
    float v11 = 999.0;
  }
  if (v10 == 0x200000000) {
    float v12 = 0.0;
  }
  else {
    float v12 = v11;
  }
  if (v10 == 0x200000000) {
    int v13 = 0;
  }
  else {
    int v13 = BYTE4(v9) & 1;
  }
  id v14 = [self sharedApplication];
  id v15 = [v14 preferredContentSizeCategory];

  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;
  BOOL v20 = v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19;
  id v73 = v15;
  if (v20) {
    goto LABEL_16;
  }
  char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21) {
    goto LABEL_17;
  }
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;
  if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v25) {
    goto LABEL_16;
  }
  char v60 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v60 & 1) == 0)
  {
    uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v63 = v62;
    if (v61 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v63 == v64)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      goto LABEL_17;
    }
    char v65 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v65 & 1) == 0 && (a2)
    {
      id v66 = [self mainBundle];
      NSString v67 = String._bridgeToObjectiveC()();
      NSString v68 = String._bridgeToObjectiveC()();
      id v69 = [v66 localizedStringForKey:v67 value:v68 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
  }
LABEL_17:
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_10117E810;
  *(void *)(v26 + 56) = &type metadata for Float;
  *(void *)(v26 + 64) = &protocol witness table for Float;
  *(float *)(v26 + 32) = v12;
  uint64_t v27 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1)
  {
    id v30 = [self clearColor];
    if ((a3 & 1) == 0)
    {
LABEL_19:
      id v31 = [self labelColor];
      goto LABEL_24;
    }
  }
  else
  {
    id v30 = 0;
    if ((a3 & 1) == 0) {
      goto LABEL_19;
    }
  }
  if (qword_10166EB40 != -1) {
    swift_once();
  }
  id v31 = (id)qword_101719DB8;
LABEL_24:
  uint64_t v32 = v31;
  id v33 = self;
  char v34 = &selRef_secondaryLabelColor;
  if (!v13) {
    char v34 = &selRef_labelColor;
  }
  id v35 = [v33 *v34];
  swift_bridgeObjectRetain();
  id v72 = v32;
  if (a3) {
    id v36 = sub_100520268(0, v27, v29, 0, v30, v30, v35, v32, v13);
  }
  else {
    id v36 = sub_1005200E8(0, v27, v29, 0, v30, v30, v35, v32, v13);
  }
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  [v37 setShowsMenuAsPrimaryAction:1];
  uint64_t v38 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_textSizeManager);
  uint64_t v39 = *(void *)(v5 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_textSizeManager + 8);
  sub_10050BF48(0, &qword_101673A80);
  UIMenuElementSize preferredElementSize = sub_100563E44(v38, v39);
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  v75.value.super.Class isa = 0;
  v75.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v40, (Swift::String_optional)0, v75, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, v71).super.super.isa;
  [v37 setMenu:isa];

  [v37 setPreferredMenuElementOrder:2];
  id v42 = [v37 widthAnchor];
  id v43 = [v42 constraintEqualToConstant:a4];

  [v43 setActive:1];
  sub_1005057FC((uint64_t *)&unk_101672610);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_10117D8C0;
  uint64_t v45 = self;
  id v46 = v37;
  id v47 = [v45 mainBundle];
  NSString v48 = String._bridgeToObjectiveC()();
  NSString v49 = String._bridgeToObjectiveC()();
  id v50 = [v47 localizedStringForKey:v48 value:v49 table:0];

  uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v53 = v52;

  *(void *)(v44 + 32) = v51;
  *(void *)(v44 + 40) = v53;
  *(void *)(v44 + 48) = v27;
  *(void *)(v44 + 56) = v29;
  sub_1005057FC((uint64_t *)&unk_1016773F0);
  sub_10056547C();
  BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  NSString v54 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v46 setAccessibilityLabel:v54];

  id v55 = v46;
  id v56 = [v55 accessibilityLabel];
  [v55 setLargeContentTitle:v56];

  if (a3)
  {
    id v57 = [v55 heightAnchor];
    if (qword_10166EB48 != -1) {
      swift_once();
    }
    id v58 = objc_retainAutoreleasedReturnValue(objc_msgSend(v57, "constraintEqualToConstant:", *((double *)&xmmword_101719DC0
                                                                                             + 1)));

    [v58 setActive:1];
  }

  return v55;
}

id sub_10055F3D8()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [self systemImageNamed:v2];

  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v22 = v4;
  uint64_t v5 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v6 = self;
  id v7 = [v6 labelColor:0:0:0:sub_10056544C:v22];
  id v8 = [v6 labelColor];
  uint64_t v9 = sub_10051E93C(v3, 0, 0, v5, 0, 0, v7, v8, 0, 5, 0, 0, 0, 0);

  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_textSizeManager + 8);
  uint64_t v11 = sub_100992424();
  if ((v11 & 0xFF00000000) == 0x200000000 || !*(void *)(v10 + 16) || *(float *)(v10 + 32) >= *(float *)&v11) {
    [v9 setEnabled:0];
  }
  float v12 = self;
  id v13 = v9;
  id v14 = [v12 mainBundle];
  NSString v15 = String._bridgeToObjectiveC()();
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v14 localizedStringForKey:v15 value:v16 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v13 setAccessibilityLabel:v18];

  id v19 = v13;
  id v20 = [v19 accessibilityLabel];
  [v19 setLargeContentTitle:v20];

  return v19;
}

unint64_t sub_10055F6FC(uint64_t a1, uint64_t a2)
{
  unint64_t result = sub_100992424();
  if ((result & 0xFF00000000) != 0x200000000)
  {
    float v4 = *(float *)&result;
    uint64_t v5 = sub_100E39D04(a2, *(float *)&result);
    if ((v6 & 1) == 0)
    {
      BOOL v7 = v5 < 1;
      unint64_t result = v5 - 1;
      if (v7) {
        return result;
      }
      if (result < *(void *)(a2 + 16)) {
        return sub_100992588(*(float *)(a2 + 4 * result + 32));
      }
      __break(1u);
    }
    unint64_t result = sub_1005653B4(a2, v4);
    if ((result & 0x8000000000000000) != 0) {
      return result;
    }
    if (result >= *(void *)(a2 + 16))
    {
      __break(1u);
      return result;
    }
    return sub_100992588(*(float *)(a2 + 4 * result + 32));
  }
  return result;
}

id sub_10055F794()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [self systemImageNamed:v2];

  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v23 = v4;
  uint64_t v5 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  char v6 = self;
  id v7 = [v6 labelColor:0, 0, 0, sub_10056530C, v23];
  id v8 = [v6 labelColor];
  uint64_t v9 = sub_10051E93C(v3, 0, 0, v5, 0, 0, v7, v8, 0, 10, 0, 0, 0, 0);

  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_textSizeManager + 8);
  uint64_t v11 = sub_100992424();
  if ((v11 & 0xFF00000000) == 0x200000000
    || (uint64_t v12 = *(void *)(v10 + 16)) == 0
    || *(float *)(v10 + 4 * v12 + 28) <= *(float *)&v11)
  {
    [v9 setEnabled:0];
  }
  id v13 = self;
  id v14 = v9;
  id v15 = [v13 mainBundle];
  NSString v16 = String._bridgeToObjectiveC()();
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v14 setAccessibilityLabel:v19];

  id v20 = v14;
  id v21 = [v20 accessibilityLabel];
  [v20 setLargeContentTitle:v21];

  return v20;
}

void sub_10055FAB8(uint64_t a1, uint64_t a2, void (*a3)(id, uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t v6 = *(void *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_textSizeManager + 8);
    id v7 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_textSizeManager);
    swift_bridgeObjectRetain();
    a3(v7, v6);

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10055FB50(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100992424();
  if ((result & 0xFF00000000) != 0x200000000)
  {
    float v4 = *(float *)&result;
    uint64_t result = sub_100E39D04(a2, *(float *)&result);
    if ((v5 & 1) == 0)
    {
      unint64_t v6 = *(void *)(a2 + 16);
      if (result >= (uint64_t)(v6 - 1)) {
        return result;
      }
      uint64_t v7 = result + 1;
      if (result + 1 < v6) {
        return sub_100992588(*(float *)(a2 + 4 * v7 + 32));
      }
      __break(1u);
    }
    uint64_t result = sub_1005653B4(a2, v4);
    unint64_t v8 = *(void *)(a2 + 16);
    if (result >= (uint64_t)(v8 - 1)) {
      return result;
    }
    uint64_t v7 = result + 1;
    if (result + 1 >= v8)
    {
      __break(1u);
      return result;
    }
    return sub_100992588(*(float *)(a2 + 4 * v7 + 32));
  }
  return result;
}

id sub_10055FBFC()
{
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10117FBD0;
  *(void *)(v0 + 32) = sub_10055FE30(0, 0x4056C00000000000, 0);
  *(void *)(v0 + 40) = sub_1005612AC(0x4056800000000000, 0);
  sub_1005619B4(0, 0x4056C00000000000, 0);
  *(void *)(v0 + 48) = v1;
  specialized Array._endMutation()();
  if (qword_10166EB50 != -1) {
    swift_once();
  }
  double v2 = *(double *)&qword_101719DD0;
  id v3 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [v3 initWithArrangedSubviews:isa];

  [v5 setAxis:0];
  [v5 setAlignment:0];
  [v5 setDistribution:0];
  [v5 setSpacing:v2];
  if (qword_10166EB60 != -1) {
    swift_once();
  }
  double v6 = *(double *)&qword_101719DE0;
  id v7 = [v5 heightAnchor];
  id v8 = [v7 constraintGreaterThanOrEqualToConstant:v6];

  [v8 setActive:1];
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_10055FE30(int a1, uint64_t a2, int a3)
{
  int v61 = a3;
  double v57 = *(double *)&a2;
  int v59 = a1;
  v56[1] = swift_getObjectType();
  uint64_t v3 = type metadata accessor for UIButton.Configuration();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  id v7 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)v56 - v10;
  sub_1005647C8();
  uint64_t v13 = v12;
  NSString v14 = String._bridgeToObjectiveC()();
  id v62 = [self systemImageNamed:v14];

  id v60 = self;
  id v15 = [v60 mainBundle];
  NSString v16 = String._bridgeToObjectiveC()();
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

  uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  uint64_t result = sub_100992F2C();
  if (v22 == 2) {
    goto LABEL_15;
  }
  if (v22) {
    goto LABEL_15;
  }
  uint64_t v23 = *(void *)(v13 + 16);
  if (!v23) {
    goto LABEL_15;
  }
  uint64_t v24 = result;
  if (*(void *)(v13 + 32) == result)
  {
    uint64_t v25 = (void **)(v13 + 48);
    uint64_t v26 = (void **)(v13 + 56);
LABEL_13:
    uint64_t v29 = *v26;
    v56[0] = *v25;
    swift_bridgeObjectRetain();
    id v30 = v29;

    swift_bridgeObjectRelease();
    id v31 = self;
    id v32 = v30;
    id v33 = [v31 crlwpax_descriptionForParagraphAlignment:v24];
    id v62 = v32;
    if (!v33)
    {

      swift_bridgeObjectRelease();
      uint64_t v58 = 0;
      uint64_t v20 = 0;
      if (v59) {
        goto LABEL_16;
      }
      goto LABEL_18;
    }
    char v34 = v33;
    uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v35;

    swift_bridgeObjectRelease();
LABEL_15:
    if (v59)
    {
LABEL_16:
      id v36 = v62;
      sub_100520A20(v62);
      sub_10050BF48(0, (unint64_t *)&unk_101672590);
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v11, v3);
      uint64_t v37 = (void *)UIButton.init(configuration:primaryAction:)();
      [v37 setPointerInteractionEnabled:1];
      (*(void (**)(char *, uint64_t))(v4 + 8))(v11, v3);
      uint64_t v38 = v36;
LABEL_19:
      [v37 setShowsMenuAsPrimaryAction:1];
      Class v42 = sub_100560484(v13);
      swift_bridgeObjectRelease();
      [v37 setMenu:v42];

      if ((v61 & 1) == 0)
      {
        double v43 = v57;
        id v44 = [v37 widthAnchor];
        id v45 = [v44 constraintEqualToConstant:v43];

        [v45 setActive:1];
      }
      id v46 = v37;
      id v47 = [v60 mainBundle];
      NSString v48 = String._bridgeToObjectiveC()();
      NSString v49 = String._bridgeToObjectiveC()();
      id v50 = [v47 localizedStringForKey:v48 value:v49 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v51 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v46 setAccessibilityLabel:v51];

      id v52 = v46;
      id v53 = [v52 accessibilityLabel];
      [v52 setLargeContentTitle:v53];

      id v54 = v52;
      if (v20)
      {
        NSString v55 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v55 = 0;
      }
      [v52 setAccessibilityValue:v55];

      return (uint64_t)v52;
    }
LABEL_18:
    uint64_t v39 = self;
    id v40 = [v39 labelColor];
    id v41 = [v39 labelColor];
    uint64_t v38 = v62;
    uint64_t v37 = sub_1005200E8(v62, 0, 0, 0, 0, 0, v40, v41, 0);

    goto LABEL_19;
  }
  if (v23 == 1) {
    goto LABEL_15;
  }
  uint64_t v26 = (void **)(v13 + 88);
  uint64_t v27 = 1;
  while (1)
  {
    uint64_t v28 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (*(v26 - 3) == (void *)result)
    {
      uint64_t v25 = v26 - 1;
      goto LABEL_13;
    }
    v26 += 4;
    ++v27;
    if (v28 == v23) {
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

Class sub_100560484(uint64_t a1)
{
  uint64_t v34 = sub_100992F2C();
  if (v3 == 2) {
    return 0;
  }
  uint64_t v5 = *(void *)(a1 + 16);
  UIMenuElementSize v6 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  if (v5)
  {
    char v7 = v3;
    id v35 = v1;
    specialized ContiguousArray.reserveCapacity(_:)();
    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    uint64_t v8 = (void **)(a1 + 56);
    do
    {
      uint64_t v9 = (uint64_t)*(v8 - 3);
      uint64_t v10 = (uint64_t)*(v8 - 2);
      uint64_t v12 = (uint64_t)*(v8 - 1);
      uint64_t v11 = *v8;
      uint64_t v13 = swift_allocObject();
      swift_unknownObjectWeakInit();
      NSString v14 = (void *)swift_allocObject();
      v14[2] = v13;
      v14[3] = v9;
      v14[4] = v10;
      v14[5] = v12;
      v14[6] = v11;
      swift_bridgeObjectRetain_n();
      id v15 = v11;
      v33._rawValue = 0;
      NSString v16 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      if ((v7 & 1) == 0 && v34 == v9) {
        [v16 setState:1, 0, 0, 0, sub_1005652DC, v14];
      }

      swift_bridgeObjectRelease();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v8 += 4;
      --v5;
    }
    while (v5);
    UIMenuElementSize v6 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  }
  unint64_t v36 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
    goto LABEL_40;
  }
  uint64_t v17 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17)
  {
    for (uint64_t i = v17 - 1; !__OFSUB__(v17, 1); uint64_t i = v17 - 1)
    {
      if (i < 1) {
        goto LABEL_32;
      }
      unint64_t v19 = 0;
      uint64_t v20 = v17 + 0x7FFFFFFFFFFFFFFFLL;
      while (1)
      {
        unint64_t v21 = v17 - 1;
        uint64_t v22 = v36;
        if ((v36 & 0xC000000000000001) != 0)
        {
          uint64_t v24 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v25 = (double *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_19;
        }
        UIMenuElementSize v6 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v19 >= v6) {
          break;
        }
        id v23 = *(id *)(v36 + 8 * v19 + 32);
        if (v21 >= v6) {
          goto LABEL_37;
        }
        uint64_t v24 = (uint64_t)v23;
        uint64_t v25 = (double *)*(id *)(v36 + 8 * v17 + 24);
LABEL_19:
        UIMenuElementSize v6 = (UIMenuElementSize)v25;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v36 & 0x8000000000000000) != 0
          || (v36 & 0x4000000000000000) != 0)
        {
          uint64_t v22 = sub_100F68540(v36);
          unint64_t v36 = v22;
        }
        uint64_t v26 = *(void **)((v22 & 0xFFFFFFFFFFFFFF8) + 8 * v19 + 0x20);
        *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 8 * v19 + 0x20) = v6;

        specialized Array._endMutation()();
        uint64_t v27 = v36;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v36 & 0x8000000000000000) != 0
          || (v36 & 0x4000000000000000) != 0)
        {
          uint64_t v27 = sub_100F68540(v36);
          unint64_t v36 = v27;
        }
        if (v21 >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_38;
        }
        uint64_t v28 = *(void **)((v27 & 0xFFFFFFFFFFFFFF8) + 8 * v17 + 0x18);
        *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 8 * v17 + 0x18) = v24;

        specialized Array._endMutation()();
        if (v20 == v19) {
          goto LABEL_39;
        }
        ++v19;
        uint64_t v29 = v17 - 2;
        --v17;
        if ((uint64_t)v19 >= v29)
        {
          UIMenuElementSize v6 = v36;
          goto LABEL_32;
        }
      }
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      swift_bridgeObjectRetain();
      uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v32) {
        goto LABEL_32;
      }
      swift_bridgeObjectRetain();
      uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    __break(1u);
    goto LABEL_44;
  }
LABEL_32:
  if ((unint64_t)v6 >> 62)
  {
LABEL_44:
    sub_10050BF48(0, &qword_10167ADE0);
    swift_bridgeObjectRetain();
    UIMenuElementSize preferredElementSize = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  sub_10050BF48(0, &qword_10167ADE0);
  UIMenuElementSize preferredElementSize = v6;
LABEL_34:
  swift_bridgeObjectRelease();
  sub_10050BF48(0, &qword_101673A80);
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  v37.value.super.Class isa = 0;
  v37.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v31, (Swift::String_optional)0, v37, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v33).super.super.isa;
}

void sub_1005608F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (char *)Strong;
    uint64_t v6 = OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider;
    id v7 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider);
    uint64_t v8 = sub_100992F2C();
    unsigned __int8 v10 = v9;
    int v11 = v9;

    if (v11 == 2 || (v8 == a3 ? (BOOL v12 = (v10 & 1) == 0) : (BOOL v12 = 0), v12))
    {
    }
    else
    {
      uint64_t v13 = *(char **)&v5[v6];
      NSString v14 = *(void **)&v13[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 24) = 0;
      *(void *)(v15 + 16) = 0;
      aBlock[4] = sub_100565100;
      aBlock[5] = v15;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_1005B74EC;
      aBlock[3] = &unk_101507EE0;
      NSString v16 = _Block_copy(aBlock);
      uint64_t v17 = v13;
      swift_retain();
      swift_release();
      [v14 enumerateEditorsOnStackUsingBlock:v16];
      _Block_release(v16);
      swift_beginAccess();
      uint64_t v18 = *(void *)(v15 + 16);
      uint64_t v19 = *(void *)(v15 + 24);
      swift_unknownObjectRetain();
      swift_release();
      if (v18)
      {
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 208))(a3, ObjectType, v19);

        swift_unknownObjectRelease();
      }
      else
      {
      }
    }
  }
}

id sub_100560AF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101673A90);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IndexSet();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  unsigned __int8 v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005647C8();
  uint64_t v12 = v11;
  int64_t v13 = *(void *)(v11 + 16);
  if (v13)
  {
    uint64_t v32 = v10;
    Swift::OpaquePointer v33 = v0;
    uint64_t v34 = v6;
    id v35 = v5;
    unint64_t v36 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v14 = 56;
    int64_t v15 = v13;
    do
    {
      id v16 = *(id *)(v12 + v14);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v14 += 32;
      --v15;
    }
    while (v15);
    Swift::String v31 = v36;
    unint64_t v36 = _swiftEmptyArrayStorage;
    sub_1006BB504(0, v13, 0);
    uint64_t v17 = v36;
    uint64_t v18 = (uint64_t *)(v12 + 48);
    do
    {
      uint64_t v19 = *(v18 - 1);
      uint64_t v20 = *v18;
      unint64_t v36 = v17;
      unint64_t v21 = *((void *)v17 + 2);
      unint64_t v22 = *((void *)v17 + 3);
      swift_bridgeObjectRetain();
      if (v21 >= v22 >> 1)
      {
        sub_1006BB504(v22 > 1, v21 + 1, 1);
        uint64_t v17 = v36;
      }
      *((void *)v17 + 2) = v21 + 1;
      id v23 = &v17[2 * v21];
      *((void *)v23 + 4) = v19;
      *((void *)v23 + 5) = v20;
      v18 += 4;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    uint64_t v6 = v34;
    uint64_t v5 = v35;
    unsigned __int8 v10 = v32;
    uint64_t v1 = v33;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  IndexSet.init()();
  uint64_t v24 = sub_100992F2C();
  if (v25 != 2 && (v25 & 1) == 0)
  {
    Swift::Int v27 = v24;
    switch(v24)
    {
      case 0:
        goto LABEL_18;
      case 1:
        Swift::Int v27 = 2;
        goto LABEL_18;
      case 2:
        Swift::Int v27 = 1;
LABEL_18:
        IndexSet.insert(_:)(v27);
        break;
      case 3:
      case 4:
        break;
      default:
        type metadata accessor for CRLWPParagraphAlignment(0);
        unint64_t v36 = (double *)v27;
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
        __break(1u);
        JUMPOUT(0x100560E9CLL);
    }
  }
  *(void *)(swift_allocObject() + 16) = v1;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v5, v10, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  id v28 = v1;
  id v29 = sub_10051DB44();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100522F00((uint64_t)v5, &qword_101673A90);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return v29;
}

uint64_t sub_100560EB0()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider);
  uint64_t result = sub_100992F2C();
  if (v3 != 2)
  {
    uint64_t v4 = result;
    char v5 = v3;
    if (IndexSet.contains(_:)(0))
    {
      uint64_t v6 = 0;
      if ((v4 != 0) | v5 & 1) {
        goto LABEL_10;
      }
    }
    if (IndexSet.contains(_:)(1) && (v4 != 2) | v5 & 1)
    {
      uint64_t v6 = 2;
      goto LABEL_10;
    }
    uint64_t result = IndexSet.contains(_:)(2);
    if ((result & 1) != 0 && (v4 != 1) | v5 & 1)
    {
      uint64_t v6 = 1;
LABEL_10:
      uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 24) = 0;
      *(void *)(v8 + 16) = 0;
      v13[4] = sub_100565100;
      v13[5] = v8;
      v13[0] = _NSConcreteStackBlock;
      v13[1] = *(void *)"";
      v13[2] = sub_1005B74EC;
      v13[3] = &unk_101507E68;
      uint64_t v9 = _Block_copy(v13);
      swift_retain();
      swift_release();
      [v7 enumerateEditorsOnStackUsingBlock:v9];
      _Block_release(v9);
      swift_beginAccess();
      uint64_t v10 = *(void *)(v8 + 16);
      uint64_t v11 = *(void *)(v8 + 24);
      swift_unknownObjectRetain();
      uint64_t result = swift_release();
      if (v10)
      {
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 208))(v6, ObjectType, v11);
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

void sub_1005610AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v5 = (char *)Strong;
    uint64_t v6 = OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider;
    id v7 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider);
    uint64_t v8 = sub_10099309C();
    unsigned __int8 v10 = v9;
    int v11 = v9;

    if (v11 == 2 || (v8 == a3 ? (BOOL v12 = (v10 & 1) == 0) : (BOOL v12 = 0), v12))
    {
    }
    else
    {
      int64_t v13 = *(char **)&v5[v6];
      uint64_t v14 = *(void **)&v13[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 24) = 0;
      *(void *)(v15 + 16) = 0;
      aBlock[4] = sub_100565100;
      aBlock[5] = v15;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_1005B74EC;
      aBlock[3] = &unk_101507E40;
      id v16 = _Block_copy(aBlock);
      uint64_t v17 = v13;
      swift_retain();
      swift_release();
      [v14 enumerateEditorsOnStackUsingBlock:v16];
      _Block_release(v16);
      swift_beginAccess();
      uint64_t v18 = *(void *)(v15 + 16);
      uint64_t v19 = *(void *)(v15 + 24);
      swift_unknownObjectRetain();
      swift_release();
      if (v18)
      {
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 224))(a3, ObjectType, v19);

        swift_unknownObjectRelease();
      }
      else
      {
      }
    }
  }
}

id sub_1005612AC(uint64_t a1, char a2)
{
  uint64_t ObjectType = (void *)swift_getObjectType();
  sub_100564B7C();
  uint64_t v7 = v6;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [self systemImageNamed:v8];

  uint64_t v10 = sub_10099309C();
  BOOL v12 = v11 != 2 && (v11 & 1) == 0;
  uint64_t v62 = v7;
  char v61 = a2;
  if (!v12 || (uint64_t v13 = *(void *)(v7 + 16)) == 0)
  {
LABEL_14:
    uint64_t v7 = 0;
    goto LABEL_15;
  }
  uint64_t v14 = v10;
  if (*(void *)(v7 + 32) != v10)
  {
    if (v13 != 1)
    {
      id v16 = (void **)(v7 + 88);
      uint64_t v17 = 1;
      while (1)
      {
        uint64_t v18 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          break;
        }
        if (*(v16 - 3) == (void *)v10)
        {
          uint64_t v15 = a1;
          goto LABEL_34;
        }
        v16 += 4;
        ++v17;
        if (v18 == v13) {
          goto LABEL_14;
        }
      }
      __break(1u);
LABEL_39:
      sub_10050BF48(0, &qword_10167ADE0);
      UIMenuElementSize preferredElementSize = (double *)_bridgeCocoaArray<A>(_:)();
      goto LABEL_26;
    }
    goto LABEL_14;
  }
  uint64_t v15 = a1;
  id v16 = (void **)(v7 + 56);
LABEL_34:
  NSString v51 = *v16;
  swift_bridgeObjectRetain();
  id v52 = v51;

  id v53 = self;
  id v9 = v52;
  id v54 = [v53 crlwpax_descriptionForVerticalAlignment:v14];
  if (v54)
  {
    NSString v55 = v54;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v56;

    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease();
    uint64_t v7 = 0;
  }
  a1 = v15;
LABEL_15:
  uint64_t v19 = self;
  id v20 = [v19 labelColor];
  id v21 = [v19 labelColor];
  uint64_t ObjectType = sub_1005200E8(v9, 0, 0, 0, 0, 0, v20, v21, 0);

  [ObjectType setShowsMenuAsPrimaryAction:1];
  uint64_t v63 = sub_10099309C();
  if (v22 == 2)
  {
    swift_bridgeObjectRelease();
    Class isa = 0;
    a2 = v61;
    goto LABEL_27;
  }
  uint64_t v60 = a1;
  uint64_t v24 = *(void *)(v62 + 16);
  if (v24)
  {
    char v25 = v22;
    uint64_t v58 = ObjectType;
    uint64_t v59 = v7;
    id v64 = v2;
    specialized ContiguousArray.reserveCapacity(_:)();
    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    uint64_t v26 = (void **)(v62 + 56);
    do
    {
      uint64_t v28 = (uint64_t)*(v26 - 3);
      uint64_t v27 = (uint64_t)*(v26 - 2);
      uint64_t v30 = (uint64_t)*(v26 - 1);
      id v29 = *v26;
      uint64_t v31 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v32 = (void *)swift_allocObject();
      v32[2] = v31;
      v32[3] = v28;
      v32[4] = v27;
      v32[5] = v30;
      v32[6] = v29;
      swift_bridgeObjectRetain_n();
      id v33 = v29;
      v57._rawValue = 0;
      uint64_t v34 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      if ((v25 & 1) == 0 && v63 == v28) {
        [v34 setState:1, 0, 0, 0, sub_100565254, v32];
      }

      swift_bridgeObjectRelease();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v26 += 4;
      --v24;
    }
    while (v24);

    uint64_t v7 = v59;
    uint64_t ObjectType = v58;
  }
  a1 = v60;
  a2 = v61;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
    goto LABEL_39;
  }
  swift_bridgeObjectRetain();
  dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  sub_10050BF48(0, &qword_10167ADE0);
  UIMenuElementSize preferredElementSize = _swiftEmptyArrayStorage;
LABEL_26:
  swift_bridgeObjectRelease();
  sub_10050BF48(0, &qword_101673A80);
  v36._countAndFlagsBits = 0;
  v36._object = (void *)0xE000000000000000;
  v65.value.super.Class isa = 0;
  v65.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v36, (Swift::String_optional)0, v65, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, v57).super.super.isa;
  swift_bridgeObjectRelease();
LABEL_27:
  [ObjectType setMenu:isa];

  if ((a2 & 1) == 0)
  {
    id v37 = [ObjectType widthAnchor];
    id v38 = [v37 constraintEqualToConstant:*(double *)&a1];

    [v38 setActive:1];
  }
  [ObjectType setPreferredMenuElementOrder:2];
  uint64_t v39 = self;
  id v40 = ObjectType;
  id v41 = [v39 mainBundle];
  NSString v42 = String._bridgeToObjectiveC()();
  NSString v43 = String._bridgeToObjectiveC()();
  id v44 = [v41 localizedStringForKey:v42 value:v43 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v45 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v40 setAccessibilityLabel:v45];

  id v46 = v40;
  id v47 = [v46 accessibilityLabel];
  [v46 setLargeContentTitle:v47];

  id v48 = v46;
  if (v7)
  {
    NSString v49 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v49 = 0;
  }
  [v46 setAccessibilityValue:v49];

  return v46;
}

void sub_1005619B4(int a1, uint64_t a2, int a3)
{
  int v54 = a1;
  int v55 = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = type metadata accessor for UIButton.Configuration();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  NSString v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  BOOL v12 = (char *)&v50 - v11;
  int v13 = sub_10099320C();
  if ((v13 & 0x100) != 0) {
    int v14 = 0;
  }
  else {
    int v14 = v13;
  }
  if ((v13 & 0xFF00) == 0x200) {
    int v15 = 0;
  }
  else {
    int v15 = v14;
  }
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [self systemImageNamed:v16];

  if (v17)
  {
    double v51 = *(double *)&a2;
    int v53 = v15;
    if ((_BYTE)v15)
    {
      if (qword_10166EB38 != -1) {
        swift_once();
      }
      uint64_t v18 = (void *)qword_101719DB0;
      uint64_t v19 = self;
      id v20 = v18;
      id v21 = v18;
      char v22 = &selRef_whiteColor;
    }
    else
    {
      id v23 = [self mainScreen];
      id v24 = [v23 traitCollection];

      LODWORD(v23) = [v24 crl_isUserInterfaceStyleDark];
      char v25 = self;
      uint64_t v26 = &selRef_tertiarySystemBackgroundColor;
      if (!v23) {
        uint64_t v26 = &selRef_secondarySystemBackgroundColor;
      }
      id v20 = [v25 *v26];
      uint64_t v19 = self;
      char v22 = &selRef_labelColor;
    }
    id v27 = [v19 *v22];
    if (v54)
    {
      id v28 = v17;
      sub_100520A20(v17);
      sub_10050BF48(0, (unint64_t *)&unk_101672590);
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v12, v4);
      id v29 = (void *)UIButton.init(configuration:primaryAction:)();
      [v29 setPointerInteractionEnabled:1];
      (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
    }
    else
    {
      uint64_t v30 = self;
      id v31 = v17;
      id v32 = [v30 labelColor];
      id v29 = sub_1005200E8(v17, 0, 0, 0, v20, 0, v27, v32, 0);
    }
    [v29 setShowsMenuAsPrimaryAction:1];
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_10117DF50;
    *(void *)(v33 + 32) = sub_100561FD0(v53);
    *(void *)(v33 + 40) = sub_10056271C();
    UIMenuElementSize v56 = v33;
    specialized Array._endMutation()();
    UIMenuElementSize v34 = v56;
    sub_10050BF48(0, &qword_101673A80);
    v35._countAndFlagsBits = 0;
    v35._object = (void *)0xE000000000000000;
    v57.value.super.Class isa = 0;
    v57.is_nil = 0;
    Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v35, (Swift::String_optional)0, v57, 0, 0xFFFFFFFFFFFFFFFFLL, v34, v49).super.super.isa;
    [v29 setMenu:isa];

    if ((v55 & 1) == 0)
    {
      double v37 = v51;
      id v38 = [v29 widthAnchor];
      id v39 = [v38 constraintEqualToConstant:v37];

      [v39 setActive:1];
    }
    id v40 = self;
    id v41 = v29;
    id v42 = [v40 mainBundle];
    NSString v43 = String._bridgeToObjectiveC()();
    NSString v44 = String._bridgeToObjectiveC()();
    id v45 = [v42 localizedStringForKey:v43 value:v44 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v41 setAccessibilityLabel:v46];

    id v47 = v41;
    id v48 = [v47 accessibilityLabel];
    [v47 setLargeContentTitle:v48];
  }
  else
  {
    __break(1u);
  }
}

Class sub_100561FD0(char a1)
{
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v1 = self;
  id v2 = [v1 mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 localizedStringForKey:v3 value:v4 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v42 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v7 = [v1 mainBundle];
  NSString v8 = String._bridgeToObjectiveC()();
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v11 = String._bridgeToObjectiveC()();
  BOOL v12 = self;
  id v13 = [v12 systemImageNamed:v11];

  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v41 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v15 = [v1 mainBundle];
  NSString v16 = String._bridgeToObjectiveC()();
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [v12 systemImageNamed:v19];

  uint64_t v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  char v22 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v23 = [v1 mainBundle];
  NSString v24 = String._bridgeToObjectiveC()();
  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = [v23 localizedStringForKey:v24 value:v25 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = [v12 systemImageNamed:v27];

  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v29 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_10117FBE0;
  *(void *)(v30 + 32) = v42;
  *(void *)(v30 + 40) = v41;
  *(void *)(v30 + 48) = v22;
  *(void *)(v30 + 56) = v29;
  unint64_t v44 = v30;
  specialized Array._endMutation()();
  id v31 = v42;
  id v32 = v41;
  id v33 = v22;
  id v34 = v29;
  unint64_t v35 = sub_100E17850(v44);
  Swift::String v36 = v31;
  switch(a1)
  {
    case 1:
      Swift::String v36 = v33;
      break;
    case 2:
      Swift::String v36 = v34;
      break;
    case 3:
      Swift::String v36 = v32;
      break;
    default:
      break;
  }
  [v36 setState:1];
  if (v35 >> 62)
  {
    sub_10050BF48(0, &qword_10167ADE0);
    swift_bridgeObjectRetain();
    UIMenuElementSize preferredElementSize = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10050BF48(0, &qword_10167ADE0);
    UIMenuElementSize preferredElementSize = v35;
  }
  swift_bridgeObjectRelease();
  sub_10050BF48(0, &qword_101673A80);
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  v45.value.super.Class isa = 0;
  v45.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v38, (Swift::String_optional)0, v45, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, 0).super.super.isa;

  return isa;
}

void sub_1005626C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    sub_100562CA4(a3);
  }
}

Class sub_10056271C()
{
  NSString v0 = String._bridgeToObjectiveC()();
  uint64_t v1 = self;
  id v2 = [v1 systemImageNamed:v0];

  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 systemImageNamed:v3];

  id v5 = self;
  id v6 = [v5 mainBundle];
  NSString v7 = String._bridgeToObjectiveC()();
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v6 localizedStringForKey:v7 value:v8 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (sub_1003E86EC()) {
    id v10 = v4;
  }
  else {
    id v10 = v2;
  }
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v12 = v10;
  id v13 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v14 = [v5 mainBundle];
  NSString v15 = String._bridgeToObjectiveC()();
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v14 localizedStringForKey:v15 value:v16 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (sub_1003E86EC()) {
    id v18 = v2;
  }
  else {
    id v18 = v4;
  }
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v19 = v18;
  id v20 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_10050BF48(0, &qword_101673A80);
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_10117DF50;
  *(void *)(v21 + 32) = v13;
  *(void *)(v21 + 40) = v20;
  UIMenuElementSize preferredElementSize = v21;
  specialized Array._endMutation()();
  id v22 = v13;
  id v23 = v20;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v28.value.super.Class isa = 0;
  v28.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v24, (Swift::String_optional)0, v28, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, 0).super.super.isa;

  return isa;
}

void sub_100562B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v9 = (void *)Strong;
    id v10 = (char *)*(id *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider);

    uint64_t v11 = *(void **)&v10[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 24) = 0;
    *(void *)(v12 + 16) = 0;
    aBlock[4] = a3;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_1005B74EC;
    aBlock[3] = a4;
    id v13 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v11 enumerateEditorsOnStackUsingBlock:v13];
    _Block_release(v13);
    swift_beginAccess();
    uint64_t v14 = *(void *)(v12 + 16);
    uint64_t v15 = *(void *)(v12 + 24);
    swift_unknownObjectRetain();
    swift_release();
    if (v14)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 288))(a5, ObjectType, v15);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_100562CA4(uint64_t a1)
{
  NSString v3 = *(void **)(*(void *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider)
                + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 24) = 0;
  *(void *)(v4 + 16) = 0;
  v10[4] = sub_100565100;
  v10[5] = v4;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = *(void *)"";
  void v10[2] = sub_1005B74EC;
  v10[3] = &unk_101507D78;
  id v5 = _Block_copy(v10);
  swift_retain();
  swift_release();
  [v3 enumerateEditorsOnStackUsingBlock:v5];
  _Block_release(v5);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v7 = *(void *)(v4 + 24);
  swift_unknownObjectRetain();
  uint64_t result = swift_release();
  if (v6)
  {
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 280))(a1, ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_100562E14()
{
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10117FBD0;
  sub_10055B9B4();
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = sub_10055FE30(0, 0x4048800000000000, 0);
  *(void *)(v0 + 48) = sub_1005612AC(0x4048800000000000, 0);
  specialized Array._endMutation()();
  if (qword_10166EB50 != -1) {
    swift_once();
  }
  double v2 = *(double *)&qword_101719DD0;
  id v3 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [v3 initWithArrangedSubviews:isa];

  [v5 setAxis:0];
  [v5 setAlignment:0];
  [v5 setDistribution:0];
  [v5 setSpacing:v2];
  if (qword_10166EB60 != -1) {
    swift_once();
  }
  double v6 = *(double *)&qword_101719DE0;
  id v7 = [v5 heightAnchor];
  id v8 = [v7 constraintGreaterThanOrEqualToConstant:v6];

  [v8 setActive:1];
  swift_bridgeObjectRelease();

  return v5;
}

id sub_100563038()
{
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10117FBD0;
  *(void *)(v0 + 32) = sub_10055EBD8(0, 1, 0, 88.0);
  *(void *)(v0 + 40) = sub_10055EA08();
  sub_1005619B4(0, 0x4048800000000000, 0);
  *(void *)(v0 + 48) = v1;
  specialized Array._endMutation()();
  if (qword_10166EB50 != -1) {
    swift_once();
  }
  double v2 = *(double *)&qword_101719DD0;
  id v3 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [v3 initWithArrangedSubviews:isa];

  [v5 setAxis:0];
  [v5 setAlignment:0];
  [v5 setDistribution:0];
  [v5 setSpacing:v2];
  if (qword_10166EB60 != -1) {
    swift_once();
  }
  double v6 = *(double *)&qword_101719DE0;
  id v7 = [v5 heightAnchor];
  id v8 = [v7 constraintGreaterThanOrEqualToConstant:v6];

  [v8 setActive:1];
  swift_bridgeObjectRelease();

  return v5;
}

id sub_100563268()
{
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10117DF50;
  sub_10055B9B4();
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = sub_10055E074();
  specialized Array._endMutation()();
  if (qword_10166EB50 != -1) {
    swift_once();
  }
  double v2 = *(double *)&qword_101719DD0;
  id v3 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [v3 initWithArrangedSubviews:isa];

  [v5 setAxis:0];
  [v5 setAlignment:0];
  [v5 setDistribution:0];
  [v5 setSpacing:v2];
  if (qword_10166EB60 != -1) {
    swift_once();
  }
  double v6 = *(double *)&qword_101719DE0;
  id v7 = [v5 heightAnchor];
  id v8 = [v7 constraintGreaterThanOrEqualToConstant:v6];

  [v8 setActive:1];
  swift_bridgeObjectRelease();

  return v5;
}

id sub_100563468()
{
  v16[3] = &type metadata for CRLFeatureFlags;
  v16[4] = sub_1005396A8();
  LOBYTE(v16[0]) = 23;
  char v0 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v16);
  sub_1005057FC((uint64_t *)&unk_101676C10);
  if (v0)
  {
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_10117FBD0;
    *(void *)(v1 + 32) = sub_10055FE30(0, 0x4056C00000000000, 0);
    *(void *)(v1 + 40) = sub_1005612AC(0x4056800000000000, 0);
    sub_1005619B4(0, 0x4056C00000000000, 0);
    *(void *)(v1 + 48) = v2;
    v16[0] = v1;
    specialized Array._endMutation()();
    if (qword_10166EB50 != -1) {
      swift_once();
    }
    double v3 = *(double *)&qword_101719DD0;
    id v4 = objc_allocWithZone((Class)UIStackView);
    sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v6 = [v4 initWithArrangedSubviews:isa];

    [v6 setAxis:0];
    [v6 setAlignment:0];
    [v6 setDistribution:0];
    [v6 setSpacing:v3];
    if (qword_10166EB60 == -1) {
      goto LABEL_9;
    }
LABEL_10:
    swift_once();
    goto LABEL_9;
  }
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10117DF50;
  *(void *)(v7 + 32) = sub_100560AF8();
  sub_1005619B4(0, 0x4050400000000000, 0);
  *(void *)(v7 + 40) = v8;
  v16[0] = v7;
  specialized Array._endMutation()();
  if (qword_10166EB50 != -1) {
    swift_once();
  }
  double v9 = *(double *)&qword_101719DD0;
  id v10 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  swift_bridgeObjectRetain();
  Class v11 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v6 = [v10 initWithArrangedSubviews:v11];

  [v6 setAxis:0];
  [v6 setAlignment:0];
  [v6 setDistribution:0];
  [v6 setSpacing:v9];
  if (qword_10166EB60 != -1) {
    goto LABEL_10;
  }
LABEL_9:
  double v12 = *(double *)&qword_101719DE0;
  id v13 = [v6 heightAnchor];
  id v14 = [v13 constraintGreaterThanOrEqualToConstant:v12];

  [v14 setActive:1];
  swift_bridgeObjectRelease();

  return v6;
}

void *sub_100563854()
{
  unint64_t v0 = sub_1007FE0AC();
  if (v0) {
    sub_10057C1E4(v0);
  }
  unint64_t v1 = sub_1005D1384();
  if (v1)
  {
    unint64_t v2 = v1;
    if (v1 >> 62)
    {
      type metadata accessor for CRLBoardItem(0);
      unint64_t v3 = _bridgeCocoaArray<A>(_:)();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      type metadata accessor for CRLBoardItem(0);
      unint64_t v3 = v2;
    }
    swift_bridgeObjectRelease();
    sub_10058EBD0(v3);
    swift_bridgeObjectRelease();
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_10056393C(uint64_t a1, uint64_t a2)
{
  sub_100522D7C(a2, (uint64_t)&v18);
  type metadata accessor for CRLShapeItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_14;
  }
  unint64_t v4 = sub_1005D1384();
  if (!v4 || (char v5 = sub_100ED5958((uint64_t)v17, v4), swift_bridgeObjectRelease(), (v5 & 1) == 0))
  {

LABEL_14:
    char v15 = sub_100520CB4(a1, a2);
    return v15 & 1;
  }
  id v6 = *(char **)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details);
  uint64_t v7 = &v6[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data];
  uint64_t v8 = v6;
  swift_beginAccess();
  uint64_t v9 = *(void *)v7;
  if (*(void *)(*(void *)v7 + 16))
  {
    uint64_t v10 = sub_1009563E8(25);
    if (v11) {
      goto LABEL_12;
    }
  }
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v21 = 1;
  sub_100522F00((uint64_t)&v18, (uint64_t *)&unk_1016725E0);
  uint64_t v9 = *(void *)v7;
  if (*(void *)(*(void *)v7 + 16))
  {
    uint64_t v10 = sub_1009563E8(27);
    if (v12) {
      goto LABEL_12;
    }
  }
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v21 = 1;
  sub_100522F00((uint64_t)&v18, (uint64_t *)&unk_1016725E0);
  uint64_t v9 = *(void *)v7;
  if (*(void *)(*(void *)v7 + 16))
  {
    uint64_t v10 = sub_1009563E8(29);
    if (v13) {
      goto LABEL_12;
    }
  }
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v21 = 1;
  sub_100522F00((uint64_t)&v18, (uint64_t *)&unk_1016725E0);
  uint64_t v9 = *(void *)v7;
  if (*(void *)(*(void *)v7 + 16) && (uint64_t v10 = sub_1009563E8(30), (v14 & 1) != 0))
  {
LABEL_12:
    sub_100557A70(*(void *)(v9 + 56) + 32 * v10, (uint64_t)&v18);
    sub_100522F00((uint64_t)&v18, (uint64_t *)&unk_1016725E0);

    char v15 = 1;
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 1;
    sub_100522F00((uint64_t)&v18, (uint64_t *)&unk_1016725E0);

    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_100563B60(uint64_t a1, uint64_t a2)
{
  if (([*(id *)(v2 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element) options] & 0x100000) == 0)return 0; {
  sub_100522D7C(a2, (uint64_t)&v19);
  }
  type metadata accessor for CRLShapeItem();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  unint64_t v5 = sub_1005D1384();
  if (!v5)
  {

    return v5;
  }
  char v6 = sub_100ED5958((uint64_t)v18, v5);
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
  {

    return 0;
  }
  uint64_t v7 = *(char **)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details);
  uint64_t v8 = &v7[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data];
  swift_beginAccess();
  uint64_t v9 = *(void *)v8;
  if (*(void *)(*(void *)v8 + 16) && (uint64_t v10 = sub_1009563E8(25), (v11 & 1) != 0))
  {
    sub_100557A70(*(void *)(v9 + 56) + 32 * v10, (uint64_t)&v19);
    char v12 = v7;
    sub_100522F00((uint64_t)&v19, (uint64_t *)&unk_1016725E0);

    return 1;
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 1;
    char v14 = v7;
    sub_100522F00((uint64_t)&v19, (uint64_t *)&unk_1016725E0);
    uint64_t v15 = *(void *)v8;
    if (*(void *)(*(void *)v8 + 16) && (uint64_t v16 = sub_1009563E8(27), (v17 & 1) != 0))
    {
      sub_100557A70(*(void *)(v15 + 56) + 32 * v16, (uint64_t)&v19);
      unint64_t v5 = 1;
    }
    else
    {
      unint64_t v5 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      uint64_t v22 = 1;
    }
    sub_100522F00((uint64_t)&v19, (uint64_t *)&unk_1016725E0);
  }
  return v5;
}

uint64_t sub_100563D3C()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_textSizeManager);
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_closeButtonClosure);

  return sub_1005174AC(v2);
}

id sub_100563DA0()
{
  return sub_1005641C0(type metadata accessor for CRLiOSMiniFormatterTextBuilder);
}

uint64_t type metadata accessor for CRLiOSMiniFormatterTextBuilder()
{
  return self;
}

double *sub_100563E44(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100992424();
  if ((v4 & 0xFF00000000) != 0x200000000)
  {
    uint64_t v24 = *(void *)(a2 + 16);
    if (v24)
    {
      uint64_t v23 = v4 & 0xFFFFFFFFFFLL;
      float v5 = *(float *)&v4;
      swift_bridgeObjectRetain();
      specialized ContiguousArray.reserveCapacity(_:)();
      char v6 = self;
      sub_10050BF48(0, (unint64_t *)&qword_101672600);
      uint64_t v7 = 0;
      do
      {
        float v8 = *(float *)(a2 + 4 * v7 + 32);
        id v9 = [v6 mainBundle:v18, v19, v20, v21, v22];
        NSString v10 = String._bridgeToObjectiveC()();
        NSString v11 = String._bridgeToObjectiveC()();
        id v12 = [v9 localizedStringForKey:v10 value:v11 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = xmmword_10117E810;
        *(void *)(v13 + 56) = &type metadata for Float;
        *(void *)(v13 + 64) = &protocol witness table for Float;
        *(float *)(v13 + 32) = v8;
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        BOOL v14 = v8 == v5 && (v23 & (unint64_t)&_mh_execute_header) == 0;
        ++v7;
        uint64_t v15 = swift_allocObject();
        *(void *)(v15 + 16) = a1;
        *(void *)(v15 + 24) = a2;
        *(float *)(v15 + 32) = v8;
        swift_bridgeObjectRetain();
        id v16 = a1;
        uint64_t v18 = 0;
        uint64_t v19 = 0;
        uint64_t v21 = sub_10056509C;
        uint64_t v22 = v15;
        BOOL v20 = v14;
        UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      while (v24 != v7);
      swift_bridgeObjectRelease();
    }
  }
  return _swiftEmptyArrayStorage;
}

id sub_1005641A8()
{
  return sub_1005641C0(type metadata accessor for CRLiOSMiniFormatterFontPickerViewController);
}

id sub_1005641C0(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSMiniFormatterFontPickerViewController()
{
  return self;
}

void sub_10056422C(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [a1 selectedFontDescriptor];
  if (v4)
  {
    id v19 = v4;
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider);
    uint64_t v6 = sub_100992424();
    if ((v6 & 0xFF00000000) == 0x200000000)
    {
    }
    else
    {
      float v7 = *(float *)&v6;
      id v8 = [self baseFontWithDescriptor:v19];
      id v9 = [v8 copyWithSize:v7];
      NSString v10 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 24) = 0;
      *(void *)(v11 + 16) = 0;
      aBlock[4] = sub_100565100;
      aBlock[5] = v11;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_1005B74EC;
      aBlock[3] = &unk_101507D28;
      id v12 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      [v10 enumerateEditorsOnStackUsingBlock:v12];
      _Block_release(v12);
      swift_beginAccess();
      uint64_t v13 = *(void *)(v11 + 16);
      uint64_t v14 = *(void *)(v11 + 24);
      swift_unknownObjectRetain();
      swift_release();
      if (v13)
      {
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(id, uint64_t, uint64_t))(v14 + 48))(v9, ObjectType, v14);
        swift_unknownObjectRelease();
      }
      uint64_t v16 = v2 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v17 = *(void *)(v16 + 16);
        [a1 dismissViewControllerAnimated:1 completion:0];
        uint64_t v18 = swift_getObjectType();
        (*(void (**)(void *, uint64_t, uint64_t))(v17 + 40))(a1, v18, v17);

        swift_unknownObjectRelease();
      }
      else
      {
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for TextSizeManager(void *a1, uint64_t a2)
{
  objc_super v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for TextSizeManager(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for TextSizeManager(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for TextSizeManager(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FixupBookkeepingData(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FixupBookkeepingData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextSizeManager()
{
  return &type metadata for TextSizeManager;
}

void sub_1005647C8()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = self;
  id v10 = [v9 systemImageNamed:v8];

  if (!v10)
  {
    __break(1u);
    goto LABEL_24;
  }
  id v11 = [v0 mainBundle];
  NSString v12 = String._bridgeToObjectiveC()();
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v11 localizedStringForKey:v12 value:v13 table:0];

  uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v9 systemImageNamed:v17];

  if (!v18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v19 = [v0 mainBundle];
  NSString v20 = String._bridgeToObjectiveC()();
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [v19 localizedStringForKey:v20 value:v21 table:0];

  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [v9 systemImageNamed:v26];

  if (!v27)
  {
LABEL_25:
    __break(1u);
    return;
  }
  unsigned int v28 = sub_1003E86EC();
  sub_1005057FC(&qword_101673A98);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_10117DF40;
  if (v28) {
    uint64_t v30 = v23;
  }
  else {
    uint64_t v30 = v5;
  }
  if (v28) {
    uint64_t v31 = v25;
  }
  else {
    uint64_t v31 = v7;
  }
  *(void *)(v29 + 32) = v28;
  *(void *)(v29 + 40) = v30;
  if (v28) {
    id v32 = v27;
  }
  else {
    id v32 = v10;
  }
  if (v28) {
    uint64_t v33 = v5;
  }
  else {
    uint64_t v33 = v23;
  }
  if (v28) {
    uint64_t v34 = v7;
  }
  else {
    uint64_t v34 = v25;
  }
  *(void *)(v29 + 48) = v31;
  *(void *)(v29 + 56) = v32;
  if (v28) {
    id v35 = v10;
  }
  else {
    id v35 = v27;
  }
  *(void *)(v29 + 64) = 2;
  *(void *)(v29 + 72) = v36;
  *(void *)(v29 + 80) = v16;
  *(void *)(v29 + 88) = v18;
  *(void *)(v29 + 96) = v28 ^ 1;
  *(void *)(v29 + 104) = v33;
  *(void *)(v29 + 112) = v34;
  *(void *)(v29 + 120) = v35;
}

void sub_100564B7C()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v6;

  NSString v7 = String._bridgeToObjectiveC()();
  NSString v8 = self;
  id v9 = [v8 systemImageNamed:v7];

  if (!v9)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v29 = v5;
  id v10 = [v0 mainBundle];
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v10 localizedStringForKey:v11 value:v12 table:0];

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v8 systemImageNamed:v17];

  if (!v18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v19 = [v0 mainBundle];
  NSString v20 = String._bridgeToObjectiveC()();
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [v19 localizedStringForKey:v20 value:v21 table:0];

  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [v8 systemImageNamed:v26];

  if (v27)
  {
    sub_1005057FC(&qword_101673A88);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_10117DF40;
    *(void *)(v28 + 32) = 0;
    *(void *)(v28 + 40) = v29;
    *(void *)(v28 + 48) = v30;
    *(void *)(v28 + 56) = v9;
    *(void *)(v28 + 64) = 1;
    *(void *)(v28 + 72) = v14;
    *(void *)(v28 + 80) = v16;
    *(void *)(v28 + 88) = v18;
    *(void *)(v28 + 96) = 2;
    *(void *)(v28 + 104) = v23;
    *(void *)(v28 + 112) = v25;
    *(void *)(v28 + 120) = v27;
    return;
  }
LABEL_7:
  __break(1u);
}

id sub_100564EFC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, char a7, char a8, double a9, char a10, uint64_t a11, uint64_t a12, char a13)
{
  id v18 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterTextDataProvider());
  *(void *)&v18[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = a5;
  v31.receiver = v18;
  v31.super_class = (Class)type metadata accessor for CRLMiniFormatterDataProvider();
  id v19 = v13;
  id v20 = a5;
  id v21 = [super init];
  *(void *)&v19[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider] = v21;
  id v22 = &v19[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_textSizeManager];
  *id v22 = v21;
  v22[1] = &off_1015024D0;
  v19[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_displaySimplifiedStackView] = a7;
  v19[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_displaySimplifiedLandscapeStackView] = a8;
  *(double *)&v19[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_headerViewHeight] = a9;
  v19[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_displaysCloseButton] = a10;
  uint64_t v23 = (uint64_t *)&v19[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_closeButtonClosure];
  *uint64_t v23 = a11;
  v23[1] = a12;
  v19[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_isEditingText] = a13;
  id v24 = v21;
  sub_1005173A0(a11);

  return sub_100521CB4(a1, a2, a3, a4, v20, a6);
}

uint64_t sub_10056505C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 36, 7);
}

uint64_t sub_10056509C()
{
  return sub_100992588(*(float *)(v0 + 32));
}

uint64_t sub_1005650C8()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100565100(uint64_t a1, unsigned char *a2)
{
  return sub_100AC8830(a1, a2, v2);
}

uint64_t sub_100565108(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100565118()
{
  return swift_release();
}

uint64_t sub_100565120()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100565158(uint64_t a1)
{
  sub_100562B00(a1, v1, (uint64_t)sub_100565100, (uint64_t)&unk_101507DF0, -1);
}

void sub_100565194(uint64_t a1)
{
  sub_100562B00(a1, v1, (uint64_t)sub_100565100, (uint64_t)&unk_101507DC8, 1);
}

void sub_1005651D0(uint64_t a1)
{
  sub_1005626C0(a1, v1, 0);
}

void sub_1005651F0(uint64_t a1)
{
  sub_1005626C0(a1, v1, 3);
}

void sub_100565210(uint64_t a1)
{
  sub_1005626C0(a1, v1, 1);
}

void sub_100565230(uint64_t a1)
{
  sub_1005626C0(a1, v1, 2);
}

uint64_t sub_100565254(uint64_t a1)
{
  return sub_1005652F4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1005610AC);
}

uint64_t sub_10056526C()
{
  return sub_100560EB0();
}

uint64_t sub_100565294()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1005652DC(uint64_t a1)
{
  return sub_1005652F4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1005608F8);
}

uint64_t sub_1005652F4(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

void sub_10056530C(uint64_t a1)
{
  sub_10055FAB8(a1, v1, (void (*)(id, uint64_t))sub_10055FB50);
}

id sub_10056533C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v8 = (objc_class *)type metadata accessor for CRLiOSMiniFormatterFontPickerViewController();
  id v9 = (char *)objc_allocWithZone(v8);
  id v10 = &v9[OBJC_IVAR____TtC8Freeform43CRLiOSMiniFormatterFontPickerViewController_popoverDelegate];
  *(void *)id v10 = a1;
  *((void *)v10 + 1) = a5;
  v12.receiver = v9;
  v12.super_class = v8;
  swift_unknownObjectRetain();
  return [super initWithConfiguration:a2];
}

uint64_t sub_1005653B4(uint64_t a1, float a2)
{
  uint64_t v2 = 0;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = v3 - 1;
  uint64_t v5 = a1 + 32;
  uint64_t result = v3 - 1;
  do
  {
    if (v4 >= 0) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = v4 + 1;
    }
    if (v4 < -1) {
      goto LABEL_10;
    }
    uint64_t v8 = v7 >> 1;
    if (v7 >> 1 >= v3) {
      goto LABEL_10;
    }
    if (*(float *)(v5 + 4 * v8) > a2)
    {
      uint64_t result = v8 - 1;
LABEL_10:
      if (v2 < 0) {
        goto LABEL_13;
      }
      goto LABEL_11;
    }
    uint64_t v2 = v8 + 1;
    if (v8 + 1 < 0) {
      goto LABEL_13;
    }
LABEL_11:
    if (v2 < v3 && *(float *)(v5 + 4 * v2) > a2) {
      return v2 - 1;
    }
LABEL_13:
    if ((result & 0x8000000000000000) == 0 && result < v3 && *(float *)(v5 + 4 * result) < a2) {
      return result;
    }
    uint64_t v4 = v2 + result;
  }
  while (!__OFADD__(v2, result));
  __break(1u);
  return result;
}

void sub_10056544C(uint64_t a1)
{
  sub_10055FAB8(a1, v1, (void (*)(id, uint64_t))sub_10055F6FC);
}

unint64_t sub_10056547C()
{
  unint64_t result = qword_101672620;
  if (!qword_101672620)
  {
    sub_100522D34((uint64_t *)&unk_1016773F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101672620);
  }
  return result;
}

void sub_1005654D8()
{
}

uint64_t sub_1005654E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10055DD4C(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1005654F4()
{
  return 8;
}

uint64_t sub_100565500()
{
  return swift_release();
}

uint64_t sub_100565508(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_10056551C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100565528()
{
  return _swift_deallocObject(v0, 26, 7);
}

void sub_100565560(uint64_t a1)
{
  sub_10055CFE0(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

void sub_100565570(uint64_t a1)
{
  sub_10055D170(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

void sub_100565580(uint64_t a1)
{
  sub_10055D300(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

void sub_100565590(uint64_t a1)
{
  sub_10055D490(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_1005655A0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1005655D8()
{
}

uint64_t sub_1005655FC()
{
  uint64_t v1 = (uint64_t (**)(void))(*(void *)(v0 + 16)
                          + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_closeButtonClosure);
  if (*v1) {
    return (*v1)();
  }
  return result;
}

unint64_t sub_1005656C8()
{
  unint64_t result = qword_101673AB0;
  if (!qword_101673AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673AB0);
  }
  return result;
}

unint64_t sub_100565720()
{
  unint64_t result = qword_101673AB8;
  if (!qword_101673AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673AB8);
  }
  return result;
}

uint64_t sub_100565774()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100565790()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005657AC()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_1005657E0@<X0>(uint64_t *a1@<X8>)
{
  id v74 = a1;
  uint64_t v1 = type metadata accessor for InputConnectionBehavior();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v75 = v1;
  uint64_t v76 = v2;
  __chkstk_darwin(v1, v3);
  id v73 = &v50[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1005057FC(&qword_101673B38);
  uint64_t v7 = __chkstk_darwin(v5 - 8, v6);
  id v72 = &v50[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7, v9);
  char v70 = &v50[-v10];
  uint64_t v11 = sub_1005057FC(&qword_101691F20);
  __chkstk_darwin(v11 - 8, v12);
  Swift::OpaquePointer v71 = &v50[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v14 - 8, v15);
  int v53 = &v50[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  id v21 = &v50[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = type metadata accessor for Locale();
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v24 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v24 - 8, v25);
  uint64_t v26 = type metadata accessor for LocalizedStringResource();
  uint64_t v67 = v26;
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26, v28);
  uint64_t v62 = &v50[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v69 = sub_1005057FC(&qword_101673B48);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v30 = *(void (**)(unsigned char *))(v18 + 104);
  uint64_t v31 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  unsigned int v58 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v59 = v17;
  v30(v21);
  uint64_t v60 = (void (*)(unsigned char *, uint64_t, uint64_t))v30;
  uint64_t v61 = v18 + 104;
  int v54 = v21;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  ((void (*)(unsigned char *, uint64_t, uint64_t))v30)(v21, v31, v17);
  id v32 = v53;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v33 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v27 + 56);
  uint64_t v66 = v27 + 56;
  NSString v68 = v33;
  uint64_t v34 = v32;
  v33(v32, 0, 1, v26);
  uint64_t v35 = type metadata accessor for CRLBoardEntity();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v71, 1, 1, v35);
  uint64_t v36 = type metadata accessor for IntentDialog();
  uint64_t v55 = v36;
  uint64_t v37 = *(void *)(v36 - 8);
  Swift::String v38 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
  UIMenuElementSize v56 = v38;
  uint64_t v57 = v37 + 56;
  id v39 = v70;
  v38(v70, 1, 1, v36);
  v38(v72, 1, 1, v36);
  uint64_t v64 = sub_1005057FC(&qword_101673B50);
  unint64_t v65 = 0x800000010123B260;
  unint64_t v77 = 0xD00000000000001FLL;
  unint64_t v78 = 0x800000010123B260;
  AnyHashable.init<A>(_:)();
  uint64_t v63 = type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v79 = AppDependency.__allocating_init(key:manager:)();
  unsigned int v51 = enum case for InputConnectionBehavior.default(_:);
  id v40 = *(void (**)(void))(v76 + 104);
  v76 += 104;
  id v52 = (void (*)(unsigned char *, void, uint64_t))v40;
  v40(v73);
  sub_100568898();
  sub_1005688EC((unint64_t *)&qword_101673B60, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  *id v74 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)();
  Swift::OpaquePointer v71 = (unsigned char *)sub_1005057FC(&qword_101673B80);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  id v41 = v54;
  uint64_t v42 = v58;
  uint64_t v43 = v59;
  unint64_t v44 = v60;
  v60(v54, v58, v59);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v44(v41, v42, v43);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v68(v34, 0, 1, v67);
  LOBYTE(v79) = 2;
  uint64_t v45 = v55;
  NSString v46 = v56;
  v56(v39, 1, 1, v55);
  v46(v72, 1, 1, v45);
  v52(v73, v51, v75);
  sub_100568934();
  uint64_t v47 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  id v48 = v74;
  v74[1] = v47;
  unint64_t v77 = 0xD00000000000001FLL;
  unint64_t v78 = v65;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  v48[2] = result;
  v48[6] = (uint64_t)&type metadata for CRLChangeSelectionFontSizeIntentPerformer;
  v48[7] = (uint64_t)&off_101521B70;
  return result;
}

uint64_t sub_100566130(uint64_t a1)
{
  v2[16] = a1;
  v2[17] = v1;
  type metadata accessor for CRLBoardIdentifier(0);
  v2[18] = swift_task_alloc();
  type metadata accessor for CRLBoardEntity();
  v2[19] = swift_task_alloc();
  v2[20] = type metadata accessor for MainActor();
  v2[21] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[22] = v4;
  v2[23] = v3;
  return _swift_task_switch(sub_100566224, v4, v3);
}

uint64_t sub_100566224()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  IntentParameter.wrappedValue.getter();
  sub_1005689B8(v1, v2, type metadata accessor for CRLBoardIdentifier);
  sub_100568A20(v1, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  AppDependency.wrappedValue.getter();
  v0[11] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[12] = &off_10152F800;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1016A5C08 + dword_1016A5C08);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[24] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100566354;
  uint64_t v4 = v0[18];
  return v6(v4, (uint64_t)(v0 + 8));
}

uint64_t sub_100566354(void *a1, uint64_t a2)
{
  uint64_t v5 = *v3;
  v5[25] = a2;
  v5[26] = v2;
  swift_task_dealloc();
  sub_100568A20(v5[18], type metadata accessor for CRLBoardIdentifier);
  if (v2)
  {
    uint64_t v6 = v5[22];
    uint64_t v7 = v5[23];
    uint64_t v8 = sub_1005667EC;
  }
  else
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v5 + 8));

    uint64_t v6 = v5[22];
    uint64_t v7 = v5[23];
    uint64_t v8 = sub_1005664BC;
  }
  return _swift_task_switch(v8, v6, v7);
}

uint64_t sub_1005664BC()
{
  uint64_t v1 = (void *)v0[25];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  uint64_t v3 = (long long *)(v2 + 16);
  *(void *)(v2 + 24) = 0;
  v0[6] = sub_100565100;
  v0[7] = v2;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = *(void *)"";
  v0[4] = sub_1005B74EC;
  v0[5] = &unk_1015082C0;
  uint64_t v4 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  [v1 enumerateEditorsOnStackUsingBlock:v4];
  _Block_release(v4);
  swift_beginAccess();
  long long v5 = *v3;
  *(_OWORD *)(v0 + 27) = *v3;
  uint64_t v6 = v5;
  swift_unknownObjectRetain();
  swift_release();
  if (v6)
  {
    IntentParameter.wrappedValue.getter();
    *((unsigned char *)v0 + 241) = *((unsigned char *)v0 + 240);
    v0[29] = static MainActor.shared.getter();
    uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1005666CC, v8, v7);
  }
  else
  {
    swift_release();
    uint64_t v9 = (void *)v0[25];
    static IntentResult.result<>()();

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_1005666CC()
{
  uint64_t v1 = *(void *)(v0 + 224);
  char v2 = *(unsigned char *)(v0 + 241);
  uint64_t v3 = *(void *)(v0 + 216);
  swift_release();
  sub_100ABF40C(v2, v3, v1);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v5 = *(void *)(v0 + 184);
  return _swift_task_switch(sub_100566750, v4, v5);
}

uint64_t sub_100566750()
{
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v1 = *(void **)(v0 + 200);
  static IntentResult.result<>()();

  swift_task_dealloc();
  swift_task_dealloc();
  char v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1005667EC()
{
  swift_release();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100566878(uint64_t a1)
{
  return sub_100567C2C(a1, qword_101719EF0);
}

uint64_t sub_100566884()
{
  uint64_t v0 = sub_1005057FC(&qword_101673BC0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v2 = sub_1005057FC(&qword_101673BC8);
  __chkstk_darwin(v2, v3);
  sub_100566B70();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  sub_1005057FC(&qword_101673BD0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v5._countAndFlagsBits = 0x697320746E6F6620;
  v5._object = (void *)0xEE00206E6F20657ALL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1005057FC(qword_101673BD8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v6);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_100566A78@<X0>(uint64_t a1@<X8>)
{
  return sub_100568398(&qword_10166EBC8, (uint64_t)qword_101719EF0, a1);
}

uint64_t sub_100566AAC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528D08;
  return sub_100566130(a1);
}

unint64_t sub_100566B48(uint64_t a1)
{
  unint64_t result = sub_100566B70();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100566B70()
{
  unint64_t result = qword_101673AC8;
  if (!qword_101673AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673AC8);
  }
  return result;
}

uint64_t sub_100566BC4(uint64_t a1)
{
  unint64_t v2 = sub_100566B70();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_100566C04()
{
  unint64_t result = qword_101673AD0;
  if (!qword_101673AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673AD0);
  }
  return result;
}

uint64_t sub_100566C58()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_100566C7C()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_100566CA0()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_100566CC4@<X0>(uint64_t *a1@<X8>)
{
  id v72 = a1;
  uint64_t v1 = sub_1005057FC(&qword_101673B30);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v66 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for InputConnectionBehavior();
  uint64_t v73 = *(void *)(v71 - 8);
  __chkstk_darwin(v71, v4);
  char v70 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_101673B38);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v69 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  NSString v68 = (char *)&v48 - v11;
  uint64_t v12 = sub_1005057FC(&qword_101691F20);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v67 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v15 - 8, v16);
  Swift::OpaquePointer v49 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  uint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for Locale();
  __chkstk_darwin(v23 - 8, v24);
  uint64_t v25 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v25 - 8, v26);
  uint64_t v27 = type metadata accessor for LocalizedStringResource();
  uint64_t v60 = v27;
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v29);
  UIMenuElementSize v56 = (char *)&v48 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1005057FC(&qword_101673B48);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v31 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  id v32 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 104);
  unsigned int v52 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v53 = v18;
  v32(v22, enum case for LocalizedStringResource.BundleDescription.main(_:), v18);
  uint64_t v55 = v32;
  uint64_t v54 = v19 + 104;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v32(v22, v31, v18);
  uint64_t v33 = v49;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v34 = *(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56);
  uint64_t v59 = v28 + 56;
  uint64_t v61 = v34;
  v34(v33, 0, 1, v27);
  uint64_t v35 = type metadata accessor for CRLBoardEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v67, 1, 1, v35);
  uint64_t v36 = type metadata accessor for IntentDialog();
  uint64_t v37 = *(void *)(v36 - 8);
  Swift::String v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
  uint64_t v57 = v38;
  uint64_t v58 = v37 + 56;
  v38(v68, 1, 1, v36);
  v38(v69, 1, 1, v36);
  uint64_t v64 = sub_1005057FC(&qword_101673B50);
  unint64_t v65 = 0x800000010123B260;
  unint64_t v74 = 0xD00000000000001FLL;
  unint64_t v75 = 0x800000010123B260;
  AnyHashable.init<A>(_:)();
  uint64_t v63 = type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v76 = AppDependency.__allocating_init(key:manager:)();
  unsigned int v50 = enum case for InputConnectionBehavior.default(_:);
  id v39 = *(void (**)(void))(v73 + 104);
  v73 += 104;
  unsigned int v51 = (void (*)(char *, void, uint64_t))v39;
  v39(v70);
  sub_100568898();
  sub_1005688EC((unint64_t *)&qword_101673B60, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  *id v72 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)();
  uint64_t v67 = (char *)sub_1005057FC(&qword_101673B68);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v40 = v52;
  uint64_t v41 = v53;
  uint64_t v42 = v55;
  v55(v22, v52, v53);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v42(v22, v40, v41);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v61(v33, 0, 1, v60);
  uint64_t v43 = type metadata accessor for ResizeBehavior();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v66, 1, 1, v43);
  unint64_t v44 = v57;
  v57(v68, 1, 1, v36);
  v44(v69, 1, 1, v36);
  v51(v70, v50, v71);
  sub_1005688EC(&qword_101673B70, (void (*)(uint64_t))&type metadata accessor for ResizeBehavior);
  dispatch thunk of static CaseIterable.allCases.getter();
  sub_1005688EC(&qword_101673B78, (void (*)(uint64_t))&type metadata accessor for ResizeBehavior);
  uint64_t v45 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  NSString v46 = v72;
  v72[1] = v45;
  unint64_t v74 = 0xD00000000000001FLL;
  unint64_t v75 = v65;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  v46[2] = result;
  v46[6] = (uint64_t)&type metadata for CRLChangeSelectionFontSizeIntentPerformer;
  v46[7] = (uint64_t)&off_101521B70;
  return result;
}

uint64_t sub_1005676F4(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  uint64_t v3 = type metadata accessor for ResizeBehavior();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  type metadata accessor for CRLBoardEntity();
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[17] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[18] = v5;
  v2[19] = v4;
  return _swift_task_switch(sub_100567824, v5, v4);
}

uint64_t sub_100567824()
{
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 96);
  sub_1005657E0((uint64_t *)(v0 + 16));
  IntentParameter.wrappedValue.getter();
  sub_1005689B8(v1, v2, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  IntentParameter.wrappedValue.setter();
  sub_100568A20(v1, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  IntentParameter.wrappedValue.getter();
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5);
  if (v6 != enum case for ResizeBehavior.larger(_:))
  {
    if (v6 == enum case for ResizeBehavior.smaller(_:))
    {
      char v7 = 1;
      goto LABEL_6;
    }
    (*(void (**)(void, void))(*(void *)(v0 + 104) + 8))(*(void *)(v0 + 112), *(void *)(v0 + 96));
  }
  char v7 = 0;
LABEL_6:
  *(unsigned char *)(v0 + 176) = v7;
  IntentParameter.wrappedValue.setter();
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1005679BC;
  uint64_t v9 = *(void *)(v0 + 80);
  return sub_100566130(v9);
}

uint64_t sub_1005679BC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  uint64_t v4 = *(void *)(v2 + 144);
  if (v0) {
    uint64_t v5 = sub_100567B8C;
  }
  else {
    uint64_t v5 = sub_100567AF8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100567AF8()
{
  swift_release();
  sub_100568988(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100567B8C()
{
  swift_release();
  sub_100568988(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100567C20(uint64_t a1)
{
  return sub_100567C2C(a1, qword_101719F08);
}

uint64_t sub_100567C2C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Locale();
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  sub_100568B28(v12, a2);
  sub_100556B74(v12, (uint64_t)a2);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v3);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_100567E24()
{
  uint64_t v0 = sub_1005057FC(&qword_101673BA0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v2 = sub_1005057FC(&qword_101673BA8);
  __chkstk_darwin(v2, v3);
  sub_1005681D8();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  sub_1005057FC(&qword_101673BB0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v5._countAndFlagsBits = 0x697320746E6F6620;
  v5._object = (void *)0xEE00206E6F20657ALL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1005057FC(&qword_101673BB8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v6);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_100568018(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ResizeBehavior();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  IntentParameter.wrappedValue.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_100568108(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_100568164;
}

void sub_100568164(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

unint64_t sub_1005681B0(uint64_t a1)
{
  unint64_t result = sub_1005681D8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1005681D8()
{
  unint64_t result = qword_101673AD8;
  if (!qword_101673AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673AD8);
  }
  return result;
}

unint64_t sub_100568234()
{
  unint64_t result = qword_101673AE0;
  if (!qword_101673AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673AE0);
  }
  return result;
}

unint64_t sub_100568290()
{
  unint64_t result = qword_101673AE8;
  if (!qword_101673AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673AE8);
  }
  return result;
}

unint64_t sub_1005682E8()
{
  unint64_t result = qword_101673AF0;
  if (!qword_101673AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673AF0);
  }
  return result;
}

uint64_t sub_10056833C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100568358()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100568374@<X0>(uint64_t a1@<X8>)
{
  return sub_100568398(&qword_10166EBD0, (uint64_t)qword_101719F08, a1);
}

uint64_t sub_100568398@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for LocalizedStringResource();
  uint64_t v6 = sub_100556B74(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_100568438(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528488;
  return sub_1005676F4(a1);
}

uint64_t sub_1005684D4(uint64_t a1)
{
  unint64_t v2 = sub_1005681D8();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

__n128 initializeWithTake for CRLResizeSelectionFontIntent(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CRLResizeSelectionFontIntent()
{
  return &type metadata for CRLResizeSelectionFontIntent;
}

uint64_t destroy for CRLInsertFilesToBoardIntent(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();

  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 24);
}

uint64_t initializeWithCopy for CRLInsertFilesToBoardIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = a2 + 24;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  swift_retain();
  swift_retain();
  v7(a1 + 24, v4, v6);
  return a1;
}

void *assignWithCopy for CRLInsertFilesToBoardIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  sub_10054BB2C(a1 + 3, a2 + 3);
  return a1;
}

uint64_t assignWithTake for CRLInsertFilesToBoardIntent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLInsertFilesToBoardIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLInsertFilesToBoardIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLResizeSelectionFontIntent_v2()
{
  return &type metadata for CRLResizeSelectionFontIntent_v2;
}

uint64_t sub_1005687E4()
{
  return sub_100523288(&qword_101673B00, &qword_101673B08);
}

uint64_t sub_100568820()
{
  return sub_100523288(&qword_101673B10, &qword_101673B18);
}

uint64_t sub_10056885C()
{
  return sub_100523288(&qword_101673B20, &qword_101673B28);
}

unint64_t sub_100568898()
{
  unint64_t result = qword_101673B58;
  if (!qword_101673B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673B58);
  }
  return result;
}

uint64_t sub_1005688EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100568934()
{
  unint64_t result = qword_101673B88;
  if (!qword_101673B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_101673B88);
  }
  return result;
}

uint64_t sub_100568988(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005689B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100568A20(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100568A80()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100568AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100568AC8()
{
  return swift_release();
}

uint64_t sub_100568AD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100568AFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t *sub_100568B28(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_100568BA0()
{
  return swift_initClassMetadata2();
}

void sub_100568BF8()
{
}

uint64_t sub_100568C54()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 16) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100568CE8, v2, v1);
}

uint64_t sub_100568CE8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100568D48()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 16) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100568EA0, v2, v1);
}

uint64_t sub_100568DDC()
{
  swift_bridgeObjectRelease();
  sub_100523398(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100568E1C()
{
  sub_100568DDC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLGroupSessionManager()
{
  return sub_100568E70();
}

uint64_t sub_100568E68(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 96);
}

uint64_t sub_100568E70()
{
  return swift_getGenericMetadata();
}

id sub_100568FF4(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) == 0)
  {
    uint64_t v7 = *(void *)(a1 + 16);
    uint64_t v8 = v1;
    if (v7 > 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v3 = v1;
  if (__CocoaSet.count.getter() <= 0)
  {
LABEL_3:
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    NSString v5 = String._bridgeToObjectiveC()();
    *(void *)(inited + 56) = sub_10056A14C();
    *(void *)(inited + 64) = sub_10056A4D0((unint64_t *)&qword_101677140, 255, (void (*)(uint64_t))sub_10056A14C);
    *(void *)(inited + 32) = v5;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLBoardItemSelection.swift", 91, 2, 18, (uint64_t)"Invalid parameter not satisfied: %{public}@", 43, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLBoardItemSelection.swift", 91, 2, 18);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
LABEL_4:
  *(void *)&v1[OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems] = a1;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for CRLBoardItemSelection();
  return [super init];
}

uint64_t sub_100569260(uint64_t a1)
{
  sub_100557A70(a1, (uint64_t)v7);
  if (!v8)
  {
    sub_10052E2B0((uint64_t)v7);
    goto LABEL_7;
  }
  type metadata accessor for CRLBoardItemSelection();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    char v4 = 0;
    return v4 & 1;
  }
  swift_getObjectType();
  if (![v6 isMemberOfClass:swift_getObjCClassFromMetadata()])
  {

    goto LABEL_7;
  }
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems);
  uint64_t v3 = *(void *)&v6[OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v4 = sub_100A3D424(v2, v3);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1005693F8()
{
  uint64_t v32 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v32 - 8);
  __chkstk_darwin(v32, v2);
  char v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems);
  uint64_t v6 = v5;
  unint64_t v7 = v5 & 0xC000000000000001;
  if ((v5 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = __CocoaSet.count.getter();
    if (v8) {
      goto LABEL_3;
    }
LABEL_6:
    swift_bridgeObjectRelease();
LABEL_23:
    sub_10056A4D0((unint64_t *)&qword_1016770E0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v28 = Array<A>.hashValue.getter();
    swift_bridgeObjectRelease();
    return v28;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  swift_bridgeObjectRetain();
  if (!v8) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v37 = _swiftEmptyArrayStorage;
  sub_1006BB544(0, v8 & ~(v8 >> 63), 0);
  if (v7)
  {
    uint64_t result = __CocoaSet.startIndex.getter();
    unsigned __int8 v11 = 1;
  }
  else
  {
    uint64_t result = sub_1006678A4(v6);
    unsigned __int8 v11 = v12 & 1;
  }
  uint64_t v34 = result;
  uint64_t v35 = v10;
  unsigned __int8 v36 = v11;
  if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v13 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v6 < 0) {
      uint64_t v13 = v6;
    }
    uint64_t v31 = v13;
    uint64_t v29 = v1 + 32;
    uint64_t v30 = v1;
    do
    {
      while (1)
      {
        sub_100666E14(v34, v35, v36, v6);
        uint64_t v23 = v22;
        (*(void (**)(void))((swift_isaMask & *v22) + 0x88))();

        uint64_t v24 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB544(0, *((void *)v24 + 2) + 1, 1);
          uint64_t v24 = v37;
        }
        unint64_t v26 = *((void *)v24 + 2);
        unint64_t v25 = *((void *)v24 + 3);
        if (v26 >= v25 >> 1)
        {
          sub_1006BB544(v25 > 1, v26 + 1, 1);
          uint64_t v24 = v37;
        }
        *((void *)v24 + 2) = v26 + 1;
        uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v1 + 32))((unint64_t)v24+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(void *)(v1 + 72) * v26, v4, v32);
        uint64_t v37 = v24;
        if (v7) {
          break;
        }
        uint64_t v14 = v34;
        uint64_t v15 = v35;
        char v16 = v36;
        uint64_t v17 = sub_100666C8C(v34, v35, v36, v6);
        uint64_t v19 = v18;
        char v21 = v20;
        sub_10056A4C4(v14, v15, v16);
        uint64_t v34 = v17;
        uint64_t v35 = v19;
        unint64_t v7 = 0;
        uint64_t v1 = v30;
        unsigned __int8 v36 = v21 & 1;
        if (!--v8) {
          goto LABEL_22;
        }
      }
      if ((v36 & 1) == 0) {
        goto LABEL_25;
      }
      if (__CocoaSet.Index.handleBitPattern.getter()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      sub_1005057FC(&qword_1016787A0);
      uint64_t v27 = (void (*)(unsigned char *, void))Set.Index._asCocoa.modify();
      __CocoaSet.formIndex(after:isUnique:)();
      v27(v33, 0);
      --v8;
    }
    while (v8);
LABEL_22:
    sub_10056A4C4(v34, v35, v36);
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

Swift::Int sub_100569850(uint64_t a1)
{
  if ((*(void *)(v1 + OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems) & 0xC000000000000001) != 0)
  {
    uint64_t v3 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      type metadata accessor for CRLBoardItem(0);
      do
      {
        swift_dynamicCast();
        if ([v16 isKindOfClass:swift_getObjCClassFromMetadata()])
        {
          unint64_t v4 = *((void *)&_swiftEmptySetSingleton + 2);
          if (*((void *)&_swiftEmptySetSingleton + 3) <= v4) {
            sub_100CBF18C(v4 + 1);
          }
          Swift::Int result = NSObject._rawHashValue(seed:)(*((void *)&_swiftEmptySetSingleton + 5));
          uint64_t v6 = (char *)&_swiftEmptySetSingleton + 56;
          uint64_t v7 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
          unint64_t v8 = result & ~v7;
          unint64_t v9 = v8 >> 6;
          if (((-1 << v8) & ~*((void *)&_swiftEmptySetSingleton + (v8 >> 6) + 7)) != 0)
          {
            unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*((void *)&_swiftEmptySetSingleton + (v8 >> 6) + 7))) | v8 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            char v11 = 0;
            unint64_t v12 = (unint64_t)(63 - v7) >> 6;
            do
            {
              if (++v9 == v12 && (v11 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              BOOL v13 = v9 == v12;
              if (v9 == v12) {
                unint64_t v9 = 0;
              }
              v11 |= v13;
              uint64_t v14 = *(void *)&v6[8 * v9];
            }
            while (v14 == -1);
            unint64_t v10 = __clz(__rbit64(~v14)) + (v9 << 6);
          }
          *(void *)&v6[(v10 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v10;
          *(void *)(*((void *)&_swiftEmptySetSingleton + 6) + 8 * v10) = v16;
          ++*((void *)&_swiftEmptySetSingleton + 2);
        }
        else
        {
        }
      }
      while (__CocoaSet.Iterator.next()());
      uint64_t v3 = &_swiftEmptySetSingleton;
    }
    swift_release();
  }
  else
  {
    uint64_t v15 = swift_bridgeObjectRetain();
    return (Swift::Int)sub_10056A18C(v15, a1);
  }
  return (Swift::Int)v3;
}

void sub_100569B30()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems);
  if ((v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLBoardItem(0);
    sub_10056A4D0((unint64_t *)&qword_101676C20, 255, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v19;
    uint64_t v17 = v20;
    uint64_t v2 = v21;
    uint64_t v3 = v22;
    unint64_t v4 = v23;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v17 = v1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  int64_t v16 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    uint64_t v12 = v3;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_29;
    }
    type metadata accessor for CRLBoardItem(0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v10 = v18;
    swift_unknownObjectRelease();
    if (!v18) {
      goto LABEL_29;
    }
LABEL_10:
    unsigned int v11 = [v10 isKindOfClass:swift_getObjCClassFromMetadata()];

    if (v11) {
      goto LABEL_29;
    }
  }
  if (v4)
  {
    unint64_t v8 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v9 = v8 | (v3 << 6);
LABEL_9:
    id v10 = *(id *)(*(void *)(v1 + 48) + 8 * v9);
    if (!v10) {
      goto LABEL_29;
    }
    goto LABEL_10;
  }
  int64_t v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 >= v16) {
      goto LABEL_29;
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    ++v3;
    if (!v14)
    {
      uint64_t v3 = v12 + 2;
      if (v12 + 2 >= v16) {
        goto LABEL_29;
      }
      unint64_t v14 = *(void *)(v17 + 8 * v3);
      if (!v14)
      {
        uint64_t v3 = v12 + 3;
        if (v12 + 3 >= v16) {
          goto LABEL_29;
        }
        unint64_t v14 = *(void *)(v17 + 8 * v3);
        if (!v14)
        {
          uint64_t v3 = v12 + 4;
          if (v12 + 4 >= v16) {
            goto LABEL_29;
          }
          unint64_t v14 = *(void *)(v17 + 8 * v3);
          if (!v14)
          {
            uint64_t v15 = v12 + 5;
            while (v16 != v15)
            {
              unint64_t v14 = *(void *)(v17 + 8 * v15++);
              if (v14)
              {
                uint64_t v3 = v15 - 1;
                goto LABEL_26;
              }
            }
LABEL_29:
            sub_10052E1EC();
            return;
          }
        }
      }
    }
LABEL_26:
    unint64_t v4 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v3 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t sub_100569ED0()
{
  sub_10056A14C();
  uint64_t v1 = NSString.init(stringLiteral:)();
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10117DF40;
  *(void *)(v2 + 56) = type metadata accessor for CRLBoardItemSelection();
  *(void *)(v2 + 64) = sub_10056A4D0(&qword_101673CC0, v3, (void (*)(uint64_t))type metadata accessor for CRLBoardItemSelection);
  *(void *)(v2 + 32) = v0;
  uint64_t v4 = *(void *)&v0[OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems];
  if ((v4 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = v0;
    swift_bridgeObjectRetain();
    uint64_t v6 = __CocoaSet.count.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)(v4 + 16);
    uint64_t v7 = v0;
  }
  *(void *)(v2 + 96) = &type metadata for Int;
  *(void *)(v2 + 104) = &protocol witness table for Int;
  *(void *)(v2 + 72) = v6;
  type metadata accessor for CRLBoardItem(0);
  sub_10056A4D0((unint64_t *)&qword_101676C20, 255, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
  swift_bridgeObjectRetain();
  uint64_t v8 = Set.description.getter();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  *(void *)(v2 + 136) = &type metadata for String;
  *(void *)(v2 + 144) = sub_100528BE4();
  *(void *)(v2 + 112) = v8;
  *(void *)(v2 + 120) = v10;
  unsigned int v11 = NSString.init(format:_:)();

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v12;
}

id sub_10056A0E4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLBoardItemSelection();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLBoardItemSelection()
{
  return self;
}

unint64_t sub_10056A14C()
{
  unint64_t result = qword_101673918;
  if (!qword_101673918)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101673918);
  }
  return result;
}

unint64_t *sub_10056A18C(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  char v4 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, a2);
    bzero((char *)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_10056A304((unint64_t *)((char *)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3);
    swift_release();
    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_10056A304((unint64_t *)v8, v5, v3);
    swift_release();
    swift_slowDealloc();
  }
  return v7;
}

unint64_t *sub_10056A304(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = result;
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (2)
  {
    uint64_t v18 = v4;
    do
    {
      if (v9)
      {
        unint64_t v11 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v12 = v11 | (v5 << 6);
      }
      else
      {
        int64_t v13 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
          __break(1u);
LABEL_25:
          __break(1u);
          goto LABEL_26;
        }
        if (v13 >= v10) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v6 + 8 * v13);
        ++v5;
        if (!v14)
        {
          int64_t v5 = v13 + 1;
          if (v13 + 1 >= v10) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v6 + 8 * v5);
          if (!v14)
          {
            int64_t v5 = v13 + 2;
            if (v13 + 2 >= v10) {
              goto LABEL_23;
            }
            unint64_t v14 = *(void *)(v6 + 8 * v5);
            if (!v14)
            {
              int64_t v15 = v13 + 3;
              if (v15 >= v10)
              {
LABEL_23:
                swift_retain();
                return (unint64_t *)sub_10052BE64(v17, a2, v18, a3);
              }
              unint64_t v14 = *(void *)(v6 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  int64_t v5 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_25;
                  }
                  if (v5 >= v10) {
                    goto LABEL_23;
                  }
                  unint64_t v14 = *(void *)(v6 + 8 * v5);
                  ++v15;
                  if (v14) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v5 = v15;
            }
          }
        }
LABEL_22:
        unint64_t v9 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
      }
      unint64_t result = (unint64_t *)[*(id *)(*(void *)(a3 + 48) + 8 * v12) isKindOfClass:swift_getObjCClassFromMetadata()];
    }
    while (!result);
    *(unint64_t *)((char *)v17 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v4 = v18 + 1;
    if (!__OFADD__(v18, 1)) {
      continue;
    }
    break;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_10056A4C4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10056A4D0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10056A518(uint64_t a1)
{
  if ((uint64_t)[v1 characterCount] < a1) {
    goto LABEL_14;
  }
  id v3 = v1;
  id v4 = [v3 characterCount];
  if ((uint64_t)v4 < a1)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v5 = (uint64_t)v4;
  if ((uint64_t)[v3 characterCount] < (uint64_t)v4)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(storage:range:)", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPParagraphIterator.swift", 88, 2, 31, (uint64_t)"Bad range when initializing CRLWPStorage.Paragraphs", 51, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Bad range when initializing CRLWPStorage.Paragraphs");
    uint64_t v17 = "init(storage:range:)";
    uint64_t v18 = 20;
    uint64_t v19 = 31;
    goto LABEL_16;
  }
  uint64_t v6 = (void *)sub_10056A7DC(v3, a1, v5);
  uint64_t v8 = v7;
  uint64_t v10 = v9;

  if (v8 < v10)
  {

    return 0;
  }
  unint64_t v12 = (char *)[v6 charIndexForParagraphAtIndex:v10];
  if ((uint64_t)[v6 characterCount] < (uint64_t)v12) {
    goto LABEL_11;
  }
  NSNotFound.getter();
  id v11 = [v6 paragraphIndexAtCharIndex:v12];
  int64_t v13 = (char *)[v6 textRangeForParagraphAtIndex:v10];
  uint64_t v15 = v14;

  if (!__OFADD__(v13, v15))
  {
    if ((uint64_t)&v13[v15] >= (uint64_t)v12) {
      return (uint64_t)v11;
    }
    goto LABEL_13;
  }
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"paragraphInfo(at:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPParagraphIterator.swift", 88, 2, 60, (uint64_t)"Bad charIndex when getting paragraphInfo", 40, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Bad charIndex when getting paragraphInfo");
  uint64_t v17 = "paragraphInfo(at:)";
  uint64_t v18 = 18;
  uint64_t v19 = 60;
LABEL_16:
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)v17, v18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPParagraphIterator.swift", 88, 2, v19);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v20, v21);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10056A7DC(void *a1, uint64_t a2, uint64_t a3)
{
  if ((uint64_t)[a1 characterCount] < a3)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(with:charRange:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPParagraphIterator.swift", 88, 2, 81, (uint64_t)"Bad charRange in CRLWPParagraphIterator", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Bad charRange in CRLWPParagraphIterator");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(with:charRange:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPParagraphIterator.swift", 88, 2, 81);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v8, v9);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    id v6 = a1;
    [v6 paragraphIndexAtCharIndex:a2];
    [v6 paragraphIndexAtCharIndex:a3];
    return (uint64_t)v6;
  }
  return result;
}

uint64_t type metadata accessor for CRLAccountUtilities()
{
  return self;
}

id sub_10056A960()
{
  id result = [self defaultStore];
  if (result)
  {
    uint64_t v1 = result;
    id v2 = [result aa_primaryAppleAccount];

    if (v2)
    {
      if ([v2 isEnabledForDataclass:ACAccountDataclassFreeform])
      {
        id v3 = v2;
        id v2 = (id)sub_1008E1FEC();
      }
      else
      {

        return 0;
      }
    }
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10056AA28(uint64_t a1, void *a2, void *a3)
{
  Swift::String v38 = a3;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  __chkstk_darwin(v5, v6);
  uint64_t v34 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for DispatchQoS();
  uint64_t v33 = *(void *)(v35 - 8);
  __chkstk_darwin(v35, v8);
  uint64_t v32 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC(&qword_101673D90);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __n128 v19 = __chkstk_darwin(v15, v18);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))((char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v15, v19);
  unint64_t v20 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v21 + v20, (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
  uint64_t v22 = v38;
  if (v38)
  {
    unint64_t v44 = sub_10056B3EC;
    uint64_t v45 = v21;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v41 = *(void *)"";
    uint64_t v42 = sub_100679958;
    uint64_t v43 = &unk_1015083F8;
    unint64_t v23 = _Block_copy(&aBlock);
    id v24 = a2;
    swift_retain();
    id v25 = v22;
    swift_release();
    [v25 performAsync:v23];
    swift_release();
    _Block_release(v23);
  }
  else
  {
    sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v14, enum case for DispatchQoS.QoSClass.default(_:), v10);
    id v26 = a2;
    uint64_t v27 = (void *)static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    unint64_t v44 = sub_10056B3EC;
    uint64_t v45 = v21;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v41 = *(void *)"";
    uint64_t v42 = sub_100679958;
    uint64_t v43 = &unk_1015083D0;
    uint64_t v28 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v29 = v32;
    static DispatchQoS.unspecified.getter();
    id v39 = _swiftEmptyArrayStorage;
    sub_100522CDC();
    sub_1005057FC((uint64_t *)&unk_1016725D0);
    sub_10056B494();
    uint64_t v30 = v34;
    uint64_t v31 = v37;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v28);
    swift_release();

    (*(void (**)(char *, uint64_t))(v36 + 8))(v30, v31);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v35);
    swift_release();
  }
}

uint64_t sub_10056AF20(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return _swift_task_switch(sub_10056AF40, 0, 0);
}

uint64_t sub_10056AF40()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  id v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  uint64_t v5 = sub_1005057FC(&qword_101673D88);
  *id v4 = v0;
  v4[1] = sub_10056B044;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000019, 0x800000010123B760, sub_10056B314, v3, v5);
}

uint64_t sub_10056B044()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_10056B15C, 0, 0);
}

uint64_t sub_10056B15C()
{
  uint64_t v1 = (void *)v0[2];
  if (v1)
  {
    uint64_t v2 = (void *)v0[4];
    id v3 = [objc_allocWithZone((Class)CRLImage) initWithCGImage:v1];
    type metadata accessor for CRLAccessibilitySceneDescriptionHelper();
    [v2 unscaledClipRect];
    CGFloat v5 = v4;
    CGFloat v7 = v6;
    CGFloat v9 = v8;
    CGFloat v11 = v10;
    id v12 = [v2 canvas];
    id v13 = [v12 allReps];

    sub_10050BF48(0, (unint64_t *)&qword_101678790);
    sub_10055A7A4();
    uint64_t v14 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100528D14(v14, 2u, v5, v7, v9, v11);
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    if (v16)
    {
      NSString v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v17 = 0;
    }
    [v3 setCrlaxDescription:v17];
  }
  else
  {
    id v3 = 0;
  }
  uint64_t v18 = (uint64_t (*)(id))v0[1];
  return v18(v3);
}

void sub_10056B314(uint64_t a1)
{
  sub_10056AA28(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10056B31C()
{
  uint64_t v1 = sub_1005057FC(&qword_101673D90);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10056B3EC()
{
  sub_1005057FC(&qword_101673D90);
  [*(id *)(v0 + 16) newImage];
  sub_1005057FC(&qword_101673D90);
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_10056B47C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10056B48C()
{
  return swift_release();
}

unint64_t sub_10056B494()
{
  unint64_t result = qword_1016747F0;
  if (!qword_1016747F0)
  {
    sub_100522D34((uint64_t *)&unk_1016725D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016747F0);
  }
  return result;
}

id sub_10056B4F8()
{
  id result = [v0 collectionView];
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v2 = result;
  id v3 = [result visibleCells];

  sub_10050BF48(0, (unint64_t *)&qword_101676330);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    id result = (id)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v5 = (uint64_t)result;
    if (result) {
      goto LABEL_4;
    }
    return (id)swift_bridgeObjectRelease_n();
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id result = (id)swift_bridgeObjectRetain();
  if (!v5) {
    return (id)swift_bridgeObjectRelease_n();
  }
LABEL_4:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v4 + 8 * i + 32);
      }
      double v8 = v7;
      [v7 setNeedsUpdateConfiguration];
    }
    return (id)swift_bridgeObjectRelease_n();
  }
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

id sub_10056B65C()
{
  [self removeKeyboardObserver:v0];
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_syncDidEndObserver];
  if (v1)
  {
    uint64_t v2 = self;
    swift_unknownObjectRetain();
    id v3 = [v2 defaultCenter];
    [v3 removeObserver:v1];
    swift_unknownObjectRelease();
  }
  uint64_t v4 = *(void *)&v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_syncDidBeginObserver];
  if (v4)
  {
    uint64_t v5 = self;
    swift_unknownObjectRetain();
    id v6 = [v5 defaultCenter];
    [v6 removeObserver:v4];
    swift_unknownObjectRelease();
  }
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for CRLiOSSidebarViewController();
  return [super dealloc];
}

void sub_10056B858()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_1005057FC(&qword_101673EA8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v7 = __chkstk_darwin(v3, v6);
  uint64_t v79 = (char *)v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  double v10 = (char *)v77 - v9;
  CGFloat v11 = (objc_class *)type metadata accessor for CRLiOSSidebarViewController();
  v86.receiver = v1;
  v86.super_class = v11;
  [super viewDidLoad];
  id v12 = [v1 collectionView];
  if (!v12)
  {
    __break(1u);
    goto LABEL_27;
  }
  id v13 = v12;
  v77[1] = ObjectType;
  uint64_t v78 = v3;
  [v12 setAllowsMultipleSelection:0];

  id v14 = [v1 collectionView];
  if (!v14)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v15 = v14;
  uint64_t v16 = type metadata accessor for iCloudStatusFooter();
  ObjCClassFromMetadatdouble a = swift_getObjCClassFromMetadata();
  CGAffineTransform aBlock = (void **)v16;
  uint64_t v18 = UICollectionElementKindSectionFooter;
  sub_1005057FC(&qword_101673EB0);
  String.init<A>(describing:)();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v15 registerClass:ObjCClassFromMetadata forSupplementaryViewOfKind:v18 withReuseIdentifier:v19];

  id v20 = [v1 collectionView];
  if (!v20)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v21 = v20;
  uint64_t v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v23 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  UIImage_optional v84 = sub_100575ED0;
  uint64_t v85 = v22;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v81 = *(void *)"";
  double v82 = sub_10065AEF4;
  unint64_t v83 = &unk_101508610;
  id v24 = _Block_copy(&aBlock);
  swift_retain();
  id v25 = [v23 initWithSectionProvider:v24];
  _Block_release(v24);
  swift_release();
  swift_release();
  [v21 setCollectionViewLayout:v25 animated:0];

  id v26 = [v1 collectionView];
  if (!v26)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v27 = v26;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_10050BF48(0, &qword_101673EB8);
  type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v29 = v78;
  uint64_t v28 = v79;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v79, v10, v78);
  unint64_t v30 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v31 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v31 + v30, v28, v29);
  id v32 = objc_allocWithZone((Class)sub_1005057FC(&qword_101673EC0));
  id v33 = v27;
  uint64_t v34 = (void *)UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v29);

  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();
  swift_release();
  uint64_t v36 = *(void *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_libraryProvider];
  uint64_t v35 = *(void *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_libraryProvider + 8];
  type metadata accessor for CRLiOSBoardLibraryViewModelController();
  swift_allocObject();
  uint64_t v37 = v34;
  swift_unknownObjectRetain();
  Swift::String v38 = sub_1007779CC(v37, v36, v35);
  uint64_t v39 = OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController] = v38;
  swift_release();
  uint64_t v40 = *(void *)&v1[v39];
  if (!v40)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  *(void *)(v40 + 24) = &off_101508420;
  swift_unknownObjectWeakAssign();
  sub_10056C6A8();
  id v41 = [self mainBundle];
  NSString v42 = String._bridgeToObjectiveC()();
  NSString v43 = String._bridgeToObjectiveC()();
  id v44 = [v41 localizedStringForKey:v42 value:v43 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v45 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setTitle:v45];

  id v46 = [self sharedApplication];
  id v47 = [v46 delegate];

  if (!v47)
  {
LABEL_31:
    __break(1u);
    return;
  }
  type metadata accessor for CRLiOSAppDelegate();
  uint64_t v48 = *(void *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_syncDriver);
  uint64_t v79 = v37;
  if (v48)
  {
    if (*(unsigned char *)(v48 + 136))
    {
      swift_unknownObjectRelease();
      char v49 = v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges];
      v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges] = 1;
      if (v49) {
        goto LABEL_13;
      }
    }
    else
    {
      int v75 = *(unsigned __int8 *)(v48 + 137);
      swift_unknownObjectRelease();
      int v76 = v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges];
      v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges] = v75;
      if (v75 == v76) {
        goto LABEL_13;
      }
    }
    goto LABEL_12;
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isFetchingChanges", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2, 206, (uint64_t)"Asking for fetch status before the sync driver exists.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFetchingChanges", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2, 206);
  swift_unknownObjectRelease();
  char v50 = v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges];
  v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges] = 0;
  if (v50) {
LABEL_12:
  }
    sub_10056B4F8();
LABEL_13:
  unsigned int v51 = self;
  id v52 = [v51 defaultCenter];
  if (qword_10166FE48 != -1) {
    swift_once();
  }
  uint64_t v53 = qword_10171C3A8;
  uint64_t v54 = swift_allocObject();
  swift_unknownObjectWeakInit();
  UIImage_optional v84 = sub_100576008;
  uint64_t v85 = v54;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v81 = *(void *)"";
  double v82 = sub_1005E5680;
  unint64_t v83 = &unk_101508660;
  uint64_t v55 = _Block_copy(&aBlock);
  swift_release();
  id v56 = [v52 addObserverForName:v53 object:0 queue:0 usingBlock:v55];
  _Block_release(v55);

  *(void *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_syncDidBeginObserver] = v56;
  swift_unknownObjectRelease();
  id v57 = [v51 defaultCenter];
  if (qword_10166FE40 != -1) {
    swift_once();
  }
  uint64_t v58 = qword_10171C3A0;
  uint64_t v59 = swift_allocObject();
  swift_unknownObjectWeakInit();
  UIImage_optional v84 = sub_100576040;
  uint64_t v85 = v59;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v81 = *(void *)"";
  double v82 = sub_1005E5680;
  unint64_t v83 = &unk_101508688;
  uint64_t v60 = _Block_copy(&aBlock);
  swift_release();
  id v61 = [v57 addObserverForName:v58 object:0 queue:0 usingBlock:v60];
  _Block_release(v60);

  *(void *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_syncDidEndObserver] = v61;
  swift_unknownObjectRelease();
  int v62 = *(unsigned __int8 *)(*(void *)(v36 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController)
                           + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_isSyncing);
  int v63 = v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingHighlights];
  v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingHighlights] = v62;
  if (v62 != v63) {
    sub_10056B4F8();
  }
  id v64 = [v51 defaultCenter];
  if (qword_10166EBB0 != -1) {
    swift_once();
  }
  uint64_t v65 = qword_101719E40;
  uint64_t v66 = swift_allocObject();
  swift_unknownObjectWeakInit();
  UIImage_optional v84 = sub_100576078;
  uint64_t v85 = v66;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v81 = *(void *)"";
  double v82 = sub_1005E5680;
  unint64_t v83 = &unk_1015086B0;
  uint64_t v67 = _Block_copy(&aBlock);
  swift_release();
  id v68 = [v64 addObserverForName:v65 object:0 queue:0 usingBlock:v67];
  _Block_release(v67);

  *(void *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_highlightSyncDidEndObserver] = v68;
  swift_unknownObjectRelease();
  id v69 = [v51 defaultCenter];
  if (qword_10166EBB8 != -1) {
    swift_once();
  }
  uint64_t v70 = qword_101719E48;
  uint64_t v71 = swift_allocObject();
  swift_unknownObjectWeakInit();
  UIImage_optional v84 = sub_1005760B0;
  uint64_t v85 = v71;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v81 = *(void *)"";
  double v82 = sub_1005E5680;
  unint64_t v83 = &unk_1015086D8;
  id v72 = _Block_copy(&aBlock);
  swift_release();
  id v73 = [v69 addObserverForName:v70 object:0 queue:0 usingBlock:v72];
  _Block_release(v72);

  *(void *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_highlightSyncDidBeginObserver] = v73;
  swift_unknownObjectRelease();
  sub_1005057FC((uint64_t *)&unk_10168D9A0);
  uint64_t v74 = swift_allocObject();
  *(_OWORD *)(v74 + 16) = xmmword_10117D8C0;
  *(void *)(v74 + 32) = type metadata accessor for UITraitHorizontalSizeClass();
  *(void *)(v74 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  *(void *)(v74 + 48) = type metadata accessor for UITraitVerticalSizeClass();
  *(void *)(v74 + 56) = &protocol witness table for UITraitVerticalSizeClass;
  UIViewController.registerForTraitChanges<A>(_:handler:)();

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
}

uint64_t sub_10056C548(void *a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  if (!Strong) {
    return 0;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == a2 && v7 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      return 0;
    }
  }
  NSString v10 = String._bridgeToObjectiveC()();
  uint64_t v15 = type metadata accessor for iCloudStatusFooter();
  sub_1005057FC(&qword_101673EB0);
  String.init<A>(describing:)();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v13 = [a1 dequeueReusableSupplementaryViewOfKind:v10 withReuseIdentifier:v11 forIndexPath:isa v15];

  uint64_t result = swift_dynamicCastClass();
  if (result) {
    return result;
  }

  return 0;
}

void sub_10056C6A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  NSString v11 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v12);
  id v14 = (char *)&v27 - v13;
  unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
  if (qword_10166F580 != -1) {
    swift_once();
  }
  if (byte_10171B091 == 1)
  {
    Class v15 = sub_100729FC0(v0);
    if (v15)
    {
      uint64_t v16 = v15;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  if (qword_10166F578 != -1) {
    swift_once();
  }
  if (byte_10171B090 == 1)
  {
    sub_100991978(0, 0, 0, (uint64_t)v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_100522F00((uint64_t)v5, &qword_101672E90);
    }
    else
    {
      NSString v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v17(v14, v5, v6);
      uint64_t v27 = sub_10050BF48(0, (unint64_t *)&qword_101672600);
      NSString v18 = String._bridgeToObjectiveC()();
      id v19 = [self systemImageNamed:v18];

      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v14, v6);
      unint64_t v20 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v21 = swift_allocObject();
      v17((char *)(v21 + v20), v11, v6);
      uint64_t v22 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
      sub_10050BF48(0, (unint64_t *)&qword_101674470);
      id v23 = v22;
      v29.value.super.Class isa = 0;
      v29.is_nil = (char)v22;
      v30.value.super.super.Class isa = 0;
      id v24 = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)0, v29, v30, v31).super.super.isa;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  id v25 = [v1 navigationItem];
  sub_10050BF48(0, (unint64_t *)&qword_101674470);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v25 setRightBarButtonItems:isa];
}

uint64_t sub_10056CB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 48) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10056CBF0, v6, v5);
}

uint64_t sub_10056CBF0()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    char v3 = *(unsigned char *)(Strong + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges);
    *(unsigned char *)(Strong + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges) = 1;
    if ((v3 & 1) == 0) {
      sub_10056B4F8();
    }
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10056CC9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 48) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10056CD34, v6, v5);
}

uint64_t sub_10056CD34()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    int v3 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges);
    *(unsigned char *)(Strong + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges) = 0;
    if (v3 == 1) {
      sub_10056B4F8();
    }
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10056CDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 48) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10056CE78, v6, v5);
}

uint64_t sub_10056CE78()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    int v3 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingHighlights);
    *(unsigned char *)(Strong + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingHighlights) = 0;
    if (v3 == 1) {
      sub_10056B4F8();
    }
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10056CF24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 48) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10056CFBC, v6, v5);
}

uint64_t sub_10056CFBC()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    char v3 = *(unsigned char *)(Strong + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingHighlights);
    *(unsigned char *)(Strong + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingHighlights) = 1;
    if ((v3 & 1) == 0) {
      sub_10056B4F8();
    }
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void sub_10056D068()
{
  if (!swift_unknownObjectWeakLoadStrong())
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateToolbarButtons()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 592, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v11) = 2;
    uint64_t v9 = "invalid nil found when unwrapping value";
    uint64_t v10 = 39;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateToolbarButtons()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 592);
    goto LABEL_6;
  }
  id v1 = sub_100A70A50();
  unsigned int v2 = [v1 isCollapsed];
  swift_unknownObjectRelease();

  if (!v2)
  {
LABEL_6:
    [v0 setToolbarItems:0, v9, v10, v11];
    id v7 = [v0 navigationController];
    if (v7)
    {
      id v12 = v7;
      [v7 setToolbarHidden:1 animated:0];
      goto LABEL_8;
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateToolbarButtons()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 599, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v8 = 599;
LABEL_13:
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateToolbarButtons()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, v8);
    return;
  }
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10117FBD0;
  uint64_t v4 = self;
  *(void *)(v3 + 32) = [v4 flexibleSpaceItem];
  *(void *)(v3 + 40) = sub_100571AE4();
  *(void *)(v3 + 48) = [v4 flexibleSpaceItem];
  specialized Array._endMutation()();
  sub_10050BF48(0, (unint64_t *)&qword_101674470);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v0 setToolbarItems:isa];

  id v6 = [v0 navigationController];
  if (!v6)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateToolbarButtons()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 596, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v8 = 596;
    goto LABEL_13;
  }
  id v12 = v6;
  [v6 setToolbarHidden:0 animated:0];
LABEL_8:
}

uint64_t sub_10056D504(uint64_t a1, int a2)
{
  int v64 = a2;
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v4 - 8, v5);
  id v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_10169B4A0);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  id v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v13);
  Class v15 = (char *)&v58 - v14;
  uint64_t v16 = type metadata accessor for IndexPath();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  unint64_t v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v63 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v22);
  id v24 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100576754(a1, (uint64_t)v24, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1005057FC(&qword_101677100);
    swift_bridgeObjectRelease();
    sub_100575C88((uint64_t)v24, type metadata accessor for CRLBoardIdentifier);
    if (qword_10166FAC0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v25 = (void *)static OS_os_log.crlSidebar;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v27 = v25;
    uint64_t v28 = sub_100DD71D4();
    uint64_t v30 = v29;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v28;
    *(void *)(inited + 40) = v30;
    uint64_t v31 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v27, (uint64_t)&_mh_execute_header, v31, (uint64_t)"Ignoring board selection: %@", 28, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    return 0;
  }
  sub_100575C88((uint64_t)v24, type metadata accessor for CRLBoardLibraryViewModel.Item);
  uint64_t result = (uint64_t)[v2 isViewLoaded];
  if (!result) {
    return 1;
  }
  uint64_t v59 = v7;
  int v62 = v20;
  id v61 = v2;
  if (!*(void *)&v2[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController])
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  swift_retain();
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
  uint64_t v34 = v17;
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v36 = v35(v12, 1, v16);
  uint64_t v60 = v34;
  if (v36 == 1)
  {
    sub_100522F00((uint64_t)v12, (uint64_t *)&unk_10169B4A0);
    sub_10077730C(a1, v64 & 1);
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v15, v12, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v15, 0, 1, v16);
  }
  swift_release();
  if (v35(v15, 1, v16) == 1)
  {
    sub_100522F00((uint64_t)v15, (uint64_t *)&unk_10169B4A0);
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v37 = swift_initStackObject();
    *(_OWORD *)(v37 + 16) = xmmword_10117E810;
    uint64_t v38 = sub_100DD71D4();
    uint64_t v40 = v39;
    *(void *)(v37 + 56) = &type metadata for String;
    *(void *)(v37 + 64) = sub_100528BE4();
    *(void *)(v37 + 32) = v38;
    *(void *)(v37 + 40) = v40;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"select(_:animated:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 212, (uint64_t)"Unknown item: %@", 16, 2u, v37);
    sub_1005598CC(v37, (uint64_t)"select(_:animated:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 212);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    return 0;
  }
  uint64_t v41 = v60;
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v62, v15, v16);
  id v42 = v61;
  uint64_t result = (uint64_t)[v61 collectionView];
  if (!result) {
    goto LABEL_23;
  }
  NSString v43 = (void *)result;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  unsigned int v45 = [v42 collectionView:v43 shouldSelectItemAtIndexPath:isa];

  if (!v45)
  {
    if (qword_10166FAC0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    unsigned int v51 = (void *)static OS_os_log.crlSidebar;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v52 = swift_initStackObject();
    *(_OWORD *)(v52 + 16) = xmmword_10117E810;
    id v53 = v51;
    uint64_t v54 = sub_100DD71D4();
    uint64_t v56 = v55;
    *(void *)(v52 + 56) = &type metadata for String;
    *(void *)(v52 + 64) = sub_100528BE4();
    *(void *)(v52 + 32) = v54;
    *(void *)(v52 + 40) = v56;
    uint64_t v57 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v53, (uint64_t)&_mh_execute_header, v57, (uint64_t)"Ignoring request to select unselectable item: %@", 48, 2, v52);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    (*(void (**)(char *, uint64_t))(v41 + 8))(v62, v16);
    return 0;
  }
  uint64_t result = (uint64_t)[v42 collectionView];
  if (result)
  {
    id v46 = (void *)result;
    id v47 = v62;
    Class v48 = IndexPath._bridgeToObjectiveC()().super.isa;
    [v46 selectItemAtIndexPath:v48 animated:v64 & 1 scrollPosition:2];

    uint64_t v49 = (uint64_t)v59;
    sub_100576754(a1, (uint64_t)v59, type metadata accessor for CRLBoardLibraryViewModel.Item);
    uint64_t v32 = 1;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v63 + 56))(v49, 0, 1, v21);
    uint64_t v50 = (uint64_t)v42 + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_selectedItem;
    swift_beginAccess();
    sub_100574B58(v49, v50);
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v47, v16);
    return v32;
  }
LABEL_24:
  __break(1u);
  return result;
}

_OWORD *sub_10056DD98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v8 = sub_100A701F0();
    if (v8)
    {
      uint64_t v9 = v8;
      *((void *)&v21 + 1) = type metadata accessor for CRLiOSFolderGridViewController();
      *(void *)&long long v20 = v9;
      swift_unknownObjectRelease();
      if (*((void *)&v21 + 1)) {
        return sub_100575CE8(&v20, a3);
      }
    }
    else
    {
      long long v20 = 0u;
      long long v21 = 0u;
      swift_unknownObjectRelease();
    }
  }
  else
  {
    long long v20 = 0u;
    long long v21 = 0u;
  }
  sub_100522F00((uint64_t)&v20, &qword_101672BF0);
  sub_100522E9C(a2, (uint64_t)&v20, &qword_101672BF0);
  uint64_t v11 = *((void *)&v21 + 1);
  if (*((void *)&v21 + 1))
  {
    id v12 = sub_10050F848(&v20, *((uint64_t *)&v21 + 1));
    uint64_t v13 = *(void *)(v11 - 8);
    __chkstk_darwin(v12, v12);
    Class v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v13 + 16))(v15);
    uint64_t v16 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v20);
  }
  else
  {
    uint64_t v16 = 0;
  }
  uint64_t v17 = (objc_class *)type metadata accessor for CRLiOSSidebarViewController();
  v19.receiver = v4;
  v19.super_class = v17;
  [super targetForAction:a1 withSender:v16];
  swift_unknownObjectRelease();
  if (v18)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v20 = 0u;
    long long v21 = 0u;
  }
  return (_OWORD *)sub_10052E248((uint64_t)&v20, (uint64_t)a3);
}

id sub_10056E3EC()
{
  id result = [v0 view];
  if (result)
  {
    unsigned int v2 = result;
    id v3 = [result window];

    if (v3)
    {
      id v4 = [v3 windowScene];

      if (v4)
      {
        id v5 = [v4 delegate];

        if (v5)
        {
          type metadata accessor for CRLiOSSceneDelegate();
          uint64_t v6 = (void *)swift_dynamicCastClass();
          if (v6)
          {
            id v7 = v6;
            id v8 = v6;
            uint64_t v9 = sub_100A701F0();
            if (v9)
            {
              uint64_t v10 = v9;
              *((void *)&v17 + 1) = type metadata accessor for CRLiOSFolderGridViewController();
              *(void *)&long long v16 = v10;

              if (*((void *)&v17 + 1))
              {
                int v11 = swift_dynamicCast();
                id v12 = v15;
                if (!v11) {
                  id v12 = 0;
                }
                goto LABEL_14;
              }
            }
            else
            {
              long long v16 = 0u;
              long long v17 = 0u;
            }
LABEL_13:
            sub_100522F00((uint64_t)&v16, &qword_101672BF0);
            id v12 = 0;
LABEL_14:
            id v13 = v12;
            id v14 = [v13 undoManager];

            return v14;
          }
          swift_unknownObjectRelease();
        }
      }
    }
    id v7 = 0;
    long long v16 = 0u;
    long long v17 = 0u;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

void sub_10056E608()
{
  id v1 = v0;
  uint64_t v2 = Notification.userInfo.getter();
  if (!v2)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v3 = v2;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_10095647C((uint64_t)v11), (v5 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v12);
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)v11);
  if (*((void *)&v13 + 1))
  {
    type metadata accessor for CGRect(0);
    if (swift_dynamicCast())
    {
      id v6 = [v1 collectionView];
      if (v6)
      {
        id v7 = v6;
        [v6 setContentInset:0.0, 0.0, v10, 0.0];

        id v8 = [v1 collectionView];
        if (v8)
        {
          uint64_t v9 = v8;
          [v8 setScrollIndicatorInsets:0.0, 0.0, v10, 0.0];

          return;
        }
        goto LABEL_15;
      }
LABEL_14:
      __break(1u);
LABEL_15:
      __break(1u);
    }
  }
  else
  {
    sub_100522F00((uint64_t)&v12, &qword_101672BF0);
  }
}

id sub_10056E9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v52 = a1;
  uint64_t v53 = a2;
  uint64_t v54 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode();
  uint64_t v2 = *(void *)(v54 - 8);
  __chkstk_darwin(v54, v3);
  char v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  double v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  Class v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v50 = v11;
  uint64_t v51 = v6;
  uint64_t v47 = v2;
  uint64_t v49 = v12;
  id v55 = Strong;
  if (swift_unknownObjectWeakLoadStrong())
  {
    id v17 = sub_100A70A50();
    id v18 = [v17 traitCollection];

    id v19 = [v18 horizontalSizeClass];
    swift_unknownObjectRelease();

    BOOL v48 = v19 == (id)1;
  }
  else
  {
    BOOL v48 = 0;
  }
  id result = [v55 view];
  if (result)
  {
    uint64_t v22 = result;
    id v23 = [result window];

    if (!v23
      || (id v24 = [v23 traitCollection],
          v23,
          id v25 = [v24 horizontalSizeClass],
          v24,
          v25 != (id)2))
    {
      BOOL v31 = 0;
      uint64_t v32 = v52;
      uint64_t v26 = v51;
      goto LABEL_15;
    }
    id result = [v55 view];
    uint64_t v26 = v51;
    if (result)
    {
      id v27 = result;
      id v28 = [result window];

      if (v28)
      {
        id v29 = [v28 traitCollection];

        id v30 = [v29 verticalSizeClass];
        BOOL v31 = v30 == (id)1;
      }
      else
      {
        BOOL v31 = 0;
      }
      uint64_t v32 = v52;
LABEL_15:
      (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v26);
      UICollectionLayoutListConfiguration.init(appearance:)();
      id v33 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.HeaderMode.none(_:);
      if (v32) {
        id v33 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.HeaderMode.firstItemInSection(_:);
      }
      (*(void (**)(char *, void, uint64_t))(v47 + 104))(v5, *v33, v54);
      UICollectionLayoutListConfiguration.headerMode.setter();
      BOOL v34 = v48;
      UICollectionLayoutListConfiguration.showsSeparators.setter();
      sub_10050BF48(0, &qword_101673F40);
      uint64_t v35 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
      long long v20 = v35;
      if (v31)
      {
        [v35 contentInsets];
        [v20 setContentInsets:0.0];
      }
      else
      {
        if (v34)
        {
          int v36 = self;
          id v37 = [v36 fractionalWidthDimension:1.0];
          id v38 = [v36 absoluteDimension:102.0];
          id v39 = [self sizeWithWidthDimension:v37 heightDimension:v38];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          id v40 = v39;
          NSString v41 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v42 = [self boundarySupplementaryItemWithLayoutSize:v40 elementKind:v41 alignment:5];

          sub_1005057FC((uint64_t *)&unk_101676C10);
          uint64_t v43 = swift_allocObject();
          *(_OWORD *)(v43 + 16) = xmmword_101177E70;
          *(void *)(v43 + 32) = v42;
          uint64_t v56 = v43;
          specialized Array._endMutation()();
          sub_10050BF48(0, &qword_10169B5B0);
          id v44 = v42;
          v45.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v20 setBoundarySupplementaryItems:v45.super.isa];

LABEL_23:
          (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v50);
          return v20;
        }
        [v35 setInterGroupSpacing:5.0];
      }
      v45.super.Class isa = (Class)v55;
      goto LABEL_23;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10056F02C@<X0>(void *a1@<X3>, uint64_t *a2@<X8>)
{
  static UIListContentConfiguration.ImageProperties.standardDimension.getter();
  static UIListContentConfiguration.ImageProperties.standardDimension.getter();
  a2[3] = type metadata accessor for UIListContentConfiguration();
  a2[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  sub_1005767BC(a2);
  UICollectionViewListCell.defaultContentConfiguration()();
  swift_bridgeObjectRetain();
  UIListContentConfiguration.text.setter();
  id v4 = a1;
  UIListContentConfiguration.image.setter();
  char v5 = (void (*)(unsigned char *, void))UIListContentConfiguration.imageProperties.modify();
  UIListContentConfiguration.ImageProperties.cornerRadius.setter();
  v5(v10, 0);
  uint64_t v6 = (void (*)(unsigned char *, void))UIListContentConfiguration.imageProperties.modify();
  UIListContentConfiguration.ImageProperties.reservedLayoutSize.setter();
  v6(v10, 0);
  id v7 = [self preferredFontForTextStyle:UIFontTextStyleBody];
  uint64_t v8 = (uint64_t (*)(unsigned char *, void))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.font.setter();
  return v8(v10, 0);
}

void sub_10056F19C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v117 = a1;
  uint64_t v105 = type metadata accessor for UICellAccessory.LabelOptions();
  uint64_t v104 = *(void *)(v105 - 8);
  __chkstk_darwin(v105, v6);
  uint64_t v103 = (char *)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101673F08);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v112 = (char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_101673F10);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v107 = (char *)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions();
  uint64_t v108 = *(void *)(v109 - 8);
  __chkstk_darwin(v109, v14);
  uint64_t v106 = (char *)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v111 = (char *)&v101 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  uint64_t v22 = __chkstk_darwin(v20 - 8, v21);
  id v24 = (char *)&v101 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v25);
  uint64_t v101 = (char *)&v101 - v26;
  uint64_t v27 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v118 = *(void **)(v27 - 8);
  uint64_t v28 = v118[8];
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v102 = (uint64_t)&v101 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30, v31);
  *(void *)&long long v119 = (char *)&v101 - v33;
  uint64_t v35 = __chkstk_darwin(v32, v34);
  id v37 = (char *)&v101 - v36;
  __chkstk_darwin(v35, v38);
  id v40 = (char *)&v101 - v39;
  uint64_t v41 = a4;
  swift_beginAccess();
  uint64_t v110 = a4 + 16;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v116 = v24;
  uint64_t v114 = v16;
  uint64_t v113 = v17;
  uint64_t v115 = a3;
  uint64_t v120 = v27;
  if (Strong)
  {
    uint64_t v43 = (void *)Strong;
    sub_100576754(a3, (uint64_t)v40, type metadata accessor for CRLBoardLibraryViewModel.Item);
    EnumCaseMultiPayloadouble d = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v45 = (uint64_t)v40;
        id v40 = v101;
        sub_100575C20(v45, (uint64_t)v101, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        sub_100DD4C48();
        uint64_t v46 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
      }
      else
      {
        sub_1005057FC(&qword_101677100);
        uint64_t v46 = type metadata accessor for CRLBoardIdentifier;
      }
      sub_100575C88((uint64_t)v40, v46);
    }
    else
    {
      sub_100DD8CAC();
    }
    uint64_t v49 = v41;
    a3 = v115;
    id v50 = sub_100DD48A0();
    uint64_t v47 = v117;
    sub_10056F02C(v50, v121);

    swift_bridgeObjectRelease();
    uint64_t v48 = (uint64_t)v116;
  }
  else
  {
    memset(v121, 0, sizeof(v121));
    uint64_t v47 = v117;
    uint64_t v48 = (uint64_t)v24;
    uint64_t v49 = a4;
  }
  UICollectionViewCell.contentConfiguration.setter();
  id v51 = [self systemGray4Color];
  [v47 setTintColor:v51];

  id v52 = [self configurationWithTextStyle:UIFontTextStyleTitle1 scale:-1];
  sub_100576754(a3, (uint64_t)v37, type metadata accessor for CRLBoardLibraryViewModel.Item);
  unint64_t v53 = (*((unsigned __int8 *)v118 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v118 + 80);
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = v49;
  sub_100575C20((uint64_t)v37, v54 + v53, type metadata accessor for CRLBoardLibraryViewModel.Item);
  *(void *)(v54 + ((v28 + v53 + 7) & 0xFFFFFFFFFFFFFFF8)) = v52;
  id v55 = v52;
  swift_retain();
  UICollectionViewCell.configurationUpdateHandler.setter();
  uint64_t v56 = v119;
  sub_100576754(a3, v119, type metadata accessor for CRLBoardLibraryViewModel.Item);
  int v57 = swift_getEnumCaseMultiPayload();
  if (!v57)
  {
    sub_1005057FC(&qword_101673F18);
    type metadata accessor for UICellAccessory();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_10117E810;
    uint64_t v64 = v113;
    uint64_t v65 = v111;
    uint64_t v66 = v114;
    (*(void (**)(char *, void, uint64_t))(v113 + 104))(v111, enum case for UICellAccessory.DisplayedState.always(_:), v114);
    uint64_t v67 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions.Style();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v107, 1, 1, v67);
    uint64_t v68 = type metadata accessor for UICellAccessory.LayoutDimension();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v112, 1, 1, v68);
    id v69 = v106;
    UICellAccessory.OutlineDisclosureOptions.init(style:isHidden:reservedLayoutWidth:tintColor:)();
    static UICellAccessory.outlineDisclosure(displayed:options:actionHandler:)();
    (*(void (**)(char *, uint64_t))(v108 + 8))(v69, v109);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v66);
    UICollectionViewListCell.accessories.setter();

    return;
  }
  if (v57 != 1)
  {
    sub_1005057FC(&qword_101677100);
    swift_bridgeObjectRelease();
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    uint64_t v71 = sub_100DD71D4();
    uint64_t v73 = v72;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v71;
    *(void *)(inited + 40) = v73;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"newCollectionViewDataSource(for:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 528, (uint64_t)"Unexpected sidebar item: %@", 27, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"newCollectionViewDataSource(for:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 528);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    UICollectionViewListCell.accessories.setter();

    uint64_t v74 = type metadata accessor for CRLBoardIdentifier;
    uint64_t v75 = v56;
LABEL_40:
    sub_100575C88(v75, v74);
    return;
  }
  sub_100575C20(v56, v48, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  swift_beginAccess();
  uint64_t v58 = swift_unknownObjectWeakLoadStrong();
  if (!v58) {
    goto LABEL_20;
  }
  uint64_t v59 = (void *)v58;
  uint64_t v60 = *(void *)(v58 + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController);
  swift_retain();

  if (!v60)
  {
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v61 = *(void *)(v60 + 40);
  swift_bridgeObjectRetain();
  swift_release();
  if (!*(void *)(v61 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  sub_10095697C(v48);
  char v63 = v62;
  swift_bridgeObjectRelease();
  if ((v63 & 1) == 0)
  {
LABEL_20:
    if (qword_10166FAC0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v76 = (id)static OS_os_log.crlSidebar;
    uint64_t v77 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v76, (uint64_t)&_mh_execute_header, v77, (uint64_t)"self?.viewModelController.cachedFolderBoardCount[folder] nil", 60, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
  swift_beginAccess();
  uint64_t v78 = swift_unknownObjectWeakLoadStrong();
  uint64_t v118 = v55;
  if (!v78)
  {
    UIImage_optional v84 = 0;
LABEL_31:
    uint64_t v109 = sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v85 = swift_allocObject();
    long long v119 = xmmword_10117E810;
    *(_OWORD *)(v85 + 16) = xmmword_10117E810;
    *(void *)(v85 + 56) = &type metadata for Int;
    *(void *)(v85 + 64) = &protocol witness table for Int;
    uint64_t v117 = v84;
    *(void *)(v85 + 32) = v84;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    sub_1005057FC(&qword_101673F18);
    type metadata accessor for UICellAccessory();
    *(_OWORD *)(swift_allocObject() + 16) = v119;
    uint64_t v86 = v113;
    double v87 = v111;
    uint64_t v88 = v114;
    (*(void (**)(char *, void, uint64_t))(v113 + 104))(v111, enum case for UICellAccessory.DisplayedState.always(_:), v114);
    uint64_t v89 = type metadata accessor for UICellAccessory.LayoutDimension();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v112, 1, 1, v89);
    uint64_t v90 = v103;
    UICellAccessory.LabelOptions.init(isHidden:reservedLayoutWidth:tintColor:font:adjustsFontForContentSizeCategory:)();
    static UICellAccessory.label(text:displayed:options:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v104 + 8))(v90, v105);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v87, v88);
    UICollectionViewListCell.accessories.setter();
    uint64_t v91 = v102;
    sub_100576754(v115, v102, type metadata accessor for CRLBoardLibraryViewModel.Item);
    int v92 = swift_getEnumCaseMultiPayload();
    if (v92)
    {
      if (v92 == 1)
      {
        uint64_t v93 = v91;
        uint64_t v91 = (uint64_t)v101;
        sub_100575C20(v93, (uint64_t)v101, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        sub_100DD4C48();
        double v94 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
      }
      else
      {
        sub_1005057FC(&qword_101677100);
        double v94 = type metadata accessor for CRLBoardIdentifier;
      }
      sub_100575C88(v91, v94);
    }
    else
    {
      sub_100DD8CAC();
    }
    NSString v95 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v47 setAccessibilityLabel:v95];

    swift_beginAccess();
    uint64_t v96 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v96)
    {
      id v97 = [self mainBundle];
      v122._object = (void *)0x800000010123BDD0;
      v98._countAndFlagsBits = 0x72616F6220756C25;
      v98._object = (void *)0xEC00000029732864;
      v99._countAndFlagsBits = 0;
      v99._object = (void *)0xE000000000000000;
      v122._countAndFlagsBits = 0xD00000000000001BLL;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v98, (Swift::String_optional)0, (NSBundle)v97, v99, v122);

      uint64_t v100 = swift_allocObject();
      *(_OWORD *)(v100 + 16) = v119;
      *(void *)(v100 + 56) = &type metadata for Int;
      *(void *)(v100 + 64) = &protocol witness table for Int;
      *(void *)(v100 + 32) = v117;
      static String.localizedStringWithFormat(_:_:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v96 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v47 setAccessibilityValue:v96];

    uint64_t v74 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
    uint64_t v75 = (uint64_t)v116;
    goto LABEL_40;
  }
  uint64_t v79 = (void *)v78;
  uint64_t v80 = *(void *)(v78 + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController);
  swift_retain();

  if (v80)
  {
    uint64_t v81 = *(void *)(v80 + 40);
    swift_bridgeObjectRetain();
    swift_release();
    if (*(void *)(v81 + 16) && (unint64_t v82 = sub_10095697C(v48), (v83 & 1) != 0)) {
      UIImage_optional v84 = *(void **)(*(void *)(v81 + 56) + 8 * v82);
    }
    else {
      UIImage_optional v84 = 0;
    }
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
LABEL_42:
  __break(1u);
}

char *sub_100570218(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v198 = a5;
  uint64_t v207 = a4;
  uint64_t v201 = a2;
  uint64_t v6 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions();
  uint64_t v186 = *(void *)(v6 - 8);
  uint64_t v187 = v6;
  __chkstk_darwin(v6, v7);
  uint64_t v185 = (char *)&v170 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UICellAccessory();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v170 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UICellAccessory.LabelOptions();
  uint64_t v189 = *(void *)(v14 - 8);
  uint64_t v190 = v14;
  __chkstk_darwin(v14, v15);
  uint64_t v188 = (char *)&v170 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v194 = *(void *)(v17 - 8);
  uint64_t v195 = v17;
  __chkstk_darwin(v17, v18);
  uint64_t v192 = (char *)&v170 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1005057FC(&qword_101673F08);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v193 = (char *)&v170 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for UICellAccessory.Placement();
  uint64_t v179 = *(void *)(v23 - 8);
  uint64_t v180 = v23;
  __chkstk_darwin(v23, v24);
  uint64_t v181 = (char *)&v170 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  uint64_t v183 = *(void *)(v26 - 8);
  uint64_t v184 = v26;
  __chkstk_darwin(v26, v27);
  uint64_t v182 = (char *)&v170 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1005057FC(&qword_101673F20);
  uint64_t v31 = __chkstk_darwin(v29 - 8, v30);
  v202 = (char *)&v170 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31, v33);
  v205 = (char *)&v170 - v34;
  uint64_t v35 = sub_1005057FC(&qword_10169B5F0);
  __chkstk_darwin(v35 - 8, v36);
  uint64_t v38 = (char *)&v170 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  uint64_t v41 = __chkstk_darwin(v39 - 8, v40);
  uint64_t v191 = (uint64_t)&v170 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __chkstk_darwin(v41, v43);
  uint64_t v197 = (uint64_t)&v170 - v45;
  __chkstk_darwin(v44, v46);
  uint64_t v196 = (uint64_t)&v170 - v47;
  *(void *)&long long v206 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v49 = __chkstk_darwin(v206, v48);
  uint64_t v199 = (char *)&v170 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __chkstk_darwin(v49, v51);
  uint64_t v54 = (char *)&v170 - v53;
  __chkstk_darwin(v52, v55);
  int v57 = (char *)&v170 - v56;
  uint64_t v58 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v203 = *(void *)(v58 - 8);
  uint64_t v204 = v58;
  __chkstk_darwin(v58, v59);
  uint64_t v208 = (char *)&v170 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  id result = (char *)swift_dynamicCastObjCClass();
  id v209 = result;
  if (result)
  {
    swift_beginAccess();
    id result = (char *)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v171 = v9;
      uint64_t v172 = v13;
      uint64_t v177 = v10;
      uint64_t v200 = result;
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      id v176 = a1;
      if (Strong)
      {
        id v63 = sub_100A70A50();
        id v64 = [v63 traitCollection];

        id v65 = [v64 horizontalSizeClass];
        swift_unknownObjectRelease();

        BOOL v178 = v65 == (id)1;
      }
      else
      {
        BOOL v178 = 0;
      }
      id result = (char *)[v200 view];
      if (result)
      {
        uint64_t v66 = result;
        id v67 = [result window];

        if (!v67) {
          goto LABEL_12;
        }
        id v68 = [v67 traitCollection];

        id v69 = [v68 horizontalSizeClass];
        if (v69 != (id)2) {
          goto LABEL_12;
        }
        id result = (char *)[v200 view];
        if (!result)
        {
LABEL_70:
          __break(1u);
          goto LABEL_71;
        }
        uint64_t v70 = result;
        id v71 = [result window];

        if (v71)
        {
          id v72 = [v71 traitCollection];

          id v73 = [v72 verticalSizeClass];
          BOOL v74 = v73 == (id)1;
        }
        else
        {
LABEL_12:
          BOOL v74 = 0;
        }
        id v75 = v209;
        id v76 = [v209 traitCollection];
        id v77 = [v75 traitCollection];
        id v78 = [v77 accessibilityContrast];

        uint64_t v79 = v76;
        if (v78 == (id)1)
        {
          uint64_t v79 = (void *)UITraitCollection.modifyingTraits(_:)();
        }
        sub_100576754(v207, (uint64_t)v57, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v80 = v196;
          sub_100575C20((uint64_t)v57, v196, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          id v81 = sub_100DD8A3C();
          sub_100575C88(v80, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          goto LABEL_18;
        }
        sub_100575C88((uint64_t)v57, type metadata accessor for CRLBoardLibraryViewModel.Item);
        id result = (char *)[v209 tintColor];
        id v81 = result;
        if (result)
        {
LABEL_18:
          id v175 = v79;
          id v82 = [v81 resolvedColorWithTraitCollection:v79];

          sub_1005057FC((uint64_t *)&unk_101676C10);
          uint64_t v83 = swift_allocObject();
          long long v170 = xmmword_10117DF50;
          *(_OWORD *)(v83 + 16) = xmmword_10117DF50;
          id v173 = self;
          *(void *)(v83 + 32) = [v173 whiteColor];
          *(void *)(v83 + 40) = v82;
          *(void *)&long long v216 = v83;
          specialized Array._endMutation()();
          LODWORD(v83) = v178 || v74;
          id v174 = v82;
          if (v83 == 1)
          {
            UIImage_optional v84 = v208;
            static UIBackgroundConfiguration.listGroupedCell()();
          }
          else
          {
            static UIBackgroundConfiguration.listSidebarCell()();
            if (UICellConfigurationState.isHighlighted.getter())
            {
              swift_bridgeObjectRelease();
              sub_100576754(v207, (uint64_t)v54, type metadata accessor for CRLBoardLibraryViewModel.Item);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                uint64_t v85 = v196;
                sub_100575C20((uint64_t)v54, v196, type metadata accessor for CRLBoardLibraryViewModel.Folder);
                id v86 = sub_100DD8A3C();
                sub_100575C88(v85, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              }
              else
              {
                sub_100575C88((uint64_t)v54, type metadata accessor for CRLBoardLibraryViewModel.Item);
                id result = (char *)[v209 tintColor];
                id v86 = result;
                if (!result)
                {
LABEL_71:
                  __break(1u);
                  return result;
                }
              }
              uint64_t v87 = swift_allocObject();
              *(_OWORD *)(v87 + 16) = v170;
              *(void *)(v87 + 32) = [v173 whiteColor];
              *(void *)(v87 + 40) = [v86 crl_withReducedAlpha:0.3];
              *(void *)&long long v216 = v87;
              specialized Array._endMutation()();
            }
            UIImage_optional v84 = v208;
          }
          uint64_t v88 = v203;
          uint64_t v89 = v84;
          uint64_t v90 = v204;
          (*(void (**)(char *, char *, uint64_t))(v203 + 16))(v38, v89, v204);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v38, 0, 1, v90);
          id v91 = v176;
          UICollectionViewCell.backgroundConfiguration.setter();

          sub_10050BF48(0, (unint64_t *)&qword_101687FC0);
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          id v93 = [self configurationWithPaletteColors:isa];

          id v176 = v93;
          id v198 = [v198 configurationByApplyingConfiguration:v93];
          double v94 = (char *)v91;
          UICollectionViewCell.contentConfiguration.getter();

          if (v215)
          {
            sub_1005498A4((uint64_t)v214, (uint64_t)v211);
            sub_100522F00((uint64_t)v214, &qword_101673F28);
            uint64_t v95 = v212;
            uint64_t v96 = v213;
            sub_10050F848(v211, v212);
            uint64_t v97 = type metadata accessor for UICellConfigurationState();
            v210[3] = v97;
            v210[4] = (uint64_t)&protocol witness table for UICellConfigurationState;
            Swift::String v98 = sub_1005767BC(v210);
            (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v97 - 8) + 16))(v98, v201, v97);
            *((void *)&v217 + 1) = v95;
            v218 = v96;
            sub_1005767BC((uint64_t *)&v216);
            dispatch thunk of UIContentConfiguration.updated(for:)();
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v210);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v211);
            uint64_t v99 = (uint64_t)v199;
            uint64_t v100 = (uint64_t)v202;
            if (*((void *)&v217 + 1))
            {
              sub_1005057FC(&qword_101673F38);
              uint64_t v101 = type metadata accessor for UIListContentConfiguration();
              uint64_t v102 = (uint64_t)v205;
              int v103 = swift_dynamicCast();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v101 - 8) + 56))(v102, v103 ^ 1u, 1, v101);
              goto LABEL_31;
            }
          }
          else
          {
            sub_100522F00((uint64_t)v214, &qword_101673F28);
            long long v216 = 0u;
            long long v217 = 0u;
            v218 = 0;
            uint64_t v99 = (uint64_t)v199;
            uint64_t v100 = (uint64_t)v202;
          }
          sub_100522F00((uint64_t)&v216, &qword_101673F28);
          uint64_t v101 = type metadata accessor for UIListContentConfiguration();
          uint64_t v102 = (uint64_t)v205;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 56))(v205, 1, 1, v101);
LABEL_31:
          type metadata accessor for UIListContentConfiguration();
          uint64_t v104 = *(void *)(v101 - 8);
          uint64_t v105 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v104 + 48);
          int v106 = v105(v102, 1, v101);
          uint64_t v199 = v94;
          if (!v106)
          {
            id v107 = [v173 labelColor];
            uint64_t v108 = (void (*)(long long *, void))UIListContentConfiguration.textProperties.modify();
            uint64_t v100 = (uint64_t)v202;
            UIListContentConfiguration.TextProperties.color.setter();
            v108(&v216, 0);
            double v94 = v199;
            uint64_t v102 = (uint64_t)v205;
          }
          if (!v105(v102, 1, v101))
          {
            id v109 = v198;
            uint64_t v110 = (void (*)(long long *, void))UIListContentConfiguration.imageProperties.modify();
            double v94 = v199;
            UIListContentConfiguration.ImageProperties.preferredSymbolConfiguration.setter();
            v110(&v216, 0);
            uint64_t v100 = (uint64_t)v202;
          }
          sub_100522E9C(v102, v100, &qword_101673F20);
          if (v105(v100, 1, v101) == 1)
          {
            uint64_t v111 = v94;
            sub_100522F00(v100, &qword_101673F20);
            long long v216 = 0u;
            long long v217 = 0u;
            v218 = 0;
          }
          else
          {
            *((void *)&v217 + 1) = v101;
            v218 = &protocol witness table for UIListContentConfiguration;
            uint64_t v112 = sub_1005767BC((uint64_t *)&v216);
            (*(void (**)(uint64_t *, uint64_t, uint64_t))(v104 + 32))(v112, v100, v101);
            uint64_t v113 = v94;
          }
          uint64_t v114 = v177;
          uint64_t v115 = v200;
          UICollectionViewCell.contentConfiguration.setter();

          sub_100576754(v207, v99, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if (swift_getEnumCaseMultiPayload() != 1)
          {

            (*(void (**)(char *, uint64_t))(v203 + 8))(v208, v204);
            sub_100575C88(v99, type metadata accessor for CRLBoardLibraryViewModel.Item);
            return (char *)sub_100522F00(v102, &qword_101673F20);
          }
          uint64_t v116 = v99;
          uint64_t v117 = v197;
          id result = (char *)sub_100575C20(v116, v197, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          uint64_t v118 = *(void *)&v115[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController];
          if (v118)
          {
            uint64_t v119 = *(void *)(v118 + 40);
            if (*(void *)(v119 + 16))
            {
              swift_bridgeObjectRetain();
              unint64_t v120 = sub_10095697C(v117);
              if (v121)
              {
                uint64_t v122 = *(void *)(*(void *)(v119 + 56) + 8 * v120);
                swift_bridgeObjectRelease();
                goto LABEL_50;
              }
              swift_bridgeObjectRelease();
            }
            uint64_t v123 = sub_1005057FC(&qword_101670F30);
            uint64_t v124 = v196;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v123 - 8) + 56))(v196, 5, 5, v123);
            char v125 = sub_100DDC744(v117, v124);
            sub_100575C88(v124, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            if (v125)
            {
              uint64_t v122 = 0;
            }
            else
            {
              if (qword_10166FAC0 != -1) {
                swift_once();
              }
              swift_beginAccess();
              unint64_t v126 = (void *)static OS_os_log.crlSidebar;
              sub_1005057FC((uint64_t *)&unk_101672B40);
              uint64_t inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = xmmword_10117E810;
              id v128 = v126;
              uint64_t v129 = sub_100DD4C48();
              uint64_t v131 = v130;
              *(void *)(inited + 56) = &type metadata for String;
              *(void *)(inited + 64) = sub_100528BE4();
              *(void *)(inited + 32) = v129;
              *(void *)(inited + 40) = v131;
              uint64_t v132 = static os_log_type_t.error.getter();
              sub_100BAC898((uint64_t)v128, (uint64_t)&_mh_execute_header, v132, (uint64_t)"Cached board count not found for %@", 35, 2, inited);
              swift_setDeallocating();
              sub_1005057FC(&qword_101672B50);
              swift_arrayDestroy();

              uint64_t v122 = 0;
              uint64_t v115 = v200;
            }
LABEL_50:
            uint64_t v133 = v191;
            sub_100576754(v117, v191, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            uint64_t v134 = sub_1005057FC(&qword_101670F30);
            int v135 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 48))(v133, 5, v134);
            sub_100575C88(v133, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            char v136 = UICellConfigurationState.isSelected.getter();
            if (v135 == 4)
            {
              if ((v136 & 1) != 0
                && (v115[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges] & 1) != 0)
              {
                goto LABEL_57;
              }
              uint64_t v137 = &OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingHighlights;
            }
            else
            {
              if ((v136 & 1) == 0) {
                goto LABEL_58;
              }
              uint64_t v137 = &OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges;
            }
            if (v115[*v137] == 1)
            {
LABEL_57:
              id v138 = [objc_allocWithZone((Class)UIActivityIndicatorView) init];
              [v138 startAnimating];
              uint64_t v139 = sub_1005057FC(&qword_101673F30);
              uint64_t v140 = v181;
              uint64_t v141 = (uint64_t (**)())&v181[*(int *)(v139 + 48)];
              uint64_t v142 = *(char **)(v194 + 104);
              LODWORD(v206) = enum case for UICellAccessory.DisplayedState.always(_:);
              v202 = v142;
              ((void (*)(char *))v142)(v181);
              *uint64_t v141 = CRLWPShapeLayout.instructionalTextCharacterFill.getter;
              v141[1] = 0;
              (*(void (**)(char *, void, uint64_t))(v179 + 104))(v140, enum case for UICellAccessory.Placement.trailing(_:), v180);
              uint64_t v143 = type metadata accessor for UICellAccessory.LayoutDimension();
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v143 - 8) + 56))(v193, 1, 1, v143);
              id v144 = v138;
              uint64_t v145 = v182;
              UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
              sub_1005057FC(&qword_101673F18);
              unsigned int v146 = *(unsigned __int8 *)(v114 + 80);
              uint64_t v207 = *(void *)(v114 + 72);
              unint64_t v147 = swift_allocObject();
              *(_OWORD *)(v147 + 16) = xmmword_10117E810;
              static UICellAccessory.customView(configuration:)();

              (*(void (**)(char *, uint64_t))(v183 + 8))(v145, v184);
LABEL_59:
              uint64_t v159 = v172;
              id v160 = v175;
              if (v178)
              {
                uint64_t v162 = v194;
                uint64_t v161 = v195;
                v163 = v192;
                ((void (*)(char *, void, uint64_t))v202)(v192, v206, v195);
                uint64_t v164 = type metadata accessor for UICellAccessory.LayoutDimension();
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v164 - 8) + 56))(v193, 1, 1, v164);
                unint64_t v165 = v185;
                UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)();
                static UICellAccessory.disclosureIndicator(displayed:options:)();
                (*(void (**)(char *, uint64_t))(v186 + 8))(v165, v187);
                (*(void (**)(char *, uint64_t))(v162 + 8))(v163, v161);
                unint64_t v167 = *(void *)(v147 + 16);
                unint64_t v166 = *(void *)(v147 + 24);
                if (v167 >= v166 >> 1) {
                  unint64_t v147 = sub_100F631E8(v166 > 1, v167 + 1, 1, v147);
                }
                uint64_t v168 = v177;
                uint64_t v169 = v197;
                double v94 = v199;
                *(void *)(v147 + 16) = v167 + 1;
                (*(void (**)(unint64_t, char *, uint64_t))(v168 + 32))(v147 + ((v146 + 32) & ~(unint64_t)v146) + v207 * v167, v159, v171);
              }
              else
              {
                uint64_t v169 = v197;
              }
              UICollectionViewListCell.accessories.setter();

              sub_100575C88(v169, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              (*(void (**)(char *, uint64_t))(v203 + 8))(v208, v204);
              uint64_t v102 = (uint64_t)v205;
              return (char *)sub_100522F00(v102, &qword_101673F20);
            }
LABEL_58:
            sub_1005057FC((uint64_t *)&unk_101672B40);
            uint64_t v148 = swift_allocObject();
            long long v206 = xmmword_10117E810;
            *(_OWORD *)(v148 + 16) = xmmword_10117E810;
            *(void *)(v148 + 56) = &type metadata for Int;
            *(void *)(v148 + 64) = &protocol witness table for Int;
            *(void *)(v148 + 32) = v122;
            uint64_t v201 = static String.localizedStringWithFormat(_:_:)();
            swift_bridgeObjectRelease();
            sub_1005057FC(&qword_101673F18);
            uint64_t v149 = *(void *)(v114 + 72);
            unsigned int v150 = *(unsigned __int8 *)(v114 + 80);
            uint64_t v207 = v149;
            unint64_t v147 = swift_allocObject();
            *(_OWORD *)(v147 + 16) = v206;
            uint64_t v152 = v194;
            uint64_t v151 = v195;
            uint64_t v153 = *(char **)(v194 + 104);
            unint64_t v154 = v192;
            LODWORD(v206) = enum case for UICellAccessory.DisplayedState.always(_:);
            v202 = v153;
            ((void (*)(char *))v153)(v192);
            uint64_t v155 = type metadata accessor for UICellAccessory.LayoutDimension();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 56))(v193, 1, 1, v155);
            id v156 = [v173 secondaryLabelColor];
            uint64_t v157 = v188;
            UICellAccessory.LabelOptions.init(isHidden:reservedLayoutWidth:tintColor:font:adjustsFontForContentSizeCategory:)();
            static UICellAccessory.label(text:displayed:options:)();
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v189 + 8))(v157, v190);
            uint64_t v158 = v152;
            double v94 = v199;
            (*(void (**)(char *, uint64_t))(v158 + 8))(v154, v151);
            unsigned int v146 = v150;
            goto LABEL_59;
          }
          goto LABEL_69;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
  }
  return result;
}

uint64_t sub_1005719B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100576754(a3, (uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Item);
  uint64_t v8 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  sub_10050BF48(0, &qword_101673EB8);
  uint64_t v9 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
  sub_100522F00((uint64_t)v7, (uint64_t *)&unk_101676310);
  return v9;
}

id sub_100571AE4()
{
  id v1 = v0;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_1016725A0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UIButton.Configuration();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  uint64_t v14 = (char *)&v28 - v13;
  static UIButton.Configuration.plain()();
  id v15 = [self mainBundle];
  NSString v16 = String._bridgeToObjectiveC()();
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  UIButton.Configuration.title.setter();
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [self systemImageNamed:v19];

  UIButton.Configuration.image.setter();
  UIButton.Configuration.imagePlacement.setter();
  id v21 = sub_100571F1C(v1);
  id v22 = [self configurationWithFont:v21 scale:-1];
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  *(void *)(swift_allocObject() + 16) = v21;
  id v23 = v21;
  UIConfigurationTextAttributesTransformer.init(_:)();
  uint64_t v24 = type metadata accessor for UIConfigurationTextAttributesTransformer();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v5, 0, 1, v24);
  UIButton.Configuration.titleTextAttributesTransformer.setter();
  sub_10050BF48(0, (unint64_t *)&unk_101672590);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v14, v6);
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  uint64_t v25 = (void *)UIButton.init(configuration:primaryAction:)();
  [v25 setShowsLargeContentViewer:1];
  id v26 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v25];

  (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
  return v26;
}

id sub_100571F1C(void *a1)
{
  if (objc_msgSend(self, "crl_phoneUI")) {
    unsigned int v2 = [self crl_deviceIsLandscape];
  }
  else {
    unsigned int v2 = 0;
  }
  id v3 = [a1 traitCollection];
  id v4 = [a1 traitCollection];
  id v5 = [v4 preferredContentSizeCategory];

  if (v2)
  {
    char v6 = static UIContentSizeCategory.> infix(_:_:)();

    if (v6)
    {
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_10117DF50;
      *(void *)(v7 + 32) = [a1 traitCollection];
      uint64_t v8 = self;
      id v9 = [v8 traitCollectionWithPreferredContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
LABEL_9:
      *(void *)(v7 + 40) = v9;
      specialized Array._endMutation()();
      sub_10050BF48(0, &qword_101673EA0);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v12 = [v8 traitCollectionWithTraitsFromCollections:isa];

      id v3 = v12;
    }
  }
  else
  {
    char v10 = static UIContentSizeCategory.> infix(_:_:)();

    if (v10)
    {
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_10117DF50;
      *(void *)(v7 + 32) = [a1 traitCollection];
      uint64_t v8 = self;
      id v9 = [v8 traitCollectionWithPreferredContentSizeCategory:UIContentSizeCategoryAccessibilityExtraLarge];
      goto LABEL_9;
    }
  }
  id v13 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:v3];
  uint64_t v14 = self;
  [v13 pointSize];
  id v15 = [v14 systemFontOfSize:];

  return v15;
}

uint64_t sub_1005721F8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for AttributeContainer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a3, a1, v6);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100522B9C();
  id v7 = a2;
  return AttributeContainer.subscript.setter();
}

void sub_1005722B4()
{
  uint64_t v0 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v0 - 8, v1);
  id v3 = &v24[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    uint64_t v6 = swift_unknownObjectWeakLoadStrong();
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
      id v9 = *(void **)(v6 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
      if (v9 && ([v9 isUserInteractionEnabled] & 1) != 0)
      {
        char v10 = self;
        NSString v11 = String._bridgeToObjectiveC()();
        _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(4);
        sub_10050BF48(0, (unint64_t *)&qword_101672E50);
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v10 sendEventInDomain:v11 lazily:1 eventPayload:isa];

        id v13 = *(void **)(v7 + v8);
        if (!v13
          || (id v14 = [v13 rootViewController]) == 0
          || (id v15 = v14,
              id v16 = objc_msgSend(v14, "crl_windowWrapper"),
              v15,
              !v16)
          || (id v17 = [v16 newWrapperBeginningIgnoringUserInteractionSafely], v16, !v17))
        {
          if (qword_10166F9D8 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v18 = (id)static OS_os_log.crlError;
          uint64_t v19 = static os_log_type_t.error.getter();
          sub_100BAC898((uint64_t)v18, (uint64_t)&_mh_execute_header, v19, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
            90,
            2,
            (uint64_t)_swiftEmptyArrayStorage);

          id v17 = 0;
        }
        uint64_t v20 = type metadata accessor for TaskPriority();
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v3, 1, 1, v20);
        type metadata accessor for MainActor();
        id v21 = v17;
        swift_unknownObjectRetain();
        uint64_t v22 = static MainActor.shared.getter();
        id v23 = (void *)swift_allocObject();
        v23[2] = v22;
        v23[3] = &protocol witness table for MainActor;
        v23[4] = v7;
        v23[5] = v17;
        sub_1005912D0((uint64_t)v3, (uint64_t)&unk_101673E98, (uint64_t)v23);

        swift_unknownObjectRelease();
        swift_release();
      }
      else
      {

        swift_unknownObjectRelease();
      }
    }
    else
    {
    }
  }
}

void sub_100572610()
{
  qword_101673D98 = 0;
}

void sub_10057261C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_iCloudStatusLabel;
  id v10 = objc_allocWithZone((Class)UILabel);
  NSString v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  *(void *)&v11[OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_syncDidEndObserver] = 0;
  *(void *)&v11[OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_syncDidBeginObserver] = 0;

  v65.receiver = v11;
  v65.super_class = (Class)type metadata accessor for iCloudStatusFooter();
  id v12 = [super initWithFrame:a1, a2, a3, a4];
  uint64_t v13 = OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_iCloudStatusLabel;
  id v14 = *(void **)&v12[OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_iCloudStatusLabel];
  id v15 = v12;
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v14 setNumberOfLines:1];
  [v14 setTextAlignment:1];
  id v16 = self;
  id v17 = v14;
  id v18 = [v16 mainBundle];
  NSString v19 = String._bridgeToObjectiveC()();
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v18 localizedStringForKey:v19 value:v20 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v17 setText:v22];

  id v23 = *(void **)&v12[v13];
  uint64_t v24 = self;
  id v25 = v23;
  id v26 = [v24 preferredFontForTextStyle:UIFontTextStyleFootnote compatibleWithTraitCollection:0];
  [v25 setFont:v26];

  uint64_t v27 = *(void **)&v12[v13];
  [v27 setAdjustsFontForContentSizeCategory:1];
  [v27 setAdjustsFontSizeToFitWidth:1];
  [v15 addSubview:v27];
  uint64_t v28 = self;
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_10117FBD0;
  id v30 = [v15 centerXAnchor];
  id v31 = [v27 centerXAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31];

  *(void *)(v29 + 32) = v32;
  id v33 = [v15 leadingAnchor];
  id v34 = [*(id *)&v12[v13] leadingAnchor];
  id v35 = [v33 constraintEqualToAnchor:v34];

  *(void *)(v29 + 40) = v35;
  id v36 = [*(id *)&v12[v13] topAnchor];
  id v37 = [v15 topAnchor];
  if (qword_10166EBD8 != -1) {
    swift_once();
  }
  id v38 = [v36 constraintEqualToAnchor:v37 constant:*(double *)&qword_101673D98];

  *(void *)(v29 + 48) = v38;
  CGAffineTransform aBlock = (void **)v29;
  specialized Array._endMutation()();
  sub_10050BF48(0, (unint64_t *)&qword_101674200);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v28 activateConstraints:isa];

  uint64_t v40 = self;
  id v41 = [v40 defaultCenter];
  if (qword_10166FE48 != -1) {
    swift_once();
  }
  uint64_t v42 = qword_10171C3A8;
  uint64_t v43 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v63 = sub_100573630;
  uint64_t v64 = v43;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v60 = *(void *)"";
  uint64_t v61 = sub_1005E5680;
  char v62 = &unk_101508460;
  uint64_t v44 = _Block_copy(&aBlock);
  swift_release();
  id v45 = [v41 addObserverForName:v42 object:0 queue:0 usingBlock:v44];
  _Block_release(v44);

  *(void *)&v15[OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_syncDidBeginObserver] = v45;
  swift_unknownObjectRelease();
  id v46 = [v40 defaultCenter];
  if (qword_10166FE40 != -1) {
    swift_once();
  }
  uint64_t v47 = qword_10171C3A0;
  uint64_t v48 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v63 = sub_100573680;
  uint64_t v64 = v48;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v60 = *(void *)"";
  uint64_t v61 = sub_1005E5680;
  char v62 = &unk_101508488;
  uint64_t v49 = _Block_copy(&aBlock);
  swift_release();
  id v50 = [v46 addObserverForName:v47 object:0 queue:0 usingBlock:v49];
  _Block_release(v49);

  *(void *)&v15[OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_syncDidEndObserver] = v50;
  swift_unknownObjectRelease();
  id v51 = [self sharedApplication];
  id v52 = [v51 delegate];

  if (v52)
  {
    type metadata accessor for CRLiOSAppDelegate();
    uint64_t v53 = *(void *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_syncDriver);
    if (v53)
    {
      if (*(unsigned char *)(v53 + 136))
      {
        swift_unknownObjectRelease();
        char v54 = 0;
      }
      else
      {
        char v55 = *(unsigned char *)(v53 + 137);
        swift_unknownObjectRelease();
        char v54 = v55 ^ 1;
      }
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isFetchingChanges", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2, 206, (uint64_t)"Asking for fetch status before the sync driver exists.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
      LOBYTE(v58) = 2;
      uint64_t v56 = "Asking for fetch status before the sync driver exists.";
      uint64_t v57 = 54;
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFetchingChanges", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2, 206);
      swift_unknownObjectRelease();
      char v54 = 1;
    }
    [*(id *)&v12[v13] setHidden:v54 & 1, v56, v57, v58];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100572E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 48) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100572F00, v6, v5);
}

uint64_t sub_100572F00()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_iCloudStatusLabel) setHidden:0];
  }
  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100572FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v11 = static MainActor.shared.getter();
  id v12 = (void *)swift_allocObject();
  v12[2] = v11;
  v12[3] = &protocol witness table for MainActor;
  v12[4] = a2;
  sub_1005912D0((uint64_t)v9, a4, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_1005730C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 48) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100573158, v6, v5);
}

uint64_t sub_100573158()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_iCloudStatusLabel) setHidden:1];
  }
  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

id iCloudStatusFooter.__deallocating_deinit()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_syncDidEndObserver];
  if (v1)
  {
    uint64_t v2 = self;
    swift_unknownObjectRetain();
    id v3 = [v2 defaultCenter];
    [v3 removeObserver:v1];
    swift_unknownObjectRelease();
  }
  uint64_t v4 = *(void *)&v0[OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_syncDidBeginObserver];
  if (v4)
  {
    uint64_t v5 = self;
    swift_unknownObjectRetain();
    id v6 = [v5 defaultCenter];
    [v6 removeObserver:v4];
    swift_unknownObjectRelease();
  }
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for iCloudStatusFooter();
  return [super dealloc];
}

uint64_t type metadata accessor for iCloudStatusFooter()
{
  return self;
}

uint64_t sub_100573404()
{
  return type metadata accessor for CRLiOSSidebarViewController();
}

uint64_t type metadata accessor for CRLiOSSidebarViewController()
{
  uint64_t result = qword_101673E18;
  if (!qword_101673E18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100573458()
{
  sub_10057351C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10057351C()
{
  if (!qword_101673E28)
  {
    type metadata accessor for CRLBoardLibraryViewModel.Item(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101673E28);
    }
  }
}

uint64_t sub_1005735F8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100573630(uint64_t a1)
{
  return sub_100572FAC(a1, v1, (uint64_t)&unk_1015084E8, (uint64_t)&unk_101673E78);
}

uint64_t sub_100573668(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100573678()
{
  return swift_release();
}

uint64_t sub_100573680(uint64_t a1)
{
  return sub_100572FAC(a1, v1, (uint64_t)&unk_1015084C0, (uint64_t)&unk_101673E68);
}

uint64_t sub_1005736BC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528488;
  return sub_1005730C0(a1, v4, v5, v6);
}

uint64_t sub_100573774(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100572E68(a1, v4, v5, v6);
}

void sub_100573828()
{
}

void sub_100573850()
{
  *(void *)&v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_selectedItem];
  uint64_t v2 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(void *)&v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_syncDidEndObserver] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_syncDidBeginObserver] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_highlightSyncDidEndObserver] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_highlightSyncDidBeginObserver] = 0;
  v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges] = 0;
  v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingHighlights] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10057396C()
{
  uint64_t v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v14 - 8, v15);
  id v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166FAC0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v18 = (void *)static OS_os_log.crlSidebar;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v20 = v0 + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_selectedItem;
  swift_beginAccess();
  sub_100522E9C(v20, (uint64_t)v17, (uint64_t *)&unk_101676310);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v17, 1, v5))
  {
    id v21 = v18;
    sub_100522F00((uint64_t)v17, (uint64_t *)&unk_101676310);
    uint64_t v22 = 0;
    unint64_t v23 = 0;
  }
  else
  {
    sub_100576754((uint64_t)v17, (uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
    id v24 = v18;
    sub_100522F00((uint64_t)v17, (uint64_t *)&unk_101676310);
    sub_100576754((uint64_t)v13, (uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
    EnumCaseMultiPayloadouble d = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        sub_100575C20((uint64_t)v10, (uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        uint64_t v22 = sub_100DD4C48();
        unint64_t v23 = v26;
        uint64_t v27 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
        uint64_t v28 = (uint64_t)v4;
      }
      else
      {
        id v30 = (uint64_t *)&v10[*(int *)(sub_1005057FC(&qword_101677100) + 48)];
        uint64_t v22 = *v30;
        unint64_t v23 = v30[1];
        uint64_t v27 = type metadata accessor for CRLBoardIdentifier;
        uint64_t v28 = (uint64_t)v10;
      }
      sub_100575C88(v28, v27);
    }
    else
    {
      uint64_t v22 = sub_100DD8CAC();
      unint64_t v23 = v29;
    }
    sub_100575C88((uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
  }
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  uint64_t v31 = 1162760014;
  if (v23) {
    uint64_t v31 = v22;
  }
  unint64_t v32 = 0xE400000000000000;
  if (v23) {
    unint64_t v32 = v23;
  }
  *(void *)(inited + 32) = v31;
  *(void *)(inited + 40) = v32;
  uint64_t v33 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v18, (uint64_t)&_mh_execute_header, v33, (uint64_t)"selectedItem before view model update: %@", 41, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

uint64_t sub_100573D5C()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [v0 navigationController];
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = [v10 navigationBar];

    if (v12)
    {
      [v12 setPrefersLargeTitles:1];
      sub_1005057FC((uint64_t *)&unk_101687FB0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      *(void *)(inited + 32) = NSForegroundColorAttributeName;
      uint64_t v14 = NSForegroundColorAttributeName;
      id v15 = [v12 tintColor];
      *(void *)(inited + 64) = sub_1005057FC(&qword_101673E90);
      *(void *)(inited + 40) = v15;
      sub_100A38A68(inited);
      type metadata accessor for Key(0);
      sub_100575CF8((unint64_t *)&qword_1016837E0, type metadata accessor for Key);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v12 setLargeTitleTextAttributes:isa];
    }
  }
  sub_10056D068();
  if (!swift_unknownObjectWeakLoadStrong())
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    return sub_100522F00((uint64_t)v4, (uint64_t *)&unk_101676310);
  }
  id v17 = sub_100A70A50();
  unsigned int v18 = [v17 isCollapsed];

  if (v18) {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  }
  else {
    sub_100A7033C((uint64_t)v4);
  }
  swift_unknownObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_100522F00((uint64_t)v4, (uint64_t *)&unk_101676310);
  }
  sub_100575C20((uint64_t)v4, (uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Item);
  sub_10056D504((uint64_t)v9, 0);
  return sub_100575C88((uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Item);
}

uint64_t sub_1005740C8()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  id v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8, v11);
  uint64_t v14 = (char *)&v21 - v13;
  if (*(void *)(v0 + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController))
  {
    swift_retain();
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_100522F00((uint64_t)v4, (uint64_t *)&unk_101676310);
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      type metadata accessor for IndexPath();
      sub_100575CF8(&qword_10169B640, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v18 = v17;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v16;
      *(void *)(inited + 40) = v18;
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"collectionView(_:shouldSelectItemAt:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 242, (uint64_t)"Bad index path: %@", 18, 2u, inited);
      sub_1005598CC(inited, (uint64_t)"collectionView(_:shouldSelectItemAt:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 242);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
      return 0;
    }
    else
    {
      sub_100575C20((uint64_t)v4, (uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100576754((uint64_t)v14, (uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
      EnumCaseMultiPayloadouble d = swift_getEnumCaseMultiPayload();
      BOOL v19 = EnumCaseMultiPayload != 0;
      if (EnumCaseMultiPayload) {
        sub_100575C88((uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      sub_100575C88((uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
    }
    return v19;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100574430()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v43 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101676310);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v12 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v16 = __chkstk_darwin(v12, v15);
  uint64_t v42 = (uint64_t)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16, v17);
  uint64_t v20 = (char *)&v41 - v19;
  uint64_t result = __chkstk_darwin(v18, v21);
  id v24 = (char *)&v41 - v23;
  uint64_t v44 = v0;
  if (*(void *)(v0 + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController))
  {
    swift_retain();
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      sub_100522F00((uint64_t)v11, (uint64_t *)&unk_101676310);
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      type metadata accessor for IndexPath();
      sub_100575CF8(&qword_10169B640, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v28 = v27;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v26;
      *(void *)(inited + 40) = v28;
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"collectionView(_:didSelectItemAt:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 251, (uint64_t)"Bad index path: %@", 18, 2u, inited);
      sub_1005598CC(inited, (uint64_t)"collectionView(_:didSelectItemAt:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 251);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      return swift_arrayDestroy();
    }
    else
    {
      sub_100575C20((uint64_t)v11, (uint64_t)v24, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100576754((uint64_t)v24, (uint64_t)v20, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_100575C88((uint64_t)v20, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100576754((uint64_t)v24, (uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
        uint64_t v29 = v44 + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_selectedItem;
        swift_beginAccess();
        sub_100574B58((uint64_t)v8, v29);
        swift_endAccess();
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v30 = type metadata accessor for TaskPriority();
          uint64_t v31 = (uint64_t)v43;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v43, 1, 1, v30);
          uint64_t v32 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v33 = v42;
          sub_100576754((uint64_t)v24, v42, type metadata accessor for CRLBoardLibraryViewModel.Item);
          type metadata accessor for MainActor();
          swift_retain();
          uint64_t v34 = static MainActor.shared.getter();
          unint64_t v35 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
          id v36 = (void *)swift_allocObject();
          v36[2] = v34;
          v36[3] = &protocol witness table for MainActor;
          v36[4] = v32;
          sub_100575C20(v33, (uint64_t)v36 + v35, type metadata accessor for CRLBoardLibraryViewModel.Item);
          swift_release();
          sub_1005912D0(v31, (uint64_t)&unk_101673E80, (uint64_t)v36);
          swift_unknownObjectRelease();
          swift_release();
        }
        else
        {
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t v37 = swift_initStackObject();
          *(_OWORD *)(v37 + 16) = xmmword_10117E810;
          type metadata accessor for IndexPath();
          sub_100575CF8(&qword_10169B640, (void (*)(uint64_t))&type metadata accessor for IndexPath);
          uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v40 = v39;
          *(void *)(v37 + 56) = &type metadata for String;
          *(void *)(v37 + 64) = sub_100528BE4();
          *(void *)(v37 + 32) = v38;
          *(void *)(v37 + 40) = v40;
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"collectionView(_:didSelectItemAt:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 263, (uint64_t)"No delegate. Ignoring selection of index path: %@", 49, 2u, v37);
          sub_1005598CC(v37, (uint64_t)"collectionView(_:didSelectItemAt:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 263);
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();
        }
      }
      return sub_100575C88((uint64_t)v24, type metadata accessor for CRLBoardLibraryViewModel.Item);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100574B58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101676310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100574BC4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100A82540(a1, v5, v6, v7, v8);
}

void sub_100574CC0()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)v106 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v108 = (uint64_t)v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_10169B4A0);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  uint64_t v116 = (char *)v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10, v12);
  id v109 = (char *)v106 - v14;
  uint64_t v16 = __chkstk_darwin(v13, v15);
  uint64_t v18 = (char *)v106 - v17;
  __chkstk_darwin(v16, v19);
  uint64_t v21 = (char *)v106 - v20;
  uint64_t v22 = type metadata accessor for IndexPath();
  uint64_t v119 = *(void *)(v22 - 8);
  uint64_t v120 = v22;
  __chkstk_darwin(v22, v23);
  uint64_t v115 = (char *)v106 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1005057FC((uint64_t *)&unk_101676310);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  uint64_t v112 = (uint64_t)v106 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)v106 - v30;
  uint64_t v32 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v35 = __chkstk_darwin(v32, v34);
  uint64_t v107 = (uint64_t)v106 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v35, v37);
  uint64_t v110 = (char *)v106 - v39;
  uint64_t v41 = __chkstk_darwin(v38, v40);
  uint64_t v118 = (uint64_t)v106 - v42;
  v106[1] = v43;
  __chkstk_darwin(v41, v44);
  id v46 = (char *)v106 - v45;
  uint64_t v47 = (uint64_t)&v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_selectedItem];
  swift_beginAccess();
  uint64_t v111 = v47;
  sub_100522E9C(v47, (uint64_t)v31, (uint64_t *)&unk_101676310);
  uint64_t v114 = v33;
  uint64_t v48 = v33;
  uint64_t v49 = v32;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v31, 1, v32) != 1)
  {
    v106[0] = v4;
    sub_100575C20((uint64_t)v31, (uint64_t)v46, type metadata accessor for CRLBoardLibraryViewModel.Item);
    uint64_t v52 = OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController;
    uint64_t v113 = v0;
    if (*(void *)&v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController])
    {
      swift_retain();
      uint64_t v117 = v46;
      dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
      uint64_t v54 = v119;
      uint64_t v53 = v120;
      char v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v119 + 48);
      int v56 = v55(v18, 1, v120);
      uint64_t v57 = (uint64_t)v116;
      if (v56 == 1)
      {
        sub_100522F00((uint64_t)v18, (uint64_t *)&unk_10169B4A0);
        uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56);
        v58(v21, 1, 1, v53);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v21, v18, v53);
        uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56);
        v58(v21, 0, 1, v53);
      }
      swift_release();
      if (v55(v21, 1, v53) == 1)
      {
        sub_100522F00((uint64_t)v21, (uint64_t *)&unk_10169B4A0);
        uint64_t v59 = sub_1005057FC(&qword_101670F30);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v118, 1, 5, v59);
        swift_storeEnumTagMultiPayload();
        if (!*(void *)&v113[v52])
        {
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        swift_retain();
        dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
        uint64_t v60 = v120;
        if (v55((char *)v57, 1, v120) == 1)
        {
          sub_100522F00(v57, (uint64_t *)&unk_10169B4A0);
          uint64_t v61 = 1;
          uint64_t v62 = v119;
          uint64_t v63 = (uint64_t)v109;
        }
        else
        {
          uint64_t v62 = v119;
          uint64_t v63 = (uint64_t)v109;
          (*(void (**)(char *, uint64_t, uint64_t))(v119 + 32))(v109, v57, v60);
          uint64_t v61 = 0;
        }
        v58((char *)v63, v61, 1, v60);
        swift_release();
        if (v55((char *)v63, 1, v60) == 1)
        {
          sub_100522F00(v63, (uint64_t *)&unk_10169B4A0);
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"libraryViewModelControllerDidApplyUpdate(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 305, (uint64_t)"No index path for All Boards", 28, 2u, (uint64_t)_swiftEmptyArrayStorage);
          LOBYTE(v105) = 2;
          v104[0] = "No index path for All Boards";
          v104[1] = 28;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"libraryViewModelControllerDidApplyUpdate(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 305);
          uint64_t v67 = v118;
LABEL_35:
          sub_100575C88(v67, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_100575C88((uint64_t)v117, type metadata accessor for CRLBoardLibraryViewModel.Item);
          return;
        }
        objc_super v65 = v115;
        (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v115, v63, v60);
        uint64_t v64 = v62;
        uint64_t v66 = v118;
      }
      else
      {
        uint64_t v64 = v119;
        objc_super v65 = v115;
        (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v115, v21, v53);
        uint64_t v66 = v118;
        sub_100576754((uint64_t)v117, v118, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      uint64_t v68 = (uint64_t)v110;
      if (qword_10166FAC0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v69 = (void *)static OS_os_log.crlSidebar;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      sub_100576754(v66, v68, type metadata accessor for CRLBoardLibraryViewModel.Item);
      EnumCaseMultiPayloadouble d = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v72 = v68;
          uint64_t v68 = v108;
          sub_100575C20(v72, v108, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          id v73 = v69;
          uint64_t v74 = sub_100DD4C48();
          uint64_t v76 = v75;
          id v77 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
        }
        else
        {
          uint64_t v80 = (uint64_t *)(v68 + *(int *)(sub_1005057FC(&qword_101677100) + 48));
          uint64_t v74 = *v80;
          uint64_t v76 = v80[1];
          id v81 = v69;
          id v77 = type metadata accessor for CRLBoardIdentifier;
        }
        sub_100575C88(v68, v77);
      }
      else
      {
        id v78 = v69;
        uint64_t v74 = sub_100DD8CAC();
        uint64_t v76 = v79;
      }
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v74;
      *(void *)(inited + 40) = v76;
      uint64_t v82 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v69, (uint64_t)&_mh_execute_header, v82, (uint64_t)"selectedItem after view model update: %@", 40, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      uint64_t v83 = v112;
      sub_100576754(v66, v112, type metadata accessor for CRLBoardLibraryViewModel.Item);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v114 + 56))(v83, 0, 1, v49);
      uint64_t v84 = v111;
      swift_beginAccess();
      sub_100574B58(v83, v84);
      swift_endAccess();
      id v85 = [v113 collectionView];
      if (v85)
      {
        id v86 = v85;
        id v87 = [v85 indexPathsForSelectedItems];

        if (!v87) {
          goto LABEL_31;
        }
        uint64_t v88 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        __chkstk_darwin(v89, v90);
        uint64_t v105 = v65;
        BOOL v91 = sub_101022164((uint64_t (*)(char *))sub_100575C00, (uint64_t)v104, v88);
        swift_bridgeObjectRelease();
        if (v91) {
          goto LABEL_31;
        }
        id v92 = [v113 collectionView];
        if (v92)
        {
          id v93 = v92;
          Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
          [v93 selectItemAtIndexPath:isa animated:1 scrollPosition:0];

LABEL_31:
          if ((sub_100DDCC28((uint64_t)v117, v66) & 1) == 0 && swift_unknownObjectWeakLoadStrong())
          {
            uint64_t v95 = type metadata accessor for TaskPriority();
            uint64_t v96 = v106[0];
            (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 56))(v106[0], 1, 1, v95);
            uint64_t v97 = swift_allocObject();
            swift_unknownObjectWeakInit();
            uint64_t v98 = v107;
            sub_100576754(v66, v107, type metadata accessor for CRLBoardLibraryViewModel.Item);
            type metadata accessor for MainActor();
            swift_retain();
            uint64_t v99 = static MainActor.shared.getter();
            unint64_t v100 = (*(unsigned __int8 *)(v114 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
            uint64_t v101 = (void *)swift_allocObject();
            v101[2] = v99;
            v101[3] = &protocol witness table for MainActor;
            v101[4] = v97;
            uint64_t v102 = (uint64_t)v101 + v100;
            uint64_t v66 = v118;
            sub_100575C20(v98, v102, type metadata accessor for CRLBoardLibraryViewModel.Item);
            swift_release();
            uint64_t v103 = v96;
            objc_super v65 = v115;
            sub_1005912D0(v103, (uint64_t)&unk_101673E88, (uint64_t)v101);
            swift_unknownObjectRelease();
            swift_release();
          }
          (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v120);
          uint64_t v67 = v66;
          goto LABEL_35;
        }
LABEL_39:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_38;
  }
  sub_100522F00((uint64_t)v31, (uint64_t *)&unk_101676310);
  if (qword_10166FAC0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v50 = (id)static OS_os_log.crlSidebar;
  uint64_t v51 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v50, (uint64_t)&_mh_execute_header, v51, (uint64_t)"No selectedItem after view model update, so nothing to change", 61, 2, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_100575A38()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  swift_release();
  EnumCaseMultiPayloadouble d = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v3, v8);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1005057FC(&qword_101677100);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = sub_1005057FC(&qword_101670F30);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v3, 5, v6))
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100575C00(uint64_t a1)
{
  return sub_1010294D8(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_100575C20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100575C88(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_100575CE8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_100575CF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100575D40()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100575D78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005721F8(a1, *(void **)(v2 + 16), a2);
}

void sub_100575D80()
{
}

uint64_t sub_100575D88()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100575DD0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_100A82A20(a1, v4, v5, v7, v6);
}

uint64_t sub_100575E9C()
{
  return 8;
}

uint64_t sub_100575EA8()
{
  return swift_release();
}

uint64_t sub_100575EB0(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_100575EC4(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

id sub_100575ED0(uint64_t a1, uint64_t a2)
{
  return sub_10056E9FC(a1, a2);
}

void sub_100575ED8(void *a1, uint64_t a2, uint64_t a3)
{
  sub_10056F19C(a1, a2, a3, v3);
}

uint64_t sub_100575EE0()
{
  uint64_t v1 = sub_1005057FC(&qword_101673EA8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100575F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1005057FC(&qword_101673EA8);

  return sub_1005719B0(a1, a2, a3);
}

uint64_t sub_100576000(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_10056C548(a1, a2, a3);
}

uint64_t sub_100576008(uint64_t a1)
{
  return sub_100572FAC(a1, v1, (uint64_t)&unk_101508788, (uint64_t)&unk_101673F00);
}

uint64_t sub_100576040(uint64_t a1)
{
  return sub_100572FAC(a1, v1, (uint64_t)&unk_101508760, (uint64_t)&unk_101673EF0);
}

uint64_t sub_100576078(uint64_t a1)
{
  return sub_100572FAC(a1, v1, (uint64_t)&unk_101508738, (uint64_t)&unk_101673EE0);
}

uint64_t sub_1005760B0(uint64_t a1)
{
  return sub_100572FAC(a1, v1, (uint64_t)&unk_101508710, (uint64_t)&unk_101673ED0);
}

uint64_t sub_1005760EC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_10056CF24(a1, v4, v5, v6);
}

uint64_t sub_1005761A4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_10056CDE0(a1, v4, v5, v6);
}

uint64_t sub_10057625C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_10056CC9C(a1, v4, v5, v6);
}

uint64_t sub_100576314(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_10056CB58(a1, v4, v5, v6);
}

uint64_t sub_1005763C8()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100576458()
{
  type metadata accessor for URL();

  sub_100991FD0();
}

uint64_t sub_1005764C8()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  EnumCaseMultiPayloadouble d = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v3, v8);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1005057FC(&qword_101677100);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = sub_1005057FC(&qword_101670F30);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v3, 5, v6))
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }
  unint64_t v9 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = v9 + 8;

  return _swift_deallocObject(v0, v10, v2 | 7);
}

char *sub_1005766A4(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(void **)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_100570218(a1, a2, v7, v2 + v6, v8);
}

uint64_t sub_100576754(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *sub_1005767BC(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

void sub_100576900(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v564 = a1;
  uint64_t v533 = type metadata accessor for CRLProto_BoardItemIdentifier(0);
  __chkstk_darwin(v533, v3);
  v532 = (char *)&v496 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLServerSyncedPeerAddedItemEvent();
  __chkstk_darwin(v5 - 8, v6);
  v504 = (char *)&v496 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v510 = (uint64_t)&v496 - v10;
  uint64_t v11 = type metadata accessor for CRLRefuseOrEndFollow();
  __chkstk_darwin(v11 - 8, v12);
  v531 = (char *)&v496 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v529 = sub_1005057FC((uint64_t *)&unk_10168A0C0);
  __chkstk_darwin(v529, v14);
  uint64_t v547 = (uint64_t)&v496 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v19 = (char *)&v496 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v496 - v22;
  __chkstk_darwin(v24, v25);
  uint64_t v573 = (uint64_t)&v496 - v26;
  uint64_t v27 = type metadata accessor for CRLFollowViewportState();
  __chkstk_darwin(v27 - 8, v28);
  uint64_t v30 = (char *)&v496 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v528 = type metadata accessor for CRLStartOrEndFollow();
  __chkstk_darwin(v528, v31);
  v569 = (char *)&v496 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33, v34);
  uint64_t v36 = (uint64_t)&v496 - v35;
  __chkstk_darwin(v37, v38);
  v567 = (char *)&v496 - v39;
  uint64_t v40 = sub_1005057FC(&qword_101673F88);
  __chkstk_darwin(v40 - 8, v41);
  uint64_t v553 = (uint64_t)&v496 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v540 = sub_1005057FC(&qword_101673F90);
  __chkstk_darwin(v540, v43);
  v539 = (char *)&v496 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v570 = type metadata accessor for CRLCollaboratorCursorColor();
  __chkstk_darwin(v570, v45);
  v538 = (char *)&v496 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47, v48);
  v575 = (char *)&v496 - v49;
  uint64_t v50 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v50 - 8, v51);
  uint64_t v513 = (uint64_t)&v496 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v53, v54);
  uint64_t v558 = (uint64_t)&v496 - v55;
  uint64_t v563 = type metadata accessor for CRLProto_Data(0);
  uint64_t v545 = *(void *)(v563 - 8);
  __chkstk_darwin(v563, v56);
  v512 = (long long *)((char *)&v496 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v58, v59);
  v557 = (long long *)((char *)&v496 - v60);
  uint64_t v61 = type metadata accessor for BinaryDecodingOptions();
  __chkstk_darwin(v61 - 8, v62);
  v530 = (char *)&v496 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v64, v65);
  v560 = (char *)&v496 - v66;
  v587 = (int *)type metadata accessor for CRLProto_RealTimeLeave(0);
  __chkstk_darwin(v587, v67);
  uint64_t v574 = (uint64_t)&v496 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for CRLRealTimeLeave(0);
  __chkstk_darwin(v69 - 8, v70);
  v552 = (char *)&v496 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1005057FC((uint64_t *)&unk_101674230);
  __chkstk_darwin(v72 - 8, v73);
  uint64_t v514 = (uint64_t)&v496 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v75, v76);
  uint64_t v521 = (uint64_t)&v496 - v77;
  __chkstk_darwin(v78, v79);
  uint64_t v509 = (uint64_t)&v496 - v80;
  __chkstk_darwin(v81, v82);
  v517 = (char *)&v496 - v83;
  __chkstk_darwin(v84, v85);
  uint64_t v515 = (uint64_t)&v496 - v86;
  __chkstk_darwin(v87, v88);
  uint64_t v523 = (uint64_t)&v496 - v89;
  uint64_t v571 = type metadata accessor for CRLRealTimeEnter(0);
  uint64_t v543 = *(void *)(v571 - 8);
  __chkstk_darwin(v571, v90);
  uint64_t v537 = (uint64_t)&v496 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v92, v93);
  v582 = (id *)((char *)&v496 - v94);
  uint64_t v520 = type metadata accessor for Date();
  uint64_t v95 = *(void *)(v520 - 8);
  __chkstk_darwin(v520, v96);
  v524 = (char *)&v496 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v98, v99);
  v507 = (char *)&v496 - v100;
  uint64_t v589 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  uint64_t v544 = *(void *)(v589 - 8);
  __chkstk_darwin(v589, v101);
  v581 = (uint64_t *)((char *)&v496 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v103 = sub_1005057FC((uint64_t *)&unk_10169A1A0);
  __chkstk_darwin(v103 - 8, v104);
  int v106 = (char *)&v496 - ((v105 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v107, v108);
  uint64_t v534 = (uint64_t)&v496 - v109;
  __chkstk_darwin(v110, v111);
  uint64_t v556 = (uint64_t)&v496 - v112;
  __chkstk_darwin(v113, v114);
  uint64_t v551 = (uint64_t)&v496 - v115;
  __chkstk_darwin(v116, v117);
  uint64_t v555 = (uint64_t)&v496 - v118;
  __chkstk_darwin(v119, v120);
  uint64_t v527 = (uint64_t)&v496 - v121;
  uint64_t v594 = type metadata accessor for UUID();
  uint64_t v562 = *(void *)(v594 - 8);
  __chkstk_darwin(v594, v122);
  v511 = (char *)&v496 - ((v123 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v124, v125);
  v508 = (char *)&v496 - v126;
  __chkstk_darwin(v127, v128);
  v550 = (char *)&v496 - v129;
  __chkstk_darwin(v130, v131);
  v554 = (char *)&v496 - v132;
  __chkstk_darwin(v133, v134);
  v541 = (char *)&v496 - v135;
  __chkstk_darwin(v136, v137);
  v518 = (char *)&v496 - v138;
  __chkstk_darwin(v139, v140);
  v542 = (char *)&v496 - v141;
  __chkstk_darwin(v142, v143);
  v549 = (char *)&v496 - v144;
  uint64_t v536 = type metadata accessor for CRLCollaboratorCursor();
  __chkstk_darwin(v536, v145);
  uint64_t v566 = (uint64_t)&v496 - ((v146 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    uint64_t v36 = v2;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandApplyBoardAuxiliaryPeerSyncUpdates.swift", 116, 2, 44, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandApplyBoardAuxiliaryPeerSyncUpdates.swift", 116, 2, 44);
    if (qword_10166FBA0 == -1)
    {
LABEL_5:
      swift_beginAccess();
      uint64_t v157 = (void *)static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      uint64_t v159 = *(void *)(*(void *)(v36
                                   + OBJC_IVAR____TtC8Freeform44CRLCommandApplyBoardAuxiliaryPeerSyncUpdates_updates)
                       + 16);
      *(void *)(inited + 56) = &type metadata for Int;
      *(void *)(inited + 64) = &protocol witness table for Int;
      *(void *)(inited + 32) = v159;
      uint64_t v151 = v157;
      uint64_t v160 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v151, (uint64_t)&_mh_execute_header, v160, (uint64_t)"No editing coordinator. Ignoring %d update(s).", 46, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
      goto LABEL_221;
    }
LABEL_225:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v148 = Strong;
  [Strong willProcessAuxiliaryRealTimeChanges];
  unint64_t v602 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v149 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform44CRLCommandApplyBoardAuxiliaryPeerSyncUpdates_legacyUpdates);
  unsigned int v150 = *(void **)(v149 + 16);
  v502 = v19;
  v503 = v106;
  v519 = v23;
  v596 = v148;
  v505 = (char *)v36;
  v506 = v30;
  uint64_t v151 = v148;
  id v591 = v150;
  if (!v150) {
    goto LABEL_151;
  }
  uint64_t v498 = v2;
  *(void *)&long long v579 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  uint64_t v559 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_collaboratorCursorCoordinator;
  unint64_t v592 = v149 + 32;
  v578 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v544 + 48);
  v548 = (void (**)(char *, char *, uint64_t))(v562 + 32);
  v565 = (void (**)(char *, uint64_t, uint64_t))(v562 + 16);
  v572 = (void (**)(void, void))(v562 + 8);
  uint64_t v525 = OBJC_IVAR____TtC8Freeform8CRLBoard_shareState;
  v526 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v545 + 48);
  v499 = (void (**)(void, void))(v95 + 8);
  v546 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v543 + 56);
  v522 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v543 + 48);
  v497 = (void (**)(char *, char *, uint64_t))(v95 + 40);
  uint64_t v152 = swift_bridgeObjectRetain();
  unint64_t v153 = 0;
  long long v535 = xmmword_10117D8C0;
  long long v500 = xmmword_10117DF40;
  long long v501 = xmmword_101180360;
  uint64_t v154 = v589;
  uint64_t v155 = v587;
  uint64_t v156 = v152;
  uint64_t v577 = v152;
  while (2)
  {
    if (v153 >= *(void *)(v156 + 16))
    {
      __break(1u);
LABEL_224:
      __break(1u);
      goto LABEL_225;
    }
    unint64_t v164 = v592 + 24 * v153;
    uint64_t v36 = *(void *)(v164 + 8);
    id v165 = *(id *)(v164 + 16);
    ++v153;
    switch(*(unsigned char *)v164)
    {
      case 1:
        uint64_t v595 = v153;
        uint64_t v168 = *(void **)&v151[v559];
        sub_100510D4C(v36, (unint64_t)v165);
        sub_100510D4C(v36, (unint64_t)v165);
        id v169 = v168;
        uint64_t v170 = v566;
        uint64_t v171 = v597;
        sub_1009DDD08(v36, (unint64_t)v165, v566);
        if (v171)
        {

          v597 = 0;
LABEL_78:
          if (qword_10166FAD0 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v321 = (id)static OS_os_log.crlCollaboratorCursor;
          uint64_t v322 = static os_log_type_t.error.getter();
          sub_100BAC898((uint64_t)v321, (uint64_t)&_mh_execute_header, v322, (uint64_t)"Error reading selection from peers", 34, 2, (uint64_t)_swiftEmptyArrayStorage);
          sub_100510084(v36, (unint64_t)v165);

          swift_errorRelease();
          goto LABEL_81;
        }
        v590 = (void (**)(void))v169;
        id v593 = v165;
        v597 = 0;
        v314 = *(void **)(v170 + *(int *)(v536 + 20));
        uint64_t v315 = v594;
        (*v565)(v549, v170, v594);
        uint64_t v316 = *(void *)&v151[v579] + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
        swift_beginAccess();
        uint64_t v317 = v316;
        uint64_t v318 = v527;
        sub_100522E9C(v317, v527, (uint64_t *)&unk_10169A1A0);
        if ((*v578)(v318, 1, v154))
        {
          id v319 = v314;
          sub_100522F00(v318, (uint64_t *)&unk_10169A1A0);
          sub_10057AC18();
          swift_allocError();
          unsigned char *v320 = 1;
          swift_willThrow();

          (*v572)(v549, v315);
          sub_10057AD44(v170, (uint64_t (*)(void))type metadata accessor for CRLCollaboratorCursor);
          v597 = 0;
          id v165 = v593;
          uint64_t v156 = v577;
          uint64_t v154 = v589;
          goto LABEL_78;
        }
        uint64_t v350 = v318;
        uint64_t v351 = v318;
        uint64_t v352 = (uint64_t)v581;
        sub_10057AC6C(v350, (uint64_t)v581, type metadata accessor for CRLBoard.RealTimeSessionInfo);
        v353 = v314;
        sub_100522F00(v351, (uint64_t *)&unk_10169A1A0);
        uint64_t v154 = v589;
        swift_retain();
        sub_10057AD44(v352, type metadata accessor for CRLBoard.RealTimeSessionInfo);
        v354 = sub_10070A6DC();
        v356 = v355;
        swift_release();
        if (!v354)
        {
          unint64_t v391 = (unint64_t)v593;
          uint64_t v156 = v577;
          if (qword_10166FAD0 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v392 = (id)static OS_os_log.crlCollaboratorCursor;
          uint64_t v393 = static os_log_type_t.error.getter();
          sub_100BAC898((uint64_t)v392, (uint64_t)&_mh_execute_header, v393, (uint64_t)"Failed to find a presence for the given presenceUUID and collaborator cursor.", 77, 2, (uint64_t)_swiftEmptyArrayStorage);

          sub_100510084(v36, v391);
          uint64_t v155 = v587;
          goto LABEL_149;
        }
        v568 = v353;

        v357 = v356;
        v358 = v507;
        Date.init(timeIntervalSinceReferenceDate:)();
        v359 = &v357[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
        swift_beginAccess();
        (*v497)(v359, v358, v520);
        swift_endAccess();
        v585 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v357;
        uint64_t v360 = swift_unknownObjectWeakLoadStrong();
        unint64_t v361 = (unint64_t)v593;
        if (!v360) {
          goto LABEL_146;
        }
        v362 = (void *)v360;
        swift_getKeyPath();
        swift_getKeyPath();
        id v561 = v362;
        static Published.subscript.getter();
        swift_release();
        swift_release();
        uint64_t v363 = v599;
        uint64_t v576 = v36;
        if ((unint64_t)v599 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v364 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v364) {
            goto LABEL_96;
          }
        }
        else
        {
          uint64_t v364 = *(void *)((v599 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v364)
          {
LABEL_96:
            if (v364 < 1)
            {
              __break(1u);
              JUMPOUT(0x10057AAA0);
            }
            unint64_t v365 = v363 & 0xC000000000000001;
            *(void *)&long long v586 = (char *)v590
                             + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap;
            swift_beginAccess();
            uint64_t v366 = 0;
            uint64_t v584 = v363;
            v583 = (void (**)(void, void))v364;
            v580 = (unsigned int (**)(void, void, void))(v363 & 0xC000000000000001);
            do
            {
              if (v365) {
                v373 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                v373 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))*(id *)(v363 + 8 * v366 + 32);
              }
              v374 = v585;
              if (v373 != v585)
              {
                v588 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v373;
                uint64_t v375 = (uint64_t)v373 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID;
                uint64_t v376 = *(void *)v586;
                if (*(void *)(*(void *)v586 + 16))
                {
                  swift_bridgeObjectRetain();
                  unint64_t v377 = sub_100955FC8(v375);
                  if (v378)
                  {
                    uint64_t v379 = *(void *)(v376 + 56) + 24 * v377;
                    v380 = *(void **)(v379 + 8);
                    v381 = *(void **)(v379 + 16);
                    id v382 = *(id *)v379;
                    id v383 = v380;
                    v374 = v381;
                    swift_bridgeObjectRelease();
                    if (v382 == (id)1)
                    {
                      v374 = 0;
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                    v374 = 0;
                  }
                }
                else
                {
                  v374 = 0;
                }
                swift_beginAccess();
                swift_bridgeObjectRetain();
                unint64_t v384 = sub_100955FC8(v375);
                char v386 = v385;
                swift_bridgeObjectRelease();
                v369 = 0;
                v370 = 0;
                v371 = 0;
                if (v386)
                {
                  v387 = (uint64_t *)v586;
                  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v389 = *v387;
                  uint64_t v598 = *v387;
                  uint64_t *v387 = 0x8000000000000000;
                  if (!isUniquelyReferenced_nonNull_native)
                  {
                    sub_10097D598();
                    uint64_t v389 = v598;
                  }
                  (*(void (**)(unint64_t, uint64_t))(v562 + 8))(*(void *)(v389 + 48) + *(void *)(v562 + 72) * v384, v594);
                  uint64_t v367 = v598;
                  uint64_t v368 = *(void *)(v598 + 56) + 24 * v384;
                  v369 = *(void **)v368;
                  v370 = *(void **)(v368 + 8);
                  v371 = *(void **)(v368 + 16);
                  sub_100588C38(v384, v598);
                  uint64_t *v387 = v367;
                  swift_bridgeObjectRelease();
                  unint64_t v365 = (unint64_t)v580;
                }
                swift_endAccess();
                sub_10057ADF4(v369, v370, v371);
                v372 = v588;
                sub_100BBDB94(v374, 0, (uint64_t)v588);

                uint64_t v151 = v596;
                unint64_t v361 = (unint64_t)v593;
                uint64_t v363 = v584;
                uint64_t v364 = (uint64_t)v583;
              }
              ++v366;
            }
            while (v364 != v366);
          }
        }

        swift_bridgeObjectRelease();
        uint64_t v36 = v576;
LABEL_146:
        if (qword_10166FAD0 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v593 = (id)static OS_os_log.crlCollaboratorCursor;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v419 = swift_initStackObject();
        *(_OWORD *)(v419 + 16) = v535;
        *(void *)(v419 + 56) = type metadata accessor for CRLPersistableSelectionPath(0);
        *(void *)(v419 + 64) = sub_10057ADA4(&qword_101673FB8, (void (*)(uint64_t))type metadata accessor for CRLPersistableSelectionPath);
        v420 = v568;
        *(void *)(v419 + 32) = v568;
        *(void *)(v419 + 96) = type metadata accessor for CRLCollaboratorPresence();
        *(void *)(v419 + 104) = sub_10057ADA4(&qword_101673FC0, (void (*)(uint64_t))type metadata accessor for CRLCollaboratorPresence);
        v421 = v585;
        *(void *)(v419 + 72) = v585;
        v422 = v420;
        v353 = v421;
        id v423 = v593;
        uint64_t v424 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v423, (uint64_t)&_mh_execute_header, v424, (uint64_t)"Collaborator Cursor: Received an updated collab cursor for selection path: %{public}@, from collaborator: %{public}@", 116, 2, v419);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        v425 = v422;
        v426 = v590;
        sub_100BBC814(v422, v353);

        sub_100510084(v36, v361);
        uint64_t v155 = v587;
        uint64_t v154 = v589;
        uint64_t v156 = v577;
LABEL_149:

        (*v572)(v549, v594);
        sub_10057AD44(v566, (uint64_t (*)(void))type metadata accessor for CRLCollaboratorCursor);
        unint64_t v153 = v595;
        goto LABEL_9;
      case 2:
        sub_100510D4C(*(void *)(v164 + 8), *(void *)(v164 + 16));
        sub_100510D4C(v36, (unint64_t)v165);
        uint64_t v172 = v597;
        sub_1008A8CC0(v36, (unint64_t)v165, (uint64_t)v582);
        v597 = v172;
        if (v172)
        {
          sub_100510084(v36, (unint64_t)v165);
LABEL_218:
          swift_bridgeObjectRelease();
          goto LABEL_219;
        }
        uint64_t v595 = v153;
        id v173 = *(void **)(*(void *)(v564 + v525) + 16);
        uint64_t v174 = *(void *)&v151[v579] + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
        swift_beginAccess();
        uint64_t v175 = v555;
        sub_100522E9C(v174, v555, (uint64_t *)&unk_10169A1A0);
        if ((*v578)(v175, 1, v154))
        {
          id v486 = v173;
          sub_100522F00(v175, (uint64_t *)&unk_10169A1A0);
          sub_10057AC18();
          uint64_t v487 = swift_allocError();
          unsigned char *v488 = 1;
          v597 = (void *)v487;
          swift_willThrow();

          sub_100510084(v36, (unint64_t)v165);
          v489 = type metadata accessor for CRLRealTimeEnter;
          v490 = v582;
LABEL_217:
          sub_10057AD44((uint64_t)v490, v489);
          goto LABEL_218;
        }
        id v593 = v165;
        uint64_t v176 = v175;
        uint64_t v177 = v175;
        uint64_t v178 = (uint64_t)v581;
        sub_10057AC6C(v176, (uint64_t)v581, type metadata accessor for CRLBoard.RealTimeSessionInfo);
        id v179 = v173;
        sub_100522F00(v177, (uint64_t *)&unk_10169A1A0);
        uint64_t v180 = *(char **)(v178 + *(int *)(v154 + 24));
        swift_retain();
        sub_10057AD44(v178, type metadata accessor for CRLBoard.RealTimeSessionInfo);
        v568 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v180;
        if (!v173)
        {
          uint64_t v323 = v571;
          v324 = v582;
          v325 = v180;
          uint64_t v326 = (uint64_t)v542;
          uint64_t v327 = v594;
          (*v565)(v542, (uint64_t)v582 + *(int *)(v571 + 20), v594);
          uint64_t v328 = (uint64_t)v324;
          uint64_t v329 = v523;
          sub_10057AC6C(v328, v523, type metadata accessor for CRLRealTimeEnter);
          v330 = *v546;
          (*v546)(v329, 0, 1, v323);
          v331 = (uint64_t *)&v325[OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRealTimeEnters];
          swift_beginAccess();
          if ((*v522)(v329, 1, v323) == 1)
          {
            sub_100522F00(v329, (uint64_t *)&unk_101674230);
            swift_bridgeObjectRetain();
            unint64_t v332 = sub_100955FC8(v326);
            char v334 = v333;
            swift_bridgeObjectRelease();
            if (v334)
            {
              uint64_t v576 = v36;
              char v335 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v336 = *v331;
              uint64_t v598 = *v331;
              uint64_t *v331 = 0x8000000000000000;
              if ((v335 & 1) == 0)
              {
                sub_10097D2C0();
                uint64_t v336 = v598;
              }
              v337 = *(void (**)(void, void))(v562 + 8);
              uint64_t v338 = v594;
              v337(*(void *)(v336 + 48) + *(void *)(v562 + 72) * v332, v594);
              uint64_t v339 = v598;
              uint64_t v340 = v515;
              sub_10057ACD4(*(void *)(v598 + 56) + *(void *)(v543 + 72) * v332, v515, type metadata accessor for CRLRealTimeEnter);
              sub_100588A18(v332, v339);
              uint64_t *v331 = v339;
              uint64_t v341 = v340;
              swift_bridgeObjectRelease();
              v330(v340, 0, 1, v571);
              uint64_t v156 = v577;
              uint64_t v36 = v576;
            }
            else
            {
              uint64_t v341 = v515;
              v330(v515, 1, 1, v571);
              v337 = *v572;
              uint64_t v338 = v594;
              uint64_t v156 = v577;
            }
            v337(v542, v338);
            sub_100522F00(v341, (uint64_t *)&unk_101674230);
            uint64_t v155 = v587;
            uint64_t v151 = v596;
            unint64_t v163 = (unint64_t)v593;
            uint64_t v154 = v589;
          }
          else
          {
            uint64_t v161 = v537;
            sub_10057ACD4(v329, v537, type metadata accessor for CRLRealTimeEnter);
            char v162 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v598 = *v331;
            uint64_t *v331 = 0x8000000000000000;
            sub_1009731C0(v161, v326, v162);
            uint64_t *v331 = v598;
            swift_bridgeObjectRelease();
            (*v572)(v326, v327);
            uint64_t v155 = v587;
            uint64_t v151 = v596;
            unint64_t v163 = (unint64_t)v593;
            uint64_t v156 = v577;
          }
          swift_endAccess();
          swift_release();
          goto LABEL_8;
        }
        id v516 = v179;
        id v181 = [v516 participants];
        sub_10050BF48(0, (unint64_t *)&qword_101693410);
        unint64_t v182 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v576 = v36;
        if (!(v182 >> 62))
        {
          uint64_t v183 = *(void *)((v182 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          uint64_t v184 = &selRef_alignCenter_;
          if (!v183) {
            goto LABEL_55;
          }
          goto LABEL_22;
        }
        swift_bridgeObjectRetain();
        uint64_t v183 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v184 = &selRef_alignCenter_;
        if (!v183)
        {
LABEL_55:
          swift_bridgeObjectRelease_n();
          uint64_t v222 = v571;
          uint64_t v223 = v582;
          uint64_t v224 = (uint64_t)v541;
          uint64_t v225 = v594;
          (*v565)(v541, (uint64_t)v582 + *(int *)(v571 + 20), v594);
          uint64_t v226 = (uint64_t)v223;
          uint64_t v227 = v521;
          sub_10057AC6C(v226, v521, type metadata accessor for CRLRealTimeEnter);
          uint64_t v228 = *v546;
          (*v546)(v227, 0, 1, v222);
          uint64_t v229 = (uint64_t *)((char *)v568
                           + OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRealTimeEnters);
          swift_beginAccess();
          if ((*v522)(v227, 1, v222) == 1)
          {
            sub_100522F00(v227, (uint64_t *)&unk_101674230);
            swift_bridgeObjectRetain();
            unint64_t v230 = sub_100955FC8(v224);
            char v232 = v231;
            swift_bridgeObjectRelease();
            uint64_t v233 = v577;
            if (v232)
            {
              char v234 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v235 = *v229;
              uint64_t v598 = *v229;
              *uint64_t v229 = 0x8000000000000000;
              if ((v234 & 1) == 0)
              {
                sub_10097D2C0();
                uint64_t v235 = v598;
              }
              v236 = *(void (**)(void, void))(v562 + 8);
              uint64_t v237 = v594;
              v236(*(void *)(v235 + 48) + *(void *)(v562 + 72) * v230, v594);
              uint64_t v238 = v598;
              uint64_t v239 = v514;
              sub_10057ACD4(*(void *)(v598 + 56) + *(void *)(v543 + 72) * v230, v514, type metadata accessor for CRLRealTimeEnter);
              sub_100588A18(v230, v238);
              *uint64_t v229 = v238;
              uint64_t v240 = v239;
              swift_bridgeObjectRelease();
              v228(v239, 0, 1, v571);
              uint64_t v156 = v577;
            }
            else
            {
              uint64_t v240 = v514;
              v228(v514, 1, 1, v571);
              v236 = *v572;
              uint64_t v237 = v594;
              uint64_t v156 = v233;
            }
            v236(v541, v237);
            sub_100522F00(v240, (uint64_t *)&unk_101674230);
            uint64_t v155 = v587;
            uint64_t v151 = v596;
            unint64_t v163 = (unint64_t)v593;
            uint64_t v36 = v576;
            uint64_t v154 = v589;
          }
          else
          {
            uint64_t v348 = v537;
            sub_10057ACD4(v227, v537, type metadata accessor for CRLRealTimeEnter);
            char v349 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v598 = *v229;
            *uint64_t v229 = 0x8000000000000000;
            sub_1009731C0(v348, v224, v349);
            *uint64_t v229 = v598;
            swift_bridgeObjectRelease();
            (*v572)(v224, v225);
            uint64_t v154 = v589;
            uint64_t v155 = v587;
            uint64_t v151 = v596;
            uint64_t v156 = v577;
            unint64_t v163 = (unint64_t)v593;
            uint64_t v36 = v576;
          }
          swift_endAccess();
          swift_release();
          id v390 = v516;

LABEL_8:
          unint64_t v153 = v595;
          sub_100510084(v36, v163);
          sub_10057AD44((uint64_t)v582, type metadata accessor for CRLRealTimeEnter);
          goto LABEL_9;
        }
LABEL_22:
        v585 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))*v582;
        *(void *)&long long v586 = v182 & 0xC000000000000001;
        uint64_t v584 = sub_10050BF48(0, (unint64_t *)&unk_10167C540);
        uint64_t v36 = 4;
        v583 = (void (**)(void, void))v182;
        v580 = (unsigned int (**)(void, void, void))v183;
        while (1)
        {
          if ((void)v586) {
            uint64_t v185 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            uint64_t v185 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))*(id *)(v182 + 8 * v36);
          }
          uint64_t v186 = v185;
          uint64_t v187 = (unsigned int (**)(void, void, void))(v36 - 3);
          if (__OFADD__(v36 - 4, 1)) {
            goto LABEL_224;
          }
          uint64_t v188 = (void (**)(void))[v185 userIdentity];
          uint64_t v189 = v585;
          char v190 = static NSObject.== infix(_:_:)();

          if (v190)
          {
            v588 = v186;
            swift_bridgeObjectRelease_n();

            goto LABEL_128;
          }
          uint64_t v191 = v151;
          uint64_t v192 = v189;
          id v193 = [v188 v184[141]];
          if (v193) {
            break;
          }

LABEL_53:
          v221 = v192;
          uint64_t v151 = v191;
LABEL_54:

          ++v36;
          unint64_t v182 = (unint64_t)v583;
          if (v187 == v580) {
            goto LABEL_55;
          }
        }
        v588 = v186;
        uint64_t v194 = (void (**)(void))v193;
        id v195 = [v192 v184[141]];
        if (v195)
        {
          uint64_t v196 = v195;
          sub_10050BF48(0, &qword_101673FB0);
          uint64_t v197 = v194;
          char v198 = static NSObject.== infix(_:_:)();

          if (v198)
          {
            swift_bridgeObjectRelease_n();

            uint64_t v151 = v596;
            goto LABEL_128;
          }
        }
        else
        {
        }
        id v199 = [v194 emailAddress];
        v590 = v194;
        if (v199)
        {
          uint64_t v200 = v199;
          id v561 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v202 = v201;

          id v203 = [v192 lookupInfo];
          if (v203
            && (uint64_t v204 = v203,
                id v205 = [v203 emailAddress],
                v204,
                v205))
          {
            id v206 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v208 = v207;

            if (v561 == v206 && v202 == v208)
            {

              swift_bridgeObjectRelease_n();
              goto LABEL_126;
            }
            char v209 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v194 = v590;
            if (v209)
            {

              goto LABEL_126;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v194 = v590;
          }
        }
        id v210 = [v194 phoneNumber];
        if (!v210)
        {

          uint64_t v188 = v192;
          uint64_t v192 = v194;
LABEL_52:
          uint64_t v191 = v596;
          uint64_t v184 = &selRef_alignCenter_;
          goto LABEL_53;
        }
        unint64_t v211 = v210;
        id v561 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v213 = v212;

        uint64_t v184 = &selRef_alignCenter_;
        id v214 = [v192 lookupInfo];
        if (!v214)
        {

          swift_bridgeObjectRelease();
          uint64_t v188 = v192;
          uint64_t v192 = v590;
          uint64_t v191 = v596;
          goto LABEL_53;
        }
        uint64_t v215 = v214;
        id v216 = [v214 phoneNumber];

        if (!v216)
        {

          swift_bridgeObjectRelease();
          uint64_t v188 = v192;
          uint64_t v192 = v590;
          goto LABEL_52;
        }
        id v217 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v219 = v218;

        if (v561 != v217 || v213 != v219)
        {
          char v220 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          uint64_t v151 = v596;
          if (v220) {
            goto LABEL_127;
          }
          uint64_t v184 = &selRef_alignCenter_;
          v221 = (void (**)(void))v588;
          goto LABEL_54;
        }

        swift_bridgeObjectRelease_n();
LABEL_126:
        uint64_t v151 = v596;
LABEL_127:
        swift_bridgeObjectRelease_n();
LABEL_128:
        uint64_t v394 = (uint64_t)v517;
        uint64_t v395 = (uint64_t)v524;
        v396 = (char *)v568;
        uint64_t v397 = v571;
        v398 = v582;
        Date.init(timeIntervalSinceReferenceDate:)();
        uint64_t v399 = (uint64_t)v398 + *(int *)(v397 + 20);
        unsigned __int8 v400 = *((unsigned char *)v398 + *(int *)(v397 + 28));
        v401 = v588;
        v402 = (void *)sub_100704BC0(v588, v399, v395, 0, v400);
        LODWORD(v398) = v403;

        LODWORD(v590) = v398;
        if (v398)
        {
          v404 = sub_10070A6DC();
          if (v404)
          {
            v406 = v404;

            swift_getKeyPath();
            swift_getKeyPath();
            LOBYTE(v599) = v400;
            id v407 = v406;
            v396 = (char *)v568;
            static Published.subscript.setter();

            (*v499)(v524, v520);
            goto LABEL_134;
          }
          (*v499)(v524, v520);
        }
        else
        {
          (*v499)(v395, v520);
        }

LABEL_134:
        uint64_t v154 = v589;
        uint64_t v408 = (uint64_t)v518;
        uint64_t v409 = v594;
        (*v565)(v518, v399, v594);
        uint64_t v410 = v571;
        (*v546)(v394, 1, 1, v571);
        v411 = (uint64_t *)&v396[OBJC_IVAR____TtC8Freeform37CRLCollaborationParticipantCollection_pendingRealTimeEnters];
        swift_beginAccess();
        if ((*v522)(v394, 1, v410) == 1)
        {
          sub_100522F00(v394, (uint64_t *)&unk_101674230);
          uint64_t v412 = v509;
          sub_10095B668(v408, v509);
          (*v572)(v408, v409);
          v396 = (char *)v568;
          sub_100522F00(v412, (uint64_t *)&unk_101674230);
        }
        else
        {
          uint64_t v413 = v394;
          uint64_t v414 = v537;
          sub_10057ACD4(v413, v537, type metadata accessor for CRLRealTimeEnter);
          char v415 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v598 = *v411;
          uint64_t *v411 = 0x8000000000000000;
          sub_1009731C0(v414, v408, v415);
          uint64_t *v411 = v598;
          swift_bridgeObjectRelease();
          (*v572)(v408, v409);
        }
        swift_endAccess();
        uint64_t v156 = v577;
        unint64_t v163 = (unint64_t)v593;
        uint64_t v36 = v576;
        if (v590)
        {
          swift_release();
          id v416 = v516;

          uint64_t v155 = v587;
          goto LABEL_8;
        }
        id v417 = [self defaultCenter];
        if (qword_10166FE68 != -1) {
          swift_once();
        }
        [v417 postNotificationName:qword_10171C3C8 object:v396];
        swift_release();

        id v418 = v516;
        sub_100510084(v36, v163);
        sub_10057AD44((uint64_t)v582, type metadata accessor for CRLRealTimeEnter);
LABEL_81:
        uint64_t v155 = v587;
        unint64_t v153 = v595;
LABEL_9:
        if ((id)v153 != v591) {
          continue;
        }
        swift_bridgeObjectRelease();
        uint64_t v2 = v498;
LABEL_151:
        v427 = v567;
        uint64_t v428 = *(void *)(*(void *)(v2
                                     + OBJC_IVAR____TtC8Freeform44CRLCommandApplyBoardAuxiliaryPeerSyncUpdates_updates)
                         + 16);
        if (!v428) {
          goto LABEL_201;
        }
        v578 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
        v580 = (unsigned int (**)(void, void, void))(v545 + 48);
        v582 = (id *)(v562 + 32);
        v585 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v544 + 48);
        uint64_t v595 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator;
        v588 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v562 + 56);
        v590 = (void (**)(void))(v562 + 16);
        v587 = (int *)(v562 + 48);
        v583 = (void (**)(void, void))(v562 + 8);
        uint64_t v584 = swift_bridgeObjectRetain();
        v429 = (unint64_t *)(v584 + 48);
        long long v579 = xmmword_101180360;
        long long v586 = xmmword_10117E810;
        v430 = v597;
        while (2)
        {
          uint64_t v434 = *(v429 - 1);
          unint64_t v433 = *v429;
          uint64_t v435 = *((unsigned __int8 *)v429 - 16);
          v429 += 4;
          switch(v435)
          {
            case 1:
              sub_100510D4C(v434, v433);
              sub_100510D4C(v434, v433);
              sub_100A07EF4(v434, v433, v427);
              if (v430) {
                goto LABEL_205;
              }
              sub_1007F623C((uint64_t)v427);
              sub_100510084(v434, v433);
              v431 = type metadata accessor for CRLStartOrEndFollow;
              v432 = v427;
              goto LABEL_154;
            case 2:
              sub_100510D4C(v434, v433);
              sub_100510D4C(v434, v433);
              v436 = v505;
              sub_100A07EF4(v434, v433, v505);
              if (v430) {
                goto LABEL_205;
              }
              sub_1007F6A9C((uint64_t)v436);
              sub_100510084(v434, v433);
              v437 = type metadata accessor for CRLStartOrEndFollow;
              goto LABEL_153;
            case 3:
              sub_100510D4C(v434, v433);
              sub_100510D4C(v434, v433);
              v436 = v506;
              sub_100AA2324(v434, v433, (uint64_t)v506);
              if (v430) {
                goto LABEL_205;
              }
              sub_1007F4820(v436);
              sub_100510084(v434, v433);
              v437 = type metadata accessor for CRLFollowViewportState;
              goto LABEL_153;
            case 6:
              sub_100510D4C(v434, v433);
              sub_100510D4C(v434, v433);
              sub_100A07EF4(v434, v433, v569);
              v597 = v430;
              if (v430) {
                goto LABEL_206;
              }
              id v591 = *(id *)&v596[v595];
              uint64_t v438 = swift_unknownObjectWeakLoadStrong();
              uint64_t v439 = v573;
              unint64_t v592 = v433;
              if (!v438) {
                goto LABEL_175;
              }
              uint64_t v440 = *(void *)(v438 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                   + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
              swift_beginAccess();
              uint64_t v441 = (uint64_t)v503;
              sub_100522E9C(v440, (uint64_t)v503, (uint64_t *)&unk_10169A1A0);
              if ((*v585)(v441, 1, v589))
              {
                sub_100522F00(v441, (uint64_t *)&unk_10169A1A0);
                swift_unknownObjectRelease();
                v442 = *v588;
                (*v588)(v573, 1, 1, v594);
              }
              else
              {
                uint64_t v449 = (uint64_t)v581;
                sub_10057AC6C(v441, (uint64_t)v581, type metadata accessor for CRLBoard.RealTimeSessionInfo);
                sub_100522F00((uint64_t)v503, (uint64_t *)&unk_10169A1A0);
                swift_retain();
                sub_10057AD44(v449, type metadata accessor for CRLBoard.RealTimeSessionInfo);
                swift_unknownObjectRelease();
                v450 = sub_100709868();
                swift_release();
                uint64_t v439 = v573;
                if (v450)
                {
                  uint64_t v451 = v573;
                  uint64_t v452 = v594;
                  (*v590)();

                  v442 = *v588;
                  (*v588)(v451, 0, 1, v452);
                }
                else
                {
LABEL_175:
                  v442 = *v588;
                  (*v588)(v439, 1, 1, v594);
                }
              }
              uint64_t v453 = (uint64_t)v519;
              uint64_t v454 = v594;
              ((void (*)(char *, char *, uint64_t))*v590)(v519, &v569[*(int *)(v528 + 20)], v594);
              v442(v453, 0, 1, v454);
              uint64_t v455 = v547;
              v456 = (void *)(v547 + *(int *)(v529 + 48));
              sub_100522E9C(v573, v547, (uint64_t *)&unk_101674520);
              id v593 = v456;
              sub_100522E9C(v453, (uint64_t)v456, (uint64_t *)&unk_101674520);
              v457 = *(uint64_t (**)(void, void, void))v587;
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v587)(v455, 1, v454) == 1)
              {
                sub_100522F00(v453, (uint64_t *)&unk_101674520);
                sub_100522F00(v573, (uint64_t *)&unk_101674520);
                int v458 = v457(v593, 1, v594);
                v427 = v567;
                unint64_t v459 = v592;
                if (v458 != 1) {
                  goto LABEL_181;
                }
                sub_100522F00(v547, (uint64_t *)&unk_101674520);
                v430 = v597;
LABEL_183:
                sub_1007F1ED0(0, 1);
                goto LABEL_184;
              }
              uint64_t v460 = (uint64_t)v502;
              sub_100522E9C(v455, (uint64_t)v502, (uint64_t *)&unk_101674520);
              if (v457(v593, 1, v594) == 1)
              {
                sub_100522F00((uint64_t)v519, (uint64_t *)&unk_101674520);
                sub_100522F00(v573, (uint64_t *)&unk_101674520);
                (*v583)(v460, v594);
                v427 = v567;
                unint64_t v459 = v592;
LABEL_181:
                sub_100522F00(v547, (uint64_t *)&unk_10168A0C0);
                v430 = v597;
                goto LABEL_184;
              }
              v461 = v508;
              uint64_t v462 = v594;
              ((void (*)(char *, id, uint64_t))*v582)(v508, v593, v594);
              sub_10057ADA4((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
              LODWORD(v593) = dispatch thunk of static Equatable.== infix(_:_:)();
              v463 = *v583;
              (*v583)(v461, v462);
              sub_100522F00((uint64_t)v519, (uint64_t *)&unk_101674520);
              sub_100522F00(v573, (uint64_t *)&unk_101674520);
              v463(v502, v462);
              sub_100522F00(v455, (uint64_t *)&unk_101674520);
              v427 = v567;
              v430 = v597;
              unint64_t v459 = v592;
              if (v593) {
                goto LABEL_183;
              }
LABEL_184:
              sub_100510084(v434, v459);
              v431 = type metadata accessor for CRLStartOrEndFollow;
              v432 = v569;
              goto LABEL_154;
            case 7:
              sub_100510D4C(v434, v433);
              sub_100510D4C(v434, v433);
              v436 = v531;
              sub_100DFAE28(v434, v433, v531);
              if (v430)
              {
LABEL_205:
                v597 = v430;
LABEL_206:
                sub_100510084(v434, v433);
                goto LABEL_207;
              }
              sub_1007F71F4((uint64_t)v436);
              sub_100510084(v434, v433);
              v437 = type metadata accessor for CRLRefuseOrEndFollow;
LABEL_153:
              v431 = v437;
              v432 = v436;
LABEL_154:
              sub_10057AD44((uint64_t)v432, (uint64_t (*)(void))v431);
LABEL_155:
              if (--v428) {
                continue;
              }
              v597 = v430;
              swift_bridgeObjectRelease();
              uint64_t v151 = v596;
LABEL_201:
              uint64_t v483 = v602;
              if (v602 >> 62)
              {
                swift_bridgeObjectRetain();
                uint64_t v495 = _CocoaArrayWrapper.endIndex.getter();
                swift_bridgeObjectRelease();
                if (v495) {
LABEL_203:
                }
                  sub_1006B05C4(v483);
              }
              else if (*(void *)((v602 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                goto LABEL_203;
              }
LABEL_219:
              swift_bridgeObjectRelease();
LABEL_220:
              [v151 didProcessAuxiliaryRealTimeChanges];
LABEL_221:

              return;
            case 8:
              uint64_t v601 = 0;
              long long v599 = 0u;
              long long v600 = 0u;
              sub_100510D4C(v434, v433);
              sub_100510D4C(v434, v433);
              sub_100510D4C(v434, v433);
              BinaryDecodingOptions.init()();
              sub_10057ADA4((unint64_t *)&qword_101673FA0, (void (*)(uint64_t))type metadata accessor for CRLProto_BoardItemIdentifier);
              uint64_t v443 = (uint64_t)v532;
              uint64_t v444 = v533;
              Message.init(serializedData:extensions:partial:options:)();
              if (v430)
              {
                sub_100510084(v434, v433);
LABEL_188:
                v597 = 0;
                if (qword_10166FBA0 != -1) {
                  swift_once();
                }
                swift_beginAccess();
                id v591 = (id)static OS_os_log.realTimeSync;
                sub_1005057FC((uint64_t *)&unk_101672B40);
                uint64_t v468 = swift_initStackObject();
                *(_OWORD *)(v468 + 16) = v586;
                swift_getErrorValue();
                id v593 = v430;
                id v591 = v591;
                uint64_t v469 = Error.localizedDescription.getter();
                uint64_t v471 = v470;
                *(void *)(v468 + 56) = &type metadata for String;
                *(void *)(v468 + 64) = sub_100528BE4();
                *(void *)(v468 + 32) = v469;
                *(void *)(v468 + 40) = v471;
                uint64_t v472 = static os_log_type_t.error.getter();
                id v473 = v591;
                sub_100BAC898((uint64_t)v591, (uint64_t)&_mh_execute_header, v472, (uint64_t)"Failed to deserialize a CRLServerSyncedPeerAddedItemEvent with error %@", 71, 2, v468);
                sub_100510084(v434, v433);
                swift_setDeallocating();
                sub_1005057FC(&qword_101672B50);
                swift_arrayDestroy();

                swift_errorRelease();
                goto LABEL_191;
              }
              id v593 = 0;
              uint64_t v445 = v443 + *(int *)(v444 + 20);
              uint64_t v446 = v513;
              sub_100522E9C(v445, v513, (uint64_t *)&unk_101674160);
              if ((*v580)(v446, 1, v563) == 1)
              {
                v447 = (uint64_t *)v512;
                long long *v512 = v579;
                v448 = v447;
                UnknownStorage.init()();
                sub_100522F00(v446, (uint64_t *)&unk_101674160);
              }
              else
              {
                v448 = (uint64_t *)v512;
                sub_10057ACD4(v446, (uint64_t)v512, type metadata accessor for CRLProto_Data);
              }
              uint64_t v464 = *v448;
              unint64_t v465 = v448[1];
              sub_100510D4C(*v448, v465);
              sub_10057AD44((uint64_t)v448, type metadata accessor for CRLProto_Data);
              v466 = v511;
              id v467 = v593;
              UUID.init(crl_data:)(v464, v465);
              v430 = v467;
              if (v467)
              {
                sub_100510084(v434, v433);
                sub_10057AD44(v443, type metadata accessor for CRLProto_BoardItemIdentifier);
                goto LABEL_188;
              }
              v597 = 0;
              sub_100510084(v434, v433);
              sub_10057AD44(v443, type metadata accessor for CRLProto_BoardItemIdentifier);
              uint64_t v474 = (uint64_t)v504;
              ((void (*)(char *, char *, uint64_t))*v582)(v504, v466, v594);
              sub_10057ACD4(v474, v510, (uint64_t (*)(void))type metadata accessor for CRLServerSyncedPeerAddedItemEvent);
              v475 = (unsigned int (*)(void, void, void))*(id *)((char *)v578 + (void)v596);
              Class isa = UUID._bridgeToObjectiveC()().super.isa;
              id v593 = v475;
              v477 = [v475 getBoardItemForUUID:isa];

              if (v477)
              {
                (*(void (**)(void))((swift_isaMask & *v477) + 0x1C0))(0);
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((v602 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v602 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();

                uint64_t v478 = v510;
              }
              else
              {
                if (qword_10166FBA0 != -1) {
                  swift_once();
                }
                swift_beginAccess();
                v479 = (void *)static OS_os_log.realTimeSync;
                sub_1005057FC((uint64_t *)&unk_101672B40);
                uint64_t v480 = swift_initStackObject();
                *(_OWORD *)(v480 + 16) = v586;
                v477 = v479;
                uint64_t v478 = v510;
                id v591 = (id)UUID.uuidString.getter();
                uint64_t v577 = v481;
                *(void *)(v480 + 56) = &type metadata for String;
                *(void *)(v480 + 64) = sub_100528BE4();
                *(void *)(v480 + 32) = v591;
                *(void *)(v480 + 40) = v577;
                uint64_t v482 = static os_log_type_t.debug.getter();
                sub_100BAC898((uint64_t)v477, (uint64_t)&_mh_execute_header, v482, (uint64_t)"Received a CRLServerSyncedPeerAddedItemEvent but couldn't find the corresponding item %{public}@ on the board", 109, 2, v480);

                swift_setDeallocating();
                sub_1005057FC(&qword_101672B50);
                swift_arrayDestroy();
              }

              sub_100510084(v434, v433);
              sub_10057AD44(v478, (uint64_t (*)(void))type metadata accessor for CRLServerSyncedPeerAddedItemEvent);
LABEL_191:
              v430 = v597;
              v427 = v567;
              goto LABEL_155;
            default:
              goto LABEL_155;
          }
        }
      case 3:
        uint64_t v595 = v153;
        uint64_t v601 = 0;
        long long v599 = 0u;
        long long v600 = 0u;
        sub_100510D4C(v36, (unint64_t)v165);
        sub_100510D4C(v36, (unint64_t)v165);
        sub_100510D4C(v36, (unint64_t)v165);
        BinaryDecodingOptions.init()();
        sub_10057ADA4(&qword_101673FA8, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeLeave);
        unint64_t v241 = (unint64_t)v165;
        uint64_t v242 = v574;
        uint64_t v243 = v36;
        unint64_t v244 = v241;
        uint64_t v245 = v597;
        Message.init(serializedData:extensions:partial:options:)();
        v597 = v245;
        if (v245)
        {
          sub_100510084(v36, v244);
        }
        else
        {
          uint64_t v246 = v242 + v155[5];
          uint64_t v247 = v558;
          sub_100522E9C(v246, v558, (uint64_t *)&unk_101674160);
          if ((*v526)(v247, 1, v563) == 1)
          {
            v248 = (uint64_t *)v557;
            long long *v557 = v501;
            v249 = v248;
            UnknownStorage.init()();
            sub_100522F00(v247, (uint64_t *)&unk_101674160);
          }
          else
          {
            v249 = (uint64_t *)v557;
            sub_10057ACD4(v247, (uint64_t)v557, type metadata accessor for CRLProto_Data);
          }
          uint64_t v278 = (uint64_t)v249;
          uint64_t v279 = *v249;
          unint64_t v280 = *(void *)(v278 + 8);
          sub_100510D4C(v279, v280);
          sub_10057AD44(v278, type metadata accessor for CRLProto_Data);
          uint64_t v281 = v554;
          uint64_t v282 = v597;
          UUID.init(crl_data:)(v279, v280);
          v597 = v282;
          if (!v282)
          {
            sub_100510084(v36, v244);
            sub_10057AD44(v574, type metadata accessor for CRLProto_RealTimeLeave);
            uint64_t v36 = (uint64_t)v552;
            (*v548)(v552, v281, v594);
            uint64_t v283 = *(void *)&v151[v579] + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
            swift_beginAccess();
            uint64_t v284 = v283;
            uint64_t v285 = v551;
            sub_100522E9C(v284, v551, (uint64_t *)&unk_10169A1A0);
            if (!(*v578)(v285, 1, v154))
            {
              uint64_t v286 = (uint64_t)v581;
              sub_10057AC6C(v285, (uint64_t)v581, type metadata accessor for CRLBoard.RealTimeSessionInfo);
              sub_100522F00(v285, (uint64_t *)&unk_10169A1A0);
              swift_retain();
              sub_10057AD44(v286, type metadata accessor for CRLBoard.RealTimeSessionInfo);
              sub_100706740(v36);
              swift_release();
              sub_100510084(v243, v244);
              sub_10057AD44(v36, type metadata accessor for CRLRealTimeLeave);
              uint64_t v155 = v587;
              unint64_t v153 = v595;
              uint64_t v156 = v577;
              goto LABEL_9;
            }
            sub_100522F00(v285, (uint64_t *)&unk_10169A1A0);
            sub_10057AC18();
            uint64_t v493 = swift_allocError();
            unsigned char *v494 = 1;
            v597 = (void *)v493;
            swift_willThrow();
            sub_100510084(v243, v244);
            v489 = type metadata accessor for CRLRealTimeLeave;
            v490 = (id *)v36;
            goto LABEL_217;
          }
          sub_100510084(v36, v244);
          sub_10057AD44(v574, type metadata accessor for CRLProto_RealTimeLeave);
        }
        uint64_t v484 = v36;
        unint64_t v485 = v244;
LABEL_215:
        sub_100510084(v484, v485);
        goto LABEL_218;
      case 4:
        sub_100510D4C(*(void *)(v164 + 8), *(void *)(v164 + 16));
        sub_100510D4C(v36, (unint64_t)v165);
        uint64_t v250 = v36;
        uint64_t v251 = v575;
        uint64_t v576 = v250;
        uint64_t v252 = v597;
        sub_100AF6274(v250, (unint64_t)v165, v575);
        v597 = v252;
        if (!v252)
        {
          id v593 = v165;
          uint64_t v595 = v153;
          if (qword_10166FA20 != -1) {
            swift_once();
          }
          swift_beginAccess();
          v253 = (void *)static OS_os_log.crlCollaborationParticipant;
          v590 = (void (**)(void))sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t v254 = swift_initStackObject();
          *(_OWORD *)(v254 + 16) = v535;
          id v255 = v253;
          uint64_t v256 = UUID.uuidString.getter();
          uint64_t v258 = v257;
          *(void *)(v254 + 56) = &type metadata for String;
          unint64_t v259 = sub_100528BE4();
          *(void *)(v254 + 64) = v259;
          *(void *)(v254 + 32) = v256;
          *(void *)(v254 + 40) = v258;
          uint64_t v260 = *(int *)(v570 + 20);
          int v261 = *(_DWORD *)&v251[v260];
          *(void *)(v254 + 96) = &type metadata for UInt32;
          *(void *)(v254 + 104) = &protocol witness table for UInt32;
          *(_DWORD *)(v254 + 72) = v261;
          uint64_t v262 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v255, (uint64_t)&_mh_execute_header, v262, (uint64_t)"Remote presence (%@) updated to color index: %d", 47, 2, v254);
          swift_setDeallocating();
          v588 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();

          int64_t v263 = v596;
          uint64_t v264 = *(void *)&v596[v579] + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
          swift_beginAccess();
          uint64_t v265 = v556;
          sub_100522E9C(v264, v556, (uint64_t *)&unk_10169A1A0);
          uint64_t v266 = (uint64_t)v251;
          v267 = *v578;
          uint64_t v268 = v589;
          if ((*v578)(v265, 1, v589))
          {
            sub_100522F00(v265, (uint64_t *)&unk_10169A1A0);
            sub_10057AC18();
            uint64_t v491 = swift_allocError();
            unsigned char *v492 = 1;
            v597 = (void *)v491;
            swift_willThrow();
            sub_100510084(v576, (unint64_t)v593);
            sub_10057AD44(v266, (uint64_t (*)(void))type metadata accessor for CRLCollaboratorCursorColor);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v151 = v263;
            goto LABEL_220;
          }
          *(void *)&long long v586 = v267;
          uint64_t v269 = v265;
          uint64_t v270 = v265;
          uint64_t v271 = (uint64_t)v581;
          sub_10057AC6C(v269, (uint64_t)v581, type metadata accessor for CRLBoard.RealTimeSessionInfo);
          sub_100522F00(v270, (uint64_t *)&unk_10169A1A0);
          long long v272 = *(void (***)(void, void))(v271 + *(int *)(v268 + 24));
          swift_retain();
          sub_10057AD44(v271, type metadata accessor for CRLBoard.RealTimeSessionInfo);
          unsigned int v273 = *(_DWORD *)(v266 + v260);
          v274 = v272;
          uint64_t v275 = v553;
          sub_100709DC4(v273, v553);
          uint64_t v276 = sub_1005057FC(&qword_10167C530);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v276 - 8) + 48))(v275, 1, v276) == 1)
          {
            sub_100522F00(v275, &qword_101673F88);
            uint64_t v151 = v263;
            unint64_t v277 = (unint64_t)v593;
            uint64_t v36 = v576;
          }
          else
          {
            v583 = v274;
            int v287 = *(_DWORD *)(v275 + *(int *)(v276 + 48));
            uint64_t v288 = v539;
            uint64_t v289 = v540;
            uint64_t v290 = *(int *)(v540 + 48);
            uint64_t v291 = v275;
            v292 = *v548;
            uint64_t v584 = v259;
            uint64_t v293 = v594;
            ((void (*)(char *, uint64_t))v292)(v539, v291);
            *(_DWORD *)&v288[v290] = v287;
            LODWORD(v585) = *(_DWORD *)&v288[*(int *)(v289 + 48)];
            uint64_t v294 = v550;
            v292(v550, v288, v293);
            uint64_t v295 = (void *)static OS_os_log.crlCollaborationParticipant;
            uint64_t v296 = swift_initStackObject();
            *(_OWORD *)(v296 + 16) = v500;
            id v297 = v295;
            uint64_t v298 = UUID.uuidString.getter();
            uint64_t v299 = v584;
            *(void *)(v296 + 56) = &type metadata for String;
            *(void *)(v296 + 64) = v299;
            *(void *)(v296 + 32) = v298;
            *(void *)(v296 + 40) = v300;
            uint64_t v301 = UUID.uuidString.getter();
            *(void *)(v296 + 96) = &type metadata for String;
            *(void *)(v296 + 104) = v299;
            *(void *)(v296 + 72) = v301;
            *(void *)(v296 + 80) = v302;
            *(void *)(v296 + 136) = &type metadata for UInt32;
            *(void *)(v296 + 144) = &protocol witness table for UInt32;
            LODWORD(v295) = v585;
            *(_DWORD *)(v296 + 112) = v585;
            uint64_t v303 = static os_log_type_t.default.getter();
            sub_100BAC898((uint64_t)v297, (uint64_t)&_mh_execute_header, v303, (uint64_t)"Remote presence (%@) color index conflicts and is older. Updated local presence (%@) color index to %@ and sending change.", 122, 2, v296);
            swift_setDeallocating();
            swift_arrayDestroy();

            uint64_t v304 = (uint64_t)v538;
            (*v565)(v538, (uint64_t)v294, v293);
            *(_DWORD *)(v304 + *(int *)(v570 + 20)) = v295;
            v305 = v597;
            uint64_t v306 = sub_100AF6674();
            v597 = v305;
            if (v305)
            {
              swift_release();
              sub_100510084(v576, (unint64_t)v593);
              sub_10057AD44(v304, (uint64_t (*)(void))type metadata accessor for CRLCollaboratorCursorColor);
              (*v572)(v550, v594);
              sub_10057AD44((uint64_t)v575, (uint64_t (*)(void))type metadata accessor for CRLCollaboratorCursorColor);
LABEL_207:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v151 = v596;
              goto LABEL_220;
            }
            uint64_t v308 = v306;
            unint64_t v309 = v307;
            uint64_t v151 = v596;
            uint64_t v310 = *(void *)&v596[v579] + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
            swift_beginAccess();
            uint64_t v311 = v310;
            uint64_t v312 = v534;
            sub_100522E9C(v311, v534, (uint64_t *)&unk_10169A1A0);
            int v313 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v586)(v312, 1, v589);
            unint64_t v277 = (unint64_t)v593;
            uint64_t v36 = v576;
            if (v313)
            {
              sub_100510084(v308, v309);
              sub_10057AD44(v304, (uint64_t (*)(void))type metadata accessor for CRLCollaboratorCursorColor);
              (*v572)(v550, v594);
              sub_100522F00(v312, (uint64_t *)&unk_10169A1A0);
            }
            else
            {
              v342 = v581;
              sub_10057AC6C(v312, (uint64_t)v581, type metadata accessor for CRLBoard.RealTimeSessionInfo);
              sub_100510D4C(v308, v309);
              sub_100522F00(v312, (uint64_t *)&unk_10169A1A0);
              uint64_t v343 = *v342;
              swift_retain();
              uint64_t v344 = (uint64_t)v342;
              unint64_t v277 = (unint64_t)v593;
              sub_10057AD44(v344, type metadata accessor for CRLBoard.RealTimeSessionInfo);
              sub_100510D4C(v308, v309);
              sub_100F28FE0(4, v308, v309, v343);
              swift_release();
              sub_100510084(v308, v309);
              sub_100510084(v308, v309);
              sub_10057AD44(v304, (uint64_t (*)(void))type metadata accessor for CRLCollaboratorCursorColor);
              (*v572)(v550, v594);
              sub_100510084(v308, v309);
            }
          }
          v345 = sub_10070A6DC();
          uint64_t v154 = v589;
          uint64_t v155 = v587;
          if (v345)
          {
            v347 = v346;

            sub_100BBD120(v347);
          }
          swift_release();
          sub_100510084(v36, v277);
          sub_10057AD44((uint64_t)v575, (uint64_t (*)(void))type metadata accessor for CRLCollaboratorCursorColor);
          uint64_t v156 = v577;
          unint64_t v153 = v595;
          goto LABEL_9;
        }
        uint64_t v484 = v576;
        unint64_t v485 = (unint64_t)v165;
        goto LABEL_215;
      default:
        sub_100510D4C(*(void *)(v164 + 8), *(void *)(v164 + 16));
        if (qword_10166FBA0 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v166 = (id)static OS_os_log.realTimeSync;
        uint64_t v167 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v166, (uint64_t)&_mh_execute_header, v167, (uint64_t)"Non-model legacy test change sent.", 34, 2, (uint64_t)_swiftEmptyArrayStorage);
        sub_100510084(v36, (unint64_t)v165);

        goto LABEL_9;
    }
  }
}

uint64_t sub_10057AB14()
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_10057AB64()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandApplyBoardAuxiliaryPeerSyncUpdates();
  [super dealloc];
}

uint64_t type metadata accessor for CRLCommandApplyBoardAuxiliaryPeerSyncUpdates()
{
  return self;
}

unint64_t sub_10057AC18()
{
  unint64_t result = qword_101673F98;
  if (!qword_101673F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673F98);
  }
  return result;
}

uint64_t sub_10057AC6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10057ACD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10057AD44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10057ADA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10057ADF4(void *a1, void *a2, void *a3)
{
  if (a1)
  {
  }
}

void sub_10057AE44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v9 = type metadata accessor for CRLBoardEntity();
  *(void *)&double v11 = __chkstk_darwin(v9, v10).n128_u64[0];
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v3, "isViewLoaded", v11))
  {
    id v14 = [v3 view];
    if (v14)
    {
      uint64_t v15 = v14;
      sub_10057B3EC(a1, (uint64_t)v13);
      v18[1] = v3;
      (*(void (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
      id v16 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
      sub_10057B450();
      uint64_t v17 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
      UIView.annotate(with:)();
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_10057AFC4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for AppEntityVisualState();
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)&double v8 = __chkstk_darwin(v5, v7).n128_u64[0];
  uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [v2 isViewLoaded:v8];
  if (result)
  {
    id result = [v2 view];
    if (result)
    {
      uint64_t v12 = result;
      v13[1] = v2;
      (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
      UIView.updateAppEntityAnnotation(with:)();

      return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_10057B108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v10 = type metadata accessor for CRLBoardEntity();
  __chkstk_darwin(v10, v11);
  sub_10057B3EC(a1, (uint64_t)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15[1] = v4;
  (*(void (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  id v13 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
  sub_10057B450();
  id v14 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
  UIView.annotate(with:)();
}

uint64_t sub_10057B250(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for AppEntityVisualState();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v8 = __chkstk_darwin(v5, v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v2;
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 8))(a1, a2, v8);
  UIView.updateAppEntityAnnotation(with:)();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v10, v5);
}

void sub_10057B35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_10057B380(uint64_t a1, uint64_t a2)
{
  return sub_10057B250(a1, a2);
}

void sub_10057B3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

id sub_10057B3C8(uint64_t a1, uint64_t a2)
{
  return sub_10057AFC4(a1, a2);
}

uint64_t sub_10057B3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10057B450()
{
  unint64_t result = qword_101673B60;
  if (!qword_101673B60)
  {
    type metadata accessor for CRLBoardEntity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673B60);
  }
  return result;
}

uint64_t sub_10057B5B0()
{
  return type metadata accessor for CRLCanvasBackgroundView();
}

id sub_10057B6B8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCanvasBackground();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLCanvasBackground()
{
  return self;
}

void sub_10057B75C()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (id)Strong;
    uint64_t v1 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v1)
    {
      id v2 = [v1 view];
      if (!v2)
      {
        __break(1u);
        return;
      }
      id v3 = v2;
      [v2 setUserInteractionEnabled:0];

      swift_unknownObjectRelease();
      uint64_t v4 = v3;
    }
    else
    {
      uint64_t v4 = v5;
    }
  }
}

void sub_10057B864()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (id)Strong;
    uint64_t v1 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v1)
    {
      id v2 = [v1 view];
      if (!v2)
      {
        __break(1u);
        return;
      }
      id v3 = v2;
      [v2 setUserInteractionEnabled:1];

      swift_unknownObjectRelease();
      uint64_t v4 = v3;
    }
    else
    {
      uint64_t v4 = v5;
    }
  }
}

id sub_10057B99C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMiniFormatterDynamicOperationViewHelper();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLMiniFormatterDynamicOperationViewHelper()
{
  return self;
}

id sub_10057BADC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLAnalyticsShapeInserted();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLAnalyticsShapeInserted()
{
  return self;
}

void sub_10057BB38(uint64_t a1, uint64_t a2, char a3)
{
  if (a2)
  {
    sub_100A39814((uint64_t)_swiftEmptyArrayStorage);
    NSString v4 = String._bridgeToObjectiveC()();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_100973904((uint64_t)v4, 0x6564496570616873, 0xEF7265696669746ELL, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    id v6 = [objc_allocWithZone((Class)NSNumber) initWithBool:a3 & 1];
    char v7 = swift_isUniquelyReferenced_nonNull_native();
    sub_100973904((uint64_t)v6, 0xD000000000000011, 0x800000010123C3F0, v7);
    swift_bridgeObjectRelease();
    __n128 v8 = self;
    NSString v9 = String._bridgeToObjectiveC()();
    sub_10057BCD8();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v8 sendEventInDomain:v9 lazily:1 eventPayload:isa];
  }
}

unint64_t sub_10057BCD8()
{
  unint64_t result = qword_101672E50;
  if (!qword_101672E50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101672E50);
  }
  return result;
}

double *sub_10057BD18(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v51 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8, v3);
  id v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v53 - 8);
  __chkstk_darwin(v53, v7);
  uint64_t v45 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v42 = (char *)&v41 - v11;
  uint64_t v50 = sub_1005057FC((uint64_t *)&unk_101684FB0);
  __chkstk_darwin(v50, v12);
  id v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (uint64_t *)((char *)&v41 - v17);
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v47 = a1 + 64;
  uint64_t v20 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v19;
  int64_t v48 = (unint64_t)(v20 + 63) >> 6;
  uint64_t v49 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v43 = v6;
  uint64_t v44 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v52 = a1;
  unint64_t result = (double *)swift_bridgeObjectRetain();
  int64_t v24 = 0;
  uint64_t v46 = _swiftEmptyArrayStorage;
  if (!v22) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v25 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  for (unint64_t i = v25 | (v24 << 6); ; unint64_t i = __clz(__rbit64(v32)) + (v24 << 6))
  {
    uint64_t v27 = (uint64_t *)(*(void *)(v52 + 48) + 16 * i);
    uint64_t v28 = *v27;
    uint64_t v29 = v27[1];
    uint64_t v30 = v50;
    sub_100522E9C(*(void *)(v52 + 56) + *(void *)(v51 + 72) * i, (uint64_t)v18 + *(int *)(v50 + 48), (uint64_t *)&unk_101674520);
    *uint64_t v18 = v28;
    v18[1] = v29;
    sub_10051B3EC((uint64_t)v18, (uint64_t)v14, (uint64_t *)&unk_101684FB0);
    sub_100522E9C((uint64_t)&v14[*(int *)(v30 + 48)], (uint64_t)v5, (uint64_t *)&unk_101674520);
    swift_bridgeObjectRetain();
    sub_100522F00((uint64_t)v14, (uint64_t *)&unk_101684FB0);
    if ((*v49)(v5, 1, v53) == 1)
    {
      unint64_t result = (double *)sub_100522F00((uint64_t)v5, (uint64_t *)&unk_101674520);
      if (v22) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v34 = *v44;
      uint64_t v35 = v42;
      uint64_t v36 = v53;
      (*v44)(v42, v5, v53);
      v34(v45, v35, v36);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v46 = (double *)sub_100F617D8(0, *((void *)v46 + 2) + 1, 1, (unint64_t)v46);
      }
      unint64_t v38 = *((void *)v46 + 2);
      unint64_t v37 = *((void *)v46 + 3);
      if (v38 >= v37 >> 1) {
        uint64_t v46 = (double *)sub_100F617D8(v37 > 1, v38 + 1, 1, (unint64_t)v46);
      }
      uint64_t v39 = v45;
      uint64_t v40 = v46;
      *((void *)v46 + 2) = v38 + 1;
      unint64_t result = (double *)((uint64_t (*)(char *, char *, uint64_t))v34)((char *)v40+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v38, v39, v53);
      if (v22) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v31 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v31 >= v48) {
      goto LABEL_29;
    }
    unint64_t v32 = *(void *)(v47 + 8 * v31);
    ++v24;
    if (!v32)
    {
      int64_t v24 = v31 + 1;
      if (v31 + 1 >= v48) {
        goto LABEL_29;
      }
      unint64_t v32 = *(void *)(v47 + 8 * v24);
      if (!v32)
      {
        int64_t v24 = v31 + 2;
        if (v31 + 2 >= v48) {
          goto LABEL_29;
        }
        unint64_t v32 = *(void *)(v47 + 8 * v24);
        if (!v32)
        {
          int64_t v24 = v31 + 3;
          if (v31 + 3 >= v48) {
            goto LABEL_29;
          }
          unint64_t v32 = *(void *)(v47 + 8 * v24);
          if (!v32) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v22 = (v32 - 1) & v32;
  }
  int64_t v33 = v31 + 4;
  if (v33 >= v48)
  {
LABEL_29:
    swift_release();
    return v46;
  }
  unint64_t v32 = *(void *)(v47 + 8 * v33);
  if (v32)
  {
    int64_t v24 = v33;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v24 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v24 >= v48) {
      goto LABEL_29;
    }
    unint64_t v32 = *(void *)(v47 + 8 * v24);
    ++v33;
    if (v32) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_10057C1E4(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLBoardItem(0);
    sub_10058EB40((unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
    Set.Iterator.init(_cocoa:)();
    unint64_t v1 = (unint64_t)v17[1];
    uint64_t v16 = v17[2];
    uint64_t v2 = (uint64_t)v17[3];
    id v3 = v17[4];
    unint64_t v4 = (unint64_t)v17[5];
  }
  else
  {
    id v3 = 0;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v16 = (void *)(a1 + 56);
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
  }
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  if ((v1 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v4)
    {
      uint64_t v9 = (v4 - 1) & v4;
      unint64_t v10 = __clz(__rbit64(v4)) | ((void)v3 << 6);
      uint64_t v11 = (char *)v3;
      goto LABEL_29;
    }
    uint64_t v13 = (uint64_t)v3 + 1;
    if (__OFADD__(v3, 1)) {
      break;
    }
    if (v13 >= v8) {
      goto LABEL_32;
    }
    unint64_t v14 = v16[v13];
    uint64_t v11 = (char *)v3 + 1;
    if (!v14)
    {
      uint64_t v11 = (char *)v3 + 2;
      if ((uint64_t)v3 + 2 >= v8) {
        goto LABEL_32;
      }
      unint64_t v14 = v16[(void)v11];
      if (!v14)
      {
        uint64_t v11 = (char *)v3 + 3;
        if ((uint64_t)v3 + 3 >= v8) {
          goto LABEL_32;
        }
        unint64_t v14 = v16[(void)v11];
        if (!v14)
        {
          uint64_t v11 = (char *)v3 + 4;
          if ((uint64_t)v3 + 4 >= v8) {
            goto LABEL_32;
          }
          unint64_t v14 = v16[(void)v11];
          if (!v14)
          {
            uint64_t v11 = (char *)v3 + 5;
            if ((uint64_t)v3 + 5 >= v8) {
              goto LABEL_32;
            }
            unint64_t v14 = v16[(void)v11];
            if (!v14)
            {
              uint64_t v15 = (char *)v3 + 6;
              while ((char *)v8 != v15)
              {
                unint64_t v14 = v16[(void)v15++];
                if (v14)
                {
                  uint64_t v11 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_10052E1EC();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v9 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + ((void)v11 << 6);
LABEL_29:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v12) {
      goto LABEL_32;
    }
    while (1)
    {
      sub_100CB7040(v17, v12);

      id v3 = v11;
      unint64_t v4 = v9;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for CRLBoardItem(0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v12 = v17[0];
        swift_unknownObjectRelease();
        uint64_t v11 = (char *)v3;
        uint64_t v9 = v4;
        if (v12) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_10057C498(uint64_t a1)
{
  uint64_t v2 = v1;
  int64_t v4 = 0;
  uint64_t v30 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v31 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v9 = v8 | (v4 << 6);
    }
    else
    {
      int64_t v10 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        goto LABEL_46;
      }
      if (v10 >= v31) {
        return swift_release();
      }
      unint64_t v11 = *(void *)(v30 + 8 * v10);
      ++v4;
      if (!v11)
      {
        int64_t v4 = v10 + 1;
        if (v10 + 1 >= v31) {
          return swift_release();
        }
        unint64_t v11 = *(void *)(v30 + 8 * v4);
        if (!v11)
        {
          int64_t v4 = v10 + 2;
          if (v10 + 2 >= v31) {
            return swift_release();
          }
          unint64_t v11 = *(void *)(v30 + 8 * v4);
          if (!v11)
          {
            int64_t v4 = v10 + 3;
            if (v10 + 3 >= v31) {
              return swift_release();
            }
            unint64_t v11 = *(void *)(v30 + 8 * v4);
            if (!v11)
            {
              int64_t v12 = v10 + 4;
              if (v12 >= v31) {
                return swift_release();
              }
              unint64_t v11 = *(void *)(v30 + 8 * v12);
              if (!v11)
              {
                while (1)
                {
                  int64_t v4 = v12 + 1;
                  if (__OFADD__(v12, 1)) {
                    break;
                  }
                  if (v4 >= v31) {
                    return swift_release();
                  }
                  unint64_t v11 = *(void *)(v30 + 8 * v4);
                  ++v12;
                  if (v11) {
                    goto LABEL_23;
                  }
                }
LABEL_47:
                __break(1u);
                goto LABEL_48;
              }
              int64_t v4 = v12;
            }
          }
        }
      }
LABEL_23:
      unint64_t v7 = (v11 - 1) & v11;
      unint64_t v9 = __clz(__rbit64(v11)) + (v4 << 6);
    }
    sub_10052E538(*(void *)(a1 + 48) + 48 * v9, (uint64_t)v39);
    v37[0] = v39[0];
    v37[1] = v39[1];
    *(_OWORD *)unint64_t v38 = v39[2];
    uint64_t v13 = (void *)*v2;
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    AnyHashable.hash(into:)();
    Hasher._combine(_:)(v38[1]);
    Swift::Int v14 = Hasher._finalize()();
    uint64_t v15 = -1 << *((unsigned char *)v13 + 32);
    unint64_t v16 = v14 & ~v15;
    if ((*(void *)((char *)v13 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v16))
    {
      uint64_t v17 = ~v15;
      while (1)
      {
        sub_10052E538(v13[6] + 48 * v16, (uint64_t)v35);
        if ((static AnyHashable.== infix(_:_:)() & 1) != 0 && v36 == v38[1]) {
          break;
        }
        sub_10058EF74((uint64_t)v35);
        unint64_t v16 = (v16 + 1) & v17;
        if (((*(void *)((char *)v13 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v16) & 1) == 0) {
          goto LABEL_30;
        }
      }
      sub_10058EF74((uint64_t)v35);
      goto LABEL_5;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_10052E538((uint64_t)v37, (uint64_t)v33);
    unint64_t v32 = (void *)*v2;
    uint64_t v19 = (void *)*v2;
    *uint64_t v2 = 0x8000000000000000;
    if (v19[3] <= v19[2]) {
      break;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100CCD4F4();
      uint64_t v19 = v32;
    }
LABEL_42:
    *(void *)((char *)v19 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v16;
    uint64_t v23 = (_OWORD *)(v19[6] + 48 * v16);
    long long v24 = v33[0];
    long long v25 = v34;
    v23[1] = v33[1];
    v23[2] = v25;
    *uint64_t v23 = v24;
    uint64_t v26 = v19[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    v19[2] = v28;
    *uint64_t v2 = v19;
LABEL_5:
    swift_bridgeObjectRelease();
    sub_10058EF74((uint64_t)v37);
  }
  if (isUniquelyReferenced_nonNull_native) {
    sub_100CBF484();
  }
  else {
    sub_100CD0A20();
  }
  uint64_t v19 = v32;
  Hasher.init(_seed:)();
  AnyHashable.hash(into:)();
  Hasher._combine(_:)(*((Swift::UInt64 *)&v34 + 1));
  Swift::Int v20 = Hasher._finalize()();
  uint64_t v21 = -1 << *((unsigned char *)v32 + 32);
  unint64_t v16 = v20 & ~v21;
  if (((*(void *)((char *)v32 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v16) & 1) == 0) {
    goto LABEL_42;
  }
  uint64_t v22 = ~v21;
  while (1)
  {
    sub_10052E538(v32[6] + 48 * v16, (uint64_t)v35);
    if ((static AnyHashable.== infix(_:_:)() & 1) != 0 && v36 == *((void *)&v34 + 1)) {
      break;
    }
    sub_10058EF74((uint64_t)v35);
    unint64_t v16 = (v16 + 1) & v22;
    if (((*(void *)((char *)v32 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v16) & 1) == 0) {
      goto LABEL_42;
    }
  }
LABEL_48:
  sub_10058EF74((uint64_t)v35);
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10057C8B4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = __chkstk_darwin(v2 - 8, v4);
  unint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v5, v8);
  unint64_t v11 = (char *)&v27 - v10;
  uint64_t result = __chkstk_darwin(v9, v12);
  uint64_t v15 = (char *)&v27 - v14;
  int64_t v16 = 0;
  uint64_t v17 = a1 + 56;
  uint64_t v18 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & *(void *)(a1 + 56);
  int64_t v21 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      unint64_t v22 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v23 = v22 | (v16 << 6);
      goto LABEL_5;
    }
    int64_t v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v24 >= v21) {
      return swift_release();
    }
    unint64_t v25 = *(void *)(v17 + 8 * v24);
    ++v16;
    if (!v25)
    {
      int64_t v16 = v24 + 1;
      if (v24 + 1 >= v21) {
        return swift_release();
      }
      unint64_t v25 = *(void *)(v17 + 8 * v16);
      if (!v25)
      {
        int64_t v16 = v24 + 2;
        if (v24 + 2 >= v21) {
          return swift_release();
        }
        unint64_t v25 = *(void *)(v17 + 8 * v16);
        if (!v25)
        {
          int64_t v16 = v24 + 3;
          if (v24 + 3 >= v21) {
            return swift_release();
          }
          unint64_t v25 = *(void *)(v17 + 8 * v16);
          if (!v25) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v20 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_5:
    sub_10058F030(*(void *)(a1 + 48) + *(void *)(v3 + 72) * v23, (uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
    sub_10058EFC8((uint64_t)v15, (uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
    sub_100CB7090((uint64_t)v11, (uint64_t)v7);
    uint64_t result = sub_10058F81C((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
  }
  int64_t v26 = v24 + 4;
  if (v26 >= v21) {
    return swift_release();
  }
  unint64_t v25 = *(void *)(v17 + 8 * v26);
  if (v25)
  {
    int64_t v16 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v16 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v16 >= v21) {
      return swift_release();
    }
    unint64_t v25 = *(void *)(v17 + 8 * v16);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10057CB20(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = __chkstk_darwin(v2, v4);
  unint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t result = __chkstk_darwin(v11 - 8, v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v16 = 0;
  uint64_t v33 = a1;
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v18 = a1 + 56;
  uint64_t v17 = v19;
  uint64_t v20 = 1 << *(unsigned char *)(v18 - 24);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v17;
  uint64_t v28 = v18;
  int64_t v29 = (unint64_t)(v20 + 63) >> 6;
  uint64_t v31 = v3 + 16;
  unint64_t v32 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  uint64_t v30 = v3 + 48;
  if ((v21 & v17) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v23 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  for (unint64_t i = v23 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v26)) + (v16 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v15, *(void *)(v33 + 48) + *(void *)(v3 + 72) * i, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v15, 1, v2) == 1) {
      return swift_release();
    }
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v7, v15, v2);
    sub_100CB4BC8((uint64_t)v10, v7);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    if (v22) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v25 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 >= v29) {
      goto LABEL_24;
    }
    unint64_t v26 = *(void *)(v28 + 8 * v25);
    ++v16;
    if (!v26)
    {
      int64_t v16 = v25 + 1;
      if (v25 + 1 >= v29) {
        goto LABEL_24;
      }
      unint64_t v26 = *(void *)(v28 + 8 * v16);
      if (!v26)
      {
        int64_t v16 = v25 + 2;
        if (v25 + 2 >= v29) {
          goto LABEL_24;
        }
        unint64_t v26 = *(void *)(v28 + 8 * v16);
        if (!v26)
        {
          int64_t v16 = v25 + 3;
          if (v25 + 3 >= v29) {
            goto LABEL_24;
          }
          unint64_t v26 = *(void *)(v28 + 8 * v16);
          if (!v26) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v22 = (v26 - 1) & v26;
  }
  int64_t v27 = v25 + 4;
  if (v27 >= v29)
  {
LABEL_24:
    (*v32)(v15, 1, 1, v2);
    return swift_release();
  }
  unint64_t v26 = *(void *)(v28 + 8 * v27);
  if (v26)
  {
    int64_t v16 = v27;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v16 >= v29) {
      goto LABEL_24;
    }
    unint64_t v26 = *(void *)(v28 + 8 * v16);
    ++v27;
    if (v26) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_10057CE80(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    uint64_t result = sub_100CB8364(&v13, *(unsigned __int8 *)(*(void *)(v1 + 48) + v9));
  }
  int64_t v12 = v10 + 4;
  if (v12 < v7)
  {
    unint64_t v11 = *(void *)(v3 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v2 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        ++v12;
        if (v11) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v12;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

void sub_10057CFDC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8, v4);
  unint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  int64_t v10 = (char *)&v26 - v9;
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v26 - v13;
  int64_t v15 = 0;
  uint64_t v16 = a1 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(a1 + 56);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_5;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v23 >= v20) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v16 + 8 * v23);
    ++v15;
    if (!v24)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v20) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v16 + 8 * v15);
      if (!v24)
      {
        int64_t v15 = v23 + 2;
        if (v23 + 2 >= v20) {
          goto LABEL_23;
        }
        unint64_t v24 = *(void *)(v16 + 8 * v15);
        if (!v24)
        {
          int64_t v15 = v23 + 3;
          if (v23 + 3 >= v20) {
            goto LABEL_23;
          }
          unint64_t v24 = *(void *)(v16 + 8 * v15);
          if (!v24) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v19 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v15 << 6);
LABEL_5:
    sub_10058F030(*(void *)(a1 + 48) + *(void *)(v3 + 72) * v22, (uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_10058EFC8((uint64_t)v14, (uint64_t)v6, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100CB8484((uint64_t)v10, (uint64_t)v6);
    sub_10058F81C((uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
  }
  int64_t v25 = v23 + 4;
  if (v25 >= v20)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v24 = *(void *)(v16 + 8 * v25);
  if (v24)
  {
    int64_t v15 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v15 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v15 >= v20) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v16 + 8 * v15);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

void sub_10057D248(unint64_t a1)
{
}

void sub_10057D278(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, id))
{
  unint64_t v6 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_10050BF48(0, a2);
    sub_10058EF24(a4, a2);
    Set.Iterator.init(_cocoa:)();
    unint64_t v6 = (unint64_t)v25[1];
    unint64_t v24 = v25[2];
    uint64_t v9 = (uint64_t)v25[3];
    id v10 = v25[4];
    unint64_t v11 = (unint64_t)v25[5];
  }
  else
  {
    id v10 = 0;
    uint64_t v12 = -1 << *(unsigned char *)(a1 + 32);
    unint64_t v24 = (void *)(a1 + 56);
    uint64_t v9 = ~v12;
    uint64_t v13 = -v12;
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v11 = v14 & *(void *)(a1 + 56);
  }
  int64_t v15 = (unint64_t)(v9 + 64) >> 6;
  if ((v6 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v11)
    {
      uint64_t v16 = (v11 - 1) & v11;
      unint64_t v17 = __clz(__rbit64(v11)) | ((void)v10 << 6);
      uint64_t v18 = (char *)v10;
      goto LABEL_29;
    }
    uint64_t v20 = (uint64_t)v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v20 >= v15) {
      goto LABEL_32;
    }
    unint64_t v21 = v24[v20];
    uint64_t v18 = (char *)v10 + 1;
    if (!v21)
    {
      uint64_t v18 = (char *)v10 + 2;
      if ((uint64_t)v10 + 2 >= v15) {
        goto LABEL_32;
      }
      unint64_t v21 = v24[(void)v18];
      if (!v21)
      {
        uint64_t v18 = (char *)v10 + 3;
        if ((uint64_t)v10 + 3 >= v15) {
          goto LABEL_32;
        }
        unint64_t v21 = v24[(void)v18];
        if (!v21)
        {
          uint64_t v18 = (char *)v10 + 4;
          if ((uint64_t)v10 + 4 >= v15) {
            goto LABEL_32;
          }
          unint64_t v21 = v24[(void)v18];
          if (!v21)
          {
            uint64_t v18 = (char *)v10 + 5;
            if ((uint64_t)v10 + 5 >= v15) {
              goto LABEL_32;
            }
            unint64_t v21 = v24[(void)v18];
            if (!v21)
            {
              unint64_t v22 = (char *)v10 + 6;
              while ((char *)v15 != v22)
              {
                unint64_t v21 = v24[(void)v22++];
                if (v21)
                {
                  uint64_t v18 = v22 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_10052E1EC();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v16 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + ((void)v18 << 6);
LABEL_29:
    id v19 = *(id *)(*(void *)(v6 + 48) + 8 * v17);
    if (!v19) {
      goto LABEL_32;
    }
    while (1)
    {
      a5(v25, v19);

      id v10 = v18;
      unint64_t v11 = v16;
      if ((v6 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        sub_10050BF48(0, a2);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v19 = v25[0];
        swift_unknownObjectRelease();
        uint64_t v18 = (char *)v10;
        uint64_t v16 = v11;
        if (v19) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

void sub_10057D530(unint64_t a1)
{
}

uint64_t sub_10057D560(uint64_t a1, char a2)
{
  if (*(void *)(a1 + 24) == 1)
  {
    sub_100522F00(a1, (uint64_t *)&unk_1016725E0);
    sub_10095B058(a2, v7);
    return sub_100522F00((uint64_t)v7, (uint64_t *)&unk_1016725E0);
  }
  else
  {
    sub_10051B3EC(a1, (uint64_t)v7, &qword_101672BF0);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1009721E4((uint64_t)v7, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v6;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10057D61C(uint64_t a1, Swift::UInt a2)
{
  uint64_t v3 = v2;
  if (*(void *)(a1 + 24) == 1)
  {
    sub_100522F00(a1, (uint64_t *)&unk_1016725E0);
    uint64_t v5 = sub_1009563E8(a2);
    if (v6)
    {
      unint64_t v7 = v5;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v9 = *v2;
      uint64_t v12 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10097C320();
        uint64_t v9 = v12;
      }
      sub_10051B3EC(*(void *)(v9 + 56) + 32 * v7, (uint64_t)v14, &qword_101672BF0);
      sub_100588070(v7, v9);
      *uint64_t v3 = v9;
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v14, 0, 24);
      v14[3] = 1;
    }
    return sub_100522F00((uint64_t)v14, (uint64_t *)&unk_1016725E0);
  }
  else
  {
    sub_10051B3EC(a1, (uint64_t)v14, &qword_101672BF0);
    char v10 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_100972310((uint64_t)v14, a2, v10);
    *uint64_t v2 = v13;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10057D748(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674170);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101684F90);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_100522F00(a1, (uint64_t *)&unk_101674170);
    sub_10095B150(a2, (uint64_t)v9);
    uint64_t v15 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a2, v15);
    return sub_100522F00((uint64_t)v9, (uint64_t *)&unk_101674170);
  }
  else
  {
    sub_10051B3EC(a1, (uint64_t)v13, (uint64_t *)&unk_101684F90);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10097258C((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v20;
    swift_bridgeObjectRelease();
    uint64_t v18 = type metadata accessor for UUID();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a2, v18);
  }
}

uint64_t sub_10057D960(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v13 = __chkstk_darwin(v10, v12);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v11 + 48))(a1, 1, v10, v13) == 1)
  {
    sub_100522F00(a1, (uint64_t *)&unk_101674520);
    sub_10095B480(a2, (uint64_t)v9);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
    return sub_100522F00((uint64_t)v9, (uint64_t *)&unk_101674520);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v15, a1, v10);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_100972F88((uint64_t)v15, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v19;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
  }
}

uint64_t sub_10057DB50(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674230);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLRealTimeEnter(0);
  __n128 v12 = __chkstk_darwin(v10, v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_100522F00(a1, (uint64_t *)&unk_101674230);
    sub_10095B668(a2, (uint64_t)v9);
    uint64_t v16 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
    return sub_100522F00((uint64_t)v9, (uint64_t *)&unk_101674230);
  }
  else
  {
    sub_10058EFC8(a1, (uint64_t)v14, type metadata accessor for CRLRealTimeEnter);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1009731C0((uint64_t)v14, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v21;
    swift_bridgeObjectRelease();
    uint64_t v19 = type metadata accessor for UUID();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a2, v19);
  }
}

uint64_t sub_10057DD70(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC(&qword_101674248);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_101674250);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1, 1, v10) == 1)
  {
    sub_100522F00(a1, &qword_101674248);
    unint64_t v15 = sub_100956978(a2);
    if (v16)
    {
      unint64_t v17 = v15;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v19 = *v3;
      uint64_t v23 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10097D308();
        uint64_t v19 = v23;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 32))(v9, *(void *)(v19 + 56) + *(void *)(v11 + 72) * v17, v10);
      sub_100588A30(v17, v19);
      *uint64_t v3 = v19;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    }
    return sub_100522F00((uint64_t)v9, &qword_101674248);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v14, a1, v10);
    char v20 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_100973444((uint64_t)v14, a2, v20);
    *uint64_t v3 = v23;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10057DFD0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_100575CE8((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_100973A74(v9, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v8;
    swift_bridgeObjectRelease();
    uint64_t v5 = type metadata accessor for CodingUserInfoKey();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_100522F00(a1, &qword_101672BF0);
    sub_10095BA64(a2, v9);
    uint64_t v7 = type metadata accessor for CodingUserInfoKey();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a2, v7);
    return sub_100522F00((uint64_t)v9, &qword_101672BF0);
  }
}

uint64_t sub_10057E0F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC(&qword_101691F20);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLBoardEntity();
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_100522F00(a1, &qword_101691F20);
    sub_10095BF30(a2, (uint64_t)v9);
    sub_10058F81C(a2, type metadata accessor for CRLBoardIdentifier);
    return sub_100522F00((uint64_t)v9, &qword_101691F20);
  }
  else
  {
    sub_10058EFC8(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_100974DA4((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    return sub_10058F81C(a2, type metadata accessor for CRLBoardIdentifier);
  }
}

uint64_t sub_10057E2D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (*(unsigned char *)(a1 + 8))
  {
    sub_100522F00(a1, &qword_101674260);
    unint64_t v5 = sub_100955F14(a2);
    char v7 = v6;
    if (v6)
    {
      unint64_t v8 = v5;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v10 = *v2;
      uint64_t v13 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10097F864();
        uint64_t v10 = v13;
      }
      sub_10051B3EC(*(void *)(v10 + 56) + 8 * v8, (uint64_t)&v15, &qword_101674258);
      sub_10058A350(v8, v10);
      *uint64_t v3 = v10;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = 0;
    }
    BOOL v16 = (v7 & 1) == 0;
    return sub_100522F00((uint64_t)&v15, &qword_101674260);
  }
  else
  {
    sub_10051B3EC(a1, (uint64_t)&v15, &qword_101674258);
    char v11 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_10097546C((uint64_t)&v15, a2, v11);
    *uint64_t v2 = v14;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10057E408(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v4 - 8, v5);
  char v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v11 = __chkstk_darwin(v8, v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v9 + 48))(a1, 1, v8, v11) == 1)
  {
    sub_100522F00(a1, &qword_101672EB0);
    uint64_t v14 = sub_100987C40();
    if (v15)
    {
      unint64_t v16 = v14;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v18 = *v2;
      uint64_t v22 = *v2;
      *uint64_t v2 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10097FA34();
        uint64_t v18 = v22;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 32))(v7, *(void *)(v18 + 56) + *(void *)(v9 + 72) * v16, v8);
      sub_10058A530(v16, v18);
      *uint64_t v2 = v18;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    }
    return sub_100522F00((uint64_t)v7, &qword_101672EB0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v13, a1, v8);
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_100975598((uint64_t)v13, v19);
    *uint64_t v2 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10057E658(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC(&qword_101674228);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLThrottleInfo(0);
  __n128 v12 = __chkstk_darwin(v10, v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_100522F00(a1, &qword_101674228);
    sub_10095C7C4((uint64_t)a2, (uint64_t)v9);

    return sub_100522F00((uint64_t)v9, &qword_101674228);
  }
  else
  {
    sub_10058EFC8(a1, (uint64_t)v14, type metadata accessor for CRLThrottleInfo);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1009768D8((uint64_t)v14, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v19;

    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10057E814(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC(&qword_101674220);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLZoneSyncResultScenarios();
  __n128 v12 = __chkstk_darwin(v10, v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_100522F00(a1, &qword_101674220);
    sub_10095CA68((uint64_t)a2, (uint64_t)v9);

    return sub_100522F00((uint64_t)v9, &qword_101674220);
  }
  else
  {
    sub_10058EFC8(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1009770F4((uint64_t)v14, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v19;

    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10057E9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC(&qword_1016741F8);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa(0);
  __n128 v12 = __chkstk_darwin(v10, v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_100522F00(a1, &qword_1016741F8);
    sub_10095CC44(a2, (uint64_t)v9);
    uint64_t v16 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
    return sub_100522F00((uint64_t)v9, &qword_1016741F8);
  }
  else
  {
    sub_10058EFC8(a1, (uint64_t)v14, _s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10097759C((uint64_t)v14, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v21;
    swift_bridgeObjectRelease();
    uint64_t v19 = type metadata accessor for UUID();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a2, v19);
  }
}

uint64_t sub_10057EBF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1, 1, v10) == 1)
  {
    sub_100522F00(a1, &qword_101672EB0);
    sub_10095CF78(a2, (uint64_t)v9);
    sub_10058F81C(a2, type metadata accessor for CRLBoardIdentifier);
    return sub_100522F00((uint64_t)v9, &qword_101672EB0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v14, a1, v10);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_100977BB8((uint64_t)v14, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    return sub_10058F81C(a2, type metadata accessor for CRLBoardIdentifier);
  }
}

unint64_t sub_10057EDE4(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3 = v2;
  if (a1)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_100978348(a1, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
  }
  else
  {
    unint64_t result = sub_100956978(a2);
    if ((v8 & 1) == 0) {
      return result;
    }
    unint64_t v9 = result;
    int v10 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v2;
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!v10)
    {
      sub_100983A94();
      uint64_t v11 = v14;
    }
    uint64_t v12 = *(void **)(*(void *)(v11 + 56) + 8 * v9);
    sub_10058B87C(v9, v11);
    *uint64_t v3 = v11;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_10057EEC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1, 1, v12) == 1)
  {
    sub_100522F00(a1, (uint64_t *)&unk_101674520);
    sub_10095D488(a2, a3, (uint64_t)v11);
    swift_bridgeObjectRelease();
    return sub_100522F00((uint64_t)v11, (uint64_t *)&unk_101674520);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v16, a1, v12);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_1009787DC((uint64_t)v16, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v20;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10057F0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLBoardIdentifier(0);
  __n128 v12 = __chkstk_darwin(v10, v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_100522F00(a1, &qword_101672C30);
    sub_10095D64C(a2, (uint64_t)v9);
    sub_10058F81C(a2, type metadata accessor for CRLAssetReferrerIdentifier);
    return sub_100522F00((uint64_t)v9, &qword_101672C30);
  }
  else
  {
    sub_10058EFC8(a1, (uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1009789A0((uint64_t)v14, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v19;
    swift_bridgeObjectRelease();
    return sub_10058F81C(a2, type metadata accessor for CRLAssetReferrerIdentifier);
  }
}

uint64_t sub_10057F288(uint64_t a1, void *a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_100575CE8((_OWORD *)a1, v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_100978F78(v7, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v6;

    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_100522F00(a1, &qword_101672BF0);
    sub_10095D814((uint64_t)a2, v7);

    return sub_100522F00((uint64_t)v7, &qword_101672BF0);
  }
}

uint64_t sub_10057F344(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  char v5 = a2 & 1;
  uint64_t v6 = sub_1005057FC(&qword_1016741F0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLSyncScheduledActivity(0);
  __n128 v12 = __chkstk_darwin(v10, v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_100522F00(a1, &qword_1016741F0);
    sub_10095D914(v5, (uint64_t)v9);
    return sub_100522F00((uint64_t)v9, &qword_1016741F0);
  }
  else
  {
    sub_10058EFC8(a1, (uint64_t)v14, type metadata accessor for CRLSyncScheduledActivity);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_100979130((uint64_t)v14, v5, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v19;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10057F4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_100522F00(a1, (uint64_t *)&unk_1016741D0);
    sub_10095DAE4(a2, (uint64_t)v9);
    sub_10058F81C(a2, type metadata accessor for CRLBoardIdentifier);
    return sub_100522F00((uint64_t)v9, (uint64_t *)&unk_1016741D0);
  }
  else
  {
    sub_10058EFC8(a1, (uint64_t)v13, type metadata accessor for CRLBoardViewModelMetadata);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_100979444((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    return sub_10058F81C(a2, type metadata accessor for CRLBoardIdentifier);
  }
}

uint64_t sub_10057F6DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016741E0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_100522F00(a1, (uint64_t *)&unk_1016741E0);
    sub_10095DD74(a2, (uint64_t)v9);
    sub_10058F81C(a2, type metadata accessor for CRLBoardIdentifier);
    return sub_100522F00((uint64_t)v9, (uint64_t *)&unk_1016741E0);
  }
  else
  {
    sub_10058EFC8(a1, (uint64_t)v13, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10097974C((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    return sub_10058F81C(a2, type metadata accessor for CRLBoardIdentifier);
  }
}

double *sub_10057F8C4(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v84 = (uint64_t)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLProto_Data(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (long long *)((char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v99 = *(void *)(v11 - 8);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v98 = (uint64_t)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v102 - 8);
  __chkstk_darwin(v102, v15);
  uint64_t v97 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1005057FC((uint64_t *)&unk_101684FB0);
  __chkstk_darwin(v96, v17);
  uint64_t v107 = (uint64_t *)((char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19, v20);
  uint64_t v95 = (uint64_t *)((char *)&v77 - v21);
  __chkstk_darwin(v22, v23);
  uint64_t v94 = (char *)&v77 - v24;
  uint64_t v25 = type metadata accessor for CRLProto_ObjectInfo.AssetReference(0);
  uint64_t v92 = *(void *)(v25 - 8);
  uint64_t v93 = v25;
  __chkstk_darwin(v25, v26);
  int v106 = (uint64_t *)((char *)&v77 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v28 = *(void *)(a1 + 16);
  int64_t v29 = _swiftEmptyArrayStorage;
  if (v28)
  {
    uint64_t v83 = v10;
    uint64_t v90 = v6;
    uint64_t v77 = v1;
    uint64_t v117 = _swiftEmptyArrayStorage;
    sub_1006BB7C4(0, v28, 0);
    unint64_t v30 = sub_10058EAB8(a1);
    uint64_t v32 = 0;
    uint64_t v33 = a1 + 64;
    uint64_t v101 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    uint64_t v88 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    uint64_t v82 = (void (**)(char *, uint64_t, uint64_t))(v14 + 32);
    uint64_t v81 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v80 = (void (**)(char *, uint64_t))(v14 + 8);
    char v34 = *(unsigned char *)(a1 + 32);
    uint64_t v78 = a1 + 80;
    long long v79 = xmmword_101180360;
    uint64_t v91 = a1;
    int64_t v89 = v28;
    uint64_t v86 = v31;
    uint64_t v87 = a1 + 64;
    while ((v30 & 0x8000000000000000) == 0 && (uint64_t)v30 < 1 << v34)
    {
      unint64_t v36 = v30 >> 6;
      if ((*(void *)(v33 + 8 * (v30 >> 6)) & (1 << v30)) == 0) {
        goto LABEL_31;
      }
      if (*(_DWORD *)(a1 + 36) != v31) {
        goto LABEL_32;
      }
      uint64_t v103 = v32;
      uint64_t v104 = 1 << v30;
      uint64_t v37 = v96;
      unint64_t v38 = v94;
      uint64_t v39 = (uint64_t)&v94[*(int *)(v96 + 48)];
      uint64_t v40 = *(void *)(a1 + 56);
      uint64_t v41 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v30);
      uint64_t v42 = *v41;
      uint64_t v43 = v41[1];
      uint64_t v44 = *(void *)(v99 + 72);
      uint64_t v105 = v30;
      sub_100522E9C(v40 + v44 * v30, v39, (uint64_t *)&unk_101674520);
      *unint64_t v38 = v42;
      v38[1] = v43;
      uint64_t v45 = (uint64_t)v95;
      void *v95 = v42;
      *(void *)(v45 + 8) = v43;
      sub_100522E9C(v39, v45 + *(int *)(v37 + 48), (uint64_t *)&unk_101674520);
      uint64_t v46 = v107;
      sub_10051B3EC(v45, (uint64_t)v107, (uint64_t *)&unk_101684FB0);
      swift_bridgeObjectRetain_n();
      sub_100522F00((uint64_t)v38, (uint64_t *)&unk_101684FB0);
      uint64_t v48 = *v46;
      uint64_t v47 = v46[1];
      uint64_t v49 = (uint64_t)v46 + *(int *)(v37 + 48);
      uint64_t v50 = v93;
      uint64_t v51 = v106;
      UnknownStorage.init()();
      uint64_t v52 = (uint64_t)v51 + *(int *)(v50 + 24);
      uint64_t v53 = v90;
      uint64_t v100 = *v101;
      v100(v52, 1, 1, v90);
      *uint64_t v51 = v48;
      v51[1] = v47;
      uint64_t v54 = v102;
      uint64_t v55 = v98;
      sub_100522E9C(v49, v98, (uint64_t *)&unk_101674520);
      if ((*v88)(v55, 1, v54) == 1)
      {
        swift_bridgeObjectRetain();
        sub_100522F00(v55, (uint64_t *)&unk_101674520);
        a1 = v91;
        int64_t v56 = v89;
      }
      else
      {
        (*v82)(v97, v55, v54);
        swift_bridgeObjectRetain();
        __srCGFloat c = UUID.uuid.getter();
        char v109 = v57;
        char v110 = v58;
        char v111 = v59;
        char v112 = v60;
        char v113 = v61;
        char v114 = v62;
        char v115 = v63;
        char v116 = v64;
        UUID.uuid.getter();
        uint64_t v85 = sub_100670608(&__src, 16);
        uint64_t v66 = v65;
        uint64_t v67 = v84;
        sub_100522E9C(v52, v84, (uint64_t *)&unk_101674160);
        if ((*v81)(v67, 1, v53) == 1)
        {
          uint64_t v68 = v83;
          *uint64_t v83 = v79;
          UnknownStorage.init()();
          sub_100522F00(v67, (uint64_t *)&unk_101674160);
        }
        else
        {
          uint64_t v68 = v83;
          sub_10058EFC8(v67, (uint64_t)v83, type metadata accessor for CRLProto_Data);
        }
        a1 = v91;
        int64_t v56 = v89;
        sub_100510084(*(void *)v68, *((void *)v68 + 1));
        *(void *)uint64_t v68 = v85;
        *((void *)v68 + 1) = v66;
        sub_100522F00(v52, (uint64_t *)&unk_101674160);
        sub_10058EFC8((uint64_t)v68, v52, type metadata accessor for CRLProto_Data);
        v100(v52, 0, 1, v53);
        (*v80)(v97, v102);
      }
      sub_100522F00((uint64_t)v107, (uint64_t *)&unk_101684FB0);
      int64_t v29 = v117;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB7C4(0, *((void *)v29 + 2) + 1, 1);
        int64_t v29 = v117;
      }
      unint64_t v70 = *((void *)v29 + 2);
      unint64_t v69 = *((void *)v29 + 3);
      if (v70 >= v69 >> 1)
      {
        sub_1006BB7C4(v69 > 1, v70 + 1, 1);
        int64_t v29 = v117;
      }
      *((void *)v29 + 2) = v70 + 1;
      sub_10058EFC8((uint64_t)v106, (uint64_t)v29+ ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80))+ *(void *)(v92 + 72) * v70, type metadata accessor for CRLProto_ObjectInfo.AssetReference);
      char v34 = *(unsigned char *)(a1 + 32);
      unint64_t v35 = 1 << v34;
      if (v105 >= 1 << v34) {
        goto LABEL_33;
      }
      uint64_t v33 = v87;
      uint64_t v71 = *(void *)(v87 + 8 * v36);
      if ((v71 & v104) == 0) {
        goto LABEL_34;
      }
      LODWORD(v31) = v86;
      if (*(_DWORD *)(a1 + 36) != v86) {
        goto LABEL_35;
      }
      unint64_t v72 = v71 & (-2 << (v105 & 0x3F));
      if (v72)
      {
        unint64_t v35 = __clz(__rbit64(v72)) | v105 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v73 = v36 + 1;
        unint64_t v74 = (v35 + 63) >> 6;
        if (v36 + 1 < v74)
        {
          unint64_t v75 = *(void *)(v87 + 8 * v73);
          if (v75)
          {
LABEL_28:
            unint64_t v35 = __clz(__rbit64(v75)) + (v73 << 6);
          }
          else
          {
            while (v74 - 2 != v36)
            {
              unint64_t v75 = *(void *)(v78 + 8 * v36++);
              if (v75)
              {
                unint64_t v73 = v36 + 1;
                goto LABEL_28;
              }
            }
          }
        }
      }
      uint64_t v32 = v103 + 1;
      unint64_t v30 = v35;
      if (v103 + 1 == v56) {
        return v29;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
  }
  return v29;
}

double *sub_100580204(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(0);
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (unint64_t *)((char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = _swiftEmptyArrayStorage;
  if (v7)
  {
    uint64_t v36 = v1;
    uint64_t v50 = _swiftEmptyArrayStorage;
    sub_1006BB7A4(0, v7, 0);
    uint64_t v8 = v50;
    uint64_t v10 = sub_10058EAB8(a1);
    uint64_t v11 = 0;
    uint64_t v12 = a1 + 64;
    char v13 = *(unsigned char *)(a1 + 32);
    unint64_t v40 = (unint64_t)"paragraphAlignment";
    int64_t v41 = v7;
    uint64_t v39 = "specificCRDTData";
    uint64_t v37 = a1 + 80;
    unint64_t v38 = "alternateCommonCRDTData";
    uint64_t v43 = a1 + 64;
    uint64_t v44 = a1;
    uint64_t v42 = v9;
    while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << v13)
    {
      unint64_t v16 = (unint64_t)v10 >> 6;
      if ((*(void *)(v12 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0) {
        goto LABEL_35;
      }
      if (*(_DWORD *)(a1 + 36) != v9) {
        goto LABEL_36;
      }
      uint64_t v48 = v11 + 1;
      uint64_t v49 = v8;
      uint64_t v47 = v10 & 0x3F;
      uint64_t v17 = *(unsigned __int8 *)(*(void *)(a1 + 48) + v10);
      uint64_t v18 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v10);
      uint64_t v19 = *v18;
      unint64_t v20 = v18[1];
      uint64_t v21 = v6;
      sub_100510D4C(*v18, v20);
      UnknownStorage.init()();
      unint64_t v22 = 0xEA00000000006174;
      unint64_t v23 = 0x61447463656A626FLL;
      switch(v17)
      {
        case 1:
          unint64_t v22 = 0xEE00617461445444;
          unint64_t v23 = 0x52436E6F6D6D6F63;
          break;
        case 2:
          unint64_t v22 = v40 | 0x8000000000000000;
          unint64_t v23 = 0xD000000000000010;
          break;
        case 3:
          unint64_t v23 = 0xD000000000000017;
          uint64_t v24 = v39;
          goto LABEL_14;
        case 4:
          unint64_t v23 = 0xD000000000000019;
          uint64_t v24 = v38;
LABEL_14:
          unint64_t v22 = (unint64_t)v24 | 0x8000000000000000;
          break;
        default:
          break;
      }
      *uint64_t v6 = v23;
      v6[1] = v22;
      unint64_t v25 = 0;
      switch(v20 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v19), v19)) {
            goto LABEL_40;
          }
          unint64_t v25 = HIDWORD(v19) - (int)v19;
LABEL_20:
          if ((v25 & 0x8000000000000000) != 0) {
            goto LABEL_42;
          }
LABEL_21:
          sub_100510084(v19, v20);
          v21[2] = v25;
          uint64_t v6 = v21;
          uint64_t v8 = v49;
          uint64_t v50 = v49;
          unint64_t v29 = *((void *)v49 + 2);
          unint64_t v28 = *((void *)v49 + 3);
          if (v29 >= v28 >> 1)
          {
            sub_1006BB7A4(v28 > 1, v29 + 1, 1);
            uint64_t v8 = v50;
          }
          *((void *)v8 + 2) = v29 + 1;
          sub_10058EFC8((uint64_t)v6, (uint64_t)v8+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(void *)(v45 + 72) * v29, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          a1 = v44;
          char v13 = *(unsigned char *)(v44 + 32);
          unint64_t v14 = 1 << v13;
          if (v10 >= 1 << v13) {
            goto LABEL_37;
          }
          uint64_t v12 = v43;
          uint64_t v30 = *(void *)(v43 + 8 * v16);
          if ((v30 & (1 << v10)) == 0) {
            goto LABEL_38;
          }
          LODWORD(v9) = v42;
          if (*(_DWORD *)(v44 + 36) != v42) {
            goto LABEL_39;
          }
          unint64_t v31 = v30 & (-2 << v47);
          if (v31)
          {
            unint64_t v14 = __clz(__rbit64(v31)) | v10 & 0xFFFFFFFFFFFFFFC0;
            int64_t v15 = v41;
            goto LABEL_4;
          }
          unint64_t v32 = v16 + 1;
          unint64_t v33 = (v14 + 63) >> 6;
          int64_t v15 = v41;
          if (v16 + 1 >= v33) {
            goto LABEL_4;
          }
          unint64_t v34 = *(void *)(v43 + 8 * v32);
          if (v34) {
            goto LABEL_32;
          }
          break;
        case 2uLL:
          uint64_t v27 = *(void *)(v19 + 16);
          uint64_t v26 = *(void *)(v19 + 24);
          unint64_t v25 = v26 - v27;
          if (!__OFSUB__(v26, v27)) {
            goto LABEL_20;
          }
          goto LABEL_41;
        case 3uLL:
          goto LABEL_21;
        default:
          unint64_t v25 = BYTE6(v20);
          goto LABEL_21;
      }
      while (v33 - 2 != v16)
      {
        unint64_t v34 = *(void *)(v37 + 8 * v16++);
        if (v34)
        {
          unint64_t v32 = v16 + 1;
LABEL_32:
          unint64_t v14 = __clz(__rbit64(v34)) + (v32 << 6);
          break;
        }
      }
LABEL_4:
      uint64_t v10 = v14;
      uint64_t v11 = v48;
      if (v48 == v15) {
        return v8;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    JUMPOUT(0x100580684);
  }
  return v8;
}

void *sub_1005806A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[8] = 0x1000000000000;
  v6[9] = &_swiftEmptySetSingleton;
  v6[10] = &_swiftEmptySetSingleton;
  type metadata accessor for CRLRootContainerItem(0);
  if (swift_dynamicCastClass())
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(rootObject:store:context:channel:options:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriter.swift", 99, 2, 40, (uint64_t)"You should not provide a CRLRootContainerItem. Pass a CRLBoard instead.", 71, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(rootObject:store:context:channel:options:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriter.swift", 99, 2, 40);
  }
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = a4;
  v6[6] = a5;
  v6[7] = a6;
  return v6;
}

uint64_t sub_1005807DC(uint64_t a1)
{
  v2[47] = a1;
  v2[48] = v1;
  v2[49] = type metadata accessor for CRLProto_ObjectMetadata(0);
  v2[50] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_101674160);
  v2[51] = swift_task_alloc();
  v2[52] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CRLProto_Data(0);
  v2[53] = v3;
  v2[54] = *(void *)(v3 - 8);
  v2[55] = swift_task_alloc();
  v2[56] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CRLProto_ObjectMetadata.AssetInfo(0);
  v2[57] = v4;
  v2[58] = *(void *)(v4 - 8);
  v2[59] = swift_task_alloc();
  v2[60] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for CocoaError.Code();
  v2[61] = v5;
  v2[62] = *(void *)(v5 - 8);
  v2[63] = swift_task_alloc();
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101684F90);
  v2[64] = v6;
  v2[65] = *(void *)(v6 - 8);
  v2[66] = swift_task_alloc();
  v2[67] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_101674170);
  v2[68] = swift_task_alloc();
  v2[69] = swift_task_alloc();
  v2[70] = swift_task_alloc();
  v2[71] = swift_task_alloc();
  v2[72] = sub_1005057FC(&qword_101684FA0);
  v2[73] = swift_task_alloc();
  sub_1005057FC(&qword_101672E90);
  v2[74] = swift_task_alloc();
  v2[75] = swift_task_alloc();
  v2[76] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for URL();
  v2[77] = v7;
  v2[78] = *(void *)(v7 - 8);
  v2[79] = swift_task_alloc();
  v2[80] = swift_task_alloc();
  v2[81] = swift_task_alloc();
  v2[82] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_101674520);
  v2[83] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for UUID();
  v2[84] = v8;
  v2[85] = *(void *)(v8 - 8);
  v2[86] = swift_task_alloc();
  v2[87] = swift_task_alloc();
  v2[88] = swift_task_alloc();
  v2[89] = swift_task_alloc();
  v2[90] = swift_task_alloc();
  v2[91] = swift_task_alloc();
  return _swift_task_switch(sub_100580CA8, 0, 0);
}

uint64_t sub_100580CA8()
{
  uint64_t v1 = v0[91];
  uint64_t v2 = (char *)v0[89];
  uint64_t v3 = v0[85];
  uint64_t v15 = v0[84];
  uint64_t v16 = v0[90];
  uint64_t v4 = v0[48];
  uint64_t v5 = *(void *)(v4 + 16);
  v0[92] = v5;
  uint64_t v6 = *(void *)(v4 + 24);
  v0[93] = v6;
  v0[94] = swift_getObjectType();
  uint64_t v7 = *(void (**)(void))(v6 + 16);
  v0[95] = v7;
  v0[96] = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0x339B000000000000;
  v7();
  uint64_t v9 = v8;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v9 + 40))(ObjectType, v9);
  swift_unknownObjectRelease();
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v0[97] = v11;
  v0[98] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v11(v2, v1, v15);
  swift_beginAccess();
  sub_100CB4BC8(v16, v2);
  swift_endAccess();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[99] = v12;
  v0[100] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v12(v16, v15);
  char v13 = (void *)swift_task_alloc();
  v0[101] = v13;
  *char v13 = v0;
  v13[1] = sub_100580EB0;
  return sub_100584414(v5, v6);
}

uint64_t sub_100580EB0()
{
  *(void *)(*(void *)v1 + 816) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1005841D4;
  }
  else {
    uint64_t v2 = sub_100580FF0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100580FF0()
{
  uint64_t v1 = *(void *)(v0 + 384);
  uint64_t v2 = (uint64_t *)(v1 + 72);
  swift_beginAccess();
  uint64_t v3 = sub_100F63284(0, *(void *)(*(void *)(v1 + 72) + 16), 0, (unint64_t)_swiftEmptyArrayStorage);
  sub_10058EB40((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v4 = Dictionary.init(minimumCapacity:)();
  uint64_t v5 = v4;
  if ((*(unsigned char *)(v1 + 56) & 2) == 0)
  {
    uint64_t v273 = v4;
    uint64_t v270 = v3;
LABEL_98:
    uint64_t v216 = *(void *)(v0 + 432);
    uint64_t v269 = *(void *)(v0 + 424);
    uint64_t v218 = *(void **)(v0 + 400);
    uint64_t v217 = *(void *)(v0 + 408);
    uint64_t v219 = *(void *)(v0 + 384);
    uint64_t v220 = *(void *)(v0 + 392);
    unint64_t v221 = *(void *)(v219 + 64);
    uint64_t v222 = (*(uint64_t (**)(void, void))(v0 + 760))(*(void *)(v0 + 752), *(void *)(v0 + 744));
    uint64_t v224 = v223;
    uint64_t ObjectType = swift_getObjectType();
    *(void *)(v0 + 360) = v222;
    unint64_t v226 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v224 + 8) + 8) + 8))(ObjectType);
    swift_unknownObjectRelease();
    if (v226 <= v221) {
      unint64_t v227 = v221;
    }
    else {
      unint64_t v227 = v226;
    }
    uint64_t v264 = v219;
    *(void *)(v219 + 64) = v227;
    void *v218 = _swiftEmptyArrayStorage;
    v218[1] = _swiftEmptyArrayStorage;
    UnknownStorage.init()();
    uint64_t v228 = (uint64_t)v218 + *(int *)(v220 + 28);
    uint64_t v247 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v216 + 56);
    v247(v228, 1, 1, v269);
    uint64_t v229 = UUID.crl_data()();
    uint64_t v245 = v230;
    uint64_t v246 = v229;
    sub_100522E9C(v228, v217, (uint64_t *)&unk_101674160);
    int v231 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v216 + 48))(v217, 1, v269);
    char v232 = *(_OWORD **)(v0 + 440);
    if (v231 == 1)
    {
      uint64_t v233 = *(void *)(v0 + 408);
      *char v232 = xmmword_101180360;
      UnknownStorage.init()();
      sub_100522F00(v233, (uint64_t *)&unk_101674160);
    }
    else
    {
      sub_10058EFC8(*(void *)(v0 + 408), (uint64_t)v232, type metadata accessor for CRLProto_Data);
    }
    unint64_t v244 = *(void (**)(uint64_t, uint64_t, double))(v0 + 792);
    uint64_t v234 = *(void *)(v0 + 728);
    uint64_t v235 = *(void *)(v0 + 672);
    uint64_t v236 = *(void *)(v0 + 440);
    uint64_t v237 = *(void *)(v0 + 424);
    uint64_t v238 = *(void **)(v0 + 400);
    uint64_t v239 = *(void *)(v0 + 376);
    sub_100510084(*(void *)v236, *(void *)(v236 + 8));
    *(void *)uint64_t v236 = v246;
    *(void *)(v236 + 8) = v245;
    sub_100522F00(v228, (uint64_t *)&unk_101674160);
    sub_10058EFC8(v236, v228, type metadata accessor for CRLProto_Data);
    v247(v228, 0, 1, v237);
    double v240 = sub_100FD217C(*(void *)(v264 + 64));
    uint64_t v242 = v241;
    v244(v234, v235, v240);
    swift_bridgeObjectRelease();
    *uint64_t v238 = v242;
    swift_bridgeObjectRelease();
    v218[1] = v270;
    sub_10058F030((uint64_t)v238, v239, type metadata accessor for CRLProto_ObjectMetadata);
    *(void *)(v239 + *(int *)(type metadata accessor for CRLArchivedObjectMetadataRepresentation() + 20)) = v273;
    sub_10058F81C((uint64_t)v238, type metadata accessor for CRLProto_ObjectMetadata);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v243 = *(uint64_t (**)(void))(v0 + 8);
    return v243();
  }
  uint64_t v6 = *(char **)(*(void *)(v0 + 384) + 32);
  uint64_t v7 = *(void *)&v6[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  uint64_t v8 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  uint64_t v9 = *(void **)&v6[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v9)
  {
    id v10 = *(id *)&v6[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v11 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    uint64_t v12 = v6;
    id v13 = sub_100EAFDE4((uint64_t)v12);

    unint64_t v14 = *(void **)&v6[v8];
    *(void *)&v6[v8] = v13;
    id v10 = v13;

    uint64_t v9 = 0;
  }
  *(void *)(v0 + 824) = v10;
  uint64_t v15 = *(os_unfair_lock_s **)(v7 + 16);
  id v16 = v9;
  os_unfair_lock_unlock(v15);
  uint64_t v17 = *v2;
  *(void *)(v0 + 832) = *v2;
  char v18 = *(unsigned char *)(v17 + 32);
  *(unsigned char *)(v0 + 968) = v18;
  uint64_t v19 = 1 << v18;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & *(void *)(v17 + 56);
  *(void *)(v0 + 840) = OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock;
  *(void *)(v0 + 848) = OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache;
  *(void *)(v0 + 856) = OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetsDirectoryURL;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  int64_t v22 = 0;
  uint64_t v23 = *(void *)(v0 + 816);
LABEL_10:
  *(void *)(v0 + 872) = v3;
  *(void *)(v0 + 864) = v5;
  *(void *)(v0 + 880) = v23;
  if (v21)
  {
LABEL_11:
    uint64_t v24 = (v21 - 1) & v21;
    unint64_t v25 = __clz(__rbit64(v21)) | (v22 << 6);
    uint64_t v26 = *(void *)(v0 + 832);
    goto LABEL_23;
  }
  while (1)
  {
    if (__OFADD__(v22++, 1))
    {
      __break(1u);
      goto LABEL_108;
    }
    int64_t v28 = (unint64_t)((1 << *(unsigned char *)(v0 + 968)) + 63) >> 6;
    uint64_t v26 = *(void *)(v0 + 832);
    if (v22 >= v28) {
      goto LABEL_96;
    }
    uint64_t v29 = v26 + 56;
    unint64_t v30 = *(void *)(v26 + 56 + 8 * v22);
    if (!v30)
    {
      int64_t v31 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_96;
      }
      unint64_t v30 = *(void *)(v29 + 8 * v31);
      if (!v30)
      {
        int64_t v31 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_96;
        }
        unint64_t v30 = *(void *)(v29 + 8 * v31);
        if (!v30)
        {
          int64_t v31 = v22 + 3;
          if (v22 + 3 >= v28)
          {
LABEL_96:
            uint64_t v212 = *(void **)(v0 + 824);
            (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 680) + 56))(*(void *)(v0 + 664), 1, 1, *(void *)(v0 + 672));
LABEL_97:
            swift_release();

            uint64_t v270 = *(void *)(v0 + 872);
            uint64_t v273 = *(void *)(v0 + 864);
            goto LABEL_98;
          }
          unint64_t v30 = *(void *)(v29 + 8 * v31);
          if (!v30)
          {
            while (1)
            {
              int64_t v22 = v31 + 1;
              if (__OFADD__(v31, 1)) {
                break;
              }
              if (v22 >= v28) {
                goto LABEL_96;
              }
              unint64_t v30 = *(void *)(v29 + 8 * v22);
              ++v31;
              if (v30) {
                goto LABEL_22;
              }
            }
LABEL_108:
            __break(1u);
          }
        }
      }
      int64_t v22 = v31;
    }
LABEL_22:
    uint64_t v24 = (v30 - 1) & v30;
    unint64_t v25 = __clz(__rbit64(v30)) + (v22 << 6);
LABEL_23:
    *(void *)(v0 + 896) = v24;
    *(void *)(v0 + 888) = v22;
    unint64_t v32 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 776);
    uint64_t v33 = *(void *)(v0 + 680);
    uint64_t v34 = *(void *)(v0 + 672);
    uint64_t v35 = *(void *)(v0 + 664);
    uint64_t v36 = *(void *)(v26 + 48);
    uint64_t v37 = *(void *)(v33 + 72);
    *(void *)(v0 + 904) = v37;
    v32(v35, v36 + v37 * v25, v34);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v35, 0, 1, v34);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v35, 1, v34) == 1)
    {
      uint64_t v212 = *(void **)(v0 + 824);
      goto LABEL_97;
    }
    uint64_t v274 = v23;
    uint64_t v38 = *(void *)(v0 + 848);
    uint64_t v39 = *(void *)(v0 + 840);
    uint64_t v40 = *(void *)(v0 + 824);
    (*(void (**)(void, void, void))(*(void *)(v0 + 680) + 32))(*(void *)(v0 + 704), *(void *)(v0 + 664), *(void *)(v0 + 672));
    uint64_t v41 = *(void *)(v40 + v39);
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v41 + 16));
    uint64_t v42 = *(void *)(v40 + v38);
    if (*(void *)(v42 + 16))
    {
      uint64_t v43 = *(void *)(v0 + 704);
      swift_bridgeObjectRetain();
      unint64_t v44 = sub_100955FC8(v43);
      uint64_t v45 = *(void *)(v0 + 568);
      uint64_t v46 = *(void *)(v0 + 520);
      uint64_t v47 = *(void *)(v0 + 512);
      if (v48)
      {
        sub_100522E9C(*(void *)(v42 + 56) + *(void *)(v46 + 72) * v44, *(void *)(v0 + 568), (uint64_t *)&unk_101684F90);
        uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56);
        v49(v45, 0, 1, v47);
      }
      else
      {
        uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56);
        v49(*(void *)(v0 + 568), 1, 1, v47);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 520) + 56);
      v49(*(void *)(v0 + 568), 1, 1, *(void *)(v0 + 512));
    }
    *(void *)(v0 + 912) = v49;
    uint64_t v50 = *(void *)(v0 + 568);
    uint64_t v51 = *(void *)(v0 + 520);
    uint64_t v52 = *(void *)(v0 + 512);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v41 + 16));
    uint64_t v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
    *(void *)(v0 + 920) = v53;
    *(void *)(v0 + 928) = (v51 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
    if (v53(v50, 1, v52) == 1)
    {
      sub_100522F00(*(void *)(v0 + 568), (uint64_t *)&unk_101674170);
      goto LABEL_34;
    }
    uint64_t v265 = v53;
    uint64_t v271 = v49;
    uint64_t v54 = *(void *)(v0 + 648);
    uint64_t v55 = *(void *)(v0 + 616);
    uint64_t v56 = *(void *)(v0 + 584);
    uint64_t v57 = *(void *)(v0 + 576);
    char v58 = *(void (**)(uint64_t))(*(void *)(v0 + 624) + 32);
    int v59 = *(_DWORD *)(*(void *)(v0 + 568) + *(int *)(*(void *)(v0 + 512) + 48));
    uint64_t v60 = *(int *)(v57 + 48);
    v58(v56);
    *(_DWORD *)(v56 + v60) = v59;
    int v61 = *(_DWORD *)(v56 + *(int *)(v57 + 48));
    ((void (*)(uint64_t, uint64_t, uint64_t))v58)(v54, v56, v55);
    if ((v61 & 2) == 0) {
      break;
    }
    uint64_t v71 = *(void *)(v0 + 624);
    uint64_t v72 = *(void *)(v0 + 616);
    uint64_t v73 = *(void *)(v0 + 608);
    if ((v61 & 4) != 0)
    {
      ((void (*)(void, void, void))v58)(*(void *)(v0 + 608), *(void *)(v0 + 648), *(void *)(v0 + 616));
      unint64_t v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56);
      v74(v73, 0, 1, v72);
    }
    else
    {
      (*(void (**)(void, void))(v71 + 8))(*(void *)(v0 + 648), *(void *)(v0 + 616));
      unint64_t v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56);
      v74(v73, 1, 1, v72);
    }
    uint64_t v23 = v274;
LABEL_70:
    uint64_t v147 = *(void *)(v0 + 624);
    uint64_t v148 = *(void *)(v0 + 616);
    uint64_t v149 = *(void *)(v0 + 608);
    unsigned int v150 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v147 + 48);
    if (v150(v149, 1, v148) != 1)
    {
      uint64_t v276 = v23;
      uint64_t v151 = *(void **)(v0 + 480);
      uint64_t v152 = *(void *)(v0 + 456);
      uint64_t v153 = *(void *)(v0 + 432);
      uint64_t v262 = *(void *)(v0 + 416);
      v249 = *(void (**)(uint64_t, uint64_t, uint64_t))(v147 + 32);
      uint64_t v251 = *(void *)(v0 + 424);
      v249(*(void *)(v0 + 656), v149, v148);
      void *v151 = 0;
      v151[1] = 0xE000000000000000;
      v151[2] = 0;
      UnknownStorage.init()();
      uint64_t v154 = (uint64_t)v151 + *(int *)(v152 + 28);
      v267 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v153 + 56);
      v267(v154, 1, 1, v251);
      *(void *)(v0 + 952) = UUID.uuid.getter();
      *(unsigned char *)(v0 + 960) = v155;
      *(unsigned char *)(v0 + 961) = v156;
      *(unsigned char *)(v0 + 962) = v157;
      *(unsigned char *)(v0 + 963) = v158;
      *(unsigned char *)(v0 + 964) = v159;
      *(unsigned char *)(v0 + 965) = v160;
      *(unsigned char *)(v0 + 966) = v161;
      *(unsigned char *)(v0 + 967) = v162;
      UUID.uuid.getter();
      uint64_t v163 = sub_100670608((unsigned char *)(v0 + 952), 16);
      uint64_t v254 = v164;
      uint64_t v256 = v163;
      sub_100522E9C(v154, v262, (uint64_t *)&unk_101674160);
      int v165 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v153 + 48))(v262, 1, v251);
      id v166 = *(_OWORD **)(v0 + 448);
      if (v165 == 1)
      {
        uint64_t v167 = *(void *)(v0 + 416);
        *id v166 = xmmword_101180360;
        UnknownStorage.init()();
        sub_100522F00(v167, (uint64_t *)&unk_101674160);
      }
      else
      {
        sub_10058EFC8(*(void *)(v0 + 416), (uint64_t)v166, type metadata accessor for CRLProto_Data);
      }
      uint64_t v168 = *(uint64_t **)(v0 + 480);
      uint64_t v259 = *(void *)(v0 + 472);
      uint64_t v263 = *(void *)(v0 + 872);
      uint64_t v169 = *(void *)(v0 + 448);
      uint64_t v252 = *(void *)(v0 + 424);
      sub_100510084(*(void *)v169, *(void *)(v169 + 8));
      *(void *)uint64_t v169 = v256;
      *(void *)(v169 + 8) = v254;
      sub_100522F00(v154, (uint64_t *)&unk_101674160);
      sub_10058EFC8(v169, v154, type metadata accessor for CRLProto_Data);
      v267(v154, 0, 1, v252);
      uint64_t v170 = URL.lastPathComponent.getter();
      uint64_t v172 = v171;
      swift_bridgeObjectRelease();
      uint64_t *v168 = v170;
      v168[1] = v172;
      URL._bridgeToObjectiveC()(v173);
      uint64_t v175 = v174;
      id v176 = [v174 crl_fileSize];

      v168[2] = (uint64_t)v176;
      sub_10058F030((uint64_t)v168, v259, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
      unint64_t v178 = *(void *)(v263 + 16);
      unint64_t v177 = *(void *)(v263 + 24);
      unint64_t v179 = v178 + 1;
      if (v178 >= v177 >> 1)
      {
        uint64_t v211 = sub_100F63284(v177 > 1, v178 + 1, 1, *(void *)(v0 + 872));
        unint64_t v179 = v178 + 1;
        uint64_t v272 = v211;
      }
      else
      {
        uint64_t v272 = *(void *)(v0 + 872);
      }
      uint64_t v260 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 776);
      uint64_t v180 = *(void *)(v0 + 688);
      uint64_t v255 = *(void *)(v0 + 672);
      uint64_t v257 = *(void *)(v0 + 704);
      uint64_t v268 = *(void *)(v0 + 656);
      uint64_t v181 = *(void *)(v0 + 624);
      uint64_t v182 = *(void *)(v0 + 616);
      uint64_t v183 = *(void *)(v0 + 600);
      uint64_t v185 = *(void *)(v0 + 464);
      uint64_t v184 = *(void *)(v0 + 472);
      *(void *)(v272 + 16) = v179;
      sub_10058EFC8(v184, v272+ ((*(unsigned __int8 *)(v185 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v185 + 80))+ *(void *)(v185 + 72) * v178, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
      v260(v180, v257, v255);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v181 + 16))(v183, v268, v182);
      v74(v183, 0, 1, v182);
      int v186 = v150(v183, 1, v182);
      uint64_t v187 = *(void *)(v0 + 864);
      if (v186 == 1)
      {
        uint64_t v188 = *(void *)(v0 + 688);
        sub_100522F00(*(void *)(v0 + 600), &qword_101672E90);
        swift_bridgeObjectRetain();
        unint64_t v189 = sub_100955FC8(v188);
        char v191 = v190;
        swift_bridgeObjectRelease();
        uint64_t v5 = *(void *)(v0 + 864);
        uint64_t v3 = v272;
        if (v191)
        {
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v0 + 352) = v5;
          uint64_t v193 = v0 + 864;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_10097DCBC();
            uint64_t v193 = v0 + 352;
          }
          uint64_t v194 = *(void *)(v0 + 624);
          uint64_t v195 = *(void *)(v0 + 616);
          uint64_t v196 = *(void *)(v0 + 592);
          (*(void (**)(unint64_t, void))(v0 + 792))(*(void *)(*(void *)v193 + 48) + *(void *)(v0 + 904) * v189, *(void *)(v0 + 672));
          uint64_t v5 = *(void *)(v0 + 352);
          v249(v196, *(void *)(v5 + 56) + *(void *)(v194 + 72) * v189, v195);
          sub_10058C504(v189, v5, (uint64_t (*)(void))&type metadata accessor for URL);
          swift_bridgeObjectRelease();
          uint64_t v197 = 0;
        }
        else
        {
          uint64_t v197 = 1;
        }
        id v203 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
        uint64_t v204 = *(void *)(v0 + 688);
        uint64_t v205 = *(void *)(v0 + 672);
        uint64_t v206 = *(void *)(v0 + 592);
        v74(v206, v197, 1, *(void *)(v0 + 616));
        v203(v204, v205);
        sub_100522F00(v206, &qword_101672E90);
      }
      else
      {
        char v198 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
        uint64_t v199 = *(void *)(v0 + 688);
        uint64_t v200 = *(void *)(v0 + 672);
        uint64_t v201 = *(void *)(v0 + 632);
        v249(v201, *(void *)(v0 + 600), *(void *)(v0 + 616));
        char v202 = swift_isUniquelyReferenced_nonNull_native();
        sub_100973C4C(v201, v199, v202);
        uint64_t v5 = v187;
        swift_bridgeObjectRelease();
        v198(v199, v200);
        uint64_t v3 = v272;
      }
      uint64_t v207 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
      uint64_t v208 = *(void *)(v0 + 704);
      uint64_t v209 = *(void *)(v0 + 672);
      uint64_t v210 = *(void *)(v0 + 480);
      (*(void (**)(void, void))(*(void *)(v0 + 624) + 8))(*(void *)(v0 + 656), *(void *)(v0 + 616));
      v207(v208, v209);
      sub_10058F81C(v210, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
      unint64_t v21 = *(void *)(v0 + 896);
      int64_t v22 = *(void *)(v0 + 888);
      uint64_t v23 = v276;
      goto LABEL_10;
    }
    (*(void (**)(void, void))(v0 + 792))(*(void *)(v0 + 704), *(void *)(v0 + 672));
    sub_100522F00(v149, &qword_101672E90);
    unint64_t v21 = *(void *)(v0 + 896);
    int64_t v22 = *(void *)(v0 + 888);
    *(void *)(v0 + 880) = v23;
    if (v21) {
      goto LABEL_11;
    }
  }
  (*(void (**)(void, void))(*(void *)(v0 + 624) + 8))(*(void *)(v0 + 648), *(void *)(v0 + 616));
  uint64_t v53 = v265;
  uint64_t v49 = v271;
LABEL_34:
  uint64_t v62 = *(void *)(v0 + 848);
  uint64_t v63 = *(void *)(v0 + 824);
  uint64_t v64 = *(void *)(v63 + *(void *)(v0 + 840));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v64 + 16));
  uint64_t v65 = *(void *)(v63 + v62);
  if (*(void *)(v65 + 16))
  {
    uint64_t v66 = *(void *)(v0 + 704);
    swift_bridgeObjectRetain();
    unint64_t v67 = sub_100955FC8(v66);
    uint64_t v68 = *(void *)(v0 + 560);
    uint64_t v69 = *(void *)(v0 + 512);
    if (v70)
    {
      sub_100522E9C(*(void *)(v65 + 56) + *(void *)(*(void *)(v0 + 520) + 72) * v67, *(void *)(v0 + 560), (uint64_t *)&unk_101684F90);
      v49(v68, 0, 1, v69);
    }
    else
    {
      v49(*(void *)(v0 + 560), 1, 1, *(void *)(v0 + 512));
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v49(*(void *)(v0 + 560), 1, 1, *(void *)(v0 + 512));
  }
  uint64_t v75 = *(void *)(v0 + 560);
  uint64_t v76 = *(void *)(v0 + 512);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v64 + 16));
  if (v53(v75, 1, v76) != 1)
  {
    uint64_t v77 = *(void *)(v0 + 640);
    uint64_t v78 = *(void *)(v0 + 616);
    uint64_t v79 = *(void *)(v0 + 560);
    uint64_t v80 = *(void *)(v0 + 536);
    uint64_t v81 = *(void *)(v0 + 528);
    uint64_t v82 = *(int *)(*(void *)(v0 + 512) + 48);
    uint64_t v83 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 624) + 32);
    v83(v80, v79, v78);
    int v84 = *(_DWORD *)(v79 + v82);
    v83(v81, v80, v78);
    v83(v77, v81, v78);
    Swift::Bool v85 = URL.checkResourceIsReachable()();
    if (v86)
    {
      uint64_t v88 = *(void *)(v0 + 496);
      uint64_t v87 = *(void *)(v0 + 504);
      uint64_t v89 = *(void *)(v0 + 488);
      swift_errorRetain();
      static CocoaError.fileNoSuchFile.getter();
      sub_10058EB40((unint64_t *)&unk_101674190, (void (*)(uint64_t))&type metadata accessor for CocoaError.Code);
      char v90 = static _ErrorCodeProtocol.~= infix(_:_:)();
      swift_errorRelease();
      uint64_t v91 = *(void (**)(uint64_t, uint64_t))(v88 + 8);
      v91(v87, v89);
      if ((v90 & 1) == 0)
      {
        uint64_t v92 = *(void *)(v0 + 504);
        uint64_t v93 = *(void *)(v0 + 488);
        swift_errorRetain();
        static CocoaError.fileReadNoSuchFile.getter();
        char v94 = static _ErrorCodeProtocol.~= infix(_:_:)();
        swift_errorRelease();
        v91(v92, v93);
        if ((v94 & 1) == 0)
        {
          swift_willThrow();
          if (qword_10166FB70 != -1) {
            swift_once();
          }
          swift_beginAccess();
          uint64_t v132 = (void *)static OS_os_log.boardStore;
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_10117DF40;
          id v134 = v132;
          uint64_t v135 = URL.path.getter();
          uint64_t v137 = v136;
          *(void *)(inited + 56) = &type metadata for String;
          unint64_t v138 = sub_100528BE4();
          *(void *)(inited + 64) = v138;
          *(void *)(inited + 32) = v135;
          *(void *)(inited + 40) = v137;
          swift_getErrorValue();
          uint64_t v139 = Error.publicDescription.getter(*(void *)(v0 + 320), *(void *)(v0 + 328));
          *(void *)(inited + 96) = &type metadata for String;
          *(void *)(inited + 104) = v138;
          *(void *)(inited + 72) = v139;
          *(void *)(inited + 80) = v140;
          swift_getErrorValue();
          uint64_t v141 = Error.fullDescription.getter(*(void *)(v0 + 296));
          *(void *)(inited + 136) = &type metadata for String;
          *(void *)(inited + 144) = v138;
          *(void *)(inited + 112) = v141;
          *(void *)(inited + 120) = v142;
          uint64_t v143 = static os_log_type_t.error.getter();
          sub_100BAC898((uint64_t)v134, (uint64_t)&_mh_execute_header, v143, (uint64_t)"Failed to check if file exists. filePath=\"%@\", error=%{public}@ <%@>", 68, 2, inited);
          swift_errorRelease();
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();

          goto LABEL_68;
        }
      }
      swift_errorRelease();
      Swift::Bool v248 = 0;
      int v95 = 2;
      if (v84) {
        goto LABEL_47;
      }
    }
    else
    {
      Swift::Bool v248 = v85;
      if (v85) {
        int v95 = 6;
      }
      else {
        int v95 = 2;
      }
      if (v84) {
LABEL_47:
      }
        v95 |= 1u;
    }
    int v258 = v95;
    uint64_t v266 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 920);
    int v261 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 912);
    uint64_t v96 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 776);
    uint64_t v97 = *(void *)(v0 + 704);
    uint64_t v98 = *(void *)(v0 + 696);
    uint64_t v99 = *(void *)(v0 + 672);
    uint64_t v253 = *(void *)(v0 + 640);
    uint64_t v100 = *(void *)(v0 + 624);
    uint64_t v250 = *(void *)(v0 + 616);
    uint64_t v101 = *(void *)(v0 + 552);
    uint64_t v102 = *(void *)(v0 + 512);
    uint64_t v275 = *(os_unfair_lock_s **)(*(void *)(*(void *)(v0 + 824) + *(void *)(v0 + 840)) + 16);
    os_unfair_lock_lock(v275);
    v96(v98, v97, v99);
    uint64_t v103 = *(int *)(v102 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v100 + 16))(v101, v253, v250);
    *(_DWORD *)(v101 + v103) = v258;
    v261(v101, 0, 1, v102);
    swift_beginAccess();
    int v104 = v266(v101, 1, v102);
    uint64_t v105 = *(void *)(v0 + 848);
    uint64_t v106 = *(void *)(v0 + 824);
    if (v104 == 1)
    {
      uint64_t v107 = *(void *)(v0 + 696);
      sub_100522F00(*(void *)(v0 + 552), (uint64_t *)&unk_101674170);
      swift_bridgeObjectRetain();
      unint64_t v108 = sub_100955FC8(v107);
      LOBYTE(v107) = v109;
      swift_bridgeObjectRelease();
      if (v107)
      {
        uint64_t v110 = *(void *)(v0 + 848);
        uint64_t v111 = *(void *)(v0 + 824);
        char v112 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v113 = *(void *)(v111 + v110);
        *(void *)(v0 + 368) = v113;
        *(void *)(v111 + v110) = 0x8000000000000000;
        if ((v112 & 1) == 0)
        {
          sub_10097C6D8();
          uint64_t v113 = *(void *)(v0 + 368);
        }
        uint64_t v114 = *(void *)(v0 + 848);
        uint64_t v115 = *(void *)(v0 + 824);
        uint64_t v116 = *(void *)(v0 + 544);
        uint64_t v117 = *(void *)(v0 + 520);
        (*(void (**)(unint64_t, void))(v0 + 792))(*(void *)(v113 + 48) + *(void *)(v0 + 904) * v108, *(void *)(v0 + 672));
        uint64_t v118 = *(void *)(v0 + 368);
        sub_10051B3EC(*(void *)(v118 + 56) + *(void *)(v117 + 72) * v108, v116, (uint64_t *)&unk_101684F90);
        sub_100588230(v108, v118);
        *(void *)(v115 + v114) = v118;
        swift_bridgeObjectRelease();
        uint64_t v119 = 0;
      }
      else
      {
        uint64_t v119 = 1;
      }
      uint64_t v125 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
      uint64_t v126 = *(void *)(v0 + 696);
      uint64_t v127 = *(void *)(v0 + 672);
      uint64_t v128 = *(void *)(v0 + 544);
      (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0 + 912))(v128, v119, 1, *(void *)(v0 + 512));
      v125(v126, v127);
      sub_100522F00(v128, (uint64_t *)&unk_101674170);
    }
    else
    {
      uint64_t v120 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
      uint64_t v121 = *(void *)(v0 + 696);
      uint64_t v122 = *(void *)(v0 + 672);
      uint64_t v123 = *(void *)(v0 + 528);
      sub_10051B3EC(*(void *)(v0 + 552), v123, (uint64_t *)&unk_101684F90);
      char v124 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v277 = *(void *)(v106 + v105);
      *(void *)(v106 + v105) = 0x8000000000000000;
      sub_10097258C(v123, v121, v124);
      *(void *)(v106 + v105) = v277;
      swift_bridgeObjectRelease();
      v120(v121, v122);
    }
    swift_endAccess();
    os_unfair_lock_unlock(v275);
    if (v248)
    {
      uint64_t v129 = *(void *)(v0 + 624);
      uint64_t v130 = *(void *)(v0 + 616);
      uint64_t v131 = *(void *)(v0 + 608);
      (*(void (**)(uint64_t, void, uint64_t))(v129 + 32))(v131, *(void *)(v0 + 640), v130);
      unint64_t v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v129 + 56);
      v74(v131, 0, 1, v130);
LABEL_69:
      uint64_t v23 = 0;
      goto LABEL_70;
    }
LABEL_68:
    uint64_t v144 = *(void *)(v0 + 624);
    uint64_t v145 = *(void *)(v0 + 616);
    uint64_t v146 = *(void *)(v0 + 608);
    (*(void (**)(void, uint64_t))(v144 + 8))(*(void *)(v0 + 640), v145);
    unint64_t v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v144 + 56);
    v74(v146, 1, 1, v145);
    goto LABEL_69;
  }
  sub_100522F00(*(void *)(v0 + 560), (uint64_t *)&unk_101674170);
  uint64_t v213 = (void *)swift_task_alloc();
  *(void *)(v0 + 936) = v213;
  *uint64_t v213 = v0;
  v213[1] = sub_1005828A8;
  uint64_t v214 = *(void *)(v0 + 704);
  return sub_100EA75F0(v214);
}

uint64_t sub_1005828A8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 944) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1005829D4, 0, 0);
}

uint64_t sub_1005829D4()
{
  uint64_t v1 = *(void *)(v0 + 944);
  if (v1)
  {
    uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension);
    unint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8);
    swift_bridgeObjectRetain();
    UUID.uuidString.getter();
    if (v2)
    {
      uint64_t v4 = HIBYTE(v2) & 0xF;
      if ((v2 & 0x2000000000000000) == 0) {
        uint64_t v4 = v3 & 0xFFFFFFFFFFFFLL;
      }
      if (v4)
      {
        NSString v5 = String._bridgeToObjectiveC()();
        NSString v6 = String._bridgeToObjectiveC()();
        id v7 = [v5 stringByAppendingPathExtension:v6];

        if (v7)
        {
          swift_bridgeObjectRelease();
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
      }
    }
    int v8 = 1;
  }
  else
  {
    UUID.uuidString.getter();
    int v8 = 0;
  }
  uint64_t v9 = *(void *)(v0 + 704);
  id v10 = *(char **)(v0 + 640);
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  sub_100EA5F9C(v9, v10, v8);
  swift_release();
  swift_bridgeObjectRelease();
  while (2)
  {
    Swift::Bool v11 = URL.checkResourceIsReachable()();
    if (!v12)
    {
      Swift::Bool v259 = v11;
      if (v11) {
        int v21 = 6;
      }
      else {
        int v21 = 2;
      }
      if ((v8 & 1) == 0)
      {
LABEL_16:
        int v248 = v21;
        uint64_t v253 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 920);
        uint64_t v250 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 912);
        int64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 776);
        uint64_t v23 = *(void *)(v0 + 704);
        uint64_t v24 = *(void *)(v0 + 696);
        uint64_t v25 = *(void *)(v0 + 672);
        uint64_t v246 = *(void *)(v0 + 640);
        uint64_t v26 = *(void *)(v0 + 624);
        uint64_t v245 = *(void *)(v0 + 616);
        uint64_t v27 = *(void *)(v0 + 552);
        uint64_t v28 = *(void *)(v0 + 512);
        uint64_t v255 = *(os_unfair_lock_s **)(*(void *)(*(void *)(v0 + 824) + *(void *)(v0 + 840)) + 16);
        os_unfair_lock_lock(v255);
        v22(v24, v23, v25);
        uint64_t v29 = *(int *)(v28 + 48);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v27, v246, v245);
        *(_DWORD *)(v27 + v29) = v248;
        v250(v27, 0, 1, v28);
        swift_beginAccess();
        int v30 = v253(v27, 1, v28);
        uint64_t v31 = *(void *)(v0 + 848);
        uint64_t v32 = *(void *)(v0 + 824);
        if (v30 == 1)
        {
          uint64_t v33 = *(void *)(v0 + 696);
          sub_100522F00(*(void *)(v0 + 552), (uint64_t *)&unk_101674170);
          swift_bridgeObjectRetain();
          unint64_t v34 = sub_100955FC8(v33);
          LOBYTE(v33) = v35;
          swift_bridgeObjectRelease();
          if (v33)
          {
            uint64_t v36 = *(void *)(v0 + 848);
            uint64_t v37 = *(void *)(v0 + 824);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v39 = *(void *)(v37 + v36);
            *(void *)(v0 + 368) = v39;
            *(void *)(v37 + v36) = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_10097C6D8();
              uint64_t v39 = *(void *)(v0 + 368);
            }
            uint64_t v40 = *(void *)(v0 + 848);
            uint64_t v41 = *(void *)(v0 + 824);
            uint64_t v42 = *(void *)(v0 + 544);
            uint64_t v43 = *(void *)(v0 + 520);
            (*(void (**)(unint64_t, void))(v0 + 792))(*(void *)(v39 + 48) + *(void *)(v0 + 904) * v34, *(void *)(v0 + 672));
            uint64_t v44 = *(void *)(v0 + 368);
            sub_10051B3EC(*(void *)(v44 + 56) + *(void *)(v43 + 72) * v34, v42, (uint64_t *)&unk_101684F90);
            sub_100588230(v34, v44);
            *(void *)(v41 + v40) = v44;
            swift_bridgeObjectRelease();
            uint64_t v45 = 0;
          }
          else
          {
            uint64_t v45 = 1;
          }
          uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
          uint64_t v52 = *(void *)(v0 + 696);
          uint64_t v53 = *(void *)(v0 + 672);
          uint64_t v54 = *(void *)(v0 + 544);
          (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0 + 912))(v54, v45, 1, *(void *)(v0 + 512));
          v51(v52, v53);
          sub_100522F00(v54, (uint64_t *)&unk_101674170);
        }
        else
        {
          uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
          uint64_t v47 = *(void *)(v0 + 696);
          uint64_t v48 = *(void *)(v0 + 672);
          uint64_t v49 = *(void *)(v0 + 528);
          sub_10051B3EC(*(void *)(v0 + 552), v49, (uint64_t *)&unk_101684F90);
          char v50 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v264 = *(void *)(v32 + v31);
          *(void *)(v32 + v31) = 0x8000000000000000;
          sub_10097258C(v49, v47, v50);
          *(void *)(v32 + v31) = v264;
          swift_bridgeObjectRelease();
          v46(v47, v48);
        }
        swift_endAccess();
        os_unfair_lock_unlock(v255);
        if (v259)
        {
          uint64_t v55 = *(void *)(v0 + 624);
          uint64_t v56 = *(void *)(v0 + 616);
          uint64_t v57 = *(void *)(v0 + 608);
          (*(void (**)(uint64_t, void, uint64_t))(v55 + 32))(v57, *(void *)(v0 + 640), v56);
          char v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56);
          v58(v57, 0, 1, v56);
          goto LABEL_36;
        }
        goto LABEL_34;
      }
LABEL_15:
      v21 |= 1u;
      goto LABEL_16;
    }
    uint64_t v13 = *(void *)(v0 + 496);
    uint64_t v14 = *(void *)(v0 + 504);
    uint64_t v15 = *(void *)(v0 + 488);
    swift_errorRetain();
    static CocoaError.fileNoSuchFile.getter();
    sub_10058EB40((unint64_t *)&unk_101674190, (void (*)(uint64_t))&type metadata accessor for CocoaError.Code);
    char v16 = static _ErrorCodeProtocol.~= infix(_:_:)();
    swift_errorRelease();
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v17(v14, v15);
    if ((v16 & 1) != 0
      || (uint64_t v18 = *(void *)(v0 + 504),
          uint64_t v19 = *(void *)(v0 + 488),
          swift_errorRetain(),
          static CocoaError.fileReadNoSuchFile.getter(),
          char v20 = static _ErrorCodeProtocol.~= infix(_:_:)(),
          swift_errorRelease(),
          v17(v18, v19),
          (v20 & 1) != 0))
    {
      swift_errorRelease();
      Swift::Bool v259 = 0;
      int v21 = 2;
      if ((v8 & 1) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
    swift_willThrow();
    if (qword_10166FB70 != -1) {
      swift_once();
    }
    swift_beginAccess();
    int v59 = (void *)static OS_os_log.boardStore;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117DF40;
    id v61 = v59;
    uint64_t v62 = URL.path.getter();
    uint64_t v64 = v63;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v65 = sub_100528BE4();
    *(void *)(inited + 64) = v65;
    *(void *)(inited + 32) = v62;
    *(void *)(inited + 40) = v64;
    swift_getErrorValue();
    uint64_t v66 = Error.publicDescription.getter(*(void *)(v0 + 320), *(void *)(v0 + 328));
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v65;
    *(void *)(inited + 72) = v66;
    *(void *)(inited + 80) = v67;
    swift_getErrorValue();
    uint64_t v68 = Error.fullDescription.getter(*(void *)(v0 + 296));
    *(void *)(inited + 136) = &type metadata for String;
    *(void *)(inited + 144) = v65;
    *(void *)(inited + 112) = v68;
    *(void *)(inited + 120) = v69;
    uint64_t v70 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v61, (uint64_t)&_mh_execute_header, v70, (uint64_t)"Failed to check if file exists. filePath=\"%@\", error=%{public}@ <%@>", 68, 2, inited);
    swift_errorRelease();
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

LABEL_34:
    uint64_t v71 = *(void *)(v0 + 624);
    uint64_t v72 = *(void *)(v0 + 616);
    uint64_t v73 = *(void *)(v0 + 608);
    (*(void (**)(void, uint64_t))(v71 + 8))(*(void *)(v0 + 640), v72);
    char v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56);
    v58(v73, 1, 1, v72);
    while (1)
    {
LABEL_36:
      uint64_t v74 = *(void *)(v0 + 624);
      uint64_t v75 = *(void *)(v0 + 616);
      uint64_t v76 = *(void *)(v0 + 608);
      uint64_t v77 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v74 + 48);
      if (v77(v76, 1, v75) == 1)
      {
        (*(void (**)(void, void))(v0 + 792))(*(void *)(v0 + 704), *(void *)(v0 + 672));
        sub_100522F00(v76, &qword_101672E90);
        unint64_t v78 = *(void *)(v0 + 896);
        int64_t v79 = *(void *)(v0 + 888);
        *(void *)(v0 + 880) = 0;
        if (v78) {
          goto LABEL_38;
        }
      }
      else
      {
        uint64_t v254 = v77;
        uint64_t v256 = v58;
        uint64_t v83 = *(void **)(v0 + 480);
        uint64_t v84 = *(void *)(v0 + 456);
        uint64_t v86 = *(void *)(v0 + 424);
        uint64_t v85 = *(void *)(v0 + 432);
        uint64_t v87 = *(void *)(v0 + 416);
        uint64_t v247 = *(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 32);
        v247(*(void *)(v0 + 656), v76, v75);
        *uint64_t v83 = 0;
        v83[1] = 0xE000000000000000;
        v83[2] = 0;
        UnknownStorage.init()();
        uint64_t v88 = (uint64_t)v83 + *(int *)(v84 + 28);
        uint64_t v260 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v85 + 56);
        v260(v88, 1, 1, v86);
        *(void *)(v0 + 952) = UUID.uuid.getter();
        *(unsigned char *)(v0 + 960) = v89;
        *(unsigned char *)(v0 + 961) = v90;
        *(unsigned char *)(v0 + 962) = v91;
        *(unsigned char *)(v0 + 963) = v92;
        *(unsigned char *)(v0 + 964) = v93;
        *(unsigned char *)(v0 + 965) = v94;
        *(unsigned char *)(v0 + 966) = v95;
        *(unsigned char *)(v0 + 967) = v96;
        UUID.uuid.getter();
        uint64_t v97 = sub_100670608((unsigned char *)(v0 + 952), 16);
        uint64_t v99 = v98;
        sub_100522E9C(v88, v87, (uint64_t *)&unk_101674160);
        int v100 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(v87, 1, v86);
        uint64_t v101 = *(_OWORD **)(v0 + 448);
        uint64_t v102 = v97;
        if (v100 == 1)
        {
          uint64_t v103 = *(void *)(v0 + 416);
          *uint64_t v101 = xmmword_101180360;
          UnknownStorage.init()();
          sub_100522F00(v103, (uint64_t *)&unk_101674160);
        }
        else
        {
          sub_10058EFC8(*(void *)(v0 + 416), (uint64_t)v101, type metadata accessor for CRLProto_Data);
        }
        uint64_t v104 = *(void *)(v0 + 872);
        uint64_t v105 = *(uint64_t **)(v0 + 480);
        uint64_t v249 = *(void *)(v0 + 472);
        uint64_t v106 = *(void *)(v0 + 448);
        uint64_t v107 = *(void *)(v0 + 424);
        sub_100510084(*(void *)v106, *(void *)(v106 + 8));
        *(void *)uint64_t v106 = v102;
        *(void *)(v106 + 8) = v99;
        sub_100522F00(v88, (uint64_t *)&unk_101674160);
        sub_10058EFC8(v106, v88, type metadata accessor for CRLProto_Data);
        v260(v88, 0, 1, v107);
        uint64_t v108 = URL.lastPathComponent.getter();
        uint64_t v110 = v109;
        swift_bridgeObjectRelease();
        *uint64_t v105 = v108;
        v105[1] = v110;
        URL._bridgeToObjectiveC()(v111);
        uint64_t v113 = v112;
        id v114 = [v112 crl_fileSize];

        v105[2] = (uint64_t)v114;
        sub_10058F030((uint64_t)v105, v249, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
        unint64_t v116 = *(void *)(v104 + 16);
        unint64_t v115 = *(void *)(v104 + 24);
        unint64_t v117 = v116 + 1;
        unint64_t v261 = *(void *)(v0 + 872);
        if (v116 >= v115 >> 1)
        {
          uint64_t v189 = sub_100F63284(v115 > 1, v116 + 1, 1, v261);
          unint64_t v117 = v116 + 1;
          unint64_t v261 = v189;
        }
        uint64_t v118 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 776);
        uint64_t v119 = *(void *)(v0 + 704);
        uint64_t v120 = *(void *)(v0 + 688);
        uint64_t v121 = *(void *)(v0 + 672);
        uint64_t v251 = *(void *)(v0 + 656);
        uint64_t v122 = *(void *)(v0 + 624);
        uint64_t v123 = *(void *)(v0 + 616);
        uint64_t v124 = *(void *)(v0 + 600);
        uint64_t v126 = *(void *)(v0 + 464);
        uint64_t v125 = *(void *)(v0 + 472);
        *(void *)(v261 + 16) = v117;
        sub_10058EFC8(v125, v261+ ((*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80))+ *(void *)(v126 + 72) * v116, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
        v118(v120, v119, v121);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v122 + 16))(v124, v251, v123);
        v256(v124, 0, 1, v123);
        int v127 = v254(v124, 1, v123);
        uint64_t v128 = *(void *)(v0 + 864);
        if (v127 == 1)
        {
          uint64_t v129 = *(void *)(v0 + 688);
          sub_100522F00(*(void *)(v0 + 600), &qword_101672E90);
          swift_bridgeObjectRetain();
          unint64_t v130 = sub_100955FC8(v129);
          LOBYTE(v129) = v131;
          swift_bridgeObjectRelease();
          uint64_t v128 = *(void *)(v0 + 864);
          if (v129)
          {
            int v132 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v0 + 352) = v128;
            uint64_t v133 = v0 + 864;
            if (!v132)
            {
              sub_10097DCBC();
              uint64_t v133 = v0 + 352;
            }
            uint64_t v134 = *(void *)(v0 + 624);
            uint64_t v135 = *(void *)(v0 + 616);
            uint64_t v136 = *(void *)(v0 + 592);
            (*(void (**)(unint64_t, void))(v0 + 792))(*(void *)(*(void *)v133 + 48) + *(void *)(v0 + 904) * v130, *(void *)(v0 + 672));
            uint64_t v128 = *(void *)(v0 + 352);
            v247(v136, *(void *)(v128 + 56) + *(void *)(v134 + 72) * v130, v135);
            sub_10058C504(v130, v128, (uint64_t (*)(void))&type metadata accessor for URL);
            swift_bridgeObjectRelease();
            uint64_t v137 = 0;
          }
          else
          {
            uint64_t v137 = 1;
          }
          uint64_t v143 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
          uint64_t v144 = *(void *)(v0 + 688);
          uint64_t v145 = *(void *)(v0 + 672);
          uint64_t v146 = *(void *)(v0 + 592);
          v256(v146, v137, 1, *(void *)(v0 + 616));
          v143(v144, v145);
          sub_100522F00(v146, &qword_101672E90);
        }
        else
        {
          unint64_t v138 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
          uint64_t v139 = *(void *)(v0 + 688);
          uint64_t v140 = *(void *)(v0 + 672);
          uint64_t v141 = *(void *)(v0 + 632);
          v247(v141, *(void *)(v0 + 600), *(void *)(v0 + 616));
          char v142 = swift_isUniquelyReferenced_nonNull_native();
          sub_100973C4C(v141, v139, v142);
          swift_bridgeObjectRelease();
          v138(v139, v140);
        }
        uint64_t v147 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
        uint64_t v148 = *(void *)(v0 + 704);
        uint64_t v149 = *(void *)(v0 + 672);
        uint64_t v150 = *(void *)(v0 + 480);
        (*(void (**)(void, void))(*(void *)(v0 + 624) + 8))(*(void *)(v0 + 656), *(void *)(v0 + 616));
        v147(v148, v149);
        sub_10058F81C(v150, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
        unint64_t v78 = *(void *)(v0 + 896);
        int64_t v79 = *(void *)(v0 + 888);
        *(void *)(v0 + 872) = v261;
        *(void *)(v0 + 864) = v128;
        *(void *)(v0 + 880) = 0;
        if (v78)
        {
LABEL_38:
          uint64_t v80 = (v78 - 1) & v78;
          unint64_t v81 = __clz(__rbit64(v78)) | (v79 << 6);
          uint64_t v82 = *(void *)(v0 + 832);
          goto LABEL_64;
        }
      }
      if (__OFADD__(v79++, 1))
      {
        __break(1u);
        goto LABEL_104;
      }
      int64_t v152 = (unint64_t)((1 << *(unsigned char *)(v0 + 968)) + 63) >> 6;
      uint64_t v82 = *(void *)(v0 + 832);
      if (v79 >= v152) {
        goto LABEL_90;
      }
      uint64_t v153 = v82 + 56;
      unint64_t v154 = *(void *)(v82 + 56 + 8 * v79);
      if (!v154)
      {
        int64_t v155 = v79 + 1;
        if (v79 + 1 >= v152) {
          goto LABEL_90;
        }
        unint64_t v154 = *(void *)(v153 + 8 * v155);
        if (!v154)
        {
          int64_t v155 = v79 + 2;
          if (v79 + 2 >= v152) {
            goto LABEL_90;
          }
          unint64_t v154 = *(void *)(v153 + 8 * v155);
          if (!v154)
          {
            int64_t v155 = v79 + 3;
            if (v79 + 3 >= v152)
            {
LABEL_90:
              uint64_t v208 = *(void **)(v0 + 824);
              (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 680) + 56))(*(void *)(v0 + 664), 1, 1, *(void *)(v0 + 672));
              goto LABEL_91;
            }
            unint64_t v154 = *(void *)(v153 + 8 * v155);
            if (!v154)
            {
              while (1)
              {
                int64_t v79 = v155 + 1;
                if (__OFADD__(v155, 1)) {
                  break;
                }
                if (v79 >= v152) {
                  goto LABEL_90;
                }
                unint64_t v154 = *(void *)(v153 + 8 * v79);
                ++v155;
                if (v154) {
                  goto LABEL_63;
                }
              }
LABEL_104:
              __break(1u);
            }
          }
        }
        int64_t v79 = v155;
      }
LABEL_63:
      uint64_t v80 = (v154 - 1) & v154;
      unint64_t v81 = __clz(__rbit64(v154)) + (v79 << 6);
LABEL_64:
      *(void *)(v0 + 896) = v80;
      *(void *)(v0 + 888) = v79;
      char v156 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 776);
      uint64_t v157 = *(void *)(v0 + 680);
      uint64_t v158 = *(void *)(v0 + 672);
      uint64_t v159 = *(void *)(v0 + 664);
      uint64_t v160 = *(void *)(v82 + 48);
      uint64_t v161 = *(void *)(v157 + 72);
      *(void *)(v0 + 904) = v161;
      v156(v159, v160 + v161 * v81, v158);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v157 + 56))(v159, 0, 1, v158);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v157 + 48))(v159, 1, v158) == 1)
      {
        uint64_t v208 = *(void **)(v0 + 824);
LABEL_91:
        swift_release();

        uint64_t v258 = *(void *)(v0 + 872);
        uint64_t v263 = *(void *)(v0 + 864);
        uint64_t v209 = *(void *)(v0 + 424);
        uint64_t v210 = *(void *)(v0 + 432);
        uint64_t v212 = *(void **)(v0 + 400);
        uint64_t v211 = *(void *)(v0 + 408);
        uint64_t v214 = *(void *)(v0 + 384);
        uint64_t v213 = *(void *)(v0 + 392);
        unint64_t v215 = *(void *)(v214 + 64);
        uint64_t v216 = (*(uint64_t (**)(void, void))(v0 + 760))(*(void *)(v0 + 752), *(void *)(v0 + 744));
        uint64_t v218 = v217;
        uint64_t ObjectType = swift_getObjectType();
        *(void *)(v0 + 360) = v216;
        unint64_t v220 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v218 + 8) + 8) + 8))(ObjectType);
        swift_unknownObjectRelease();
        if (v220 <= v215) {
          unint64_t v221 = v215;
        }
        else {
          unint64_t v221 = v220;
        }
        uint64_t v252 = v214;
        *(void *)(v214 + 64) = v221;
        *uint64_t v212 = _swiftEmptyArrayStorage;
        v212[1] = _swiftEmptyArrayStorage;
        UnknownStorage.init()();
        uint64_t v222 = (uint64_t)v212 + *(int *)(v213 + 28);
        unint64_t v244 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v210 + 56);
        v244(v222, 1, 1, v209);
        uint64_t v223 = UUID.crl_data()();
        uint64_t v242 = v224;
        uint64_t v243 = v223;
        sub_100522E9C(v222, v211, (uint64_t *)&unk_101674160);
        int v225 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v210 + 48))(v211, 1, v209);
        unint64_t v226 = *(_OWORD **)(v0 + 440);
        if (v225 == 1)
        {
          uint64_t v227 = *(void *)(v0 + 408);
          *unint64_t v226 = xmmword_101180360;
          UnknownStorage.init()();
          sub_100522F00(v227, (uint64_t *)&unk_101674160);
        }
        else
        {
          sub_10058EFC8(*(void *)(v0 + 408), (uint64_t)v226, type metadata accessor for CRLProto_Data);
        }
        uint64_t v241 = *(void (**)(uint64_t, uint64_t, double))(v0 + 792);
        uint64_t v228 = *(void *)(v0 + 728);
        uint64_t v229 = *(void *)(v0 + 672);
        uint64_t v230 = *(void *)(v0 + 440);
        uint64_t v231 = *(void *)(v0 + 424);
        char v232 = *(void **)(v0 + 400);
        uint64_t v233 = *(void *)(v0 + 376);
        sub_100510084(*(void *)v230, *(void *)(v230 + 8));
        *(void *)uint64_t v230 = v243;
        *(void *)(v230 + 8) = v242;
        sub_100522F00(v222, (uint64_t *)&unk_101674160);
        sub_10058EFC8(v230, v222, type metadata accessor for CRLProto_Data);
        v244(v222, 0, 1, v231);
        double v234 = sub_100FD217C(*(void *)(v252 + 64));
        uint64_t v236 = v235;
        v241(v228, v229, v234);
        swift_bridgeObjectRelease();
        *char v232 = v236;
        swift_bridgeObjectRelease();
        v212[1] = v258;
        sub_10058F030((uint64_t)v232, v233, type metadata accessor for CRLProto_ObjectMetadata);
        *(void *)(v233 + *(int *)(type metadata accessor for CRLArchivedObjectMetadataRepresentation() + 20)) = v263;
        sub_10058F81C((uint64_t)v232, type metadata accessor for CRLProto_ObjectMetadata);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v237 = *(uint64_t (**)(void))(v0 + 8);
        return v237();
      }
      uint64_t v162 = *(void *)(v0 + 848);
      uint64_t v163 = *(void *)(v0 + 840);
      uint64_t v164 = *(void *)(v0 + 824);
      (*(void (**)(void, void, void))(*(void *)(v0 + 680) + 32))(*(void *)(v0 + 704), *(void *)(v0 + 664), *(void *)(v0 + 672));
      uint64_t v165 = *(void *)(v164 + v163);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v165 + 16));
      uint64_t v166 = *(void *)(v164 + v162);
      if (*(void *)(v166 + 16))
      {
        uint64_t v167 = *(void *)(v0 + 704);
        swift_bridgeObjectRetain();
        unint64_t v168 = sub_100955FC8(v167);
        uint64_t v169 = *(void *)(v0 + 568);
        uint64_t v170 = *(void *)(v0 + 520);
        uint64_t v171 = *(void *)(v0 + 512);
        if (v172)
        {
          sub_100522E9C(*(void *)(v166 + 56) + *(void *)(v170 + 72) * v168, *(void *)(v0 + 568), (uint64_t *)&unk_101684F90);
          id v173 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v170 + 56);
          v173(v169, 0, 1, v171);
        }
        else
        {
          id v173 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v170 + 56);
          v173(*(void *)(v0 + 568), 1, 1, v171);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        id v173 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 520) + 56);
        v173(*(void *)(v0 + 568), 1, 1, *(void *)(v0 + 512));
      }
      *(void *)(v0 + 912) = v173;
      uint64_t v174 = *(void *)(v0 + 568);
      uint64_t v175 = *(void *)(v0 + 520);
      uint64_t v176 = *(void *)(v0 + 512);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v165 + 16));
      unint64_t v177 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v175 + 48);
      *(void *)(v0 + 920) = v177;
      *(void *)(v0 + 928) = (v175 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      if (v177(v174, 1, v176) == 1)
      {
        sub_100522F00(*(void *)(v0 + 568), (uint64_t *)&unk_101674170);
        goto LABEL_81;
      }
      unint64_t v178 = v173;
      uint64_t v257 = v177;
      uint64_t v262 = *(void *)(v0 + 648);
      uint64_t v179 = *(void *)(v0 + 616);
      uint64_t v180 = *(void *)(v0 + 584);
      uint64_t v181 = *(void *)(v0 + 576);
      uint64_t v182 = *(void (**)(uint64_t))(*(void *)(v0 + 624) + 32);
      int v183 = *(_DWORD *)(*(void *)(v0 + 568) + *(int *)(*(void *)(v0 + 512) + 48));
      uint64_t v184 = *(int *)(v181 + 48);
      v182(v180);
      *(_DWORD *)(v180 + v184) = v183;
      int v185 = *(_DWORD *)(v180 + *(int *)(v181 + 48));
      ((void (*)(uint64_t, uint64_t, uint64_t))v182)(v262, v180, v179);
      if ((v185 & 2) == 0) {
        break;
      }
      uint64_t v186 = *(void *)(v0 + 624);
      uint64_t v187 = *(void *)(v0 + 616);
      uint64_t v188 = *(void *)(v0 + 608);
      if ((v185 & 4) != 0)
      {
        ((void (*)(void, void, void))v182)(*(void *)(v0 + 608), *(void *)(v0 + 648), *(void *)(v0 + 616));
        char v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v186 + 56);
        v58(v188, 0, 1, v187);
      }
      else
      {
        (*(void (**)(void, void))(v186 + 8))(*(void *)(v0 + 648), *(void *)(v0 + 616));
        char v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v186 + 56);
        v58(v188, 1, 1, v187);
      }
    }
    (*(void (**)(void, void))(*(void *)(v0 + 624) + 8))(*(void *)(v0 + 648), *(void *)(v0 + 616));
    id v173 = v178;
    unint64_t v177 = v257;
LABEL_81:
    uint64_t v190 = *(void *)(v0 + 848);
    uint64_t v191 = *(void *)(v0 + 824);
    uint64_t v192 = *(void *)(v191 + *(void *)(v0 + 840));
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v192 + 16));
    uint64_t v193 = *(void *)(v191 + v190);
    if (*(void *)(v193 + 16))
    {
      uint64_t v194 = *(void *)(v0 + 704);
      swift_bridgeObjectRetain();
      unint64_t v195 = sub_100955FC8(v194);
      uint64_t v196 = *(void *)(v0 + 560);
      uint64_t v197 = *(void *)(v0 + 512);
      if (v198)
      {
        sub_100522E9C(*(void *)(v193 + 56) + *(void *)(*(void *)(v0 + 520) + 72) * v195, *(void *)(v0 + 560), (uint64_t *)&unk_101684F90);
        v173(v196, 0, 1, v197);
      }
      else
      {
        v173(*(void *)(v0 + 560), 1, 1, *(void *)(v0 + 512));
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v173(*(void *)(v0 + 560), 1, 1, *(void *)(v0 + 512));
    }
    uint64_t v199 = *(void *)(v0 + 560);
    uint64_t v200 = *(void *)(v0 + 512);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v192 + 16));
    if (v177(v199, 1, v200) != 1)
    {
      uint64_t v201 = *(void *)(v0 + 640);
      uint64_t v202 = *(void *)(v0 + 616);
      uint64_t v203 = *(void *)(v0 + 560);
      uint64_t v204 = *(void *)(v0 + 536);
      uint64_t v205 = *(void *)(v0 + 528);
      uint64_t v206 = *(int *)(*(void *)(v0 + 512) + 48);
      uint64_t v207 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 624) + 32);
      v207(v204, v203, v202);
      int v8 = *(_DWORD *)(v203 + v206);
      v207(v205, v204, v202);
      v207(v201, v205, v202);
      continue;
    }
    break;
  }
  sub_100522F00(*(void *)(v0 + 560), (uint64_t *)&unk_101674170);
  uint64_t v239 = (void *)swift_task_alloc();
  *(void *)(v0 + 936) = v239;
  *uint64_t v239 = v0;
  v239[1] = sub_1005828A8;
  uint64_t v240 = *(void *)(v0 + 704);
  return sub_100EA75F0(v240);
}

uint64_t sub_1005841D4()
{
  (*(void (**)(void, void))(v0 + 792))(*(void *)(v0 + 728), *(void *)(v0 + 672));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100584414(uint64_t a1, uint64_t a2)
{
  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  uint64_t v4 = type metadata accessor for UUID();
  v3[20] = v4;
  v3[21] = *(void *)(v4 - 8);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  return _swift_task_switch(sub_1005844E8, 0, 0);
}

uint64_t sub_1005844E8()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v2 + 24))(*(void *)(v1 + 40), (*(void *)(v1 + 56) >> 2) & 1, ObjectType, v2);
  uint64_t v4 = *(void *)(v0[19] + 48);
  NSString v5 = (void *)swift_task_alloc();
  v0[24] = v5;
  *NSString v5 = v0;
  v5[1] = sub_100584628;
  return sub_100584E44(v4);
}

uint64_t sub_100584628()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100584D5C;
  }
  else {
    uint64_t v2 = sub_10058473C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10058473C()
{
  unint64_t v1 = v0[2];
  uint64_t v2 = v0[5];
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_10057BD18(v3);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_10058ECA0((uint64_t)v4);
  swift_endAccess();
  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v5 = v0[19];
    unint64_t v6 = *(void *)(v5 + 64);
    if (v1 > v6) {
      unint64_t v6 = v1;
    }
    *(void *)(v5 + 64) = v6;
  }
  uint64_t v7 = v0[9];
  v0[26] = v7;
  v0[16] = v7;
  swift_bridgeObjectRetain();
  sub_10058EB88((uint64_t)(v0 + 2));
  uint64_t v8 = *(void *)(v7 + 16);
  v0[27] = v8;
  if (v8)
  {
    uint64_t v9 = 0;
    while (1)
    {
      v0[28] = v9;
      id v10 = (char *)v0[22];
      uint64_t v11 = v0[21];
      uint64_t v24 = v0[23];
      uint64_t v25 = v0[20];
      uint64_t v12 = v0[26] + 16 * v9;
      uint64_t v13 = *(void *)(v12 + 32);
      v0[29] = v13;
      uint64_t v14 = *(void *)(v12 + 40);
      uint64_t ObjectType = swift_getObjectType();
      char v16 = *(void (**)(uint64_t, uint64_t))(v14 + 16);
      swift_unknownObjectRetain();
      v16(ObjectType, v14);
      uint64_t v18 = v17;
      uint64_t v19 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v18 + 40))(v19, v18);
      swift_unknownObjectRelease();
      swift_beginAccess();
      char v20 = sub_100CB4BC8(v24, v10);
      swift_endAccess();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v24, v25);
      if (v20) {
        break;
      }
      swift_unknownObjectRelease();
      uint64_t v9 = v0[28] + 1;
      if (v9 == v0[27]) {
        goto LABEL_9;
      }
    }
    uint64_t v23 = (void *)swift_task_alloc();
    v0[30] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_100584A0C;
    return sub_100584414(v13, v14);
  }
  else
  {
LABEL_9:
    sub_10058EEF8((uint64_t)(v0 + 16));
    swift_task_dealloc();
    swift_task_dealloc();
    int v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
}

uint64_t sub_100584A0C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 248) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_10058EEF8(v2 + 128);
    uint64_t v3 = sub_100584DD0;
  }
  else
  {
    uint64_t v3 = sub_100584B28;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100584B28()
{
  swift_unknownObjectRelease();
  uint64_t v1 = v0[28] + 1;
  if (v1 == v0[27])
  {
LABEL_4:
    sub_10058EEF8((uint64_t)(v0 + 16));
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
  else
  {
    while (1)
    {
      v0[28] = v1;
      uint64_t v2 = (char *)v0[22];
      uint64_t v3 = v0[21];
      uint64_t v16 = v0[23];
      uint64_t v17 = v0[20];
      uint64_t v4 = v0[26] + 16 * v1;
      uint64_t v5 = *(void *)(v4 + 32);
      v0[29] = v5;
      uint64_t v6 = *(void *)(v4 + 40);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v6 + 16);
      swift_unknownObjectRetain();
      v8(ObjectType, v6);
      uint64_t v10 = v9;
      uint64_t v11 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v11, v10);
      swift_unknownObjectRelease();
      swift_beginAccess();
      char v12 = sub_100CB4BC8(v16, v2);
      swift_endAccess();
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v16, v17);
      if (v12) {
        break;
      }
      swift_unknownObjectRelease();
      uint64_t v1 = v0[28] + 1;
      if (v1 == v0[27]) {
        goto LABEL_4;
      }
    }
    uint64_t v15 = (void *)swift_task_alloc();
    v0[30] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_100584A0C;
    return sub_100584414(v5, v6);
  }
}

uint64_t sub_100584D5C()
{
  sub_10058EB88(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100584DD0()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100584E44(uint64_t a1)
{
  v2[22] = a1;
  v2[23] = v1;
  v2[24] = *(void *)(type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(0) - 8);
  v2[25] = swift_task_alloc();
  v2[26] = type metadata accessor for CRLProto_ObjectInfo(0);
  v2[27] = swift_task_alloc();
  return _swift_task_switch(sub_100584F5C, 0, 0);
}

uint64_t sub_100584F5C()
{
  sub_100586848(v0[27]);
  sub_10058EB40(&qword_1016741B0, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo);
  uint64_t v1 = Message.serializedData(partial:)();
  v0[28] = v1;
  v0[29] = v2;
  uint64_t v3 = 0;
  switch(v2 >> 62)
  {
    case 1uLL:
      LODWORD(v3) = HIDWORD(v1) - v1;
      if (!__OFSUB__(HIDWORD(v1), v1))
      {
        uint64_t v3 = (int)v3;
        goto LABEL_6;
      }
      __break(1u);
      goto LABEL_11;
    case 2uLL:
      uint64_t v5 = *(void *)(v1 + 16);
      uint64_t v4 = *(void *)(v1 + 24);
      BOOL v6 = __OFSUB__(v4, v5);
      uint64_t v3 = v4 - v5;
      if (v6)
      {
LABEL_11:
        __break(1u);
        return _assertionFailure(_:_:file:line:flags:)();
      }
LABEL_6:
      if (v3 < 0) {
        return _assertionFailure(_:_:file:line:flags:)();
      }
LABEL_7:
      v0[20] = v3;
      uint64_t v7 = sub_1009B6AEC((uint64_t)(v0 + 20), (uint64_t)(v0 + 21));
      uint64_t v9 = v8;
      v0[30] = v7;
      v0[31] = v8;
      uint64_t ObjectType = swift_getObjectType();
      v0[32] = ObjectType;
      uint64_t v11 = (void *)swift_task_alloc();
      v0[33] = v11;
      *uint64_t v11 = v0;
      v11[1] = sub_10058522C;
      return sub_1007794E8(v7, v9, ObjectType);
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v3 = BYTE6(v2);
      goto LABEL_7;
  }
}

uint64_t sub_10058522C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[34] = a1;
  v3[35] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_100586380, 0, 0);
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v3[36] = v4;
    *uint64_t v4 = v3;
    v4[1] = sub_1005853F4;
    uint64_t v5 = v3[32];
    uint64_t v6 = v3[29];
    uint64_t v7 = v3[28];
    return sub_1007794E8(v7, v6, v5);
  }
}

uint64_t sub_1005853F4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 296) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10058645C;
  }
  else
  {
    *(void *)(v4 + 304) = a1;
    uint64_t v5 = sub_100585544;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100585544()
{
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v3 = v2 + v1;
  if (__OFADD__(v2, v1))
  {
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
  uint64_t v4 = *(void *)(v0 + 216);
  uint64_t v5 = *(void *)(v4 + 32);
  *(void *)(v0 + 312) = v5;
  uint64_t v6 = *(void *)(v5 + 16);
  *(void *)(v0 + 320) = v6;
  if (v6)
  {
    uint64_t v7 = *(void *)(v0 + 192);
    int v8 = *(_DWORD *)(v7 + 80);
    *(_DWORD *)(v0 + 392) = v8;
    uint64_t v9 = *(void *)(v7 + 72);
    *(void *)(v0 + 328) = v9;
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    while (1)
    {
      *(void *)(v0 + 336) = v3;
      *(void *)(v0 + 344) = v10;
      uint64_t v11 = *(uint64_t **)(v0 + 200);
      sub_10058F030(v5 + ((v8 + 32) & ~(unint64_t)v8) + v9 * v10, (uint64_t)v11, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      uint64_t v13 = *v11;
      char v12 = (void *)v11[1];
      swift_bridgeObjectRetain();
      v14._countAndFlagsBits = v13;
      v14._object = v12;
      unint64_t v15 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101503730, v14);
      swift_bridgeObjectRelease();
      if (v15 > 4) {
        break;
      }
      uint64_t v16 = *(void *)(*(void *)(v0 + 184) + 40);
      if (*(void *)(v16 + 16))
      {
        unint64_t v17 = sub_100956650(v15);
        if (v18)
        {
          uint64_t v35 = *(void *)(v0 + 200);
          uint64_t v36 = (uint64_t *)(*(void *)(v16 + 56) + 16 * v17);
          uint64_t v37 = *v36;
          *(void *)(v0 + 352) = *v36;
          unint64_t v38 = v36[1];
          *(void *)(v0 + 360) = v38;
          uint64_t v39 = *(void *)(v35 + 16);
          switch(v38 >> 62)
          {
            case 1uLL:
              if (__OFSUB__(HIDWORD(v37), v37)) {
                goto LABEL_32;
              }
              uint64_t v40 = HIDWORD(v37) - (int)v37;
LABEL_22:
              sub_100510D4C(v37, v38);
LABEL_23:
              if (v40 < 0 || v39 != v40)
              {
LABEL_29:
                sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"write(to:)", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriter.swift", 99, 2, 188, (uint64_t)"Unexpected mismatch for entry data size.", 40, 2u, (uint64_t)_swiftEmptyArrayStorage);
                sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unexpected mismatch for entry data size.");
                uint64_t v29 = _swiftEmptyArrayStorage;
                uint64_t v30 = 188;
                goto LABEL_30;
              }
LABEL_25:
              uint64_t v43 = (void *)swift_task_alloc();
              *(void *)(v0 + 368) = v43;
              *uint64_t v43 = v0;
              v43[1] = sub_100585BC0;
              uint64_t v44 = *(void *)(v0 + 256);
              uint64_t result = sub_1007794E8(v37, v38, v44);
              break;
            case 2uLL:
              uint64_t v42 = *(void *)(v37 + 16);
              uint64_t v41 = *(void *)(v37 + 24);
              uint64_t v40 = v41 - v42;
              if (!__OFSUB__(v41, v42)) {
                goto LABEL_22;
              }
              goto LABEL_33;
            case 3uLL:
              if (v39) {
                goto LABEL_29;
              }
              goto LABEL_25;
            default:
              uint64_t v40 = BYTE6(v38);
              goto LABEL_23;
          }
          return result;
        }
      }
      uint64_t v19 = *(void *)(v0 + 200);
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      uint64_t v21 = *(void *)(v19 + 16);
      *(void *)(v0 + 168) = v21;
      uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v24 = v23;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v25 = sub_100528BE4();
      *(void *)(inited + 32) = v22;
      *(void *)(inited + 64) = v25;
      *(void *)(inited + 40) = v24;
      if (v21)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"write(to:)", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriter.swift", 99, 2, 184, (uint64_t)"Expected entry size for missing entry: %@", 41, 2u, inited);
        sub_100586FD4(inited, (uint64_t)"Expected entry size for missing entry: %@");
        uint64_t v29 = (double *)inited;
        uint64_t v30 = 184;
        goto LABEL_30;
      }
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
      uint64_t v26 = *(void *)(v0 + 320);
      uint64_t v27 = *(void *)(v0 + 344) + 1;
      sub_10058F81C(*(void *)(v0 + 200), type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      if (v27 == v26)
      {
        uint64_t v4 = *(void *)(v0 + 216);
        goto LABEL_14;
      }
      uint64_t v10 = *(void *)(v0 + 344) + 1;
      uint64_t v9 = *(void *)(v0 + 328);
      LOBYTE(v8) = *(unsigned char *)(v0 + 392);
      uint64_t v5 = *(void *)(v0 + 312);
    }
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v28 = swift_initStackObject();
    *(_OWORD *)(v28 + 16) = xmmword_10117E810;
    *(void *)(v28 + 56) = &type metadata for String;
    *(void *)(v28 + 64) = sub_100528BE4();
    *(void *)(v28 + 32) = v13;
    *(void *)(v28 + 40) = v12;
    swift_bridgeObjectRetain();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"write(to:)", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriter.swift", 99, 2, 180, (uint64_t)"Unexpected data dictionary key value: %@", 40, 2u, v28);
    sub_100586FD4(v28, (uint64_t)"Unexpected data dictionary key value: %@");
    uint64_t v29 = (double *)v28;
    uint64_t v30 = 180;
LABEL_30:
    sub_1005871AC((uint64_t)v29, (uint64_t)"write(to:)", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriter.swift", 99, 2, v30);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v45, v46);
    return _assertionFailure(_:_:file:line:flags:)();
  }
  swift_bridgeObjectRetain();
LABEL_14:
  uint64_t v32 = *(void *)(v0 + 224);
  unint64_t v31 = *(void *)(v0 + 232);
  sub_100510084(*(void *)(v0 + 240), *(void *)(v0 + 248));
  sub_100510084(v32, v31);
  swift_bridgeObjectRelease();
  sub_10058F81C(v4, type metadata accessor for CRLProto_ObjectInfo);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v33(v3);
}

uint64_t sub_100585BC0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 376) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_100586538;
  }
  else
  {
    *(void *)(v4 + 384) = a1;
    uint64_t v5 = sub_100585D18;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100585D18()
{
  uint64_t v1 = *(void *)(v0 + 384);
  uint64_t v2 = *(void *)(v0 + 336);
  sub_100510084(*(void *)(v0 + 352), *(void *)(v0 + 360));
  BOOL v3 = __OFADD__(v2, v1);
  uint64_t v4 = v2 + v1;
  if (v3)
  {
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
  }
  uint64_t v5 = *(void *)(v0 + 320);
  uint64_t v6 = *(void *)(v0 + 344) + 1;
  sub_10058F81C(*(void *)(v0 + 200), type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
  if (v6 == v5)
  {
LABEL_8:
    uint64_t v26 = *(void *)(v0 + 224);
    unint64_t v25 = *(void *)(v0 + 232);
    uint64_t v27 = *(void *)(v0 + 216);
    sub_100510084(*(void *)(v0 + 240), *(void *)(v0 + 248));
    sub_100510084(v26, v25);
    swift_bridgeObjectRelease();
    sub_10058F81C(v27, type metadata accessor for CRLProto_ObjectInfo);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v28(v4);
  }
  while (1)
  {
    uint64_t v7 = *(void *)(v0 + 344) + 1;
    *(void *)(v0 + 336) = v4;
    *(void *)(v0 + 344) = v7;
    int v8 = *(uint64_t **)(v0 + 200);
    sub_10058F030(*(void *)(v0 + 312)+ ((*(unsigned __int8 *)(v0 + 392) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 392))+ *(void *)(v0 + 328) * v7, (uint64_t)v8, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
    uint64_t v10 = *v8;
    uint64_t v9 = (void *)v8[1];
    swift_bridgeObjectRetain();
    v11._countAndFlagsBits = v10;
    v11._object = v9;
    unint64_t v12 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101503730, v11);
    swift_bridgeObjectRelease();
    if (v12 >= 5)
    {
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v10;
      *(void *)(inited + 40) = v9;
      swift_bridgeObjectRetain();
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"write(to:)", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriter.swift", 99, 2, 180, (uint64_t)"Unexpected data dictionary key value: %@", 40, 2u, inited);
      sub_100586FD4(inited, (uint64_t)"Unexpected data dictionary key value: %@");
      unint64_t v31 = (double *)inited;
      uint64_t v32 = 180;
LABEL_26:
      sub_1005871AC((uint64_t)v31, (uint64_t)"write(to:)", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriter.swift", 99, 2, v32);
      SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v43, v44);
      return _assertionFailure(_:_:file:line:flags:)();
    }
    uint64_t v13 = *(void *)(*(void *)(v0 + 184) + 40);
    if (*(void *)(v13 + 16))
    {
      unint64_t v14 = sub_100956650(v12);
      if (v15) {
        break;
      }
    }
    uint64_t v16 = *(void *)(v0 + 200);
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v17 = swift_initStackObject();
    *(_OWORD *)(v17 + 16) = xmmword_10117E810;
    uint64_t v18 = *(void *)(v16 + 16);
    *(void *)(v0 + 168) = v18;
    uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v21 = v20;
    *(void *)(v17 + 56) = &type metadata for String;
    unint64_t v22 = sub_100528BE4();
    *(void *)(v17 + 32) = v19;
    *(void *)(v17 + 64) = v22;
    *(void *)(v17 + 40) = v21;
    if (v18)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"write(to:)", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriter.swift", 99, 2, 184, (uint64_t)"Expected entry size for missing entry: %@", 41, 2u, v17);
      sub_100586FD4(v17, (uint64_t)"Expected entry size for missing entry: %@");
      unint64_t v31 = (double *)v17;
      uint64_t v32 = 184;
      goto LABEL_26;
    }
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    uint64_t v23 = *(void *)(v0 + 320);
    uint64_t v24 = *(void *)(v0 + 344) + 1;
    sub_10058F81C(*(void *)(v0 + 200), type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
    if (v24 == v23) {
      goto LABEL_8;
    }
  }
  uint64_t v33 = *(void *)(v0 + 200);
  unint64_t v34 = (uint64_t *)(*(void *)(v13 + 56) + 16 * v14);
  uint64_t v35 = *v34;
  *(void *)(v0 + 352) = *v34;
  unint64_t v36 = v34[1];
  *(void *)(v0 + 360) = v36;
  uint64_t v37 = *(void *)(v33 + 16);
  switch(v36 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v35), v35)) {
        goto LABEL_28;
      }
      uint64_t v38 = HIDWORD(v35) - (int)v35;
LABEL_18:
      sub_100510D4C(v35, v36);
LABEL_19:
      if (v38 < 0 || v37 != v38)
      {
LABEL_25:
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"write(to:)", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriter.swift", 99, 2, 188, (uint64_t)"Unexpected mismatch for entry data size.", 40, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unexpected mismatch for entry data size.");
        unint64_t v31 = _swiftEmptyArrayStorage;
        uint64_t v32 = 188;
        goto LABEL_26;
      }
LABEL_21:
      uint64_t v41 = (void *)swift_task_alloc();
      *(void *)(v0 + 368) = v41;
      *uint64_t v41 = v0;
      v41[1] = sub_100585BC0;
      uint64_t v42 = *(void *)(v0 + 256);
      uint64_t result = sub_1007794E8(v35, v36, v42);
      break;
    case 2uLL:
      uint64_t v40 = *(void *)(v35 + 16);
      uint64_t v39 = *(void *)(v35 + 24);
      uint64_t v38 = v39 - v40;
      if (!__OFSUB__(v39, v40)) {
        goto LABEL_18;
      }
      goto LABEL_29;
    case 3uLL:
      if (v37) {
        goto LABEL_25;
      }
      goto LABEL_21;
    default:
      uint64_t v38 = BYTE6(v36);
      goto LABEL_19;
  }
  return result;
}

uint64_t sub_100586380()
{
  uint64_t v1 = v0[28];
  unint64_t v2 = v0[29];
  uint64_t v3 = v0[27];
  sub_100510084(v0[30], v0[31]);
  sub_100510084(v1, v2);
  sub_10058F81C(v3, type metadata accessor for CRLProto_ObjectInfo);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10058645C()
{
  uint64_t v1 = v0[28];
  unint64_t v2 = v0[29];
  uint64_t v3 = v0[27];
  sub_100510084(v0[30], v0[31]);
  sub_100510084(v1, v2);
  sub_10058F81C(v3, type metadata accessor for CRLProto_ObjectInfo);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100586538()
{
  uint64_t v1 = v0[30];
  unint64_t v2 = v0[31];
  uint64_t v4 = v0[28];
  unint64_t v3 = v0[29];
  uint64_t v5 = v0[27];
  uint64_t v6 = v0[25];
  sub_100510084(v0[44], v0[45]);
  sub_100510084(v1, v2);
  sub_100510084(v4, v3);
  sub_10058F81C(v5, type metadata accessor for CRLProto_ObjectInfo);
  sub_10058F81C(v6, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100586654()
{
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLSerializableObjectWriter()
{
  return self;
}

ValueMetadata *type metadata accessor for CRLSerializableObjectWriterOptions()
{
  return &type metadata for CRLSerializableObjectWriterOptions;
}

unint64_t sub_1005866EC()
{
  unint64_t result = qword_101674138;
  if (!qword_101674138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101674138);
  }
  return result;
}

unint64_t sub_100586744()
{
  unint64_t result = qword_101674140;
  if (!qword_101674140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101674140);
  }
  return result;
}

unint64_t sub_10058679C()
{
  unint64_t result = qword_101674148;
  if (!qword_101674148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101674148);
  }
  return result;
}

unint64_t sub_1005867F4()
{
  unint64_t result = qword_101674150;
  if (!qword_101674150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_101674150);
  }
  return result;
}

uint64_t sub_100586848@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLProto_Data(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  Swift::String v11 = (char *)v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v73 - 8);
  __chkstk_darwin(v73, v13);
  uint64_t v69 = (char *)v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference(0);
  uint64_t v71 = *(void *)(v15 - 8);
  uint64_t v72 = v15;
  __chkstk_darwin(v15, v16);
  uint64_t v76 = (uint64_t)v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)v62 - v20;
  *(void *)(a1 + 16) = _swiftEmptyArrayStorage;
  *(void *)(a1 + 24) = _swiftEmptyArrayStorage;
  *(void *)(a1 + 32) = _swiftEmptyArrayStorage;
  *(void *)(a1 + 56) = _swiftEmptyArrayStorage;
  type metadata accessor for CRLProto_ObjectInfo(0);
  UnknownStorage.init()();
  unint64_t v22 = v1[4];
  if ((v22 & 0x8000000000000000) != 0 || (uint64_t v70 = v21, v74 = v6, HIDWORD(v22)))
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v23 = *v1;
    uint64_t v24 = v1[1];
    uint64_t v25 = v1[3];
    uint64_t v26 = v1[5];
    uint64_t v64 = v1[6];
    *(_DWORD *)a1 = v22;
    sub_100FD217C(v23);
    *(void *)(a1 + 8) = v27;
    sub_100FD217C(v24);
    *(void *)(a1 + 40) = v25;
    *(void *)(a1 + 48) = v28;
    uint64_t v29 = v1[7];
    uint64_t v87 = v29;
    int64_t v30 = *(void *)(v29 + 16);
    unint64_t v31 = _swiftEmptyArrayStorage;
    if (v30)
    {
      v62[1] = v26;
      uint64_t v68 = v7;
      uint64_t v63 = a1;
      uint64_t v86 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_1006BB7E4(0, v30, 0);
      uint64_t v75 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
      uint64_t v66 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
      uint64_t v67 = (void (**)(char *, uint64_t))(v12 + 8);
      uint64_t v32 = (uint64_t *)(v29 + 40);
      long long v65 = xmmword_101180360;
      do
      {
        uint64_t v33 = *v32;
        swift_unknownObjectRetain();
        uint64_t v34 = v76;
        UnknownStorage.init()();
        uint64_t v35 = v34 + *(int *)(v72 + 20);
        unint64_t v36 = *v75;
        uint64_t v37 = v68;
        (*v75)(v35, 1, 1, v68);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v33 + 16))(ObjectType, v33);
        uint64_t v40 = v39;
        uint64_t v41 = swift_getObjectType();
        uint64_t v42 = v69;
        (*(void (**)(uint64_t, uint64_t))(v40 + 40))(v41, v40);
        swift_unknownObjectRelease();
        uint64_t v77 = UUID.uuid.getter();
        char v78 = v43;
        char v79 = v44;
        char v80 = v45;
        char v81 = v46;
        char v82 = v47;
        char v83 = v48;
        char v84 = v49;
        char v85 = v50;
        UUID.uuid.getter();
        type metadata accessor for __DataStorage();
        swift_allocObject();
        uint64_t v51 = __DataStorage.init(bytes:length:)();
        (*v67)(v42, v73);
        uint64_t v52 = (uint64_t)v74;
        sub_100522E9C(v35, (uint64_t)v74, (uint64_t *)&unk_101674160);
        if ((*v66)(v52, 1, v37) == 1)
        {
          *(_OWORD *)Swift::String v11 = v65;
          UnknownStorage.init()();
          sub_100522F00(v52, (uint64_t *)&unk_101674160);
        }
        else
        {
          sub_10058EFC8(v52, (uint64_t)v11, type metadata accessor for CRLProto_Data);
        }
        sub_100510084(*(void *)v11, *((void *)v11 + 1));
        *(void *)Swift::String v11 = 0x1000000000;
        *((void *)v11 + 1) = v51 | 0x4000000000000000;
        sub_100522F00(v35, (uint64_t *)&unk_101674160);
        sub_10058EFC8((uint64_t)v11, v35, type metadata accessor for CRLProto_Data);
        v36(v35, 0, 1, v37);
        uint64_t v53 = (uint64_t)v70;
        sub_10058EFC8(v76, (uint64_t)v70, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
        swift_unknownObjectRelease();
        unint64_t v31 = v86;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB7E4(0, *((void *)v31 + 2) + 1, 1);
          unint64_t v31 = v86;
        }
        unint64_t v55 = *((void *)v31 + 2);
        unint64_t v54 = *((void *)v31 + 3);
        if (v55 >= v54 >> 1)
        {
          sub_1006BB7E4(v54 > 1, v55 + 1, 1);
          unint64_t v31 = v86;
        }
        *((void *)v31 + 2) = v55 + 1;
        sub_10058EFC8(v53, (uint64_t)v31+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(void *)(v71 + 72) * v55, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
        v32 += 2;
        --v30;
      }
      while (v30);
      sub_10058EEF8((uint64_t)&v87);
      a1 = v63;
    }
    swift_bridgeObjectRelease();
    *(void *)(a1 + 16) = v31;
    uint64_t v56 = swift_bridgeObjectRetain();
    uint64_t v57 = sub_10057F8C4(v56);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 24) = v57;
    uint64_t v58 = swift_bridgeObjectRetain();
    int v59 = sub_100580204(v58);
    swift_bridgeObjectRelease();
    uint64_t v77 = (uint64_t)v59;
    swift_bridgeObjectRetain();
    sub_10058D3EC((unint64_t *)&v77);
    swift_bridgeObjectRelease();
    unint64_t v60 = v77;
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(a1 + 32) = v60;
  }
  return result;
}

char *sub_100586FD4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for __VaListBuilder();
  uint64_t v3 = (void *)swift_allocObject();
  v3[2] = 8;
  v3[3] = 0;
  uint64_t v4 = v3 + 3;
  v3[4] = 0;
  v3[5] = 0;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_25:
    uint64_t v21 = __VaListBuilder.va_list()();
    sub_1001D9678(a2, v21);
    return (char *)swift_release();
  }
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 32;
  while (1)
  {
    sub_1005498A4(v7 + 40 * v6, (uint64_t)v23);
    sub_10050F848(v23, v23[3]);
    uint64_t result = (char *)dispatch thunk of CVarArg._cVarArgEncoding.getter();
    uint64_t v9 = *v4;
    uint64_t v10 = *((void *)result + 2);
    BOOL v11 = __OFADD__(*v4, v10);
    uint64_t v12 = *v4 + v10;
    if (v11) {
      break;
    }
    uint64_t v13 = result;
    uint64_t v14 = v3[4];
    if (v14 >= v12) {
      goto LABEL_18;
    }
    if (v14 + 0x4000000000000000 < 0) {
      goto LABEL_28;
    }
    uint64_t v15 = (char *)v3[5];
    if (2 * v14 > v12) {
      uint64_t v12 = 2 * v14;
    }
    v3[4] = v12;
    if ((unint64_t)(v12 - 0x1000000000000000) >> 61 != 7) {
      goto LABEL_29;
    }
    uint64_t result = (char *)swift_slowAlloc();
    v3[5] = result;
    if (v15)
    {
      if (result != v15 || result >= &v15[8 * v9]) {
        memmove(result, v15, 8 * v9);
      }
      __VaListBuilder.deallocStorage(wordCount:storage:)();
LABEL_18:
      uint64_t result = (char *)v3[5];
    }
    if (!result) {
      goto LABEL_30;
    }
    uint64_t v17 = *((void *)v13 + 2);
    if (v17)
    {
      uint64_t v18 = (uint64_t *)(v13 + 32);
      uint64_t v19 = *v4;
      while (1)
      {
        uint64_t v20 = *v18++;
        *(void *)&result[8 * v19] = v20;
        uint64_t v19 = *v4 + 1;
        if (__OFADD__(*v4, 1)) {
          break;
        }
        *uint64_t v4 = v19;
        if (!--v17) {
          goto LABEL_3;
        }
      }
      __break(1u);
      break;
    }
LABEL_3:
    ++v6;
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v23);
    if (v6 == v5) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void sub_1005871AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  type metadata accessor for __VaListBuilder();
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = 8;
  v9[3] = 0;
  uint64_t v10 = v9 + 3;
  v9[4] = 0;
  v9[5] = 0;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v12 = 0;
    uint64_t v13 = a1 + 32;
    while (1)
    {
      sub_1005498A4(v13 + 40 * v12, (uint64_t)v34);
      sub_10050F848(v34, v34[3]);
      uint64_t v14 = dispatch thunk of CVarArg._cVarArgEncoding.getter();
      uint64_t v15 = *v10;
      uint64_t v16 = *(void *)(v14 + 16);
      BOOL v17 = __OFADD__(*v10, v16);
      uint64_t v18 = *v10 + v16;
      if (v17)
      {
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        return;
      }
      uint64_t v19 = v14;
      uint64_t v20 = v9[4];
      if (v20 >= v18) {
        goto LABEL_18;
      }
      if (v20 + 0x4000000000000000 < 0) {
        goto LABEL_29;
      }
      uint64_t v21 = (char *)v9[5];
      if (2 * v20 > v18) {
        uint64_t v18 = 2 * v20;
      }
      v9[4] = v18;
      if ((unint64_t)(v18 - 0x1000000000000000) >> 61 != 7) {
        goto LABEL_30;
      }
      unint64_t v22 = (char *)swift_slowAlloc();
      v9[5] = v22;
      if (v21) {
        break;
      }
LABEL_19:
      if (!v22) {
        goto LABEL_32;
      }
      uint64_t v24 = *(void *)(v19 + 16);
      if (v24)
      {
        uint64_t v25 = (uint64_t *)(v19 + 32);
        uint64_t v26 = *v10;
        while (1)
        {
          uint64_t v27 = *v25++;
          *(void *)&v22[8 * v26] = v27;
          uint64_t v26 = *v10 + 1;
          if (__OFADD__(*v10, 1)) {
            break;
          }
          *uint64_t v10 = v26;
          if (!--v24) {
            goto LABEL_3;
          }
        }
        __break(1u);
        goto LABEL_28;
      }
LABEL_3:
      ++v12;
      swift_bridgeObjectRelease();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v34);
      if (v12 == v11) {
        goto LABEL_25;
      }
    }
    if (v22 != v21 || v22 >= &v21[8 * v15]) {
      memmove(v22, v21, 8 * v15);
    }
    __VaListBuilder.deallocStorage(wordCount:storage:)();
LABEL_18:
    unint64_t v22 = (char *)v9[5];
    goto LABEL_19;
  }
LABEL_25:
  uint64_t v28 = __VaListBuilder.va_list()();
  uint64_t v29 = self;
  StaticString.description.getter();
  NSString v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  StaticString.description.getter();
  NSString v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a8 < 0) {
    goto LABEL_31;
  }
  StaticString.description.getter();
  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v29 handleFailureInFunction:v30 file:v31 lineNumber:a8 isFatal:1 format:v32 args:v28];
  swift_release();
}

uint64_t type metadata accessor for CRLArchivedObjectMetadataRepresentation()
{
  uint64_t result = qword_1016742C0;
  if (!qword_1016742C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_100587488(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    uint64_t v35 = a2 + 64;
    unint64_t result = _HashTable.previousHole(before:)();
    uint64_t v13 = v35;
    if ((*(void *)(v35 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v32 = (result + 1) & v12;
      uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v34 = v5 + 16;
      uint64_t v14 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v15 = *(void *)(v5 + 72);
      do
      {
        uint64_t v16 = v15;
        int64_t v17 = v15 * v11;
        v33(v9, *(void *)(a2 + 48) + v15 * v11, v4);
        sub_10058EB40((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v18 = dispatch thunk of Hashable._rawHashValue(seed:)();
        unint64_t result = (*v14)(v9, v4);
        unint64_t v19 = v18 & v12;
        if (a1 >= (uint64_t)v32)
        {
          if (v19 >= v32 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            uint64_t v22 = *(void *)(a2 + 48);
            uint64_t v15 = v16;
            unint64_t result = v22 + v16 * a1;
            if (v16 * a1 < v17 || result >= v22 + v17 + v16)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v16 * a1 != v17)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v23 = *(void *)(a2 + 56);
            uint64_t v24 = (_OWORD *)(v23 + 16 * a1);
            uint64_t v25 = (_OWORD *)(v23 + 16 * v11);
            uint64_t v13 = v35;
            if (a1 != v11 || (a1 = v11, v24 >= v25 + 1))
            {
              *uint64_t v24 = *v25;
              a1 = v11;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v32 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        uint64_t v13 = v35;
        uint64_t v15 = v16;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v12;
      }
      while (((*(void *)(v13 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    uint64_t v26 = (uint64_t *)(v13 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v26;
    uint64_t v28 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v26 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v28 = *v26;
    uint64_t v27 = (-1 << a1) - 1;
  }
  *uint64_t v26 = v28 & v27;
  uint64_t v29 = *(void *)(a2 + 16);
  BOOL v30 = __OFSUB__(v29, 1);
  uint64_t v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_100587780(int64_t a1, uint64_t a2)
{
  uint64_t v40 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v40 - 8);
  uint64_t result = __chkstk_darwin(v40, v5);
  uint64_t v39 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a2 + 64;
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      uint64_t v36 = a2 + 64;
      uint64_t v37 = (void (**)(char *, uint64_t))(v4 + 8);
      uint64_t v35 = a2;
      unint64_t v38 = (result + 1) & v11;
      do
      {
        uint64_t v12 = *(void *)(*(void *)(a2 + 48) + 8 * v10);
        Hasher.init(_seed:)();
        uint64_t v13 = *(void *)(v12 + 24);
        uint64_t v14 = v11;
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v13 + 32);
        swift_retain();
        int64_t v17 = v39;
        uint64_t v18 = ObjectType;
        uint64_t v11 = v14;
        v16(v18, v13);
        sub_10058EB40((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v19 = v40;
        dispatch thunk of Hashable.hash(into:)();
        (*v37)(v17, v19);
        Swift::Int v20 = Hasher._finalize()();
        uint64_t result = swift_release();
        Swift::Int v21 = v20 & v14;
        if (a1 >= (uint64_t)v38)
        {
          if (v21 < v38)
          {
            a2 = v35;
            uint64_t v8 = v36;
          }
          else
          {
            a2 = v35;
            uint64_t v8 = v36;
            if (a1 >= v21) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          a2 = v35;
          uint64_t v8 = v36;
          if (v21 >= v38 || a1 >= v21)
          {
LABEL_12:
            uint64_t v22 = *(void *)(a2 + 48);
            uint64_t v23 = (void *)(v22 + 8 * a1);
            uint64_t v24 = (void *)(v22 + 8 * v10);
            if (a1 != v10 || v23 >= v24 + 1) {
              *uint64_t v23 = *v24;
            }
            uint64_t v25 = *(void *)(a2 + 56);
            uint64_t v26 = (_OWORD *)(v25 + 16 * a1);
            uint64_t v27 = (_OWORD *)(v25 + 16 * v10);
            if (a1 != v10 || (a1 = v10, v26 >= v27 + 1))
            {
              *uint64_t v26 = *v27;
              a1 = v10;
            }
          }
        }
        unint64_t v10 = (v10 + 1) & v14;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v29 = *v28;
    uint64_t v30 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v28;
    uint64_t v29 = (-1 << a1) - 1;
  }
  *uint64_t v28 = v30 & v29;
  uint64_t v31 = *(void *)(a2 + 16);
  BOOL v32 = __OFSUB__(v31, 1);
  uint64_t v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100587A98(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        uint64_t result = Hasher._finalize()();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (unsigned char *)(v11 + v3);
          uint64_t v13 = (unsigned char *)(v11 + v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 32 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 2))
          {
            long long v9 = v16[1];
            *uint64_t v15 = *v16;
            v15[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *int64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
    JUMPOUT(0x100587D5CLL);
  }
  *(void *)(a2 + 16) = v22;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_100587D84(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        uint64_t result = Hasher._finalize()();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (unsigned char *)(v11 + v3);
          uint64_t v13 = (unsigned char *)(v11 + v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 32 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 2))
          {
            long long v9 = v16[1];
            *uint64_t v15 = *v16;
            v15[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *int64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
    JUMPOUT(0x100588048);
  }
  *(void *)(a2 + 16) = v22;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_100588070(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Swift::UInt v10 = *(void *)(*(void *)(a2 + 48) + 8 * v6);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v10);
        uint64_t result = Hasher._finalize()();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (void *)(v12 + 8 * v3);
          uint64_t v14 = (void *)(v12 + 8 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          int64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100588230(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4, v6);
  long long v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2 + 64;
  uint64_t v11 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v12 = (a1 + 1) & ~v11;
  if (((1 << v12) & *(void *)(a2 + 64 + 8 * (v12 >> 6))) != 0)
  {
    uint64_t v13 = ~v11;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v10 + 8 * (v12 >> 6)) & (1 << v12)) != 0)
    {
      unint64_t v40 = (result + 1) & v13;
      uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v14 = v5 + 16;
      uint64_t v16 = *(void *)(v14 + 56);
      uint64_t v41 = v14;
      unint64_t v38 = (uint64_t (**)(char *, uint64_t))(v14 - 8);
      uint64_t v39 = v15;
      uint64_t v37 = v13;
      do
      {
        uint64_t v17 = v10;
        uint64_t v18 = v16;
        int64_t v19 = v16 * v12;
        v39(v9, *(void *)(a2 + 48) + v16 * v12, v4);
        sub_10058EB40((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v20 = dispatch thunk of Hashable._rawHashValue(seed:)();
        unint64_t result = (*v38)(v9, v4);
        unint64_t v21 = v20 & v13;
        if (a1 >= (uint64_t)v40)
        {
          if (v21 >= v40 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            if (v18 * a1 < v19
              || *(void *)(a2 + 48) + v18 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v19 + v18))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v18 * a1 != v19)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v24 = *(void *)(a2 + 56);
            uint64_t v25 = *(void *)(*(void *)(sub_1005057FC((uint64_t *)&unk_101684F90) - 8) + 72);
            int64_t v26 = v25 * a1;
            unint64_t result = v24 + v25 * a1;
            int64_t v27 = v25 * v12;
            unint64_t v28 = v24 + v25 * v12 + v25;
            BOOL v29 = v26 < v27 || result >= v28;
            uint64_t v10 = v17;
            if (v29)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v12;
              uint64_t v13 = v37;
            }
            else
            {
              a1 = v12;
              uint64_t v13 = v37;
              if (v26 != v27)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                a1 = v12;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v40 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        uint64_t v10 = v17;
LABEL_5:
        unint64_t v12 = (v12 + 1) & v13;
        uint64_t v16 = v18;
      }
      while (((*(void *)(v10 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
    }
    uint64_t v30 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v30 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  *uint64_t v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10058857C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        unint64_t result = static Hasher._hash(seed:_:)();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *uint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *uint64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_100588714(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  unint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v33 = a2 + 64;
    uint64_t v12 = _HashTable.previousHole(before:)();
    uint64_t v13 = v33;
    if ((*(void *)(v33 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (v12 + 1) & v11;
      uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v14 = v5 + 16;
      uint64_t v30 = v15;
      uint64_t v16 = *(void *)(v14 + 56);
      uint64_t v32 = v14;
      uint64_t v17 = (void (**)(char *, uint64_t))(v14 - 8);
      do
      {
        int64_t v18 = v16 * v10;
        v30(v8, *(void *)(a2 + 48) + v16 * v10, v4);
        sub_10058EB40((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v19 = dispatch thunk of Hashable._rawHashValue(seed:)();
        (*v17)(v8, v4);
        unint64_t v20 = v19 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v20 < v31 || a1 < (uint64_t)v20) {
            goto LABEL_6;
          }
        }
        else if (v20 < v31 && a1 < (uint64_t)v20)
        {
          goto LABEL_6;
        }
        int64_t v23 = v16 * a1;
        if (v16 * a1 < v18 || *(void *)(a2 + 48) + v16 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v18 + v16))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v23 != v18)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        if (v23 < v18 || *(void *)(a2 + 56) + v23 >= (unint64_t)(*(void *)(a2 + 56) + v18 + v16))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v23 == v18) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        unint64_t v10 = (v10 + 1) & v11;
        uint64_t v13 = v33;
      }
      while (((*(void *)(v33 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v24 = (uint64_t *)(v13 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v24;
    uint64_t v26 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v24 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v24;
    uint64_t v25 = (-1 << a1) - 1;
  }
  *uint64_t v24 = v26 & v25;
  uint64_t v27 = *(void *)(a2 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_100588A18(int64_t a1, uint64_t a2)
{
}

unint64_t sub_100588A30(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        Swift::UInt v9 = *(unsigned __int8 *)(*(void *)(a2 + 48) + v6);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v9);
        unint64_t result = Hasher._finalize()();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (unsigned char *)(v11 + v3);
        uint64_t v13 = (unsigned char *)(v11 + v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *uint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(sub_1005057FC(&qword_101674250) - 8) + 72);
        int64_t v16 = v15 * v3;
        unint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    unint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *unint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_100588C38(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  unint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    uint64_t v13 = _HashTable.previousHole(before:)();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      unint64_t v36 = (v13 + 1) & v12;
      uint64_t v37 = v14;
      uint64_t v15 = *(void *)(v5 + 72);
      uint64_t v38 = v5 + 16;
      uint64_t v35 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v16 = v12;
      do
      {
        uint64_t v17 = v9;
        uint64_t v18 = v15;
        int64_t v19 = v15 * v11;
        uint64_t v20 = v16;
        v37(v8, *(void *)(a2 + 48) + v15 * v11, v4);
        sub_10058EB40((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v21 = dispatch thunk of Hashable._rawHashValue(seed:)();
        (*v35)(v8, v4);
        uint64_t v16 = v20;
        unint64_t v22 = v21 & v20;
        if (a1 >= (uint64_t)v36)
        {
          if (v22 >= v36 && a1 >= (uint64_t)v22)
          {
LABEL_16:
            uint64_t v9 = v17;
            if (v18 * a1 < v19
              || (uint64_t v15 = v18, *(void *)(a2 + 48) + v18 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v19 + v18)))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              uint64_t v15 = v18;
              uint64_t v16 = v20;
            }
            else if (v18 * a1 != v19)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            uint64_t v25 = *(void *)(a2 + 56);
            unint64_t v26 = v25 + 24 * a1;
            uint64_t v27 = (long long *)(v25 + 24 * v11);
            if (a1 != v11 || (a1 = v11, v26 >= (unint64_t)v27 + 24))
            {
              long long v28 = *v27;
              *(void *)(v26 + 16) = *((void *)v27 + 2);
              *(_OWORD *)unint64_t v26 = v28;
              a1 = v11;
            }
            goto LABEL_5;
          }
        }
        else if (v22 >= v36 || a1 >= (uint64_t)v22)
        {
          goto LABEL_16;
        }
        uint64_t v9 = v17;
        uint64_t v15 = v18;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v16;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    uint64_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *uint64_t v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_100588F54(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CodingUserInfoKey();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  unint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v40 = a2 + 64;
    uint64_t v12 = _HashTable.previousHole(before:)();
    uint64_t v13 = v40;
    if ((*(void *)(v40 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v38 = (v12 + 1) & v11;
      uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v14 = v5 + 16;
      uint64_t v37 = v15;
      uint64_t v16 = *(void *)(v14 + 56);
      uint64_t v39 = v14;
      uint64_t v17 = (void (**)(char *, uint64_t))(v14 - 8);
      do
      {
        int64_t v18 = v16 * v10;
        v37(v8, *(void *)(a2 + 48) + v16 * v10, v4);
        uint64_t v19 = dispatch thunk of Hashable._rawHashValue(seed:)();
        (*v17)(v8, v4);
        unint64_t v20 = v19 & v11;
        if (a1 >= (uint64_t)v38)
        {
          if (v20 >= v38 && a1 >= (uint64_t)v20)
          {
LABEL_17:
            uint64_t v23 = *(void *)(a2 + 48);
            unint64_t v24 = v23 + v16 * a1;
            unint64_t v25 = v23 + v18 + v16;
            if (v16 * a1 < v18 || v24 >= v25)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v16 * a1 != v18)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v27 = *(void *)(a2 + 56);
            long long v28 = (_OWORD *)(v27 + 32 * a1);
            uint64_t v29 = (_OWORD *)(v27 + 32 * v10);
            uint64_t v13 = v40;
            if (a1 != v10 || (a1 = v10, v28 >= v29 + 2))
            {
              long long v30 = v29[1];
              *long long v28 = *v29;
              v28[1] = v30;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v38 || a1 >= (uint64_t)v20)
        {
          goto LABEL_17;
        }
        uint64_t v13 = v40;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v13 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v31 = (uint64_t *)(v13 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v31;
    uint64_t v33 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v31 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v33 = *v31;
    uint64_t v32 = (-1 << a1) - 1;
  }
  uint64_t *v31 = v33 & v32;
  uint64_t v34 = *(void *)(a2 + 16);
  BOOL v35 = __OFSUB__(v34, 1);
  uint64_t v36 = v34 - 1;
  if (v35)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v36;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_10058920C(unint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      uint64_t v33 = v2;
      uint64_t v34 = v4;
      do
      {
        unint64_t v10 = (Swift::UInt *)(*(void *)(v2 + 48) + 40 * v6);
        uint64_t v11 = v7;
        Swift::UInt v12 = *v10;
        Swift::UInt v13 = v10[1];
        Swift::UInt v15 = v10[2];
        uint64_t v14 = (void *)v10[3];
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v12);
        Hasher._combine(_:)(v13);
        Hasher._combine(_:)(v15);
        id v16 = v14;
        NSObject.hash(into:)();
        Selector.hash(into:)();
        Swift::Int v17 = Hasher._finalize()();

        uint64_t v7 = v11;
        Swift::Int v18 = v17 & v11;
        if (v3 >= (uint64_t)v9)
        {
          if (v18 < v9)
          {
            uint64_t v2 = v33;
            uint64_t v4 = v34;
          }
          else
          {
            uint64_t v2 = v33;
            uint64_t v4 = v34;
            if (v3 >= v18) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v2 = v33;
          uint64_t v4 = v34;
          if (v18 >= v9 || v3 >= v18)
          {
LABEL_12:
            uint64_t v19 = *(void *)(v2 + 48);
            unint64_t v20 = v19 + 40 * v3;
            uint64_t v21 = (long long *)(v19 + 40 * v6);
            if (v3 != v6 || v20 >= (unint64_t)v21 + 40)
            {
              long long v22 = *v21;
              long long v23 = v21[1];
              *(void *)(v20 + 32) = *((void *)v21 + 4);
              *(_OWORD *)unint64_t v20 = v22;
              *(_OWORD *)(v20 + 16) = v23;
            }
            uint64_t v24 = *(void *)(v2 + 56);
            unint64_t v25 = (void *)(v24 + 8 * v3);
            unint64_t v26 = (void *)(v24 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v25 >= v26 + 1))
            {
              *unint64_t v25 = *v26;
              int64_t v3 = v6;
            }
          }
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v27 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v28 = *v27;
    uint64_t v29 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v27 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v29 = *v27;
    uint64_t v28 = (-1 << a1) - 1;
  }
  *uint64_t v27 = v29 & v28;
  uint64_t v30 = *(void *)(v2 + 16);
  BOOL v31 = __OFSUB__(v30, 1);
  uint64_t v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v32;
    ++*(_DWORD *)(v2 + 36);
  }
}

void sub_100589450(int64_t a1, uint64_t a2)
{
  uint64_t v30 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v4 = *(void *)(v30 - 8);
  __chkstk_darwin(v30, v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a2 + 64;
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = _HashTable.previousHole(before:)();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (v12 + 1) & v11;
      uint64_t v13 = *(void *)(v4 + 72);
      uint64_t v14 = v11;
      do
      {
        uint64_t v15 = v13;
        int64_t v16 = v13 * v10;
        uint64_t v17 = v14;
        sub_10058F030(*(void *)(a2 + 48) + v13 * v10, (uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
        Hasher.init(_seed:)();
        type metadata accessor for UUID();
        sub_10058EB40((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
        dispatch thunk of Hashable.hash(into:)();
        type metadata accessor for CRLBoardIdentifierStorage(0);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        Swift::Int v18 = Hasher._finalize()();
        sub_10058F81C((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
        uint64_t v14 = v17;
        Swift::Int v19 = v18 & v17;
        if (a1 >= (uint64_t)v31)
        {
          if (v19 < v31)
          {
            uint64_t v13 = v15;
          }
          else
          {
            uint64_t v13 = v15;
            if (a1 >= v19) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v13 = v15;
          if (v19 >= v31 || a1 >= v19)
          {
LABEL_12:
            if (v13 * a1 < v16
              || *(void *)(a2 + 48) + v13 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v16 + v13))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_17:
              uint64_t v14 = v17;
            }
            else if (v13 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_17;
            }
            uint64_t v20 = *(void *)(a2 + 56);
            uint64_t v21 = (void *)(v20 + 8 * a1);
            long long v22 = (void *)(v20 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v21 >= v22 + 1))
            {
              *uint64_t v21 = *v22;
              a1 = v10;
            }
          }
        }
        unint64_t v10 = (v10 + 1) & v14;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    long long v23 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v24 = *v23;
    uint64_t v25 = (-1 << a1) - 1;
  }
  else
  {
    long long v23 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v23;
    uint64_t v24 = (-1 << a1) - 1;
  }
  *long long v23 = v25 & v24;
  uint64_t v26 = *(void *)(a2 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1005897A4(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    uint64_t v12 = _HashTable.previousHole(before:)();
    uint64_t v13 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (v12 + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v14 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v15 = *(void *)(v5 + 72);
      do
      {
        uint64_t v16 = v15;
        int64_t v17 = v15 * v10;
        v32(v8, *(void *)(a2 + 48) + v15 * v10, v4);
        sub_10058EB40((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v18 = dispatch thunk of Hashable._rawHashValue(seed:)();
        (*v14)(v8, v4);
        unint64_t v19 = v18 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v19 >= v31 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            uint64_t v15 = v16;
            if (v16 * a1 < v17
              || *(void *)(a2 + 48) + v16 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v17 + v16))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v16 * a1 != v17)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            long long v23 = (void *)(v22 + 8 * a1);
            uint64_t v24 = (void *)(v22 + 8 * v10);
            uint64_t v13 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *long long v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v31 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        uint64_t v13 = v34;
        uint64_t v15 = v16;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v13 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v25 = (uint64_t *)(v13 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *uint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_100589A9C(int64_t a1, uint64_t a2)
{
  return sub_10058CAC0(a1, a2, type metadata accessor for CRLBoardIdentifier, type metadata accessor for CRLBoardIdentifier, type metadata accessor for CRLBoardIdentifier);
}

unint64_t sub_100589ADC(int64_t a1, uint64_t a2)
{
  return sub_10058CE20(a1, a2, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
}

void sub_100589AF4(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  int64_t v66 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v9);
  id v61 = (char *)v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v60 = (uint64_t)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  int64_t v17 = (char *)v56 - v16;
  uint64_t v18 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  __chkstk_darwin(v18, v19);
  int v59 = (char *)v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  uint64_t v67 = (uint64_t)v56 - v24;
  uint64_t v25 = a2 + 64;
  uint64_t v26 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v27 = (a1 + 1) & ~v26;
  if (((1 << v27) & *(void *)(a2 + 64 + 8 * (v27 >> 6))) != 0)
  {
    uint64_t v64 = ~v26;
    uint64_t v65 = v23;
    uint64_t v28 = _HashTable.previousHole(before:)();
    uint64_t v63 = a2 + 64;
    if ((*(void *)(v25 + 8 * (v27 >> 6)) & (1 << v27)) != 0)
    {
      unint64_t v62 = (v28 + 1) & v64;
      uint64_t v29 = *(void *)(v65 + 72);
      uint64_t v57 = (void (**)(char *, uint64_t))(v66 + 8);
      uint64_t v58 = (void (**)(char *))(v66 + 32);
      uint64_t v30 = (uint64_t)v59;
      void v56[2] = v18;
      uint64_t v65 = v29;
      while (1)
      {
        uint64_t v31 = *(void *)(a2 + 48);
        int64_t v66 = v29 * v27;
        uint64_t v32 = v67;
        sub_10058F030(v31 + v29 * v27, v67, type metadata accessor for CRLBoardPreviewImageCache.Item);
        Hasher.init(_seed:)();
        sub_10058F030(v32, v30, type metadata accessor for CRLBoardPreviewImageCache.Item);
        EnumCaseMultiPayloadouble d = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload)
        {
          if (EnumCaseMultiPayload == 1)
          {
            sub_10058EFC8(v30, (uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
            sub_10058EB40((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
            dispatch thunk of Hashable.hash(into:)();
            type metadata accessor for CRLBoardIdentifierStorage(0);
            swift_bridgeObjectRetain();
            String.hash(into:)();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v40 = v30 + *(int *)(sub_1005057FC(&qword_10169FA80) + 48);
            sub_10058EFC8(v30, (uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
            uint64_t v41 = v61;
            ((void (*)(char *, uint64_t, uint64_t))*v58)(v61, v40, v8);
            sub_10058EB40((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
            dispatch thunk of Hashable.hash(into:)();
            type metadata accessor for CRLBoardIdentifierStorage(0);
            swift_bridgeObjectRetain();
            String.hash(into:)();
            uint64_t v30 = (uint64_t)v59;
            swift_bridgeObjectRelease();
            dispatch thunk of Hashable.hash(into:)();
            (*v57)(v41, v8);
          }
          sub_10058F81C((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
          uint64_t v42 = v63;
        }
        else
        {
          sub_10058EFC8(v30, (uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          uint64_t v34 = v60;
          sub_10058F030((uint64_t)v17, v60, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          uint64_t v35 = sub_1005057FC(&qword_101670F30);
          switch((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v34, 5, v35))
          {
            case 1u:
              Swift::UInt v43 = 0;
              goto LABEL_18;
            case 2u:
              Swift::UInt v43 = 1;
              goto LABEL_18;
            case 3u:
              Swift::UInt v43 = 2;
              goto LABEL_18;
            case 4u:
              Swift::UInt v43 = 3;
              goto LABEL_18;
            case 5u:
              Swift::UInt v43 = 4;
LABEL_18:
              Hasher._combine(_:)(v43);
              break;
            default:
              uint64_t v36 = (uint64_t *)(v60 + *(int *)(v35 + 48));
              uint64_t v38 = *v36;
              uint64_t v37 = v36[1];
              v56[1] = v38;
              v56[0] = v37;
              uint64_t v39 = v61;
              (*v58)(v61);
              Hasher._combine(_:)(5uLL);
              sub_10058EB40((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
              dispatch thunk of Hashable.hash(into:)();
              String.hash(into:)();
              (*v57)(v39, v8);
              swift_bridgeObjectRelease();
              break;
          }
          uint64_t v42 = v63;
          sub_10058F81C((uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        }
        Swift::Int v44 = Hasher._finalize()();
        sub_10058F81C(v67, type metadata accessor for CRLBoardPreviewImageCache.Item);
        unint64_t v45 = v44 & v64;
        uint64_t v46 = v64;
        if ((uint64_t)a1 >= (uint64_t)v62)
        {
          uint64_t v29 = v65;
          if (v45 < v62) {
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v29 = v65;
          if (v45 >= v62) {
            goto LABEL_25;
          }
        }
        if ((uint64_t)a1 >= (uint64_t)v45)
        {
LABEL_25:
          if ((uint64_t)(v29 * a1) < v66 || *(void *)(a2 + 48) + v29 * a1 >= *(void *)(a2 + 48) + v66 + v29)
          {
            swift_arrayInitWithTakeFrontToBack();
LABEL_30:
            uint64_t v29 = v65;
          }
          else if (v29 * a1 != v66)
          {
            swift_arrayInitWithTakeBackToFront();
            goto LABEL_30;
          }
          uint64_t v47 = *(void *)(a2 + 56);
          char v48 = (void *)(v47 + 8 * a1);
          char v49 = (void *)(v47 + 8 * v27);
          if (a1 != v27 || (a1 = v27, v48 >= v49 + 1))
          {
            *char v48 = *v49;
            a1 = v27;
          }
        }
LABEL_5:
        unint64_t v27 = (v27 + 1) & v46;
        if (((*(void *)(v42 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
          goto LABEL_36;
        }
      }
    }
    uint64_t v42 = v63;
LABEL_36:
    char v50 = (uint64_t *)(v42 + 8 * (a1 >> 6));
    uint64_t v52 = *v50;
    uint64_t v51 = (-1 << a1) - 1;
  }
  else
  {
    char v50 = (uint64_t *)(v25 + 8 * (a1 >> 6));
    uint64_t v51 = *v50;
    uint64_t v52 = (-1 << a1) - 1;
  }
  *char v50 = v51 & v52;
  uint64_t v53 = *(void *)(a2 + 16);
  BOOL v54 = __OFSUB__(v53, 1);
  uint64_t v55 = v53 - 1;
  if (v54)
  {
    __break(1u);
    JUMPOUT(0x10058A338);
  }
  *(void *)(a2 + 16) = v55;
  ++*(_DWORD *)(a2 + 36);
}

unint64_t sub_10058A350(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        unint64_t result = static Hasher._hash(seed:_:)();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11) {
            goto LABEL_6;
          }
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        uint64_t v14 = (void *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1) {
          *uint64_t v14 = *v10;
        }
        if (v3 < (uint64_t)v6 || *(void *)(a2 + 56) + 8 * v3 >= *(void *)(a2 + 56) + 8 * v6 + 8)
        {
          sub_1005057FC(&qword_101674258);
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          BOOL v15 = v3 == v6;
          int64_t v3 = v6;
          if (v15) {
            goto LABEL_6;
          }
          sub_1005057FC(&qword_101674258);
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *uint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10058A530(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        Hasher.init(_seed:)();
        Hasher._combine(_:)(0);
        unint64_t result = Hasher._finalize()();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v9 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v10 = *(void *)(a2 + 48);
        unint64_t v11 = (unsigned char *)(v10 + v3);
        uint64_t v12 = (unsigned char *)(v10 + v6);
        if (v3 != v6 || v11 >= v12 + 1) {
          *unint64_t v11 = *v12;
        }
        uint64_t v13 = *(void *)(a2 + 56);
        uint64_t v14 = *(void *)(*(void *)(type metadata accessor for Date() - 8) + 72);
        int64_t v15 = v14 * v3;
        unint64_t result = v13 + v14 * v3;
        int64_t v16 = v14 * v6;
        unint64_t v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v15 == v16) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v9 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10058A720(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v9 = Hasher._finalize()();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          int64_t v15 = (void *)(v14 + 8 * v3);
          int64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *int64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *unint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10058A8F8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(a2 + 48);
        uint64_t v11 = (void *)(v10 + 8 * v6);
        unint64_t result = static Hasher._hash(seed:_:)();
        unint64_t v12 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 >= v8 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            int64_t v15 = (void *)(v10 + 8 * v3);
            if (v3 != v6 || v15 >= v11 + 1) {
              *int64_t v15 = *v11;
            }
            uint64_t v16 = *(void *)(a2 + 56);
            unint64_t v17 = v16 + 24 * v3;
            uint64_t v18 = (long long *)(v16 + 24 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v17 >= (unint64_t)v18 + 24))
            {
              long long v9 = *v18;
              *(void *)(v17 + 16) = *((void *)v18 + 2);
              *(_OWORD *)unint64_t v17 = v9;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v8 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_10058AAA4(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  unint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    uint64_t v13 = _HashTable.previousHole(before:)();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      unint64_t v37 = (v13 + 1) & v12;
      uint64_t v38 = v14;
      uint64_t v15 = *(void *)(v5 + 72);
      uint64_t v39 = v5 + 16;
      uint64_t v36 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v16 = v12;
      do
      {
        uint64_t v17 = v9;
        uint64_t v18 = v15;
        int64_t v19 = v15 * v11;
        uint64_t v20 = v16;
        v38(v8, *(void *)(a2 + 48) + v15 * v11, v4);
        sub_10058EB40((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v21 = dispatch thunk of Hashable._rawHashValue(seed:)();
        (*v36)(v8, v4);
        uint64_t v16 = v20;
        unint64_t v22 = v21 & v20;
        if (a1 >= (uint64_t)v37)
        {
          if (v22 >= v37 && a1 >= (uint64_t)v22)
          {
LABEL_16:
            uint64_t v9 = v17;
            if (v18 * a1 < v19
              || (uint64_t v15 = v18, *(void *)(a2 + 48) + v18 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v19 + v18)))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              uint64_t v15 = v18;
              uint64_t v16 = v20;
            }
            else if (v18 * a1 != v19)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            uint64_t v25 = *(void *)(a2 + 56);
            uint64_t v26 = (long long *)(v25 + 48 * a1);
            unint64_t v27 = (long long *)(v25 + 48 * v11);
            if (a1 != v11 || (a1 = v11, v26 >= v27 + 3))
            {
              long long v28 = *v27;
              long long v29 = v27[2];
              v26[1] = v27[1];
              v26[2] = v29;
              *uint64_t v26 = v28;
              a1 = v11;
            }
            goto LABEL_5;
          }
        }
        else if (v22 >= v37 || a1 >= (uint64_t)v22)
        {
          goto LABEL_16;
        }
        uint64_t v9 = v17;
        uint64_t v15 = v18;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v16;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    uint64_t v30 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v30 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  *uint64_t v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_10058ADC0(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(a2 + 40);
        id v11 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v10);

        Swift::Int v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(a2 + 48);
            uint64_t v17 = (void *)(v16 + 8 * v3);
            uint64_t v18 = (void *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1) {
              *uint64_t v17 = *v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            uint64_t v20 = (void *)(v19 + 8 * v3);
            uint64_t v21 = (void *)(v19 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 1))
            {
              *uint64_t v20 = *v21;
              int64_t v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << a1) - 1;
  }
  *unint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_10058AF74(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v37 = a2 + 64;
    uint64_t v12 = _HashTable.previousHole(before:)();
    uint64_t v13 = v37;
    if ((*(void *)(v37 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v34 = (v12 + 1) & v11;
      uint64_t v35 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v36 = v5 + 16;
      uint64_t v14 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v15 = *(void *)(v5 + 72);
      do
      {
        uint64_t v16 = v15;
        int64_t v17 = v15 * v10;
        v35(v8, *(void *)(a2 + 48) + v15 * v10, v4);
        sub_10058EB40((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v18 = dispatch thunk of Hashable._rawHashValue(seed:)();
        (*v14)(v8, v4);
        unint64_t v19 = v18 & v11;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            uint64_t v15 = v16;
            if (v16 * a1 < v17
              || *(void *)(a2 + 48) + v16 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v17 + v16))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v16 * a1 != v17)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (long long *)(v22 + (a1 << 6));
            uint64_t v24 = (long long *)(v22 + (v10 << 6));
            uint64_t v13 = v37;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 4))
            {
              long long v25 = *v24;
              long long v26 = v24[1];
              long long v27 = v24[3];
              v23[2] = v24[2];
              v23[3] = v27;
              *uint64_t v23 = v25;
              v23[1] = v26;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        uint64_t v13 = v37;
        uint64_t v15 = v16;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v13 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    long long v28 = (uint64_t *)(v13 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v29 = *v28;
    uint64_t v30 = (-1 << a1) - 1;
  }
  else
  {
    long long v28 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v28;
    uint64_t v29 = (-1 << a1) - 1;
  }
  *long long v28 = v30 & v29;
  uint64_t v31 = *(void *)(a2 + 16);
  BOOL v32 = __OFSUB__(v31, 1);
  uint64_t v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_10058B274(unint64_t a1, uint64_t a2)
{
}

unint64_t sub_10058B28C(unint64_t a1, uint64_t a2)
{
  return sub_10058C870(a1, a2, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
}

void sub_10058B2A4(unint64_t a1, uint64_t a2)
{
}

void sub_10058B2BC(unint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v4 = a1;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (a1 + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v9 = ~v6;
    uint64_t v10 = _HashTable.previousHole(before:)();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v11 = (v10 + 1) & v9;
      do
      {
        Swift::Int v12 = *(void *)(a2 + 40);
        id v13 = *(id *)(*(void *)(a2 + 48) + 8 * v7);
        Swift::Int v14 = NSObject._rawHashValue(seed:)(v12);

        Swift::Int v15 = v14 & v9;
        if (v4 >= (uint64_t)v11)
        {
          if (v15 < v11 || v4 < v15) {
            goto LABEL_6;
          }
        }
        else if (v15 < v11 && v4 < v15)
        {
          goto LABEL_6;
        }
        uint64_t v18 = *(void *)(a2 + 48);
        unint64_t v19 = (void *)(v18 + 8 * v4);
        uint64_t v20 = (void *)(v18 + 8 * v7);
        if (v4 != v7 || v19 >= v20 + 1) {
          *unint64_t v19 = *v20;
        }
        uint64_t v21 = *(void *)(a2 + 56);
        uint64_t v22 = *(void *)(*(void *)(a3(0) - 8) + 72);
        int64_t v23 = v22 * v4;
        unint64_t v24 = v21 + v22 * v4;
        int64_t v25 = v22 * v7;
        unint64_t v26 = v21 + v22 * v7 + v22;
        if (v23 < v25 || v24 >= v26)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v4 = v7;
          if (v23 == v25) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        int64_t v4 = v7;
LABEL_6:
        unint64_t v7 = (v7 + 1) & v9;
      }
      while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    long long v28 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    uint64_t v29 = *v28;
    uint64_t v30 = (-1 << v4) - 1;
  }
  else
  {
    long long v28 = (uint64_t *)(v5 + 8 * (a1 >> 6));
    uint64_t v30 = *v28;
    uint64_t v29 = (-1 << a1) - 1;
  }
  *long long v28 = v30 & v29;
  uint64_t v31 = *(void *)(a2 + 16);
  BOOL v32 = __OFSUB__(v31, 1);
  uint64_t v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_10058B4B8(int64_t a1, uint64_t a2)
{
}

unint64_t sub_10058B4D0(int64_t a1, uint64_t a2)
{
  return sub_10058CE20(a1, a2, (uint64_t (*)(void))&type metadata accessor for Date);
}

unint64_t sub_10058B4E8(int64_t a1, uint64_t a2)
{
  return sub_10058CAC0(a1, a2, type metadata accessor for CRLGloballyScopedBoardIdentifier, type metadata accessor for CRLGloballyScopedBoardIdentifier, type metadata accessor for CRLGloballyScopedBoardIdentifier);
}

void sub_10058B528(int64_t a1, uint64_t a2)
{
  uint64_t v30 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  uint64_t v4 = *(void *)(v30 - 8);
  __chkstk_darwin(v30, v5);
  unint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a2 + 64;
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = _HashTable.previousHole(before:)();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (v12 + 1) & v11;
      uint64_t v13 = *(void *)(v4 + 72);
      uint64_t v14 = v11;
      do
      {
        uint64_t v15 = v13;
        int64_t v16 = v13 * v10;
        uint64_t v17 = v14;
        sub_10058F030(*(void *)(a2 + 48) + v13 * v10, (uint64_t)v7, type metadata accessor for CRLGloballyScopedBoardIdentifier);
        Hasher.init(_seed:)();
        type metadata accessor for UUID();
        sub_10058EB40((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
        dispatch thunk of Hashable.hash(into:)();
        type metadata accessor for CRLBoardIdentifierStorage(0);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        Swift::Int v18 = Hasher._finalize()();
        sub_10058F81C((uint64_t)v7, type metadata accessor for CRLGloballyScopedBoardIdentifier);
        uint64_t v14 = v17;
        Swift::Int v19 = v18 & v17;
        if (a1 >= (uint64_t)v31)
        {
          if (v19 < v31)
          {
            uint64_t v13 = v15;
          }
          else
          {
            uint64_t v13 = v15;
            if (a1 >= v19) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v13 = v15;
          if (v19 >= v31 || a1 >= v19)
          {
LABEL_12:
            if (v13 * a1 < v16
              || *(void *)(a2 + 48) + v13 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v16 + v13))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_17:
              uint64_t v14 = v17;
            }
            else if (v13 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_17;
            }
            uint64_t v20 = *(void *)(a2 + 56);
            uint64_t v21 = (unsigned char *)(v20 + a1);
            uint64_t v22 = (unsigned char *)(v20 + v10);
            if (a1 != v10 || (a1 = v10, v21 >= v22 + 1))
            {
              *uint64_t v21 = *v22;
              a1 = v10;
            }
          }
        }
        unint64_t v10 = (v10 + 1) & v14;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    int64_t v23 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v24 = *v23;
    uint64_t v25 = (-1 << a1) - 1;
  }
  else
  {
    int64_t v23 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v23;
    uint64_t v24 = (-1 << a1) - 1;
  }
  *int64_t v23 = v25 & v24;
  uint64_t v26 = *(void *)(a2 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_10058B87C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Swift::UInt v9 = *(unsigned __int8 *)(*(void *)(a2 + 48) + v6);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v9);
        unint64_t result = Hasher._finalize()();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (unsigned char *)(v11 + v3);
          uint64_t v13 = (unsigned char *)(v11 + v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          int64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10058BA38(unint64_t a1, uint64_t a2)
{
  return sub_10058BA68(a1, a2, (uint64_t (*)(void))&type metadata accessor for URL);
}

unint64_t sub_10058BA50(unint64_t a1, uint64_t a2)
{
  return sub_10058BA68(a1, a2, (uint64_t (*)(void))&type metadata accessor for UUID);
}

unint64_t sub_10058BA68(unint64_t result, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v4 = result;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v9 = ~v6;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v10 = (result + 1) & v9;
      while (1)
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v11 = Hasher._finalize()();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v9;
        if (v4 >= (uint64_t)v10) {
          break;
        }
        if (v12 < v10) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v13 = *(void *)(a2 + 48);
        uint64_t v14 = (_OWORD *)(v13 + 16 * v4);
        uint64_t v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1) {
          *uint64_t v14 = *v15;
        }
        uint64_t v16 = *(void *)(a2 + 56);
        uint64_t v17 = *(void *)(*(void *)(a3(0) - 8) + 72);
        int64_t v18 = v17 * v4;
        unint64_t result = v16 + v17 * v4;
        int64_t v19 = v17 * v7;
        unint64_t v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v4 = v7;
          if (v18 == v19) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v4 = v7;
LABEL_6:
        unint64_t v7 = (v7 + 1) & v9;
        if (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v12 < v10) {
        goto LABEL_6;
      }
LABEL_11:
      if (v4 < (uint64_t)v12) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v4) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_10058BC88(unint64_t a1, uint64_t a2)
{
  uint64_t v63 = type metadata accessor for UUID();
  unint64_t v4 = *(void *)(v63 - 8);
  __chkstk_darwin(v63, v5);
  uint64_t v56 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v55 = *(void *)(v51 - 8);
  __chkstk_darwin(v51, v7);
  uint64_t v62 = (uint64_t)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLAssetReferrerIdentifier(0);
  __chkstk_darwin(v9, v10);
  unint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v17 = (char *)&v50 - v16;
  uint64_t v18 = a2 + 64;
  uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v20 = (a1 + 1) & ~v19;
  if (((1 << v20) & *(void *)(a2 + 64 + 8 * (v20 >> 6))) != 0)
  {
    unint64_t v57 = v4;
    uint64_t v58 = v15;
    uint64_t v21 = ~v19;
    uint64_t v22 = _HashTable.previousHole(before:)();
    if ((*(void *)(v18 + 8 * (v20 >> 6)) & (1 << v20)) != 0)
    {
      unint64_t v59 = (v22 + 1) & v21;
      uint64_t v23 = *(void *)(v58 + 72);
      uint64_t v52 = (void (**)(char *, uint64_t))(v57 + 8);
      uint64_t v53 = (void (**)(char *, char *, uint64_t))(v57 + 32);
      uint64_t v24 = v21;
      uint64_t v25 = v23;
      uint64_t v54 = v9;
      uint64_t v60 = v24;
      id v61 = v17;
      uint64_t v58 = v23;
      while (1)
      {
        int64_t v26 = v25 * v20;
        sub_10058F030(*(void *)(a2 + 48) + v25 * v20, (uint64_t)v17, type metadata accessor for CRLAssetReferrerIdentifier);
        Hasher.init(_seed:)();
        sub_10058F030((uint64_t)v17, (uint64_t)v12, type metadata accessor for CRLAssetReferrerIdentifier);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v27 = (uint64_t)&v12[*(int *)(sub_1005057FC(&qword_101674240) + 48)];
          uint64_t v28 = *v53;
          unint64_t v57 = a1;
          uint64_t v29 = v56;
          uint64_t v30 = v12;
          unint64_t v31 = v12;
          uint64_t v32 = a2;
          uint64_t v33 = v63;
          v28(v56, v30, v63);
          uint64_t v34 = v18;
          uint64_t v35 = v62;
          sub_10058EFC8(v27, v62, type metadata accessor for CRLBoardIdentifier);
          Hasher._combine(_:)(1uLL);
          sub_10058EB40((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
          dispatch thunk of Hashable.hash(into:)();
          dispatch thunk of Hashable.hash(into:)();
          type metadata accessor for CRLBoardIdentifierStorage(0);
          swift_bridgeObjectRetain();
          String.hash(into:)();
          swift_bridgeObjectRelease();
          uint64_t v36 = v35;
          uint64_t v18 = v34;
          sub_10058F81C(v36, type metadata accessor for CRLBoardIdentifier);
          a1 = v57;
          uint64_t v37 = v33;
          a2 = v32;
          unint64_t v12 = v31;
          (*v52)(v29, v37);
        }
        else
        {
          uint64_t v38 = v62;
          sub_10058EFC8((uint64_t)v12, v62, type metadata accessor for CRLBoardIdentifier);
          Hasher._combine(_:)(0);
          sub_10058EB40((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
          dispatch thunk of Hashable.hash(into:)();
          type metadata accessor for CRLBoardIdentifierStorage(0);
          swift_bridgeObjectRetain();
          String.hash(into:)();
          swift_bridgeObjectRelease();
          sub_10058F81C(v38, type metadata accessor for CRLBoardIdentifier);
        }
        Swift::Int v39 = Hasher._finalize()();
        uint64_t v17 = v61;
        sub_10058F81C((uint64_t)v61, type metadata accessor for CRLAssetReferrerIdentifier);
        uint64_t v40 = v60;
        unint64_t v41 = v39 & v60;
        if ((uint64_t)a1 >= (uint64_t)v59) {
          break;
        }
        uint64_t v25 = v58;
        if (v41 < v59) {
          goto LABEL_14;
        }
LABEL_15:
        if ((uint64_t)(v25 * a1) < v26 || *(void *)(a2 + 48) + v25 * a1 >= *(void *)(a2 + 48) + v26 + v25)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v25 * a1 != v26)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        uint64_t v42 = *(void *)(v55 + 72);
        unint64_t v43 = v42 * a1;
        if ((uint64_t)(v42 * a1) < (uint64_t)(v42 * v20)
          || *(void *)(a2 + 56) + v42 * a1 >= *(void *)(a2 + 56) + v42 * v20 + v42)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v20;
          if (v43 == v42 * v20) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v20;
LABEL_6:
        unint64_t v20 = (v20 + 1) & v40;
        if (((*(void *)(v18 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
          goto LABEL_24;
        }
      }
      uint64_t v25 = v58;
      if (v41 < v59) {
        goto LABEL_6;
      }
LABEL_14:
      if ((uint64_t)a1 < (uint64_t)v41) {
        goto LABEL_6;
      }
      goto LABEL_15;
    }
LABEL_24:
    Swift::Int v44 = (uint64_t *)(v18 + 8 * (a1 >> 6));
    uint64_t v45 = *v44;
    uint64_t v46 = (-1 << a1) - 1;
  }
  else
  {
    Swift::Int v44 = (uint64_t *)(v18 + 8 * (a1 >> 6));
    uint64_t v46 = *v44;
    uint64_t v45 = (-1 << a1) - 1;
  }
  *Swift::Int v44 = v46 & v45;
  uint64_t v47 = *(void *)(a2 + 16);
  BOOL v48 = __OFSUB__(v47, 1);
  uint64_t v49 = v47 - 1;
  if (v48)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v49;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_10058C2F8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v10 = *(void **)(*(void *)(a2 + 48) + 8 * v6);
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        Hasher.init(_seed:)();
        id v11 = v10;
        String.hash(into:)();
        Swift::Int v12 = Hasher._finalize()();

        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(a2 + 48);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || v15 >= v16 + 1) {
            *uint64_t v15 = *v16;
          }
          uint64_t v17 = *(void *)(a2 + 56);
          uint64_t v18 = (_OWORD *)(v17 + 32 * v3);
          uint64_t v19 = (_OWORD *)(v17 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v18 >= v19 + 2))
          {
            long long v9 = v19[1];
            *uint64_t v18 = *v19;
            v18[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *unint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_10058C4EC(int64_t a1, uint64_t a2)
{
}

void sub_10058C504(int64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  Swift::Int v39 = a3;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  long long v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2 + 64;
  uint64_t v11 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v12 = (a1 + 1) & ~v11;
  if (((1 << v12) & *(void *)(a2 + 64 + 8 * (v12 >> 6))) != 0)
  {
    uint64_t v13 = ~v11;
    uint64_t v14 = _HashTable.previousHole(before:)();
    if ((*(void *)(v10 + 8 * (v12 >> 6)) & (1 << v12)) != 0)
    {
      unint64_t v42 = (v14 + 1) & v13;
      uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      uint64_t v15 = v6 + 16;
      uint64_t v17 = *(void *)(v15 + 56);
      uint64_t v43 = v15;
      uint64_t v40 = (void (**)(char *, uint64_t))(v15 - 8);
      unint64_t v41 = v16;
      uint64_t v38 = v13;
      do
      {
        uint64_t v18 = v10;
        uint64_t v19 = v17;
        int64_t v20 = v17 * v12;
        v41(v9, *(void *)(a2 + 48) + v17 * v12, v5);
        sub_10058EB40((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v21 = dispatch thunk of Hashable._rawHashValue(seed:)();
        (*v40)(v9, v5);
        unint64_t v22 = v21 & v13;
        if (a1 >= (uint64_t)v42)
        {
          if (v22 >= v42 && a1 >= (uint64_t)v22)
          {
LABEL_16:
            if (v19 * a1 < v20
              || *(void *)(a2 + 48) + v19 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v20 + v19))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v19 * a1 != v20)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v25 = *(void *)(a2 + 56);
            uint64_t v26 = *(void *)(*(void *)(v39(0) - 8) + 72);
            int64_t v27 = v26 * a1;
            unint64_t v28 = v25 + v26 * a1;
            int64_t v29 = v26 * v12;
            unint64_t v30 = v25 + v26 * v12 + v26;
            BOOL v31 = v27 < v29 || v28 >= v30;
            uint64_t v10 = v18;
            if (v31)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v12;
              uint64_t v13 = v38;
            }
            else
            {
              a1 = v12;
              uint64_t v13 = v38;
              if (v27 != v29)
              {
                swift_arrayInitWithTakeBackToFront();
                a1 = v12;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v22 >= v42 || a1 >= (uint64_t)v22)
        {
          goto LABEL_16;
        }
        uint64_t v10 = v18;
LABEL_5:
        unint64_t v12 = (v12 + 1) & v13;
        uint64_t v17 = v19;
      }
      while (((*(void *)(v10 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
    }
    uint64_t v32 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v33 = *v32;
    uint64_t v34 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v32 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v34 = *v32;
    uint64_t v33 = (-1 << a1) - 1;
  }
  *uint64_t v32 = v34 & v33;
  uint64_t v35 = *(void *)(a2 + 16);
  BOOL v36 = __OFSUB__(v35, 1);
  uint64_t v37 = v35 - 1;
  if (v36)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v37;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_10058C858(unint64_t a1, uint64_t a2)
{
  return sub_10058C870(a1, a2, type metadata accessor for CRLSyncScheduledActivity);
}

unint64_t sub_10058C870(unint64_t result, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v4 = result;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v8 = ~v6;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v9 = (result + 1) & v8;
      while (1)
      {
        Hasher.init(_seed:)();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        unint64_t result = Hasher._finalize()();
        unint64_t v10 = result & v8;
        if (v4 >= (uint64_t)v9) {
          break;
        }
        if (v10 < v9) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        unint64_t v12 = (unsigned char *)(v11 + v4);
        uint64_t v13 = (unsigned char *)(v11 + v7);
        if (v4 != v7 || v12 >= v13 + 1) {
          *unint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(a3(0) - 8) + 72);
        int64_t v16 = v15 * v4;
        unint64_t result = v14 + v15 * v4;
        int64_t v17 = v15 * v7;
        unint64_t v18 = v14 + v15 * v7 + v15;
        if (v16 < v17 || result >= v18)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v4 = v7;
          if (v16 == v17) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v4 = v7;
LABEL_6:
        unint64_t v7 = (v7 + 1) & v8;
        if (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v9) {
        goto LABEL_6;
      }
LABEL_11:
      if (v4 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    int64_t v20 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v4) - 1;
  }
  else
  {
    int64_t v20 = (uint64_t *)(v5 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *int64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10058CAA8(int64_t a1, uint64_t a2)
{
  return sub_10058CE20(a1, a2, type metadata accessor for CRLBoardViewModelMetadata);
}

unint64_t sub_10058CAC0(int64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  BOOL v36 = a4;
  uint64_t v37 = a5;
  uint64_t v34 = a3(0);
  uint64_t v7 = *(void *)(v34 - 8);
  unint64_t result = __chkstk_darwin(v34, v8);
  uint64_t v11 = (char *)&v33 - v10;
  uint64_t v12 = a2 + 64;
  uint64_t v13 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v14 = (a1 + 1) & ~v13;
  if (((1 << v14) & *(void *)(a2 + 64 + 8 * (v14 >> 6))) != 0)
  {
    uint64_t v15 = ~v13;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v12 + 8 * (v14 >> 6)) & (1 << v14)) != 0)
    {
      unint64_t v35 = (result + 1) & v15;
      uint64_t v16 = *(void *)(v7 + 72);
      uint64_t v17 = v15;
      do
      {
        uint64_t v18 = v16;
        int64_t v19 = v16 * v14;
        uint64_t v20 = v17;
        sub_10058F030(*(void *)(a2 + 48) + v16 * v14, (uint64_t)v11, v36);
        Hasher.init(_seed:)();
        type metadata accessor for UUID();
        sub_10058EB40((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
        dispatch thunk of Hashable.hash(into:)();
        type metadata accessor for CRLBoardIdentifierStorage(0);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        Swift::Int v21 = Hasher._finalize()();
        unint64_t result = sub_10058F81C((uint64_t)v11, v37);
        uint64_t v17 = v20;
        Swift::Int v22 = v21 & v20;
        if (a1 >= (uint64_t)v35)
        {
          if (v22 < v35)
          {
            uint64_t v16 = v18;
          }
          else
          {
            uint64_t v16 = v18;
            if (a1 >= v22) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v16 = v18;
          if (v22 >= v35 || a1 >= v22)
          {
LABEL_12:
            uint64_t v23 = *(void *)(a2 + 48);
            unint64_t result = v23 + v16 * a1;
            if (v16 * a1 < v19 || result >= v23 + v19 + v16)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
LABEL_17:
              uint64_t v17 = v20;
            }
            else if (v16 * a1 != v19)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_17;
            }
            uint64_t v24 = *(void *)(a2 + 56);
            uint64_t v25 = (void *)(v24 + 8 * a1);
            uint64_t v26 = (void *)(v24 + 8 * v14);
            if (a1 != v14 || (a1 = v14, v25 >= v26 + 1))
            {
              *uint64_t v25 = *v26;
              a1 = v14;
            }
          }
        }
        unint64_t v14 = (v14 + 1) & v17;
      }
      while (((*(void *)(v12 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
    }
    int64_t v27 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v28 = *v27;
    uint64_t v29 = (-1 << a1) - 1;
  }
  else
  {
    int64_t v27 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v29 = *v27;
    uint64_t v28 = (-1 << a1) - 1;
  }
  *int64_t v27 = v29 & v28;
  uint64_t v30 = *(void *)(a2 + 16);
  BOOL v31 = __OFSUB__(v30, 1);
  uint64_t v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v32;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10058CE08(int64_t a1, uint64_t a2)
{
  return sub_10058CE20(a1, a2, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
}

unint64_t sub_10058CE20(int64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v35 = a3;
  uint64_t v34 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v5 = *(void *)(v34 - 8);
  unint64_t result = __chkstk_darwin(v34, v6);
  unint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2 + 64;
  uint64_t v11 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v12 = (a1 + 1) & ~v11;
  if (((1 << v12) & *(void *)(a2 + 64 + 8 * (v12 >> 6))) != 0)
  {
    uint64_t v13 = ~v11;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v10 + 8 * (v12 >> 6)) & (1 << v12)) != 0)
    {
      unint64_t v36 = (result + 1) & v13;
      uint64_t v14 = *(void *)(v5 + 72);
      uint64_t v15 = v13;
      do
      {
        uint64_t v16 = v14;
        int64_t v17 = v14 * v12;
        uint64_t v18 = v15;
        sub_10058F030(*(void *)(a2 + 48) + v14 * v12, (uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
        Hasher.init(_seed:)();
        type metadata accessor for UUID();
        sub_10058EB40((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
        dispatch thunk of Hashable.hash(into:)();
        type metadata accessor for CRLBoardIdentifierStorage(0);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        Swift::Int v19 = Hasher._finalize()();
        unint64_t result = sub_10058F81C((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
        uint64_t v15 = v18;
        Swift::Int v20 = v19 & v18;
        if (a1 >= (uint64_t)v36)
        {
          if (v20 < v36)
          {
            uint64_t v14 = v16;
          }
          else
          {
            uint64_t v14 = v16;
            if (a1 >= v20) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v14 = v16;
          if (v20 >= v36 || a1 >= v20)
          {
LABEL_12:
            if (v14 * a1 < v17
              || *(void *)(a2 + 48) + v14 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v17 + v14))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v14 * a1 != v17)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v21 = *(void *)(a2 + 56);
            uint64_t v22 = *(void *)(*(void *)(v35(0) - 8) + 72);
            int64_t v23 = v22 * a1;
            unint64_t result = v21 + v22 * a1;
            int64_t v24 = v22 * v12;
            unint64_t v25 = v21 + v22 * v12 + v22;
            if (v23 < v24 || result >= v25)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v12;
              uint64_t v14 = v16;
              uint64_t v15 = v18;
            }
            else
            {
              a1 = v12;
              BOOL v27 = v23 == v24;
              uint64_t v14 = v16;
              uint64_t v15 = v18;
              if (!v27)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                uint64_t v15 = v18;
                a1 = v12;
              }
            }
          }
        }
        unint64_t v12 = (v12 + 1) & v15;
      }
      while (((*(void *)(v10 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
    }
    uint64_t v28 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v29 = *v28;
    uint64_t v30 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v28 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v28;
    uint64_t v29 = (-1 << a1) - 1;
  }
  *uint64_t v28 = v30 & v29;
  uint64_t v31 = *(void *)(a2 + 16);
  BOOL v32 = __OFSUB__(v31, 1);
  uint64_t v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10058D1CC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v9 = Hasher._finalize()();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *unint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(sub_1005057FC((uint64_t *)&unk_101674520) - 8) + 72);
        int64_t v16 = v15 * v3;
        unint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    Swift::Int v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    Swift::Int v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *Swift::Int v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

Swift::Int sub_10058D3EC(unint64_t *a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(0) - 8);
  unint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_100F69FE0(v3);
  }
  uint64_t v4 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_10058D494(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_10058D494(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_1016741B8);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v180 = (char *)&v159 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(0);
  uint64_t v5 = *(void *)(v176 - 8);
  __chkstk_darwin(v176, v6);
  Swift::Int v181 = (Swift::Int)&v159 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v164 = (uint64_t)&v159 - v10;
  __chkstk_darwin(v11, v12);
  uint64_t v177 = (uint64_t)&v159 - v13;
  __chkstk_darwin(v14, v15);
  uint64_t v179 = (uint64_t *)((char *)&v159 - v16);
  __chkstk_darwin(v17, v18);
  unint64_t v178 = (uint64_t *)((char *)&v159 - v19);
  Swift::Int v20 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v20);
  uint64_t v186 = a1;
  if (result >= v20)
  {
    if (v20 < 0) {
      goto LABEL_144;
    }
    if ((unint64_t)v20 >= 2)
    {
      uint64_t v27 = 0;
      uint64_t v28 = *(void *)(v5 + 72);
      uint64_t v29 = -1;
      uint64_t v30 = 1;
      Swift::Int v173 = v20;
      uint64_t v31 = v178;
      BOOL v32 = v179;
      uint64_t v33 = (uint64_t)v180;
      do
      {
        uint64_t v174 = v30;
        uint64_t v175 = v29;
        uint64_t v177 = v27;
        do
        {
          uint64_t v35 = *a1 + v27;
          sub_10058F030(v35 + v28, (uint64_t)v31, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          sub_10058F030(v35, (uint64_t)v32, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          uint64_t v36 = v31[1];
          uint64_t v184 = *v31;
          uint64_t v185 = v36;
          uint64_t v37 = v32[1];
          uint64_t v182 = *v32;
          uint64_t v183 = v37;
          uint64_t v38 = type metadata accessor for Locale();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v33, 1, 1, v38);
          sub_10052E310();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v39 = StringProtocol.compare<A>(_:options:range:locale:)();
          sub_100522F00(v33, &qword_1016741B8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10058F81C((uint64_t)v32, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          Swift::Int result = sub_10058F81C((uint64_t)v31, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          if (v39 != -1) {
            break;
          }
          uint64_t v40 = *a1;
          if (!*a1) {
            goto LABEL_147;
          }
          uint64_t v41 = v40 + v27;
          sub_10058EFC8(v40 + v27 + v28, v181, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          swift_arrayInitWithTakeFrontToBack();
          Swift::Int result = sub_10058EFC8(v181, v41, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          v27 -= v28;
          BOOL v34 = __CFADD__(v29++, 1);
          a1 = v186;
        }
        while (!v34);
        uint64_t v30 = v174 + 1;
        uint64_t v27 = v177 + v28;
        uint64_t v29 = v175 - 1;
      }
      while (v174 + 1 != v173);
    }
    return result;
  }
  if (v20 >= 0) {
    uint64_t v22 = v20;
  }
  else {
    uint64_t v22 = v20 + 1;
  }
  if (v20 < -1) {
    goto LABEL_153;
  }
  Swift::Int v161 = result;
  uint64_t v171 = v5;
  if (v20 < 2)
  {
    uint64_t v26 = (char *)_swiftEmptyArrayStorage
        + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v160 = _swiftEmptyArrayStorage;
    if (v20 != 1)
    {
      unint64_t v44 = *(void *)&_swiftEmptyArrayStorage[2];
      uint64_t v43 = _swiftEmptyArrayStorage;
LABEL_110:
      if (v44 >= 2)
      {
        uint64_t v151 = *a1;
        do
        {
          unint64_t v152 = v44 - 2;
          if (v44 < 2) {
            goto LABEL_139;
          }
          if (!v151) {
            goto LABEL_152;
          }
          uint64_t v153 = v43;
          double v154 = v43[2 * v152 + 4];
          double v155 = v43[2 * v44 + 3];
          uint64_t v156 = v172;
          sub_10058E3D4(v151 + *(void *)(v171 + 72) * *(void *)&v154, v151 + *(void *)(v171 + 72) * *(void *)&v43[2 * v44 + 2], v151 + *(void *)(v171 + 72) * *(void *)&v155, (unint64_t)v26);
          uint64_t v172 = v156;
          if (v156) {
            break;
          }
          if (*(uint64_t *)&v155 < *(uint64_t *)&v154) {
            goto LABEL_140;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v153 = sub_100F69F28((uint64_t)v153);
          }
          if (v152 >= *((void *)v153 + 2)) {
            goto LABEL_141;
          }
          uint64_t v157 = &v153[2 * v152 + 4];
          *uint64_t v157 = v154;
          v157[1] = v155;
          unint64_t v158 = *((void *)v153 + 2);
          if (v44 > v158) {
            goto LABEL_142;
          }
          memmove(&v153[2 * v44 + 2], &v153[2 * v44 + 4], 16 * (v158 - v44));
          uint64_t v43 = v153;
          *((void *)v153 + 2) = v158 - 1;
          unint64_t v44 = v158 - 1;
        }
        while (v158 > 2);
      }
LABEL_121:
      swift_bridgeObjectRelease();
      v160[2] = 0.0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v23 = v22 >> 1;
    uint64_t v24 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v24 + 16) = v23;
    unint64_t v25 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v160 = (double *)v24;
    uint64_t v26 = (char *)(v24 + v25);
  }
  uint64_t v42 = 0;
  uint64_t v43 = _swiftEmptyArrayStorage;
  uint64_t v162 = v26;
  while (1)
  {
    uint64_t v45 = v42;
    uint64_t v46 = v42 + 1;
    uint64_t v165 = v43;
    uint64_t v170 = v42;
    if (v42 + 1 >= v20)
    {
      uint64_t v61 = v42 + 1;
      uint64_t v71 = v42;
    }
    else
    {
      uint64_t v47 = *a1;
      uint64_t v48 = *a1 + *(void *)(v171 + 72) * v46;
      Swift::Int v181 = *(void *)(v171 + 72);
      uint64_t v49 = v181;
      uint64_t v50 = v47;
      uint64_t v163 = v47;
      uint64_t v51 = v178;
      sub_10058F030(v48, (uint64_t)v178, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      uint64_t v52 = v50 + v49 * v45;
      uint64_t v53 = v179;
      sub_10058F030(v52, (uint64_t)v179, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      uint64_t v54 = v51[1];
      uint64_t v184 = *v51;
      uint64_t v185 = v54;
      Swift::Int v173 = v20;
      uint64_t v55 = v53[1];
      uint64_t v182 = *v53;
      uint64_t v183 = v55;
      uint64_t v56 = type metadata accessor for Locale();
      uint64_t v57 = *(void *)(v56 - 8);
      uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56);
      uint64_t v59 = (uint64_t)v180;
      uint64_t v174 = v56;
      uint64_t v168 = v57 + 56;
      uint64_t v169 = v58;
      ((void (*)(char *, uint64_t, uint64_t))v58)(v180, 1, 1);
      sub_10052E310();
      swift_bridgeObjectRetain();
      Swift::Int v20 = v173;
      swift_bridgeObjectRetain();
      uint64_t v175 = StringProtocol.compare<A>(_:options:range:locale:)();
      sub_100522F00(v59, &qword_1016741B8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10058F81C((uint64_t)v53, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      sub_10058F81C((uint64_t)v51, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      uint64_t v60 = v181;
      uint64_t v61 = v45 + 2;
      if (v45 + 2 < v20)
      {
        uint64_t v62 = v163;
        uint64_t v166 = v181 * v61;
        uint64_t v167 = v181 * v46;
        while (1)
        {
          uint64_t v63 = v61;
          BOOL v64 = v175 == -1;
          uint64_t v65 = v178;
          sub_10058F030(v62 + v166, (uint64_t)v178, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          int64_t v66 = v179;
          sub_10058F030(v62 + v167, (uint64_t)v179, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          uint64_t v67 = v65[1];
          uint64_t v184 = *v65;
          uint64_t v185 = v67;
          uint64_t v68 = v66[1];
          uint64_t v182 = *v66;
          uint64_t v183 = v68;
          uint64_t v69 = (uint64_t)v180;
          v169(v180, 1, 1, v174);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v70 = StringProtocol.compare<A>(_:options:range:locale:)();
          sub_100522F00(v69, &qword_1016741B8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10058F81C((uint64_t)v66, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          sub_10058F81C((uint64_t)v65, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          if (v64 == (v70 != -1)) {
            break;
          }
          uint64_t v61 = v63 + 1;
          uint64_t v60 = v181;
          v62 += v181;
          Swift::Int v20 = v173;
          if (v173 == v63 + 1)
          {
            uint64_t v61 = v173;
            a1 = v186;
            goto LABEL_29;
          }
        }
        a1 = v186;
        uint64_t v61 = v63;
        Swift::Int v20 = v173;
        uint64_t v60 = v181;
      }
LABEL_29:
      uint64_t v26 = v162;
      uint64_t v71 = v170;
      if (v175 == -1)
      {
        if (v61 < v170) {
          goto LABEL_148;
        }
        if (v170 < v61)
        {
          uint64_t v72 = 0;
          uint64_t v73 = v60 * (v61 - 1);
          uint64_t v74 = v61 * v60;
          uint64_t v75 = v170;
          uint64_t v76 = v170 * v60;
          do
          {
            if (v75 != v61 + v72 - 1)
            {
              uint64_t v78 = v61;
              uint64_t v79 = v163;
              if (!v163) {
                goto LABEL_151;
              }
              unint64_t v80 = v163 + v76;
              uint64_t v175 = v163 + v73;
              sub_10058EFC8(v163 + v76, v164, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
              if (v76 < v73 || v80 >= v79 + v74)
              {
                uint64_t v77 = v175;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v77 = v175;
                if (v76 != v73) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_10058EFC8(v164, v77, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
              uint64_t v61 = v78;
              uint64_t v60 = v181;
            }
            ++v75;
            --v72;
            v73 -= v60;
            v74 -= v60;
            v76 += v60;
          }
          while (v75 < v61 + v72);
          a1 = v186;
          uint64_t v71 = v170;
          Swift::Int v20 = v173;
        }
      }
    }
    if (v61 < v20)
    {
      if (__OFSUB__(v61, v71)) {
        goto LABEL_143;
      }
      if (v61 - v71 < v161) {
        break;
      }
    }
LABEL_61:
    if (v61 < v71) {
      goto LABEL_138;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v181 = v61;
    if (isUniquelyReferenced_nonNull_native) {
      uint64_t v43 = v165;
    }
    else {
      uint64_t v43 = sub_100F697E0(0, *((void *)v165 + 2) + 1, 1, (uint64_t)v165);
    }
    unint64_t v99 = *((void *)v43 + 2);
    unint64_t v98 = *((void *)v43 + 3);
    unint64_t v44 = v99 + 1;
    if (v99 >= v98 >> 1) {
      uint64_t v43 = sub_100F697E0((double *)(v98 > 1), v99 + 1, 1, (uint64_t)v43);
    }
    *((void *)v43 + 2) = v44;
    int v100 = v43 + 4;
    uint64_t v101 = &v43[2 * v99 + 4];
    uint64_t v102 = v181;
    *(void *)uint64_t v101 = v71;
    *((void *)v101 + 1) = v102;
    if (v99)
    {
      while (1)
      {
        unint64_t v103 = v44 - 1;
        if (v44 >= 4)
        {
          uint64_t v108 = &v100[2 * v44];
          uint64_t v109 = *((void *)v108 - 8);
          uint64_t v110 = *((void *)v108 - 7);
          BOOL v114 = __OFSUB__(v110, v109);
          uint64_t v111 = v110 - v109;
          if (v114) {
            goto LABEL_127;
          }
          uint64_t v113 = *((void *)v108 - 6);
          uint64_t v112 = *((void *)v108 - 5);
          BOOL v114 = __OFSUB__(v112, v113);
          uint64_t v106 = v112 - v113;
          char v107 = v114;
          if (v114) {
            goto LABEL_128;
          }
          unint64_t v115 = v44 - 2;
          unint64_t v116 = &v100[2 * v44 - 4];
          uint64_t v118 = *(void *)v116;
          uint64_t v117 = *((void *)v116 + 1);
          BOOL v114 = __OFSUB__(v117, v118);
          uint64_t v119 = v117 - v118;
          if (v114) {
            goto LABEL_130;
          }
          BOOL v114 = __OFADD__(v106, v119);
          uint64_t v120 = v106 + v119;
          if (v114) {
            goto LABEL_133;
          }
          if (v120 >= v111)
          {
            unint64_t v138 = &v100[2 * v103];
            uint64_t v140 = *(void *)v138;
            uint64_t v139 = *((void *)v138 + 1);
            BOOL v114 = __OFSUB__(v139, v140);
            uint64_t v141 = v139 - v140;
            if (v114) {
              goto LABEL_137;
            }
            BOOL v131 = v106 < v141;
            goto LABEL_98;
          }
        }
        else
        {
          if (v44 != 3)
          {
            uint64_t v132 = *((void *)v43 + 4);
            uint64_t v133 = *((void *)v43 + 5);
            BOOL v114 = __OFSUB__(v133, v132);
            uint64_t v125 = v133 - v132;
            char v126 = v114;
            goto LABEL_92;
          }
          uint64_t v105 = *((void *)v43 + 4);
          uint64_t v104 = *((void *)v43 + 5);
          BOOL v114 = __OFSUB__(v104, v105);
          uint64_t v106 = v104 - v105;
          char v107 = v114;
        }
        if (v107) {
          goto LABEL_129;
        }
        unint64_t v115 = v44 - 2;
        uint64_t v121 = &v100[2 * v44 - 4];
        uint64_t v123 = *(void *)v121;
        uint64_t v122 = *((void *)v121 + 1);
        BOOL v124 = __OFSUB__(v122, v123);
        uint64_t v125 = v122 - v123;
        char v126 = v124;
        if (v124) {
          goto LABEL_132;
        }
        int v127 = &v100[2 * v103];
        uint64_t v129 = *(void *)v127;
        uint64_t v128 = *((void *)v127 + 1);
        BOOL v114 = __OFSUB__(v128, v129);
        uint64_t v130 = v128 - v129;
        if (v114) {
          goto LABEL_135;
        }
        if (__OFADD__(v125, v130)) {
          goto LABEL_136;
        }
        if (v125 + v130 >= v106)
        {
          BOOL v131 = v106 < v130;
LABEL_98:
          if (v131) {
            unint64_t v103 = v115;
          }
          goto LABEL_100;
        }
LABEL_92:
        if (v126) {
          goto LABEL_131;
        }
        uint64_t v134 = &v100[2 * v103];
        uint64_t v136 = *(void *)v134;
        uint64_t v135 = *((void *)v134 + 1);
        BOOL v114 = __OFSUB__(v135, v136);
        uint64_t v137 = v135 - v136;
        if (v114) {
          goto LABEL_134;
        }
        if (v137 < v125) {
          goto LABEL_20;
        }
LABEL_100:
        unint64_t v142 = v103 - 1;
        if (v103 - 1 >= v44)
        {
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
          goto LABEL_146;
        }
        uint64_t v143 = *a1;
        if (!*a1) {
          goto LABEL_150;
        }
        uint64_t v144 = v43;
        uint64_t v145 = &v100[2 * v142];
        uint64_t v146 = *(void *)v145;
        uint64_t v147 = &v100[2 * v103];
        double v148 = v147[1];
        uint64_t v149 = v172;
        sub_10058E3D4(v143 + *(void *)(v171 + 72) * *(void *)v145, v143 + *(void *)(v171 + 72) * *(void *)v147, v143 + *(void *)(v171 + 72) * *(void *)&v148, (unint64_t)v26);
        uint64_t v172 = v149;
        if (v149) {
          goto LABEL_121;
        }
        if (*(uint64_t *)&v148 < v146) {
          goto LABEL_124;
        }
        if (v103 > *((void *)v144 + 2)) {
          goto LABEL_125;
        }
        *(void *)uint64_t v145 = v146;
        v100[2 * v142 + 1] = v148;
        unint64_t v150 = *((void *)v144 + 2);
        if (v103 >= v150) {
          goto LABEL_126;
        }
        unint64_t v44 = v150 - 1;
        memmove(&v100[2 * v103], v147 + 2, 16 * (v150 - 1 - v103));
        uint64_t v43 = v144;
        *((void *)v144 + 2) = v150 - 1;
        a1 = v186;
        if (v150 <= 2) {
          goto LABEL_20;
        }
      }
    }
    unint64_t v44 = 1;
LABEL_20:
    Swift::Int v20 = a1[1];
    uint64_t v42 = v181;
    if (v181 >= v20) {
      goto LABEL_110;
    }
  }
  if (__OFADD__(v71, v161)) {
    goto LABEL_145;
  }
  if (v71 + v161 >= v20) {
    char v81 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v20;
  }
  else {
    char v81 = (void (*)(char *, uint64_t, uint64_t, uint64_t))(v71 + v161);
  }
  if ((uint64_t)v81 >= v71)
  {
    if ((void (*)(char *, uint64_t, uint64_t, uint64_t))v61 != v81)
    {
      Swift::Int v82 = *(void *)(v171 + 72);
      uint64_t v83 = v82 * (v61 - 1);
      Swift::Int v173 = v82;
      uint64_t v84 = v61 * v82;
      uint64_t v169 = v81;
      do
      {
        uint64_t v86 = 0;
        Swift::Int v181 = v61;
        uint64_t v174 = v84;
        uint64_t v175 = v83;
        while (1)
        {
          uint64_t v87 = *a1;
          uint64_t v88 = v178;
          sub_10058F030(v84 + v86 + *a1, (uint64_t)v178, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          char v89 = v179;
          sub_10058F030(v83 + v86 + v87, (uint64_t)v179, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          uint64_t v90 = v88[1];
          uint64_t v184 = *v88;
          uint64_t v185 = v90;
          uint64_t v91 = v89[1];
          uint64_t v182 = *v89;
          uint64_t v183 = v91;
          uint64_t v92 = type metadata accessor for Locale();
          uint64_t v93 = (uint64_t)v180;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v180, 1, 1, v92);
          sub_10052E310();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v94 = StringProtocol.compare<A>(_:options:range:locale:)();
          sub_100522F00(v93, &qword_1016741B8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10058F81C((uint64_t)v89, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          sub_10058F81C((uint64_t)v88, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          if (v94 != -1) {
            break;
          }
          uint64_t v95 = *v186;
          if (!*v186) {
            goto LABEL_149;
          }
          uint64_t v84 = v174;
          uint64_t v83 = v175;
          uint64_t v96 = v95 + v175 + v86;
          sub_10058EFC8(v95 + v174 + v86, v177, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          swift_arrayInitWithTakeFrontToBack();
          sub_10058EFC8(v177, v96, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          v86 -= v173;
          ++v71;
          uint64_t v85 = v181;
          a1 = v186;
          if (v181 == v71) {
            goto LABEL_54;
          }
        }
        a1 = v186;
        uint64_t v85 = v181;
        uint64_t v84 = v174;
        uint64_t v83 = v175;
LABEL_54:
        uint64_t v61 = v85 + 1;
        v83 += v173;
        v84 += v173;
        uint64_t v71 = v170;
      }
      while ((void (*)(char *, uint64_t, uint64_t, uint64_t))v61 != v169);
      uint64_t v61 = (uint64_t)v169;
      uint64_t v26 = v162;
    }
    goto LABEL_61;
  }
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10058E3D4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1005057FC(&qword_1016741B8);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v59 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(0);
  __chkstk_darwin(v57, v11);
  uint64_t v13 = (uint64_t *)((char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (uint64_t *)((char *)&v54 - v16);
  uint64_t v19 = *(void *)(v18 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_61;
  }
  int64_t v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_62;
  }
  uint64_t v21 = (uint64_t)(a2 - a1) / v19;
  unint64_t v66 = a1;
  unint64_t v65 = a4;
  uint64_t v22 = v20 / v19;
  if (v21 >= v20 / v19)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      uint64_t v24 = v22 * v19;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v37 = a4 + v24;
      unint64_t v64 = a4 + v24;
      unint64_t v66 = a2;
      unint64_t v56 = a1;
      if (v24 >= 1 && a1 < a2)
      {
        uint64_t v39 = -v19;
        unint64_t v55 = a4;
        do
        {
          unint64_t v58 = a3 + v39;
          sub_10058F030(v37 + v39, (uint64_t)v17, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          unint64_t v40 = a2 + v39;
          sub_10058F030(a2 + v39, (uint64_t)v13, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          uint64_t v41 = v17[1];
          uint64_t v62 = *v17;
          uint64_t v63 = v41;
          uint64_t v42 = v13[1];
          uint64_t v60 = *v13;
          uint64_t v61 = v42;
          uint64_t v43 = type metadata accessor for Locale();
          unint64_t v44 = a3;
          uint64_t v45 = (uint64_t)v17;
          uint64_t v46 = v13;
          uint64_t v47 = v59;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v59, 1, 1, v43);
          sub_10052E310();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v48 = StringProtocol.compare<A>(_:options:range:locale:)();
          uint64_t v49 = (uint64_t)v47;
          uint64_t v13 = v46;
          uint64_t v17 = (uint64_t *)v45;
          sub_100522F00(v49, &qword_1016741B8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10058F81C((uint64_t)v13, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          sub_10058F81C(v45, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          if (v48 == -1)
          {
            a3 = v58;
            if (v44 < a2 || v58 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v52 = v55;
            }
            else
            {
              BOOL v51 = v44 == a2;
              unint64_t v52 = v55;
              if (!v51) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v66 += v39;
          }
          else
          {
            unint64_t v50 = v64;
            v64 += v39;
            a3 = v58;
            if (v44 < v50 || v58 >= v50)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v44 != v50)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v40 = a2;
            unint64_t v52 = v55;
          }
          unint64_t v37 = v64;
          if (v64 <= v52) {
            break;
          }
          a2 = v40;
        }
        while (v40 > v56);
      }
      goto LABEL_59;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    uint64_t v23 = v21 * v19;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v25 = a4 + v23;
    unint64_t v64 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      do
      {
        uint64_t v27 = a4;
        unint64_t v28 = a3;
        sub_10058F030(a2, (uint64_t)v17, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
        sub_10058F030(v27, (uint64_t)v13, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
        uint64_t v29 = v17[1];
        uint64_t v62 = *v17;
        uint64_t v63 = v29;
        uint64_t v30 = v13[1];
        uint64_t v60 = *v13;
        uint64_t v61 = v30;
        uint64_t v31 = type metadata accessor for Locale();
        uint64_t v32 = (uint64_t)v59;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v59, 1, 1, v31);
        sub_10052E310();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v33 = StringProtocol.compare<A>(_:options:range:locale:)();
        sub_100522F00(v32, &qword_1016741B8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10058F81C((uint64_t)v13, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
        sub_10058F81C((uint64_t)v17, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
        unint64_t v34 = v66;
        if (v33 == -1)
        {
          unint64_t v36 = a2 + v19;
          if (v66 < a2 || v66 >= v36)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v28;
          }
          else
          {
            a3 = v28;
            if (v66 == a2) {
              unint64_t v34 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v35 = v65 + v19;
          if (v66 < v65 || v66 >= v35)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v28;
          }
          else
          {
            a3 = v28;
            if (v66 != v65) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v65 = v35;
          unint64_t v36 = a2;
        }
        unint64_t v66 = v34 + v19;
        a4 = v65;
        if (v65 >= v25) {
          break;
        }
        a2 = v36;
      }
      while (v36 < a3);
    }
LABEL_59:
    sub_100F69B38(&v66, &v65, (uint64_t *)&v64);
    return 1;
  }
LABEL_63:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10058EAB8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_10058EB40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10058EB88(uint64_t a1)
{
  return a1;
}

void sub_10058EBD0(unint64_t a1)
{
  if (a1 >> 62)
  {
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (!v2) {
      return;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      return;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
  }
  else if ((a1 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      uint64_t v4 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      sub_100CB7040(&v7, v4);
    }
  }
  else
  {
    char v5 = (void **)(a1 + 32);
    do
    {
      unsigned int v6 = *v5++;
      sub_100CB7040(&v7, v6);

      --v2;
    }
    while (v2);
  }
}

uint64_t sub_10058ECA0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v32 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v31 = (char *)&v25 - v8;
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_101674520);
  __n128 v11 = __chkstk_darwin(v9 - 8, v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
    uint64_t v15 = v3 + 16;
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64));
    uint64_t v18 = *(void *)(v15 + 56);
    unint64_t v19 = v15 + 40;
    unint64_t v28 = (uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 32);
    uint64_t v29 = v16;
    uint64_t v26 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    uint64_t v27 = v18;
    uint64_t v30 = v15;
    int64_t v20 = (void (**)(uint64_t, uint64_t))(v15 - 8);
    unint64_t v25 = v19 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v22 = (uint64_t)v31;
    uint64_t v21 = v32;
    while (1)
    {
      v29(v13, v17, v2, v11);
      uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v19;
      (*(void (**)(char *, void, uint64_t, uint64_t))v19)(v13, 0, 1, v2);
      uint64_t result = (*v28)(v13, 1, v2);
      if (result == 1) {
        break;
      }
      (*v26)(v21, v13, v2);
      sub_100CB4BC8(v22, v21);
      (*v20)(v22, v2);
      v17 += v27;
      if (!--v14) {
        return v23(v13, 1, 1, v2);
      }
    }
  }
  else
  {
    uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    return v23(v13, 1, 1, v2);
  }
  return result;
}

uint64_t sub_10058EEF8(uint64_t a1)
{
  return a1;
}

uint64_t sub_10058EF24(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10050BF48(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10058EF74(uint64_t a1)
{
  return a1;
}

uint64_t sub_10058EFC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10058F030(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *sub_10058F098(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a1;
    a1[1] = a2[1];
    uint64_t v7 = type metadata accessor for CRLProto_ObjectMetadata(0);
    uint64_t v8 = *(int *)(v7 + 24);
    uint64_t v9 = (char *)v6 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = v12;
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(v7 + 28);
    uint64_t v14 = (uint64_t *)((char *)v6 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for CRLProto_Data(0);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v19 = *v15;
      unint64_t v20 = v15[1];
      sub_100510D4C(*v15, v20);
      *uint64_t v14 = v19;
      v14[1] = v20;
      v22((char *)v14 + *(int *)(v16 + 20), (char *)v15 + *(int *)(v16 + 20), v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    *(uint64_t *)((char *)v6 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return v6;
}

uint64_t sub_10058F2B4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = type metadata accessor for CRLProto_ObjectMetadata(0);
  uint64_t v3 = a1 + *(int *)(v2 + 24);
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  uint64_t v6 = a1 + *(int *)(v2 + 28);
  uint64_t v7 = type metadata accessor for CRLProto_Data(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    sub_100510084(*(void *)v6, *(void *)(v6 + 8));
    v5(v6 + *(int *)(v7 + 20), v4);
  }

  return swift_bridgeObjectRelease();
}

void *sub_10058F3D4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = type metadata accessor for CRLProto_ObjectMetadata(0);
  uint64_t v7 = *(int *)(v6 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = v11;
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(v6 + 28);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for CRLProto_Data(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = *v14;
    unint64_t v19 = v14[1];
    sub_100510D4C(*v14, v19);
    *uint64_t v13 = v18;
    v13[1] = v19;
    v21((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10058F59C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for CRLProto_ObjectMetadata(0);
  uint64_t v6 = *(int *)(v5 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v28 = *(void *)(v9 - 8);
  uint64_t v29 = v9;
  uint64_t v10 = *(void (**)(char *, char *))(v28 + 24);
  v10(v7, v8);
  uint64_t v11 = *(int *)(v5 + 28);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v31 = a2;
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      uint64_t v23 = (void (*)(char *, char *, uint64_t))v10;
      uint64_t v24 = *v13;
      unint64_t v25 = v13[1];
      sub_100510D4C(*v13, v25);
      uint64_t v26 = *v12;
      unint64_t v27 = v12[1];
      *uint64_t v12 = v24;
      v12[1] = v25;
      sub_100510084(v26, v27);
      v23((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v29);
      goto LABEL_7;
    }
    sub_10058F81C((uint64_t)v12, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v21 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v19 = *v13;
  unint64_t v20 = v13[1];
  sub_100510D4C(*v13, v20);
  *uint64_t v12 = v19;
  v12[1] = v20;
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v29);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)v31 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10058F81C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_10058F87C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = type metadata accessor for CRLProto_ObjectMetadata(0);
  uint64_t v7 = *(int *)(v6 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(v6 + 28);
  uint64_t v13 = (_OWORD *)((char *)a1 + v12);
  uint64_t v14 = (_OWORD *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for CRLProto_Data(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *uint64_t v13 = *v14;
    v11((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v10);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_10058FA10(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for CRLProto_ObjectMetadata(0);
  uint64_t v6 = *(int *)(v5 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v23 = *(void *)(v9 - 8);
  uint64_t v24 = v9;
  uint64_t v10 = *(void (**)(char *, char *))(v23 + 40);
  v10(v7, v8);
  uint64_t v11 = *(int *)(v5 + 28);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v26 = a2;
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      uint64_t v21 = *v12;
      unint64_t v22 = v12[1];
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      sub_100510084(v21, v22);
      ((void (*)(char *, char *, uint64_t))v10)((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v24);
      goto LABEL_7;
    }
    sub_10058F81C((uint64_t)v12, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v19 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v24);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)v26 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10058FC68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10058FC7C);
}

uint64_t sub_10058FC7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CRLProto_ObjectMetadata(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10058FD3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10058FD50);
}

uint64_t sub_10058FD50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for CRLProto_ObjectMetadata(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10058FE0C()
{
  uint64_t result = type metadata accessor for CRLProto_ObjectMetadata(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10058FEA4(unint64_t a1)
{
  return sub_100590990(a1, &qword_101673060);
}

double *sub_10058FEB0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1006BB6A4(0, v1, 0);
    uint64_t v3 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      sub_1005057FC(&qword_101674580);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1006BB6A4(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
      }
      double v5 = _swiftEmptyArrayStorage[2];
      double v4 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v5 >= *(void *)&v4 >> 1) {
        sub_1006BB6A4(*(void *)&v4 > 1uLL, *(void *)&v5 + 1, 1);
      }
      v3 += 16;
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v5 + 1;
      uint64_t v6 = &_swiftEmptyArrayStorage[2 * *(void *)&v5];
      *((void *)v6 + 4) = v8;
      *((void *)v6 + 5) = v9;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

double *sub_10058FFF0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1006BB6C4(0, v1, 0);
    uint64_t v3 = (id *)(a1 + 32);
    do
    {
      long long v12 = *(_OWORD *)v3;
      id v4 = *v3;
      id v5 = *((id *)&v12 + 1);
      id v6 = v4;
      id v7 = v5;
      sub_1005057FC(&qword_101674820);
      sub_1005057FC(&qword_101674828);
      swift_dynamicCast();

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1006BB6C4(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
      }
      double v9 = _swiftEmptyArrayStorage[2];
      double v8 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v9 >= *(void *)&v8 >> 1) {
        sub_1006BB6C4(*(void *)&v8 > 1uLL, *(void *)&v9 + 1, 1);
      }
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v9 + 1;
      unint64_t v10 = &_swiftEmptyArrayStorage[3 * *(void *)&v9];
      *((_OWORD *)v10 + 2) = v13;
      *((void *)v10 + 6) = v14;
      v3 += 2;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

double *sub_100590170(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t result = (double *)sub_1006BB744(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = 0;
      do
      {
        uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        double v7 = _swiftEmptyArrayStorage[2];
        double v6 = _swiftEmptyArrayStorage[3];
        if (*(void *)&v7 >= *(void *)&v6 >> 1) {
          sub_1006BB744(*(void *)&v6 > 1uLL, *(void *)&v7 + 1, 1);
        }
        ++v4;
        *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v7 + 1;
        double v8 = &_swiftEmptyArrayStorage[2 * *(void *)&v7];
        *((void *)v8 + 4) = v5;
        *((void *)v8 + 5) = &off_101518020;
      }
      while (v2 != v4);
    }
    else
    {
      double v9 = (id *)(a1 + 32);
      do
      {
        double v10 = _swiftEmptyArrayStorage[2];
        double v11 = _swiftEmptyArrayStorage[3];
        id v12 = *v9;
        if (*(void *)&v10 >= *(void *)&v11 >> 1) {
          sub_1006BB744(*(void *)&v11 > 1uLL, *(void *)&v10 + 1, 1);
        }
        *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v10 + 1;
        long long v13 = &_swiftEmptyArrayStorage[2 * *(void *)&v10];
        *((void *)v13 + 4) = v12;
        *((void *)v13 + 5) = &off_101518020;
        ++v9;
        --v2;
      }
      while (v2);
    }
    return _swiftEmptyArrayStorage;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005902FC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  long long v13 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1006BB764(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        type metadata accessor for CRLBoardItem(0);
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB764(0, *((void *)v3 + 2) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = *((void *)v3 + 2);
        unint64_t v6 = *((void *)v3 + 3);
        if (v7 >= v6 >> 1)
        {
          sub_1006BB764(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        *((void *)v3 + 2) = v7 + 1;
        sub_100575CE8(v12, &v3[4 * v7 + 4]);
      }
    }
    else
    {
      double v8 = (id *)(a1 + 32);
      type metadata accessor for CRLBoardItem(0);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB764(0, *((void *)v3 + 2) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = *((void *)v3 + 2);
        unint64_t v10 = *((void *)v3 + 3);
        if (v11 >= v10 >> 1)
        {
          sub_1006BB764(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        *((void *)v3 + 2) = v11 + 1;
        sub_100575CE8(v12, &v3[4 * v11 + 4]);
        ++v8;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

double *sub_100590530(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    uint64_t result = (double *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v4 = 0;
        do
        {
          uint64_t v5 = v4 + 1;
          unint64_t v10 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          type metadata accessor for CRLiOSMiniFormatterBaseLayerButton();
          id v6 = v10;
          sub_1005057FC(&qword_101674780);
          swift_dynamicCast();
          swift_unknownObjectRelease();
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          uint64_t v4 = v5;
        }
        while (v2 != v5);
      }
      else
      {
        unint64_t v7 = (void **)(a1 + 32);
        type metadata accessor for CRLiOSMiniFormatterBaseLayerButton();
        do
        {
          double v8 = *v7++;
          id v9 = v8;
          sub_1005057FC(&qword_101674780);
          swift_dynamicCast();

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          --v2;
        }
        while (v2);
      }
      return _swiftEmptyArrayStorage;
    }
  }
  return result;
}

uint64_t sub_100590710(unint64_t a1)
{
  return sub_100590724(a1, &qword_10167ADE0);
}

uint64_t sub_100590724(unint64_t a1, unint64_t *a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = _swiftEmptyArrayStorage;
  if (!v4) {
    return (uint64_t)v5;
  }
  uint64_t v15 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1006BB764(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_10050BF48(0, a2);
        swift_dynamicCast();
        uint64_t v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB764(0, *((void *)v5 + 2) + 1, 1);
          uint64_t v5 = v15;
        }
        unint64_t v9 = *((void *)v5 + 2);
        unint64_t v8 = *((void *)v5 + 3);
        if (v9 >= v8 >> 1)
        {
          sub_1006BB764(v8 > 1, v9 + 1, 1);
          uint64_t v5 = v15;
        }
        *((void *)v5 + 2) = v9 + 1;
        sub_100575CE8(v14, &v5[4 * v9 + 4]);
      }
    }
    else
    {
      unint64_t v10 = (id *)(a1 + 32);
      sub_10050BF48(0, a2);
      do
      {
        id v11 = *v10;
        swift_dynamicCast();
        uint64_t v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB764(0, *((void *)v5 + 2) + 1, 1);
          uint64_t v5 = v15;
        }
        unint64_t v13 = *((void *)v5 + 2);
        unint64_t v12 = *((void *)v5 + 3);
        if (v13 >= v12 >> 1)
        {
          sub_1006BB764(v12 > 1, v13 + 1, 1);
          uint64_t v5 = v15;
        }
        *((void *)v5 + 2) = v13 + 1;
        sub_100575CE8(v14, &v5[4 * v13 + 4]);
        ++v10;
        --v4;
      }
      while (v4);
    }
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_100590978(unint64_t a1)
{
  return sub_100590990(a1, (uint64_t *)&unk_101674770);
}

uint64_t sub_100590984(unint64_t a1)
{
  return sub_100590990(a1, (uint64_t *)&unk_1016887E0);
}

uint64_t sub_100590990(unint64_t a1, uint64_t *a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1005057FC(a2);
    uint64_t v5 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    return v5;
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    return a1;
  }
}

uint64_t sub_100590A14(unint64_t a1)
{
  return sub_100590724(a1, (unint64_t *)&qword_1016725F0);
}

uint64_t sub_100590A28(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  unint64_t v12 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1006BB764(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      uint64_t v3 = v12;
      do
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_1005057FC(&qword_101673060);
        swift_dynamicCast();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB764(0, *((void *)v3 + 2) + 1, 1);
          uint64_t v3 = v12;
        }
        unint64_t v7 = *((void *)v3 + 2);
        unint64_t v6 = *((void *)v3 + 3);
        if (v7 >= v6 >> 1)
        {
          sub_1006BB764(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v12;
        }
        ++v5;
        *((void *)v3 + 2) = v7 + 1;
        sub_100575CE8(v11, &v3[4 * v7 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      unint64_t v8 = a1 + 32;
      uint64_t v3 = v12;
      do
      {
        swift_unknownObjectRetain();
        sub_1005057FC(&qword_101673060);
        swift_dynamicCast();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB764(0, *((void *)v3 + 2) + 1, 1);
          uint64_t v3 = v12;
        }
        unint64_t v10 = *((void *)v3 + 2);
        unint64_t v9 = *((void *)v3 + 3);
        if (v10 >= v9 >> 1)
        {
          sub_1006BB764(v9 > 1, v10 + 1, 1);
          uint64_t v3 = v12;
        }
        *((void *)v3 + 2) = v10 + 1;
        sub_100575CE8(v11, &v3[4 * v10 + 4]);
        v8 += 8;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_100590C68(unint64_t a1)
{
  return sub_100590724(a1, &qword_1016787C0);
}

double *sub_100590C7C(uint64_t a1)
{
  uint64_t v18 = sub_1005057FC(&qword_101674738);
  uint64_t v2 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v3);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674740);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  unint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)(a1 + 16);
  unint64_t v12 = _swiftEmptyArrayStorage;
  if (v11)
  {
    uint64_t v19 = _swiftEmptyArrayStorage;
    sub_1006BBB24(0, v11, 0);
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v14 = *(void *)(v2 + 72);
    unint64_t v12 = v19;
    do
    {
      sub_100522E9C(v13, (uint64_t)v5, &qword_101674738);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BBB24(0, *((void *)v12 + 2) + 1, 1);
        unint64_t v12 = v19;
      }
      unint64_t v16 = *((void *)v12 + 2);
      unint64_t v15 = *((void *)v12 + 3);
      if (v16 >= v15 >> 1)
      {
        sub_1006BBB24(v15 > 1, v16 + 1, 1);
        unint64_t v12 = v19;
      }
      *((void *)v12 + 2) = v16 + 1;
      sub_10051B3EC((uint64_t)v10, (uint64_t)v12+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v16, (uint64_t *)&unk_101674740);
      v13 += v14;
      --v11;
    }
    while (v11);
  }
  return v12;
}

double *sub_100590EC0(unint64_t a1)
{
  return sub_100590EFC(a1, (uint64_t)&off_10152B020);
}

double *sub_100590ECC(unint64_t a1)
{
  return sub_100590EFC(a1, (uint64_t)&off_10152B0B8);
}

double *sub_100590ED8(unint64_t a1)
{
  return sub_100590EFC(a1, (uint64_t)&off_10152AF80);
}

double *sub_100590EE4(unint64_t a1)
{
  return sub_100590EFC(a1, (uint64_t)&off_10152B158);
}

double *sub_100590EF0(unint64_t a1)
{
  return sub_100590EFC(a1, (uint64_t)&off_10152AF08);
}

double *sub_100590EFC(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t result = (double *)sub_1006BBB44(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = 0;
      do
      {
        uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        double v9 = _swiftEmptyArrayStorage[2];
        double v8 = _swiftEmptyArrayStorage[3];
        if (*(void *)&v9 >= *(void *)&v8 >> 1) {
          sub_1006BBB44(*(void *)&v8 > 1uLL, *(void *)&v9 + 1, 1);
        }
        ++v6;
        *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v9 + 1;
        unint64_t v10 = &_swiftEmptyArrayStorage[2 * *(void *)&v9];
        *((void *)v10 + 4) = v7;
        *((void *)v10 + 5) = a2;
      }
      while (v4 != v6);
    }
    else
    {
      int64_t v11 = (uint64_t *)(a1 + 32);
      double v12 = _swiftEmptyArrayStorage[2];
      uint64_t v13 = 2 * *(void *)&v12;
      do
      {
        uint64_t v14 = *v11;
        double v15 = _swiftEmptyArrayStorage[3];
        swift_retain();
        if (*(void *)&v12 >= *(void *)&v15 >> 1) {
          sub_1006BBB44(*(void *)&v15 > 1uLL, *(void *)&v12 + 1, 1);
        }
        *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v12 + 1;
        unint64_t v16 = &_swiftEmptyArrayStorage[v13];
        *((void *)v16 + 4) = v14;
        *((void *)v16 + 5) = a2;
        v13 += 2;
        ++v11;
        ++*(void *)&v12;
        --v4;
      }
      while (v4);
    }
    return _swiftEmptyArrayStorage;
  }
  __break(1u);
  return result;
}

double *sub_100591094(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t result = (double *)sub_1006BBC04(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = 0;
      do
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        type metadata accessor for CRLGroupItem();
        swift_dynamicCast();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1006BBC04(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
        }
        double v6 = _swiftEmptyArrayStorage[2];
        double v5 = _swiftEmptyArrayStorage[3];
        if (*(void *)&v6 >= *(void *)&v5 >> 1) {
          sub_1006BBC04(*(void *)&v5 > 1uLL, *(void *)&v6 + 1, 1);
        }
        ++v4;
        *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v6 + 1;
        uint64_t v7 = &_swiftEmptyArrayStorage[5 * *(void *)&v6];
        *((void *)v7 + 8) = v15;
        *((_OWORD *)v7 + 2) = v13;
        *((_OWORD *)v7 + 3) = v14;
      }
      while (v2 != v4);
    }
    else
    {
      double v8 = (id *)(a1 + 32);
      type metadata accessor for CRLGroupItem();
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1006BBC04(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
        }
        double v11 = _swiftEmptyArrayStorage[2];
        double v10 = _swiftEmptyArrayStorage[3];
        if (*(void *)&v11 >= *(void *)&v10 >> 1) {
          sub_1006BBC04(*(void *)&v10 > 1uLL, *(void *)&v11 + 1, 1);
        }
        *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v11 + 1;
        double v12 = &_swiftEmptyArrayStorage[5 * *(void *)&v11];
        *((void *)v12 + 8) = v15;
        *((_OWORD *)v12 + 2) = v13;
        *((_OWORD *)v12 + 3) = v14;
        ++v8;
        --v2;
      }
      while (v2);
    }
    return _swiftEmptyArrayStorage;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005912D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10059134C(a1, a2, a3);
}

uint64_t sub_1005912FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100591518(a1, a2, a3, (uint64_t)&unk_101508980, (uint64_t *)&unk_1016743B0);
}

uint64_t sub_100591324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10059134C(a1, a2, a3);
}

uint64_t sub_10059134C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_100522F00(a1, &qword_101672BB0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1005914F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100591518(a1, a2, a3, (uint64_t)&unk_1015097E8, &qword_101674768);
}

uint64_t sub_100591518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = type metadata accessor for TaskPriority();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_100522F00(a1, &qword_101672BB0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  sub_1005057FC(a5);
  return swift_task_create();
}

void sub_1005916C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [v2 navigationItem];
  id v9 = [v2 traitCollection];
  unsigned int v10 = [self crl_phoneUI];
  unsigned __int8 v11 = [v9 crl_isCompactWidth];
  unsigned __int8 v12 = v11;
  if (v10)
  {
    if ((v11 & 1) == 0)
    {

      if (a2) {
        goto LABEL_10;
      }
LABEL_9:
      uint64_t v15 = *(char **)(*(void *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                     + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
      uint64_t v16 = *(void *)&v15[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      sub_1005C7DB0(v16, (uint64_t)v7, type metadata accessor for CRLBoardCRDTData);
      int v17 = v15;
      sub_1005057FC(&qword_101674450);
      CRRegister.wrappedValue.getter();
      sub_1005C7E18((uint64_t)v7, type metadata accessor for CRLBoardCRDTData);

LABEL_10:
      swift_bridgeObjectRetain();
      NSString v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    unsigned __int8 v13 = [v9 crl_isCompactHeight];

    if (v13)
    {
LABEL_4:
      if (a2) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
  }
  else
  {

    if ((v12 & 1) == 0) {
      goto LABEL_4;
    }
  }
  NSString v14 = 0;
LABEL_11:
  [v8 setTitle:v14];
}

uint64_t sub_10059190C()
{
  if ((*(unsigned char *)v0 & 1) == 0) {
    return 2;
  }
  if (*(unsigned char *)(v0 + 3))
  {
    uint64_t v2 = *(void **)(v0 + 24);
    if ((objc_msgSend(self, "crl_phoneUI") & 1) != 0
      || (objc_msgSend(v2, "crl_isCompactWidth") & 1) != 0
      || (*(unsigned char *)(v0 + 34) & 1) != 0)
    {
      return 0;
    }
  }
  else if (*(unsigned char *)(v0 + 34) & 1) == 0 && (*(unsigned char *)(v0 + 1) & 1) == 0 || (*(unsigned char *)(v0 + 34))
  {
    return 0;
  }
  if ((*(unsigned char *)(v0 + 1) & 1) == 0) {
    return 2;
  }
  return 0;
}

uint64_t sub_1005919A0(long long *a1, long long *a2)
{
  long long v2 = a1[1];
  long long v5 = *a1;
  v6[0] = v2;
  *(_DWORD *)((char *)v6 + 15) = *(_DWORD *)((char *)a1 + 31);
  long long v3 = a2[1];
  long long v7 = *a2;
  v8[0] = v3;
  *(_DWORD *)((char *)v8 + 15) = *(_DWORD *)((char *)a2 + 31);
  return sub_1005C2410((unsigned __int8 *)&v5, (unsigned __int8 *)&v7) & 1;
}

id sub_1005919EC@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v8, v9);
  unsigned __int8 v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [a1 horizontalSizeClass];
  int v42 = a2;
  if (v12 == (id)1) {
    unsigned int v38 = 1;
  }
  else {
    unsigned int v38 = [self crl_phoneUI];
  }
  uint64_t v13 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController;
  NSString v14 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController);
  if (!v14) {
    goto LABEL_12;
  }
  if ([v14 isBeingPresented]) {
    goto LABEL_11;
  }
  uint64_t v15 = *(void **)(v4 + v13);
  if (!v15) {
    goto LABEL_12;
  }
  if ([v15 isMovingToParentViewController])
  {
LABEL_11:
    int v36 = 1;
    goto LABEL_13;
  }
  uint64_t v16 = *(void **)(v4 + v13);
  if (v16)
  {
    id v17 = [v16 presentingViewController];
    if (v17)
    {

      goto LABEL_11;
    }
  }
LABEL_12:
  int v36 = 0;
LABEL_13:
  id v18 = sub_100E3C594();
  id v19 = [v18 mode];

  unint64_t v20 = self;
  if (objc_msgSend(v20, "crl_phoneUI")) {
    unsigned int v37 = [self crl_deviceIsLandscape];
  }
  else {
    unsigned int v37 = 0;
  }
  id v21 = [*(id *)(v4 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController) miniFormatterPresenter];
  if (v21)
  {
    unsigned int v41 = [v21 isPresentingMiniFormatter];
    swift_unknownObjectRelease();
  }
  else
  {
    unsigned int v41 = 0;
  }
  IsReduceMotionEnabledouble d = UIAccessibilityIsReduceMotionEnabled();
  unint64_t v22 = *(char **)(*(void *)(v4 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v23 = *(void *)(*(void *)&v22[OBJC_IVAR____TtC8Freeform8CRLBoard_shareState] + 16);
  unsigned int v24 = [v20 crl_phoneUI];
  unsigned int v25 = [a1 crl_isCompactWidth];
  unsigned int v26 = (v24 ^ 1) & v25;
  if (((v24 ^ 1) & 1) == 0 && v25) {
    unsigned int v26 = [a1 crl_isCompactHeight] ^ 1;
  }
  unsigned int v39 = v26;
  uint64_t v27 = *(void *)&v22[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_1005C7DB0(v27, (uint64_t)v11, type metadata accessor for CRLBoardCRDTData);
  uint64_t v28 = v22;
  sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  uint64_t v30 = v43;
  uint64_t v29 = v44;
  sub_1005C7E18((uint64_t)v11, type metadata accessor for CRLBoardCRDTData);

  unsigned __int8 v31 = [v19 wantsDoneButtonInCompact];
  LOBYTE(v28) = v38;
  char v32 = v31 & v38;
  LOBYTE(v27) = [*(id *)(v4+ OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) shouldEnableToolbarDoneButton];
  unsigned __int8 v33 = [v19 wantsToSuppressBottomToolbarInCompact];

  id result = a1;
  *(unsigned char *)a3 = (_BYTE)v28;
  *(unsigned char *)(a3 + 1) = v36;
  *(unsigned char *)(a3 + 2) = v37;
  *(unsigned char *)(a3 + 3) = v41;
  *(unsigned char *)(a3 + 4) = v42 & 1;
  *(unsigned char *)(a3 + 5) = IsReduceMotionEnabled;
  *(unsigned char *)(a3 + 6) = v23 != 0;
  *(unsigned char *)(a3 + 7) = v39;
  *(void *)(a3 + 8) = v30;
  *(void *)(a3 + 16) = v29;
  *(void *)(a3 + 24) = result;
  *(unsigned char *)(a3 + 32) = v32;
  *(unsigned char *)(a3 + 33) = v27;
  *(unsigned char *)(a3 + 34) = v33;
  return result;
}

void sub_100591DC0(unsigned __int8 *a1, int a2)
{
  unint64_t v3 = v2;
  LODWORD(v216) = a2;
  uint64_t v4 = a1;
  unsigned __int8 v5 = *a1;
  unsigned __int8 v6 = a1[1];
  unsigned __int8 v7 = a1[2];
  unsigned __int8 v8 = a1[3];
  unsigned __int8 v9 = a1[4];
  unsigned __int8 v10 = a1[5];
  unsigned __int8 v11 = a1[6];
  unsigned __int8 v12 = a1[7];
  uint64_t v219 = *((void *)a1 + 1);
  uint64_t v222 = (objc_class *)*((void *)a1 + 2);
  unsigned __int8 v13 = a1[32];
  unsigned __int8 v14 = a1[33];
  uint64_t v15 = v5 & 1;
  uint64_t v16 = v6 & 1;
  uint64_t v17 = v7 & 1;
  uint64_t v217 = v8 & 1;
  uint64_t v218 = v9 & 1;
  *(void *)&long long v220 = v10 & 1;
  uint64_t v18 = v11 & 1;
  uint64_t v19 = v12 & 1;
  int v20 = v13 & 1;
  int v21 = v14 & 1;
  LODWORD(v221) = a1[34] & 1;
  unint64_t v22 = (void *)*((void *)a1 + 3);
  uint64_t v23 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v23 - 8, v24);
  unint64_t v215 = (char *)&v205 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v26 = v20 | (v21 << 8);
  uint64_t v223 = v4;
  if ((v216 & 1) == 0)
  {
    uint64_t v209 = v15;
    uint64_t v210 = v16;
    uint64_t v211 = v17;
    uint64_t v212 = v18;
    uint64_t v213 = v19;
    uint64_t v214 = v22;
    unint64_t v216 = v3;
    unint64_t v28 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState);
    uint64_t v27 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState + 8);
    uint64_t v17 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState + 16);
    uint64_t v29 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState + 24);
    int v30 = *(unsigned __int16 *)(v3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState + 32) | (*(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState + 34) << 16);
    if (v17)
    {
      unsigned __int8 v236 = v28 & 1;
      uint64x2_t v31 = (uint64x2_t)vdupq_n_s64(v28);
      int16x8_t v32 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v31, (uint64x2_t)xmmword_101180790), (int32x4_t)vshlq_u64(v31, (uint64x2_t)xmmword_101180780));
      *(int8x8_t *)v32.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v32), (int8x8_t)0x1000100010001);
      unsigned __int32 v237 = vmovn_s16(v32).u32[0];
      char v238 = BYTE5(v28) & 1;
      char v239 = BYTE6(v28) & 1;
      char v240 = HIBYTE(v28) & 1;
      uint64_t v241 = v27;
      uint64_t v242 = v17;
      uint64_t v243 = v29;
      __int16 v244 = v30 & 0x101;
      char v245 = BYTE2(v30) & 1;
      __int16 v33 = v26;
      sub_1005C5C6C(v28, v27, v17, v29);
      uint64_t v4 = v223;
      sub_1005C5B04((uint64_t)v223);
      char v34 = sub_1005C2410(&v236, v4);
      sub_1005393A8((uint64_t)v4);
      sub_1005C5B38(v28, v27, v17, v29);
      LOWORD(v26) = v33;
      unint64_t v3 = v216;
      unint64_t v22 = v214;
      uint64_t v19 = v213;
      uint64_t v18 = v212;
      LODWORD(v17) = v211;
      LODWORD(v16) = v210;
      LODWORD(v15) = v209;
      if (v34)
      {
        if (qword_10166F9C8 == -1)
        {
LABEL_5:
          swift_beginAccess();
          id v35 = (id)static OS_os_log.crlDefault;
          uint64_t v36 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v35, (uint64_t)&_mh_execute_header, v36, (uint64_t)"Toolbar button state unchanged. Skipping update.", 48, 2, (uint64_t)_swiftEmptyArrayStorage);

          return;
        }
LABEL_171:
        swift_once();
        goto LABEL_5;
      }
    }
    else
    {
      LODWORD(v16) = v210;
      LODWORD(v15) = v209;
      LODWORD(v17) = v211;
      uint64_t v37 = v212;
      uint64_t v38 = v213;
      uint64_t v206 = v209 | (v210 << 8) | (v211 << 16) | (v217 << 24) | (v218 << 32) | ((void)v220 << 40) | (v212 << 48) | (v213 << 56);
      int v207 = v26 | (v221 << 16);
      uint64_t v39 = (uint64_t)v223;
      int v208 = v26;
      sub_1005C5B04((uint64_t)v223);
      uint64_t v40 = v28;
      uint64_t v18 = v37;
      uint64_t v4 = (unsigned __int8 *)v39;
      uint64_t v19 = v38;
      sub_1005C5B38(v40, v27, 0, v29);
      unint64_t v22 = v214;
      sub_1005C5B38(v206, v219, (uint64_t)v222, v214);
      LOWORD(v26) = v208;
      unint64_t v3 = v216;
    }
  }
  unint64_t v41 = v15 | ((unint64_t)v16 << 8) | ((unint64_t)v17 << 16) | ((unint64_t)v217 << 24) | (v218 << 32) | ((void)v220 << 40) | (v18 << 48) | (v19 << 56);
  unint64_t v42 = v3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState;
  uint64_t v43 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState);
  uint64_t v44 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState + 8);
  uint64_t v45 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState + 16);
  uint64_t v46 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState + 24);
  *(void *)unint64_t v42 = v41;
  uint64_t v47 = (uint64_t)v222;
  *(void *)(v42 + 8) = v219;
  *(void *)(v42 + 16) = v47;
  *(void *)(v42 + 24) = v22;
  v42 += 32;
  *(_WORD *)unint64_t v42 = v26;
  *(unsigned char *)(v42 + 2) = v221;
  sub_1005C5B04((uint64_t)v4);
  sub_1005C5B38(v43, v44, v45, v46);
  unint64_t v48 = v3;
  uint64_t v49 = sub_100E3C9CC();
  unint64_t v50 = v4[1];
  if ((v50 & 1) == 0
    || (v4[3] & 1) != 0
    && ((unint64_t v52 = (void *)*((void *)v4 + 3), (objc_msgSend(self, "crl_phoneUI") & 1) != 0)
     || (objc_msgSend(v52, "crl_isCompactWidth") & 1) != 0))
  {
    if ((v4[32] & 1) == 0) {
      goto LABEL_16;
    }
    if (v4[3])
    {
      unint64_t v64 = (void *)*((void *)v4 + 3);
      if ((objc_msgSend(self, "crl_phoneUI") & 1) != 0
        || (objc_msgSend(v64, "crl_isCompactWidth") & 1) != 0)
      {
        goto LABEL_16;
      }
    }
    BOOL v51 = sub_100E3C9EC();
  }
  else
  {
    BOOL v51 = sub_100E3CB20();
  }
  uint64_t v53 = v51;

  uint64_t v49 = v53;
LABEL_16:
  unint64_t v234 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v235 = (uint64_t)_swiftEmptyArrayStorage;
  unint64_t v232 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v233 = (unint64_t)_swiftEmptyArrayStorage;
  int v54 = *v4;
  uint64_t v222 = v49;
  if ((v54 & 1) == 0)
  {
    sub_1005057FC((uint64_t *)&unk_101676C10);
    unint64_t v55 = (char **)swift_allocObject();
    *((_OWORD *)v55 + 1) = xmmword_10117DF50;
    unint64_t v56 = (char **)v48;
    v55[4] = (char *)sub_100E3C90C();
    v55[5] = (char *)sub_100E3C94C();
    uint64_t aBlock = (uint64_t)v55;
    specialized Array._endMutation()();
    unint64_t v57 = aBlock;
    unint64_t v233 = aBlock;
    if ((v4[6] & 1) == 0) {
      goto LABEL_22;
    }
    id v58 = sub_100E3CBA0();
    if (!v58) {
      goto LABEL_22;
    }
    uint64_t v59 = v58;
    if (!(v57 >> 62))
    {
      id v60 = v58;
LABEL_21:
      sub_100F49AB0(0, 0, (uint64_t)v59);

LABEL_22:
      if (v4[4]) {
        goto LABEL_66;
      }
      id v61 = sub_100E3C82C();
      if (!(v233 >> 62)
        || (swift_bridgeObjectRetain(),
            uint64_t v193 = _CocoaArrayWrapper.endIndex.getter(),
            swift_bridgeObjectRelease(),
            (v193 & 0x8000000000000000) == 0))
      {
        sub_100F49AB0(0, 0, (uint64_t)v61);
        goto LABEL_66;
      }
      __break(1u);
      goto LABEL_162;
    }
    id v197 = v58;
    swift_bridgeObjectRetain();
    uint64_t v198 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if ((v198 & 0x8000000000000000) == 0) {
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_174;
  }
  LOBYTE(v45) = v4[2];
  if (v45)
  {
    if ((v4[3] & 1) == 0
      || (uint64_t v67 = (void *)*((void *)v4 + 3), (objc_msgSend(self, "crl_phoneUI") & 1) == 0)
      && (objc_msgSend(v67, "crl_isCompactWidth") & 1) == 0)
    {
      if ((v4[32] & 1) == 0 && ((v50 | v4[33]) & 1) == 0)
      {
        unint64_t v63 = (unint64_t)_swiftEmptyArrayStorage;
        goto LABEL_46;
      }
    }
    uint64_t v68 = v49;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0) {
      goto LABEL_169;
    }
    goto LABEL_45;
  }
  if ((v4[3] & 1) != 0
    && ((unint64_t v65 = (void *)*((void *)v4 + 3), (objc_msgSend(self, "crl_phoneUI") & 1) != 0)
     || (objc_msgSend(v65, "crl_isCompactWidth") & 1) != 0)
    || (v4[32] & 1) != 0
    || ((v50 | v4[33]) & 1) != 0)
  {
    uint64_t v62 = v49;
    unint64_t v56 = (char **)v48;
  }
  else
  {
    unint64_t v56 = (char **)v48;
    uint64_t v62 = (objc_class *)sub_100E3C94C();
  }
  unint64_t v66 = v62;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v232 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v232 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_159;
  }
  while (2)
  {
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

LABEL_48:
    uint64_t v229 = &type metadata for CRLFeatureFlags;
    unint64_t v230 = sub_1005396A8();
    LOBYTE(aBlock) = 8;
    char v69 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&aBlock);
    if ((v69 & 1) == 0)
    {
LABEL_51:
      if ((v4[6] & 1) == 0 || (id v70 = sub_100E3CBA0()) == 0)
      {
        unint64_t v66 = (objc_class *)sub_100E3C90C();
        if (v233 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v192 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v192 < 0)
          {
            __break(1u);
LABEL_159:
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            continue;
          }
        }
        sub_100F49AB0(0, 0, (uint64_t)v66);
        if (v4[4]) {
          goto LABEL_66;
        }
LABEL_64:
        sub_100E3C82C();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v235 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v235 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          goto LABEL_166;
        }
        goto LABEL_65;
      }
      uint64_t v71 = v70;
      id v72 = sub_100E3C90C();
      if (v45)
      {
        if (!(v233 >> 62)) {
          goto LABEL_61;
        }
      }
      else
      {
        Class isa = Int._bridgeToObjectiveC()().super.super.isa;
        unint64_t v56 = &selRef_alignCenter_;
        [v72 indexOfAccessibilityElement:isa];

        id v72 = sub_100E3C90C();
        if (!(v234 >> 62)
          || (swift_bridgeObjectRetain(),
              uint64_t v199 = _CocoaArrayWrapper.endIndex.getter(),
              swift_bridgeObjectRelease(),
              (v199 & 0x8000000000000000) == 0))
        {
          sub_100F49AB0(0, 0, (uint64_t)v72);
          Class v74 = Int._bridgeToObjectiveC()().super.super.isa;
          [v71 indexOfAccessibilityElement:v74];

          if (!(v234 >> 62))
          {
            id v75 = v71;
            unint64_t v56 = (char **)v48;
            goto LABEL_63;
          }
          goto LABEL_180;
        }
        __break(1u);
      }
      swift_bridgeObjectRetain();
      uint64_t v200 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v200 < 0)
      {
        __break(1u);
LABEL_180:
        id v201 = v71;
        swift_bridgeObjectRetain();
        uint64_t v202 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        unint64_t v56 = (char **)v48;
        if ((v202 & 0x8000000000000000) == 0) {
          goto LABEL_63;
        }
        __break(1u);
LABEL_182:
        id v203 = v71;
        swift_bridgeObjectRetain();
        uint64_t v204 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v204 < 0) {
          __break(1u);
        }
LABEL_63:
        sub_100F49AB0(0, 0, (uint64_t)v71);

        if (v4[4]) {
          goto LABEL_66;
        }
        goto LABEL_64;
      }
LABEL_61:
      sub_100F49AB0(0, 0, (uint64_t)v72);
      if (!(v233 >> 62))
      {
        id v76 = v71;
        goto LABEL_63;
      }
      goto LABEL_182;
    }
    break;
  }
  id v61 = sub_100E3C92C();
  if (!(v233 >> 62))
  {
LABEL_50:
    sub_100F49AB0(0, 0, (uint64_t)v61);
    goto LABEL_51;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v195 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if ((v195 & 0x8000000000000000) == 0) {
      goto LABEL_50;
    }
    __break(1u);
LABEL_166:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_65:
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
LABEL_66:
    id v77 = [v56 navigationItem];
    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v78 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    [v77 setBackAction:v78];

    uint64_t v79 = type metadata accessor for TaskPriority();
    uint64_t v80 = (uint64_t)v215;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v215, 1, 1, v79);
    type metadata accessor for MainActor();
    unint64_t v55 = v56;
    uint64_t v81 = static MainActor.shared.getter();
    Swift::Int v82 = (void *)swift_allocObject();
    v82[2] = v81;
    v82[3] = &protocol witness table for MainActor;
    v82[4] = v55;
    sub_10059134C(v80, (uint64_t)&unk_101674460, (uint64_t)v82);
    swift_release();
    id v83 = [v55 navigationItem];
    uint64_t v84 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v85 = swift_allocObject();
    *(void *)(v85 + 16) = sub_1005C5C3C;
    *(void *)(v85 + 24) = v84;
    unint64_t v230 = (unint64_t)sub_1005C5C44;
    uint64_t v231 = v85;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v227 = *(void *)"";
    uint64_t v228 = sub_10059474C;
    uint64_t v229 = (ValueMetadata *)&unk_101508D60;
    uint64_t v86 = _Block_copy(&aBlock);
    swift_release();
    [v83 setTitleMenuProvider:v86];
    _Block_release(v86);

    sub_1005916C8(0, 0);
    LOBYTE(v86) = v4[7];
    id v87 = [v55 navigationItem];
    uint64_t v88 = v87;
    if (v86)
    {
      char v89 = self;
      unint64_t v230 = (unint64_t)sub_1005947DC;
      uint64_t v231 = 0;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      uint64_t v227 = *(void *)"";
      uint64_t v228 = sub_100594810;
      uint64_t v229 = (ValueMetadata *)&unk_101508D88;
      uint64_t v90 = _Block_copy(&aBlock);
      id v91 = [v89 elementWithUncachedProvider:v90];
      _Block_release(v90);
      [v88 setAdditionalOverflowItems:v91];

      uint64_t v88 = v91;
    }
    else
    {
      [v87 setAdditionalOverflowItems:0];
    }

    int v225 = _swiftEmptyArrayStorage;
    uint64_t v92 = &selRef_lineFragmentClosestToPoint_knobTag_;
    uint64_t v93 = &unk_10117D000;
    if (v54)
    {
      if ((v4[3] & 1) == 0)
      {
        if (((v50 | v4[34]) & 1) == 0)
        {
          sub_1005057FC((uint64_t *)&unk_101676C10);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1011807A0;
          id v95 = sub_100E3C8CC();
          *(void *)(inited + 32) = v95;
          id v96 = sub_100E3C88C();
          *(void *)(inited + 40) = v96;
          uint64_t v97 = v4;
          id v98 = sub_100E3C8AC();
          *(void *)(inited + 48) = v98;
          id v99 = sub_100E3C84C();
          *(void *)(inited + 56) = v99;
          id v100 = sub_100E3C86C();
          *(void *)(inited + 64) = v100;
          uint64_t aBlock = inited;
          specialized Array._endMutation()();
          unint64_t v57 = aBlock;
          BOOL v101 = (v97[4] & 1) == 0;
          [v95 setEnabled:v101];
          [v96 setEnabled:v101];
          [v98 setEnabled:v101];
          [v99 setEnabled:v101];
          [v100 setEnabled:v101];
          uint64_t aBlock = (uint64_t)_swiftEmptyArrayStorage;
          sub_1006BB6E4(0, 5, 0);
          unint64_t v56 = (char **)aBlock;
          unint64_t v50 = v57 & 0xC000000000000001;
          if ((v57 & 0xC000000000000001) == 0)
          {
            id v102 = *(id *)(v57 + 32);
LABEL_76:
            id v103 = v102;
            uint64_t v104 = swift_allocObject();
            long long v221 = xmmword_101177E70;
            *(_OWORD *)(v104 + 16) = xmmword_101177E70;
            *(void *)(v104 + 32) = v103;
            unint64_t v224 = v104;
            specialized Array._endMutation()();
            uint64_t v105 = (char *)v224;
            unint64_t v107 = (unint64_t)v56[2];
            unint64_t v106 = (unint64_t)v56[3];
            if (v107 >= v106 >> 1)
            {
              sub_1006BB6E4(v106 > 1, v107 + 1, 1);
              unint64_t v56 = (char **)aBlock;
            }
            void v56[2] = (char *)(v107 + 1);
            v56[v107 + 4] = v105;
            if (v50) {
              id v108 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v108 = *(id *)(v57 + 40);
            }
            id v133 = v108;
            uint64_t v134 = swift_allocObject();
            *(_OWORD *)(v134 + 16) = v221;
            *(void *)(v134 + 32) = v133;
            unint64_t v224 = v134;
            specialized Array._endMutation()();
            uint64_t v135 = (char *)v224;
            unint64_t v137 = (unint64_t)v56[2];
            unint64_t v136 = (unint64_t)v56[3];
            if (v137 >= v136 >> 1)
            {
              sub_1006BB6E4(v136 > 1, v137 + 1, 1);
              unint64_t v56 = (char **)aBlock;
            }
            void v56[2] = (char *)(v137 + 1);
            v56[v137 + 4] = v135;
            if (v50) {
              id v138 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v138 = *(id *)(v57 + 48);
            }
            id v139 = v138;
            uint64_t v140 = swift_allocObject();
            *(_OWORD *)(v140 + 16) = v221;
            *(void *)(v140 + 32) = v139;
            unint64_t v224 = v140;
            specialized Array._endMutation()();
            unint64_t v141 = v224;
            unint64_t v143 = (unint64_t)v56[2];
            unint64_t v142 = (unint64_t)v56[3];
            if (v143 >= v142 >> 1) {
              sub_1006BB6E4(v142 > 1, v143 + 1, 1);
            }
            uint64_t v144 = aBlock;
            *(void *)(aBlock + 16) = v143 + 1;
            *(void *)(v144 + 8 * v143 + 32) = v141;
            if (v50) {
              id v145 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v145 = *(id *)(v57 + 56);
            }
            id v146 = v145;
            uint64_t v147 = (uint64_t)v223;
            uint64_t v148 = swift_allocObject();
            *(_OWORD *)(v148 + 16) = v221;
            *(void *)(v148 + 32) = v146;
            unint64_t v224 = v148;
            specialized Array._endMutation()();
            unint64_t v149 = v224;
            unint64_t v151 = *(void *)(v144 + 16);
            unint64_t v150 = *(void *)(v144 + 24);
            if (v151 >= v150 >> 1)
            {
              sub_1006BB6E4(v150 > 1, v151 + 1, 1);
              uint64_t v144 = aBlock;
            }
            *(void *)(v144 + 16) = v151 + 1;
            *(void *)(v144 + 8 * v151 + 32) = v149;
            if (v50) {
              id v152 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v152 = *(id *)(v57 + 64);
            }
            id v153 = v152;
            uint64_t v154 = swift_allocObject();
            *(_OWORD *)(v154 + 16) = v221;
            *(void *)(v154 + 32) = v153;
            unint64_t v224 = v154;
            specialized Array._endMutation()();
            unint64_t v155 = v224;
            unint64_t v157 = *(void *)(v144 + 16);
            unint64_t v156 = *(void *)(v144 + 24);
            if (v157 >= v156 >> 1)
            {
              sub_1006BB6E4(v156 > 1, v157 + 1, 1);
              uint64_t v144 = aBlock;
            }
            *(void *)(v144 + 16) = v157 + 1;
            *(void *)(v144 + 8 * v157 + 32) = v155;
            swift_bridgeObjectRelease();
            uint64_t v158 = swift_initStackObject();
            *(_OWORD *)(v158 + 16) = v221;
            *(void *)(v158 + 32) = [self flexibleSpaceItem];
            uint64_t aBlock = v158;
            specialized Array._endMutation()();
            if (aBlock < 0 || (aBlock & 0x4000000000000000) != 0)
            {
              uint64_t v159 = (uint64_t)sub_1006B9B98(aBlock);
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v159 = aBlock & 0xFFFFFFFFFFFFFF8;
            }
            uint64_t v160 = sub_1005C09DC(v144, v159);
            id v161 = [v55 navigationController];
            *(void *)&long long v221 = v160;
            if (v161)
            {
              uint64_t v162 = v161;
              uint64_t v163 = *(void **)(v147 + 24);
              uint64_t v164 = self;
              id v165 = v162;
              BOOL v166 = ((objc_msgSend(v164, "crl_phoneUI") & 1) != 0
                   || objc_msgSend(v163, "crl_isCompactWidth"))
                  && (*(unsigned char *)(v147 + 5) & 1) == 0;
              uint64_t v92 = &selRef_lineFragmentClosestToPoint_knobTag_;
              uint64_t v93 = (_OWORD *)&unk_10117D000;
              [v165 setToolbarHidden:0 animated:v166];
            }
            else
            {
              sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateToolbarButtons(for:forceUpdate:)", 38, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 240, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
              sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateToolbarButtons(for:forceUpdate:)", 38, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 240);
              uint64_t v92 = &selRef_lineFragmentClosestToPoint_knobTag_;
              uint64_t v93 = (_OWORD *)&unk_10117D000;
            }
            goto LABEL_110;
          }
LABEL_174:
          id v102 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_76;
        }
        goto LABEL_86;
      }
    }
    else if ((v4[3] & 1) == 0)
    {
      goto LABEL_86;
    }
    uint64_t v109 = (void *)*((void *)v4 + 3);
    if ((objc_msgSend(self, "crl_phoneUI") & 1) != 0
      || (objc_msgSend(v109, "crl_isCompactWidth") & 1) != 0)
    {
      if (v54) {
        goto LABEL_83;
      }
      goto LABEL_87;
    }
LABEL_86:
    if (v54 & (v50 | v4[34]))
    {
LABEL_83:
      id v110 = [v55 navigationController];
      if (v110)
      {
        uint64_t v111 = v110;
        uint64_t v112 = (void *)*((void *)v4 + 3);
        BOOL v113 = ((objc_msgSend(self, "crl_phoneUI") & 1) != 0
             || (unsigned int v118 = objc_msgSend(v112, "crl_isCompactWidth"), (v50 & 1) != 0)
             || v118)
            && (v4[5] & 1) == 0;
        [v111 setToolbarHidden:1 animated:v113];
      }
      *(void *)&long long v221 = 0;
      goto LABEL_110;
    }
LABEL_87:
    id v114 = [v55 navigationController];
    if (v114)
    {
      unint64_t v115 = v114;
      unint64_t v116 = (void *)*((void *)v4 + 3);
      BOOL v117 = ((objc_msgSend(self, "crl_phoneUI") & 1) != 0
           || (unsigned int v119 = objc_msgSend(v116, "crl_isCompactWidth"), (v50 & 1) != 0)
           || v119)
          && (v4[5] & 1) == 0;
      [v115 setToolbarHidden:1 animated:v117];
    }
    int v54 = v4[4];
    sub_1005057FC((uint64_t *)&unk_101676C10);
    if (v54)
    {
      uint64_t v121 = swift_allocObject();
      *(_OWORD *)(v121 + 16) = xmmword_101177E70;
      *(void *)(v121 + 32) = sub_100E3CB40();
      uint64_t aBlock = v121;
      specialized Array._endMutation()();
      unint64_t v224 = aBlock;
    }
    else
    {
      uint64_t v120 = swift_allocObject();
      *(_OWORD *)(v120 + 16) = xmmword_10117FBE0;
      *(void *)(v120 + 32) = sub_100E3C88C();
      *(void *)(v120 + 40) = sub_100E3C8AC();
      *(void *)(v120 + 48) = sub_100E3C84C();
      *(void *)(v120 + 56) = sub_100E3C86C();
      uint64_t aBlock = v120;
      specialized Array._endMutation()();
      unint64_t v224 = aBlock;
      uint64_t v229 = &type metadata for CRLFeatureFlags;
      unint64_t v230 = sub_1005396A8();
      LOBYTE(aBlock) = 20;
      LOBYTE(v120) = isFeatureEnabled(_:)();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&aBlock);
      if (v120)
      {
        sub_100E3C8EC();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v224 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v224 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    NSString v122 = String._bridgeToObjectiveC()();
    id v123 = [self systemImageNamed:v122];

    sub_10050BF48(0, (unint64_t *)&qword_101674470);
    *(void *)&long long v221 = v123;
    v246.value.super.Class isa = (Class)v123;
    v246.is_nil = 0;
    v247.value.super.super.Class isa = 0;
    Class v124 = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)0, v246, v247, v248).super.super.isa;
    sub_10050BF48(0, &qword_1016838E0);
    uint64_t v68 = v124;
    uint64_t v125 = (void *)static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();

    swift_bridgeObjectRelease();
    uint64_t v4 = (unsigned __int8 *)sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v126 = swift_allocObject();
    long long v220 = xmmword_101177E70;
    *(_OWORD *)(v126 + 16) = xmmword_101177E70;
    *(void *)(v126 + 32) = v125;
    uint64_t aBlock = v126;
    specialized Array._endMutation()();
    unint64_t v48 = aBlock;
    int v225 = (double *)aBlock;
    if (v54) {
      goto LABEL_109;
    }
    uint64_t v127 = swift_allocObject();
    *(_OWORD *)(v127 + 16) = v220;
    uint64_t v45 = v125;
    *(void *)(v127 + 32) = sub_100E3C8CC();
    uint64_t aBlock = v127;
    specialized Array._endMutation()();
    uint64_t v128 = (void *)static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
    swift_bridgeObjectRelease();
    if (!(v48 >> 62)) {
      break;
    }
    id v196 = v128;
    swift_bridgeObjectRetain();
    unint64_t v50 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if ((v50 & 0x8000000000000000) == 0) {
      goto LABEL_108;
    }
    __break(1u);
LABEL_169:
    if (_CocoaArrayWrapper.endIndex.getter() < 0)
    {
      __break(1u);
      goto LABEL_171;
    }
LABEL_45:
    sub_100F49AB0(0, 0, (uint64_t)v68);
    unint64_t v63 = v233;
LABEL_46:
    unint64_t v56 = (char **)v48;
    id v61 = sub_100E3C94C();
    if (!(v63 >> 62))
    {
LABEL_47:
      sub_100F49AB0(0, 0, (uint64_t)v61);
      goto LABEL_48;
    }
LABEL_162:
    swift_bridgeObjectRetain();
    uint64_t v194 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if ((v194 & 0x8000000000000000) == 0) {
      goto LABEL_47;
    }
    __break(1u);
  }
  id v129 = v128;
LABEL_108:
  sub_100F49794(0, 0, (uint64_t)v128);

LABEL_109:
  *(void *)&long long v221 = 0;
  uint64_t v93 = &unk_10117D000;
  uint64_t v92 = &selRef_lineFragmentClosestToPoint_knobTag_;
LABEL_110:
  sub_10050BF48(0, &qword_1016838E0);
  uint64_t v130 = (void *)static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
  swift_bridgeObjectRelease();
  if (v234 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v167 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v167) {
      goto LABEL_142;
    }
LABEL_112:
    uint64_t v131 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
    swift_bridgeObjectRelease();
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v132 = swift_allocObject();
    *(_OWORD *)(v132 + 16) = v93[245];
    *(void *)(v132 + 32) = v131;
    *(void *)(v132 + 40) = v130;
  }
  else
  {
    if (*(void *)((v234 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_112;
    }
LABEL_142:
    swift_bridgeObjectRelease();
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v132 = swift_allocObject();
    *(_OWORD *)(v132 + 16) = xmmword_101177E70;
    *(void *)(v132 + 32) = v130;
  }
  uint64_t aBlock = v132;
  specialized Array._endMutation()();
  if (v232 >> 62)
  {
    id v172 = v130;
    swift_bridgeObjectRetain();
    id v168 = (id)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v168) {
      goto LABEL_147;
    }
LABEL_145:
    id v170 = objc_allocWithZone((Class)UIBarButtonItemGroup);
    sub_10050BF48(0, (unint64_t *)&qword_101674470);
    Class v171 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v168 = [v170 initWithBarButtonItems:v171 representativeItem:0];
  }
  else
  {
    id v168 = *(id *)((v232 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v169 = v130;
    if (v168) {
      goto LABEL_145;
    }
LABEL_147:
    swift_bridgeObjectRelease();
  }
  *(void *)&long long v220 = v130;
  id v173 = [v55 v92[372]];
  id v174 = [v173 leftBarButtonItems];

  if (v174)
  {
    sub_10050BF48(0, (unint64_t *)&qword_101674470);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v175 = v235;
    swift_bridgeObjectRetain();
    unint64_t v176 = swift_bridgeObjectRetain();
    unsigned __int8 v177 = sub_1005BED80(v176, v175, (uint64_t)&qword_101674470);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_100594920((v177 & 1) == 0);
    id v178 = [v55 v92[372]];
    [v178 setStyle:sub_10059190C()];

    if (v177)
    {
      swift_bridgeObjectRelease();
      uint64_t v179 = v222;
      goto LABEL_153;
    }
  }
  else
  {
    sub_100594920(1);
    id v180 = [v55 v92[372]];
    [v180 setStyle:sub_10059190C()];
  }
  uint64_t v179 = v222;
  id v181 = [v55 v92[372]];
  sub_10050BF48(0, (unint64_t *)&qword_101674470);
  Class v182 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v181 setLeftBarButtonItems:v182];

LABEL_153:
  id v183 = [v55 v92[372]];
  uint64_t v184 = v92;
  Class v185 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v183 setCenterItemGroups:v185];

  id v186 = [v55 v184[372]];
  Class v187 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v186 setTrailingItemGroups:v187];

  id v188 = [v55 v184[372]];
  [v188 setPinnedTrailingGroup:v168];

  if ((void)v221)
  {
    sub_10050BF48(0, (unint64_t *)&qword_101674470);
    v189.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v189.super.Class isa = 0;
  }
  [v55 setToolbarItems:v189.super.isa];

  unsigned __int8 v190 = sub_100E59028();
  id v191 = sub_100E3C94C();
  [v191 setEnabled:v190 & 1];
}

uint64_t sub_100593C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  type metadata accessor for MainActor();
  v4[3] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[4] = v6;
  v4[5] = v5;
  return _swift_task_switch(sub_100593D14, v6, v5);
}

uint64_t sub_100593D14()
{
  *(void *)(v0 + 48) = [*(id *)(v0 + 16) navigationItem];
  int64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  void *v1 = v0;
  v1[1] = sub_100593DC0;
  return sub_100593F6C();
}

uint64_t sub_100593DC0(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 40);
  uint64_t v4 = *(void *)(v2 + 32);
  return _swift_task_switch(sub_100593EE8, v4, v3);
}

uint64_t sub_100593EE8()
{
  int64_t v1 = (void *)v0[8];
  uint64_t v2 = (void *)v0[6];
  swift_release();
  [v2 setDocumentProperties:v1];

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100593F6C()
{
  v1[19] = v0;
  uint64_t v2 = type metadata accessor for UTType();
  v1[20] = v2;
  v1[21] = *(void *)(v2 - 8);
  v1[22] = swift_task_alloc();
  v1[23] = type metadata accessor for CRLBoardCRDTData(0);
  v1[24] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[25] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[26] = v4;
  v1[27] = v3;
  return _swift_task_switch(sub_100594090, v4, v3);
}

uint64_t sub_100594090()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[19];
  id v3 = [objc_allocWithZone((Class)LPLinkMetadata) init];
  v0[28] = v3;
  uint64_t v4 = *(char **)(*(void *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v5 = *(void *)&v4[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_1005C7DB0(v5, v1, type metadata accessor for CRLBoardCRDTData);
  uint64_t v6 = v4;
  sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  sub_1005C7E18(v1, type metadata accessor for CRLBoardCRDTData);

  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v3 setTitle:v7];

  if ([*(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) documentIsSharedReadOnly])
  {
    id v8 = [self mainBundle];
    NSString v9 = String._bridgeToObjectiveC()();
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [v8 localizedStringForKey:v9 value:v10 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v3 setSummary:v12];
  }
  uint64_t v14 = v0[21];
  uint64_t v13 = v0[22];
  uint64_t v15 = v0[20];
  id v16 = [objc_allocWithZone((Class)NSItemProvider) init];
  v0[29] = v16;
  static UTType.png.getter();
  UTType.identifier.getter();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v0[6] = sub_1005C6690;
  v0[7] = v18;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = *(void *)"";
  v0[4] = sub_10059805C;
  v0[5] = &unk_1015090A8;
  uint64_t v19 = _Block_copy(v0 + 2);
  swift_release();
  [v16 registerDataRepresentationForTypeIdentifier:v17 visibility:0 loadHandler:v19];
  _Block_release(v19);

  [v3 setImageProvider:v16];
  v0[30] = [objc_allocWithZone((Class)UIDocumentProperties) initWithMetadata:v3];
  int v20 = (void *)swift_task_alloc();
  v0[31] = v20;
  *int v20 = v0;
  v20[1] = sub_1005944AC;
  return sub_100598194();
}

uint64_t sub_1005944AC(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 256) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 216);
  uint64_t v4 = *(void *)(v2 + 208);
  return _swift_task_switch(sub_1005945D4, v4, v3);
}

uint64_t sub_1005945D4()
{
  int v1 = *(unsigned __int8 *)(v0 + 256);
  swift_release();
  if (v1 == 1)
  {
    uint64_t v3 = *(void **)(v0 + 232);
    uint64_t v2 = *(void **)(v0 + 240);
    uint64_t v4 = *(void **)(v0 + 224);
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    *(void *)(v0 + 96) = sub_1005C6698;
    *(void *)(v0 + 104) = v5;
    *(void *)(v0 + 64) = _NSConcreteStackBlock;
    *(void *)(v0 + 72) = *(void *)"";
    *(void *)(v0 + 80) = sub_100598AC4;
    *(void *)(v0 + 88) = &unk_1015090D0;
    uint64_t v6 = _Block_copy((const void *)(v0 + 64));
    swift_release();
    [v2 setActivityViewControllerProvider:v6];

    _Block_release(v6);
  }
  else
  {
    NSString v7 = *(void **)(v0 + 232);
    id v8 = *(void **)(v0 + 224);
    [*(id *)(v0 + 240) setActivityViewControllerProvider:0];
  }
  swift_task_dealloc();
  swift_task_dealloc();
  NSString v9 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v10 = *(void *)(v0 + 240);
  return v9(v10);
}

id sub_10059474C(uint64_t a1)
{
  int v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  sub_10050BF48(0, &qword_10167ADE0);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  uint64_t v3 = (void *)v1(v2);
  swift_release();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_1005947DC(uint64_t (*a1)(void *))
{
  return a1(&_swiftEmptyArrayStorage);
}

uint64_t sub_100594810(uint64_t a1, void *aBlock)
{
  uint64_t v2 = *(void (**)(void (*)(uint64_t), uint64_t))(a1 + 32);
  uint64_t v3 = _Block_copy(aBlock);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  swift_retain();
  v2(sub_1005C5CE8, v4);
  swift_release();

  return swift_release();
}

void sub_1005948A4(uint64_t a1, uint64_t a2)
{
  sub_10050BF48(0, &qword_10167ADE0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, objc_class *))(a2 + 16))(a2, isa);
}

id sub_100594920(char a1)
{
  if (a1)
  {
    id v2 = [v1 navigationItem];
    sub_10050BF48(0, (unint64_t *)&qword_101674470);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v2 setLeftBarButtonItems:isa];
  }
  id v4 = [v1 navigationItem];
  sub_10050BF48(0, &qword_1016838E0);
  Class v5 = Array._bridgeToObjectiveC()().super.isa;
  [v4 setCenterItemGroups:v5];

  id v6 = [v1 navigationItem];
  Class v7 = Array._bridgeToObjectiveC()().super.isa;
  [v6 setTrailingItemGroups:v7];

  id v8 = [v1 navigationItem];
  [v8 setPinnedTrailingGroup:0];

  return [v1 setToolbarItems:0];
}

uint64_t sub_100594AAC()
{
  int v1 = v0;
  id v2 = self;
  id v3 = [v2 mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 localizedStringForKey:v4 value:v5 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = self;
  id v9 = [v8 systemImageNamed:v7];

  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v139 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v11 = [v2 mainBundle];
  NSString v12 = String._bridgeToObjectiveC()();
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v11 localizedStringForKey:v12 value:v13 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [v8 systemImageNamed:v15];

  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v138 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v18 = [v2 mainBundle];
  NSString v19 = String._bridgeToObjectiveC()();
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v18 localizedStringForKey:v19 value:v20 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = [v8 systemImageNamed:v22];

  uint64_t v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v140 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v25 = [v2 mainBundle];
  NSString v26 = String._bridgeToObjectiveC()();
  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = [v25 localizedStringForKey:v26 value:v27 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v29 = String._bridgeToObjectiveC()();
  id v30 = [v8 systemImageNamed:v29];

  uint64_t v31 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v131._rawValue = 0;
  uint64_t v132 = sub_1005C6C5C;
  uint64_t v133 = v31;
  uint64_t v32 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  __int16 v33 = 0;
  if (objc_msgSend(self, "isSupported", 0))
  {
    id v34 = [v2 mainBundle];
    NSString v35 = String._bridgeToObjectiveC()();
    NSString v36 = String._bridgeToObjectiveC()();
    id v37 = [v34 localizedStringForKey:v35 value:v36 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v38 = String._bridgeToObjectiveC()();
    id v39 = [v8 systemImageNamed:v38];

    uint64_t v40 = swift_allocObject();
    swift_unknownObjectWeakInit();
    UIMenuElementSize preferredElementSize = UIMenuElementSizeSmall;
    v131._rawValue = 0;
    uint64_t v132 = sub_1005C6D0C;
    uint64_t v133 = v40;
    __int16 v33 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  }
  unint64_t v137 = (void *)v32;
  if ([self isOSFeatureEnabled:3])
  {
    id v41 = [v2 mainBundle];
    NSString v42 = String._bridgeToObjectiveC()();
    NSString v43 = String._bridgeToObjectiveC()();
    uint64_t v44 = v33;
    id v45 = [v41 localizedStringForKey:v42 value:v43 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v46 = String._bridgeToObjectiveC()();
    id v47 = [v8 crl_internalSystemImageNamed:v46];

    uint64_t v48 = swift_allocObject();
    swift_unknownObjectWeakInit();
    UIMenuElementSize preferredElementSize = UIMenuElementSizeSmall;
    v131._rawValue = 0;
    uint64_t v132 = sub_1005C6D04;
    uint64_t v133 = v48;
    __int16 v33 = v44;
    uint64_t v49 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  }
  else
  {
    uint64_t v49 = 0;
  }
  unint64_t v50 = v140;
  unint64_t v136 = (void *)v49;
  unint64_t v142 = &type metadata for CRLGenerativePlaygroundFeatureFlags;
  unint64_t v143 = sub_1005C6C64();
  char v51 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
  if ((v51 & 1) != 0
    && (unint64_t v142 = &type metadata for CRLFeatureFlags,
        unint64_t v143 = sub_1005396A8(),
        LOBYTE(aBlock[0]) = 13,
        char v52 = isFeatureEnabled(_:)(),
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock),
        (v52 & 1) != 0))
  {
    uint64_t v53 = 0;
    if ([(id)type metadata accessor for ImagePlaygroundViewController() available])
    {
      id v54 = [v2 mainBundle];
      NSString v55 = String._bridgeToObjectiveC()();
      NSString v56 = String._bridgeToObjectiveC()();
      unint64_t v57 = v33;
      id v58 = [v54 localizedStringForKey:v55 value:v56 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v59 = String._bridgeToObjectiveC()();
      id v60 = [v8 systemImageNamed:v59];

      uint64_t v61 = swift_allocObject();
      swift_unknownObjectWeakInit();
      UIMenuElementSize preferredElementSize = UIMenuElementSizeSmall;
      v131._rawValue = 0;
      uint64_t v132 = sub_1005C6CE0;
      uint64_t v133 = v61;
      unint64_t v50 = v140;
      __int16 v33 = v57;
      uint64_t v53 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    }
  }
  else
  {
    uint64_t v53 = 0;
  }
  id v134 = v8;
  sub_1005057FC((uint64_t *)&unk_1016745F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1011807B0;
  *(void *)(inited + 32) = v139;
  *(void *)(inited + 40) = v53;
  *(void *)(inited + 48) = v138;
  *(void *)(inited + 56) = v136;
  *(void *)(inited + 64) = v33;
  *(void *)(inited + 72) = v50;
  *(void *)(inited + 80) = v137;
  aBlock[0] = inited;
  specialized Array._endMutation()();
  unint64_t v63 = (void *)aBlock[0];
  aBlock[0] = _swiftEmptyArrayStorage;
  unint64_t v64 = (void *)v63[4];
  uint64_t v135 = v33;
  if (!v64)
  {
    id v74 = v33;
    id v75 = v50;
    id v76 = v137;
    id v77 = v139;
    id v78 = v53;
    id v79 = v138;
    id v80 = v136;
    uint64_t v73 = (void *)v63[5];
    if (!v73) {
      goto LABEL_20;
    }
    goto LABEL_17;
  }
  id v65 = v64;
  id v66 = v139;
  id v67 = v53;
  id v68 = v138;
  id v69 = v136;
  id v70 = v33;
  id v71 = v50;
  id v72 = v137;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v73 = (void *)v63[5];
  if (v73)
  {
LABEL_17:
    id v81 = v73;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
LABEL_20:
  Swift::Int v82 = (void *)v63[6];
  if (v82)
  {
    id v83 = v82;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  uint64_t v84 = (void *)v63[7];
  if (v84)
  {
    id v85 = v84;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  uint64_t v86 = (void *)v63[8];
  if (v86)
  {
    id v87 = v86;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  uint64_t v88 = (void *)v63[9];
  if (v88)
  {
    id v89 = v88;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  uint64_t v90 = (void *)v63[10];
  if (v90)
  {
    id v91 = v90;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  double v92 = *(double *)aBlock;
  swift_bridgeObjectRelease();
  uint64_t v93 = sub_100F62728(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v95 = *((void *)v93 + 2);
  unint64_t v94 = *((void *)v93 + 3);
  if (v95 >= v94 >> 1) {
    uint64_t v93 = sub_100F62728((double *)(v94 > 1), v95 + 1, 1, v93);
  }
  *((void *)v93 + 2) = v95 + 1;
  v93[v95 + 4] = v92;
  unint64_t v145 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v142 = &type metadata for CRLFeatureFlags;
  unint64_t v143 = sub_1005396A8();
  LOBYTE(aBlock[0]) = 20;
  char v96 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
  unint64_t v97 = (unint64_t)_swiftEmptyArrayStorage;
  if ((v96 & 1) == 0)
  {
LABEL_49:
    if (!(v97 >> 62)) {
      goto LABEL_50;
    }
    goto LABEL_55;
  }
  id v98 = [v1 traitCollection];
  if ([v98 horizontalSizeClass] == (id)1)
  {
  }
  else
  {
    unsigned __int8 v99 = [self crl_phoneUI];

    if ((v99 & 1) == 0)
    {
      unint64_t v97 = (unint64_t)_swiftEmptyArrayStorage;
      if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
      {
LABEL_50:
        unint64_t v109 = *((void *)v93 + 2);
        if (*(void *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_51:
          unint64_t v110 = *((void *)v93 + 3);
          unint64_t v111 = v109 + 1;
          swift_bridgeObjectRetain();
          if (v109 >= v110 >> 1) {
            uint64_t v93 = sub_100F62728((double *)(v110 > 1), v109 + 1, 1, v93);
          }
          *((void *)v93 + 2) = v111;
          *(void *)&v93[v109 + 4] = v97;
          aBlock[0] = _swiftEmptyArrayStorage;
          goto LABEL_58;
        }
LABEL_56:
        aBlock[0] = _swiftEmptyArrayStorage;
        if (!v109)
        {
          swift_bridgeObjectRetain();
          unint64_t v115 = _swiftEmptyArrayStorage;
LABEL_63:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          unint64_t v116 = self;
          uint64_t v117 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v118 = swift_allocObject();
          *(void *)(v118 + 16) = v117;
          *(void *)(v118 + 24) = v115;
          unint64_t v143 = (unint64_t)sub_1005C6CD0;
          uint64_t v144 = v118;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = *(void *)"";
          aBlock[2] = sub_100594810;
          unint64_t v142 = (ValueMetadata *)&unk_1015094B8;
          unsigned int v119 = _Block_copy(aBlock);
          swift_release();
          id v120 = [v116 elementWithUncachedProvider:v119];
          _Block_release(v119);
          sub_10050BF48(0, &qword_101673A80);
          sub_1005057FC((uint64_t *)&unk_101676C10);
          uint64_t v121 = swift_allocObject();
          *(_OWORD *)(v121 + 16) = xmmword_101177E70;
          *(void *)(v121 + 32) = v120;
          aBlock[0] = v121;
          specialized Array._endMutation()();
          UIMenuElementSize v122 = aBlock[0];
          id v123 = v120;
          v124._countAndFlagsBits = 0;
          v124._object = (void *)0xE000000000000000;
          v147.value.super.Class isa = 0;
          v147.is_nil = 0;
          Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v124, (Swift::String_optional)0, v147, 0, 0xFFFFFFFFFFFFFFFFLL, v122, v131).super.super.isa;

          return (uint64_t)isa;
        }
        unint64_t v111 = v109;
LABEL_58:
        sub_10050BF48(0, &qword_101673A80);
        swift_bridgeObjectRetain_n();
        uint64_t v113 = 0;
        do
        {
          preferredElementSizedouble a = swift_bridgeObjectRetain();
          v114._countAndFlagsBits = 0;
          v114._object = (void *)0xE000000000000000;
          v146.value.super.Class isa = 0;
          v146.is_nil = 0;
          UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v114, (Swift::String_optional)0, v146, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSizea, v131);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          ++v113;
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        while (v111 != v113);
        swift_bridgeObjectRelease();
        unint64_t v115 = (double *)aBlock[0];
        goto LABEL_63;
      }
LABEL_55:
      swift_bridgeObjectRetain();
      uint64_t v112 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      unint64_t v109 = *((void *)v93 + 2);
      if (v112) {
        goto LABEL_51;
      }
      goto LABEL_56;
    }
  }
  id v100 = [v2 mainBundle];
  NSString v101 = String._bridgeToObjectiveC()();
  NSString v102 = String._bridgeToObjectiveC()();
  id v103 = [v100 localizedStringForKey:v101 value:v102 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v104 = String._bridgeToObjectiveC()();
  id v105 = [v134 systemImageNamed:v104];

  swift_allocObject();
  swift_unknownObjectWeakInit();
  v131._rawValue = 0;
  unint64_t v106 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  unint64_t v107 = v106;
  if (!(v145 >> 62))
  {
    id v108 = v106;
LABEL_48:
    sub_100F49780(0, 0, (uint64_t)v107);

    unint64_t v97 = v145;
    goto LABEL_49;
  }
  id v127 = v106;
  swift_bridgeObjectRetain();
  uint64_t v128 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v128 & 0x8000000000000000) == 0) {
    goto LABEL_48;
  }
  __break(1u);
  return result;
}

uint64_t sub_100595E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 56) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 64) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100595EF8, v6, v5);
}

uint64_t sub_100595EF8()
{
  int v1 = *(char **)(v0 + 56);
  swift_release();
  id v2 = [v1 traitCollection];
  sub_1005919EC(v2, (int)[*(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] documentIsSharedReadOnly], v0 + 16);
  sub_100591DC0((unsigned __int8 *)(v0 + 16), 0);
  sub_1005393A8(v0 + 16);

  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_100596130(void *a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4 - 8, v5);
  NSString v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  __chkstk_darwin(v8 - 8, v9);
  id v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v12 - 8, v13);
  NSString v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardHasSyncedAtLeastOnce;
  if (v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardHasSyncedAtLeastOnce]) {
    return;
  }
  uint64_t v17 = *(char **)(*(void *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v18 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v19 = *(void *)&v17[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_1005C7DB0(v19, (uint64_t)v7, type metadata accessor for CRLBoardCRDTData);
  NSString v20 = v17;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_1005C7E18((uint64_t)v7, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  id v21 = (uint64_t *)(*(void *)&v17[v18] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v22 = *v21;
  unint64_t v23 = v21[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v11, v22, v23, (uint64_t)v15);

  Class v24 = sub_100D3EC2C((uint64_t)v15);
  sub_1005C7E18((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
  id v25 = [a1 userInfo];
  if (!v25)
  {
    long long v34 = 0u;
    long long v35 = 0u;
LABEL_12:

    sub_100522F00((uint64_t)&v34, &qword_101672BF0);
    return;
  }
  NSString v26 = v25;
  uint64_t v27 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  v32[1] = 0xD00000000000001DLL;
  v32[2] = 0x80000001012394A0;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v27 + 16) && (unint64_t v28 = sub_10095647C((uint64_t)v33), (v29 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v27 + 56) + 32 * v28, (uint64_t)&v34);
  }
  else
  {
    long long v34 = 0u;
    long long v35 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)v33);
  if (!*((void *)&v35 + 1)) {
    goto LABEL_12;
  }
  sub_1005057FC(&qword_101672BF8);
  if (swift_dynamicCast() & 1) != 0 && (char v30 = sub_1006E5068(v24, v33[0]), swift_bridgeObjectRelease(), (v30))
  {
    v2[v16] = 1;
    id v31 = [v2 traitCollection];
    sub_1005919EC(v31, (int)[*(id *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] documentIsSharedReadOnly], (uint64_t)v33);
    sub_100591DC0((unsigned __int8 *)v33, 0);
    sub_1005393A8((uint64_t)v33);
  }
  else
  {
  }
}

void sub_100596588()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    int v1 = (char *)Strong;
    id v2 = sub_100E3C474();
    id v3 = [*(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_selectionModelTranslator] selectionPathForInfos:0];
    [v2 setSelectionPath:v3];
  }
}

void sub_10059662C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    int v1 = (void *)Strong;
    id v2 = sub_100E3C594();
    [v2 resetToDefaultModeAnimated:1];
  }
}

void sub_100596698()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    int v1 = (char *)Strong;
    id v2 = sub_100E3C474();
    id v3 = [*(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_selectionModelTranslator] selectionPathForInfos:0];
    [v2 setSelectionPath:v3];

    uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController];
    if (v4)
    {
      id v5 = v4;
      [v5 dismissViewControllerAnimated:1 completion:0];
    }
  }
}

id sub_100596770()
{
  uint64_t v1 = v0;
  sub_10050BF48(0, (unint64_t *)&unk_101674620);
  memset(v20, 0, sizeof(v20));
  id v19 = sub_100596A40(0xD00000000000001BLL, 0x800000010123D4F0, v20, 0);
  id v2 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"didTapUndoButtonWithSender:"];
  id v3 = [objc_allocWithZone((Class)UILongPressGestureRecognizer) initWithTarget:v1 action:"didLongPressUndoButtonWithSender:"];
  id v4 = [v19 button];
  [v4 addGestureRecognizer:v2];
  [v4 addGestureRecognizer:v3];
  id v5 = self;
  id v6 = v4;
  id v7 = [v5 mainBundle];
  NSString v8 = String._bridgeToObjectiveC()();
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v6 setLargeContentTitle:v11];

  id v12 = v6;
  id v13 = [v5 mainBundle];
  NSString v14 = String._bridgeToObjectiveC()();
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [v13 localizedStringForKey:v14 value:v15 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v12 setAccessibilityLabel:v17];

  return v19;
}

id sub_100596A40(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[3];
  if (v7)
  {
    NSString v8 = sub_10050F848(a3, a3[3]);
    uint64_t v9 = *(void *)(v7 - 8);
    __chkstk_darwin(v8, v8);
    NSString v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v9 + 16))(v11);
    uint64_t v12 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a3);
  }
  else
  {
    uint64_t v12 = 0;
  }
  id v13 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithImageNamed:v6 target:v12 action:a4];

  swift_unknownObjectRelease();
  return v13;
}

void sub_100596BB8()
{
  uint64_t v0 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v0 - 8, v1);
  id v3 = &v28[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (char *)Strong;
    uint64_t v6 = swift_unknownObjectWeakLoadStrong();
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = [v5 presentedViewController];
      if (v8)
      {
        uint64_t v9 = v8;
        uint64_t v10 = *(void **)&v5[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController];
        if (v10)
        {
          sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
          id v11 = v10;
          id v12 = v9;
          char v13 = static NSObject.== infix(_:_:)();

          if ((v13 & 1) != 0 && ([v12 isBeingDismissed] & 1) == 0) {
            [v12 dismissViewControllerAnimated:0 completion:0];
          }
        }
      }
      uint64_t v14 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
      uint64_t v15 = *(void **)(v7 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
      if (v15 && ([v15 isUserInteractionEnabled] & 1) != 0)
      {
        id v16 = *(void **)(v7 + v14);
        if (!v16
          || (id v17 = [v16 rootViewController]) == 0
          || (uint64_t v18 = v17,
              id v19 = objc_msgSend(v17, "crl_windowWrapper"),
              v18,
              !v19)
          || (id v20 = [v19 newWrapperBeginningIgnoringUserInteractionSafely], v19, !v20))
        {
          if (qword_10166F9D8 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v21 = (id)static OS_os_log.crlError;
          uint64_t v22 = static os_log_type_t.error.getter();
          sub_100BAC898((uint64_t)v21, (uint64_t)&_mh_execute_header, v22, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
            90,
            2,
            (uint64_t)_swiftEmptyArrayStorage);

          id v20 = 0;
        }
        uint64_t v23 = type metadata accessor for TaskPriority();
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v3, 1, 1, v23);
        type metadata accessor for MainActor();
        id v24 = v20;
        swift_unknownObjectRetain();
        id v25 = v5;
        uint64_t v26 = static MainActor.shared.getter();
        uint64_t v27 = (void *)swift_allocObject();
        void v27[2] = v26;
        v27[3] = &protocol witness table for MainActor;
        v27[4] = v7;
        v27[5] = v25;
        v27[6] = v20;
        sub_10059134C((uint64_t)v3, (uint64_t)&unk_10169FAF0, (uint64_t)v27);

        swift_unknownObjectRelease();
        swift_release();
      }
      else
      {

        swift_unknownObjectRelease();
      }
    }
    else
    {
    }
  }
}

uint64_t sub_100596F50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = Strong;
    uint64_t v10 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
    id v11 = (void *)swift_allocObject();
    _OWORD v11[2] = 0;
    v11[3] = 0;
    v11[4] = v9;
    v11[5] = a1;
    v11[6] = a2;
    swift_retain();
    sub_10059134C((uint64_t)v7, (uint64_t)&unk_101674590, (uint64_t)v11);
    swift_release();
  }
  return 0;
}

uint64_t sub_1005970BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[11] = a5;
  v6[12] = a6;
  v6[10] = a4;
  v6[13] = type metadata accessor for CRLBoardCRDTData(0);
  v6[14] = swift_task_alloc();
  type metadata accessor for UUID();
  v6[15] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v6[16] = swift_task_alloc();
  return _swift_task_switch(sub_1005971AC, 0, 0);
}

uint64_t sub_1005971AC()
{
  *(void *)(v0 + 136) = type metadata accessor for MainActor();
  *(void *)(v0 + 144) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100597244, v2, v1);
}

uint64_t sub_100597244()
{
  uint64_t v1 = *(void **)(v0 + 80);
  swift_release();
  *(void *)(v0 + 152) = [v1 view];
  return _swift_task_switch(sub_1005972CC, 0, 0);
}

uint64_t sub_1005972CC(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  if (*(void *)(v3 + 152))
  {
    *(void *)(v3 + 160) = static MainActor.shared.getter();
    uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v6 = v5;
    a1 = sub_100597364;
    a2 = v4;
    a3 = v6;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(a1, a2, a3);
}

uint64_t sub_100597364()
{
  uint64_t v1 = *(void **)(v0 + 152);
  swift_release();
  *(void *)(v0 + 168) = [v1 window];

  return _swift_task_switch(sub_1005973EC, 0, 0);
}

uint64_t sub_1005973EC()
{
  if (v0[21])
  {
    v0[22] = static MainActor.shared.getter();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1005974CC, v2, v1);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
}

uint64_t sub_1005974CC()
{
  uint64_t v1 = *(void **)(v0 + 168);
  swift_release();
  *(void *)(v0 + 184) = [v1 windowScene];

  return _swift_task_switch(sub_100597554, 0, 0);
}

uint64_t sub_100597554()
{
  if (v0[23])
  {
    v0[24] = static MainActor.shared.getter();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_100597634, v2, v1);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
}

uint64_t sub_100597634()
{
  uint64_t v1 = *(void **)(v0 + 184);
  swift_release();
  *(void *)(v0 + 200) = [v1 delegate];

  return _swift_task_switch(sub_1005976BC, 0, 0);
}

uint64_t sub_1005976BC()
{
  if (v0[25])
  {
    type metadata accessor for CRLiOSSceneDelegate();
    uint64_t v1 = swift_dynamicCastClass();
    v0[26] = v1;
    if (v1)
    {
      v0[27] = static MainActor.shared.getter();
      uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
      return _swift_task_switch(sub_1005977C0, v3, v2);
    }
    swift_unknownObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1005977C0()
{
  uint64_t v1 = v0[10];
  swift_release();
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);
  uint64_t v3 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  v0[28] = v2;
  v0[29] = v3;
  uint64_t v4 = *(void **)(v2 + v3);
  v0[30] = v4;
  id v5 = v4;
  return _swift_task_switch(sub_10059785C, 0, 0);
}

uint64_t sub_10059785C()
{
  uint64_t v1 = (char *)v0[30];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[15];
  uint64_t v5 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v6 = *(void *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_1005C7DB0(v6, v3, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_1005C7E18(v3, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v7 = (uint64_t *)(*(void *)&v1[v5] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v8 = *v7;
  unint64_t v9 = v7[1];
  swift_bridgeObjectRetain();
  sub_100753370(v4, v8, v9, v2);

  v0[31] = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1005979D4, v11, v10);
}

uint64_t sub_1005979D4()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[29];
  swift_release();
  uint64_t v3 = *(void **)(v1 + v2);
  v0[32] = v3;
  id v4 = v3;
  return _swift_task_switch(sub_100597A50, 0, 0);
}

uint64_t sub_100597A50()
{
  uint64_t v1 = (char *)v0[32];
  uint64_t v2 = v0[14];
  uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_1005C7DB0(v3, v2, type metadata accessor for CRLBoardCRDTData);
  sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  v0[33] = v0[9];
  sub_1005C7E18(v2, type metadata accessor for CRLBoardCRDTData);

  v0[34] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[35] = v5;
  v0[36] = v4;
  return _swift_task_switch(sub_100597B90, v5, v4);
}

void sub_100597B90()
{
  sub_100A708BC();
  v0[37] = v1;
  if (v1)
  {
    uint64_t v4 = (void (*)(uint64_t, double))((char *)&dword_101677050 + dword_101677050);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[38] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100597C54;
    uint64_t v3 = v0[16];
    v4(v3, 2.0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100597C54(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 312) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 280);
    uint64_t v6 = *(void *)(v4 + 288);
    uint64_t v7 = sub_100597F04;
  }
  else
  {

    *(void *)(v4 + 320) = a1;
    uint64_t v5 = *(void *)(v4 + 280);
    uint64_t v6 = *(void *)(v4 + 288);
    uint64_t v7 = sub_100597D84;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100597D84()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_release();
  sub_1005C7E18(v1, type metadata accessor for CRLBoardIdentifier);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100597E14, 0, 0);
}

uint64_t sub_100597E14()
{
  uint64_t v1 = (void *)v0[40];
  uint64_t v2 = (void (*)(uint64_t, unint64_t, void))v0[11];
  id v3 = [v1 PNGRepresentation];
  uint64_t v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v6 = v5;

  v2(v4, v6, 0);
  sub_100510084(v4, v6);

  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100597F04()
{
  uint64_t v1 = *(void **)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 128);
  swift_release();

  sub_1005C7E18(v2, type metadata accessor for CRLBoardIdentifier);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100597FA4, 0, 0);
}

uint64_t sub_100597FA4()
{
  uint64_t v1 = v0[39];
  uint64_t v2 = (void (*)(void, unint64_t, uint64_t))v0[11];
  swift_unknownObjectRelease();
  swift_errorRetain();
  v2(0, 0xF000000000000000, v1);
  swift_errorRelease();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

id sub_10059805C(uint64_t a1, void *aBlock)
{
  uint64_t v2 = *(uint64_t (**)(void (*)(uint64_t, unint64_t, uint64_t), uint64_t))(a1 + 32);
  id v3 = _Block_copy(aBlock);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  swift_retain();
  uint64_t v5 = (void *)v2(sub_1005C66A0, v4);
  swift_release();
  swift_release();

  return v5;
}

void sub_1005980FC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 >> 60 == 15)
  {
    Class isa = 0;
    if (a3)
    {
LABEL_3:
      uint64_t v7 = _convertErrorToNSError(_:)();
      goto LABEL_6;
    }
  }
  else
  {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    if (a3) {
      goto LABEL_3;
    }
  }
  uint64_t v7 = 0;
LABEL_6:
  id v8 = (id)v7;
  (*(void (**)(uint64_t, Class))(a4 + 16))(a4, isa);
}

uint64_t sub_100598194()
{
  v1[8] = v0;
  type metadata accessor for CRLBoardCRDTData(0);
  v1[9] = swift_task_alloc();
  type metadata accessor for UUID();
  v1[10] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[13] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[14] = v3;
  v1[15] = v2;
  return _swift_task_switch(sub_1005982C0, v3, v2);
}

void sub_1005982C0()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[16] = Strong;
  if (!Strong) {
    goto LABEL_14;
  }
  uint64_t v2 = (void *)Strong;
  if ((*(unsigned char *)(Strong + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_isNetworkReachable) & 1) == 0)
  {
    swift_release();

LABEL_15:
    uint64_t v21 = 0;
    goto LABEL_16;
  }
  id v3 = [self sharedApplication];
  id v4 = [v3 delegate];

  if (!v4)
  {
    __break(1u);
    return;
  }
  type metadata accessor for CRLiOSAppDelegate();
  swift_dynamicCastClassUnconditional();
  swift_retain();
  swift_unknownObjectRelease();
  int v5 = sub_100AC1C10();
  swift_release();
  if (v5 != 1) {
    goto LABEL_13;
  }
  uint64_t v6 = v0[12];
  uint64_t v7 = v0[9];
  uint64_t v8 = v0[10];
  uint64_t v35 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  uint64_t v36 = *(void *)(v0[8] + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);
  uint64_t v9 = *(char **)(v36 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v10 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v11 = *(void *)&v9[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_1005C7DB0(v11, v7, type metadata accessor for CRLBoardCRDTData);
  id v12 = v9;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_1005C7E18(v7, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v13 = (uint64_t *)(*(void *)&v9[v10] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v14 = *v13;
  unint64_t v15 = v13[1];
  swift_bridgeObjectRetain();
  sub_100753370(v8, v14, v15, v6);

  id v16 = (void *)(v6 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v17 = v0[12];
  if (!*v16 && v16[1] == 0xE000000000000000)
  {
    sub_1005C7E18(v0[12], type metadata accessor for CRLBoardIdentifier);
    goto LABEL_11;
  }
  char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
  sub_1005C7E18(v17, type metadata accessor for CRLBoardIdentifier);
  if ((v18 & 1) == 0)
  {
LABEL_13:

LABEL_14:
    swift_release();
    goto LABEL_15;
  }
LABEL_11:
  uint64_t v19 = v0[8];
  uint64_t v20 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardHasSyncedAtLeastOnce;
  v0[17] = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardHasSyncedAtLeastOnce;
  if (*(unsigned char *)(v19 + v20))
  {
    swift_release();

    uint64_t v21 = *(unsigned __int8 *)(v19 + v20);
LABEL_16:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = (void (*)(uint64_t))v0[1];
    v22(v21);
    return;
  }
  uint64_t v24 = v0[10];
  uint64_t v23 = v0[11];
  id v25 = *(char **)(v36 + v35);
  uint64_t v26 = v0[9];
  uint64_t v27 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v28 = *(void *)&v25[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_1005C7DB0(v28, v26, type metadata accessor for CRLBoardCRDTData);
  char v29 = v25;
  swift_retain();
  CRRegister.wrappedValue.getter();
  sub_1005C7E18(v26, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  char v30 = (uint64_t *)(*(void *)&v25[v27] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v31 = *v30;
  unint64_t v32 = v30[1];
  swift_bridgeObjectRetain();
  sub_100753370(v24, v31, v32, v23);

  __int16 v33 = (void *)swift_task_alloc();
  v0[18] = v33;
  *__int16 v33 = v0;
  v33[1] = sub_100598778;
  uint64_t v34 = v0[11];
  sub_100ED787C(v34);
}

uint64_t sub_100598778(char a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 88);
  *(unsigned char *)(*v1 + 152) = a1;
  swift_task_dealloc();
  sub_1005C7E18(v3, type metadata accessor for CRLBoardIdentifier);
  uint64_t v4 = *(void *)(v2 + 120);
  uint64_t v5 = *(void *)(v2 + 112);
  return _swift_task_switch(sub_1005988D8, v5, v4);
}

uint64_t sub_1005988D8()
{
  char v1 = *(unsigned char *)(v0 + 152);
  uint64_t v3 = *(void **)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 64);
  swift_release();

  *(unsigned char *)(v4 + v2) = v1;
  uint64_t v5 = *(unsigned __int8 *)(v0 + 152);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v6(v5);
}

id sub_100598980()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v1 = (char *)Strong;
    id v2 = sub_100E3C594();
    id v3 = [v2 mode];

    LOBYTE(v2) = [v3 wantsToEndForNonPopoverPresentations];
    if (v2)
    {
      id v4 = sub_100E3C594();
      [v4 resetToDefaultModeAnimated:1];
    }
    id v5 = *(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shareSheetProvider];
    id v6 = sub_100647234();
  }
  else
  {
    id v7 = objc_allocWithZone((Class)type metadata accessor for CRLSelectionAwareActivityViewController());
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    id v5 = [v7 initWithActivityItems:isa applicationActivities:0];

    id v6 = sub_100DC6BC4(v5);
  }

  return v6;
}

id sub_100598AC4(uint64_t a1)
{
  char v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  id v3 = (void *)v1(v2);
  swift_release();

  return v3;
}

void sub_100598B14(int a1, char *a2)
{
  id v3 = [a2 navigationController];
  if (v3)
  {
    id v4 = v3;
    id v5 = [v3 navigationBar];

    [v5 rename:0];
  }
  id v6 = *(void **)(*(void *)&a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
  v10[3] = &type metadata for CRLFeatureFlags;
  v10[4] = (id)sub_1005396A8();
  LOBYTE(v10[0]) = 12;
  id v7 = v6;
  LOBYTE(v6) = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v10);
  if (v6)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v10[0])
    {

      if (qword_10166FAE0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v8 = (id)static OS_os_log.crlFollow;
      uint64_t v9 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

      sub_1007ECCE4(1);
    }
  }
}

uint64_t sub_100598CDC(uint64_t (*a1)(double *), uint64_t a2, char *a3)
{
  uint64_t v6 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = &v54[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = &v54[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for UUID();
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = &v54[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  uint64_t v22 = __chkstk_darwin(v18 - 8, v21);
  uint64_t v23 = &v54[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v22, v24);
  uint64_t v26 = &v54[-v25];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return a1(_swiftEmptyArrayStorage);
  }
  uint64_t v56 = v19;
  uint64_t v58 = a2;
  NSString v59 = (void (*)(uint64_t))a1;
  unint64_t v57 = a3;
  uint64_t v28 = *(char **)(*(void *)&a3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v29 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v30 = *(void *)&v28[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  id v60 = Strong;
  uint64_t v31 = v30 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_1005C7DB0(v31, (uint64_t)v13, type metadata accessor for CRLBoardCRDTData);
  unint64_t v32 = v28;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_1005C7E18((uint64_t)v13, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  __int16 v33 = (uint64_t *)(*(void *)&v28[v29] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v34 = *v33;
  unint64_t v35 = v33[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v17, v34, v35, (uint64_t)v26);

  sub_100ED7F04((uint64_t)v26, (uint64_t)v9);
  char v37 = v9[1];
  sub_1005C7E18((uint64_t)v9, type metadata accessor for CRLBoardViewModelMetadata);
  id v38 = [self mainBundle];
  if (v37)
  {
    NSString v39 = String._bridgeToObjectiveC()();
    NSString v40 = String._bridgeToObjectiveC()();
    id v41 = [v38 localizedStringForKey:v39 value:v40 table:0];
    int v55 = 1;
  }
  else
  {
    NSString v39 = String._bridgeToObjectiveC()();
    NSString v40 = String._bridgeToObjectiveC()();
    id v41 = [v38 localizedStringForKey:v39 value:v40 table:0];
    int v55 = 0;
  }
  id v42 = v41;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  NSString v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v44 = [self systemImageNamed:v43];

  sub_1005C7DB0((uint64_t)v26, (uint64_t)v23, type metadata accessor for CRLBoardIdentifier);
  unint64_t v45 = (*(unsigned __int8 *)(v56 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
  uint64_t v46 = v45 + v20;
  uint64_t v47 = swift_allocObject();
  sub_1005C68E4((uint64_t)v23, v47 + v45, type metadata accessor for CRLBoardIdentifier);
  *(unsigned char *)(v47 + v46) = v55;
  uint64_t v48 = v57;
  *(void *)((v46 & 0xFFFFFFFFFFFFFFF8) + v47 + 8) = v57;
  id v49 = v48;
  unint64_t v50 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_101177E70;
  *(void *)(v51 + 32) = v50;
  uint64_t v61 = v51;
  specialized Array._endMutation()();
  uint64_t v52 = v61;
  id v53 = v50;
  v59(v52);

  swift_bridgeObjectRelease();
  return sub_1005C7E18((uint64_t)v26, type metadata accessor for CRLBoardIdentifier);
}

uint64_t sub_100599314(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v7 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8, v10);
  uint64_t v11 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  sub_1005C7DB0(a2, (uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
  type metadata accessor for MainActor();
  id v17 = a4;
  uint64_t v18 = static MainActor.shared.getter();
  unint64_t v19 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v20 = v19 + v9;
  unint64_t v21 = (v19 + v9) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v18;
  *(void *)(v22 + 24) = &protocol witness table for MainActor;
  sub_1005C68E4((uint64_t)v11, v22 + v19, type metadata accessor for CRLBoardIdentifier);
  *(unsigned char *)(v22 + v20) = a3;
  *(void *)(v21 + v22 + 8) = v17;
  sub_10059134C((uint64_t)v15, (uint64_t)&unk_101674560, v22);
  return swift_release();
}

uint64_t sub_100599548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 96) = a5;
  *(void *)(v5 + 16) = a4;
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  *(void *)(v5 + 24) = v6;
  *(void *)(v5 + 32) = *(void *)(v6 - 8);
  *(void *)(v5 + 40) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v5 + 48) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v5 + 56) = v8;
  *(void *)(v5 + 64) = v7;
  return _swift_task_switch(sub_100599640, v8, v7);
}

uint64_t sub_100599640()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  char v3 = *(unsigned char *)(v0 + 96);
  sub_1005C7DB0(*(void *)(v0 + 16), v1, type metadata accessor for CRLBoardIdentifier);
  sub_1005057FC(&qword_10167ADD0);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10117E810;
  sub_1005C7DB0(v1, v5 + v4, type metadata accessor for CRLBoardIdentifier);
  uint64_t v6 = sub_1005087BC(v5);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  id v7 = objc_allocWithZone((Class)type metadata accessor for CRLBoardFavoriteCommand());
  id v8 = sub_100DF54C8((uint64_t)v6, (v3 & 1) == 0);
  *(void *)(v0 + 72) = v8;
  sub_1005C7E18(v1, type metadata accessor for CRLBoardIdentifier);
  id v9 = [self sharedApplication];
  id v10 = [v9 delegate];

  if (!v10)
  {
    __break(1u);
    goto LABEL_7;
  }
  type metadata accessor for CRLiOSAppDelegate();
  uint64_t v11 = *(void **)(swift_dynamicCastClassUnconditional()
                 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
  *(void *)(v0 + 80) = v11;
  if (!v11)
  {
LABEL_7:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 242, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 242);
    uint64_t result = swift_unknownObjectRelease();
    __break(1u);
    return result;
  }
  v11;
  swift_unknownObjectRelease();
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_100599900;
  return sub_100DF8B44((uint64_t)v8);
}

uint64_t sub_100599900()
{
  uint64_t v2 = *v1;
  char v3 = *(void **)(*v1 + 80);
  swift_task_dealloc();

  if (v0)
  {
    swift_errorRelease();
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v5 = *(void *)(v2 + 64);
    uint64_t v6 = sub_1005C7FF4;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v5 = *(void *)(v2 + 64);
    uint64_t v6 = sub_100599A3C;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_100599A3C()
{
  uint64_t v1 = *(void **)(v0 + 72);
  swift_release();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100599AAC()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = v1;
    id v3 = v1;
    sub_100E533D0(sub_1005C629C, v2);

    return swift_release();
  }
  return result;
}

void sub_100599B4C(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v7 = (void *)Strong;
    uint64_t v8 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF;
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF))
    {
      if (qword_10166F9C8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v9 = (id)static OS_os_log.crlDefault;
      uint64_t v10 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Already exporting to PDF. Skipping.", 35, 2, (uint64_t)_swiftEmptyArrayStorage);
    }
    else
    {
      uint64_t v11 = *(void *)(*(void *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                      + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardActor);
      swift_retain();
      id v12 = [a1 presentationSourceItem];
      if (v12)
      {
        id v13 = v12;
        if (qword_10166F9C8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v14 = (id)static OS_os_log.crlDefault;
        uint64_t v15 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v15, (uint64_t)"Exporting to PDF.", 17, 2, (uint64_t)_swiftEmptyArrayStorage);

        *((unsigned char *)v7 + v8) = 1;
        uint64_t v16 = type metadata accessor for TaskPriority();
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 1, 1, v16);
        type metadata accessor for MainActor();
        swift_retain();
        id v17 = v7;
        swift_unknownObjectRetain();
        uint64_t v18 = static MainActor.shared.getter();
        unint64_t v19 = (void *)swift_allocObject();
        v19[2] = v18;
        v19[3] = &protocol witness table for MainActor;
        v19[4] = v17;
        v19[5] = v11;
        v19[6] = v13;
        sub_10059134C((uint64_t)v5, (uint64_t)&unk_101674548, (uint64_t)v19);

        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"makeMenuElementForExportToPDF()", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 533, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeMenuElementForExportToPDF()", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 533);
      }
      swift_release();
    }
  }
}

uint64_t sub_100599F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[28] = a5;
  v6[29] = a6;
  v6[27] = a4;
  type metadata accessor for MainActor();
  v6[30] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[31] = v8;
  v6[32] = v7;
  return _swift_task_switch(sub_100599FBC, v8, v7);
}

uint64_t sub_100599FBC()
{
  id v1 = sub_100E3C594();
  id v2 = [v1 mode];

  LODWORD(v1) = [v2 wantsToEndForNonPopoverPresentations];
  if (v1)
  {
    id v3 = sub_100E3C594();
    [v3 resetToDefaultModeAnimated:1];
  }
  id v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_101684110 + dword_101684110);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[33] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10059A0D0;
  uint64_t v6 = v0[28];
  uint64_t v5 = v0[29];
  uint64_t v7 = v0[27];
  return v9(v6, v7, v5);
}

uint64_t sub_10059A0D0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 272) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 256);
  uint64_t v4 = *(void *)(v2 + 248);
  if (v0) {
    uint64_t v5 = sub_10059A20C;
  }
  else {
    uint64_t v5 = sub_1005C7EE0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10059A20C()
{
  swift_release();
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  swift_getErrorValue();
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[21];
  id v5 = v1;
  uint64_t v6 = Error.publicDescription.getter(v3, v4);
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v9 = sub_100528BE4();
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  swift_getErrorValue();
  uint64_t v10 = Error.fullDescription.getter(v0[23]);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v9;
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 80) = v11;
  uint64_t v12 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Error retrieving immutable board or exporting to PDF: %{public}@ <%@>", 69, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  *(unsigned char *)(v0[27] + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF) = 0;
  id v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

Class sub_10059A408()
{
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v5 = String._bridgeToObjectiveC()();
  uint64_t v6 = self;
  id v7 = [v6 systemImageNamed:v5];

  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v9 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v10 = [v0 mainBundle];
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v10 localizedStringForKey:v11 value:v12 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v6 systemImageNamed:v14];

  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v16 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v17 = [v0 mainBundle];
  NSString v18 = String._bridgeToObjectiveC()();
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [v17 localizedStringForKey:v18 value:v19 table:0];

  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v23 = v22;

  sub_10050BF48(0, &qword_101673A80);
  NSString v24 = String._bridgeToObjectiveC()();
  uint64_t v25 = (objc_class *)[v6 systemImageNamed:v24];

  v26._countAndFlagsBits = v21;
  v26._object = v23;
  v29.value.super.Class isa = v25;
  v29.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v26, (Swift::String_optional)0, v29, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, 0).super.super.isa;

  return isa;
}

void sub_10059A914(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  NSString v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v7 = (void *)Strong;
    uint64_t v8 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF;
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF))
    {
      if (qword_10166F9C8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v9 = (id)static OS_os_log.crlDefault;
      uint64_t v10 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Already exporting to PDF. Skipping.", 35, 2, (uint64_t)_swiftEmptyArrayStorage);
    }
    else
    {
      uint64_t v11 = *(void *)(*(void *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                      + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardActor);
      swift_retain();
      id v12 = [a1 presentationSourceItem];
      if (v12)
      {
        id v13 = v12;
        if (qword_10166F9C8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v14 = (id)static OS_os_log.crlDefault;
        uint64_t v15 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v15, (uint64_t)"Exporting to PDF.", 17, 2, (uint64_t)_swiftEmptyArrayStorage);

        *((unsigned char *)v7 + v8) = 1;
        uint64_t v16 = type metadata accessor for TaskPriority();
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 1, 1, v16);
        type metadata accessor for MainActor();
        swift_retain();
        id v17 = v7;
        swift_unknownObjectRetain();
        uint64_t v18 = static MainActor.shared.getter();
        NSString v19 = (void *)swift_allocObject();
        v19[2] = v18;
        v19[3] = &protocol witness table for MainActor;
        v19[4] = v17;
        v19[5] = v11;
        v19[6] = v13;
        sub_10059134C((uint64_t)v5, (uint64_t)&unk_101674510, (uint64_t)v19);

        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"makeSubmenuForExport()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 570, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeSubmenuForExport()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 570);
      }
      swift_release();
    }
  }
}

uint64_t sub_10059ACE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[28] = a5;
  v6[29] = a6;
  v6[27] = a4;
  type metadata accessor for MainActor();
  v6[30] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[31] = v8;
  v6[32] = v7;
  return _swift_task_switch(sub_10059AD84, v8, v7);
}

uint64_t sub_10059AD84()
{
  id v1 = sub_100E3C594();
  id v2 = [v1 mode];

  LODWORD(v1) = [v2 wantsToEndForNonPopoverPresentations];
  if (v1)
  {
    id v3 = sub_100E3C594();
    [v3 resetToDefaultModeAnimated:1];
  }
  id v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_101684110 + dword_101684110);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[33] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10059AE98;
  uint64_t v6 = v0[28];
  uint64_t v5 = v0[29];
  uint64_t v7 = v0[27];
  return v9(v6, v7, v5);
}

uint64_t sub_10059AE98()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 272) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 256);
  uint64_t v4 = *(void *)(v2 + 248);
  if (v0) {
    uint64_t v5 = sub_10059A20C;
  }
  else {
    uint64_t v5 = sub_10059AFD4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10059AFD4()
{
  swift_release();
  *(unsigned char *)(*(void *)(v0 + 216) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF) = 0;
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10059B048(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    uint64_t v8 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF;
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF))
    {
      if (qword_10166F9C8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v9 = (id)static OS_os_log.crlDefault;
      uint64_t v10 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Already exporting to PDF. Skipping.", 35, 2, (uint64_t)_swiftEmptyArrayStorage);
    }
    else
    {
      uint64_t v11 = *(void *)(*(void *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                      + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardActor);
      swift_retain();
      id v12 = [a1 presentationSourceItem];
      if (v12)
      {
        id v13 = v12;
        if (qword_10166F9C8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v14 = (id)static OS_os_log.crlDefault;
        uint64_t v15 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v15, (uint64_t)"Exporting to PDF.", 17, 2, (uint64_t)_swiftEmptyArrayStorage);

        *((unsigned char *)v7 + v8) = 1;
        uint64_t v16 = type metadata accessor for TaskPriority();
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 1, 1, v16);
        type metadata accessor for MainActor();
        swift_retain();
        id v17 = v7;
        swift_unknownObjectRetain();
        uint64_t v18 = static MainActor.shared.getter();
        NSString v19 = (void *)swift_allocObject();
        v19[2] = v18;
        v19[3] = &protocol witness table for MainActor;
        v19[4] = v17;
        v19[5] = v11;
        v19[6] = v13;
        sub_10059134C((uint64_t)v5, (uint64_t)&unk_101674500, (uint64_t)v19);

        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"makeSubmenuForExport()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 603, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeSubmenuForExport()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 603);
      }
      swift_release();
    }
  }
}

uint64_t sub_10059B41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[31] = a5;
  v6[32] = a6;
  v6[30] = a4;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101683E40);
  v6[33] = v7;
  v6[34] = *(void *)(v7 - 8);
  v6[35] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[36] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[37] = v9;
  v6[38] = v8;
  return _swift_task_switch(sub_10059B518, v9, v8);
}

uint64_t sub_10059B518()
{
  id v1 = sub_100E3C594();
  id v2 = [v1 mode];

  LODWORD(v1) = [v2 wantsToEndForNonPopoverPresentations];
  if (v1)
  {
    id v3 = sub_100E3C594();
    [v3 resetToDefaultModeAnimated:1];
  }
  uint64_t v5 = v0[34];
  uint64_t v4 = v0[35];
  uint64_t v6 = v0[33];
  uint64_t v7 = v0[30];
  [*(id *)(v7 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) visibleUnscaledRect];
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  uint64_t v16 = *(char **)(*(void *)(v7 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v17 = *(void *)&v16[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  uint64_t v18 = type metadata accessor for CRLBoardCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v17 + *(int *)(v18 + 36), v6);
  NSString v19 = v16;
  id v20 = sub_1005C2550(v4, (uint64_t)v19);
  v0[39] = v20;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);

  Swift::String v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double))((char *)&dword_1016840E0 + dword_1016840E0);
  uint64_t v21 = (void *)swift_task_alloc();
  v0[40] = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_10059B75C;
  uint64_t v23 = v0[31];
  uint64_t v22 = v0[32];
  uint64_t v24 = v0[30];
  return v26(v23, v24, v22, (uint64_t)v20, v9, v11, v13, v15);
}

uint64_t sub_10059B75C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 328) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 296);
    uint64_t v4 = *(void *)(v2 + 304);
    uint64_t v5 = sub_10059B8F4;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 296);
    uint64_t v4 = *(void *)(v2 + 304);
    uint64_t v5 = sub_10059B878;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10059B878()
{
  swift_release();
  *(unsigned char *)(*(void *)(v0 + 240) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF) = 0;
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10059B8F4()
{
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  swift_getErrorValue();
  uint64_t v3 = v0[26];
  uint64_t v4 = v0[27];
  id v5 = v1;
  uint64_t v6 = Error.publicDescription.getter(v3, v4);
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v9 = sub_100528BE4();
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  swift_getErrorValue();
  uint64_t v10 = Error.fullDescription.getter(v0[23]);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v9;
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 80) = v11;
  uint64_t v12 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Error retrieving immutable board or exporting to PDF: %{public}@ <%@>", 69, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  *(unsigned char *)(v0[30] + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF) = 0;
  swift_task_dealloc();
  double v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

Class sub_10059BB04()
{
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v5 = String._bridgeToObjectiveC()();
  uint64_t v6 = self;
  id v7 = [v6 systemImageNamed:v5];

  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v9 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v10 = [v0 mainBundle];
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v10 localizedStringForKey:v11 value:v12 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v6 systemImageNamed:v14];

  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v16 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v17 = [v0 mainBundle];
  NSString v18 = String._bridgeToObjectiveC()();
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [v17 localizedStringForKey:v18 value:v19 table:0];

  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v23 = v22;

  sub_10050BF48(0, &qword_101673A80);
  NSString v24 = String._bridgeToObjectiveC()();
  uint64_t v25 = (objc_class *)[v6 systemImageNamed:v24];

  v26._countAndFlagsBits = v21;
  v26._object = v23;
  v29.value.super.Class isa = v25;
  v29.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v26, (Swift::String_optional)0, v29, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, 0).super.super.isa;

  return isa;
}

void sub_10059BFEC()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = Strong;
    [Strong print:0];
  }
}

uint64_t sub_10059C04C()
{
  uint64_t v0 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v0 - 8, v1);
  NSString v3 = &v20[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v10 = (char *)result;
    NSString v11 = *(char **)(*(void *)(result + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                   + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    uint64_t v12 = *(void *)&v11[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    uint64_t v13 = type metadata accessor for CRLBoardCRDTData(0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v8, v12 + *(int *)(v13 + 36), v4);
    NSString v14 = v11;
    id v15 = sub_1005C2550((uint64_t)v8, (uint64_t)v14);
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);

    [*(id *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] endEditing];
    uint64_t v16 = type metadata accessor for TaskPriority();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v3, 1, 1, v16);
    type metadata accessor for MainActor();
    id v17 = v10;
    swift_bridgeObjectRetain();
    uint64_t v18 = static MainActor.shared.getter();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v18;
    *(void *)(v19 + 24) = &protocol witness table for MainActor;
    *(void *)(v19 + 32) = v17;
    *(unsigned char *)(v19 + 40) = 1;
    *(void *)(v19 + 48) = v15;
    sub_10059134C((uint64_t)v3, (uint64_t)&unk_10169FA50, v19);

    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_10059C344()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled;
  int v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled);
  if (v2 != 2)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_3;
    }
LABEL_5:
    id v4 = [self mainBundle];
    NSString v5 = String._bridgeToObjectiveC()();
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v4 localizedStringForKey:v5 value:v6 table:0];
    char v8 = 1;
    goto LABEL_6;
  }
  char v3 = sub_100E4EA7C();
  *(unsigned char *)(v0 + v1) = v3 & 1;
  if (v3) {
    goto LABEL_5;
  }
LABEL_3:
  id v4 = [self mainBundle];
  NSString v5 = String._bridgeToObjectiveC()();
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v4 localizedStringForKey:v5 value:v6 table:0];
  char v8 = 0;
LABEL_6:
  id v9 = v7;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [self systemImageNamed:v10];

  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(unsigned char *)(v13 + 24) = v8;
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

unint64_t sub_10059C5C8()
{
  uint64_t v1 = v0;
  unint64_t v24 = (unint64_t)_swiftEmptyArrayStorage;
  if (([*(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) documentIsSharedReadOnly] & 1) == 0)
  {
    int v2 = self;
    uint64_t v3 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_1005C5E48;
    aBlock[5] = v3;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_100594810;
    void aBlock[3] = &unk_101508E78;
    id v4 = _Block_copy(aBlock);
    swift_release();
    id v5 = [v2 elementWithUncachedProvider:v4];
    _Block_release(v4);
    id v6 = v5;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  uint64_t v7 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController;
  char v8 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController);
  if (!v8) {
    goto LABEL_13;
  }
  if ([v8 isBeingPresented]) {
    goto LABEL_12;
  }
  id v9 = *(void **)(v1 + v7);
  if (!v9) {
    goto LABEL_13;
  }
  if ([v9 isMovingToParentViewController])
  {
LABEL_12:
    char v12 = 1;
    goto LABEL_14;
  }
  NSString v10 = *(void **)(v1 + v7);
  if (v10)
  {
    id v11 = [v10 presentingViewController];
    if (v11)
    {

      goto LABEL_12;
    }
  }
LABEL_13:
  char v12 = 0;
LABEL_14:
  id v13 = [self mainBundle];
  NSString v14 = String._bridgeToObjectiveC()();
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [v13 localizedStringForKey:v14 value:v15 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [self imageNamed:v17];

  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 16) = v12;
  *(void *)(v20 + 24) = v19;
  id v21 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  return v24;
}

uint64_t sub_10059C9C0(uint64_t (*a1)(double *))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return a1(_swiftEmptyArrayStorage);
  }
  uint64_t v3 = (void *)Strong;
  id v4 = [self mainBundle];
  NSString v5 = String._bridgeToObjectiveC()();
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v4 localizedStringForKey:v5 value:v6 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [self systemImageNamed:v8];

  swift_allocObject();
  swift_unknownObjectWeakInit();
  NSString v10 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_101177E70;
  *(void *)(v11 + 32) = v10;
  uint64_t v14 = v11;
  specialized Array._endMutation()();
  id v12 = v10;
  a1((double *)v14);

  return swift_bridgeObjectRelease();
}

void sub_10059CC2C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100E5D3EC();
    sub_100E68A9C(0);
  }
}

void sub_10059CC88(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (!Strong) {
      return;
    }
    id v5 = (id)Strong;
    sub_100E3AD00((uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
    goto LABEL_7;
  }
  swift_beginAccess();
  uint64_t v2 = swift_unknownObjectWeakLoadStrong();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v4 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController);
    id v5 = v4;

    if (v4)
    {
      [v5 dismissViewControllerAnimated:1 completion:0];
LABEL_7:
    }
  }
}

uint64_t sub_10059CD60()
{
  return swift_release();
}

uint64_t sub_10059CDEC(char a1)
{
  id v51 = [*(id *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) mathCalculationController];
  uint64_t v2 = -[CRLMathCalculationController mathHintsMode]_0();
  uint64_t v3 = self;
  id v4 = [v3 mainBundle];
  NSString v5 = String._bridgeToObjectiveC()();
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v4 localizedStringForKey:v5 value:v6 table:0];

  uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = v8;

  id v10 = [v3 mainBundle];
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v10 localizedStringForKey:v11 value:v12 table:0];

  uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v15 = v14;

  id v16 = [v3 mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v16 localizedStringForKey:v17 value:v18 table:0];

  uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v48 = v20;

  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  *(void *)(swift_allocObject() + 16) = v51;
  id v21 = v51;
  swift_bridgeObjectRetain();
  unint64_t v50 = v9;
  id v22 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  id v49 = v22;
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  *(void *)(swift_allocObject() + 16) = v21;
  id v23 = v21;
  swift_bridgeObjectRetain();
  uint64_t v52 = v15;
  id v24 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  uint64_t v25 = v2;
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  if (a1) {
    children._rawValue = 0;
  }
  else {
    children._rawValue = (void *)8;
  }
  uint64_t v27 = swift_allocObject();
  *(unsigned char *)(v27 + 16) = a1 & 1;
  *(void *)(v27 + 24) = v23;
  id v46 = v23;
  uint64_t v28 = v48;
  swift_bridgeObjectRetain();
  uint64_t v29 = v47;
  id v30 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v31 = [v3 mainBundle];
  NSString v32 = String._bridgeToObjectiveC()();
  NSString v33 = String._bridgeToObjectiveC()();
  id v34 = [v31 localizedStringForKey:v32 value:v33 table:0];

  uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  char v37 = v36;

  if (!v25) {
    goto LABEL_15;
  }
  if (v25 == 2)
  {
    uint64_t v29 = v53;
    uint64_t v28 = v50;
LABEL_15:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10050BF48(0, &qword_101673A80);
    id v38 = self;
    NSString v39 = String._bridgeToObjectiveC()();
    NSString v40 = (objc_class *)[v38 systemImageNamed:v39];

    v41._countAndFlagsBits = v35;
    v41._object = v37;
    v42.value._countAndFlagsBits = v29;
    v42.value._object = v28;
    v55.value.super.Class isa = v40;
    v55.is_nil = 0;
    Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v41, v42, v55, (UIMenuIdentifier_optional)32, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, children).super.super.isa;

    return (uint64_t)isa;
  }
  uint64_t v28 = v52;
  uint64_t v29 = v54;
  if (v25 == 1) {
    goto LABEL_15;
  }
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

void sub_10059D4E4()
{
  NSString v5 = &type metadata for CRLPencilAndPaperFeatureFlags;
  unint64_t v6 = sub_1005C5D40();
  v4[0] = 0;
  char v0 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v4);
  if (v0)
  {
    NSString v5 = &type metadata for CRLFeatureFlags;
    unint64_t v6 = sub_1005396A8();
    v4[0] = 15;
    char v1 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v4);
    if (v1)
    {
      if (qword_10166F928 != -1) {
        swift_once();
      }
      uint64_t v2 = (unsigned char *)(qword_101692F10
                   + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed);
      swift_beginAccess();
      if (*v2 == 1)
      {
        id v3 = [self standardUserDefaults];
        [v3 setInteger:2 forKey:@"CRLMathRecognitionMode"];
      }
    }
  }
}

void sub_10059D618()
{
  NSString v5 = &type metadata for CRLPencilAndPaperFeatureFlags;
  unint64_t v6 = sub_1005C5D40();
  v4[0] = 0;
  char v0 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v4);
  if (v0)
  {
    NSString v5 = &type metadata for CRLFeatureFlags;
    unint64_t v6 = sub_1005396A8();
    v4[0] = 15;
    char v1 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v4);
    if (v1)
    {
      if (qword_10166F928 != -1) {
        swift_once();
      }
      uint64_t v2 = (unsigned char *)(qword_101692F10
                   + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed);
      swift_beginAccess();
      if (*v2 == 1)
      {
        id v3 = [self standardUserDefaults];
        [v3 setInteger:1 forKey:@"CRLMathRecognitionMode"];
      }
    }
  }
}

void sub_10059D74C(uint64_t a1, char a2)
{
  if (a2)
  {
    id v7 = &type metadata for CRLPencilAndPaperFeatureFlags;
    unint64_t v8 = sub_1005C5D40();
    v6[0] = 0;
    char v2 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v6);
    if (v2)
    {
      id v7 = &type metadata for CRLFeatureFlags;
      unint64_t v8 = sub_1005396A8();
      v6[0] = 15;
      char v3 = isFeatureEnabled(_:)();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v6);
      if (v3)
      {
        if (qword_10166F928 != -1) {
          swift_once();
        }
        id v4 = (unsigned char *)(qword_101692F10
                     + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed);
        swift_beginAccess();
        if (*v4 == 1)
        {
          id v5 = [self standardUserDefaults];
          [v5 setInteger:0 forKey:@"CRLMathRecognitionMode"];
        }
      }
    }
  }
}

unint64_t sub_10059D888()
{
  unint64_t v54 = (unint64_t)_swiftEmptyArrayStorage;
  if (([*(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) documentIsSharedReadOnly] & 1) == 0)
  {
    id v1 = objc_retain(*(id *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                           + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator));
    char v2 = sub_1007E9F6C();

    if ((v2 & 1) == 0)
    {
      char v3 = self;
      uint64_t v4 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v52 = sub_1005C69C8;
      uint64_t v53 = v4;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v49 = *(void *)"";
      unint64_t v50 = sub_100594810;
      id v51 = &unk_101509300;
      id v5 = _Block_copy(&aBlock);
      swift_release();
      id v6 = [v3 elementWithUncachedProvider:v5];
      _Block_release(v5);
      id v7 = v6;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  unint64_t v8 = self;
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v52 = sub_1005C69D0;
  uint64_t v53 = v9;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v49 = *(void *)"";
  unint64_t v50 = sub_100594810;
  id v51 = &unk_101509328;
  id v10 = _Block_copy(&aBlock);
  swift_release();
  id v11 = [v8 elementWithUncachedProvider:v10];
  _Block_release(v10);
  id v12 = v11;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v52 = sub_1005C69D8;
  uint64_t v53 = v13;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v49 = *(void *)"";
  unint64_t v50 = sub_100594810;
  id v51 = &unk_101509350;
  uint64_t v14 = _Block_copy(&aBlock);
  swift_release();
  id v15 = [v8 elementWithUncachedProvider:v14];
  _Block_release(v14);
  id v16 = v15;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v52 = sub_1005C69E0;
  uint64_t v53 = v17;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v49 = *(void *)"";
  unint64_t v50 = sub_100594810;
  id v51 = &unk_101509378;
  NSString v18 = _Block_copy(&aBlock);
  swift_release();
  id v19 = [v8 elementWithUncachedProvider:v18];
  _Block_release(v18);
  id v20 = v19;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  sub_10050BF48(0, &qword_101673A80);
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v55.value.super.Class isa = 0;
  v55.is_nil = 0;
  id v22 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v21, (Swift::String_optional)0, v55, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, v45).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v23;
  *(void *)(v24 + 24) = &off_101502600;
  uint64_t v52 = sub_1005C6A00;
  uint64_t v53 = v24;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v49 = *(void *)"";
  unint64_t v50 = sub_100594810;
  id v51 = &unk_1015093C8;
  uint64_t v25 = _Block_copy(&aBlock);
  swift_release();
  id v26 = [v8 elementWithUncachedProvider:v25];
  _Block_release(v25);
  id v27 = [self mainBundle];
  NSString v28 = String._bridgeToObjectiveC()();
  NSString v29 = String._bridgeToObjectiveC()();
  id v30 = [v27 localizedStringForKey:v28 value:v29 table:0];

  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v33 = v32;

  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_101177E70;
  *(void *)(v34 + 32) = v26;
  uint64_t aBlock = (void **)v34;
  specialized Array._endMutation()();
  UIMenuElementSize preferredElementSize = (UIMenuElementSize)aBlock;
  id v36 = v26;
  v37._countAndFlagsBits = v31;
  v37._object = v33;
  v56.value.super.Class isa = 0;
  v56.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v37, (Swift::String_optional)0, v56, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v46).super.super.isa;
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_101177E70;
  *(void *)(v39 + 32) = isa;
  uint64_t aBlock = (void **)v39;
  specialized Array._endMutation()();
  UIMenuElementSize v40 = (UIMenuElementSize)aBlock;
  Swift::String v41 = isa;
  v42._countAndFlagsBits = 0;
  v42._object = (void *)0xE000000000000000;
  v57.value.super.Class isa = 0;
  v57.is_nil = 0;
  NSString v43 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v42, (Swift::String_optional)0, v57, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v40, v47).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  return v54;
}

uint64_t sub_10059E0E4(uint64_t (*a1)(double *))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return a1(_swiftEmptyArrayStorage);
  }
  char v3 = (unsigned char *)Strong;
  uint64_t v4 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled;
  int v5 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled);
  if (v5 != 2)
  {
    if ((v5 & 1) == 0) {
      goto LABEL_4;
    }
LABEL_7:
    id v7 = [self mainBundle];
    NSString v8 = String._bridgeToObjectiveC()();
    NSString v9 = String._bridgeToObjectiveC()();
    id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];
    char v11 = 1;
    goto LABEL_8;
  }
  char v6 = sub_100E4F834();
  v3[v4] = v6 & 1;
  if (v6) {
    goto LABEL_7;
  }
LABEL_4:
  id v7 = [self mainBundle];
  NSString v8 = String._bridgeToObjectiveC()();
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];
  char v11 = 0;
LABEL_8:
  id v13 = v10;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [self imageNamed:v14];

  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(unsigned char *)(v17 + 24) = v11;
  NSString v18 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_101177E70;
  *(void *)(v19 + 32) = v18;
  uint64_t v21 = v19;
  specialized Array._endMutation()();
  id v20 = v18;
  a1((double *)v21);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10059E440(uint64_t (*a1)(double *))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return a1(_swiftEmptyArrayStorage);
  }
  char v3 = (unsigned char *)Strong;
  uint64_t v4 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled;
  int v5 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled);
  if (v5 != 2)
  {
    if ((v5 & 1) == 0) {
      goto LABEL_4;
    }
LABEL_7:
    id v7 = [self mainBundle];
    NSString v8 = String._bridgeToObjectiveC()();
    NSString v9 = String._bridgeToObjectiveC()();
    id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];
    char v11 = 1;
    goto LABEL_8;
  }
  char v6 = sub_100E4EA7C();
  v3[v4] = v6 & 1;
  if (v6) {
    goto LABEL_7;
  }
LABEL_4:
  id v7 = [self mainBundle];
  NSString v8 = String._bridgeToObjectiveC()();
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];
  char v11 = 0;
LABEL_8:
  id v13 = v10;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [self imageNamed:v14];

  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(unsigned char *)(v17 + 24) = v11;
  NSString v18 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_101177E70;
  *(void *)(v19 + 32) = v18;
  uint64_t v21 = v19;
  specialized Array._endMutation()();
  id v20 = v18;
  a1((double *)v21);

  return swift_bridgeObjectRelease();
}

void sub_10059E77C(uint64_t a1, uint64_t a2, char a3, void (*a4)(BOOL))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v7 = (void *)Strong;
    a4((a3 & 1) == 0);
  }
}

uint64_t sub_10059E7F0(void (*a1)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v3 = (void *)Strong;
    if ([*(id *)(Strong+ OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) hasSelection])
    {
      id v4 = [self mainBundle];
      NSString v5 = String._bridgeToObjectiveC()();
      NSString v6 = String._bridgeToObjectiveC()();
      id v7 = [v4 localizedStringForKey:v5 value:v6 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_10050BF48(0, (unint64_t *)&qword_101672600);
      swift_allocObject();
      swift_unknownObjectWeakInit();
      NSString v8 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_101177E70;
      *(void *)(v9 + 32) = v8;
      uint64_t v12 = v9;
      specialized Array._endMutation()();
      id v10 = v8;
      a1(v12);

      return swift_bridgeObjectRelease();
    }
  }
  return ((uint64_t (*)(double *))a1)(_swiftEmptyArrayStorage);
}

uint64_t sub_10059EA24(void (*a1)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v3 = (void *)Strong;
    id v4 = (char *)[*(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) board];
    if (v4)
    {
      NSString v5 = v4;
      NSString v6 = (char *)*(id *)&v4[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];

      uint64_t v7 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
      NSString v8 = *(double **)&v6[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
      if (!v8)
      {
        sub_100846AB0();
        NSString v8 = *(double **)&v6[v7];
      }
      uint64_t v9 = v8 ? v8 : _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();

      if ((unint64_t)v9 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v10 = *(void *)(((unint64_t)v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v10 >= 1)
      {
        id v11 = [self mainBundle];
        NSString v12 = String._bridgeToObjectiveC()();
        NSString v13 = String._bridgeToObjectiveC()();
        id v14 = [v11 localizedStringForKey:v12 value:v13 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_10050BF48(0, (unint64_t *)&qword_101672600);
        swift_allocObject();
        swift_unknownObjectWeakInit();
        id v15 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        sub_1005057FC((uint64_t *)&unk_101676C10);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_101177E70;
        *(void *)(v16 + 32) = v15;
        uint64_t v19 = v16;
        specialized Array._endMutation()();
        id v17 = v15;
        a1(v19);

        return swift_bridgeObjectRelease();
      }
    }
  }
  return ((uint64_t (*)(double *))a1)(_swiftEmptyArrayStorage);
}

void sub_10059ED00(uint64_t a1, uint64_t a2, SEL *a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v5 = (void *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) *a3];
  }
}

void sub_10059ED6C(void (*a1)(double *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    swift_beginAccess();
    uint64_t v8 = swift_unknownObjectWeakLoadStrong();
    uint64_t v9 = (char *)v8;
    if (v8)
    {
      id v10 = *(id *)(v8 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);

      uint64_t v9 = (char *)[v10 editingCoordinator];
      if (v9)
      {
        id v11 = *(id *)&v9[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator];

        LOBYTE(v9) = sub_1007E9F6C();
      }
    }
    NSString v12 = _swiftEmptyArrayStorage;
    id v30 = _swiftEmptyArrayStorage;
    uint64_t v13 = *(void *)(a4 + 16);
    if (v13)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v13; ++i)
      {
        uint64_t v29 = *(void *)(a4 + 8 * i + 32);
        sub_10059F110(&v30, (double *)&v29, (uint64_t)v7, v9 & 1);
      }
      swift_bridgeObjectRelease();
      NSString v12 = v30;
    }
    id v30 = v12;
    if ((v9 & 1) == 0) {
      goto LABEL_13;
    }
    id v15 = [self mainBundle];
    NSString v16 = String._bridgeToObjectiveC()();
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;

    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    swift_bridgeObjectRetain();
    id v22 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    sub_1005057FC((uint64_t *)&unk_101672610);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_10117E810;
    *(void *)(v23 + 32) = v19;
    *(void *)(v23 + 40) = v21;
    id v24 = v22;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v24 setAccessibilityUserInputLabels:isa, 0, 0, 1, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)];

    if (!((unint64_t)v12 >> 62))
    {
      id v26 = v24;
LABEL_12:
      sub_100F49780(0, 0, (uint64_t)v24);

      NSString v12 = v30;
LABEL_13:
      a1(v12);
      swift_bridgeObjectRelease();

      return;
    }
    id v27 = v24;
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if ((v28 & 0x8000000000000000) == 0) {
      goto LABEL_12;
    }
    __break(1u);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    a1(_swiftEmptyArrayStorage);
  }
}

void sub_10059F110(void *a1, double *a2, uint64_t a3, char a4)
{
  unsigned __int8 v6 = a4 ^ 1;
  double v7 = *a2;
  id v8 = self;
  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  id v10 = [v8 localizedStringFromNumber:isa numberStyle:3];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  [*(id *)(a3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) viewScale];
  uint64_t v12 = (v11 == v7) & v6;
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(double *)(v14 + 24) = v7;
  uint64_t v28 = v14;
  id v15 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_1005057FC((uint64_t *)&unk_101672610);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10117E810;
  double v17 = v7 * 100.0;
  if ((~COERCE__INT64(v7 * 100.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v17 <= -9.22337204e18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v17 >= 9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v18 = v16;
  uint64_t v19 = (uint64_t)v17;
  id v20 = objc_allocWithZone((Class)NSNumber);
  id v21 = v15;
  id v22 = [v20 initWithInteger:v19];
  id v23 = [v8 localizedStringFromNumber:v22 numberStyle:0];

  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;

  *(void *)(v18 + 32) = v24;
  *(void *)(v18 + 40) = v26;
  Class v27 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v21 setAccessibilityUserInputLabels:v27];

  id v8 = v21;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_9:
  }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
}

void sub_10059F40C(double a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v3 = (void *)Strong;
    sub_100E3AF74(a1);
  }
}

Class sub_10059F470()
{
  uint64_t v0 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v0, v1);
  char v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  NSString v5 = (char *)Strong;
  [*(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) endEditing];
  UIMenuElementSize v6 = sub_10059F668();
  sub_10050BF48(0, &qword_101673A80);
  double v7 = *(char **)(*(void *)&v5[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v8 = *(void *)&v7[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_1005C7DB0(v8, (uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
  uint64_t v9 = v7;
  sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  uint64_t v10 = v16[0];
  double v11 = (void *)v16[1];
  sub_1005C7E18((uint64_t)v3, type metadata accessor for CRLBoardCRDTData);

  v12._countAndFlagsBits = v10;
  v12._object = v11;
  v17.value.super.Class isa = 0;
  v17.is_nil = 0;
  v13.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v12, (Swift::String_optional)0, v17, 0, 0xFFFFFFFFFFFFFFFFLL, v6, v15).super.super.isa;

  return v13.super.super.isa;
}

unint64_t sub_10059F668()
{
  uint64_t v1 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v119 = (uint64_t)&v114 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for URL();
  uint64_t v118 = *(void *)(v120 - 8);
  uint64_t v5 = __chkstk_darwin(v120, v4);
  uint64_t v117 = (char *)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = v6;
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v114 - v8;
  uint64_t v123 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v122 = *(void *)(v123 - 8);
  __chkstk_darwin(v123, v10);
  uint64_t v121 = (char *)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v137 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v124 = sub_1005057FC((uint64_t *)&unk_101676C10);
  UIMenuElementSize v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10117DF50;
  UIMenu v13 = self;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v0;
  id v134 = (char *)sub_1005C5D28;
  uint64_t v135 = v14;
  aBlock[0] = (UIMenuElementSize)_NSConcreteStackBlock;
  aBlock[1] = *(UIMenuElementSize *)"";
  aBlock[2] = (UIMenuElementSize)sub_100594810;
  uint64_t v133 = (ValueMetadata *)&unk_101508E00;
  Swift::OpaquePointer v15 = _Block_copy(aBlock);
  uint64_t v16 = v0;
  swift_release();
  id v17 = [v13 elementWithUncachedProvider:v15];
  _Block_release(v15);
  *(void *)(v12 + 32) = v17;
  uint64_t v18 = sub_10050BF48(0, (unint64_t *)&qword_101672600);
  id v125 = self;
  id v19 = [v125 mainBundle];
  NSString v20 = String._bridgeToObjectiveC()();
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [v19 localizedStringForKey:v20 value:v21 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v23 = String._bridgeToObjectiveC()();
  id v126 = self;
  [v126 systemImageNamed:v23];

  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v127 = v18;
  *(void *)(v12 + 40) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  aBlock[0] = v12;
  specialized Array._endMutation()();
  uint64_t v24 = (ValueMetadata *)aBlock[0];
  UIMenuElementSize v136 = aBlock[0];
  if (([*(id *)&v16[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] documentIsSharedReadOnly] & 1) == 0)
  {
    id v25 = [v125 mainBundle];
    NSString v26 = String._bridgeToObjectiveC()();
    NSString v27 = String._bridgeToObjectiveC()();
    id v28 = [v25 localizedStringForKey:v26 value:v27 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v29 = String._bridgeToObjectiveC()();
    id v30 = [v126 systemImageNamed:v29];

    *(void *)(swift_allocObject() + 16) = v16;
    uint64_t v31 = v16;
    NSString v32 = (objc_class *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    if ((unint64_t)v136 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v109 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v109 < 0)
      {
        __break(1u);
        goto LABEL_66;
      }
    }
    sub_100F49780(0, 0, (uint64_t)v32);
    uint64_t v24 = (ValueMetadata *)v136;
  }
  unint64_t v115 = v9;
  uint64_t v33 = sub_10050BF48(0, &qword_101673A80);
  v34._countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  v138.value.super.Class isa = 0;
  v138.is_nil = 0;
  uint64_t v128 = v33;
  UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v34, (Swift::String_optional)0, v138, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v24, v111);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v24 = &type metadata for CRLFeatureFlags;
  uint64_t v133 = &type metadata for CRLFeatureFlags;
  uint64_t v9 = (char *)sub_1005396A8();
  id v134 = v9;
  LOBYTE(aBlock[0]) = 8;
  char v35 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
  if ((v35 & 1) == 0)
  {
    UIMenuElementSize v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_101177E70;
    *(void *)(v36 + 32) = sub_10059C344();
    aBlock[0] = v36;
    specialized Array._endMutation()();
    v37._countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    v139.value.super.Class isa = 0;
    v139.is_nil = 0;
    NSString v32 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v37, (Swift::String_optional)0, v139, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, aBlock[0], v111).super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_8:
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      goto LABEL_9;
    }
LABEL_66:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_8;
  }
LABEL_9:
  uint64_t v133 = v24;
  id v134 = v9;
  LOBYTE(aBlock[0]) = 17;
  char v38 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
  if (v38)
  {
    id v39 = [v16 traitCollection];
    unsigned int v40 = [v39 crl_isCompactWidth];

    if (v40)
    {
      UIMenuElementSize v110 = sub_10059C5C8();
      v41._countAndFlagsBits = 0;
      v41._object = (void *)0xE000000000000000;
      v140.value.super.Class isa = 0;
      v140.is_nil = 0;
      Swift::String v42 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v41, (Swift::String_optional)0, v140, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v110, v111).super.super.isa;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  UIMenuElementSize v131 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  uint64_t v133 = v24;
  id v134 = v9;
  LOBYTE(aBlock[0]) = 19;
  char v43 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
  if (v43)
  {
    sub_1005C2C88();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v131 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v131 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  uint64_t v133 = &type metadata for CRLPencilAndPaperFeatureFlags;
  id v134 = (char *)sub_1005C5D40();
  LOBYTE(aBlock[0]) = 0;
  char v44 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
  if (v44)
  {
    uint64_t v133 = v24;
    id v134 = v9;
    LOBYTE(aBlock[0]) = 15;
    char v45 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
    if (v45)
    {
      if (qword_10166F928 != -1) {
        swift_once();
      }
      Swift::OpaquePointer v46 = (char *)(qword_101692F10
                   + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed);
      swift_beginAccess();
      id v47 = (id)sub_10059CDEC(*v46);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v131 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v131 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  v48._countAndFlagsBits = 0;
  v48._object = (void *)0xE000000000000000;
  v141.value.super.Class isa = 0;
  v141.is_nil = 0;
  uint64_t v49 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v48, (Swift::String_optional)0, v141, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v131, v111).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  UIMenuElementSize v130 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  uint64_t v133 = v24;
  id v134 = v9;
  LOBYTE(aBlock[0]) = 17;
  char v50 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
  if ((v50 & 1) == 0) {
    goto LABEL_32;
  }
  id v51 = v49;
  uint64_t v52 = *(char **)(*(void *)&v16[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v53 = *(void *)&v52[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  uint64_t v54 = type metadata accessor for CRLBoardCRDTData(0);
  uint64_t v55 = v122;
  uint64_t v56 = (uint64_t)v121;
  uint64_t v57 = v123;
  (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v121, v53 + *(int *)(v54 + 36), v123);
  uint64_t v58 = v52;
  NSString v59 = sub_1005C2550(v56, (uint64_t)v58);
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v56, v57);

  if ((unint64_t)v59 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v60 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v60 = *(void *)(((unint64_t)v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v49 = v51;
  if (v60 >= 1)
  {
    sub_10059A408();
  }
  else
  {
LABEL_32:
    id v61 = [v125 mainBundle];
    NSString v62 = String._bridgeToObjectiveC()();
    NSString v63 = String._bridgeToObjectiveC()();
    id v64 = [v61 localizedStringForKey:v62 value:v63 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v65 = String._bridgeToObjectiveC()();
    id v66 = [v126 systemImageNamed:v65];

    swift_allocObject();
    swift_unknownObjectWeakInit();
    UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  }
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  if ([self isPrintingAvailable])
  {
    uint64_t v133 = v24;
    id v134 = v9;
    LOBYTE(aBlock[0]) = 17;
    char v67 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
    if ((v67 & 1) == 0) {
      goto LABEL_41;
    }
    id v68 = v49;
    id v69 = *(char **)(*(void *)&v16[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                   + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    uint64_t v70 = *(void *)&v69[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    uint64_t v71 = type metadata accessor for CRLBoardCRDTData(0);
    uint64_t v72 = v122;
    uint64_t v73 = (uint64_t)v121;
    uint64_t v74 = v123;
    (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v121, v70 + *(int *)(v71 + 36), v123);
    id v75 = v69;
    id v76 = sub_1005C2550(v73, (uint64_t)v75);
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v73, v74);

    if ((unint64_t)v76 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v77 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v77 = *(void *)(((unint64_t)v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v49 = v68;
    if (v77 >= 1)
    {
      sub_10059BB04();
    }
    else
    {
LABEL_41:
      id v78 = [v125 mainBundle];
      NSString v79 = String._bridgeToObjectiveC()();
      NSString v80 = String._bridgeToObjectiveC()();
      id v81 = [v78 localizedStringForKey:v79 value:v80 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v82 = String._bridgeToObjectiveC()();
      id v83 = [v126 systemImageNamed:v82];

      swift_allocObject();
      swift_unknownObjectWeakInit();
      UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    }
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  v84._countAndFlagsBits = 0;
  v84._object = (void *)0xE000000000000000;
  v142.value.super.Class isa = 0;
  v142.is_nil = 0;
  id v85 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v84, (Swift::String_optional)0, v142, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v130, v112).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  if (qword_10166F580 != -1) {
    swift_once();
  }
  if (byte_10171B091 == 1)
  {
    Class v86 = sub_100728DC0(v16, 0);
    if (v86)
    {
      id v87 = v86;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  if (qword_10166F578 != -1) {
    swift_once();
  }
  if (byte_10171B090 == 1)
  {
    uint64_t v88 = *(void **)(*(void *)&v16[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                   + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    id v89 = v88;
    uint64_t v90 = v88;
    uint64_t v91 = v119;
    sub_100991978(v90, 0, 0, v119);
    uint64_t v92 = v118;
    uint64_t v93 = v120;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v118 + 48))(v91, 1, v120) == 1)
    {
      sub_100522F00(v91, &qword_101672E90);
      unint64_t v94 = v85;
      id v85 = v49;
      uint64_t v49 = v89;
    }
    else
    {
      id v125 = v49;
      unint64_t v95 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 32);
      char v96 = v115;
      v95(v115, v91, v93);
      NSString v97 = String._bridgeToObjectiveC()();
      id v98 = [v126 systemImageNamed:v97];

      unsigned __int8 v99 = *(void (**)(char *, char *, uint64_t))(v92 + 16);
      id v126 = v89;
      id v100 = v117;
      v99(v117, v96, v93);
      unint64_t v101 = (*(unsigned __int8 *)(v92 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
      uint64_t v102 = swift_allocObject();
      v95((char *)(v102 + v101), (uint64_t)v100, v93);
      id v103 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      (*(void (**)(char *, uint64_t))(v92 + 8))(v96, v93);

      uint64_t v104 = swift_allocObject();
      *(_OWORD *)(v104 + 16) = xmmword_101177E70;
      *(void *)(v104 + 32) = v103;
      UIMenuElementSize v129 = v104;
      specialized Array._endMutation()();
      UIMenuElementSize v105 = v129;
      unint64_t v94 = v103;
      v106._countAndFlagsBits = 0;
      v106._object = (void *)0xE000000000000000;
      v143.value.super.Class isa = 0;
      v143.is_nil = 0;
      unint64_t v107 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v106, (Swift::String_optional)0, v143, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v105, v113).super.super.isa;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      uint64_t v49 = (objc_class *)v125;
    }
  }
  return v137;
}

objc_class *sub_1005A0B2C()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [self systemImageNamed:v8];

  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v28 = v10;
  uint64_t v11 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_10050BF48(0, (unint64_t *)&qword_101674470);
  id v12 = v9;
  id v13 = v11;
  v14.value._countAndFlagsBits = v5;
  v14.value._object = v7;
  v29.value.super.Class isa = (Class)v9;
  v29.is_nil = (char)v11;
  v30.value.super.super.Class isa = 0;
  Swift::OpaquePointer v15 = UIBarButtonItem.init(title:image:primaryAction:menu:)(v14, v29, v30, v31).super.super.isa;
  id v16 = [v0 mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v16 localizedStringForKey:v17 value:v18 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [(objc_class *)v15 setAccessibilityLabel:v20];

  NSString v21 = v15;
  id v22 = [v0 mainBundle];
  NSString v23 = String._bridgeToObjectiveC()();
  NSString v24 = String._bridgeToObjectiveC()();
  id v25 = [v22 localizedStringForKey:v23 value:v24 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [(objc_class *)v21 setAccessibilityHint:v26];

  return v21;
}

void sub_1005A0EE4()
{
  uint64_t v0 = sub_1005057FC((uint64_t *)&unk_101674610);
  __chkstk_darwin(v0 - 8, v1);
  NSString v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_100E3C6E8();
    uint64_t v6 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v6
      && (uint64_t v7 = v6,
          NSString v8 = (char *)[v6 editingCoordinator],
          v7,
          v8))
    {
      id v9 = *(id *)&v8[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory];
      swift_release();

      double v10 = sub_1004C840C(0);
      [self pathSourceForShapeType:0 naturalSize:v10 v11];
      id v13 = objc_allocWithZone((Class)NSAttributedString);
      NSString v14 = String._bridgeToObjectiveC()();
      id v15 = [v13 initWithString:v14];

      uint64_t v16 = type metadata accessor for CRLWPStorageCRDTData(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v3, 1, 1, v16);
      sub_1005C6DF0((uint64_t)v26);
      sub_10051B3EC((uint64_t)v26, (uint64_t)v27, &qword_10168D670);
      id v17 = v12;
      id v18 = v15;
      id v19 = sub_100F40DC0(0, 0, (uint64_t)v12, 0, 0, 0, 1, 0, 1, (void *)1, (void *)1, (void *)1, (void *)1, (char *)v15, v3, v27, 0, 0, 0);

      sub_100522F00((uint64_t)v3, (uint64_t *)&unk_101674610);
      type metadata accessor for CRLWPShapeItem();
      uint64_t v20 = swift_dynamicCastClassUnconditional();
      sub_100E3C6E8();
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_101177E70;
      *(void *)(v21 + 32) = v20;
      unint64_t v25 = v21;
      specialized Array._endMutation()();
      unint64_t v22 = v25;
      id v23 = v19;
      sub_1005C360C(v22, 0, 0);
      swift_release();

      swift_bridgeObjectRelease();
    }
    else
    {

      swift_release();
    }
  }
}

objc_class *sub_1005A1214()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [self systemImageNamed:v8];

  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v28 = v10;
  double v11 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_10050BF48(0, (unint64_t *)&qword_101674470);
  id v12 = v9;
  id v13 = v11;
  v14.value._countAndFlagsBits = v5;
  v14.value._object = v7;
  v29.value.super.Class isa = (Class)v9;
  v29.is_nil = (char)v11;
  v30.value.super.super.Class isa = 0;
  id v15 = UIBarButtonItem.init(title:image:primaryAction:menu:)(v14, v29, v30, v31).super.super.isa;
  id v16 = [v0 mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v16 localizedStringForKey:v17 value:v18 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [(objc_class *)v15 setAccessibilityLabel:v20];

  uint64_t v21 = v15;
  id v22 = [v0 mainBundle];
  NSString v23 = String._bridgeToObjectiveC()();
  NSString v24 = String._bridgeToObjectiveC()();
  id v25 = [v22 localizedStringForKey:v23 value:v24 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [(objc_class *)v21 setAccessibilityHint:v26];

  return v21;
}

void sub_1005A15CC(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v3 = (char *)Strong;
    id v13 = (ValueMetadata *)sub_10050BF48(0, (unint64_t *)&qword_101672600);
    v12[0] = a1;
    id v4 = a1;
    sub_1005A17DC();
    sub_100522F00((uint64_t)v12, &qword_101672BF0);
    id v5 = [v3 traitCollection:v12[0]];
    unsigned int v6 = [v5 crl_isCompactWidth];

    if (v6)
    {
      uint64_t v7 = *(void **)(*(void *)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                    + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
      id v13 = &type metadata for CRLFeatureFlags;
      unint64_t v14 = sub_1005396A8();
      LOBYTE(v12[0]) = 12;
      id v8 = v7;
      char v9 = isFeatureEnabled(_:)();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v12);
      if (v9)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        if (v12[0])
        {

          if (qword_10166FAE0 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v10 = (id)static OS_os_log.crlFollow;
          uint64_t v11 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v10, (uint64_t)&_mh_execute_header, v11, (uint64_t)"Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

          sub_1007ECCE4(1);
        }
      }
    }
  }
}

void sub_1005A17DC()
{
  [*(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] endEditing];
  id v6 = [objc_allocWithZone((Class)CRLiOSShapeLibraryViewController) initWithDelegate:v0];
  [v6 setModalPresentationStyle:7];
  id v1 = [v6 popoverPresentationController];
  if (v1)
  {
    NSString v2 = v1;
    NSString v3 = (void *)sub_100E3C8AC();
    [v2 setBarButtonItem:v3];
  }
  id v4 = [v6 popoverPresentationController];
  if (v4)
  {
    id v5 = v4;
    [v4 setCanOverlapSourceViewRect:1];
  }
  [v0 presentViewController:v6 animated:1 completion:0];
}

objc_class *sub_1005A18F8()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [self systemImageNamed:v8];

  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v28 = v10;
  uint64_t v11 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_10050BF48(0, (unint64_t *)&qword_101674470);
  id v12 = v9;
  id v13 = v11;
  v14.value._countAndFlagsBits = v5;
  v14.value._object = v7;
  v29.value.super.Class isa = (Class)v9;
  v29.is_nil = (char)v11;
  v30.value.super.super.Class isa = 0;
  id v15 = UIBarButtonItem.init(title:image:primaryAction:menu:)(v14, v29, v30, v31).super.super.isa;
  id v16 = [v0 mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v16 localizedStringForKey:v17 value:v18 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [(objc_class *)v15 setAccessibilityLabel:v20];

  uint64_t v21 = v15;
  id v22 = [v0 mainBundle];
  NSString v23 = String._bridgeToObjectiveC()();
  NSString v24 = String._bridgeToObjectiveC()();
  id v25 = [v22 localizedStringForKey:v23 value:v24 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [(objc_class *)v21 setAccessibilityHint:v26];

  return v21;
}

void sub_1005A1CD4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    sub_100E3C6E8();
    NSString v2 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v2
      && (NSString v3 = v2,
          id v4 = (char *)[v2 editingCoordinator],
          v3,
          v4))
    {
      id v5 = *(id *)&v4[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory];
      swift_release();

      id v6 = [objc_allocWithZone((Class)NSAttributedString) init];
      NSString v8 = sub_100F3EB94((uint64_t)v6, v7);

      sub_100E3C6E8();
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_101177E70;
      *(void *)(v9 + 32) = v8;
      unint64_t v11 = v9;
      specialized Array._endMutation()();
      id v10 = v8;
      sub_1005C360C(v11, 0, 0);
      swift_release();

      swift_bridgeObjectRelease();
    }
    else
    {

      swift_release();
    }
  }
}

objc_class *sub_1005A1E48()
{
  uint64_t v0 = (void *)sub_100594AAC();
  id v1 = self;
  id v2 = [v1 mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 localizedStringForKey:v3 value:v4 table:0];

  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v8 = v7;

  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [self systemImageNamed:v9];

  sub_10050BF48(0, (unint64_t *)&qword_101674470);
  id v11 = v10;
  id v12 = v0;
  v13.value._countAndFlagsBits = v6;
  v13.value._object = v8;
  v27.value.super.Class isa = (Class)v10;
  v27.is_nil = 0;
  v28.value.super.super.Class isa = (Class)v0;
  Swift::String_optional v14 = UIBarButtonItem.init(title:image:primaryAction:menu:)(v13, v27, v28, v29).super.super.isa;
  id v15 = [v1 mainBundle];
  NSString v16 = String._bridgeToObjectiveC()();
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [(objc_class *)v14 setAccessibilityLabel:v19];

  NSString v20 = v14;
  id v21 = [v1 mainBundle];
  NSString v22 = String._bridgeToObjectiveC()();
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = [v21 localizedStringForKey:v22 value:v23 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [(objc_class *)v20 setAccessibilityHint:v25];

  return v20;
}

void sub_1005A2180()
{
  uint64_t v0 = type metadata accessor for PHPickerConfiguration.AssetRepresentationMode();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  NSString v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PHPickerConfiguration();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  id v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  Swift::String_optional v13 = (char *)&v25 - v12;
  uint64_t v14 = sub_1005057FC(&qword_101674600);
  uint64_t v16 = __chkstk_darwin(v14 - 8, v15);
  id v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v19);
  id v21 = (char *)&v25 - v20;
  uint64_t v22 = type metadata accessor for PHPickerFilter();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  sub_1005C689C(&qword_101674608, (void (*)(uint64_t))type metadata accessor for CRLiOSBoardViewController);
  PHPickerConfiguration.init()();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for PHPickerConfiguration.AssetRepresentationMode.current(_:), v0);
  PHPickerConfiguration.preferredAssetRepresentationMode.setter();
  PHPickerConfiguration.selectionLimit.setter();
  sub_100522E9C((uint64_t)v21, (uint64_t)v18, &qword_101674600);
  PHPickerConfiguration.filter.setter();
  sub_10050BF48(0, &qword_101674418);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v13, v5);
  NSString v23 = (void *)PHPickerViewController.init(configuration:)();
  id v24 = (void *)swift_unknownObjectRetain();
  PHPickerViewController.delegate.setter();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
  sub_100522F00((uint64_t)v21, &qword_101674600);
  [v24 presentViewController:v23 animated:1 completion:0];
}

void sub_1005A24B8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    a3();
  }
  swift_beginAccess();
  uint64_t v6 = swift_unknownObjectWeakLoadStrong();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    uint64_t v8 = (char *)*(id *)(v6 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);

    id v9 = *(id *)&v8[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator];
    id v12[3] = &type metadata for CRLFeatureFlags;
    v12[4] = (id)sub_1005396A8();
    LOBYTE(v12[0]) = 12;
    LOBYTE(v7) = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v12);
    if (v7)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (v12[0])
      {

        if (qword_10166FAE0 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v10 = (id)static OS_os_log.crlFollow;
        uint64_t v11 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v10, (uint64_t)&_mh_execute_header, v11, (uint64_t)"Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

        sub_1007ECCE4(1);
      }
    }
  }
}

void sub_1005A2694()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {

    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"presentCameraPicker()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2138, (uint64_t)"The camera picker is already being presented.", 45, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentCameraPicker()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2138);
  }
  else
  {
    uint64_t v2 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v3 = self;
    NSString v4 = (void *)swift_allocObject();
    v4[2] = v0;
    v4[3] = v0;
    v4[4] = sub_1005C6D8C;
    v4[5] = v2;
    aBlock[4] = sub_1005C6DDC;
    aBlock[5] = v4;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_100F8FD18;
    UIMenuElementSize aBlock[3] = &unk_1015095D0;
    uint64_t v5 = _Block_copy(aBlock);
    id v6 = v0;
    swift_retain_n();
    swift_release();
    [v3 crl_checkAuthorizationForMediaType:AVMediaTypeVideo completion:v5];
    _Block_release(v5);
    swift_release_n();
  }
}

void sub_1005A288C()
{
  uint64_t v0 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v23[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    id v6 = [*(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) layerHost];
    if (v6)
    {
      uint64_t v7 = v6;
      if ([v6 respondsToSelector:"asiOSCVC"])
      {
        id v8 = [v7 asiOSCVC];
        swift_unknownObjectRelease();
        id v9 = [v8 miniFormatterPresenter];
        if (v9)
        {
          [v9 dismissMiniFormatter];
          swift_unknownObjectRelease();
        }
        uint64_t v10 = type metadata accessor for URL();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v3, 1, 1, v10);
        uint64_t v11 = objc_allocWithZone((Class)type metadata accessor for CRLInsertEditURLAlert());
        uint64_t v12 = v5;
        id v13 = sub_1005C3E30(0, (uint64_t)v12, (uint64_t)v3, v11);

        uint64_t v14 = *(void **)&v12[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertURLAlert];
        *(void *)&v12[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertURLAlert] = v13;
        id v15 = v13;

        sub_1008AABC0(v12);
      }
      else
      {

        swift_unknownObjectRelease();
      }
    }
    else
    {
    }
  }
  swift_beginAccess();
  uint64_t v16 = swift_unknownObjectWeakLoadStrong();
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    id v18 = (char *)*(id *)(v16 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);

    id v19 = *(id *)&v18[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator];
    v23[3] = &type metadata for CRLFeatureFlags;
    void v23[4] = (id)sub_1005396A8();
    LOBYTE(v23[0]) = 12;
    LOBYTE(v17) = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v23);
    if (v17)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (v23[0])
      {

        if (qword_10166FAE0 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v20 = (id)static OS_os_log.crlFollow;
        uint64_t v21 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v20, (uint64_t)&_mh_execute_header, v21, (uint64_t)"Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

        sub_1007ECCE4(1);
      }
    }
  }
}

void sub_1005A2C04()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    id v2 = [self supportedFileUTTypes];
    type metadata accessor for UTType();
    static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v3 = objc_allocWithZone((Class)UIDocumentPickerViewController);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v5 = [v3 initForOpeningContentTypes:isa asCopy:1];

    [v5 setDelegate:v1];
    [v5 setAllowsMultipleSelection:1];
    [v1 presentViewController:v5 animated:1 completion:0];
    id v6 = *(void **)(*(void *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                  + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
    v11[3] = &type metadata for CRLFeatureFlags;
    v11[4] = (id)sub_1005396A8();
    LOBYTE(v11[0]) = 12;
    id v7 = v6;
    char v8 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v11);
    if (v8)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (v11[0])
      {

        if (qword_10166FAE0 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v9 = (id)static OS_os_log.crlFollow;
        uint64_t v10 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

        sub_1007ECCE4(1);
      }
    }
  }
}

void sub_1005A2E7C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v2)
    {

      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"presentDocumentScanner()", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2202, (uint64_t)"Already presenting document scanner", 35, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentDocumentScanner()", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2202);
    }
    else
    {
      id v3 = self;
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = v1;
      unint64_t v15 = (unint64_t)sub_1005C6D14;
      uint64_t v16 = v4;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(id *)"";
      aBlock[2] = sub_100F8FD18;
      uint64_t v14 = (ValueMetadata *)&unk_101509508;
      id v5 = _Block_copy(aBlock);
      id v6 = v1;
      swift_release();
      [v3 crl_checkAuthorizationForMediaType:AVMediaTypeVideo completion:v5];
      _Block_release(v5);
    }
  }
  swift_beginAccess();
  uint64_t v7 = swift_unknownObjectWeakLoadStrong();
  if (v7)
  {
    char v8 = (void *)v7;
    id v9 = (char *)*(id *)(v7 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);

    id v10 = *(id *)&v9[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator];
    uint64_t v14 = &type metadata for CRLFeatureFlags;
    unint64_t v15 = sub_1005396A8();
    LOBYTE(aBlock[0]) = 12;
    LOBYTE(v8) = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
    if (v8)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (aBlock[0])
      {

        if (qword_10166FAE0 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v11 = (id)static OS_os_log.crlFollow;
        uint64_t v12 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

        sub_1007ECCE4(1);
      }
    }
  }
}

uint64_t sub_1005A31CC(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v3 = (void *)result;
    v5[3] = sub_10050BF48(0, (unint64_t *)&qword_101672600);
    v5[0] = a1;
    id v4 = a1;
    sub_1005A3258();

    return sub_100522F00((uint64_t)v5, &qword_101672BF0);
  }
  return result;
}

void sub_1005A3258()
{
  uint64_t v1 = v0;
  id v2 = sub_100E3C594();
  [v2 resetToDefaultModeAnimated:1];

  id v3 = [objc_allocWithZone((Class)_UIStickerPickerViewController) init];
  [v3 setDelegate:v1];
  id v4 = [v1 navigationController];
  if (v4)
  {
    id v5 = v4;
    id v6 = [v4 navigationBar];

    if (v6)
    {
      uint64_t v7 = (void *)sub_100E3C86C();
      sub_10050BF48(0, (unint64_t *)&qword_101674470);
      UIPopoverPresentationControllerSourceItem.frame(in:)();

      sub_10051B3EC((uint64_t)v24, (uint64_t)v25, (uint64_t *)&unk_101676320);
      if ((v26 & 1) == 0)
      {
        double v8 = *(double *)v25;
        double v9 = *(double *)&v25[1];
        double v10 = *(double *)&v25[2];
        double v11 = *(double *)&v25[3];
        [v3 setSourceView:v6];
        [v3 setSourceRect:v8, v9, v10, v11];
      }
    }
  }
  uint64_t v12 = *(void **)(*(void *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
  uint64_t v21 = &type metadata for CRLFeatureFlags;
  unint64_t v22 = sub_1005396A8();
  LOBYTE(aBlock[0]) = 12;
  id v13 = v12;
  char v14 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
  if (v14)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (aBlock[0])
    {

      if (qword_10166FAE0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v15 = (id)static OS_os_log.crlFollow;
      uint64_t v16 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

      sub_1007ECCE4(1);
    }
  }

  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v3;
  unint64_t v22 = (unint64_t)sub_1005C6D1C;
  uint64_t v23 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(id *)"";
  aBlock[2] = sub_100679958;
  uint64_t v21 = (ValueMetadata *)&unk_101509580;
  id v18 = _Block_copy(aBlock);
  id v19 = v3;
  swift_release();
  [v1 presentViewController:v19 animated:0 completion:v18];
  _Block_release(v18);
}

void sub_1005A35C0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController) insertStencilFromLibrary:0];
  }
  swift_beginAccess();
  uint64_t v2 = swift_unknownObjectWeakLoadStrong();
  if (v2)
  {
    id v3 = (void *)v2;
    id v4 = (char *)*(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);

    id v5 = *(id *)&v4[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator];
    v8[3] = &type metadata for CRLFeatureFlags;
    v8[4] = (id)sub_1005396A8();
    LOBYTE(v8[0]) = 12;
    LOBYTE(v3) = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v8);
    if (v3)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (v8[0])
      {

        if (qword_10166FAE0 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v6 = (id)static OS_os_log.crlFollow;
        uint64_t v7 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

        sub_1007ECCE4(1);
      }
    }
  }
}

uint64_t sub_1005A37AC(void (*a1)(unint64_t), uint64_t a2, uint64_t a3, unint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    id v8 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);

    [v8 endEditing];
  }
  if (a4 >> 62)
  {
    sub_10050BF48(0, &qword_10167ADE0);
    swift_bridgeObjectRetain();
    uint64_t v10 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    a4 = v10;
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10050BF48(0, &qword_10167ADE0);
  }
  a1(a4);
  return swift_bridgeObjectRelease();
}

objc_class *sub_1005A38DC()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [self systemImageNamed:v8];

  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v28 = v10;
  double v11 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_10050BF48(0, (unint64_t *)&qword_101674470);
  id v12 = v9;
  id v13 = v11;
  v14.value._countAndFlagsBits = v5;
  v14.value._object = v7;
  v29.value.super.Class isa = (Class)v9;
  v29.is_nil = (char)v11;
  v30.value.super.super.Class isa = 0;
  id v15 = UIBarButtonItem.init(title:image:primaryAction:menu:)(v14, v29, v30, v31).super.super.isa;
  id v16 = [v0 mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v16 localizedStringForKey:v17 value:v18 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [(objc_class *)v15 setAccessibilityLabel:v20];

  uint64_t v21 = v15;
  id v22 = [v0 mainBundle];
  NSString v23 = String._bridgeToObjectiveC()();
  NSString v24 = String._bridgeToObjectiveC()();
  id v25 = [v22 localizedStringForKey:v23 value:v24 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [(objc_class *)v21 setAccessibilityHint:v26];

  return v21;
}

void sub_1005A3CC8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController) insertStencilFromLibrary:0];
  }
}

objc_class *sub_1005A3D34()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [self systemImageNamed:v8];

  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v28 = v10;
  double v11 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_10050BF48(0, (unint64_t *)&qword_101674470);
  id v12 = v9;
  id v13 = v11;
  v14.value._countAndFlagsBits = v5;
  v14.value._object = v7;
  v29.value.super.Class isa = (Class)v9;
  v29.is_nil = (char)v11;
  v30.value.super.super.Class isa = 0;
  id v15 = UIBarButtonItem.init(title:image:primaryAction:menu:)(v14, v29, v30, v31).super.super.isa;
  id v16 = [v0 mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v16 localizedStringForKey:v17 value:v18 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [(objc_class *)v15 setAccessibilityLabel:v20];

  uint64_t v21 = v15;
  id v22 = [v0 mainBundle];
  NSString v23 = String._bridgeToObjectiveC()();
  NSString v24 = String._bridgeToObjectiveC()();
  id v25 = [v22 localizedStringForKey:v23 value:v24 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [(objc_class *)v21 setAccessibilityHint:v26];

  return v21;
}

void sub_1005A40F4()
{
  uint64_t v0 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v0 - 8, v1);
  NSString v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (char *)Strong;
    uint64_t v6 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v3, 1, 1, v6);
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v8 = static MainActor.shared.getter();
    id v9 = (void *)swift_allocObject();
    _OWORD v9[2] = v8;
    v9[3] = &protocol witness table for MainActor;
    v9[4] = v7;
    swift_release();
    sub_10059134C((uint64_t)v3, (uint64_t)&unk_1016745E8, (uint64_t)v9);
    swift_release();
    id v10 = [v5 traitCollection];
    unsigned int v11 = [v10 crl_isCompactWidth];

    if (v11)
    {
      id v12 = *(void **)(*(void *)&v5[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                     + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
      v17[3] = &type metadata for CRLFeatureFlags;
      v17[4] = (id)sub_1005396A8();
      LOBYTE(v17[0]) = 12;
      id v13 = v12;
      char v14 = isFeatureEnabled(_:)();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v17);
      if (v14)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        if (v17[0])
        {

          if (qword_10166FAE0 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v15 = (id)static OS_os_log.crlFollow;
          uint64_t v16 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

          sub_1007ECCE4(1);
        }
      }
    }
  }
}

objc_class *sub_1005A4414()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  id v8 = [self tintColor];
  id v9 = [self configurationWithHierarchicalColor:v8];

  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [self imageNamed:v10];

  if (v11)
  {
    id v12 = [v11 imageWithSymbolConfiguration:v9];
  }
  else
  {
    id v12 = 0;
  }
  sub_10050BF48(0, &qword_101673A80);
  UIMenuElementSize preferredElementSize = sub_10059D888();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v34.value.super.Class isa = 0;
  v34.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v13, (Swift::String_optional)0, v34, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, (Swift::OpaquePointer)v9).super.super.isa;
  sub_10050BF48(0, (unint64_t *)&qword_101674470);
  id v15 = v12;
  uint64_t v16 = isa;
  v17.value._countAndFlagsBits = v5;
  v17.value._object = v7;
  v33.value.super.Class isa = (Class)v12;
  v33.is_nil = 0;
  v35.value.super.super.Class isa = isa;
  NSString v18 = UIBarButtonItem.init(title:image:primaryAction:menu:)(v17, v33, v35, v36).super.super.isa;
  id v19 = [v0 mainBundle];
  NSString v20 = String._bridgeToObjectiveC()();
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [v19 localizedStringForKey:v20 value:v21 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [(objc_class *)v18 setAccessibilityLabel:v23];

  NSString v24 = v18;
  id v25 = [v0 mainBundle];
  NSString v26 = String._bridgeToObjectiveC()();
  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = [v25 localizedStringForKey:v26 value:v27 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [(objc_class *)v24 setAccessibilityHint:v29];

  return v24;
}

objc_class *sub_1005A4848()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [self systemImageNamed:v8];

  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v28 = v10;
  id v11 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_10050BF48(0, (unint64_t *)&qword_101674470);
  id v12 = v9;
  id v13 = v11;
  v14.value._countAndFlagsBits = v5;
  v14.value._object = v7;
  v29.value.super.Class isa = (Class)v9;
  v29.is_nil = (char)v11;
  v30.value.super.super.Class isa = 0;
  id v15 = UIBarButtonItem.init(title:image:primaryAction:menu:)(v14, v29, v30, v31).super.super.isa;
  id v16 = [v0 mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v16 localizedStringForKey:v17 value:v18 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [(objc_class *)v15 setAccessibilityLabel:v20];

  NSString v21 = v15;
  id v22 = [v0 mainBundle];
  NSString v23 = String._bridgeToObjectiveC()();
  NSString v24 = String._bridgeToObjectiveC()();
  id v25 = [v22 localizedStringForKey:v23 value:v24 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [(objc_class *)v21 setAccessibilityHint:v26];

  return v21;
}

void sub_1005A4C10(uint64_t a1, uint64_t a2, SEL *a3)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    [Strong *a3 a1];
  }
}

objc_class *sub_1005A4C7C()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [self systemImageNamed:v8];

  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v22 = v10;
  id v11 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_10050BF48(0, (unint64_t *)&qword_101674470);
  id v12 = v9;
  id v13 = v11;
  v14.value._countAndFlagsBits = v5;
  v14.value._object = v7;
  v23.value.super.Class isa = (Class)v9;
  v23.is_nil = (char)v11;
  v24.value.super.super.Class isa = 0;
  id v15 = UIBarButtonItem.init(title:image:primaryAction:menu:)(v14, v23, v24, v25).super.super.isa;
  id v16 = [v0 mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v16 localizedStringForKey:v17 value:v18 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [(objc_class *)v15 setAccessibilityLabel:v20];

  return v15;
}

void sub_1005A4F58()
{
  id v1 = sub_100E3C594();
  id v2 = [v1 mode];

  id v3 = [v2 pencilModeType];
  if (v3)
  {
    id v5 = sub_100E3C594();
    [v5 resetToDefaultModeAnimated:1];
  }
  else
  {
    sub_100E3B1C0();
    id v4 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
    [v4 collapseAllExpandedCollaboratorHUDs];
  }
}

void sub_1005A5030()
{
  id v1 = sub_100E3C82C();
  unsigned int v2 = [v1 isEnabled];

  if (v2)
  {
    id v3 = [v0 undoManager];
    if (v3)
    {
      id v6 = v3;
      if ([v3 canUndo])
      {
        [v6 undo];
      }
      else if ([v6 canRedo])
      {
        if ((objc_msgSend(self, "crl_phoneUI") & 1) == 0)
        {
          id v4 = [v0 traitCollection];
          id v5 = [v4 horizontalSizeClass];

          if (v5 != (id)1) {
            sub_1005A51EC();
          }
        }
      }
      else
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"didTapUndoButton(sender:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 1532, (uint64_t)"Undo button was enabled and tapped, but neither canUndo nor canRedo were true", 77, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"didTapUndoButton(sender:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 1532);
      }
    }
  }
}

void sub_1005A51EC()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController;
  if (*(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController])
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"presentUndoMenu()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 1943, (uint64_t)"Already showing undo menu", 25, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentUndoMenu()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 1943);
  }
  else
  {
    _s34TextEditingAllowingAlertControllerCMa();
    id v2 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:0 message:0 preferredStyle:0];
    sub_1005B0D54();
    sub_10050BF48(0, &qword_1016745E0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v2 crl_setActions:isa];

    id v9 = [v2 popoverPresentationController];
    if (v9)
    {
      id v4 = v9;
      id v5 = sub_100E3C82C();
      [v4 setBarButtonItem:v5];
    }
    id v6 = [self sharedApplication];
    [v6 setApplicationSupportsShakeToEdit:0];

    uint64_t v7 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v2;
    id v8 = v2;

    [v0 presentViewController:v8 animated:1 completion:0];
  }
}

void sub_1005A5440(uint64_t a1)
{
  id v3 = sub_100E3C82C();
  unsigned int v4 = [v3 isEnabled];

  if (v4)
  {
    sub_100522D7C(a1, (uint64_t)v8);
    sub_10050BF48(0, (unint64_t *)&unk_101674800);
    if (swift_dynamicCast())
    {
      if ([v7 state] == (id)1)
      {
        if ((objc_msgSend(self, "crl_phoneUI") & 1) == 0)
        {
          id v5 = [v1 traitCollection];
          id v6 = [v5 horizontalSizeClass];

          if (v6 != (id)1) {
            sub_1005A51EC();
          }
        }
        [v7 setState:4];
      }
    }
  }
}

void sub_1005A55C8(void *a1)
{
  UIAccessibilityNotifications v1 = UIAccessibilityLayoutChangedNotification;
  id v2 = [a1 view];
  UIAccessibilityPostNotification(v1, v2);
}

void sub_1005A5630()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  unsigned int v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    uint64_t v7 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
    id v8 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
    if (v8 && ([v8 isUserInteractionEnabled] & 1) != 0)
    {
      id v9 = *(void **)(v6 + v7);
      if (!v9
        || (id v10 = [v9 rootViewController]) == 0
        || (id v11 = v10,
            id v12 = objc_msgSend(v10, "crl_windowWrapper"),
            v11,
            !v12)
        || (id v13 = [v12 newWrapperBeginningIgnoringUserInteractionSafely], v12, !v13))
      {
        if (qword_10166F9D8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v14 = (id)static OS_os_log.crlError;
        uint64_t v15 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v15, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
          90,
          2,
          (uint64_t)_swiftEmptyArrayStorage);

        id v13 = 0;
      }
      uint64_t v16 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v4, 1, 1, v16);
      type metadata accessor for MainActor();
      id v17 = v13;
      swift_unknownObjectRetain();
      id v18 = v0;
      uint64_t v19 = static MainActor.shared.getter();
      NSString v20 = (void *)swift_allocObject();
      _OWORD v20[2] = v19;
      v20[3] = &protocol witness table for MainActor;
      v20[4] = v6;
      v20[5] = v18;
      v20[6] = v13;
      sub_10059134C((uint64_t)v4, (uint64_t)&unk_1016747F8, (uint64_t)v20);
      swift_unknownObjectRelease();
      swift_release();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void sub_1005A5980(uint64_t a1)
{
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = v1;
  sub_1005C2B50(a1, (void (*)(uint64_t, unint64_t, uint64_t, uint64_t))sub_1005C7A4C);
  if (!v2)
  {
    id v8 = *(void **)(*(void *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                  + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory);
    id v9 = objc_allocWithZone((Class)CRLMultipleItemImporter);
    type metadata accessor for CRLPreinsertionAssetWrapper();
    id v10 = v8;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v12 = [v9 initWithDataWrappers:isa boardItemFactory:v10 importAnimatedGIFsAsImages:0];

    uint64_t v13 = type metadata accessor for TaskPriority();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v7, 1, 1, v13);
    type metadata accessor for MainActor();
    id v14 = v1;
    id v15 = v12;
    uint64_t v16 = static MainActor.shared.getter();
    id v17 = (void *)swift_allocObject();
    v17[2] = v16;
    v17[3] = &protocol witness table for MainActor;
    v17[4] = v14;
    id v17[5] = v15;
    sub_10059134C((uint64_t)v7, (uint64_t)&unk_1016747C0, (uint64_t)v17);
    swift_release();
  }
}

id sub_1005A5BA4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  id v9 = *(void **)(*(void *)(*(void *)(a5 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                            + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory)
                + OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board);
  id v10 = objc_allocWithZone((Class)type metadata accessor for CRLPreinsertionAssetWrapper());
  id v11 = v9;
  sub_100510D4C(a1, a2);
  swift_bridgeObjectRetain();
  return sub_100B4DED8(a1, a2, a3, a4, (uint64_t)v11);
}

uint64_t sub_1005A5C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for MainActor();
  void v5[4] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  void v5[5] = v7;
  v5[6] = v6;
  return _swift_task_switch(sub_1005A5CFC, v7, v6);
}

uint64_t sub_1005A5CFC()
{
  v0[7] = sub_100E3C6E8();
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1016743E8 + dword_1016743E8);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  void *v1 = v0;
  v1[1] = sub_1005A5DB4;
  uint64_t v2 = v0[3];
  return v4(v2);
}

uint64_t sub_1005A5DB4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_1005A5EF8, v3, v2);
}

uint64_t sub_1005A5EF8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005A5F58(uint64_t a1)
{
  v2[21] = a1;
  v2[22] = v1;
  sub_1005057FC(&qword_101672BB0);
  v2[23] = swift_task_alloc();
  v2[24] = type metadata accessor for MainActor();
  v2[25] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[26] = v4;
  v2[27] = v3;
  return _swift_task_switch(sub_1005A6024, v4, v3);
}

uint64_t sub_1005A6024()
{
  unsigned int v1 = [(id)v0[21] usesProgressDialog];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v3 = Strong, v4 = [Strong layerHost], v3, v4))
  {
    if (v1)
    {
      uint64_t v5 = (void *)v0[21];
      id v6 = [self mainBundle];
      NSString v7 = String._bridgeToObjectiveC()();
      NSString v8 = String._bridgeToObjectiveC()();
      id v9 = [v6 localizedStringForKey:v7 value:v8 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v11 = [v5 progress];
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = v5;
      v0[14] = sub_1005C1EE8;
      v0[15] = v12;
      v0[10] = _NSConcreteStackBlock;
      v0[11] = *(void *)"";
      v0[12] = sub_100679958;
      v0[13] = &unk_101508A50;
      uint64_t v13 = _Block_copy(v0 + 10);
      id v14 = v5;
      swift_release();
      id v15 = [v4 beginModalOperationWithPresentedLocalizedMessage:v10 progress:v11 cancelHandler:v13];
      _Block_release(v13);
    }
    else
    {
      id v15 = 0;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    id v15 = 0;
  }
  v0[28] = v15;
  uint64_t v16 = (void *)v0[21];
  v0[2] = v0;
  v0[3] = sub_1005A633C;
  uint64_t v17 = swift_continuation_init();
  v0[16] = _NSConcreteStackBlock;
  v0[17] = 0x40000000;
  v0[18] = sub_1005BFB40;
  v0[19] = &unk_1015089E8;
  v0[20] = v17;
  [v16 importBoardItemsWithCompletionHandler:v0 + 16];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1005A633C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 216);
  uint64_t v2 = *(void *)(*(void *)v0 + 208);
  return _swift_task_switch(sub_1005A6444, v2, v1);
}

uint64_t sub_1005A6444()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    id v3 = [Strong layerHost];

    if (v3)
    {
      if (*(void *)(v0 + 224)) {
        [v3 endModalOperationWithToken:];
      }
      swift_unknownObjectRelease();
    }
  }
  if ([*(id *)(v0 + 168) isCancelled])
  {
    swift_release();
    swift_unknownObjectRelease();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 184);
    NSString v8 = *(void **)(v0 + 168);
    uint64_t v7 = *(void *)(v0 + 176);
    uint64_t v9 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    id v10 = v8;
    swift_retain();
    uint64_t v11 = static MainActor.shared.getter();
    uint64_t v12 = (void *)swift_allocObject();
    _OWORD v12[2] = v11;
    id v12[3] = &protocol witness table for MainActor;
    v12[4] = v10;
    id v12[5] = v7;
    *(void *)(v0 + 232) = sub_10059134C(v6, (uint64_t)&unk_1016743F8, (uint64_t)v12);
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1005A6674;
    return Task<>.value.getter();
  }
}

uint64_t sub_1005A6674()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 216);
  uint64_t v3 = *(void *)(v1 + 208);
  return _swift_task_switch(sub_1005A6794, v3, v2);
}

uint64_t sub_1005A6794()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005A6814()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Tips.Status();
  uint64_t v3 = *(void **)(v2 - 8);
  __chkstk_darwin(v2, v4);
  id v51 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  char v50 = (char *)&v49 - v8;
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v49 - v11;
  *(void *)&double v15 = __chkstk_darwin(v13, v14).n128_u64[0];
  uint64_t v17 = (char *)&v49 - v16;
  id v49 = *(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  id v18 = [v49 infosForCurrentSelectionPath:v15];
  uint64_t v19 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v20 = *(void *)(v19 + 16);
  swift_bridgeObjectRelease();
  uint64_t v53 = v1;
  id v21 = [v1 traitCollection];
  LODWORD(v19) = [v21 crl_isCompactWidth];

  uint64_t v52 = v20;
  if (v19)
  {
    uint64_t v22 = &type metadata for CRLTipConnectionLinesEntryPointCompact;
    unint64_t v23 = sub_1005C6EC4();
  }
  else
  {
    uint64_t v22 = &type metadata for CRLTipConnectionLinesEntryPointFull;
    unint64_t v23 = sub_1005C6E1C();
  }
  uint64_t v56 = v22;
  unint64_t v57 = v23;
  sub_10053974C(&v55, (uint64_t)v58);
  sub_10050F848(v58, v58[3]);
  Tip.status.getter();
  UIAction_optional v24 = (void (*)(char *, char *, uint64_t))v3[2];
  v24(v12, v17, v2);
  UIMenu_optional v25 = (uint64_t (*)(char *, uint64_t))v3[11];
  int v26 = v25(v12, v2);
  int v27 = enum case for Tips.Status.invalidated(_:);
  uint64_t v28 = v12;
  UIImage_optional v29 = (void (*)(char *, uint64_t))v3[1];
  v29(v28, v2);
  UIAction_optional v30 = v17;
  int v31 = v26;
  v29(v30, v2);
  if (v26 == v27)
  {
    sub_1005C6E70();
    NSString v32 = v50;
    Tip.status.getter();
    UIImage_optional v33 = v51;
    v24(v51, v32, v2);
    int v34 = v25(v33, v2);
    v29(v33, v2);
    v29(v32, v2);
    if (v34 != v31)
    {
      uint64_t v35 = v52;
      if (qword_10166F5A8 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_1005057FC(&qword_10169FA10);
      sub_100556B74(v36, (uint64_t)qword_10171B0D0);
      BOOL v54 = 1;
      swift_beginAccess();
      Tips.Parameter.wrappedValue.setter();
      swift_endAccess();
      if (qword_10166F5B0 != -1) {
        swift_once();
      }
      sub_100556B74(v36, (uint64_t)qword_10171B0E8);
      BOOL v54 = v35 != 0;
      swift_beginAccess();
      Tips.Parameter.wrappedValue.setter();
      swift_endAccess();
    }
LABEL_29:
    sub_1005A6EB8();
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v58);
  }
  if (qword_10166F6C0 != -1) {
    swift_once();
  }
  uint64_t v37 = v52;
  BOOL v38 = v52 != 0;
  uint64_t v39 = sub_1005057FC(&qword_10169FA10);
  sub_100556B74(v39, (uint64_t)qword_10171B418);
  BOOL v54 = v38;
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  if (qword_101670220 != -1) {
    swift_once();
  }
  sub_100556B74(v39, (uint64_t)qword_10171CC78);
  BOOL v54 = v38;
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  if (!v37) {
    goto LABEL_29;
  }
  unsigned int v40 = (char *)[v49 board];
  if (v40)
  {
    Swift::String v41 = v40;
    Swift::String v42 = *(char **)&v40[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];
    uint64_t v43 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
    char v44 = *(double **)&v42[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
    char v45 = v42;
    if (!v44)
    {
      sub_100846AB0();
      char v44 = *(double **)&v42[v43];
    }
    if (v44) {
      unint64_t v46 = (unint64_t)v44;
    }
    else {
      unint64_t v46 = (unint64_t)_swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRetain();

    if (v46 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v47 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (qword_10166F6D8 != -1) {
      swift_once();
    }
    sub_100556B74(v39, (uint64_t)qword_10171B460);
    BOOL v54 = v47 > 1;
    swift_beginAccess();
    Tips.Parameter.wrappedValue.setter();
    swift_endAccess();
    if (qword_101670238 != -1) {
      swift_once();
    }
    sub_100556B74(v39, (uint64_t)qword_10171CCC0);
    BOOL v54 = v47 > 1;
    swift_beginAccess();
    Tips.Parameter.wrappedValue.setter();
    swift_endAccess();

    goto LABEL_29;
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v58);
}

uint64_t sub_1005A6EB8()
{
  uint64_t v1 = *(char **)(*(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                            + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  uint64_t v2 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  uint64_t v3 = *(double **)&v1[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
  uint64_t v4 = v1;
  if (!v3)
  {
    sub_100846AB0();
    uint64_t v3 = *(double **)&v1[v2];
  }
  if (v3) {
    unint64_t v5 = (unint64_t)v3;
  }
  else {
    unint64_t v5 = (unint64_t)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (qword_10166F018 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1005057FC(&qword_10169FA10);
  sub_100556B74(v6, (uint64_t)qword_10171A740);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  if (qword_10166F968 != -1) {
    swift_once();
  }
  sub_100556B74(v6, (uint64_t)qword_10171B9F8);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  return swift_endAccess();
}

uint64_t sub_1005A7080()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  unint64_t v5 = (char *)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Tips.ConfigurationOption.DisplayFrequency();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v114 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = &type metadata for CRLFeatureFlags;
  unint64_t v11 = sub_1005396A8();
  unint64_t v119 = v11;
  v117[0] = 0;
  char v12 = isFeatureEnabled(_:)();
  uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v117);
  if (v12)
  {
    sub_1005057FC(&qword_101674640);
    type metadata accessor for Tips.ConfigurationOption();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_10117E810;
    static Tips.ConfigurationOption.DisplayFrequency.daily.getter();
    static Tips.ConfigurationOption.displayFrequency(_:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    static Tips.configure(_:)();
    swift_bridgeObjectRelease();
    uint64_t v14 = &v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipObservation];
    swift_beginAccess();
    *(void *)uint64_t v14 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    if (sub_1005A7FA0())
    {
      uint64_t v118 = &type metadata for CRLFeatureFlags;
      unint64_t v119 = v11;
      v117[0] = 8;
      char v15 = isFeatureEnabled(_:)();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v117);
      if (v15)
      {
        unint64_t v116 = v11;
        uint64_t v16 = type metadata accessor for TaskPriority();
        uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
        v17(v5, 1, 1, v16);
        type metadata accessor for MainActor();
        id v18 = v1;
        uint64_t v19 = static MainActor.shared.getter();
        uint64_t v20 = (void *)swift_allocObject();
        _OWORD v20[2] = v19;
        v20[3] = &protocol witness table for MainActor;
        v20[4] = v18;
        uint64_t v115 = sub_10059134C((uint64_t)v5, (uint64_t)&unk_1016746A0, (uint64_t)v20);
        v17(v5, 1, 1, v16);
        id v21 = v18;
        uint64_t v22 = static MainActor.shared.getter();
        unint64_t v23 = (void *)swift_allocObject();
        v23[2] = v22;
        v23[3] = &protocol witness table for MainActor;
        void v23[4] = v21;
        uint64_t v114 = sub_10059134C((uint64_t)v5, (uint64_t)&unk_1016746B0, (uint64_t)v23);
        v17(v5, 1, 1, v16);
        UIAction_optional v24 = v21;
        uint64_t v25 = static MainActor.shared.getter();
        int v26 = (void *)swift_allocObject();
        v26[2] = v25;
        v26[3] = &protocol witness table for MainActor;
        v26[4] = v24;
        uint64_t v27 = sub_10059134C((uint64_t)v5, (uint64_t)&unk_1016746C0, (uint64_t)v26);
        UIImage_optional v29 = sub_100E3D1DC();
        UIAction_optional v30 = *v28;
        if (*v28)
        {
          int v31 = v28;
          swift_retain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          char *v31 = v30;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            UIAction_optional v30 = sub_100F63340(0, *((void *)v30 + 2) + 1, 1, v30);
            char *v31 = v30;
          }
          unint64_t v34 = *((void *)v30 + 2);
          unint64_t v33 = *((void *)v30 + 3);
          uint64_t v35 = v114;
          if (v34 >= v33 >> 1)
          {
            UIAction_optional v30 = sub_100F63340((double *)(v33 > 1), v34 + 1, 1, v30);
            char *v31 = v30;
          }
          uint64_t v36 = v115;
          *((void *)v30 + 2) = v34 + 1;
          *(void *)&v30[v34 + 4] = v36;
          ((void (*)(unsigned char *, void))v29)(v117, 0);
        }
        else
        {
          ((void (*)(unsigned char *, void))v29)(v117, 0);
          uint64_t v35 = v114;
        }
        BOOL v38 = sub_100E3D1DC();
        uint64_t v39 = *v37;
        if (*v37)
        {
          unsigned int v40 = v37;
          swift_retain();
          char v41 = swift_isUniquelyReferenced_nonNull_native();
          *unsigned int v40 = v39;
          if ((v41 & 1) == 0)
          {
            uint64_t v39 = sub_100F63340(0, *((void *)v39 + 2) + 1, 1, v39);
            *unsigned int v40 = v39;
          }
          unint64_t v43 = *((void *)v39 + 2);
          unint64_t v42 = *((void *)v39 + 3);
          if (v43 >= v42 >> 1)
          {
            uint64_t v39 = sub_100F63340((double *)(v42 > 1), v43 + 1, 1, v39);
            *unsigned int v40 = v39;
          }
          *((void *)v39 + 2) = v43 + 1;
          *(void *)&v39[v43 + 4] = v35;
          ((void (*)(unsigned char *, void))v38)(v117, 0);
        }
        else
        {
          ((void (*)(unsigned char *, void))v38)(v117, 0);
        }
        char v45 = sub_100E3D1DC();
        unint64_t v46 = *v44;
        if (*v44)
        {
          uint64_t v47 = v44;
          swift_retain();
          char v48 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v47 = v46;
          if ((v48 & 1) == 0)
          {
            unint64_t v46 = sub_100F63340(0, *((void *)v46 + 2) + 1, 1, v46);
            *uint64_t v47 = v46;
          }
          unint64_t v50 = *((void *)v46 + 2);
          unint64_t v49 = *((void *)v46 + 3);
          if (v50 >= v49 >> 1)
          {
            unint64_t v46 = sub_100F63340((double *)(v49 > 1), v50 + 1, 1, v46);
            *uint64_t v47 = v46;
          }
          *((void *)v46 + 2) = v50 + 1;
          *(void *)&v46[v50 + 4] = v27;
          ((void (*)(unsigned char *, void))v45)(v117, 0);
        }
        else
        {
          ((void (*)(unsigned char *, void))v45)(v117, 0);
        }
        swift_release();
        swift_release();
        swift_release();
        unint64_t v11 = v116;
      }
    }
    if (sub_1005AADBC())
    {
      uint64_t v118 = &type metadata for CRLFeatureFlags;
      unint64_t v119 = v11;
      v117[0] = 17;
      char v51 = isFeatureEnabled(_:)();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v117);
      if (v51)
      {
        unint64_t v116 = v11;
        uint64_t v52 = type metadata accessor for TaskPriority();
        uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56);
        v53(v5, 1, 1, v52);
        type metadata accessor for MainActor();
        BOOL v54 = v1;
        uint64_t v55 = static MainActor.shared.getter();
        uint64_t v56 = (void *)swift_allocObject();
        void v56[2] = v55;
        void v56[3] = &protocol witness table for MainActor;
        v56[4] = v54;
        uint64_t v57 = sub_10059134C((uint64_t)v5, (uint64_t)&unk_101674680, (uint64_t)v56);
        v53(v5, 1, 1, v52);
        uint64_t v58 = v54;
        uint64_t v59 = static MainActor.shared.getter();
        uint64_t v60 = (void *)swift_allocObject();
        v60[2] = v59;
        v60[3] = &protocol witness table for MainActor;
        v60[4] = v58;
        uint64_t v61 = sub_10059134C((uint64_t)v5, (uint64_t)&unk_101674690, (uint64_t)v60);
        NSString v63 = sub_100E3D1DC();
        id v64 = *v62;
        if (*v62)
        {
          NSString v65 = v62;
          swift_retain();
          char v66 = swift_isUniquelyReferenced_nonNull_native();
          *NSString v65 = v64;
          uint64_t v67 = v57;
          if ((v66 & 1) == 0)
          {
            id v64 = sub_100F63340(0, *((void *)v64 + 2) + 1, 1, v64);
            *NSString v65 = v64;
          }
          unint64_t v69 = *((void *)v64 + 2);
          unint64_t v68 = *((void *)v64 + 3);
          if (v69 >= v68 >> 1)
          {
            id v64 = sub_100F63340((double *)(v68 > 1), v69 + 1, 1, v64);
            *NSString v65 = v64;
          }
          *((void *)v64 + 2) = v69 + 1;
          *(void *)&v64[v69 + 4] = v67;
          ((void (*)(unsigned char *, void))v63)(v117, 0);
        }
        else
        {
          ((void (*)(unsigned char *, void))v63)(v117, 0);
        }
        uint64_t v71 = sub_100E3D1DC();
        uint64_t v72 = *v70;
        if (*v70)
        {
          uint64_t v73 = v70;
          swift_retain();
          char v74 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v73 = v72;
          if ((v74 & 1) == 0)
          {
            uint64_t v72 = sub_100F63340(0, *((void *)v72 + 2) + 1, 1, v72);
            *uint64_t v73 = v72;
          }
          unint64_t v76 = *((void *)v72 + 2);
          unint64_t v75 = *((void *)v72 + 3);
          if (v76 >= v75 >> 1)
          {
            uint64_t v72 = sub_100F63340((double *)(v75 > 1), v76 + 1, 1, v72);
            *uint64_t v73 = v72;
          }
          *((void *)v72 + 2) = v76 + 1;
          *(void *)&v72[v76 + 4] = v61;
          ((void (*)(unsigned char *, void))v71)(v117, 0);
        }
        else
        {
          ((void (*)(unsigned char *, void))v71)(v117, 0);
        }
        swift_release();
        swift_release();
        unint64_t v11 = v116;
      }
    }
    if (sub_1005AD6A0())
    {
      uint64_t v77 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v5, 1, 1, v77);
      type metadata accessor for MainActor();
      id v78 = v1;
      uint64_t v79 = static MainActor.shared.getter();
      NSString v80 = (void *)swift_allocObject();
      v80[2] = v79;
      v80[3] = &protocol witness table for MainActor;
      v80[4] = v78;
      uint64_t v81 = sub_10059134C((uint64_t)v5, (uint64_t)&unk_101674670, (uint64_t)v80);
      id v83 = sub_100E3D1DC();
      Swift::String v84 = *v82;
      if (*v82)
      {
        id v85 = v82;
        swift_retain();
        char v86 = swift_isUniquelyReferenced_nonNull_native();
        *id v85 = v84;
        if ((v86 & 1) == 0)
        {
          Swift::String v84 = sub_100F63340(0, *((void *)v84 + 2) + 1, 1, v84);
          *id v85 = v84;
        }
        unint64_t v88 = *((void *)v84 + 2);
        unint64_t v87 = *((void *)v84 + 3);
        if (v88 >= v87 >> 1)
        {
          Swift::String v84 = sub_100F63340((double *)(v87 > 1), v88 + 1, 1, v84);
          *id v85 = v84;
        }
        *((void *)v84 + 2) = v88 + 1;
        *(void *)&v84[v88 + 4] = v81;
        ((void (*)(unsigned char *, void))v83)(v117, 0);
      }
      else
      {
        ((void (*)(unsigned char *, void))v83)(v117, 0);
      }
      swift_release();
    }
    uint64_t result = sub_1005AE700();
    if (result)
    {
      uint64_t v118 = &type metadata for CRLFeatureFlags;
      unint64_t v119 = v11;
      v117[0] = 20;
      char v89 = isFeatureEnabled(_:)();
      uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v117);
      if (v89)
      {
        uint64_t v90 = type metadata accessor for TaskPriority();
        uint64_t v91 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56);
        v91(v5, 1, 1, v90);
        type metadata accessor for MainActor();
        uint64_t v92 = v1;
        uint64_t v93 = static MainActor.shared.getter();
        unint64_t v94 = (void *)swift_allocObject();
        v94[2] = v93;
        v94[3] = &protocol witness table for MainActor;
        v94[4] = v92;
        uint64_t v95 = sub_10059134C((uint64_t)v5, (uint64_t)&unk_101674650, (uint64_t)v94);
        v91(v5, 1, 1, v90);
        char v96 = v92;
        uint64_t v97 = static MainActor.shared.getter();
        id v98 = (void *)swift_allocObject();
        v98[2] = v97;
        v98[3] = &protocol witness table for MainActor;
        v98[4] = v96;
        uint64_t v99 = sub_10059134C((uint64_t)v5, (uint64_t)&unk_101674660, (uint64_t)v98);
        unint64_t v101 = sub_100E3D1DC();
        uint64_t v102 = *v100;
        if (*v100)
        {
          id v103 = v100;
          swift_retain();
          char v104 = swift_isUniquelyReferenced_nonNull_native();
          *id v103 = v102;
          if ((v104 & 1) == 0)
          {
            uint64_t v102 = sub_100F63340(0, *((void *)v102 + 2) + 1, 1, v102);
            *id v103 = v102;
          }
          unint64_t v106 = *((void *)v102 + 2);
          unint64_t v105 = *((void *)v102 + 3);
          if (v106 >= v105 >> 1)
          {
            uint64_t v102 = sub_100F63340((double *)(v105 > 1), v106 + 1, 1, v102);
            *id v103 = v102;
          }
          *((void *)v102 + 2) = v106 + 1;
          *(void *)&v102[v106 + 4] = v95;
          ((void (*)(unsigned char *, void))v101)(v117, 0);
        }
        else
        {
          ((void (*)(unsigned char *, void))v101)(v117, 0);
        }
        id v108 = sub_100E3D1DC();
        uint64_t v109 = *v107;
        if (*v107)
        {
          UIMenuElementSize v110 = v107;
          swift_retain();
          char v111 = swift_isUniquelyReferenced_nonNull_native();
          *UIMenuElementSize v110 = v109;
          if ((v111 & 1) == 0)
          {
            uint64_t v109 = sub_100F63340(0, *((void *)v109 + 2) + 1, 1, v109);
            *UIMenuElementSize v110 = v109;
          }
          unint64_t v113 = *((void *)v109 + 2);
          unint64_t v112 = *((void *)v109 + 3);
          if (v113 >= v112 >> 1)
          {
            uint64_t v109 = sub_100F63340((double *)(v112 > 1), v113 + 1, 1, v109);
            *UIMenuElementSize v110 = v109;
          }
          *((void *)v109 + 2) = v113 + 1;
          *(void *)&v109[v113 + 4] = v99;
          ((void (*)(unsigned char *, void))v108)(v117, 0);
        }
        else
        {
          ((void (*)(unsigned char *, void))v108)(v117, 0);
        }
        swift_release();
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1005A7FA0()
{
  uint64_t v0 = type metadata accessor for Tips.Status();
  uint64_t v1 = *(void **)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v25 - v7;
  __chkstk_darwin(v9, v10);
  char v12 = (char *)&v25 - v11;
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v25 - v15;
  UIAction_optional v30 = &type metadata for CRLFeatureFlags;
  unint64_t v17 = sub_1005396A8();
  unint64_t v31 = v17;
  v29[0] = 0;
  char v18 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v29);
  uint64_t result = 0;
  if (v18)
  {
    UIAction_optional v30 = &type metadata for CRLFeatureFlags;
    unint64_t v31 = v17;
    v29[0] = 8;
    char v20 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v29);
    if (v20)
    {
      sub_1005C6E1C();
      Tip.status.getter();
      int v26 = (void (*)(char *, char *, uint64_t))v1[2];
      v26(v12, v16, v0);
      uint64_t v25 = (uint64_t (*)(char *, uint64_t))v1[11];
      int v27 = v25(v12, v0);
      int v21 = enum case for Tips.Status.invalidated(_:);
      uint64_t v22 = (void (*)(char *, uint64_t))v1[1];
      v22(v12, v0);
      v22(v16, v0);
      if (v27 != v21)
      {
        sub_1005C6EC4();
        Tip.status.getter();
        v26(v4, v8, v0);
        int v23 = v25(v4, v0);
        v22(v4, v0);
        v22(v8, v0);
        if (v23 != v21) {
          return 1;
        }
      }
      if (qword_10166F5A8 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_1005057FC(&qword_10169FA10);
      sub_100556B74(v24, (uint64_t)qword_10171B0D0);
      char v28 = 1;
      swift_beginAccess();
      Tips.Parameter.wrappedValue.setter();
      swift_endAccess();
    }
    return 0;
  }
  return result;
}

uint64_t sub_1005A82C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[22] = a4;
  sub_1005057FC(&qword_1016746C8);
  v4[23] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Tips.Status();
  unsigned char v4[24] = v5;
  v4[25] = *(void *)(v5 - 8);
  v4[26] = swift_task_alloc();
  v4[27] = sub_1005057FC(&qword_1016746D0);
  v4[28] = swift_task_alloc();
  v4[29] = sub_1005057FC(&qword_1016746D8);
  v4[30] = swift_task_alloc();
  uint64_t v6 = sub_1005057FC(&qword_1016746E0);
  v4[31] = v6;
  v4[32] = *(void *)(v6 - 8);
  v4[33] = swift_task_alloc();
  uint64_t v7 = sub_1005057FC(&qword_1016746E8);
  v4[34] = v7;
  v4[35] = *(void *)(v7 - 8);
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  v4[38] = type metadata accessor for MainActor();
  v4[39] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[40] = v9;
  v4[41] = v8;
  return _swift_task_switch(sub_1005A8524, v9, v8);
}

uint64_t sub_1005A8524()
{
  uint64_t v2 = v0[32];
  uint64_t v1 = v0[33];
  uint64_t v3 = v0[31];
  sub_1005C6E1C();
  Tip.shouldDisplayUpdates.getter();
  AsyncMapSequence.base.getter();
  sub_100523288(&qword_1016746F0, &qword_1016746D0);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  AsyncMapSequence.Iterator.init(_:transform:)();
  uint64_t v4 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController;
  v0[42] = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController;
  v0[43] = v4;
  uint64_t v5 = static MainActor.shared.getter();
  v0[44] = v5;
  if (v5)
  {
    swift_getObjectType();
    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  v0[45] = v6;
  v0[46] = v8;
  return _swift_task_switch(sub_1005A86BC, v6, v8);
}

uint64_t sub_1005A86BC()
{
  uint64_t v1 = v0[44];
  v0[47] = AsyncMapSequence.Iterator.baseIterator.modify();
  sub_100523288(&qword_1016746F8, &qword_1016746D8);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[48] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1005A87B8;
  uint64_t v3 = v0[23];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v3, v1, &protocol witness table for MainActor);
}

uint64_t sub_1005A87B8()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 360);
    uint64_t v4 = *(void *)(v2 + 368);
    uint64_t v5 = sub_1005C7E80;
  }
  else
  {
    (*(void (**)(void))(v2 + 376))();
    uint64_t v3 = *(void *)(v2 + 360);
    uint64_t v4 = *(void *)(v2 + 368);
    uint64_t v5 = sub_1005A88E0;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1005A88E0()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[23];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100522F00(v3, &qword_1016746C8);
    swift_release();
    uint64_t v4 = v0[40];
    uint64_t v5 = v0[41];
    return _swift_task_switch(sub_1005C7E78, v4, v5);
  }
  else
  {
    uint64_t v7 = v0[36];
    uint64_t v6 = v0[37];
    uint64_t v8 = v0[34];
    uint64_t v9 = v0[35];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[26], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    uint64_t v10 = (int *)AsyncMapSequence.Iterator.transform.getter();
    v0[49] = v11;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    uint64_t v15 = (int *)((char *)v10 + *v10);
    char v12 = (void *)swift_task_alloc();
    v0[50] = v12;
    *char v12 = v0;
    v12[1] = sub_1005A8ADC;
    uint64_t v13 = v0[26];
    return ((uint64_t (*)(void *, uint64_t))v15)(v0 + 51, v13);
  }
}

uint64_t sub_1005A8ADC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 208);
  uint64_t v3 = *(void *)(*v0 + 200);
  uint64_t v4 = *(void *)(*v0 + 192);
  swift_task_dealloc();
  swift_release();
  *(unsigned char *)(v1 + 410) = *(unsigned char *)(v1 + 408);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 368);
  uint64_t v6 = *(void *)(v1 + 360);
  return _swift_task_switch(sub_1005A8C88, v6, v5);
}

uint64_t sub_1005A8C88()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 328);
  return _swift_task_switch(sub_1005A8CEC, v1, v2);
}

uint64_t sub_1005A8CEC()
{
  if (*(unsigned char *)(v0 + 410))
  {
    *(void *)(v0 + 40) = &type metadata for CRLFeatureFlags;
    unint64_t v1 = sub_1005396A8();
    *(unsigned char *)(v0 + 16) = 8;
    *(void *)(v0 + 48) = v1;
    char v2 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
    if (v2)
    {
      id v3 = [*(id *)(v0 + 176) traitCollection];
      unsigned int v4 = [v3 crl_isCompactWidth];

      if (v4)
      {
        id v5 = sub_100E3C92C();
        sub_1005C01B8((uint64_t)v5, (uint64_t)sub_100E5CE2C, 0);
      }
      else
      {
        uint64_t v14 = *(void **)(*(void *)(v0 + 176) + *(void *)(v0 + 344));
        if (v14)
        {
          id v15 = v14;
          id v5 = sub_1009A51AC();

          sub_100E5C100((uint64_t)v5, 3, (uint64_t)sub_100E5CE50, 0);
        }
        else
        {
          if (qword_10166F9D8 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v5 = (id)static OS_os_log.crlError;
          uint64_t v16 = static os_log_type_t.error.getter();
          sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Unable to present connection lines entry point tip because relative rect not found", 82, 2, (uint64_t)_swiftEmptyArrayStorage);
        }
      }
    }
    if (qword_10166F5A8 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1005057FC(&qword_10169FA10);
    sub_100556B74(v17, (uint64_t)qword_10171B0D0);
    *(unsigned char *)(v0 + 409) = 1;
    swift_beginAccess();
    Tips.Parameter.wrappedValue.setter();
    swift_endAccess();
  }
  else
  {
    *(void *)(v0 + 80) = &type metadata for CRLFeatureFlags;
    unint64_t v6 = sub_1005396A8();
    *(unsigned char *)(v0 + 56) = 0;
    *(void *)(v0 + 88) = v6;
    char v7 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 56);
    if (v7)
    {
      id v8 = [*(id *)(v0 + 176) presentedViewController];
      if (v8)
      {
        uint64_t v9 = v8;
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v11 = (void *)Strong;
          sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
          id v12 = v9;
          char v13 = static NSObject.== infix(_:_:)();

          if (v13)
          {
            [v12 dismissViewControllerAnimated:1 completion:0];
            sub_100E5DCEC(1);
          }
        }
        else
        {
        }
      }
    }
  }
  uint64_t v18 = static MainActor.shared.getter();
  *(void *)(v0 + 352) = v18;
  if (v18)
  {
    swift_getObjectType();
    uint64_t v19 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v21 = v20;
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v21 = 0;
  }
  *(void *)(v0 + 360) = v19;
  *(void *)(v0 + 368) = v21;
  return _swift_task_switch(sub_1005A86BC, v19, v21);
}

uint64_t sub_1005A907C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[22] = a4;
  sub_1005057FC(&qword_1016746C8);
  v4[23] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Tips.Status();
  unsigned char v4[24] = v5;
  v4[25] = *(void *)(v5 - 8);
  v4[26] = swift_task_alloc();
  v4[27] = sub_1005057FC(&qword_1016746D0);
  v4[28] = swift_task_alloc();
  v4[29] = sub_1005057FC(&qword_1016746D8);
  v4[30] = swift_task_alloc();
  uint64_t v6 = sub_1005057FC(&qword_1016746E0);
  v4[31] = v6;
  v4[32] = *(void *)(v6 - 8);
  v4[33] = swift_task_alloc();
  uint64_t v7 = sub_1005057FC(&qword_1016746E8);
  v4[34] = v7;
  v4[35] = *(void *)(v7 - 8);
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  v4[38] = type metadata accessor for MainActor();
  v4[39] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[40] = v9;
  v4[41] = v8;
  return _swift_task_switch(sub_1005A92DC, v9, v8);
}

uint64_t sub_1005A92DC()
{
  uint64_t v2 = v0[32];
  uint64_t v1 = v0[33];
  uint64_t v3 = v0[31];
  sub_1005C6EC4();
  Tip.shouldDisplayUpdates.getter();
  AsyncMapSequence.base.getter();
  sub_100523288(&qword_1016746F0, &qword_1016746D0);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  AsyncMapSequence.Iterator.init(_:transform:)();
  uint64_t v4 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController;
  v0[42] = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController;
  v0[43] = v4;
  uint64_t v5 = static MainActor.shared.getter();
  v0[44] = v5;
  if (v5)
  {
    swift_getObjectType();
    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  v0[45] = v6;
  v0[46] = v8;
  return _swift_task_switch(sub_1005A9474, v6, v8);
}

uint64_t sub_1005A9474()
{
  uint64_t v1 = v0[44];
  v0[47] = AsyncMapSequence.Iterator.baseIterator.modify();
  sub_100523288(&qword_1016746F8, &qword_1016746D8);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[48] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1005A9570;
  uint64_t v3 = v0[23];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v3, v1, &protocol witness table for MainActor);
}

uint64_t sub_1005A9570()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 360);
    uint64_t v4 = *(void *)(v2 + 368);
    uint64_t v5 = sub_1005A9894;
  }
  else
  {
    (*(void (**)(void))(v2 + 376))();
    uint64_t v3 = *(void *)(v2 + 360);
    uint64_t v4 = *(void *)(v2 + 368);
    uint64_t v5 = sub_1005A9698;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1005A9698()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[23];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100522F00(v3, &qword_1016746C8);
    swift_release();
    uint64_t v4 = v0[40];
    uint64_t v5 = v0[41];
    return _swift_task_switch(sub_1005A9E4C, v4, v5);
  }
  else
  {
    uint64_t v7 = v0[36];
    uint64_t v6 = v0[37];
    uint64_t v8 = v0[34];
    uint64_t v9 = v0[35];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[26], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    uint64_t v10 = (int *)AsyncMapSequence.Iterator.transform.getter();
    v0[49] = v11;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    id v15 = (int *)((char *)v10 + *v10);
    id v12 = (void *)swift_task_alloc();
    v0[50] = v12;
    *id v12 = v0;
    v12[1] = sub_1005A98AC;
    uint64_t v13 = v0[26];
    return ((uint64_t (*)(void *, uint64_t))v15)(v0 + 51, v13);
  }
}

uint64_t sub_1005A9894()
{
  return (*(uint64_t (**)(void))(v0 + 376))();
}

uint64_t sub_1005A98AC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 208);
  uint64_t v3 = *(void *)(*v0 + 200);
  uint64_t v4 = *(void *)(*v0 + 192);
  swift_task_dealloc();
  swift_release();
  *(unsigned char *)(v1 + 410) = *(unsigned char *)(v1 + 408);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 368);
  uint64_t v6 = *(void *)(v1 + 360);
  return _swift_task_switch(sub_1005A9A58, v6, v5);
}

uint64_t sub_1005A9A58()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 328);
  return _swift_task_switch(sub_1005A9ABC, v1, v2);
}

uint64_t sub_1005A9ABC()
{
  if (*(unsigned char *)(v0 + 410))
  {
    *(void *)(v0 + 40) = &type metadata for CRLFeatureFlags;
    unint64_t v1 = sub_1005396A8();
    *(unsigned char *)(v0 + 16) = 8;
    *(void *)(v0 + 48) = v1;
    char v2 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
    if (v2)
    {
      id v3 = [*(id *)(v0 + 176) traitCollection];
      unsigned int v4 = [v3 crl_isCompactWidth];

      if (v4)
      {
        id v5 = sub_100E3C92C();
        sub_1005C01B8((uint64_t)v5, (uint64_t)sub_100E5CE2C, 0);
      }
      else
      {
        uint64_t v14 = *(void **)(*(void *)(v0 + 176) + *(void *)(v0 + 344));
        if (v14)
        {
          id v15 = v14;
          id v5 = sub_1009A51AC();

          sub_100E5C100((uint64_t)v5, 3, (uint64_t)sub_100E5CE50, 0);
        }
        else
        {
          if (qword_10166F9D8 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v5 = (id)static OS_os_log.crlError;
          uint64_t v16 = static os_log_type_t.error.getter();
          sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Unable to present connection lines entry point tip because relative rect not found", 82, 2, (uint64_t)_swiftEmptyArrayStorage);
        }
      }
    }
    if (qword_10166F5A8 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1005057FC(&qword_10169FA10);
    sub_100556B74(v17, (uint64_t)qword_10171B0D0);
    *(unsigned char *)(v0 + 409) = 1;
    swift_beginAccess();
    Tips.Parameter.wrappedValue.setter();
    swift_endAccess();
  }
  else
  {
    *(void *)(v0 + 80) = &type metadata for CRLFeatureFlags;
    unint64_t v6 = sub_1005396A8();
    *(unsigned char *)(v0 + 56) = 0;
    *(void *)(v0 + 88) = v6;
    char v7 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 56);
    if (v7)
    {
      id v8 = [*(id *)(v0 + 176) presentedViewController];
      if (v8)
      {
        uint64_t v9 = v8;
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v11 = (void *)Strong;
          sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
          id v12 = v9;
          char v13 = static NSObject.== infix(_:_:)();

          if (v13)
          {
            [v12 dismissViewControllerAnimated:1 completion:0];
            sub_100E5DCEC(1);
          }
        }
        else
        {
        }
      }
    }
  }
  uint64_t v18 = static MainActor.shared.getter();
  *(void *)(v0 + 352) = v18;
  if (v18)
  {
    swift_getObjectType();
    uint64_t v19 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v21 = v20;
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v21 = 0;
  }
  *(void *)(v0 + 360) = v19;
  *(void *)(v0 + 368) = v21;
  return _swift_task_switch(sub_1005A9474, v19, v21);
}

uint64_t sub_1005A9E4C()
{
  (*(void (**)(void, void))(v0[35] + 8))(v0[37], v0[34]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1005A9F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[31] = a4;
  sub_1005057FC(&qword_1016746C8);
  v4[32] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Tips.Status();
  v4[33] = v5;
  v4[34] = *(void *)(v5 - 8);
  v4[35] = swift_task_alloc();
  v4[36] = sub_1005057FC(&qword_1016746D0);
  v4[37] = swift_task_alloc();
  v4[38] = sub_1005057FC(&qword_1016746D8);
  v4[39] = swift_task_alloc();
  uint64_t v6 = sub_1005057FC(&qword_1016746E0);
  v4[40] = v6;
  v4[41] = *(void *)(v6 - 8);
  v4[42] = swift_task_alloc();
  uint64_t v7 = sub_1005057FC(&qword_1016746E8);
  v4[43] = v7;
  v4[44] = *(void *)(v7 - 8);
  v4[45] = swift_task_alloc();
  v4[46] = swift_task_alloc();
  v4[47] = type metadata accessor for MainActor();
  v4[48] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[49] = v9;
  v4[50] = v8;
  return _swift_task_switch(sub_1005AA190, v9, v8);
}

uint64_t sub_1005AA190()
{
  uint64_t v2 = v0[41];
  uint64_t v1 = v0[42];
  uint64_t v3 = v0[40];
  sub_1005C6E70();
  Tip.shouldDisplayUpdates.getter();
  AsyncMapSequence.base.getter();
  sub_100523288(&qword_1016746F0, &qword_1016746D0);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  AsyncMapSequence.Iterator.init(_:transform:)();
  uint64_t v4 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPresentationView;
  v0[51] = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController;
  v0[52] = v4;
  v0[53] = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController;
  uint64_t v5 = static MainActor.shared.getter();
  v0[54] = v5;
  if (v5)
  {
    swift_getObjectType();
    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  v0[55] = v6;
  v0[56] = v8;
  return _swift_task_switch(sub_1005AA338, v6, v8);
}

uint64_t sub_1005AA338()
{
  uint64_t v1 = v0[54];
  v0[57] = AsyncMapSequence.Iterator.baseIterator.modify();
  sub_100523288(&qword_1016746F8, &qword_1016746D8);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[58] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1005AA434;
  uint64_t v3 = v0[32];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v3, v1, &protocol witness table for MainActor);
}

uint64_t sub_1005AA434()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 440);
    uint64_t v4 = *(void *)(v2 + 448);
    uint64_t v5 = sub_1005AA758;
  }
  else
  {
    (*(void (**)(void))(v2 + 456))();
    uint64_t v3 = *(void *)(v2 + 440);
    uint64_t v4 = *(void *)(v2 + 448);
    uint64_t v5 = sub_1005AA55C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1005AA55C()
{
  uint64_t v1 = *((void *)v0 + 33);
  uint64_t v2 = *((void *)v0 + 34);
  uint64_t v3 = *((void *)v0 + 32);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100522F00(v3, &qword_1016746C8);
    swift_release();
    uint64_t v4 = *((void *)v0 + 49);
    uint64_t v5 = *((void *)v0 + 50);
    return _swift_task_switch(sub_1005AACD8, v4, v5);
  }
  else
  {
    uint64_t v7 = *((void *)v0 + 45);
    uint64_t v6 = *((void *)v0 + 46);
    uint64_t v8 = *((void *)v0 + 43);
    uint64_t v9 = *((void *)v0 + 44);
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(*((void *)v0 + 35), v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    uint64_t v10 = (int *)AsyncMapSequence.Iterator.transform.getter();
    *((void *)v0 + 59) = v11;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    id v15 = (uint64_t (*)(char *, uint64_t))((char *)v10 + *v10);
    id v12 = (void *)swift_task_alloc();
    *((void *)v0 + 60) = v12;
    *id v12 = v0;
    v12[1] = sub_1005AA770;
    uint64_t v13 = *((void *)v0 + 35);
    return v15(v0 + 57, v13);
  }
}

uint64_t sub_1005AA758()
{
  return (*(uint64_t (**)(void))(v0 + 456))();
}

uint64_t sub_1005AA770()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 280);
  uint64_t v3 = *(void *)(*v0 + 272);
  uint64_t v4 = *(void *)(*v0 + 264);
  swift_task_dealloc();
  swift_release();
  *(unsigned char *)(v1 + 58) = *(unsigned char *)(v1 + 57);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 448);
  uint64_t v6 = *(void *)(v1 + 440);
  return _swift_task_switch(sub_1005AA91C, v6, v5);
}

uint64_t sub_1005AA91C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 392);
  uint64_t v2 = *(void *)(v0 + 400);
  return _swift_task_switch(sub_1005AA980, v1, v2);
}

uint64_t sub_1005AA980()
{
  if (*(unsigned char *)(v0 + 58))
  {
    *(void *)(v0 + 136) = &type metadata for CRLFeatureFlags;
    unint64_t v1 = sub_1005396A8();
    *(unsigned char *)(v0 + 112) = 0;
    *(void *)(v0 + 144) = v1;
    char v2 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 112);
    if (v2)
    {
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

      if (!Strong)
      {
        sub_100E5D74C(v0 + 64);
        sub_10051B3EC(v0 + 64, v0 + 16, &qword_101674700);
        if (*(unsigned char *)(v0 + 56))
        {
          if (qword_10166F9D8 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v4 = (id)static OS_os_log.crlError;
          uint64_t v5 = static os_log_type_t.error.getter();
          sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v5, (uint64_t)"Unable to present connection line on selection because there is no connection line knob position to present off of", 114, 2, (uint64_t)_swiftEmptyArrayStorage);
LABEL_16:

          goto LABEL_17;
        }
        uint64_t v12 = *(void *)(v0 + 416);
        uint64_t v13 = *(void *)(v0 + 248);
        uint64_t v14 = *(void *)(v0 + 48);
        id v15 = [objc_allocWithZone((Class)UIView) initWithFrame:*(double *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40)];
        uint64_t v16 = *(void **)(v13 + v12);
        *(void *)(v13 + v12) = v15;

        uint64_t v17 = *(void **)(v13 + v12);
        if (v17)
        {
          uint64_t v18 = *(void **)(*(void *)(v0 + 248) + *(void *)(v0 + 424));
          id v4 = v17;
          uint64_t v19 = (uint64_t (*)())[v18 view];
          if (!v19)
          {
            __break(1u);
            return _swift_task_switch(v19, v20, v21);
          }
          uint64_t v22 = v19;
          [v19 addSubview:v4];

          sub_100E5C438((uint64_t)v4, v14, 0, 0);
          goto LABEL_16;
        }
      }
    }
  }
  else
  {
    *(void *)(v0 + 176) = &type metadata for CRLFeatureFlags;
    unint64_t v6 = sub_1005396A8();
    *(unsigned char *)(v0 + 152) = 0;
    *(void *)(v0 + 184) = v6;
    char v7 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 152);
    if (v7)
    {
      id v8 = [*(id *)(v0 + 248) presentedViewController];
      if (v8)
      {
        id v4 = v8;
        uint64_t v9 = swift_unknownObjectWeakLoadStrong();
        if (v9)
        {
          uint64_t v10 = (void *)v9;
          sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
          id v4 = v4;
          char v11 = static NSObject.== infix(_:_:)();

          if (v11)
          {
            [v4 dismissViewControllerAnimated:1 completion:0];
            sub_100E5DCEC(1);
          }
        }
        goto LABEL_16;
      }
    }
  }
LABEL_17:
  uint64_t v23 = static MainActor.shared.getter();
  *(void *)(v0 + 432) = v23;
  if (v23)
  {
    swift_getObjectType();
    uint64_t v24 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v21 = v25;
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v21 = 0;
  }
  *(void *)(v0 + 440) = v24;
  *(void *)(v0 + 448) = v21;
  uint64_t v19 = sub_1005AA338;
  uint64_t v20 = v24;
  return _swift_task_switch(v19, v20, v21);
}

uint64_t sub_1005AACD8()
{
  (*(void (**)(void, void))(v0[44] + 8))(v0[46], v0[43]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1005AADBC()
{
  uint64_t v1 = type metadata accessor for Tips.Status();
  char v2 = *(void **)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v40 - v8;
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v40 - v12;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v40 - v16;
  unint64_t v46 = &type metadata for CRLFeatureFlags;
  unint64_t v18 = sub_1005396A8();
  unint64_t v47 = v18;
  v45[0] = 0;
  char v19 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v45);
  uint64_t result = 0;
  if (v19)
  {
    unint64_t v46 = &type metadata for CRLFeatureFlags;
    unint64_t v47 = v18;
    v45[0] = 17;
    char v21 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v45);
    if ((v21 & 1) == 0) {
      return 0;
    }
    uint64_t v43 = v0;
    sub_1005C75A4();
    Tip.status.getter();
    char v41 = (void (*)(char *, char *, uint64_t))v2[2];
    v41(v13, v17, v1);
    unsigned int v40 = (uint64_t (*)(char *, uint64_t))v2[11];
    int v22 = v40(v13, v1);
    int v42 = enum case for Tips.Status.invalidated(_:);
    uint64_t v23 = (void (*)(char *, uint64_t))v2[1];
    v23(v13, v1);
    v23(v17, v1);
    if (v22 == v42)
    {
      sub_1005C7550();
      Tip.status.getter();
      v41(v5, v9, v1);
      int v24 = v40(v5, v1);
      v23(v5, v1);
      v23(v9, v1);
      if (v24 == v22) {
        return 0;
      }
      unint64_t v34 = *(char **)(*(void *)(*(void *)(v43
                                             + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                     + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
      uint64_t v35 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
      uint64_t v36 = *(double **)&v34[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
      uint64_t v37 = v34;
      if (!v36)
      {
        sub_100846AB0();
        uint64_t v36 = *(double **)&v34[v35];
      }
      if (v36) {
        unint64_t v38 = (unint64_t)v36;
      }
      else {
        unint64_t v38 = (unint64_t)_swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRetain();

      if (v38 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v39 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (qword_10166F968 != -1) {
        swift_once();
      }
      BOOL v31 = v39 > 0;
      uint64_t v32 = sub_1005057FC(&qword_10169FA10);
      unint64_t v33 = qword_10171B9F8;
    }
    else
    {
      uint64_t v25 = *(char **)(*(void *)(*(void *)(v43
                                             + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                     + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
      uint64_t v26 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
      uint64_t v27 = *(double **)&v25[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
      char v28 = v25;
      if (!v27)
      {
        sub_100846AB0();
        uint64_t v27 = *(double **)&v25[v26];
      }
      if (v27) {
        unint64_t v29 = (unint64_t)v27;
      }
      else {
        unint64_t v29 = (unint64_t)_swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRetain();

      if (v29 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (qword_10166F018 != -1) {
        swift_once();
      }
      BOOL v31 = v30 > 0;
      uint64_t v32 = sub_1005057FC(&qword_10169FA10);
      unint64_t v33 = qword_10171A740;
    }
    sub_100556B74(v32, (uint64_t)v33);
    BOOL v44 = v31;
    swift_beginAccess();
    Tips.Parameter.wrappedValue.setter();
    swift_endAccess();
    return 1;
  }
  return result;
}

uint64_t sub_1005AB2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[14] = a4;
  sub_1005057FC(&qword_1016746C8);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Tips.Status();
  v4[17] = v5;
  v4[18] = *(void *)(v5 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  uint64_t v6 = sub_1005057FC(&qword_1016746D0);
  v4[22] = v6;
  v4[23] = *(void *)(v6 - 8);
  unsigned char v4[24] = swift_task_alloc();
  uint64_t v7 = sub_1005057FC(&qword_1016746D8);
  v4[25] = v7;
  v4[26] = *(void *)(v7 - 8);
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  uint64_t v8 = sub_1005057FC(&qword_1016746E0);
  v4[29] = v8;
  v4[30] = *(void *)(v8 - 8);
  v4[31] = swift_task_alloc();
  uint64_t v9 = sub_1005057FC(&qword_1016746E8);
  v4[32] = v9;
  v4[33] = *(void *)(v9 - 8);
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  v4[36] = type metadata accessor for MainActor();
  v4[37] = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[38] = v11;
  v4[39] = v10;
  return _swift_task_switch(sub_1005AB59C, v11, v10);
}

uint64_t sub_1005AB59C()
{
  uint64_t v2 = v0[30];
  uint64_t v1 = v0[31];
  uint64_t v3 = v0[29];
  v0[40] = sub_1005C75A4();
  Tip.shouldDisplayUpdates.getter();
  AsyncMapSequence.base.getter();
  sub_100523288(&qword_1016746F0, &qword_1016746D0);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  AsyncMapSequence.Iterator.init(_:transform:)();
  v0[41] = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController;
  uint64_t v4 = static MainActor.shared.getter();
  v0[42] = v4;
  if (v4)
  {
    swift_getObjectType();
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  v0[43] = v5;
  v0[44] = v7;
  return _swift_task_switch(sub_1005AB734, v5, v7);
}

uint64_t sub_1005AB734()
{
  uint64_t v1 = v0[42];
  v0[45] = AsyncMapSequence.Iterator.baseIterator.modify();
  sub_100523288(&qword_1016746F8, &qword_1016746D8);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[46] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1005AB830;
  uint64_t v3 = v0[16];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v3, v1, &protocol witness table for MainActor);
}

uint64_t sub_1005AB830()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 344);
    uint64_t v4 = *(void *)(v2 + 352);
    uint64_t v5 = sub_1005ABB60;
  }
  else
  {
    (*(void (**)(void))(v2 + 360))();
    uint64_t v3 = *(void *)(v2 + 344);
    uint64_t v4 = *(void *)(v2 + 352);
    uint64_t v5 = sub_1005AB958;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1005AB958()
{
  uint64_t v1 = *((void *)v0 + 17);
  uint64_t v2 = *((void *)v0 + 18);
  uint64_t v3 = *((void *)v0 + 16);
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  *((void *)v0 + 47) = v4;
  *((void *)v0 + 48) = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v3, 1, v1) == 1)
  {
    sub_100522F00(v3, &qword_1016746C8);
    swift_release();
    uint64_t v5 = *((void *)v0 + 38);
    uint64_t v6 = *((void *)v0 + 39);
    return _swift_task_switch(sub_1005ABF20, v5, v6);
  }
  else
  {
    uint64_t v8 = *((void *)v0 + 34);
    uint64_t v7 = *((void *)v0 + 35);
    uint64_t v9 = *((void *)v0 + 32);
    uint64_t v10 = *((void *)v0 + 33);
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(*((void *)v0 + 21), v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v7, v9);
    uint64_t v11 = (int *)AsyncMapSequence.Iterator.transform.getter();
    *((void *)v0 + 49) = v12;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    uint64_t v16 = (uint64_t (*)(char *, uint64_t))((char *)v11 + *v11);
    uint64_t v13 = (void *)swift_task_alloc();
    *((void *)v0 + 50) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1005ABB78;
    uint64_t v14 = *((void *)v0 + 21);
    return v16(v0 + 429, v14);
  }
}

uint64_t sub_1005ABB60()
{
  return (*(uint64_t (**)(void))(v0 + 360))();
}

uint64_t sub_1005ABB78()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 168);
  uint64_t v3 = *(void *)(*v0 + 144);
  uint64_t v4 = *(void *)(*v0 + 136);
  swift_task_dealloc();
  swift_release();
  *(unsigned char *)(v1 + 430) = *(unsigned char *)(v1 + 429);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 352);
  uint64_t v6 = *(void *)(v1 + 344);
  return _swift_task_switch(sub_1005ABD24, v6, v5);
}

uint64_t sub_1005ABD24()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 312);
  return _swift_task_switch(sub_1005ABD88, v1, v2);
}

uint64_t sub_1005ABD88()
{
  if (*(unsigned char *)(v0 + 430))
  {
    sub_100E3B638();
  }
  else
  {
    *(void *)(v0 + 40) = &type metadata for CRLFeatureFlags;
    unint64_t v1 = sub_1005396A8();
    *(unsigned char *)(v0 + 16) = 0;
    *(void *)(v0 + 48) = v1;
    char v2 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
    if (v2)
    {
      id v3 = [*(id *)(v0 + 112) presentedViewController];
      if (v3)
      {
        uint64_t v4 = v3;
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v6 = (void *)Strong;
          sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
          id v7 = v4;
          char v8 = static NSObject.== infix(_:_:)();

          if (v8)
          {
            [v7 dismissViewControllerAnimated:1 completion:0];
            sub_100E5DCEC(1);
          }
        }
        else
        {
        }
      }
    }
  }
  uint64_t v9 = static MainActor.shared.getter();
  *(void *)(v0 + 336) = v9;
  if (v9)
  {
    swift_getObjectType();
    uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v12 = v11;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v12 = 0;
  }
  *(void *)(v0 + 344) = v10;
  *(void *)(v0 + 352) = v12;
  return _swift_task_switch(sub_1005AB734, v10, v12);
}

uint64_t sub_1005ABF20()
{
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 176);
  (*(void (**)(void, void))(*(void *)(v0 + 264) + 8))(*(void *)(v0 + 280), *(void *)(v0 + 256));
  Tip.statusUpdates.getter();
  AsyncStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(_DWORD *)(v0 + 424) = enum case for Tips.Status.invalidated(_:);
  uint64_t v4 = static MainActor.shared.getter();
  *(void *)(v0 + 408) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 416) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1005AC060;
  uint64_t v6 = *(void *)(v0 + 200);
  uint64_t v7 = *(void *)(v0 + 120);
  return AsyncStream.Iterator.next(isolation:)(v7, v4, &protocol witness table for MainActor, v6);
}

uint64_t sub_1005AC060()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 312);
  uint64_t v3 = *(void *)(v1 + 304);
  return _swift_task_switch(sub_1005AC1A4, v3, v2);
}

uint64_t sub_1005AC1A4()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 120);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 376))(v2, 1, v1) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 208) + 8))(*(void *)(v0 + 216), *(void *)(v0 + 200));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    int v5 = *(_DWORD *)(v0 + 424);
    uint64_t v7 = *(void *)(v0 + 152);
    uint64_t v6 = *(void *)(v0 + 160);
    uint64_t v8 = *(void *)(v0 + 144);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v2, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v6, v1);
    int v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 88))(v7, v1);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v10(v7, v1);
    if (v9 == v5)
    {
      if (qword_10166FC58 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_1005057FC(&qword_10169FA10);
      sub_100556B74(v11, (uint64_t)qword_10171BE48);
      *(unsigned char *)(v0 + 428) = 1;
      swift_beginAccess();
      Tips.Parameter.wrappedValue.setter();
      swift_endAccess();
    }
    v10(*(void *)(v0 + 160), *(void *)(v0 + 136));
    uint64_t v12 = static MainActor.shared.getter();
    *(void *)(v0 + 408) = v12;
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 416) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1005AC060;
    uint64_t v14 = *(void *)(v0 + 200);
    uint64_t v15 = *(void *)(v0 + 120);
    return AsyncStream.Iterator.next(isolation:)(v15, v12, &protocol witness table for MainActor, v14);
  }
}

uint64_t sub_1005AC4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[14] = a4;
  sub_1005057FC(&qword_1016746C8);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Tips.Status();
  v4[17] = v5;
  v4[18] = *(void *)(v5 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  uint64_t v6 = sub_1005057FC(&qword_1016746D0);
  v4[22] = v6;
  v4[23] = *(void *)(v6 - 8);
  unsigned char v4[24] = swift_task_alloc();
  uint64_t v7 = sub_1005057FC(&qword_1016746D8);
  v4[25] = v7;
  v4[26] = *(void *)(v7 - 8);
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  uint64_t v8 = sub_1005057FC(&qword_1016746E0);
  v4[29] = v8;
  v4[30] = *(void *)(v8 - 8);
  v4[31] = swift_task_alloc();
  uint64_t v9 = sub_1005057FC(&qword_1016746E8);
  v4[32] = v9;
  v4[33] = *(void *)(v9 - 8);
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  v4[36] = type metadata accessor for MainActor();
  v4[37] = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[38] = v11;
  v4[39] = v10;
  return _swift_task_switch(sub_1005AC7A4, v11, v10);
}

uint64_t sub_1005AC7A4()
{
  uint64_t v2 = v0[30];
  uint64_t v1 = v0[31];
  uint64_t v3 = v0[29];
  v0[40] = sub_1005C7550();
  Tip.shouldDisplayUpdates.getter();
  AsyncMapSequence.base.getter();
  sub_100523288(&qword_1016746F0, &qword_1016746D0);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  AsyncMapSequence.Iterator.init(_:transform:)();
  v0[41] = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController;
  uint64_t v4 = static MainActor.shared.getter();
  v0[42] = v4;
  if (v4)
  {
    swift_getObjectType();
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  v0[43] = v5;
  v0[44] = v7;
  return _swift_task_switch(sub_1005AC93C, v5, v7);
}

uint64_t sub_1005AC93C()
{
  uint64_t v1 = v0[42];
  v0[45] = AsyncMapSequence.Iterator.baseIterator.modify();
  sub_100523288(&qword_1016746F8, &qword_1016746D8);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[46] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1005ACA38;
  uint64_t v3 = v0[16];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v3, v1, &protocol witness table for MainActor);
}

uint64_t sub_1005ACA38()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 344);
    uint64_t v4 = *(void *)(v2 + 352);
    uint64_t v5 = sub_1005C7E88;
  }
  else
  {
    (*(void (**)(void))(v2 + 360))();
    uint64_t v3 = *(void *)(v2 + 344);
    uint64_t v4 = *(void *)(v2 + 352);
    uint64_t v5 = sub_1005ACB60;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1005ACB60()
{
  uint64_t v1 = *((void *)v0 + 17);
  uint64_t v2 = *((void *)v0 + 18);
  uint64_t v3 = *((void *)v0 + 16);
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  *((void *)v0 + 47) = v4;
  *((void *)v0 + 48) = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v3, 1, v1) == 1)
  {
    sub_100522F00(v3, &qword_1016746C8);
    swift_release();
    uint64_t v5 = *((void *)v0 + 38);
    uint64_t v6 = *((void *)v0 + 39);
    return _swift_task_switch(sub_1005AD110, v5, v6);
  }
  else
  {
    uint64_t v8 = *((void *)v0 + 34);
    uint64_t v7 = *((void *)v0 + 35);
    uint64_t v9 = *((void *)v0 + 32);
    uint64_t v10 = *((void *)v0 + 33);
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(*((void *)v0 + 21), v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v7, v9);
    uint64_t v11 = (int *)AsyncMapSequence.Iterator.transform.getter();
    *((void *)v0 + 49) = v12;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    uint64_t v16 = (uint64_t (*)(char *, uint64_t))((char *)v11 + *v11);
    uint64_t v13 = (void *)swift_task_alloc();
    *((void *)v0 + 50) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1005ACD68;
    uint64_t v14 = *((void *)v0 + 21);
    return v16(v0 + 429, v14);
  }
}

uint64_t sub_1005ACD68()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 168);
  uint64_t v3 = *(void *)(*v0 + 144);
  uint64_t v4 = *(void *)(*v0 + 136);
  swift_task_dealloc();
  swift_release();
  *(unsigned char *)(v1 + 430) = *(unsigned char *)(v1 + 429);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 352);
  uint64_t v6 = *(void *)(v1 + 344);
  return _swift_task_switch(sub_1005ACF14, v6, v5);
}

uint64_t sub_1005ACF14()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 312);
  return _swift_task_switch(sub_1005ACF78, v1, v2);
}

uint64_t sub_1005ACF78()
{
  if (*(unsigned char *)(v0 + 430))
  {
    sub_100E3B638();
  }
  else
  {
    *(void *)(v0 + 40) = &type metadata for CRLFeatureFlags;
    unint64_t v1 = sub_1005396A8();
    *(unsigned char *)(v0 + 16) = 0;
    *(void *)(v0 + 48) = v1;
    char v2 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
    if (v2)
    {
      id v3 = [*(id *)(v0 + 112) presentedViewController];
      if (v3)
      {
        uint64_t v4 = v3;
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v6 = (void *)Strong;
          sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
          id v7 = v4;
          char v8 = static NSObject.== infix(_:_:)();

          if (v8)
          {
            [v7 dismissViewControllerAnimated:1 completion:0];
            sub_100E5DCEC(1);
          }
        }
        else
        {
        }
      }
    }
  }
  uint64_t v9 = static MainActor.shared.getter();
  *(void *)(v0 + 336) = v9;
  if (v9)
  {
    swift_getObjectType();
    uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v12 = v11;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v12 = 0;
  }
  *(void *)(v0 + 344) = v10;
  *(void *)(v0 + 352) = v12;
  return _swift_task_switch(sub_1005AC93C, v10, v12);
}

uint64_t sub_1005AD110()
{
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 176);
  (*(void (**)(void, void))(*(void *)(v0 + 264) + 8))(*(void *)(v0 + 280), *(void *)(v0 + 256));
  Tip.statusUpdates.getter();
  AsyncStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(_DWORD *)(v0 + 424) = enum case for Tips.Status.invalidated(_:);
  uint64_t v4 = static MainActor.shared.getter();
  *(void *)(v0 + 408) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 416) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1005AD250;
  uint64_t v6 = *(void *)(v0 + 200);
  uint64_t v7 = *(void *)(v0 + 120);
  return AsyncStream.Iterator.next(isolation:)(v7, v4, &protocol witness table for MainActor, v6);
}

uint64_t sub_1005AD250()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 312);
  uint64_t v3 = *(void *)(v1 + 304);
  return _swift_task_switch(sub_1005AD394, v3, v2);
}

uint64_t sub_1005AD394()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 120);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 376))(v2, 1, v1) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 208) + 8))(*(void *)(v0 + 216), *(void *)(v0 + 200));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    int v5 = *(_DWORD *)(v0 + 424);
    uint64_t v7 = *(void *)(v0 + 152);
    uint64_t v6 = *(void *)(v0 + 160);
    uint64_t v8 = *(void *)(v0 + 144);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v2, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v6, v1);
    int v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 88))(v7, v1);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v10(v7, v1);
    if (v9 == v5)
    {
      if (qword_10166FC58 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_1005057FC(&qword_10169FA10);
      sub_100556B74(v11, (uint64_t)qword_10171BE48);
      *(unsigned char *)(v0 + 428) = 1;
      swift_beginAccess();
      Tips.Parameter.wrappedValue.setter();
      swift_endAccess();
    }
    v10(*(void *)(v0 + 160), *(void *)(v0 + 136));
    uint64_t v12 = static MainActor.shared.getter();
    *(void *)(v0 + 408) = v12;
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 416) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1005AD250;
    uint64_t v14 = *(void *)(v0 + 200);
    uint64_t v15 = *(void *)(v0 + 120);
    return AsyncStream.Iterator.next(isolation:)(v15, v12, &protocol witness table for MainActor, v14);
  }
}

uint64_t sub_1005AD6A0()
{
  uint64_t v1 = type metadata accessor for Tips.Status();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  int v5 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6, v7);
  int v9 = &v26[-v8];
  unint64_t v29 = &type metadata for CRLFeatureFlags;
  unint64_t v30 = sub_1005396A8();
  v28[0] = 18;
  char v10 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v28);
  if ((v10 & 1) == 0) {
    return 0;
  }
  sub_1005C75F8();
  Tip.status.getter();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v9, v1);
  int v11 = (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 88))(v5, v1);
  int v12 = enum case for Tips.Status.invalidated(_:);
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t))(v2 + 8);
  v13(v5, v1);
  v13(v9, v1);
  if (v11 == v12) {
    return 0;
  }
  uint64_t v15 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);
  uint64_t v16 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  uint64_t v17 = *(void *)(*(void *)(*(void *)(v15 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                              + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState)
                  + 16);
  if (qword_10166FC48 != -1) {
    swift_once();
  }
  BOOL v18 = v17 != 0;
  uint64_t v19 = sub_1005057FC(&qword_10169FA10);
  sub_100556B74(v19, (uint64_t)qword_10171BE18);
  BOOL v27 = v18;
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  uint64_t v20 = *(char **)(*(void *)(v15 + v16) + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  uint64_t v21 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  int v22 = *(double **)&v20[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
  uint64_t v23 = v20;
  if (!v22)
  {
    sub_100846AB0();
    int v22 = *(double **)&v20[v21];
  }
  if (v22) {
    unint64_t v24 = (unint64_t)v22;
  }
  else {
    unint64_t v24 = (unint64_t)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();

  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (qword_10166FC50 != -1) {
    swift_once();
  }
  sub_100556B74(v19, (uint64_t)qword_10171BE30);
  BOOL v27 = v25 > 0;
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  return 1;
}

uint64_t sub_1005ADA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[16] = a4;
  sub_1005057FC(&qword_1016746C8);
  v4[17] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Tips.Status();
  v4[18] = v5;
  v4[19] = *(void *)(v5 - 8);
  v4[20] = swift_task_alloc();
  v4[21] = sub_1005057FC(&qword_1016746D0);
  v4[22] = swift_task_alloc();
  v4[23] = sub_1005057FC(&qword_1016746D8);
  unsigned char v4[24] = swift_task_alloc();
  uint64_t v6 = sub_1005057FC(&qword_1016746E0);
  v4[25] = v6;
  v4[26] = *(void *)(v6 - 8);
  v4[27] = swift_task_alloc();
  uint64_t v7 = sub_1005057FC(&qword_1016746E8);
  v4[28] = v7;
  v4[29] = *(void *)(v7 - 8);
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  v4[32] = type metadata accessor for MainActor();
  v4[33] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[34] = v9;
  v4[35] = v8;
  return _swift_task_switch(sub_1005ADC6C, v9, v8);
}

uint64_t sub_1005ADC6C()
{
  uint64_t v2 = v0[26];
  uint64_t v1 = v0[27];
  uint64_t v3 = v0[25];
  sub_1005C75F8();
  Tip.shouldDisplayUpdates.getter();
  AsyncMapSequence.base.getter();
  sub_100523288(&qword_1016746F0, &qword_1016746D0);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  AsyncMapSequence.Iterator.init(_:transform:)();
  v0[36] = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController;
  uint64_t v4 = static MainActor.shared.getter();
  v0[37] = v4;
  if (v4)
  {
    swift_getObjectType();
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  v0[38] = v5;
  v0[39] = v7;
  return _swift_task_switch(sub_1005ADDFC, v5, v7);
}

uint64_t sub_1005ADDFC()
{
  uint64_t v1 = v0[37];
  v0[40] = AsyncMapSequence.Iterator.baseIterator.modify();
  sub_100523288(&qword_1016746F8, &qword_1016746D8);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[41] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1005ADEF8;
  uint64_t v3 = v0[17];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v3, v1, &protocol witness table for MainActor);
}

uint64_t sub_1005ADEF8()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 304);
    uint64_t v4 = *(void *)(v2 + 312);
    uint64_t v5 = sub_1005AE21C;
  }
  else
  {
    (*(void (**)(void))(v2 + 320))();
    uint64_t v3 = *(void *)(v2 + 304);
    uint64_t v4 = *(void *)(v2 + 312);
    uint64_t v5 = sub_1005AE020;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1005AE020()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[17];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100522F00(v3, &qword_1016746C8);
    swift_release();
    uint64_t v4 = v0[34];
    uint64_t v5 = v0[35];
    return _swift_task_switch(sub_1005AE61C, v4, v5);
  }
  else
  {
    uint64_t v7 = v0[30];
    uint64_t v6 = v0[31];
    uint64_t v8 = v0[28];
    uint64_t v9 = v0[29];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[20], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    char v10 = (int *)AsyncMapSequence.Iterator.transform.getter();
    v0[42] = v11;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    uint64_t v15 = (int *)((char *)v10 + *v10);
    int v12 = (void *)swift_task_alloc();
    v0[43] = v12;
    *int v12 = v0;
    v12[1] = sub_1005AE234;
    uint64_t v13 = v0[20];
    return ((uint64_t (*)(void *, uint64_t))v15)(v0 + 44, v13);
  }
}

uint64_t sub_1005AE21C()
{
  return (*(uint64_t (**)(void))(v0 + 320))();
}

uint64_t sub_1005AE234()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 160);
  uint64_t v3 = *(void *)(*v0 + 152);
  uint64_t v4 = *(void *)(*v0 + 144);
  swift_task_dealloc();
  swift_release();
  *(unsigned char *)(v1 + 353) = *(unsigned char *)(v1 + 352);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 312);
  uint64_t v6 = *(void *)(v1 + 304);
  return _swift_task_switch(sub_1005AE3E0, v6, v5);
}

uint64_t sub_1005AE3E0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 272);
  uint64_t v2 = *(void *)(v0 + 280);
  return _swift_task_switch(sub_1005AE444, v1, v2);
}

uint64_t sub_1005AE444()
{
  if (*(unsigned char *)(v0 + 353))
  {
    *(void *)(v0 + 80) = &type metadata for CRLFeatureFlags;
    unint64_t v1 = sub_1005396A8();
    *(unsigned char *)(v0 + 56) = 18;
    *(void *)(v0 + 88) = v1;
    char v2 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 56);
    if ((v2 & 1) == 0) {
      goto LABEL_10;
    }
    id v3 = sub_100E3C90C();
    sub_1005C0484((uint64_t)v3, 0, 0);
  }
  else
  {
    *(void *)(v0 + 40) = &type metadata for CRLFeatureFlags;
    unint64_t v4 = sub_1005396A8();
    *(unsigned char *)(v0 + 16) = 0;
    *(void *)(v0 + 48) = v4;
    char v5 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
    if ((v5 & 1) == 0) {
      goto LABEL_10;
    }
    id v6 = [*(id *)(v0 + 128) presentedViewController];
    if (!v6) {
      goto LABEL_10;
    }
    id v3 = v6;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v8 = (void *)Strong;
      sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
      id v3 = v3;
      char v9 = static NSObject.== infix(_:_:)();

      if (v9)
      {
        [v3 dismissViewControllerAnimated:1 completion:0];
        sub_100E5DCEC(1);
      }
    }
  }

LABEL_10:
  uint64_t v10 = static MainActor.shared.getter();
  *(void *)(v0 + 296) = v10;
  if (v10)
  {
    swift_getObjectType();
    uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v13 = v12;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v13 = 0;
  }
  *(void *)(v0 + 304) = v11;
  *(void *)(v0 + 312) = v13;
  return _swift_task_switch(sub_1005ADDFC, v11, v13);
}

uint64_t sub_1005AE61C()
{
  (*(void (**)(void, void))(v0[29] + 8))(v0[31], v0[28]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1005AE700()
{
  uint64_t v1 = type metadata accessor for Tips.Status();
  char v2 = *(void **)(v1 - 8);
  __chkstk_darwin(v1, v3);
  char v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  char v9 = (char *)v28 - v8;
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)v28 - v12;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)v28 - v16;
  unint64_t v33 = &type metadata for CRLFeatureFlags;
  unint64_t v18 = sub_1005396A8();
  unint64_t v34 = v18;
  v32[0] = 0;
  char v19 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v32);
  uint64_t result = 0;
  if (v19)
  {
    unint64_t v33 = &type metadata for CRLFeatureFlags;
    unint64_t v34 = v18;
    v32[0] = 20;
    char v21 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v32);
    if ((v21 & 1) == 0) {
      return 0;
    }
    unint64_t v30 = v5;
    v28[0] = v0;
    v28[1] = sub_1005C7700();
    Tip.status.getter();
    BOOL v31 = (void (*)(char *, char *, uint64_t))v2[2];
    v31(v13, v17, v1);
    unint64_t v29 = (uint64_t (*)(char *, uint64_t))v2[11];
    int v22 = v29(v13, v1);
    int v23 = enum case for Tips.Status.invalidated(_:);
    unint64_t v24 = (void (*)(char *, uint64_t))v2[1];
    v24(v13, v1);
    uint64_t v25 = v24;
    v24(v17, v1);
    if (v22 == v23)
    {
      sub_1005C76AC();
      Tip.status.getter();
      uint64_t v26 = v30;
      v31(v30, v9, v1);
      int v27 = v29(v26, v1);
      v25(v26, v1);
      v25(v9, v1);
      if (v27 == v22) {
        return 0;
      }
      if ((Tip.shouldDisplay.getter() & 1) == 0) {
        return 1;
      }
    }
    else if ((Tip.shouldDisplay.getter() & 1) == 0)
    {
      return 1;
    }
    sub_100E3BB38();
    return 1;
  }
  return result;
}

uint64_t sub_1005AE9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[21] = a4;
  sub_1005057FC(&qword_1016746C8);
  v4[22] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Tips.Status();
  v4[23] = v5;
  unsigned char v4[24] = *(void *)(v5 - 8);
  v4[25] = swift_task_alloc();
  v4[26] = sub_1005057FC(&qword_1016746D0);
  v4[27] = swift_task_alloc();
  v4[28] = sub_1005057FC(&qword_1016746D8);
  v4[29] = swift_task_alloc();
  uint64_t v6 = sub_1005057FC(&qword_1016746E0);
  v4[30] = v6;
  v4[31] = *(void *)(v6 - 8);
  v4[32] = swift_task_alloc();
  uint64_t v7 = sub_1005057FC(&qword_1016746E8);
  v4[33] = v7;
  v4[34] = *(void *)(v7 - 8);
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  v4[37] = type metadata accessor for MainActor();
  v4[38] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[39] = v9;
  v4[40] = v8;
  return _swift_task_switch(sub_1005AEC4C, v9, v8);
}

uint64_t sub_1005AEC4C()
{
  uint64_t v2 = v0[31];
  uint64_t v1 = v0[32];
  uint64_t v3 = v0[30];
  v0[41] = sub_1005C7700();
  Tip.shouldDisplayUpdates.getter();
  AsyncMapSequence.base.getter();
  sub_100523288(&qword_1016746F0, &qword_1016746D0);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  AsyncMapSequence.Iterator.init(_:transform:)();
  v0[42] = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController;
  uint64_t v4 = static MainActor.shared.getter();
  v0[43] = v4;
  if (v4)
  {
    swift_getObjectType();
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  v0[44] = v5;
  v0[45] = v7;
  return _swift_task_switch(sub_1005AEDE0, v5, v7);
}

uint64_t sub_1005AEDE0()
{
  uint64_t v1 = v0[43];
  v0[46] = AsyncMapSequence.Iterator.baseIterator.modify();
  sub_100523288(&qword_1016746F8, &qword_1016746D8);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[47] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1005AEEDC;
  uint64_t v3 = v0[22];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v3, v1, &protocol witness table for MainActor);
}

uint64_t sub_1005AEEDC()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 352);
    uint64_t v4 = *(void *)(v2 + 360);
    uint64_t v5 = sub_1005AF200;
  }
  else
  {
    (*(void (**)(void))(v2 + 368))();
    uint64_t v3 = *(void *)(v2 + 352);
    uint64_t v4 = *(void *)(v2 + 360);
    uint64_t v5 = sub_1005AF004;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1005AF004()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[22];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100522F00(v3, &qword_1016746C8);
    swift_release();
    uint64_t v4 = v0[39];
    uint64_t v5 = v0[40];
    return _swift_task_switch(sub_1005AF6F8, v4, v5);
  }
  else
  {
    uint64_t v7 = v0[35];
    uint64_t v6 = v0[36];
    uint64_t v8 = v0[33];
    uint64_t v9 = v0[34];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[25], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    uint64_t v10 = (int *)AsyncMapSequence.Iterator.transform.getter();
    v0[48] = v11;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    uint64_t v15 = (int *)((char *)v10 + *v10);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[49] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1005AF218;
    uint64_t v13 = v0[25];
    return ((uint64_t (*)(void *, uint64_t))v15)(v0 + 50, v13);
  }
}

uint64_t sub_1005AF200()
{
  return (*(uint64_t (**)(void))(v0 + 368))();
}

uint64_t sub_1005AF218()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 200);
  uint64_t v3 = *(void *)(*v0 + 192);
  uint64_t v4 = *(void *)(*v0 + 184);
  swift_task_dealloc();
  swift_release();
  *(unsigned char *)(v1 + 401) = *(unsigned char *)(v1 + 400);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 360);
  uint64_t v6 = *(void *)(v1 + 352);
  return _swift_task_switch(sub_1005AF3C4, v6, v5);
}

uint64_t sub_1005AF3C4()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 312);
  uint64_t v2 = *(void *)(v0 + 320);
  return _swift_task_switch(sub_1005AF428, v1, v2);
}

uint64_t sub_1005AF428()
{
  if (*(unsigned char *)(v0 + 401))
  {
    *(void *)(v0 + 80) = &type metadata for CRLFeatureFlags;
    unint64_t v1 = sub_1005396A8();
    *(unsigned char *)(v0 + 56) = 20;
    *(void *)(v0 + 88) = v1;
    char v2 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 56);
    if ((v2 & 1) == 0) {
      goto LABEL_15;
    }
    id v3 = [*(id *)(v0 + 168) traitCollection];
    if ([v3 horizontalSizeClass] == (id)1)
    {
    }
    else
    {
      unsigned int v12 = [self crl_phoneUI];

      if (!v12)
      {
        id v13 = sub_100E3C8EC();
        uint64_t v14 = &type metadata for CRLTipStencilLibraryFull;
        *(void *)(v0 + 120) = &type metadata for CRLTipStencilLibraryFull;
        unint64_t v16 = *(void *)(v0 + 328);
        uint64_t v15 = sub_100E5DC6C;
        goto LABEL_14;
      }
    }
    id v13 = sub_100E3C86C();
    uint64_t v14 = &type metadata for CRLTipStencilLibraryCompact;
    *(void *)(v0 + 120) = &type metadata for CRLTipStencilLibraryCompact;
    uint64_t v15 = sub_100E5DC48;
    unint64_t v16 = sub_1005C76AC();
LABEL_14:
    *(void *)(v0 + 128) = v16;
    uint64_t v17 = sub_10050F848((void *)(v0 + 96), (uint64_t)v14);
    sub_100E5BC48((uint64_t)v17, (uint64_t)v13, (uint64_t)v15, 0, v14, v16);

    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 96);
    goto LABEL_15;
  }
  *(void *)(v0 + 40) = &type metadata for CRLFeatureFlags;
  unint64_t v4 = sub_1005396A8();
  *(unsigned char *)(v0 + 16) = 0;
  *(void *)(v0 + 48) = v4;
  char v5 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  if (v5)
  {
    id v6 = [*(id *)(v0 + 168) presentedViewController];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v9 = (void *)Strong;
        sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
        id v10 = v7;
        char v11 = static NSObject.== infix(_:_:)();

        if (v11)
        {
          [v10 dismissViewControllerAnimated:1 completion:0];
          sub_100E5DCEC(1);
        }
      }
      else
      {
      }
    }
  }
LABEL_15:
  uint64_t v18 = static MainActor.shared.getter();
  *(void *)(v0 + 344) = v18;
  if (v18)
  {
    swift_getObjectType();
    uint64_t v19 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v21 = v20;
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v21 = 0;
  }
  *(void *)(v0 + 352) = v19;
  *(void *)(v0 + 360) = v21;
  return _swift_task_switch(sub_1005AEDE0, v19, v21);
}

uint64_t sub_1005AF6F8()
{
  (*(void (**)(void, void))(v0[34] + 8))(v0[36], v0[33]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1005AF7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[21] = a4;
  sub_1005057FC(&qword_1016746C8);
  v4[22] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Tips.Status();
  v4[23] = v5;
  unsigned char v4[24] = *(void *)(v5 - 8);
  v4[25] = swift_task_alloc();
  v4[26] = sub_1005057FC(&qword_1016746D0);
  v4[27] = swift_task_alloc();
  v4[28] = sub_1005057FC(&qword_1016746D8);
  v4[29] = swift_task_alloc();
  uint64_t v6 = sub_1005057FC(&qword_1016746E0);
  v4[30] = v6;
  v4[31] = *(void *)(v6 - 8);
  v4[32] = swift_task_alloc();
  uint64_t v7 = sub_1005057FC(&qword_1016746E8);
  v4[33] = v7;
  v4[34] = *(void *)(v7 - 8);
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  v4[37] = type metadata accessor for MainActor();
  v4[38] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[39] = v9;
  v4[40] = v8;
  return _swift_task_switch(sub_1005AFA3C, v9, v8);
}

uint64_t sub_1005AFA3C()
{
  uint64_t v2 = v0[31];
  uint64_t v1 = v0[32];
  uint64_t v3 = v0[30];
  v0[41] = sub_1005C76AC();
  Tip.shouldDisplayUpdates.getter();
  AsyncMapSequence.base.getter();
  sub_100523288(&qword_1016746F0, &qword_1016746D0);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  AsyncMapSequence.Iterator.init(_:transform:)();
  v0[42] = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController;
  uint64_t v4 = static MainActor.shared.getter();
  v0[43] = v4;
  if (v4)
  {
    swift_getObjectType();
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  v0[44] = v5;
  v0[45] = v7;
  return _swift_task_switch(sub_1005AFBD0, v5, v7);
}

uint64_t sub_1005AFBD0()
{
  uint64_t v1 = v0[43];
  v0[46] = AsyncMapSequence.Iterator.baseIterator.modify();
  sub_100523288(&qword_1016746F8, &qword_1016746D8);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[47] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1005AFCCC;
  uint64_t v3 = v0[22];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v3, v1, &protocol witness table for MainActor);
}

uint64_t sub_1005AFCCC()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 352);
    uint64_t v4 = *(void *)(v2 + 360);
    uint64_t v5 = sub_1005C7E84;
  }
  else
  {
    (*(void (**)(void))(v2 + 368))();
    uint64_t v3 = *(void *)(v2 + 352);
    uint64_t v4 = *(void *)(v2 + 360);
    uint64_t v5 = sub_1005AFDF4;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1005AFDF4()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[22];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100522F00(v3, &qword_1016746C8);
    swift_release();
    uint64_t v4 = v0[39];
    uint64_t v5 = v0[40];
    return _swift_task_switch(sub_1005C7E7C, v4, v5);
  }
  else
  {
    uint64_t v7 = v0[35];
    uint64_t v6 = v0[36];
    uint64_t v8 = v0[33];
    uint64_t v9 = v0[34];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[25], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    id v10 = (int *)AsyncMapSequence.Iterator.transform.getter();
    v0[48] = v11;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    uint64_t v15 = (int *)((char *)v10 + *v10);
    unsigned int v12 = (void *)swift_task_alloc();
    v0[49] = v12;
    *unsigned int v12 = v0;
    v12[1] = sub_1005AFFF0;
    uint64_t v13 = v0[25];
    return ((uint64_t (*)(void *, uint64_t))v15)(v0 + 50, v13);
  }
}

uint64_t sub_1005AFFF0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 200);
  uint64_t v3 = *(void *)(*v0 + 192);
  uint64_t v4 = *(void *)(*v0 + 184);
  swift_task_dealloc();
  swift_release();
  *(unsigned char *)(v1 + 401) = *(unsigned char *)(v1 + 400);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 360);
  uint64_t v6 = *(void *)(v1 + 352);
  return _swift_task_switch(sub_1005B019C, v6, v5);
}

uint64_t sub_1005B019C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 312);
  uint64_t v2 = *(void *)(v0 + 320);
  return _swift_task_switch(sub_1005B0200, v1, v2);
}

uint64_t sub_1005B0200()
{
  if (*(unsigned char *)(v0 + 401))
  {
    *(void *)(v0 + 80) = &type metadata for CRLFeatureFlags;
    unint64_t v1 = sub_1005396A8();
    *(unsigned char *)(v0 + 56) = 20;
    *(void *)(v0 + 88) = v1;
    char v2 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 56);
    if ((v2 & 1) == 0) {
      goto LABEL_15;
    }
    id v3 = [*(id *)(v0 + 168) traitCollection];
    if ([v3 horizontalSizeClass] == (id)1)
    {
    }
    else
    {
      unsigned int v12 = [self crl_phoneUI];

      if (!v12)
      {
        id v13 = sub_100E3C8EC();
        uint64_t v14 = &type metadata for CRLTipStencilLibraryFull;
        *(void *)(v0 + 120) = &type metadata for CRLTipStencilLibraryFull;
        uint64_t v16 = sub_100E5DC6C;
        unint64_t v15 = sub_1005C7700();
        goto LABEL_14;
      }
    }
    id v13 = sub_100E3C86C();
    uint64_t v14 = &type metadata for CRLTipStencilLibraryCompact;
    *(void *)(v0 + 120) = &type metadata for CRLTipStencilLibraryCompact;
    unint64_t v15 = *(void *)(v0 + 328);
    uint64_t v16 = sub_100E5DC48;
LABEL_14:
    *(void *)(v0 + 128) = v15;
    uint64_t v17 = sub_10050F848((void *)(v0 + 96), (uint64_t)v14);
    sub_100E5BC48((uint64_t)v17, (uint64_t)v13, (uint64_t)v16, 0, v14, v15);

    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 96);
    goto LABEL_15;
  }
  *(void *)(v0 + 40) = &type metadata for CRLFeatureFlags;
  unint64_t v4 = sub_1005396A8();
  *(unsigned char *)(v0 + 16) = 0;
  *(void *)(v0 + 48) = v4;
  char v5 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  if (v5)
  {
    id v6 = [*(id *)(v0 + 168) presentedViewController];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v9 = (void *)Strong;
        sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
        id v10 = v7;
        char v11 = static NSObject.== infix(_:_:)();

        if (v11)
        {
          [v10 dismissViewControllerAnimated:1 completion:0];
          sub_100E5DCEC(1);
        }
      }
      else
      {
      }
    }
  }
LABEL_15:
  uint64_t v18 = static MainActor.shared.getter();
  *(void *)(v0 + 344) = v18;
  if (v18)
  {
    swift_getObjectType();
    uint64_t v19 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v21 = v20;
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v21 = 0;
  }
  *(void *)(v0 + 352) = v19;
  *(void *)(v0 + 360) = v21;
  return _swift_task_switch(sub_1005AFBD0, v19, v21);
}

id sub_1005B05C0()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s34TextEditingAllowingAlertControllerCMa();
  return [super dealloc];
}

uint64_t _s34TextEditingAllowingAlertControllerCMa()
{
  return self;
}

double *sub_1005B0618()
{
  id v1 = [v0 undoManager];
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  objc_super v2 = v1;
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  if (v3) {
    unint64_t v4 = (void *)v3;
  }
  else {
    unint64_t v4 = v2;
  }
  char v5 = &selRef_canUndo;
  if (v3)
  {
    char v5 = &selRef_canUndoDisregardingDelegates;
    id v6 = &selRef_canRedoDisregardingDelegates;
  }
  else
  {
    id v6 = &selRef_canRedo;
  }
  unsigned int v7 = [v4 *v5];
  [v4 *v6];
  if (v7) {
    uint64_t v8 = 8;
  }
  else {
    uint64_t v8 = 1;
  }
  uint64_t v26 = v8;
  NSString v9 = [v2 undoActionName];
  if (!v9)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  NSString v10 = [v2 redoActionName];
  if (!v10)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  id v11 = [v2 undoMenuTitleForUndoActionName:v9];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = self;
  id v14 = [v13 systemImageNamed:v12];

  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v2;
  id v16 = v2;
  uint64_t v17 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v18 = [v16 redoMenuTitleForUndoActionName:v10];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [v13 systemImageNamed:v19];

  *(void *)(swift_allocObject() + 16) = v16;
  id v21 = v16;
  uint64_t v22 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_10117DF50;
  *(void *)(v23 + 32) = v17;
  *(void *)(v23 + 40) = v22;
  uint64_t v27 = v23;
  specialized Array._endMutation()();
  uint64_t v24 = v27;

  return (double *)v24;
}

void sub_1005B09AC()
{
  id v1 = [v0 undoManager];
  if (v1)
  {
    id v21 = v1;
    id v2 = sub_100E3C82C();
    id v3 = [v2 button];

    self;
    uint64_t v4 = swift_dynamicCastObjCClass();
    if (v4) {
      char v5 = (void *)v4;
    }
    else {
      char v5 = v21;
    }
    id v6 = &selRef_canUndo;
    if (v4)
    {
      id v6 = &selRef_canUndoDisregardingDelegates;
      unsigned int v7 = &selRef_canRedoDisregardingDelegates;
    }
    else
    {
      unsigned int v7 = &selRef_canRedo;
    }
    unsigned int v8 = [v5 *v6];
    unsigned int v9 = [v5 *v7];
    id v10 = sub_100E3C82C();
    [v10 setEnabled:v9 | v8];

    if ((objc_msgSend(self, "crl_phoneUI") & 1) != 0
      || (id v11 = [v0 traitCollection],
          id v12 = [v11 horizontalSizeClass],
          v11,
          v12 == (id)1))
    {
      [v3 setShowsMenuAsPrimaryAction:v8 ^ 1];
      id v3 = v3;
      UIMenuElementSize v13 = (UIMenuElementSize)sub_1005B0618();
      if ((unint64_t)v13 >> 62)
      {
        sub_10050BF48(0, &qword_10167ADE0);
        UIMenuElementSize preferredElementSize = _bridgeCocoaArray<A>(_:)();
      }
      else
      {
        swift_bridgeObjectRetain();
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        sub_10050BF48(0, &qword_10167ADE0);
        UIMenuElementSize preferredElementSize = v13;
      }
      swift_bridgeObjectRelease();
      sub_10050BF48(0, &qword_101673A80);
      v15._countAndFlagsBits = 0;
      v15._object = (void *)0xE000000000000000;
      v23.value.super.Class isa = 0;
      v23.is_nil = 0;
      Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v15, (Swift::String_optional)0, v23, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v20).super.super.isa;
      [v3 setMenu:isa];
    }
    else
    {
      [v3 setShowsMenuAsPrimaryAction:0];
      [v3 setMenu:0];
      uint64_t v17 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController];
      if (v17)
      {
        id v18 = v17;
        sub_1005B0D54();
        sub_10050BF48(0, &qword_1016745E0);
        Class v19 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v18 crl_setActions:v19];
      }
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateUndoBarButtonItemState()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 1901, (uint64_t)"No undo manager", 15, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateUndoBarButtonItemState()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 1901);
  }
}

double *sub_1005B0D54()
{
  id v1 = [v0 undoManager];
  if (v1)
  {
    id v2 = v1;
    NSString v3 = [v1 undoMenuItemTitle];
    if (!v3)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v3 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    uint64_t v4 = self;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v2;
    unint64_t v33 = sub_1005C69A0;
    uint64_t v34 = v5;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v30 = *(void *)"";
    BOOL v31 = sub_1005B1838;
    uint64_t v32 = &unk_101509210;
    id v6 = _Block_copy(&aBlock);
    id v7 = v2;
    swift_release();
    unint64_t v33 = CRLWPShapeLayout.descendersCannotClip.getter;
    uint64_t v34 = 0;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v30 = *(void *)"";
    BOOL v31 = sub_1005B18A4;
    uint64_t v32 = &unk_101509238;
    unsigned int v8 = _Block_copy(&aBlock);
    id v9 = [v4 _actionWithTitle:v3 image:0 style:0 handler:v6 shouldDismissHandler:v8];
    _Block_release(v8);
    _Block_release(v6);

    NSString v10 = [v7 redoMenuItemTitle];
    if (!v10)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v7;
    unint64_t v33 = sub_1005C69B0;
    uint64_t v34 = v11;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v30 = *(void *)"";
    BOOL v31 = sub_1005B1838;
    uint64_t v32 = &unk_101509288;
    id v12 = _Block_copy(&aBlock);
    id v13 = v7;
    swift_release();
    unint64_t v33 = CRLWPShapeLayout.descendersCannotClip.getter;
    uint64_t v34 = 0;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v30 = *(void *)"";
    BOOL v31 = sub_1005B18A4;
    uint64_t v32 = &unk_1015092B0;
    id v14 = _Block_copy(&aBlock);
    id v15 = [v4 _actionWithTitle:v10 image:0 style:0 handler:v12 shouldDismissHandler:v14];
    _Block_release(v14);
    _Block_release(v12);

    id v16 = [self mainBundle];
    NSString v17 = String._bridgeToObjectiveC()();
    NSString v18 = String._bridgeToObjectiveC()();
    id v19 = [v16 localizedStringForKey:v17 value:v18 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unint64_t v33 = sub_1005C69C0;
    uint64_t v34 = v20;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v30 = *(void *)"";
    BOOL v31 = sub_10051CE64;
    uint64_t v32 = &unk_1015092D8;
    uint64_t v22 = _Block_copy(&aBlock);
    swift_release();
    id v23 = [v4 actionWithTitle:v21 style:1 handler:v22];
    _Block_release(v22);
    swift_release();

    if (v9 && v15)
    {
      id v24 = v9;
      id v25 = v15;
      [v24 setEnabled:[v13 canUndo]];
      [v25 setEnabled:[v13 canRedo]];
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_10117FBD0;
      *(void *)(v26 + 32) = v24;
      *(void *)(v26 + 40) = v25;
      *(void *)(v26 + 48) = v23;
      uint64_t aBlock = (void **)v26;
      specialized Array._endMutation()();
      uint64_t v27 = (double *)aBlock;
    }
    else
    {
      uint64_t v27 = _swiftEmptyArrayStorage;
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"newUndoRedoActions()", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 1986, (uint64_t)"Error creating undo/redo action", 31, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"newUndoRedoActions()", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 1986);
    }
  }
  else
  {
    uint64_t v27 = _swiftEmptyArrayStorage;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"newUndoRedoActions()", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 1963, (uint64_t)"No undo manager", 15, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"newUndoRedoActions()", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 1963);
  }
  return v27;
}

uint64_t sub_1005B13C4()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v7);
  id v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
  NSString v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v0;
  aBlock[4] = sub_1005C7BD4;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  id aBlock[3] = &unk_101509990;
  id v12 = _Block_copy(aBlock);
  id v13 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1005C689C((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v16);
}

void sub_1005B16A4()
{
  sub_1005B09AC();
  unsigned __int8 v0 = sub_100E59028();
  id v1 = sub_100E3C94C();
  [v1 setEnabled:v0 & 1];
}

uint64_t sub_1005B171C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v6 = a1;
  _bridgeAnyObjectToAny(_:)();
  uint64_t v7 = swift_unknownObjectRelease();
  a4(v7);

  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v9);
}

void sub_1005B1790()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController);
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController) = 0;

  id v2 = [self sharedApplication];
  [v2 setApplicationSupportsShakeToEdit:1];

  uint64_t v3 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isSuppressingBottomToolTrayForPresentationController;
  if (*(unsigned char *)(v0
                + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isSuppressingBottomToolTrayForPresentationController) == 1)
  {
    uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomToolTray);
    if (v4) {
      [v4 setToolTrayHidden:0 animated:1];
    }
    *(unsigned char *)(v0 + v3) = 0;
  }
}

void sub_1005B1838(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_1005B18A4(uint64_t a1)
{
  id v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  LOBYTE(v1) = v1(v2);
  swift_release();
  return v1 & 1;
}

void sub_1005B18E4()
{
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.crlDefault;
  uint64_t v1 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v0, (uint64_t)&_mh_execute_header, v1, (uint64_t)"Cancelled undo", 14, 2, (uint64_t)_swiftEmptyArrayStorage);

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    sub_1005B1790();
  }
}

void sub_1005B19C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertingCancellableToken;
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertingCancellableToken);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v9 = static MainActor.shared.getter();
  NSString v10 = (void *)swift_allocObject();
  void v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v8;
  sub_100591518((uint64_t)v5, (uint64_t)&unk_101674398, (uint64_t)v10, (uint64_t)&unk_101508980, (uint64_t *)&unk_1016743B0);
  swift_release();
  *(void *)(v1 + v7) = 0;
  swift_release();
  uint64_t v11 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertURLAlert;
  id v12 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertURLAlert);
  if (v12)
  {
    id v13 = *(void **)&v12[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_alert];
    if (v13)
    {
      id v14 = (void *)swift_allocObject();
      v14[3] = 0;
      void v14[4] = 0;
      _OWORD v14[2] = v12;
      aBlock[4] = sub_1005B764C;
      aBlock[5] = v14;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100679958;
      id aBlock[3] = &unk_101508948;
      uint64_t v15 = _Block_copy(aBlock);
      uint64_t v16 = v12;
      id v17 = v13;
      swift_release();
      [v17 dismissViewControllerAnimated:1 completion:v15];
      _Block_release(v15);

      id v12 = *(char **)(v1 + v11);
    }
  }
  *(void *)(v1 + v11) = 0;
}

uint64_t sub_1005B1C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[5] = v6;
  v4[6] = v5;
  return _swift_task_switch(sub_1005B1CB8, v6, v5);
}

uint64_t sub_1005B1CB8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1)
  {
    return _swift_task_switch(sub_1005B1D64, v1, 0);
  }
  else
  {
    swift_release();
    **(unsigned char **)(v0 + 16) = *(void *)(v0 + 24) == 0;
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_1005B1D64()
{
  [*(id *)(v0[3] + 112) cancel];
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  return _swift_task_switch(sub_1005B1DD4, v1, v2);
}

uint64_t sub_1005B1DD4()
{
  swift_release();
  **(unsigned char **)(v0 + 16) = *(void *)(v0 + 24) == 0;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005B1E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 264) = a6;
  *(void *)(v6 + 128) = a4;
  *(void *)(v6 + 136) = a5;
  sub_1005057FC(&qword_101672E90);
  *(void *)(v6 + 144) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for URL();
  *(void *)(v6 + 152) = v7;
  *(void *)(v6 + 160) = *(void *)(v7 - 8);
  *(void *)(v6 + 168) = swift_task_alloc();
  *(void *)(v6 + 176) = type metadata accessor for MainActor();
  *(void *)(v6 + 184) = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 192) = v9;
  *(void *)(v6 + 200) = v8;
  return _swift_task_switch(sub_1005B1F70, v9, v8);
}

uint64_t sub_1005B1F70()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertingCancellableToken;
  if (*(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertingCancellableToken))
  {
    swift_retain();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"didSubmit(url:didChange:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2021, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"didSubmit(url:didChange:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2021);
    swift_release();
  }
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 144);
  swift_unknownObjectWeakInit();
  sub_100522E9C(v6, v5, &qword_101672E90);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v5, 1, v4) == 1)
  {
    uint64_t v7 = *(void *)(v0 + 144);
    swift_release();
    sub_100522F00(v7, &qword_101672E90);
LABEL_8:
    sub_1005B27AC();
    swift_unknownObjectWeakDestroy();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  int v8 = *(unsigned __int8 *)(v0 + 264);
  (*(void (**)(void, void, void))(*(void *)(v0 + 160) + 32))(*(void *)(v0 + 168), *(void *)(v0 + 144), *(void *)(v0 + 152));
  if (v8 != 1 || *(void *)(v1 + v2))
  {
    (*(void (**)(void, void))(*(void *)(v0 + 160) + 8))(*(void *)(v0 + 168), *(void *)(v0 + 152));
    swift_release();
    goto LABEL_8;
  }
  uint64_t v11 = *(void *)(v0 + 160);
  uint64_t v12 = *(void *)(v0 + 168);
  uint64_t v13 = *(void *)(v0 + 152);
  sub_100E3C6E8();
  sub_1005057FC(&qword_1016743E0);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_10117E810;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 16))(v15 + v14, v12, v13);
  uint64_t v16 = sub_1005B2974(v15, 0, 0);
  *(void *)(v0 + 208) = v16;
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  swift_release();
  *(void *)(v1 + v2) = v17;
  swift_retain();
  swift_release();
  *(void *)(v0 + 216) = sub_100E3C6E8();
  *(void *)(v0 + 224) = static MainActor.shared.getter();
  return _swift_task_switch(sub_1005B2414, v17, 0);
}

uint64_t sub_1005B2414()
{
  v0[29] = *(void *)(v0[26] + 112);
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[30] = v2;
  v0[31] = v1;
  return _swift_task_switch(sub_1005B249C, v2, v1);
}

uint64_t sub_1005B249C()
{
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1016743E8 + dword_1016743E8);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v1;
  void *v1 = v0;
  v1[1] = sub_1005B2548;
  uint64_t v2 = *(void *)(v0 + 232);
  return v4(v2);
}

uint64_t sub_1005B2548()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 248);
  uint64_t v3 = *(void *)(v1 + 240);
  return _swift_task_switch(sub_1005B2668, v3, v2);
}

uint64_t sub_1005B2668()
{
  uint64_t v1 = (void *)v0[29];
  swift_release();

  swift_release();
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[25];
  return _swift_task_switch(sub_1005B26F4, v2, v3);
}

uint64_t sub_1005B26F4()
{
  swift_release();
  sub_1005B27AC();
  swift_release();
  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  swift_unknownObjectWeakDestroy();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

char *sub_1005B27AC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertURLAlert);
    uint64_t v3 = v2;

    if (v2)
    {
      uint64_t v4 = *(void **)&v3[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_alert];
      if (v4)
      {
        uint64_t v5 = (void *)swift_allocObject();
        v5[3] = 0;
        void v5[4] = 0;
        v5[2] = v3;
        aBlock[4] = sub_1005C7FEC;
        aBlock[5] = v5;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(void *)"";
        aBlock[2] = sub_100679958;
        id aBlock[3] = &unk_101508BA8;
        uint64_t v6 = _Block_copy(aBlock);
        uint64_t v7 = v3;
        uint64_t v3 = v4;
        swift_release();
        [v3 dismissViewControllerAnimated:1 completion:v6];
        _Block_release(v6);
      }
    }
  }
  swift_beginAccess();
  int v8 = (char *)swift_unknownObjectWeakLoadStrong();
  if (v8)
  {
    uint64_t v9 = *(void **)&v8[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertURLAlert];
    *(void *)&v8[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertURLAlert] = 0;
  }
  swift_beginAccess();
  uint64_t result = (char *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    *(void *)&result[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertingCancellableToken] = 0;

    return (char *)swift_release();
  }
  return result;
}

uint64_t sub_1005B2974(uint64_t a1, id a2, uint64_t a3)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong
    || (int v8 = Strong,
        uint64_t v9 = (char *)[Strong editingCoordinator],
        v8,
        !v9))
  {
    sub_1005C3DDC();
    swift_allocError();
    *uint64_t v15 = 1;
    swift_willThrow();
    return a3;
  }
  id v10 = *(id *)&v9[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory];

  if (!*(void *)(a1 + 16))
  {
    sub_1005C3DDC();
    swift_allocError();
    *uint64_t v16 = 0;
LABEL_14:
    swift_willThrow();

    return a3;
  }
  if (a2 || (a3 & 1) != 0)
  {
    id v17 = a2;
    swift_bridgeObjectRetain();
LABEL_12:
    id v18 = objc_allocWithZone((Class)CRLMultipleItemImporter);
    type metadata accessor for URL();
    id v19 = v10;
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v21 = [v18 initWithURLs:isa boardItemFactory:v19 importAnimatedGIFsAsImages:0];

    type metadata accessor for CRLBoardItemInsertingCancellable();
    a3 = swift_allocObject();
    id v22 = v21;
    swift_defaultActor_initialize();
    *(void *)(a3 + 112) = v22;
    *(void *)(a3 + 120) = a2;
    *(void *)(a3 + 128) = a1;

    return a3;
  }
  id v11 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  NSString v12 = String._bridgeToObjectiveC()();
  id v25 = 0;
  a2 = [v11 initWithSignature:v12 error:&v25];

  a3 = (uint64_t)v25;
  if (!a2)
  {
    id v23 = v25;
    _convertNSErrorToError(_:)();

    goto LABEL_14;
  }
  id v13 = v25;
  a3 = (uint64_t)a2;
  unint64_t v14 = sub_1005C47B8(a1, (void *)a3);
  if (!v3)
  {
    a1 = (uint64_t)v14;

    goto LABEL_12;
  }

  return a3;
}

uint64_t sub_1005B2C20(uint64_t a1, char a2)
{
  uint64_t v5 = sub_1005057FC(&qword_101672E90);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5 - 8, v8);
  uint64_t v9 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v10 - 8, v11);
  id v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_100522E9C(a1, (uint64_t)v9, &qword_101672E90);
  type metadata accessor for MainActor();
  id v15 = v2;
  uint64_t v16 = static MainActor.shared.getter();
  unint64_t v17 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v18 = v17 + v7;
  id v19 = (void *)swift_allocObject();
  v19[2] = v16;
  v19[3] = &protocol witness table for MainActor;
  v19[4] = v15;
  sub_10051B3EC((uint64_t)v9, (uint64_t)v19 + v17, &qword_101672E90);
  *((unsigned char *)v19 + v18) = a2;
  sub_10059134C((uint64_t)v13, (uint64_t)&unk_1016743C8, (uint64_t)v19);
  return swift_release();
}

void sub_1005B2E34(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4)
  {
    if (qword_10166FAC8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v6 = (void *)static OS_os_log.crlInsertMedia;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    uint64_t v8 = sub_10050BF48(0, &qword_101674418);
    *(void *)(inited + 56) = v8;
    unint64_t v9 = sub_1005C5084();
    *(void *)(inited + 32) = a1;
    *(void *)(inited + 96) = &type metadata for Int;
    *(void *)(inited + 104) = &protocol witness table for Int;
    *(void *)(inited + 64) = v9;
    *(void *)(inited + 72) = v4;
    id v10 = v6;
    id v11 = a1;
    uint64_t v12 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v10, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Photo picker (%p) picked %d result(s).", 38, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v13 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_photoPickerLoadingProgress;
    if (*(void *)(v43 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_photoPickerLoadingProgress))
    {
      uint64_t v14 = (void *)static OS_os_log.crlInsertMedia;
      uint64_t v15 = swift_initStackObject();
      *(_OWORD *)(v15 + 16) = xmmword_10117E810;
      *(void *)(v15 + 56) = v8;
      *(void *)(v15 + 64) = v9;
      *(void *)(v15 + 32) = v11;
      id v16 = v11;
      id v17 = v14;
      uint64_t v18 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v17, (uint64_t)&_mh_execute_header, v18, (uint64_t)"Already loading. Ignoring results from photo picker (%p).", 57, 2, v15);
      swift_setDeallocating();
      swift_arrayDestroy();
    }
    else
    {
      char v28 = self;
      id v29 = [v28 supportedImageTypes];
      uint64_t v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      id v31 = [v28 supportedMovieTypes];
      uint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1006E0CB8(v32);
      uint64_t v33 = swift_allocObject();
      *(unsigned char *)(v33 + 16) = 0;
      uint64_t v34 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v35 = (void *)swift_allocObject();
      v35[2] = v34;
      v35[3] = v11;
      v35[4] = v33;
      v35[5] = a2;
      id v36 = v11;
      swift_retain();
      swift_retain();
      uint64_t v37 = swift_bridgeObjectRetain();
      id v38 = PHPickerViewController.crl_loadFileRepresentations(for:supportedTypeIdentifiers:completionHandler:)(v37, v30, (uint64_t)sub_1005C5184, (uint64_t)v35);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v39 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v33;
      *(void *)(v40 + 24) = v39;
      aBlock[4] = sub_1005C51A8;
      aBlock[5] = v40;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100679958;
      id aBlock[3] = &unk_101508C70;
      char v41 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      sub_1005173A0((uint64_t)sub_1005C51A8);
      swift_release();
      [v38 setCancellationHandler:v41];
      _Block_release(v41);
      swift_release();
      swift_release();
      int v42 = *(void **)(v43 + v13);
      *(void *)(v43 + v13) = v38;
      swift_release();
    }
  }
  else
  {
    if (qword_10166FAC8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v19 = (void *)static OS_os_log.crlInsertMedia;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v20 = swift_initStackObject();
    *(_OWORD *)(v20 + 16) = xmmword_10117E810;
    *(void *)(v20 + 56) = sub_10050BF48(0, &qword_101674418);
    *(void *)(v20 + 64) = sub_1005C5084();
    *(void *)(v20 + 32) = a1;
    id v21 = a1;
    id v22 = v19;
    uint64_t v23 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v22, (uint64_t)&_mh_execute_header, v23, (uint64_t)"Dismissing photo picker (%p) with empty results.", 48, 2, v20);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v24 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_photoPickerLoadingProgress;
    id v25 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_photoPickerLoadingProgress);
    if (v25)
    {
      id v26 = v25;
      [v26 cancel];
      uint64_t v27 = *(void **)(v2 + v24);
      *(void *)(v2 + v24) = 0;
    }
    else
    {
      [v21 dismissViewControllerAnimated:1 completion:0];
    }
  }
}

void sub_1005B33F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  if (([self isMainThread] & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"picker(_:didFinishPicking:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2081, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v20) = 2;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"picker(_:didFinishPicking:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2081);
    [self logFullBacktrace:@"This operation must only be performed on the main thread." 57 v20];
  }
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v15 = *(void **)&Strong[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_photoPickerLoadingProgress];
    *(void *)&Strong[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_photoPickerLoadingProgress] = 0;
  }
  id v16 = (void *)swift_allocObject();
  void v16[2] = a6;
  v16[3] = a5;
  v16[4] = a2;
  void v16[5] = a4;
  v16[6] = a1;
  v16[7] = a3;
  v16[8] = a7;
  aBlock[4] = sub_1005C5218;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  id aBlock[3] = &unk_101508CC0;
  id v17 = _Block_copy(aBlock);
  swift_retain();
  id v18 = a5;
  swift_bridgeObjectRetain();
  swift_retain();
  id v19 = a1;
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_release();
  [v18 dismissViewControllerAnimated:1 completion:v17];
  _Block_release(v17);
}

void sub_1005B3648(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v14 - 8, v15);
  id v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a4 + 16;
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 16) == 1)
  {
    if (qword_10166FAC8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v19 = (void *)static OS_os_log.crlInsertMedia;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = sub_10050BF48(0, &qword_101674418);
    *(void *)(inited + 64) = sub_1005C5084();
    *(void *)(inited + 32) = a2;
    id v21 = v19;
    id v22 = a2;
    uint64_t v23 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v21, (uint64_t)&_mh_execute_header, v23, (uint64_t)"Assets ready but photo picker (%p) loading progress was cancelled.", 66, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  else if (a3)
  {
    uint64_t v24 = *(void *)(a3 + 16);
    if (v24)
    {
      swift_beginAccess();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v52 = (void *)Strong;
        uint64_t v53 = v18;
        uint64_t v54 = a7;
        if (qword_10166FAC8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v26 = (void *)static OS_os_log.crlInsertMedia;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v27 = swift_initStackObject();
        *(_OWORD *)(v27 + 16) = xmmword_10117D8C0;
        *(void *)(v27 + 56) = &type metadata for Int;
        *(void *)(v27 + 64) = &protocol witness table for Int;
        *(void *)(v27 + 32) = v24;
        *(void *)(v27 + 96) = sub_10050BF48(0, &qword_101674418);
        *(void *)(v27 + 104) = sub_1005C5084();
        *(void *)(v27 + 72) = a2;
        id v28 = a2;
        id v29 = v26;
        uint64_t v30 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v29, (uint64_t)&_mh_execute_header, v30, (uint64_t)"Inserting %d file URL(s) from photo picker (%p).", 48, 2, v27);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        id v31 = v52;
        uint64_t v32 = sub_100E3C6E8();
        static TaskPriority.userInitiated.getter();
        uint64_t v33 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v17, 0, 1, v33);
        type metadata accessor for MainActor();
        id v34 = a5;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v35 = static MainActor.shared.getter();
        id v36 = (void *)swift_allocObject();
        v36[2] = v35;
        v36[3] = &protocol witness table for MainActor;
        v36[4] = v32;
        v36[5] = a3;
        v36[7] = 0;
        v36[8] = 0;
        v36[6] = a5;
        sub_10059134C((uint64_t)v17, (uint64_t)&unk_101674438, (uint64_t)v36);
        swift_release();

        swift_release();
        a7 = v54;
      }
    }
  }
  if (a6)
  {
    uint64_t v56 = a6;
    swift_errorRetain();
    sub_1005057FC(&qword_101672BD0);
    sub_10050BF48(0, (unint64_t *)&qword_10168D3C0);
    if (swift_dynamicCast())
    {
      id v37 = v55;
      if ((objc_msgSend(v55, "crl_isCancelError") & 1) == 0)
      {
        if (qword_10166FAC8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v38 = (void *)static OS_os_log.crlInsertMedia;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v39 = swift_initStackObject();
        *(_OWORD *)(v39 + 16) = xmmword_10117E810;
        id v40 = v38;
        id v37 = v37;
        id v41 = [v37 description];
        uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v44 = v43;

        *(void *)(v39 + 56) = &type metadata for String;
        *(void *)(v39 + 64) = sub_100528BE4();
        *(void *)(v39 + 32) = v42;
        *(void *)(v39 + 40) = v44;
        uint64_t v45 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v40, (uint64_t)&_mh_execute_header, v45, (uint64_t)"Error loading files from photo picker: %@", 41, 2, v39);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        id v46 = (id)sub_10106160C(a7);
        swift_beginAccess();
        uint64_t v47 = swift_unknownObjectWeakLoadStrong();
        if (v47)
        {
          char v48 = (void *)v47;
          id v49 = objc_retain(*(id *)(v47
                                  + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController));

          id v46 = v46;
          unint64_t v50 = (void *)_convertErrorToNSError(_:)();

          [v49 presentError:v50 completionHandler:0];
        }
      }
    }
  }
}

void sub_1005B3C90(uint64_t a1)
{
  swift_beginAccess();
  *(unsigned char *)(a1 + 16) = 1;
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = *(void **)&Strong[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_photoPickerLoadingProgress];
    *(void *)&Strong[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_photoPickerLoadingProgress] = 0;
  }
}

void sub_1005B3E54()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    swift_unknownObjectWeakAssign();
  }
}

void sub_1005B3ED8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_1005B3F34(a2);
  }
}

void sub_1005B3F34(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v8 - 8, v9);
  id v11 = (char *)v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  *(void *)&long long v117 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v114 = (char *)v109 - v18;
  __chkstk_darwin(v19, v20);
  unint64_t v116 = (char *)v109 - v21;
  __chkstk_darwin(v22, v23);
  uint64_t v115 = (char *)v109 - v24;
  uint64_t v25 = type metadata accessor for UTType();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25, v27);
  id v29 = (char *)v109 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    long long v120 = 0u;
    long long v121 = 0u;
    goto LABEL_11;
  }
  unint64_t v112 = v7;
  uint64_t v113 = v12;
  uint64_t v30 = UIImagePickerControllerMediaType;
  uint64_t v31 = sub_10095609C(v30);
  if ((v32 & 1) == 0)
  {
    long long v120 = 0u;
    long long v121 = 0u;

    goto LABEL_11;
  }
  sub_100522D7C(*(void *)(a1 + 56) + 32 * v31, (uint64_t)&v120);

  if (!*((void *)&v121 + 1))
  {
LABEL_11:
    sub_100522F00((uint64_t)&v120, &qword_101672BF0);
    goto LABEL_12;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"insertImagePickerMediaWithInfo(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2159, (uint64_t)"No media type", 13, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"insertImagePickerMediaWithInfo(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2159);
    return;
  }
  v109[1] = v2;
  long long v111 = v118;
  NSString v33 = String._bridgeToObjectiveC()();
  static UTType.image.getter();
  UTType.identifier.getter();
  UIMenuElementSize v110 = *(void (**)(char *, uint64_t))(v26 + 8);
  v110(v29, v25);
  NSString v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v35 = [v33 crl_conformsToUTI:v34];

  if (v35)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 16))
    {
      id v36 = UIImagePickerControllerEditedImage;
      uint64_t v37 = sub_10095609C(v36);
      if (v38)
      {
        sub_100522D7C(*(void *)(a1 + 56) + 32 * v37, (uint64_t)&v118);
      }
      else
      {
        long long v118 = 0u;
        long long v119 = 0u;
      }

      if (*((void *)&v119 + 1))
      {
        sub_100575CE8(&v118, &v120);
        goto LABEL_46;
      }
      if (*(void *)(a1 + 16))
      {
        uint64_t v47 = UIImagePickerControllerOriginalImage;
        uint64_t v48 = sub_10095609C(v47);
        if (v49)
        {
          sub_100522D7C(*(void *)(a1 + 56) + 32 * v48, (uint64_t)&v120);
        }
        else
        {
          long long v120 = 0u;
          long long v121 = 0u;
        }

        goto LABEL_45;
      }
    }
    else
    {
      long long v118 = 0u;
      long long v119 = 0u;
    }
    long long v120 = 0u;
    long long v121 = 0u;
LABEL_45:
    sub_100522F00((uint64_t)&v118, &qword_101672BF0);
LABEL_46:
    if (*((void *)&v121 + 1))
    {
      sub_10050BF48(0, &qword_1016747A0);
      if (swift_dynamicCast())
      {
        uint64_t v93 = (void *)v118;
        unint64_t v94 = UIImageJPEGRepresentation((UIImage *)v118, 0.8);
        if (v94)
        {
          uint64_t v95 = v94;
          uint64_t v96 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v98 = v97;

          id v99 = [self mainBundle];
          NSString v100 = String._bridgeToObjectiveC()();
          NSString v101 = String._bridgeToObjectiveC()();
          id v102 = [v99 localizedStringForKey:v100 value:v101 table:0];

          uint64_t v103 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v105 = v104;

          *(void *)&long long v120 = 1735420462;
          *((void *)&v120 + 1) = 0xE400000000000000;
          *(void *)&long long v118 = v103;
          *((void *)&v118 + 1) = v105;
          swift_bridgeObjectRetain();
          *(void *)&long long v118 = String.init<A>(_:)();
          *((void *)&v118 + 1) = v106;
          String.append<A>(contentsOf:)();
          swift_bridgeObjectRelease();
          long long v107 = v118;
          sub_1005057FC(&qword_1016747A8);
          uint64_t inited = swift_initStackObject();
          long long v117 = xmmword_10117E810;
          *(_OWORD *)(inited + 16) = xmmword_10117E810;
          *(void *)(inited + 32) = v96;
          *(void *)(inited + 40) = v98;
          *(_OWORD *)(inited + 48) = v107;
          sub_100510D4C(v96, v98);
          swift_bridgeObjectRetain();
          sub_1005A5980(inited);
          swift_setDeallocating();
          sub_1005057FC(&qword_1016747B0);
          swift_arrayDestroy();

          sub_100510084(v96, v98);
          swift_bridgeObjectRelease();
          return;
        }
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"insertImagePickerMediaWithInfo(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2165, (uint64_t)"Unable to get image data", 24, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"insertImagePickerMediaWithInfo(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2165);

        goto LABEL_52;
      }
    }
    else
    {
      sub_100522F00((uint64_t)&v120, &qword_101672BF0);
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"insertImagePickerMediaWithInfo(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2164, (uint64_t)"Bad image info", 14, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"insertImagePickerMediaWithInfo(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2164);
    swift_bridgeObjectRelease();
LABEL_52:
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v68 = (id)static OS_os_log.crlDefault;
    uint64_t v69 = static os_log_type_t.error.getter();
    uint64_t v70 = "No image to insert";
    uint64_t v71 = (uint64_t)v68;
    uint64_t v72 = 18;
LABEL_55:
    sub_100BAC898(v71, (uint64_t)&_mh_execute_header, v69, (uint64_t)v70, v72, 2, (uint64_t)_swiftEmptyArrayStorage);

    return;
  }
  NSString v39 = String._bridgeToObjectiveC()();
  static UTType.movie.getter();
  UTType.identifier.getter();
  v110(v29, v25);
  NSString v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v41 = [v39 crl_conformsToUTI:v40];

  if (!v41)
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v46 = swift_initStackObject();
    *(_OWORD *)(v46 + 16) = xmmword_10117E810;
    *(void *)(v46 + 56) = &type metadata for String;
    *(void *)(v46 + 64) = sub_100528BE4();
    *(_OWORD *)(v46 + 32) = v111;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"insertImagePickerMediaWithInfo(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2191, (uint64_t)"Bad media type: %@", 18, 2u, v46);
    sub_1005598CC(v46, (uint64_t)"insertImagePickerMediaWithInfo(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2191);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    return;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 16))
  {
    long long v118 = 0u;
    long long v119 = 0u;
    uint64_t v44 = v117;
LABEL_29:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"insertImagePickerMediaWithInfo(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2176, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v50 = v113;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"insertImagePickerMediaWithInfo(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2176);
    goto LABEL_30;
  }
  uint64_t v42 = UIImagePickerControllerMediaURL;
  uint64_t v43 = sub_10095609C(v42);
  uint64_t v44 = v117;
  if (v45)
  {
    sub_100522D7C(*(void *)(a1 + 56) + 32 * v43, (uint64_t)&v118);
  }
  else
  {
    long long v118 = 0u;
    long long v119 = 0u;
  }
  uint64_t v50 = v113;

  if (!*((void *)&v119 + 1)) {
    goto LABEL_29;
  }
LABEL_30:
  sub_10051B3EC((uint64_t)&v118, (uint64_t)&v120, &qword_101672BF0);
  if (!*((void *)&v121 + 1))
  {
    sub_100522F00((uint64_t)&v120, &qword_101672BF0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v11, 1, 1, v50);
    goto LABEL_35;
  }
  int v51 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v11, v51 ^ 1u, 1, v50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v11, 1, v50) == 1)
  {
LABEL_35:
    sub_100522F00((uint64_t)v11, &qword_101672E90);
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v68 = (id)static OS_os_log.crlDefault;
    uint64_t v69 = static os_log_type_t.error.getter();
    uint64_t v70 = "No movie URL to insert";
    uint64_t v71 = (uint64_t)v68;
    uint64_t v72 = 22;
    goto LABEL_55;
  }
  uint64_t v52 = v115;
  (*(void (**)(void))(v44 + 32))();
  id v53 = [self mainBundle];
  NSString v54 = String._bridgeToObjectiveC()();
  NSString v55 = String._bridgeToObjectiveC()();
  id v56 = [v53 localizedStringForKey:v54 value:v55 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  URL.deletingLastPathComponent()();
  uint64_t v57 = v114;
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v58 = *(void (**)(char *, uint64_t))(v44 + 8);
  v58(v15, v50);
  URL.pathExtension.getter();
  uint64_t v59 = v116;
  URL.appendingPathExtension(_:)();
  swift_bridgeObjectRelease();
  uint64_t v60 = v57;
  uint64_t v61 = v58;
  v58(v60, v50);
  NSString v62 = self;
  id v63 = [v62 defaultManager];
  URL._bridgeToObjectiveC()(v64);
  char v66 = v65;
  *(void *)&long long v120 = 0;
  LODWORD(v58) = [v63 removeItemAtURL:v65 error:&v120];

  if (v58)
  {
    id v67 = (id)v120;
  }
  else
  {
    id v73 = (id)v120;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
  id v74 = [v62 defaultManager];
  URL._bridgeToObjectiveC()(v75);
  uint64_t v77 = v76;
  URL._bridgeToObjectiveC()(v78);
  NSString v80 = v79;
  *(void *)&long long v120 = 0;
  unsigned int v81 = [v74 moveItemAtURL:v77 toURL:v79 error:&v120];

  if (v81)
  {
    id v82 = (id)v120;
    uint64_t v83 = v113;
    v61(v52, v113);
    uint64_t v84 = v117;
    (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v52, v59, v83);
  }
  else
  {
    id v85 = (id)v120;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    uint64_t v83 = v113;
    uint64_t v84 = v117;
  }
  uint64_t v86 = sub_100E3C6E8();
  sub_1005057FC(&qword_1016743E0);
  unint64_t v87 = (*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
  uint64_t v88 = swift_allocObject();
  *(_OWORD *)(v88 + 16) = xmmword_10117E810;
  (*(void (**)(unint64_t, char *, uint64_t))(v84 + 16))(v88 + v87, v52, v83);
  uint64_t v89 = (uint64_t)v112;
  static TaskPriority.userInitiated.getter();
  uint64_t v90 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v89, 0, 1, v90);
  type metadata accessor for MainActor();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v91 = static MainActor.shared.getter();
  uint64_t v92 = (void *)swift_allocObject();
  v92[2] = v91;
  v92[3] = &protocol witness table for MainActor;
  v92[4] = v86;
  v92[5] = v88;
  v92[7] = 0;
  v92[8] = 0;
  v92[6] = 0;
  sub_10059134C(v89, (uint64_t)&unk_101674798, (uint64_t)v92);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v61(v59, v83);
  v61(v52, v83);
}

void sub_1005B5340(char a1, void *a2)
{
  if (a1)
  {
    id v22 = [objc_allocWithZone((Class)VNDocumentCameraViewController) init];
    [v22 setDelegate:a2];
    swift_unknownObjectWeakAssign();
    [a2 presentViewController:v22 animated:1 completion:0];
  }
  else
  {
    uint64_t v3 = self;
    id v4 = [v3 mainBundle];
    NSString v5 = String._bridgeToObjectiveC()();
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v4 localizedStringForKey:v5 value:v6 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v8 = [v3 mainBundle];
    NSString v9 = String._bridgeToObjectiveC()();
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [v8 localizedStringForKey:v9 value:v10 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v14 = [self alertControllerWithTitle:v12 message:v13 preferredStyle:1];

    id v15 = [v3 mainBundle];
    NSString v16 = String._bridgeToObjectiveC()();
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_10051CE64;
    id aBlock[3] = &unk_101509530;
    uint64_t v20 = _Block_copy(aBlock);
    swift_release();
    id v21 = [self actionWithTitle:v19 style:0 handler:v20];
    _Block_release(v20);

    [v14 addAction:v21];
    [a2 presentViewController:v14 animated:1 completion:0];
  }
}

void sub_1005B573C(void *a1, void *a2)
{
  id v3 = [self mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 localizedStringForKey:v4 value:v5 table:0];

  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  id v10 = [a2 title];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v13 = v12;

  swift_bridgeObjectRelease();
  uint64_t v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0) {
    uint64_t v14 = v11 & 0xFFFFFFFFFFFFLL;
  }
  if (v14)
  {
    id v15 = [a2 title];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = v7;
    uint64_t v18 = v9;
  }
  id v19 = [a2 pageCount];
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v20 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 56) = &type metadata for Int;
  *(void *)(inited + 64) = &protocol witness table for Int;
  *(void *)(inited + 32) = v19;
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = sub_100528BE4();
  *(void *)(inited + 72) = v16;
  *(void *)(inited + 80) = v18;
  id v22 = v20;
  uint64_t v23 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v22, (uint64_t)&_mh_execute_header, v23, (uint64_t)"Document camera finished %d page scan with title: %@", 52, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = v19;
  v25[3] = a2;
  void v25[4] = v7;
  v25[5] = v9;
  id v25[6] = v24;
  aBlock[4] = sub_1005C79C4;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  id aBlock[3] = &unk_101509850;
  uint64_t v26 = _Block_copy(aBlock);
  id v27 = a2;
  swift_release();
  [a1 dismissViewControllerAnimated:1 completion:v26];
  _Block_release(v26);
}

uint64_t sub_1005B5AA4(uint64_t a1, void *a2, void (*a3)(char *, uint64_t), uint64_t a4, uint64_t a5)
{
  id v82 = a3;
  uint64_t v9 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v9 - 8, v10);
  unint64_t v12 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  id v21 = (char *)&v72 - v20;
  uint64_t v22 = type metadata accessor for UTType();
  uint64_t v81 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  NSString v80 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v25 = [objc_allocWithZone((Class)PDFDocument) init];
  if (a1 < 0) {
    __break(1u);
  }
  uint64_t v77 = v22;
  id v78 = v17;
  uint64_t v79 = a4;
  uint64_t v74 = a5;
  uint64_t v75 = v14;
  id v73 = v12;
  unint64_t v76 = v21;
  uint64_t v83 = v13;
  id v84 = v25;
  if (a1)
  {
    uint64_t v26 = 0;
    for (uint64_t i = 0; a1 != i; ++i)
    {
      id v28 = [a2 imageOfPageAtIndex:i];
      id v29 = [objc_allocWithZone((Class)PDFPage) initWithImage:v28];
      if (v29)
      {
        uint64_t v30 = v29;
        [v84 insertPage:v29 atIndex:v26];

        if (__OFADD__(v26++, 1))
        {
          __break(1u);
          break;
        }
      }
      else
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"documentCameraViewController(_:didFinishWith:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2239, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"documentCameraViewController(_:didFinishWith:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2239);
      }
    }
  }
  id v32 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  NSString v33 = String._bridgeToObjectiveC()();
  v85[0] = 0;
  id v34 = [v32 initWithSignature:v33 error:v85];

  id v35 = v85[0];
  if (v34)
  {
    id v36 = v34;
    id v37 = v35;
    NSString v38 = String._bridgeToObjectiveC()();
    NSString v39 = v80;
    static UTType.pdf.getter();
    UTType.preferredFilenameExtension.getter();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v39, v77);
    NSString v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v41 = [v38 stringByAppendingPathExtension:v40];

    id v42 = v84;
    if (v41)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    uint64_t v50 = v83;
    int v51 = v76;
    uint64_t v52 = v75;
    id v53 = [v36 URL];
    NSString v54 = v78;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    URL.appendingPathComponent(_:isDirectory:)();
    swift_bridgeObjectRelease();
    NSString v55 = *(void (**)(char *, uint64_t))(v52 + 8);
    v55(v54, v50);
    URL._bridgeToObjectiveC()(v56);
    uint64_t v58 = v57;
    LODWORD(v54) = [v42 writeToURL:v57];

    if (v54)
    {
      swift_beginAccess();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v60 = (void *)Strong;
        uint64_t v61 = sub_100E3C6E8();

        sub_1005057FC(&qword_1016743E0);
        unint64_t v62 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
        uint64_t v63 = swift_allocObject();
        id v82 = v55;
        uint64_t v64 = v63;
        *(_OWORD *)(v63 + 16) = xmmword_10117E810;
        (*(void (**)(unint64_t, char *, uint64_t))(v52 + 16))(v63 + v62, v51, v50);
        uint64_t v65 = (uint64_t)v73;
        static TaskPriority.userInitiated.getter();
        uint64_t v66 = type metadata accessor for TaskPriority();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v65, 0, 1, v66);
        type metadata accessor for MainActor();
        id v67 = v36;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v68 = static MainActor.shared.getter();
        uint64_t v69 = (void *)swift_allocObject();
        v69[2] = v68;
        v69[3] = &protocol witness table for MainActor;
        v69[4] = v61;
        v69[5] = v64;
        v69[7] = 0;
        v69[8] = 0;
        v69[6] = v34;
        sub_10059134C(v65, (uint64_t)&unk_101674788, (uint64_t)v69);
        swift_release();
        uint64_t v70 = (uint64_t (*)(char *, uint64_t))v82;
        swift_bridgeObjectRelease();

        uint64_t v71 = v83;
        swift_release();
        return v70(v51, v71);
      }
      else
      {

        return ((uint64_t (*)(char *, uint64_t))v55)(v51, v50);
      }
    }
    else
    {

      id v82 = v55;
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"documentCameraViewController(_:didFinishWith:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2256, (uint64_t)"Error saving PDF", 16, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"documentCameraViewController(_:didFinishWith:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2256);

      return ((uint64_t (*)(char *, uint64_t))v82)(v51, v50);
    }
  }
  else
  {
    id v43 = v85[0];
    uint64_t v44 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    v85[0] = v44;
    swift_errorRetain();
    sub_1005057FC(&qword_101672BD0);
    uint64_t v46 = String.init<A>(describing:)();
    uint64_t v48 = v47;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v46;
    *(void *)(inited + 40) = v48;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"documentCameraViewController(_:didFinishWith:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2249, (uint64_t)"Error creating temporary directory: %@", 38, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"documentCameraViewController(_:didFinishWith:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2249);

    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    return swift_errorRelease();
  }
}

void sub_1005B65D0(char a1)
{
  uint64_t v3 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_gpHelper;
  NSString v4 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_gpHelper];
  if (v4)
  {
    id v5 = v4;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"presentGenerativePlayground(forCurrentSection:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2287, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentGenerativePlayground(forCurrentSection:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2287);
  }
  id v6 = sub_100E3C594();
  id v7 = [v6 mode];

  LODWORD(v6) = [v7 wantsToEndForNonPopoverPresentations];
  if (v6)
  {
    id v8 = sub_100E3C594();
    [v8 resetToDefaultModeAnimated:1];
  }
  id v9 = [objc_allocWithZone((Class)type metadata accessor for CRLGenerativePlaygroundHelper()) init];
  swift_unknownObjectWeakAssign();
  uint64_t v10 = *(void **)&v1[v3];
  *(void *)&v1[v3] = v9;
  uint64_t v11 = (char *)v9;

  if (a1)
  {
    unint64_t v12 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
    uint64_t v13 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v14 = v11;
    sub_100FB5698(v12, v14, v13, v14);
    swift_release();
  }
  else
  {
    [v1 presentViewController:*(void *)&v11[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController] animated:1 completion:0];
  }
  uint64_t v15 = *(void **)(*(void *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
  v20[3] = &type metadata for CRLFeatureFlags;
  v20[4] = (id)sub_1005396A8();
  LOBYTE(v20[0]) = 12;
  id v16 = v15;
  char v17 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v20);
  if (v17)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v20[0])
    {

      if (qword_10166FAE0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v18 = (id)static OS_os_log.crlFollow;
      uint64_t v19 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v18, (uint64_t)&_mh_execute_header, v19, (uint64_t)"Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

      sub_1007ECCE4(1);
    }
  }
}

uint64_t sub_1005B6948(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    id v7 = a1;
  }
  sub_1005B65D0(a4 & 1);

  return sub_100522F00((uint64_t)v9, &qword_101672BF0);
}

void sub_1005B69CC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v4 = Strong;
    [Strong presentViewController:*(void *)(a2 + OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController) animated:1 completion:0];
  }
}

void sub_1005B6A44(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_gpHelper;
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_gpHelper);
  if (v3)
  {
    [*(id *)(v3 + OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController) dismissViewControllerAnimated:1 completion:0];
    NSString v4 = *(void **)(a1 + v2);
  }
  else
  {
    NSString v4 = 0;
  }
  *(void *)(a1 + v2) = 0;
}

void sub_1005B6D54(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674610);
  __chkstk_darwin(v4 - 8, v5);
  id v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v8 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v8 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v8)
  {
    sub_100E3C6E8();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong
      && (uint64_t v10 = Strong,
          uint64_t v11 = (char *)[Strong editingCoordinator],
          v10,
          v11))
    {
      id v12 = *(id *)&v11[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory];
      swift_release();

      double v13 = sub_1004C840C(0);
      id v15 = [self pathSourceForShapeType:0 naturalSize:v13, v14];
      id v16 = objc_allocWithZone((Class)NSAttributedString);
      swift_bridgeObjectRetain();
      NSString v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v18 = [v16 initWithString:v17];

      uint64_t v19 = type metadata accessor for CRLWPStorageCRDTData(0);
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v7, 1, 1, v19);
      sub_1005C6DF0((uint64_t)v28);
      sub_10051B3EC((uint64_t)v28, (uint64_t)v29, &qword_10168D670);
      id v20 = v15;
      id v21 = v18;
      id v22 = sub_100F40DC0(0, 0, (uint64_t)v15, 0, 0, 0, 1, 0, 1, (void *)1, (void *)1, (void *)1, (void *)1, (char *)v18, v7, v29, 0, 0, 0);

      sub_100522F00((uint64_t)v7, (uint64_t *)&unk_101674610);
      type metadata accessor for CRLWPShapeItem();
      uint64_t v23 = swift_dynamicCastClassUnconditional();
      sub_100E3C6E8();
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_101177E70;
      *(void *)(v24 + 32) = v23;
      unint64_t v27 = v24;
      specialized Array._endMutation()();
      unint64_t v25 = v27;
      id v26 = v22;
      sub_1005C360C(v25, 0, 0);
      swift_release();

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
  }
}

void _s18ToolbarButtonStateVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 24);
}

uint64_t _s18ToolbarButtonStateVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

uint64_t _s18ToolbarButtonStateVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(unsigned char *)(a1 + 6) = *(unsigned char *)(a2 + 6);
  *(unsigned char *)(a1 + 7) = *(unsigned char *)(a2 + 7);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 24);
  id v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v4;
  id v6 = v4;

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  return a1;
}

__n128 _s18ToolbarButtonStateVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 31) = *(_DWORD *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s18ToolbarButtonStateVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(unsigned char *)(a1 + 6) = *(unsigned char *)(a2 + 6);
  *(unsigned char *)(a1 + 7) = *(unsigned char *)(a2 + 7);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  return a1;
}

uint64_t _s18ToolbarButtonStateVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 35)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s18ToolbarButtonStateVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 34) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 35) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 35) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s18ToolbarButtonStateVMa()
{
  return &_s18ToolbarButtonStateVN;
}

void sub_1005B73B8(uint64_t a1, uint64_t a2, unint64_t a3)
{
}

uint64_t sub_1005B73C4()
{
  unsigned int v1 = [*(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] documentIsSharedReadOnly];
  if (v1 & 1) == 0 && ([v0 isInDrawingMode]) {
    [v0 endDrawingModeIfNeeded];
  }
  return v1 ^ 1;
}

uint64_t sub_1005B7438(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_100528D08;
  return sub_1005B1C20(a1, v4, v5, v6);
}

uint64_t sub_1005B74EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v5 = swift_unknownObjectRetain();
  v4(v5, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_1005B7554@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1005B75D4(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v2;
  id v5 = v3;
  return static Published.subscript.setter();
}

void sub_1005B764C()
{
  sub_1008ABCEC(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_1005B7658(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005B7668()
{
  return swift_release();
}

uint64_t sub_1005B7670(uint64_t a1, uint64_t a2)
{
  uint64_t v92 = type metadata accessor for CRLProto_Data(0);
  __chkstk_darwin(v92, v4);
  uint64_t v6 = (uint64_t *)((char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7, v8);
  uint64_t v11 = (uint64_t *)((char *)&v87 - v10);
  uint64_t v93 = a1;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12 == *(void *)(a2 + 16))
  {
    if (v12 && v93 != a2)
    {
      unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v90 = *(void *)(v9 + 72);
      uint64_t v91 = v6;
      uint64_t v14 = v12 - 1;
      uint64_t v88 = a2;
      while (1)
      {
        sub_1005C7DB0(v93 + v13, (uint64_t)v11, type metadata accessor for CRLProto_Data);
        sub_1005C7DB0(a2 + v13, (uint64_t)v6, type metadata accessor for CRLProto_Data);
        uint64_t v16 = *v11;
        unint64_t v15 = v11[1];
        uint64_t v17 = *v6;
        unint64_t v18 = v6[1];
        uint64_t v19 = 0;
        switch(v15 >> 62)
        {
          case 1uLL:
            LODWORD(v19) = HIDWORD(v16) - v16;
            if (__OFSUB__(HIDWORD(v16), v16))
            {
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
            }
            uint64_t v19 = (int)v19;
LABEL_10:
            unint64_t v23 = v18 >> 62;
            switch(v18 >> 62)
            {
              case 1uLL:
                LODWORD(v24) = HIDWORD(v17) - v17;
                if (__OFSUB__(HIDWORD(v17), v17)) {
                  goto LABEL_124;
                }
                uint64_t v24 = (int)v24;
LABEL_15:
                if (v19 != v24) {
                  goto LABEL_119;
                }
                if (v19 < 1) {
                  goto LABEL_112;
                }
                break;
              case 2uLL:
                uint64_t v26 = *(void *)(v17 + 16);
                uint64_t v25 = *(void *)(v17 + 24);
                BOOL v22 = __OFSUB__(v25, v26);
                uint64_t v24 = v25 - v26;
                if (!v22) {
                  goto LABEL_15;
                }
                goto LABEL_125;
              case 3uLL:
                if (v19) {
                  goto LABEL_119;
                }
                goto LABEL_112;
              default:
                uint64_t v24 = BYTE6(v18);
                goto LABEL_15;
            }
            break;
          case 2uLL:
            uint64_t v21 = *(void *)(v16 + 16);
            uint64_t v20 = *(void *)(v16 + 24);
            BOOL v22 = __OFSUB__(v20, v21);
            uint64_t v19 = v20 - v21;
            if (!v22) {
              goto LABEL_10;
            }
            goto LABEL_123;
          case 3uLL:
            goto LABEL_10;
          default:
            uint64_t v19 = BYTE6(v15);
            goto LABEL_10;
        }
        uint64_t v89 = v17;
        switch(v15 >> 62)
        {
          case 1uLL:
            if ((int)v16 > v16 >> 32) {
              goto LABEL_126;
            }
            sub_100510D4C(v16, v15);
            NSString v33 = (char *)__DataStorage._bytes.getter();
            if (!v33) {
              goto LABEL_31;
            }
            uint64_t v34 = __DataStorage._offset.getter();
            if (__OFSUB__((int)v16, v34)) {
              goto LABEL_128;
            }
            v33 += (int)v16 - v34;
LABEL_31:
            a2 = v88;
            __DataStorage._length.getter();
            if (v23)
            {
              unint64_t v87 = v33;
              if (v23 == 1)
              {
                uint64_t v35 = (int)v89;
                uint64_t v36 = (v89 >> 32) - (int)v89;
                if (v89 >> 32 < (int)v89) {
                  goto LABEL_137;
                }
                swift_retain();
                id v37 = (char *)__DataStorage._bytes.getter();
                if (v37)
                {
                  uint64_t v38 = __DataStorage._offset.getter();
                  if (__OFSUB__(v35, v38)) {
                    goto LABEL_144;
                  }
                  v37 += v35 - v38;
                }
                a2 = v88;
                uint64_t v39 = __DataStorage._length.getter();
                if (v39 >= v36) {
                  size_t v40 = v36;
                }
                else {
                  size_t v40 = v39;
                }
                if (!v87) {
                  goto LABEL_146;
                }
                if (!v37) {
                  goto LABEL_147;
                }
                int v41 = memcmp(v87, v37, v40);
                sub_100510084(v89, v18);
              }
              else
              {
                uint64_t v76 = *(void *)(v89 + 16);
                uint64_t v77 = *(void *)(v89 + 24);
                swift_retain();
                swift_retain();
                id v78 = (char *)__DataStorage._bytes.getter();
                if (v78)
                {
                  uint64_t v79 = __DataStorage._offset.getter();
                  if (__OFSUB__(v76, v79)) {
                    goto LABEL_143;
                  }
                  v78 += v76 - v79;
                }
                BOOL v22 = __OFSUB__(v77, v76);
                int64_t v80 = v77 - v76;
                if (v22) {
                  goto LABEL_138;
                }
                uint64_t v81 = __DataStorage._length.getter();
                if (v81 >= v80) {
                  size_t v82 = v80;
                }
                else {
                  size_t v82 = v81;
                }
                if (!v87) {
                  goto LABEL_157;
                }
                if (!v78) {
                  goto LABEL_158;
                }
                int v41 = memcmp(v87, v78, v82);
                swift_release();
                swift_release();
              }
            }
            else
            {
              __s1[0] = v89;
              LOWORD(__s1[1]) = v18;
              BYTE2(__s1[1]) = BYTE2(v18);
              BYTE3(__s1[1]) = BYTE3(v18);
              BYTE4(__s1[1]) = BYTE4(v18);
              BYTE5(__s1[1]) = BYTE5(v18);
              if (!v33) {
                goto LABEL_156;
              }
              int v41 = memcmp(v33, __s1, BYTE6(v18));
            }
            uint64_t v57 = v16;
            unint64_t v58 = v15;
            goto LABEL_111;
          case 2uLL:
            uint64_t v42 = *(void *)(v16 + 16);
            swift_retain();
            swift_retain();
            id v43 = (char *)__DataStorage._bytes.getter();
            if (!v43) {
              goto LABEL_46;
            }
            uint64_t v44 = __DataStorage._offset.getter();
            if (__OFSUB__(v42, v44)) {
              goto LABEL_127;
            }
            v43 += v42 - v44;
LABEL_46:
            __DataStorage._length.getter();
            if (v23)
            {
              unint64_t v87 = v43;
              if (v23 == 1)
              {
                uint64_t v45 = (int)v89;
                uint64_t v46 = (v89 >> 32) - (int)v89;
                if (v89 >> 32 < (int)v89) {
                  goto LABEL_132;
                }
                swift_retain();
                uint64_t v47 = (char *)__DataStorage._bytes.getter();
                if (v47)
                {
                  uint64_t v48 = __DataStorage._offset.getter();
                  if (__OFSUB__(v45, v48)) {
                    goto LABEL_142;
                  }
                  v47 += v45 - v48;
                }
                uint64_t v49 = __DataStorage._length.getter();
                if (v49 >= v46) {
                  size_t v50 = v46;
                }
                else {
                  size_t v50 = v49;
                }
                a2 = v88;
                if (!v87) {
                  goto LABEL_148;
                }
                if (!v47) {
                  goto LABEL_149;
                }
                int v51 = memcmp(v87, v47, v50);
                sub_100510084(v89, v18);
              }
              else
              {
                uint64_t v69 = *(void *)(v89 + 16);
                uint64_t v70 = *(void *)(v89 + 24);
                swift_retain();
                swift_retain();
                uint64_t v71 = (char *)__DataStorage._bytes.getter();
                if (v71)
                {
                  uint64_t v72 = __DataStorage._offset.getter();
                  if (__OFSUB__(v69, v72)) {
                    goto LABEL_141;
                  }
                  v71 += v69 - v72;
                }
                a2 = v88;
                BOOL v22 = __OFSUB__(v70, v69);
                int64_t v73 = v70 - v69;
                if (v22) {
                  goto LABEL_136;
                }
                uint64_t v74 = __DataStorage._length.getter();
                if (v74 >= v73) {
                  size_t v75 = v73;
                }
                else {
                  size_t v75 = v74;
                }
                if (!v87) {
                  goto LABEL_154;
                }
                if (!v71) {
                  goto LABEL_155;
                }
                int v51 = memcmp(v87, v71, v75);
                swift_release();
                swift_release();
              }
            }
            else
            {
              __s1[0] = v89;
              LOWORD(__s1[1]) = v18;
              BYTE2(__s1[1]) = BYTE2(v18);
              BYTE3(__s1[1]) = BYTE3(v18);
              BYTE4(__s1[1]) = BYTE4(v18);
              BYTE5(__s1[1]) = BYTE5(v18);
              a2 = v88;
              if (!v43) {
                goto LABEL_153;
              }
              int v51 = memcmp(v43, __s1, BYTE6(v18));
            }
            goto LABEL_96;
          case 3uLL:
            memset(__s1, 0, 14);
            if (!v23) {
              goto LABEL_67;
            }
            if (v23 != 1)
            {
              uint64_t v65 = *(void *)(v17 + 16);
              uint64_t v66 = *(void *)(v17 + 24);
              swift_retain();
              swift_retain();
              uint64_t v61 = (char *)__DataStorage._bytes.getter();
              if (v61)
              {
                uint64_t v67 = __DataStorage._offset.getter();
                if (__OFSUB__(v65, v67)) {
                  goto LABEL_140;
                }
                v61 += v65 - v67;
              }
              BOOL v22 = __OFSUB__(v66, v65);
              int64_t v63 = v66 - v65;
              if (v22) {
                goto LABEL_135;
              }
              uint64_t v64 = __DataStorage._length.getter();
              if (!v61) {
                goto LABEL_152;
              }
LABEL_80:
              if (v64 >= v63) {
                size_t v68 = v63;
              }
              else {
                size_t v68 = v64;
              }
              int v51 = memcmp(__s1, v61, v68);
LABEL_96:
              swift_release();
              swift_release();
              if (v51) {
                goto LABEL_119;
              }
              goto LABEL_112;
            }
            uint64_t v52 = (int)v17;
            uint64_t v28 = (v17 >> 32) - (int)v17;
            if (v17 >> 32 < (int)v17) {
              goto LABEL_130;
            }
            swift_retain();
            uint64_t v53 = __DataStorage._bytes.getter();
            if (!v53) {
              goto LABEL_150;
            }
            uint64_t v30 = v53;
            uint64_t v54 = __DataStorage._offset.getter();
            BOOL v22 = __OFSUB__(v52, v54);
            uint64_t v32 = v52 - v54;
            if (v22) {
              goto LABEL_133;
            }
            break;
          default:
            __s1[0] = v16;
            LOWORD(__s1[1]) = v15;
            BYTE2(__s1[1]) = BYTE2(v15);
            BYTE3(__s1[1]) = BYTE3(v15);
            BYTE4(__s1[1]) = BYTE4(v15);
            BYTE5(__s1[1]) = BYTE5(v15);
            if (!v23)
            {
LABEL_67:
              uint64_t __s2 = v17;
              __int16 v95 = v18;
              char v96 = BYTE2(v18);
              char v97 = BYTE3(v18);
              char v98 = BYTE4(v18);
              char v99 = BYTE5(v18);
              if (memcmp(__s1, &__s2, BYTE6(v18))) {
                goto LABEL_119;
              }
              goto LABEL_112;
            }
            if (v23 != 1)
            {
              uint64_t v59 = *(void *)(v17 + 16);
              uint64_t v60 = *(void *)(v17 + 24);
              swift_retain();
              swift_retain();
              uint64_t v61 = (char *)__DataStorage._bytes.getter();
              if (v61)
              {
                uint64_t v62 = __DataStorage._offset.getter();
                if (__OFSUB__(v59, v62)) {
                  goto LABEL_139;
                }
                v61 += v59 - v62;
              }
              BOOL v22 = __OFSUB__(v60, v59);
              int64_t v63 = v60 - v59;
              if (v22) {
                goto LABEL_134;
              }
              uint64_t v64 = __DataStorage._length.getter();
              if (!v61) {
                goto LABEL_151;
              }
              goto LABEL_80;
            }
            uint64_t v27 = (int)v17;
            uint64_t v28 = (v17 >> 32) - (int)v17;
            if (v17 >> 32 < (int)v17) {
              goto LABEL_129;
            }
            swift_retain();
            uint64_t v29 = __DataStorage._bytes.getter();
            if (!v29)
            {
              __DataStorage._length.getter();
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __DataStorage._length.getter();
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
              JUMPOUT(0x1005B8080);
            }
            uint64_t v30 = v29;
            uint64_t v31 = __DataStorage._offset.getter();
            BOOL v22 = __OFSUB__(v27, v31);
            uint64_t v32 = v27 - v31;
            if (v22) {
              goto LABEL_131;
            }
            break;
        }
        uint64_t v55 = __DataStorage._length.getter();
        if (v55 >= v28) {
          size_t v56 = v28;
        }
        else {
          size_t v56 = v55;
        }
        int v41 = memcmp(__s1, (const void *)(v30 + v32), v56);
        uint64_t v57 = v89;
        unint64_t v58 = v18;
LABEL_111:
        sub_100510084(v57, v58);
        if (v41)
        {
LABEL_119:
          sub_1005C7E18((uint64_t)v91, type metadata accessor for CRLProto_Data);
          sub_1005C7E18((uint64_t)v11, type metadata accessor for CRLProto_Data);
          goto LABEL_120;
        }
LABEL_112:
        uint64_t v6 = v91;
        type metadata accessor for UnknownStorage();
        sub_1005C689C(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v83 = dispatch thunk of static Equatable.== infix(_:_:)();
        sub_1005C7E18((uint64_t)v6, type metadata accessor for CRLProto_Data);
        sub_1005C7E18((uint64_t)v11, type metadata accessor for CRLProto_Data);
        BOOL v85 = v14-- != 0;
        if (v83)
        {
          v13 += v90;
          if (v85) {
            continue;
          }
        }
        return v83 & 1;
      }
    }
    char v83 = 1;
  }
  else
  {
LABEL_120:
    char v83 = 0;
  }
  return v83 & 1;
}

uint64_t sub_1005B80B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  for (uint64_t i = 0; ; i += 48)
  {
    uint64_t result = 0;
    uint64_t v7 = (float32x2_t *)(a1 + i);
    uint64_t v8 = (float32x2_t *)(a2 + i);
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(*(float32x4_t *)(a1 + i + 32), *(float32x4_t *)(a2 + i + 32))), 0xFuLL))) & 1) == 0)break; {
    int32x2_t v9 = vceq_f32(v7[6], v8[6]);
    }
    if ((v9.i8[0] & 1) == 0 || (v9.i8[4] & 1) == 0) {
      break;
    }
    uint64_t v10 = (uint64_t)v7[9];
    uint64_t v11 = (uint64_t)v8[9];
    sub_1005C694C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((static CRExtensible.== infix(_:_:)() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    char v12 = sub_100ED60AC(v10, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0) {
      return 0;
    }
    if (!--v2) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1005B8234(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLSELibraryViewModeItemNode(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  char v12 = (char *)&v21 - v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13 != *(void *)(a2 + 16))
  {
LABEL_14:
    char v17 = 0;
    return v17 & 1;
  }
  if (v13 && a1 != a2)
  {
    unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v15 = *(void *)(v10 + 72);
    uint64_t v16 = v13 - 1;
    while (1)
    {
      sub_1005C7DB0(a1 + v14, (uint64_t)v12, type metadata accessor for CRLSELibraryViewModeItemNode);
      sub_1005C7DB0(a2 + v14, (uint64_t)v7, type metadata accessor for CRLSELibraryViewModeItemNode);
      if ((sub_100723608((uint64_t)v12, (uint64_t)v7) & 1) == 0) {
        break;
      }
      char v17 = sub_1005B8234(*(void *)&v12[*(int *)(v4 + 20)], *(void *)&v7[*(int *)(v4 + 20)]);
      sub_1005C7E18((uint64_t)v7, type metadata accessor for CRLSELibraryViewModeItemNode);
      sub_1005C7E18((uint64_t)v12, type metadata accessor for CRLSELibraryViewModeItemNode);
      BOOL v19 = v16-- != 0;
      if (v17)
      {
        v14 += v15;
        if (v19) {
          continue;
        }
      }
      return v17 & 1;
    }
    sub_1005C7E18((uint64_t)v7, type metadata accessor for CRLSELibraryViewModeItemNode);
    sub_1005C7E18((uint64_t)v12, type metadata accessor for CRLSELibraryViewModeItemNode);
    goto LABEL_14;
  }
  char v17 = 1;
  return v17 & 1;
}

uint64_t sub_1005B841C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLProto_PKStrokePathData.StrokePoint(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (uint64_t *)((char *)&v146 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8, v9);
  char v12 = (uint64_t *)((char *)&v146 - v11);
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13 != *(void *)(a2 + 16))
  {
LABEL_251:
    char v144 = 0;
    return v144 & 1;
  }
  if (v13 && a1 != a2)
  {
    unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v15 = *(void *)(v10 + 72);
    uint64_t v150 = a2;
    uint64_t v151 = v15;
    uint64_t v16 = v13 - 1;
    unint64_t v156 = v7;
    uint64_t v152 = a1;
    uint64_t v153 = v4;
    while (2)
    {
      uint64_t v155 = v16;
      sub_1005C7DB0(a1 + v14, (uint64_t)v12, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);
      unint64_t v154 = v14;
      sub_1005C7DB0(a2 + v14, (uint64_t)v7, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);
      uint64_t v18 = *v12;
      unint64_t v17 = v12[1];
      uint64_t v20 = *v7;
      unint64_t v19 = v7[1];
      uint64_t v21 = 0;
      switch(v17 >> 62)
      {
        case 1uLL:
          LODWORD(v21) = HIDWORD(v18) - v18;
          if (__OFSUB__(HIDWORD(v18), v18))
          {
            __break(1u);
LABEL_254:
            __break(1u);
LABEL_255:
            __break(1u);
LABEL_256:
            __break(1u);
LABEL_257:
            __break(1u);
LABEL_258:
            __break(1u);
LABEL_259:
            __break(1u);
LABEL_260:
            __break(1u);
LABEL_261:
            __break(1u);
LABEL_262:
            __break(1u);
LABEL_263:
            __break(1u);
LABEL_264:
            __break(1u);
LABEL_265:
            __break(1u);
LABEL_266:
            __break(1u);
LABEL_267:
            __break(1u);
LABEL_268:
            __break(1u);
LABEL_269:
            __break(1u);
LABEL_270:
            __break(1u);
LABEL_271:
            __break(1u);
LABEL_272:
            __break(1u);
LABEL_273:
            __break(1u);
LABEL_274:
            __break(1u);
LABEL_275:
            __break(1u);
LABEL_276:
            __break(1u);
LABEL_277:
            __break(1u);
LABEL_278:
            __break(1u);
LABEL_279:
            __break(1u);
LABEL_280:
            __break(1u);
LABEL_281:
            __break(1u);
LABEL_282:
            __break(1u);
LABEL_283:
            __break(1u);
LABEL_284:
            __break(1u);
LABEL_285:
            __break(1u);
LABEL_286:
            __break(1u);
LABEL_287:
            __break(1u);
LABEL_288:
            __break(1u);
LABEL_289:
            __break(1u);
LABEL_290:
            __break(1u);
LABEL_291:
            __break(1u);
LABEL_292:
            __break(1u);
LABEL_293:
            __break(1u);
LABEL_294:
            __break(1u);
LABEL_295:
            __break(1u);
LABEL_296:
            __break(1u);
LABEL_297:
            __break(1u);
LABEL_298:
            __break(1u);
LABEL_299:
            __break(1u);
LABEL_300:
            __break(1u);
LABEL_301:
            __break(1u);
LABEL_302:
            __break(1u);
LABEL_303:
            __break(1u);
LABEL_304:
            __break(1u);
LABEL_305:
            __break(1u);
LABEL_306:
            __break(1u);
LABEL_307:
            __break(1u);
LABEL_308:
            __break(1u);
LABEL_309:
            __break(1u);
LABEL_310:
            __break(1u);
          }
          uint64_t v21 = (int)v21;
LABEL_10:
          switch(v19 >> 62)
          {
            case 1uLL:
              LODWORD(v25) = HIDWORD(v20) - v20;
              if (__OFSUB__(HIDWORD(v20), v20)) {
                goto LABEL_255;
              }
              uint64_t v25 = (int)v25;
LABEL_19:
              if (v21 == v25)
              {
                if (v21 < 1) {
                  goto LABEL_37;
                }
                switch(v17 >> 62)
                {
                  case 1uLL:
                    if (v18 >> 32 < (int)v18) {
                      goto LABEL_285;
                    }
                    sub_100510D4C(*v12, v12[1]);
                    uint64_t v32 = __DataStorage._bytes.getter();
                    if (!v32) {
                      goto LABEL_32;
                    }
                    uint64_t v33 = __DataStorage._offset.getter();
                    if (__OFSUB__((int)v18, v33)) {
                      goto LABEL_300;
                    }
                    v32 += (int)v18 - v33;
LABEL_32:
                    a2 = v150;
                    __DataStorage._length.getter();
                    sub_1008D4048(v32, v20, v19, (char *)__s1);
                    sub_100510084(v18, v17);
                    break;
                  case 2uLL:
                    uint64_t v28 = *(void *)(v18 + 16);
                    uint64_t v29 = *(void *)(v18 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v30 = __DataStorage._bytes.getter();
                    if (!v30) {
                      goto LABEL_26;
                    }
                    uint64_t v31 = __DataStorage._offset.getter();
                    if (__OFSUB__(v28, v31)) {
                      goto LABEL_299;
                    }
                    v30 += v28 - v31;
LABEL_26:
                    if (__OFSUB__(v29, v28)) {
                      goto LABEL_286;
                    }
                    __DataStorage._length.getter();
                    sub_1008D4048(v30, v20, v19, (char *)__s1);
                    swift_release();
                    swift_release();
                    break;
                  case 3uLL:
                    memset(__s1, 0, 14);
                    goto LABEL_36;
                  default:
                    __s1[0] = *v12;
                    LOWORD(__s1[1]) = v17;
                    BYTE2(__s1[1]) = BYTE2(v17);
                    BYTE3(__s1[1]) = BYTE3(v17);
                    BYTE4(__s1[1]) = BYTE4(v17);
                    BYTE5(__s1[1]) = BYTE5(v17);
LABEL_36:
                    sub_1008D4048((uint64_t)__s1, v20, v19, &v157);
                    if (v157) {
                      goto LABEL_37;
                    }
                    goto LABEL_250;
                }
                uint64_t v7 = v156;
                if (__s1[0])
                {
LABEL_37:
                  uint64_t v35 = v12[2];
                  unint64_t v34 = v12[3];
                  uint64_t v37 = v7[2];
                  unint64_t v36 = v7[3];
                  uint64_t v38 = 0;
                  switch(v34 >> 62)
                  {
                    case 1uLL:
                      LODWORD(v38) = HIDWORD(v35) - v35;
                      if (__OFSUB__(HIDWORD(v35), v35)) {
                        goto LABEL_257;
                      }
                      uint64_t v38 = (int)v38;
LABEL_42:
                      switch(v36 >> 62)
                      {
                        case 1uLL:
                          LODWORD(v41) = HIDWORD(v37) - v37;
                          if (__OFSUB__(HIDWORD(v37), v37)) {
                            goto LABEL_260;
                          }
                          uint64_t v41 = (int)v41;
LABEL_51:
                          if (v38 == v41)
                          {
                            if (v38 < 1) {
                              goto LABEL_69;
                            }
                            switch(v34 >> 62)
                            {
                              case 1uLL:
                                if (v35 >> 32 < (int)v35) {
                                  goto LABEL_287;
                                }
                                sub_100510D4C(v12[2], v12[3]);
                                uint64_t v48 = __DataStorage._bytes.getter();
                                if (!v48) {
                                  goto LABEL_67;
                                }
                                uint64_t v49 = __DataStorage._offset.getter();
                                if (__OFSUB__((int)v35, v49)) {
                                  goto LABEL_302;
                                }
                                v48 += (int)v35 - v49;
LABEL_67:
                                a2 = v150;
                                __DataStorage._length.getter();
                                sub_1008D4048(v48, v37, v36, (char *)__s1);
                                sub_100510084(v35, v34);
                                break;
                              case 2uLL:
                                uint64_t v44 = *(void *)(v35 + 16);
                                uint64_t v45 = *(void *)(v35 + 24);
                                swift_retain();
                                swift_retain();
                                uint64_t v46 = __DataStorage._bytes.getter();
                                if (!v46) {
                                  goto LABEL_58;
                                }
                                uint64_t v47 = __DataStorage._offset.getter();
                                if (__OFSUB__(v44, v47)) {
                                  goto LABEL_301;
                                }
                                v46 += v44 - v47;
LABEL_58:
                                if (__OFSUB__(v45, v44)) {
                                  goto LABEL_288;
                                }
                                __DataStorage._length.getter();
                                sub_1008D4048(v46, v37, v36, (char *)__s1);
                                swift_release();
                                swift_release();
                                break;
                              case 3uLL:
                                memset(__s1, 0, 14);
                                goto LABEL_61;
                              default:
                                __s1[0] = v12[2];
                                LOWORD(__s1[1]) = v34;
                                BYTE2(__s1[1]) = BYTE2(v34);
                                BYTE3(__s1[1]) = BYTE3(v34);
                                BYTE4(__s1[1]) = BYTE4(v34);
                                BYTE5(__s1[1]) = BYTE5(v34);
LABEL_61:
                                sub_1008D4048((uint64_t)__s1, v37, v36, &v157);
                                if ((v157 & 1) == 0) {
                                  goto LABEL_250;
                                }
                                goto LABEL_69;
                            }
                            uint64_t v7 = v156;
                            if (__s1[0])
                            {
LABEL_69:
                              uint64_t v51 = v12[4];
                              unint64_t v50 = v12[5];
                              uint64_t v53 = v7[4];
                              unint64_t v52 = v7[5];
                              uint64_t v54 = 0;
                              switch(v50 >> 62)
                              {
                                case 1uLL:
                                  LODWORD(v54) = HIDWORD(v51) - v51;
                                  if (__OFSUB__(HIDWORD(v51), v51)) {
                                    goto LABEL_261;
                                  }
                                  uint64_t v54 = (int)v54;
LABEL_74:
                                  switch(v52 >> 62)
                                  {
                                    case 1uLL:
                                      LODWORD(v57) = HIDWORD(v53) - v53;
                                      if (__OFSUB__(HIDWORD(v53), v53)) {
                                        goto LABEL_264;
                                      }
                                      uint64_t v57 = (int)v57;
LABEL_83:
                                      if (v54 == v57)
                                      {
                                        if (v54 < 1) {
                                          goto LABEL_101;
                                        }
                                        switch(v50 >> 62)
                                        {
                                          case 1uLL:
                                            if (v51 >> 32 < (int)v51) {
                                              goto LABEL_289;
                                            }
                                            sub_100510D4C(v12[4], v12[5]);
                                            uint64_t v64 = __DataStorage._bytes.getter();
                                            if (!v64) {
                                              goto LABEL_99;
                                            }
                                            uint64_t v65 = __DataStorage._offset.getter();
                                            if (__OFSUB__((int)v51, v65)) {
                                              goto LABEL_304;
                                            }
                                            v64 += (int)v51 - v65;
LABEL_99:
                                            a2 = v150;
                                            __DataStorage._length.getter();
                                            sub_1008D4048(v64, v53, v52, (char *)__s1);
                                            sub_100510084(v51, v50);
                                            break;
                                          case 2uLL:
                                            uint64_t v60 = *(void *)(v51 + 16);
                                            uint64_t v61 = *(void *)(v51 + 24);
                                            swift_retain();
                                            swift_retain();
                                            uint64_t v62 = __DataStorage._bytes.getter();
                                            if (!v62) {
                                              goto LABEL_90;
                                            }
                                            uint64_t v63 = __DataStorage._offset.getter();
                                            if (__OFSUB__(v60, v63)) {
                                              goto LABEL_303;
                                            }
                                            v62 += v60 - v63;
LABEL_90:
                                            if (__OFSUB__(v61, v60)) {
                                              goto LABEL_290;
                                            }
                                            __DataStorage._length.getter();
                                            sub_1008D4048(v62, v53, v52, (char *)__s1);
                                            swift_release();
                                            swift_release();
                                            break;
                                          case 3uLL:
                                            memset(__s1, 0, 14);
                                            goto LABEL_93;
                                          default:
                                            __s1[0] = v12[4];
                                            LOWORD(__s1[1]) = v50;
                                            BYTE2(__s1[1]) = BYTE2(v50);
                                            BYTE3(__s1[1]) = BYTE3(v50);
                                            BYTE4(__s1[1]) = BYTE4(v50);
                                            BYTE5(__s1[1]) = BYTE5(v50);
LABEL_93:
                                            sub_1008D4048((uint64_t)__s1, v53, v52, &v157);
                                            if ((v157 & 1) == 0) {
                                              goto LABEL_250;
                                            }
                                            goto LABEL_101;
                                        }
                                        uint64_t v7 = v156;
                                        if (__s1[0])
                                        {
LABEL_101:
                                          uint64_t v67 = v12[6];
                                          unint64_t v66 = v12[7];
                                          uint64_t v69 = v7[6];
                                          unint64_t v68 = v7[7];
                                          uint64_t v70 = 0;
                                          switch(v66 >> 62)
                                          {
                                            case 1uLL:
                                              LODWORD(v70) = HIDWORD(v67) - v67;
                                              if (__OFSUB__(HIDWORD(v67), v67)) {
                                                goto LABEL_265;
                                              }
                                              uint64_t v70 = (int)v70;
LABEL_106:
                                              switch(v68 >> 62)
                                              {
                                                case 1uLL:
                                                  LODWORD(v73) = HIDWORD(v69) - v69;
                                                  if (__OFSUB__(HIDWORD(v69), v69)) {
                                                    goto LABEL_268;
                                                  }
                                                  uint64_t v73 = (int)v73;
LABEL_115:
                                                  if (v70 == v73)
                                                  {
                                                    if (v70 < 1) {
                                                      goto LABEL_133;
                                                    }
                                                    switch(v66 >> 62)
                                                    {
                                                      case 1uLL:
                                                        if (v67 >> 32 < (int)v67) {
                                                          goto LABEL_291;
                                                        }
                                                        sub_100510D4C(v12[6], v12[7]);
                                                        uint64_t v80 = __DataStorage._bytes.getter();
                                                        if (!v80) {
                                                          goto LABEL_128;
                                                        }
                                                        uint64_t v81 = __DataStorage._offset.getter();
                                                        if (__OFSUB__((int)v67, v81)) {
                                                          goto LABEL_306;
                                                        }
                                                        v80 += (int)v67 - v81;
LABEL_128:
                                                        a2 = v150;
                                                        __DataStorage._length.getter();
                                                        sub_1008D4048(v80, v69, v68, (char *)__s1);
                                                        sub_100510084(v67, v66);
                                                        break;
                                                      case 2uLL:
                                                        uint64_t v76 = *(void *)(v67 + 16);
                                                        uint64_t v77 = *(void *)(v67 + 24);
                                                        swift_retain();
                                                        swift_retain();
                                                        uint64_t v78 = __DataStorage._bytes.getter();
                                                        if (!v78) {
                                                          goto LABEL_122;
                                                        }
                                                        uint64_t v79 = __DataStorage._offset.getter();
                                                        if (__OFSUB__(v76, v79)) {
                                                          goto LABEL_305;
                                                        }
                                                        v78 += v76 - v79;
LABEL_122:
                                                        if (__OFSUB__(v77, v76)) {
                                                          goto LABEL_292;
                                                        }
                                                        __DataStorage._length.getter();
                                                        sub_1008D4048(v78, v69, v68, (char *)__s1);
                                                        swift_release();
                                                        swift_release();
                                                        break;
                                                      case 3uLL:
                                                        memset(__s1, 0, 14);
                                                        goto LABEL_132;
                                                      default:
                                                        __s1[0] = v12[6];
                                                        LOWORD(__s1[1]) = v66;
                                                        BYTE2(__s1[1]) = BYTE2(v66);
                                                        BYTE3(__s1[1]) = BYTE3(v66);
                                                        BYTE4(__s1[1]) = BYTE4(v66);
                                                        BYTE5(__s1[1]) = BYTE5(v66);
LABEL_132:
                                                        sub_1008D4048((uint64_t)__s1, v69, v68, &v157);
                                                        if (v157) {
                                                          goto LABEL_133;
                                                        }
                                                        goto LABEL_250;
                                                    }
                                                    uint64_t v7 = v156;
                                                    if (__s1[0])
                                                    {
LABEL_133:
                                                      uint64_t v83 = v12[8];
                                                      unint64_t v82 = v12[9];
                                                      uint64_t v85 = v7[8];
                                                      unint64_t v84 = v7[9];
                                                      uint64_t v86 = 0;
                                                      switch(v82 >> 62)
                                                      {
                                                        case 1uLL:
                                                          LODWORD(v86) = HIDWORD(v83) - v83;
                                                          if (__OFSUB__(HIDWORD(v83), v83)) {
                                                            goto LABEL_270;
                                                          }
                                                          uint64_t v86 = (int)v86;
LABEL_138:
                                                          switch(v84 >> 62)
                                                          {
                                                            case 1uLL:
                                                              LODWORD(v89) = HIDWORD(v85) - v85;
                                                              if (__OFSUB__(HIDWORD(v85), v85)) {
                                                                goto LABEL_272;
                                                              }
                                                              uint64_t v89 = (int)v89;
LABEL_147:
                                                              if (v86 == v89)
                                                              {
                                                                if (v86 < 1) {
                                                                  goto LABEL_165;
                                                                }
                                                                switch(v82 >> 62)
                                                                {
                                                                  case 1uLL:
                                                                    if (v83 >> 32 < (int)v83) {
                                                                      goto LABEL_293;
                                                                    }
                                                                    sub_100510D4C(v12[8], v12[9]);
                                                                    uint64_t v96 = __DataStorage._bytes.getter();
                                                                    if (!v96) {
                                                                      goto LABEL_163;
                                                                    }
                                                                    uint64_t v97 = __DataStorage._offset.getter();
                                                                    if (__OFSUB__((int)v83, v97)) {
                                                                      goto LABEL_308;
                                                                    }
                                                                    v96 += (int)v83 - v97;
LABEL_163:
                                                                    a2 = v150;
                                                                    __DataStorage._length.getter();
                                                                    sub_1008D4048(v96, v85, v84, (char *)__s1);
                                                                    sub_100510084(v83, v82);
                                                                    break;
                                                                  case 2uLL:
                                                                    uint64_t v92 = *(void *)(v83 + 16);
                                                                    uint64_t v93 = *(void *)(v83 + 24);
                                                                    swift_retain();
                                                                    swift_retain();
                                                                    uint64_t v94 = __DataStorage._bytes.getter();
                                                                    if (!v94) {
                                                                      goto LABEL_154;
                                                                    }
                                                                    uint64_t v95 = __DataStorage._offset.getter();
                                                                    if (__OFSUB__(v92, v95)) {
                                                                      goto LABEL_307;
                                                                    }
                                                                    v94 += v92 - v95;
LABEL_154:
                                                                    if (__OFSUB__(v93, v92)) {
                                                                      goto LABEL_294;
                                                                    }
                                                                    __DataStorage._length.getter();
                                                                    sub_1008D4048(v94, v85, v84, (char *)__s1);
                                                                    swift_release();
                                                                    swift_release();
                                                                    break;
                                                                  case 3uLL:
                                                                    memset(__s1, 0, 14);
                                                                    goto LABEL_157;
                                                                  default:
                                                                    __s1[0] = v12[8];
                                                                    LOWORD(__s1[1]) = v82;
                                                                    BYTE2(__s1[1]) = BYTE2(v82);
                                                                    BYTE3(__s1[1]) = BYTE3(v82);
                                                                    BYTE4(__s1[1]) = BYTE4(v82);
                                                                    BYTE5(__s1[1]) = BYTE5(v82);
LABEL_157:
                                                                    sub_1008D4048((uint64_t)__s1, v85, v84, &v157);
                                                                    if ((v157 & 1) == 0) {
                                                                      goto LABEL_250;
                                                                    }
                                                                    goto LABEL_165;
                                                                }
                                                                uint64_t v7 = v156;
                                                                if (__s1[0])
                                                                {
LABEL_165:
                                                                  uint64_t v99 = v12[10];
                                                                  unint64_t v98 = v12[11];
                                                                  uint64_t v101 = v7[10];
                                                                  unint64_t v100 = v7[11];
                                                                  uint64_t v102 = 0;
                                                                  switch(v98 >> 62)
                                                                  {
                                                                    case 1uLL:
                                                                      LODWORD(v102) = HIDWORD(v99) - v99;
                                                                      if (__OFSUB__(HIDWORD(v99), v99)) {
                                                                        goto LABEL_274;
                                                                      }
                                                                      uint64_t v102 = (int)v102;
LABEL_170:
                                                                      switch(v100 >> 62)
                                                                      {
                                                                        case 1uLL:
                                                                          LODWORD(v105) = HIDWORD(v101) - v101;
                                                                          if (__OFSUB__(HIDWORD(v101), v101)) {
                                                                            goto LABEL_276;
                                                                          }
                                                                          uint64_t v105 = (int)v105;
LABEL_179:
                                                                          if (v102 == v105)
                                                                          {
                                                                            if (v102 < 1) {
                                                                              goto LABEL_197;
                                                                            }
                                                                            switch(v98 >> 62)
                                                                            {
                                                                              case 1uLL:
                                                                                if (v99 >> 32 < (int)v99) {
                                                                                  goto LABEL_295;
                                                                                }
                                                                                sub_100510D4C(v12[10], v12[11]);
                                                                                uint64_t v112 = __DataStorage._bytes.getter();
                                                                                if (!v112) {
                                                                                  goto LABEL_195;
                                                                                }
                                                                                uint64_t v113 = __DataStorage._offset.getter();
                                                                                if (__OFSUB__((int)v99, v113)) {
                                                                                  goto LABEL_310;
                                                                                }
                                                                                v112 += (int)v99 - v113;
LABEL_195:
                                                                                a2 = v150;
                                                                                __DataStorage._length.getter();
                                                                                sub_1008D4048(v112, v101, v100, (char *)__s1);
                                                                                sub_100510084(v99, v98);
                                                                                break;
                                                                              case 2uLL:
                                                                                uint64_t v108 = *(void *)(v99 + 16);
                                                                                uint64_t v109 = *(void *)(v99 + 24);
                                                                                swift_retain();
                                                                                swift_retain();
                                                                                uint64_t v110 = __DataStorage._bytes.getter();
                                                                                if (!v110) {
                                                                                  goto LABEL_186;
                                                                                }
                                                                                uint64_t v111 = __DataStorage._offset.getter();
                                                                                if (__OFSUB__(v108, v111)) {
                                                                                  goto LABEL_309;
                                                                                }
                                                                                v110 += v108 - v111;
LABEL_186:
                                                                                if (__OFSUB__(v109, v108)) {
                                                                                  goto LABEL_296;
                                                                                }
                                                                                __DataStorage._length.getter();
                                                                                sub_1008D4048(v110, v101, v100, (char *)__s1);
                                                                                swift_release();
                                                                                swift_release();
                                                                                break;
                                                                              case 3uLL:
                                                                                memset(__s1, 0, 14);
                                                                                goto LABEL_189;
                                                                              default:
                                                                                __s1[0] = v12[10];
                                                                                LOWORD(__s1[1]) = v98;
                                                                                BYTE2(__s1[1]) = BYTE2(v98);
                                                                                BYTE3(__s1[1]) = BYTE3(v98);
                                                                                BYTE4(__s1[1]) = BYTE4(v98);
                                                                                BYTE5(__s1[1]) = BYTE5(v98);
LABEL_189:
                                                                                sub_1008D4048((uint64_t)__s1, v101, v100, &v157);
                                                                                if ((v157 & 1) == 0) {
                                                                                  goto LABEL_250;
                                                                                }
                                                                                goto LABEL_197;
                                                                            }
                                                                            uint64_t v7 = v156;
                                                                            if (__s1[0])
                                                                            {
LABEL_197:
                                                                              uint64_t v114 = v12[12];
                                                                              unint64_t v115 = v12[13];
                                                                              uint64_t v117 = v7[12];
                                                                              unint64_t v116 = v7[13];
                                                                              uint64_t v118 = 0;
                                                                              switch(v115 >> 62)
                                                                              {
                                                                                case 1uLL:
                                                                                  LODWORD(v118) = HIDWORD(v114) - v114;
                                                                                  if (__OFSUB__(HIDWORD(v114), v114))
                                                                                  {
                                                                                    goto LABEL_277;
                                                                                  }
                                                                                  uint64_t v118 = (int)v118;
LABEL_202:
                                                                                  switch(v116 >> 62)
                                                                                  {
                                                                                    case 1uLL:
                                                                                      LODWORD(v121) = HIDWORD(v117) - v117;
                                                                                      if (__OFSUB__(HIDWORD(v117), v117))
                                                                                      {
                                                                                        goto LABEL_280;
                                                                                      }
                                                                                      uint64_t v121 = (int)v121;
LABEL_211:
                                                                                      if (v118 == v121)
                                                                                      {
                                                                                        if (v118 < 1) {
                                                                                          goto LABEL_221;
                                                                                        }
                                                                                        sub_100510D4C(v7[12], v7[13]);
                                                                                        sub_100510D4C(v117, v116);
                                                                                        switch(v115 >> 62)
                                                                                        {
                                                                                          case 1uLL:
                                                                                            if (v114 >> 32 < (int)v114) {
                                                                                              goto LABEL_297;
                                                                                            }
                                                                                            sub_100510D4C(v117, v116);
                                                                                            sub_100510D4C(v117, v116);
                                                                                            sub_100510D4C(v117, v116);
                                                                                            sub_100510D4C(v114, v115);
                                                                                            char v128 = sub_1008D43F0((int)v114, v114 >> 32, v115 & 0x3FFFFFFFFFFFFFFFLL, v117, v116);
                                                                                            sub_100510084(v117, v116);
                                                                                            sub_100510084(v114, v115);
                                                                                            uint64_t v7 = v156;
                                                                                            break;
                                                                                          case 2uLL:
                                                                                            uint64_t v126 = *(void *)(v114 + 16);
                                                                                            uint64_t v127 = *(void *)(v114 + 24);
                                                                                            sub_100510D4C(v117, v116);
                                                                                            sub_100510D4C(v117, v116);
                                                                                            sub_100510D4C(v117, v116);
                                                                                            swift_retain();
                                                                                            swift_retain();
                                                                                            char v128 = sub_1008D43F0(v126, v127, v115 & 0x3FFFFFFFFFFFFFFFLL, v117, v116);
                                                                                            sub_100510084(v117, v116);
                                                                                            swift_release();
                                                                                            swift_release();
                                                                                            break;
                                                                                          case 3uLL:
                                                                                            sub_100510D4C(v117, v116);
                                                                                            sub_100510D4C(v117, v116);
                                                                                            sub_100510D4C(v117, v116);
                                                                                            unint64_t v124 = v148 & 0xFF00000000000000;
                                                                                            uint64_t v125 = 0;
                                                                                            v148 &= 0xFF00000000000000;
                                                                                            goto LABEL_219;
                                                                                          default:
                                                                                            sub_100510D4C(v117, v116);
                                                                                            sub_100510D4C(v117, v116);
                                                                                            sub_100510D4C(v117, v116);
                                                                                            unint64_t v124 = v149 & 0xFF00000000000000 | v115 & 0xFFFFFFFFFFFFFFLL;
                                                                                            uint64_t v125 = v114;
                                                                                            unint64_t v149 = v124;
LABEL_219:
                                                                                            char v128 = sub_1008D4318(v125, v124, v117, v116);
                                                                                            sub_100510084(v117, v116);
                                                                                            break;
                                                                                        }
                                                                                        sub_100510084(v117, v116);
                                                                                        sub_100510084(v117, v116);
                                                                                        sub_100510084(v117, v116);
                                                                                        sub_100510084(v117, v116);
                                                                                        if (v128)
                                                                                        {
LABEL_221:
                                                                                          uint64_t v129 = v12[14];
                                                                                          unint64_t v130 = v12[15];
                                                                                          uint64_t v132 = v7[14];
                                                                                          unint64_t v131 = v7[15];
                                                                                          uint64_t v133 = 0;
                                                                                          switch(v130 >> 62)
                                                                                          {
                                                                                            case 1uLL:
                                                                                              LODWORD(v133) = HIDWORD(v129) - v129;
                                                                                              if (__OFSUB__(HIDWORD(v129), v129))
                                                                                              {
                                                                                                goto LABEL_281;
                                                                                              }
                                                                                              uint64_t v133 = (int)v133;
LABEL_226:
                                                                                              switch(v131 >> 62)
                                                                                              {
                                                                                                case 1uLL:
                                                                                                  LODWORD(v136) = HIDWORD(v132) - v132;
                                                                                                  if (__OFSUB__(HIDWORD(v132), v132)) {
                                                                                                    goto LABEL_283;
                                                                                                  }
                                                                                                  uint64_t v136 = (int)v136;
LABEL_235:
                                                                                                  if (v133 != v136) {
                                                                                                    goto LABEL_250;
                                                                                                  }
                                                                                                  if (v133 >= 1)
                                                                                                  {
                                                                                                    sub_100510D4C(v7[14], v7[15]);
                                                                                                    sub_100510D4C(v132, v131);
                                                                                                    switch(v130 >> 62)
                                                                                                    {
                                                                                                      case 1uLL:
                                                                                                        if (v129 >> 32 < (int)v129) {
                                                                                                          goto LABEL_298;
                                                                                                        }
                                                                                                        sub_100510D4C(v132, v131);
                                                                                                        sub_100510D4C(v132, v131);
                                                                                                        sub_100510D4C(v132, v131);
                                                                                                        sub_100510D4C(v129, v130);
                                                                                                        char v143 = sub_1008D43F0((int)v129, v129 >> 32, v130 & 0x3FFFFFFFFFFFFFFFLL, v132, v131);
                                                                                                        sub_100510084(v132, v131);
                                                                                                        sub_100510084(v129, v130);
LABEL_244:
                                                                                                        uint64_t v7 = v156;
                                                                                                        break;
                                                                                                      case 2uLL:
                                                                                                        uint64_t v141 = *(void *)(v129 + 16);
                                                                                                        uint64_t v142 = *(void *)(v129 + 24);
                                                                                                        sub_100510D4C(v132, v131);
                                                                                                        sub_100510D4C(v132, v131);
                                                                                                        sub_100510D4C(v132, v131);
                                                                                                        swift_retain();
                                                                                                        swift_retain();
                                                                                                        char v143 = sub_1008D43F0(v141, v142, v130 & 0x3FFFFFFFFFFFFFFFLL, v132, v131);
                                                                                                        sub_100510084(v132, v131);
                                                                                                        swift_release();
                                                                                                        swift_release();
                                                                                                        goto LABEL_244;
                                                                                                      case 3uLL:
                                                                                                        sub_100510D4C(v132, v131);
                                                                                                        sub_100510D4C(v132, v131);
                                                                                                        sub_100510D4C(v132, v131);
                                                                                                        unint64_t v139 = v146 & 0xFF00000000000000;
                                                                                                        uint64_t v140 = 0;
                                                                                                        v146 &= 0xFF00000000000000;
                                                                                                        goto LABEL_241;
                                                                                                      default:
                                                                                                        sub_100510D4C(v132, v131);
                                                                                                        sub_100510D4C(v132, v131);
                                                                                                        sub_100510D4C(v132, v131);
                                                                                                        unint64_t v139 = v147 & 0xFF00000000000000 | v130 & 0xFFFFFFFFFFFFFFLL;
                                                                                                        uint64_t v140 = v129;
                                                                                                        unint64_t v147 = v139;
LABEL_241:
                                                                                                        char v143 = sub_1008D4318(v140, v139, v132, v131);
                                                                                                        sub_100510084(v132, v131);
                                                                                                        break;
                                                                                                    }
                                                                                                    sub_100510084(v132, v131);
                                                                                                    sub_100510084(v132, v131);
                                                                                                    sub_100510084(v132, v131);
                                                                                                    sub_100510084(v132, v131);
                                                                                                    if ((v143 & 1) == 0) {
                                                                                                      goto LABEL_250;
                                                                                                    }
                                                                                                  }
LABEL_246:
                                                                                                  type metadata accessor for UnknownStorage();
                                                                                                  sub_1005C689C(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
                                                                                                  uint64_t v7 = v156;
                                                                                                  char v144 = dispatch thunk of static Equatable.== infix(_:_:)();
                                                                                                  sub_1005C7E18((uint64_t)v7, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);
                                                                                                  sub_1005C7E18((uint64_t)v12, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);
                                                                                                  uint64_t v16 = v155 - 1;
                                                                                                  if ((v144 & 1) == 0) {
                                                                                                    return v144 & 1;
                                                                                                  }
                                                                                                  a1 = v152;
                                                                                                  unint64_t v14 = v154 + v151;
                                                                                                  if (!v155) {
                                                                                                    return v144 & 1;
                                                                                                  }
                                                                                                  continue;
                                                                                                case 2uLL:
                                                                                                  uint64_t v138 = *(void *)(v132 + 16);
                                                                                                  uint64_t v137 = *(void *)(v132 + 24);
                                                                                                  BOOL v24 = __OFSUB__(v137, v138);
                                                                                                  uint64_t v136 = v137 - v138;
                                                                                                  if (!v24) {
                                                                                                    goto LABEL_235;
                                                                                                  }
                                                                                                  goto LABEL_284;
                                                                                                case 3uLL:
                                                                                                  if (v133) {
                                                                                                    goto LABEL_250;
                                                                                                  }
                                                                                                  goto LABEL_246;
                                                                                                default:
                                                                                                  uint64_t v136 = BYTE6(v131);
                                                                                                  goto LABEL_235;
                                                                                              }
                                                                                            case 2uLL:
                                                                                              uint64_t v135 = *(void *)(v129 + 16);
                                                                                              uint64_t v134 = *(void *)(v129 + 24);
                                                                                              BOOL v24 = __OFSUB__(v134, v135);
                                                                                              uint64_t v133 = v134 - v135;
                                                                                              if (!v24) {
                                                                                                goto LABEL_226;
                                                                                              }
                                                                                              goto LABEL_282;
                                                                                            case 3uLL:
                                                                                              goto LABEL_226;
                                                                                            default:
                                                                                              uint64_t v133 = BYTE6(v130);
                                                                                              goto LABEL_226;
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                      break;
                                                                                    case 2uLL:
                                                                                      uint64_t v123 = *(void *)(v117 + 16);
                                                                                      uint64_t v122 = *(void *)(v117 + 24);
                                                                                      BOOL v24 = __OFSUB__(v122, v123);
                                                                                      uint64_t v121 = v122 - v123;
                                                                                      if (!v24) {
                                                                                        goto LABEL_211;
                                                                                      }
                                                                                      goto LABEL_279;
                                                                                    case 3uLL:
                                                                                      if (v118) {
                                                                                        goto LABEL_250;
                                                                                      }
                                                                                      goto LABEL_221;
                                                                                    default:
                                                                                      uint64_t v121 = BYTE6(v116);
                                                                                      goto LABEL_211;
                                                                                  }
                                                                                  break;
                                                                                case 2uLL:
                                                                                  uint64_t v120 = *(void *)(v114 + 16);
                                                                                  uint64_t v119 = *(void *)(v114 + 24);
                                                                                  BOOL v24 = __OFSUB__(v119, v120);
                                                                                  uint64_t v118 = v119 - v120;
                                                                                  if (!v24) {
                                                                                    goto LABEL_202;
                                                                                  }
                                                                                  goto LABEL_278;
                                                                                case 3uLL:
                                                                                  goto LABEL_202;
                                                                                default:
                                                                                  uint64_t v118 = BYTE6(v115);
                                                                                  goto LABEL_202;
                                                                              }
                                                                            }
                                                                          }
                                                                          break;
                                                                        case 2uLL:
                                                                          uint64_t v107 = *(void *)(v101 + 16);
                                                                          uint64_t v106 = *(void *)(v101 + 24);
                                                                          BOOL v24 = __OFSUB__(v106, v107);
                                                                          uint64_t v105 = v106 - v107;
                                                                          if (!v24) {
                                                                            goto LABEL_179;
                                                                          }
                                                                          goto LABEL_275;
                                                                        case 3uLL:
                                                                          if (v102) {
                                                                            goto LABEL_250;
                                                                          }
                                                                          goto LABEL_197;
                                                                        default:
                                                                          uint64_t v105 = BYTE6(v100);
                                                                          goto LABEL_179;
                                                                      }
                                                                      break;
                                                                    case 2uLL:
                                                                      uint64_t v104 = *(void *)(v99 + 16);
                                                                      uint64_t v103 = *(void *)(v99 + 24);
                                                                      BOOL v24 = __OFSUB__(v103, v104);
                                                                      uint64_t v102 = v103 - v104;
                                                                      if (!v24) {
                                                                        goto LABEL_170;
                                                                      }
                                                                      goto LABEL_273;
                                                                    case 3uLL:
                                                                      goto LABEL_170;
                                                                    default:
                                                                      uint64_t v102 = BYTE6(v98);
                                                                      goto LABEL_170;
                                                                  }
                                                                }
                                                              }
                                                              break;
                                                            case 2uLL:
                                                              uint64_t v91 = *(void *)(v85 + 16);
                                                              uint64_t v90 = *(void *)(v85 + 24);
                                                              BOOL v24 = __OFSUB__(v90, v91);
                                                              uint64_t v89 = v90 - v91;
                                                              if (!v24) {
                                                                goto LABEL_147;
                                                              }
                                                              goto LABEL_271;
                                                            case 3uLL:
                                                              if (v86) {
                                                                goto LABEL_250;
                                                              }
                                                              goto LABEL_165;
                                                            default:
                                                              uint64_t v89 = BYTE6(v84);
                                                              goto LABEL_147;
                                                          }
                                                          break;
                                                        case 2uLL:
                                                          uint64_t v88 = *(void *)(v83 + 16);
                                                          uint64_t v87 = *(void *)(v83 + 24);
                                                          BOOL v24 = __OFSUB__(v87, v88);
                                                          uint64_t v86 = v87 - v88;
                                                          if (!v24) {
                                                            goto LABEL_138;
                                                          }
                                                          goto LABEL_269;
                                                        case 3uLL:
                                                          goto LABEL_138;
                                                        default:
                                                          uint64_t v86 = BYTE6(v82);
                                                          goto LABEL_138;
                                                      }
                                                    }
                                                  }
                                                  break;
                                                case 2uLL:
                                                  uint64_t v75 = *(void *)(v69 + 16);
                                                  uint64_t v74 = *(void *)(v69 + 24);
                                                  BOOL v24 = __OFSUB__(v74, v75);
                                                  uint64_t v73 = v74 - v75;
                                                  if (!v24) {
                                                    goto LABEL_115;
                                                  }
                                                  goto LABEL_267;
                                                case 3uLL:
                                                  if (v70) {
                                                    goto LABEL_250;
                                                  }
                                                  goto LABEL_133;
                                                default:
                                                  uint64_t v73 = BYTE6(v68);
                                                  goto LABEL_115;
                                              }
                                              break;
                                            case 2uLL:
                                              uint64_t v72 = *(void *)(v67 + 16);
                                              uint64_t v71 = *(void *)(v67 + 24);
                                              BOOL v24 = __OFSUB__(v71, v72);
                                              uint64_t v70 = v71 - v72;
                                              if (!v24) {
                                                goto LABEL_106;
                                              }
                                              goto LABEL_266;
                                            case 3uLL:
                                              goto LABEL_106;
                                            default:
                                              uint64_t v70 = BYTE6(v66);
                                              goto LABEL_106;
                                          }
                                        }
                                      }
                                      break;
                                    case 2uLL:
                                      uint64_t v59 = *(void *)(v53 + 16);
                                      uint64_t v58 = *(void *)(v53 + 24);
                                      BOOL v24 = __OFSUB__(v58, v59);
                                      uint64_t v57 = v58 - v59;
                                      if (!v24) {
                                        goto LABEL_83;
                                      }
                                      goto LABEL_263;
                                    case 3uLL:
                                      if (v54) {
                                        goto LABEL_250;
                                      }
                                      goto LABEL_101;
                                    default:
                                      uint64_t v57 = BYTE6(v52);
                                      goto LABEL_83;
                                  }
                                  break;
                                case 2uLL:
                                  uint64_t v56 = *(void *)(v51 + 16);
                                  uint64_t v55 = *(void *)(v51 + 24);
                                  BOOL v24 = __OFSUB__(v55, v56);
                                  uint64_t v54 = v55 - v56;
                                  if (!v24) {
                                    goto LABEL_74;
                                  }
                                  goto LABEL_262;
                                case 3uLL:
                                  goto LABEL_74;
                                default:
                                  uint64_t v54 = BYTE6(v50);
                                  goto LABEL_74;
                              }
                            }
                          }
                          break;
                        case 2uLL:
                          uint64_t v43 = *(void *)(v37 + 16);
                          uint64_t v42 = *(void *)(v37 + 24);
                          BOOL v24 = __OFSUB__(v42, v43);
                          uint64_t v41 = v42 - v43;
                          if (!v24) {
                            goto LABEL_51;
                          }
                          goto LABEL_259;
                        case 3uLL:
                          if (v38) {
                            goto LABEL_250;
                          }
                          goto LABEL_69;
                        default:
                          uint64_t v41 = BYTE6(v36);
                          goto LABEL_51;
                      }
                      break;
                    case 2uLL:
                      uint64_t v40 = *(void *)(v35 + 16);
                      uint64_t v39 = *(void *)(v35 + 24);
                      BOOL v24 = __OFSUB__(v39, v40);
                      uint64_t v38 = v39 - v40;
                      if (!v24) {
                        goto LABEL_42;
                      }
                      goto LABEL_258;
                    case 3uLL:
                      goto LABEL_42;
                    default:
                      uint64_t v38 = BYTE6(v34);
                      goto LABEL_42;
                  }
                }
              }
LABEL_250:
              sub_1005C7E18((uint64_t)v7, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);
              sub_1005C7E18((uint64_t)v12, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);
              break;
            case 2uLL:
              uint64_t v27 = *(void *)(v20 + 16);
              uint64_t v26 = *(void *)(v20 + 24);
              BOOL v24 = __OFSUB__(v26, v27);
              uint64_t v25 = v26 - v27;
              if (!v24) {
                goto LABEL_19;
              }
              goto LABEL_256;
            case 3uLL:
              if (v21) {
                goto LABEL_250;
              }
              goto LABEL_37;
            default:
              uint64_t v25 = BYTE6(v19);
              goto LABEL_19;
          }
          break;
        case 2uLL:
          uint64_t v23 = *(void *)(v18 + 16);
          uint64_t v22 = *(void *)(v18 + 24);
          BOOL v24 = __OFSUB__(v22, v23);
          uint64_t v21 = v22 - v23;
          if (!v24) {
            goto LABEL_10;
          }
          goto LABEL_254;
        case 3uLL:
          goto LABEL_10;
        default:
          uint64_t v21 = BYTE6(v17);
          goto LABEL_10;
      }
      goto LABEL_251;
    }
  }
  char v144 = 1;
  return v144 & 1;
}

BOOL sub_1005B9E9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32)) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 36);
  uint64_t v4 = (int *)(a2 + 36);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    int v8 = *v3++;
    int v7 = v8;
    int v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1005B9F08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLProto_Data(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v87 = (uint64_t *)((char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_1016745C0);
  __chkstk_darwin(v8, v9);
  uint64_t v91 = (uint64_t)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v11 - 8, v12);
  unint64_t v14 = (uint64_t *)((char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v75 - v17;
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v75 - v21;
  uint64_t v92 = type metadata accessor for CRLProto_ObjectMetadata.AssetInfo(0);
  __chkstk_darwin(v92, v23);
  uint64_t v25 = (uint64_t *)((char *)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v26, v27);
  uint64_t v30 = (uint64_t *)((char *)&v75 - v29);
  uint64_t v31 = *(void *)(a1 + 16);
  uint64_t v90 = a2;
  if (v31 != *(void *)(a2 + 16)) {
    goto LABEL_56;
  }
  if (!v31 || a1 == v90)
  {
    char v72 = 1;
    return v72 & 1;
  }
  uint64_t v85 = v4;
  uint64_t v86 = v18;
  uint64_t v81 = a1;
  unint64_t v82 = v14;
  uint64_t v78 = 0;
  uint64_t v79 = v8;
  unint64_t v32 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v83 = (char *)&v75 - v29;
  unint64_t v84 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  uint64_t v80 = *(void *)(v28 + 72);
  uint64_t v33 = v31 - 1;
  while (1)
  {
    uint64_t v89 = v33;
    sub_1005C7DB0(a1 + v32, (uint64_t)v30, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
    unint64_t v88 = v32;
    sub_1005C7DB0(v90 + v32, (uint64_t)v25, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
    uint64_t v34 = v92;
    sub_100522E9C((uint64_t)v30 + *(int *)(v92 + 28), (uint64_t)v22, (uint64_t *)&unk_101674160);
    uint64_t v35 = v25;
    uint64_t v36 = (uint64_t)v25 + *(int *)(v34 + 28);
    uint64_t v37 = (uint64_t)v22;
    uint64_t v38 = (uint64_t)v86;
    sub_100522E9C(v36, (uint64_t)v86, (uint64_t *)&unk_101674160);
    uint64_t v39 = v91;
    uint64_t v40 = v91 + *(int *)(v8 + 48);
    sub_100522E9C(v37, v91, (uint64_t *)&unk_101674160);
    sub_100522E9C(v38, v40, (uint64_t *)&unk_101674160);
    uint64_t v41 = *v84;
    if ((*v84)(v39, 1, v4) != 1) {
      break;
    }
    sub_100522F00(v38, (uint64_t *)&unk_101674160);
    sub_100522F00(v37, (uint64_t *)&unk_101674160);
    if (v41(v40, 1, v4) != 1)
    {
      uint64_t v39 = v91;
      uint64_t v25 = v35;
      uint64_t v30 = v83;
      uint64_t v73 = (uint64_t *)&unk_1016745C0;
      goto LABEL_54;
    }
    uint64_t v22 = (char *)v37;
    sub_100522F00(v91, (uint64_t *)&unk_101674160);
    uint64_t v25 = v35;
    uint64_t v30 = v83;
LABEL_42:
    if ((*v30 != *v25 || v30[1] != v25[1]) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
      || v30[2] != v25[2])
    {
      goto LABEL_55;
    }
    type metadata accessor for UnknownStorage();
    sub_1005C689C(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v72 = dispatch thunk of static Equatable.== infix(_:_:)();
    sub_1005C7E18((uint64_t)v25, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
    sub_1005C7E18((uint64_t)v30, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
    uint64_t v33 = v89 - 1;
    if (v72)
    {
      a1 = v81;
      unint64_t v32 = v88 + v80;
      uint64_t v4 = v85;
      if (v89) {
        continue;
      }
    }
    return v72 & 1;
  }
  uint64_t v42 = v82;
  sub_100522E9C(v39, (uint64_t)v82, (uint64_t *)&unk_101674160);
  if (v41(v40, 1, v4) != 1)
  {
    uint64_t v43 = v40;
    uint64_t v44 = v87;
    sub_1005C68E4(v43, (uint64_t)v87, type metadata accessor for CRLProto_Data);
    uint64_t v46 = *v42;
    unint64_t v45 = v42[1];
    uint64_t v48 = *v44;
    unint64_t v47 = v44[1];
    uint64_t v49 = 0;
    uint64_t v22 = (char *)v37;
    uint64_t v25 = v35;
    uint64_t v30 = v83;
    switch(v45 >> 62)
    {
      case 1uLL:
        LODWORD(v49) = HIDWORD(v46) - v46;
        if (__OFSUB__(HIDWORD(v46), v46))
        {
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
        }
        uint64_t v49 = (int)v49;
LABEL_14:
        switch(v47 >> 62)
        {
          case 1uLL:
            LODWORD(v53) = HIDWORD(v48) - v48;
            if (__OFSUB__(HIDWORD(v48), v48)) {
              goto LABEL_60;
            }
            uint64_t v53 = (int)v53;
LABEL_19:
            if (v49 != v53) {
              goto LABEL_50;
            }
            if (v49 < 1) {
              goto LABEL_41;
            }
            break;
          case 2uLL:
            uint64_t v55 = *(void *)(v48 + 16);
            uint64_t v54 = *(void *)(v48 + 24);
            BOOL v52 = __OFSUB__(v54, v55);
            uint64_t v53 = v54 - v55;
            if (!v52) {
              goto LABEL_19;
            }
            goto LABEL_61;
          case 3uLL:
            if (v49) {
              goto LABEL_50;
            }
            goto LABEL_41;
          default:
            uint64_t v53 = BYTE6(v47);
            goto LABEL_19;
        }
        break;
      case 2uLL:
        uint64_t v51 = *(void *)(v46 + 16);
        uint64_t v50 = *(void *)(v46 + 24);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v49 = v50 - v51;
        if (!v52) {
          goto LABEL_14;
        }
        goto LABEL_59;
      case 3uLL:
        goto LABEL_14;
      default:
        uint64_t v49 = BYTE6(v45);
        goto LABEL_14;
    }
    switch(v45 >> 62)
    {
      case 1uLL:
        uint64_t v77 = (v46 >> 32) - (int)v46;
        if (v46 >> 32 < (int)v46) {
          goto LABEL_62;
        }
        sub_100510D4C(v46, v45);
        uint64_t v56 = __DataStorage._bytes.getter();
        if (v56)
        {
          uint64_t v76 = v56;
          uint64_t v57 = __DataStorage._offset.getter();
          if (__OFSUB__((int)v46, v57)) {
            goto LABEL_64;
          }
          uint64_t v58 = v76 + (int)v46 - v57;
        }
        else
        {
          uint64_t v58 = 0;
        }
        __DataStorage._length.getter();
        uint64_t v67 = v58;
        uint64_t v68 = v78;
        sub_1008D4048(v67, v48, v47, (char *)__s1);
        uint64_t v78 = v68;
        sub_100510084(v46, v45);
        goto LABEL_40;
      case 2uLL:
        uint64_t v59 = *(void *)(v46 + 16);
        uint64_t v77 = *(void *)(v46 + 24);
        swift_retain();
        swift_retain();
        uint64_t v60 = __DataStorage._bytes.getter();
        if (v60)
        {
          uint64_t v61 = v60;
          uint64_t v62 = __DataStorage._offset.getter();
          if (__OFSUB__(v59, v62)) {
            goto LABEL_65;
          }
          uint64_t v63 = v59;
          uint64_t v64 = v61 + v59 - v62;
        }
        else
        {
          uint64_t v63 = v59;
          uint64_t v64 = 0;
        }
        if (__OFSUB__(v77, v63)) {
          goto LABEL_63;
        }
        __DataStorage._length.getter();
        uint64_t v66 = v78;
        sub_1008D4048(v64, v48, v47, (char *)__s1);
        uint64_t v78 = v66;
        swift_release();
        swift_release();
LABEL_40:
        if ((__s1[0] & 1) == 0)
        {
LABEL_50:
          sub_1005C7E18((uint64_t)v87, type metadata accessor for CRLProto_Data);
          uint64_t v73 = (uint64_t *)&unk_101674160;
          goto LABEL_53;
        }
LABEL_41:
        uint64_t v69 = (uint64_t)v82;
        uint64_t v70 = (uint64_t)v87;
        type metadata accessor for UnknownStorage();
        sub_1005C689C(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v71 = dispatch thunk of static Equatable.== infix(_:_:)();
        sub_1005C7E18(v70, type metadata accessor for CRLProto_Data);
        sub_100522F00((uint64_t)v86, (uint64_t *)&unk_101674160);
        sub_100522F00((uint64_t)v22, (uint64_t *)&unk_101674160);
        sub_1005C7E18(v69, type metadata accessor for CRLProto_Data);
        sub_100522F00(v39, (uint64_t *)&unk_101674160);
        uint64_t v8 = v79;
        if ((v71 & 1) == 0) {
          goto LABEL_55;
        }
        break;
      case 3uLL:
        memset(__s1, 0, 14);
        goto LABEL_33;
      default:
        __s1[0] = v46;
        LOWORD(__s1[1]) = v45;
        BYTE2(__s1[1]) = BYTE2(v45);
        BYTE3(__s1[1]) = BYTE3(v45);
        BYTE4(__s1[1]) = BYTE4(v45);
        BYTE5(__s1[1]) = BYTE5(v45);
LABEL_33:
        uint64_t v65 = v78;
        sub_1008D4048((uint64_t)__s1, v48, v47, &v93);
        uint64_t v78 = v65;
        if ((v93 & 1) == 0) {
          goto LABEL_50;
        }
        goto LABEL_41;
    }
    goto LABEL_42;
  }
  uint64_t v22 = (char *)v37;
  uint64_t v25 = v35;
  uint64_t v30 = v83;
  uint64_t v73 = (uint64_t *)&unk_1016745C0;
LABEL_53:
  sub_100522F00((uint64_t)v86, (uint64_t *)&unk_101674160);
  sub_100522F00((uint64_t)v22, (uint64_t *)&unk_101674160);
  sub_1005C7E18((uint64_t)v82, type metadata accessor for CRLProto_Data);
LABEL_54:
  sub_100522F00(v39, v73);
LABEL_55:
  sub_1005C7E18((uint64_t)v25, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
  sub_1005C7E18((uint64_t)v30, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
LABEL_56:
  char v72 = 0;
  return v72 & 1;
}

BOOL sub_1005BA910(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v5 = 0;
    while (2)
    {
      double v6 = *(double *)(a1 + v5 + 48);
      double v7 = *(double *)(a1 + v5 + 56);
      double v8 = *(double *)(a1 + v5 + 64);
      double v9 = *(double *)(a1 + v5 + 72);
      double v10 = *(double *)(a2 + v5 + 48);
      double v11 = *(double *)(a2 + v5 + 56);
      double v12 = *(double *)(a2 + v5 + 64);
      double v13 = *(double *)(a2 + v5 + 72);
      int v14 = *(unsigned __int8 *)(a2 + v5 + 80);
      switch(*(unsigned char *)(a1 + v5 + 80))
      {
        case 1:
          if (v14 != 1) {
            return 0;
          }
          goto LABEL_6;
        case 2:
          if (v14 != 2
            || !sub_100064084(*(double *)(a1 + v5 + 32), *(double *)(a1 + v5 + 40), *(double *)(a2 + v5 + 32), *(double *)(a2 + v5 + 40)))
          {
            return 0;
          }
          BOOL result = sub_100064084(v6, v7, v10, v11);
          if (!result) {
            return result;
          }
          BOOL result = sub_100064084(v8, v9, v12, v13);
          if (!result) {
            return result;
          }
          goto LABEL_7;
        case 3:
          if (v14 != 3
            || *(void *)(a2 + v5 + 40) | *(void *)(a2 + v5 + 32) | *(void *)&v10 | *(void *)&v11 | *(void *)&v12 | *(void *)&v13)
          {
            return 0;
          }
          goto LABEL_7;
        default:
          if (*(unsigned char *)(a2 + v5 + 80)) {
            return 0;
          }
LABEL_6:
          if (!sub_100064084(*(double *)(a1 + v5 + 32), *(double *)(a1 + v5 + 40), *(double *)(a2 + v5 + 32), *(double *)(a2 + v5 + 40)))return 0; {
LABEL_7:
          }
          v5 += 56;
          if (--v2) {
            continue;
          }
          return 1;
      }
    }
  }
  return 1;
}

BOOL sub_1005BAA8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32)) {
    return 0;
  }
  uint64_t v3 = (float *)(a1 + 36);
  uint64_t v4 = (float *)(a2 + 36);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    float v7 = *v3++;
    float v8 = v7;
    float v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_1005BAAF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLProto_Data(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v89 = (uint64_t *)((char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_1016745C0);
  __chkstk_darwin(v8, v9);
  double v11 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (uint64_t *)((char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16, v17);
  uint64_t v96 = (uint64_t)&v79 - v18;
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v79 - v21;
  uint64_t v90 = type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference(0);
  __chkstk_darwin(v90, v23);
  uint64_t v25 = (char *)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v27);
  uint64_t v30 = (char *)&v79 - v29;
  uint64_t v93 = a1;
  uint64_t v31 = *(void *)(a1 + 16);
  if (v31 != *(void *)(a2 + 16)) {
    goto LABEL_53;
  }
  if (!v31 || v93 == a2)
  {
    char v76 = 1;
    return v76 & 1;
  }
  uint64_t v91 = v4;
  uint64_t v92 = v22;
  uint64_t v82 = 0;
  uint64_t v83 = v25;
  unint64_t v32 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v87 = v15;
  unint64_t v88 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v85 = *(void *)(v28 + 72);
  uint64_t v86 = a2;
  uint64_t v33 = v31 - 1;
  unint64_t v84 = (char *)&v79 - v29;
  while (1)
  {
    uint64_t v95 = v33;
    sub_1005C7DB0(v93 + v32, (uint64_t)v30, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
    unint64_t v94 = v32;
    sub_1005C7DB0(a2 + v32, (uint64_t)v25, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
    uint64_t v34 = v90;
    sub_100522E9C((uint64_t)&v30[*(int *)(v90 + 20)], (uint64_t)v22, (uint64_t *)&unk_101674160);
    uint64_t v35 = v96;
    sub_100522E9C((uint64_t)&v25[*(int *)(v34 + 20)], v96, (uint64_t *)&unk_101674160);
    uint64_t v36 = (uint64_t)&v11[*(int *)(v8 + 48)];
    sub_100522E9C((uint64_t)v22, (uint64_t)v11, (uint64_t *)&unk_101674160);
    sub_100522E9C(v35, v36, (uint64_t *)&unk_101674160);
    uint64_t v37 = *v88;
    uint64_t v38 = v91;
    if ((*v88)(v11, 1, v91) != 1) {
      break;
    }
    sub_100522F00(v35, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v92, (uint64_t *)&unk_101674160);
    if (v37((char *)v36, 1, v38) != 1)
    {
      uint64_t v77 = (uint64_t *)&unk_1016745C0;
      goto LABEL_51;
    }
    uint64_t v39 = v11;
    sub_100522F00((uint64_t)v11, (uint64_t *)&unk_101674160);
    uint64_t v22 = v92;
    uint64_t v40 = v8;
    a2 = v86;
LABEL_43:
    type metadata accessor for UnknownStorage();
    sub_1005C689C(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v76 = dispatch thunk of static Equatable.== infix(_:_:)();
    sub_1005C7E18((uint64_t)v25, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
    sub_1005C7E18((uint64_t)v30, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
    uint64_t v33 = v95 - 1;
    if (v76)
    {
      unint64_t v32 = v94 + v85;
      uint64_t v8 = v40;
      double v11 = v39;
      if (v95) {
        continue;
      }
    }
    return v76 & 1;
  }
  uint64_t v41 = v8;
  uint64_t v42 = v87;
  sub_100522E9C((uint64_t)v11, (uint64_t)v87, (uint64_t *)&unk_101674160);
  if (v37((char *)v36, 1, v38) != 1)
  {
    uint64_t v43 = v36;
    uint64_t v44 = v89;
    sub_1005C68E4(v43, (uint64_t)v89, type metadata accessor for CRLProto_Data);
    uint64_t v46 = *v42;
    unint64_t v45 = v42[1];
    uint64_t v47 = *v44;
    unint64_t v48 = v44[1];
    uint64_t v49 = 0;
    uint64_t v50 = v41;
    switch(v45 >> 62)
    {
      case 1uLL:
        LODWORD(v49) = HIDWORD(v46) - v46;
        if (__OFSUB__(HIDWORD(v46), v46))
        {
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
        }
        uint64_t v49 = (int)v49;
LABEL_14:
        switch(v48 >> 62)
        {
          case 1uLL:
            LODWORD(v54) = HIDWORD(v47) - v47;
            if (__OFSUB__(HIDWORD(v47), v47)) {
              goto LABEL_57;
            }
            uint64_t v54 = (int)v54;
LABEL_19:
            if (v49 != v54) {
              goto LABEL_47;
            }
            if (v49 < 1) {
              goto LABEL_42;
            }
            break;
          case 2uLL:
            uint64_t v56 = *(void *)(v47 + 16);
            uint64_t v55 = *(void *)(v47 + 24);
            BOOL v53 = __OFSUB__(v55, v56);
            uint64_t v54 = v55 - v56;
            if (!v53) {
              goto LABEL_19;
            }
            goto LABEL_58;
          case 3uLL:
            if (v49) {
              goto LABEL_47;
            }
            goto LABEL_42;
          default:
            uint64_t v54 = BYTE6(v48);
            goto LABEL_19;
        }
        break;
      case 2uLL:
        uint64_t v52 = *(void *)(v46 + 16);
        uint64_t v51 = *(void *)(v46 + 24);
        BOOL v53 = __OFSUB__(v51, v52);
        uint64_t v49 = v51 - v52;
        if (!v53) {
          goto LABEL_14;
        }
        goto LABEL_56;
      case 3uLL:
        goto LABEL_14;
      default:
        uint64_t v49 = BYTE6(v45);
        goto LABEL_14;
    }
    switch(v45 >> 62)
    {
      case 1uLL:
        uint64_t v80 = *v44;
        unint64_t v81 = v48;
        if (v46 >> 32 < (int)v46) {
          goto LABEL_59;
        }
        sub_100510D4C(v46, v45);
        uint64_t v57 = __DataStorage._bytes.getter();
        if (v57)
        {
          uint64_t v58 = v57;
          uint64_t v59 = __DataStorage._offset.getter();
          if (__OFSUB__((int)v46, v59)) {
            goto LABEL_61;
          }
          uint64_t v60 = v58 + (int)v46 - v59;
        }
        else
        {
          uint64_t v60 = 0;
        }
        __DataStorage._length.getter();
        uint64_t v69 = v60;
        uint64_t v70 = v82;
        sub_1008D4048(v69, v80, v81, (char *)__s1);
        uint64_t v82 = v70;
        sub_100510084(v46, v45);
        goto LABEL_41;
      case 2uLL:
        uint64_t v80 = *v44;
        unint64_t v81 = v48;
        uint64_t v61 = *(void *)(v46 + 16);
        uint64_t v62 = *(void *)(v46 + 24);
        swift_retain();
        swift_retain();
        uint64_t v63 = __DataStorage._bytes.getter();
        if (v63)
        {
          uint64_t v64 = v63;
          uint64_t v65 = __DataStorage._offset.getter();
          if (__OFSUB__(v61, v65)) {
            goto LABEL_62;
          }
          uint64_t v66 = v64 + v61 - v65;
          if (__OFSUB__(v62, v61)) {
            goto LABEL_60;
          }
        }
        else
        {
          uint64_t v66 = 0;
          if (__OFSUB__(v62, v61)) {
            goto LABEL_60;
          }
        }
        __DataStorage._length.getter();
        uint64_t v68 = v82;
        sub_1008D4048(v66, v80, v81, (char *)__s1);
        uint64_t v82 = v68;
        swift_release();
        swift_release();
LABEL_41:
        if ((__s1[0] & 1) == 0)
        {
LABEL_47:
          sub_1005C7E18((uint64_t)v89, type metadata accessor for CRLProto_Data);
          uint64_t v77 = (uint64_t *)&unk_101674160;
          uint64_t v30 = v84;
          goto LABEL_50;
        }
LABEL_42:
        char v71 = v11;
        uint64_t v40 = v50;
        uint64_t v72 = (uint64_t)v87;
        uint64_t v73 = (uint64_t)v89;
        type metadata accessor for UnknownStorage();
        sub_1005C689C(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v74 = dispatch thunk of static Equatable.== infix(_:_:)();
        sub_1005C7E18(v73, type metadata accessor for CRLProto_Data);
        sub_100522F00(v96, (uint64_t *)&unk_101674160);
        uint64_t v22 = v92;
        sub_100522F00((uint64_t)v92, (uint64_t *)&unk_101674160);
        sub_1005C7E18(v72, type metadata accessor for CRLProto_Data);
        uint64_t v39 = v71;
        uint64_t v75 = (uint64_t)v71;
        uint64_t v25 = v83;
        sub_100522F00(v75, (uint64_t *)&unk_101674160);
        a2 = v86;
        uint64_t v30 = v84;
        if ((v74 & 1) == 0) {
          goto LABEL_52;
        }
        break;
      case 3uLL:
        memset(__s1, 0, 14);
        goto LABEL_35;
      default:
        __s1[0] = v46;
        LOWORD(__s1[1]) = v45;
        BYTE2(__s1[1]) = BYTE2(v45);
        BYTE3(__s1[1]) = BYTE3(v45);
        BYTE4(__s1[1]) = BYTE4(v45);
        BYTE5(__s1[1]) = BYTE5(v45);
LABEL_35:
        uint64_t v67 = v82;
        sub_1008D4048((uint64_t)__s1, v47, v48, &v97);
        uint64_t v82 = v67;
        if ((v97 & 1) == 0) {
          goto LABEL_47;
        }
        goto LABEL_42;
    }
    goto LABEL_43;
  }
  uint64_t v30 = v84;
  uint64_t v77 = (uint64_t *)&unk_1016745C0;
LABEL_50:
  sub_100522F00(v96, (uint64_t *)&unk_101674160);
  sub_100522F00((uint64_t)v92, (uint64_t *)&unk_101674160);
  sub_1005C7E18((uint64_t)v87, type metadata accessor for CRLProto_Data);
LABEL_51:
  sub_100522F00((uint64_t)v11, v77);
LABEL_52:
  sub_1005C7E18((uint64_t)v25, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
  sub_1005C7E18((uint64_t)v30, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
LABEL_53:
  char v76 = 0;
  return v76 & 1;
}

uint64_t sub_1005BB4C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLProto_Data(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v91 = (void *)((char *)v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_1016745C0);
  __chkstk_darwin(v8, v9);
  uint64_t v98 = (uint64_t)v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (void *)((char *)v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)v82 - v17;
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)v82 - v21;
  uint64_t v97 = type metadata accessor for CRLProto_ObjectInfo.AssetReference(0);
  __chkstk_darwin(v97, v23);
  uint64_t v25 = (void *)((char *)v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v26, v27);
  uint64_t v30 = (void *)((char *)v82 - v29);
  uint64_t v93 = a1;
  uint64_t v94 = a2;
  uint64_t v31 = *(void *)(a1 + 16);
  if (v31 != *(void *)(a2 + 16)) {
    goto LABEL_60;
  }
  if (!v31 || v93 == v94)
  {
    char v76 = 1;
    return v76 & 1;
  }
  uint64_t v92 = v18;
  uint64_t v84 = 0;
  uint64_t v85 = v8;
  unint64_t v32 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v89 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  uint64_t v90 = v4;
  uint64_t v86 = *(void *)(v28 + 72);
  uint64_t v87 = v14;
  uint64_t v33 = v31 - 1;
  unint64_t v88 = (char *)v82 - v29;
  while (1)
  {
    sub_1005C7DB0(v93 + v32, (uint64_t)v30, type metadata accessor for CRLProto_ObjectInfo.AssetReference);
    unint64_t v95 = v32;
    sub_1005C7DB0(v94 + v32, (uint64_t)v25, type metadata accessor for CRLProto_ObjectInfo.AssetReference);
    BOOL v34 = *v30 == *v25 && v30[1] == v25[1];
    if (!v34 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_59;
    }
    uint64_t v96 = v33;
    uint64_t v35 = v97;
    sub_100522E9C((uint64_t)v30 + *(int *)(v97 + 24), (uint64_t)v22, (uint64_t *)&unk_101674160);
    uint64_t v36 = (uint64_t)v92;
    sub_100522E9C((uint64_t)v25 + *(int *)(v35 + 24), (uint64_t)v92, (uint64_t *)&unk_101674160);
    uint64_t v37 = v98;
    uint64_t v38 = v98 + *(int *)(v8 + 48);
    sub_100522E9C((uint64_t)v22, v98, (uint64_t *)&unk_101674160);
    sub_100522E9C(v36, v38, (uint64_t *)&unk_101674160);
    uint64_t v39 = *v89;
    if ((*v89)(v37, 1, v4) != 1) {
      break;
    }
    sub_100522F00(v36, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v22, (uint64_t *)&unk_101674160);
    if (v39(v38, 1, v4) != 1)
    {
      uint64_t v80 = v98;
      uint64_t v30 = v88;
      uint64_t v79 = (uint64_t *)&unk_1016745C0;
      goto LABEL_58;
    }
    sub_100522F00(v98, (uint64_t *)&unk_101674160);
    uint64_t v30 = v88;
    uint64_t v40 = v96;
LABEL_47:
    type metadata accessor for UnknownStorage();
    sub_1005C689C(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v76 = dispatch thunk of static Equatable.== infix(_:_:)();
    sub_1005C7E18((uint64_t)v25, type metadata accessor for CRLProto_ObjectInfo.AssetReference);
    sub_1005C7E18((uint64_t)v30, type metadata accessor for CRLProto_ObjectInfo.AssetReference);
    BOOL v77 = v40 != 0;
    uint64_t v33 = v40 - 1;
    char v78 = v77;
    if (v76)
    {
      unint64_t v32 = v95 + v86;
      uint64_t v4 = v90;
      if (v78) {
        continue;
      }
    }
    return v76 & 1;
  }
  uint64_t v41 = v87;
  sub_100522E9C(v37, (uint64_t)v87, (uint64_t *)&unk_101674160);
  if (v39(v38, 1, v4) != 1)
  {
    uint64_t v42 = v38;
    uint64_t v43 = v91;
    sub_1005C68E4(v42, (uint64_t)v91, type metadata accessor for CRLProto_Data);
    uint64_t v44 = *v41;
    unint64_t v45 = v41[1];
    uint64_t v46 = *v43;
    unint64_t v47 = v43[1];
    uint64_t v48 = 0;
    uint64_t v30 = v88;
    switch(v45 >> 62)
    {
      case 1uLL:
        LODWORD(v48) = HIDWORD(v44) - v44;
        if (__OFSUB__(HIDWORD(v44), v44))
        {
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
        }
        uint64_t v48 = (int)v48;
LABEL_19:
        switch(v47 >> 62)
        {
          case 1uLL:
            LODWORD(v52) = HIDWORD(v46) - v46;
            if (__OFSUB__(HIDWORD(v46), v46)) {
              goto LABEL_64;
            }
            uint64_t v52 = (int)v52;
LABEL_24:
            if (v48 != v52) {
              goto LABEL_54;
            }
            if (v48 < 1) {
              goto LABEL_46;
            }
            break;
          case 2uLL:
            uint64_t v54 = *(void *)(v46 + 16);
            uint64_t v53 = *(void *)(v46 + 24);
            BOOL v51 = __OFSUB__(v53, v54);
            uint64_t v52 = v53 - v54;
            if (!v51) {
              goto LABEL_24;
            }
            goto LABEL_65;
          case 3uLL:
            if (v48) {
              goto LABEL_54;
            }
            goto LABEL_46;
          default:
            uint64_t v52 = BYTE6(v47);
            goto LABEL_24;
        }
        break;
      case 2uLL:
        uint64_t v50 = *(void *)(v44 + 16);
        uint64_t v49 = *(void *)(v44 + 24);
        BOOL v51 = __OFSUB__(v49, v50);
        uint64_t v48 = v49 - v50;
        if (!v51) {
          goto LABEL_19;
        }
        goto LABEL_63;
      case 3uLL:
        goto LABEL_19;
      default:
        uint64_t v48 = BYTE6(v45);
        goto LABEL_19;
    }
    switch(v45 >> 62)
    {
      case 1uLL:
        uint64_t v83 = *v43;
        v82[1] = (v44 >> 32) - (int)v44;
        if (v44 >> 32 < (int)v44) {
          goto LABEL_66;
        }
        sub_100510D4C(v44, v45);
        uint64_t v55 = __DataStorage._bytes.getter();
        if (v55)
        {
          uint64_t v56 = v22;
          uint64_t v57 = v55;
          uint64_t v58 = __DataStorage._offset.getter();
          if (__OFSUB__((int)v44, v58)) {
            goto LABEL_68;
          }
          uint64_t v59 = v57 + (int)v44 - v58;
          uint64_t v22 = v56;
        }
        else
        {
          uint64_t v59 = 0;
        }
        __DataStorage._length.getter();
        uint64_t v69 = v59;
        uint64_t v70 = v84;
        sub_1008D4048(v69, v83, v47, (char *)__s1);
        uint64_t v84 = v70;
        sub_100510084(v44, v45);
        goto LABEL_45;
      case 2uLL:
        uint64_t v60 = *v43;
        uint64_t v61 = *(void *)(v44 + 16);
        uint64_t v83 = *(void *)(v44 + 24);
        swift_retain();
        swift_retain();
        uint64_t v62 = __DataStorage._bytes.getter();
        if (v62)
        {
          uint64_t v63 = v62;
          uint64_t v64 = __DataStorage._offset.getter();
          if (__OFSUB__(v61, v64)) {
            goto LABEL_69;
          }
          uint64_t v65 = v61;
          uint64_t v66 = v63 + v61 - v64;
        }
        else
        {
          uint64_t v65 = v61;
          uint64_t v66 = 0;
        }
        if (__OFSUB__(v83, v65)) {
          goto LABEL_67;
        }
        __DataStorage._length.getter();
        uint64_t v68 = v84;
        sub_1008D4048(v66, v60, v47, (char *)__s1);
        uint64_t v84 = v68;
        swift_release();
        swift_release();
LABEL_45:
        if ((__s1[0] & 1) == 0)
        {
LABEL_54:
          sub_1005C7E18((uint64_t)v91, type metadata accessor for CRLProto_Data);
          uint64_t v79 = (uint64_t *)&unk_101674160;
          uint64_t v80 = v98;
          goto LABEL_57;
        }
LABEL_46:
        uint64_t v71 = (uint64_t)v87;
        uint64_t v72 = (uint64_t)v22;
        uint64_t v73 = (uint64_t)v91;
        type metadata accessor for UnknownStorage();
        sub_1005C689C(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v74 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v75 = v73;
        uint64_t v22 = (char *)v72;
        sub_1005C7E18(v75, type metadata accessor for CRLProto_Data);
        sub_100522F00((uint64_t)v92, (uint64_t *)&unk_101674160);
        sub_100522F00(v72, (uint64_t *)&unk_101674160);
        sub_1005C7E18(v71, type metadata accessor for CRLProto_Data);
        sub_100522F00(v98, (uint64_t *)&unk_101674160);
        uint64_t v8 = v85;
        uint64_t v40 = v96;
        if ((v74 & 1) == 0) {
          goto LABEL_59;
        }
        break;
      case 3uLL:
        memset(__s1, 0, 14);
        goto LABEL_38;
      default:
        __s1[0] = v44;
        LOWORD(__s1[1]) = v45;
        BYTE2(__s1[1]) = BYTE2(v45);
        BYTE3(__s1[1]) = BYTE3(v45);
        BYTE4(__s1[1]) = BYTE4(v45);
        BYTE5(__s1[1]) = BYTE5(v45);
LABEL_38:
        uint64_t v67 = v84;
        sub_1008D4048((uint64_t)__s1, v46, v47, &v99);
        uint64_t v84 = v67;
        if ((v99 & 1) == 0) {
          goto LABEL_54;
        }
        goto LABEL_46;
    }
    goto LABEL_47;
  }
  uint64_t v80 = v37;
  uint64_t v30 = v88;
  uint64_t v79 = (uint64_t *)&unk_1016745C0;
LABEL_57:
  sub_100522F00((uint64_t)v92, (uint64_t *)&unk_101674160);
  sub_100522F00((uint64_t)v22, (uint64_t *)&unk_101674160);
  sub_1005C7E18((uint64_t)v87, type metadata accessor for CRLProto_Data);
LABEL_58:
  sub_100522F00(v80, v79);
LABEL_59:
  sub_1005C7E18((uint64_t)v25, type metadata accessor for CRLProto_ObjectInfo.AssetReference);
  sub_1005C7E18((uint64_t)v30, type metadata accessor for CRLProto_ObjectInfo.AssetReference);
LABEL_60:
  char v76 = 0;
  return v76 & 1;
}

uint64_t sub_1005BBEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8, v9);
  uint64_t v12 = (uint64_t *)((char *)&v17 - v11);
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13 == *(void *)(a2 + 16))
  {
    if (!v13 || a1 == a2) {
      return 1;
    }
    unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v18 = *(void *)(v10 + 72);
    while (1)
    {
      sub_1005C7DB0(a1 + v14, (uint64_t)v12, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      sub_1005C7DB0(a2 + v14, (uint64_t)v7, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      BOOL v15 = *v12 == *v7 && v12[1] == v7[1];
      if (!v15 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      if (v12[2] != v7[2]) {
        break;
      }
      type metadata accessor for UnknownStorage();
      sub_1005C689C(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0) {
        break;
      }
      sub_1005C7E18((uint64_t)v7, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      sub_1005C7E18((uint64_t)v12, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      v14 += v18;
      if (!--v13) {
        return 1;
      }
    }
    sub_1005C7E18((uint64_t)v7, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
    sub_1005C7E18((uint64_t)v12, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
  }
  return 0;
}

BOOL sub_1005BC130(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(unsigned __int16 *)(a1 + 32) != *(unsigned __int16 *)(a2 + 32)) {
    return 0;
  }
  uint64_t v3 = (unsigned __int16 *)(a1 + 34);
  uint64_t v4 = (unsigned __int16 *)(a2 + 34);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    int v8 = *v3++;
    int v7 = v8;
    int v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1005BC19C(uint64_t a1, uint64_t a2)
{
  uint64_t v32 = type metadata accessor for CRLDisjointPosition.Element();
  __chkstk_darwin(v32, v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v30 - v9;
  __chkstk_darwin(v11, v12);
  unint64_t v14 = (uint64_t *)((char *)&v30 - v13);
  __chkstk_darwin(v15, v16);
  uint64_t v19 = (uint64_t *)((char *)&v30 - v18);
  uint64_t v33 = a1;
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20 != *(void *)(a2 + 16))
  {
LABEL_14:
    char v26 = 0;
    return v26 & 1;
  }
  if (v20)
  {
    uint64_t v21 = a2;
    if (v33 != a2)
    {
      unint64_t v22 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      uint64_t v31 = *(void *)(v17 + 72);
      uint64_t v23 = v20 - 1;
      while (1)
      {
        sub_1005C7DB0(v33 + v22, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CRLDisjointPosition.Element);
        sub_1005C7DB0(v21 + v22, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CRLDisjointPosition.Element);
        uint64_t v24 = *v19;
        uint64_t v25 = *v14;
        sub_1005C7DB0((uint64_t)v19, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for CRLDisjointPosition.Element);
        sub_1005C7DB0((uint64_t)v14, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLDisjointPosition.Element);
        if (v24 != v25) {
          break;
        }
        char v26 = static UUID.== infix(_:_:)();
        sub_1005C7E18((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLDisjointPosition.Element);
        sub_1005C7E18((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for CRLDisjointPosition.Element);
        sub_1005C7E18((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CRLDisjointPosition.Element);
        sub_1005C7E18((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CRLDisjointPosition.Element);
        BOOL v28 = v23-- != 0;
        if (v26)
        {
          v22 += v31;
          if (v28) {
            continue;
          }
        }
        return v26 & 1;
      }
      sub_1005C7E18((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLDisjointPosition.Element);
      sub_1005C7E18((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for CRLDisjointPosition.Element);
      sub_1005C7E18((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CRLDisjointPosition.Element);
      sub_1005C7E18((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CRLDisjointPosition.Element);
      goto LABEL_14;
    }
  }
  char v26 = 1;
  return v26 & 1;
}

uint64_t sub_1005BC434(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unint64_t *)(a2 + 48);
    uint64_t v4 = (unint64_t *)(a1 + 48);
    while (*(v4 - 2) == *(v3 - 2))
    {
      uint64_t v5 = *(v4 - 1);
      unint64_t v6 = *v4;
      uint64_t v8 = *(v3 - 1);
      unint64_t v7 = *v3;
      v3 += 3;
      v4 += 3;
      uint64_t v9 = 0;
      switch(v6 >> 62)
      {
        case 1uLL:
          LODWORD(v9) = HIDWORD(v5) - v5;
          if (__OFSUB__(HIDWORD(v5), v5))
          {
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
          }
          uint64_t v9 = (int)v9;
LABEL_13:
          unint64_t v13 = v7 >> 62;
          switch(v7 >> 62)
          {
            case 1uLL:
              LODWORD(v14) = HIDWORD(v8) - v8;
              if (__OFSUB__(HIDWORD(v8), v8)) {
                goto LABEL_122;
              }
              uint64_t v14 = (int)v14;
LABEL_18:
              if (v9 != v14) {
                return 0;
              }
              if (v9 < 1) {
                goto LABEL_6;
              }
              break;
            case 2uLL:
              uint64_t v16 = *(void *)(v8 + 16);
              uint64_t v15 = *(void *)(v8 + 24);
              BOOL v12 = __OFSUB__(v15, v16);
              uint64_t v14 = v15 - v16;
              if (!v12) {
                goto LABEL_18;
              }
              goto LABEL_123;
            case 3uLL:
              if (!v9) {
                goto LABEL_6;
              }
              sub_100510D4C(v8, v7);
              return 0;
            default:
              uint64_t v14 = BYTE6(v7);
              goto LABEL_18;
          }
          break;
        case 2uLL:
          uint64_t v11 = *(void *)(v5 + 16);
          uint64_t v10 = *(void *)(v5 + 24);
          BOOL v12 = __OFSUB__(v10, v11);
          uint64_t v9 = v10 - v11;
          if (!v12) {
            goto LABEL_13;
          }
          goto LABEL_121;
        case 3uLL:
          goto LABEL_13;
        default:
          uint64_t v9 = BYTE6(v6);
          goto LABEL_13;
      }
      switch(v6 >> 62)
      {
        case 1uLL:
          if ((int)v5 > v5 >> 32) {
            goto LABEL_124;
          }
          sub_100510D4C(v8, v7);
          unint64_t v78 = v6;
          sub_100510D4C(v5, v6);
          unint64_t v22 = (char *)__DataStorage._bytes.getter();
          if (!v22) {
            goto LABEL_32;
          }
          uint64_t v23 = __DataStorage._offset.getter();
          if (__OFSUB__((int)v5, v23)) {
            goto LABEL_126;
          }
          v22 += (int)v5 - v23;
LABEL_32:
          __DataStorage._length.getter();
          if (v13)
          {
            __s1 = v22;
            if (v13 == 1)
            {
              if (v8 >> 32 < (int)v8) {
                goto LABEL_134;
              }
              swift_retain();
              uint64_t v24 = (char *)__DataStorage._bytes.getter();
              if (v24)
              {
                uint64_t v25 = __DataStorage._offset.getter();
                if (__OFSUB__((int)v8, v25)) {
                  goto LABEL_142;
                }
                v24 += (int)v8 - v25;
              }
              unint64_t v26 = v78;
              uint64_t v27 = __DataStorage._length.getter();
              if (v27 >= (v8 >> 32) - (int)v8) {
                size_t v28 = (v8 >> 32) - (int)v8;
              }
              else {
                size_t v28 = v27;
              }
              if (!__s1) {
                goto LABEL_144;
              }
              if (!v24) {
                goto LABEL_145;
              }
              int v29 = memcmp(__s1, v24, v28);
              sub_100510084(v8, v7);
              goto LABEL_72;
            }
            uint64_t v67 = *(void *)(v8 + 16);
            uint64_t v66 = *(void *)(v8 + 24);
            swift_retain();
            swift_retain();
            uint64_t v68 = __DataStorage._bytes.getter();
            if (v68)
            {
              uint64_t v69 = __DataStorage._offset.getter();
              if (__OFSUB__(v67, v69)) {
                goto LABEL_141;
              }
              v68 += v67 - v69;
            }
            BOOL v12 = __OFSUB__(v66, v67);
            uint64_t v70 = v66 - v67;
            if (v12) {
              goto LABEL_136;
            }
            uint64_t v71 = __DataStorage._length.getter();
            if (v71 >= v70) {
              size_t v72 = v70;
            }
            else {
              size_t v72 = v71;
            }
            uint64_t v55 = __s1;
            if (!__s1) {
              goto LABEL_155;
            }
            if (!v68) {
              goto LABEL_156;
            }
            size_t v54 = v72;
            uint64_t v56 = (const void *)v68;
LABEL_116:
            int v73 = memcmp(v55, v56, v54);
            swift_release();
            swift_release();
            sub_100510084(v8, v7);
            sub_100510084(v5, v78);
            if (v73) {
              return 0;
            }
          }
          else
          {
            v85[0] = v8;
            LOWORD(v85[1]) = v7;
            BYTE2(v85[1]) = BYTE2(v7);
            BYTE3(v85[1]) = BYTE3(v7);
            BYTE4(v85[1]) = BYTE4(v7);
            BYTE5(v85[1]) = BYTE5(v7);
            if (!v22) {
              goto LABEL_154;
            }
            int v65 = memcmp(v22, v85, BYTE6(v7));
            sub_100510084(v5, v78);
            if (v65) {
              return 0;
            }
          }
          goto LABEL_6;
        case 2uLL:
          unint64_t v30 = v6;
          uint64_t v31 = *(void *)(v5 + 16);
          sub_100510D4C(v8, v7);
          sub_100510D4C(v5, v30);
          uint64_t v76 = v5;
          swift_retain();
          swift_retain();
          uint64_t v32 = __DataStorage._bytes.getter();
          if (v32)
          {
            uint64_t v33 = v32;
            uint64_t v34 = __DataStorage._offset.getter();
            if (__OFSUB__(v31, v34)) {
              goto LABEL_125;
            }
            uint64_t v35 = (void *)(v33 + v31 - v34);
          }
          else
          {
            uint64_t v35 = 0;
          }
          __DataStorage._length.getter();
          if (v13)
          {
            uint64_t v75 = v35;
            if (v13 == 1)
            {
              if (v8 >> 32 < (int)v8) {
                goto LABEL_129;
              }
              swift_retain();
              uint64_t v41 = (char *)__DataStorage._bytes.getter();
              if (v41)
              {
                uint64_t v42 = __DataStorage._offset.getter();
                if (__OFSUB__((int)v8, v42)) {
                  goto LABEL_140;
                }
                v41 += (int)v8 - v42;
              }
              unint64_t v26 = v30;
              uint64_t v43 = __DataStorage._length.getter();
              if (v43 >= (v8 >> 32) - (int)v8) {
                size_t v44 = (v8 >> 32) - (int)v8;
              }
              else {
                size_t v44 = v43;
              }
              if (!v35) {
                goto LABEL_147;
              }
              if (!v41) {
                goto LABEL_148;
              }
              int v29 = memcmp(v35, v41, v44);
              sub_100510084(v8, v7);
              swift_release();
              uint64_t v5 = v76;
              swift_release();
LABEL_72:
              sub_100510084(v8, v7);
              sub_100510084(v5, v26);
              if (v29) {
                return 0;
              }
            }
            else
            {
              uint64_t v59 = *(void *)(v8 + 16);
              uint64_t v58 = *(void *)(v8 + 24);
              swift_retain();
              swift_retain();
              uint64_t v60 = (char *)__DataStorage._bytes.getter();
              if (v60)
              {
                uint64_t v61 = __DataStorage._offset.getter();
                if (__OFSUB__(v59, v61)) {
                  goto LABEL_139;
                }
                v60 += v59 - v61;
              }
              if (__OFSUB__(v58, v59)) {
                goto LABEL_135;
              }
              uint64_t v62 = __DataStorage._length.getter();
              if (v62 >= v58 - v59) {
                size_t v63 = v58 - v59;
              }
              else {
                size_t v63 = v62;
              }
              if (!v75) {
                goto LABEL_152;
              }
              if (!v60) {
                goto LABEL_153;
              }
              int v64 = memcmp(v75, v60, v63);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              sub_100510084(v8, v7);
              sub_100510084(v76, v30);
              if (v64) {
                return 0;
              }
            }
          }
          else
          {
            v85[0] = v8;
            LOWORD(v85[1]) = v7;
            BYTE2(v85[1]) = BYTE2(v7);
            BYTE3(v85[1]) = BYTE3(v7);
            BYTE4(v85[1]) = BYTE4(v7);
            BYTE5(v85[1]) = BYTE5(v7);
            if (!v35) {
              goto LABEL_151;
            }
            int v57 = memcmp(v35, v85, BYTE6(v7));
            swift_release();
            swift_release();
            sub_100510084(v8, v7);
            sub_100510084(v76, v30);
            if (v57) {
              return 0;
            }
          }
LABEL_6:
          if (!--v2) {
            return 1;
          }
          break;
        case 3uLL:
          memset(v85, 0, 14);
          if (!v13) {
            goto LABEL_57;
          }
          unint64_t v78 = v6;
          if (v13 == 1)
          {
            uint64_t v17 = (v8 >> 32) - (int)v8;
            if (v8 >> 32 < (int)v8) {
              goto LABEL_128;
            }
            sub_100510D4C(v8, v7);
            sub_100510D4C(v5, v6);
            uint64_t v36 = __DataStorage._bytes.getter();
            if (!v36) {
              goto LABEL_146;
            }
            uint64_t v19 = v36;
            uint64_t v37 = __DataStorage._offset.getter();
            uint64_t v21 = (int)v8 - v37;
            if (__OFSUB__((int)v8, v37)) {
              goto LABEL_133;
            }
LABEL_52:
            uint64_t v38 = __DataStorage._length.getter();
            if (v38 >= v17) {
              size_t v39 = v17;
            }
            else {
              size_t v39 = v38;
            }
            int v40 = memcmp(v85, (const void *)(v19 + v21), v39);
            sub_100510084(v8, v7);
            sub_100510084(v5, v78);
            if (v40) {
              return 0;
            }
            goto LABEL_6;
          }
          uint64_t v51 = *(void *)(v8 + 16);
          uint64_t v52 = *(void *)(v8 + 24);
          sub_100510D4C(v8, v7);
          sub_100510D4C(v5, v6);
          swift_retain();
          swift_retain();
          uint64_t v47 = __DataStorage._bytes.getter();
          if (v47)
          {
            uint64_t v53 = __DataStorage._offset.getter();
            if (__OFSUB__(v51, v53)) {
              goto LABEL_138;
            }
            v47 += v51 - v53;
          }
          BOOL v12 = __OFSUB__(v52, v51);
          int64_t v49 = v52 - v51;
          if (v12) {
            goto LABEL_131;
          }
          uint64_t v50 = __DataStorage._length.getter();
          if (!v47) {
            goto LABEL_150;
          }
LABEL_85:
          if (v50 >= v49) {
            size_t v54 = v49;
          }
          else {
            size_t v54 = v50;
          }
          uint64_t v55 = v85;
          uint64_t v56 = (const void *)v47;
          goto LABEL_116;
        default:
          v85[0] = v5;
          LOWORD(v85[1]) = v6;
          BYTE2(v85[1]) = BYTE2(v6);
          BYTE3(v85[1]) = BYTE3(v6);
          BYTE4(v85[1]) = BYTE4(v6);
          BYTE5(v85[1]) = BYTE5(v6);
          if (!v13)
          {
LABEL_57:
            uint64_t __s2 = v8;
            __int16 v80 = v7;
            char v81 = BYTE2(v7);
            char v82 = BYTE3(v7);
            char v83 = BYTE4(v7);
            char v84 = BYTE5(v7);
            sub_100510D4C(v8, v7);
            if (memcmp(v85, &__s2, BYTE6(v7))) {
              return 0;
            }
            goto LABEL_6;
          }
          unint64_t v78 = v6;
          if (v13 == 1)
          {
            uint64_t v17 = (v8 >> 32) - (int)v8;
            if (v8 >> 32 < (int)v8) {
              goto LABEL_127;
            }
            sub_100510D4C(v8, v7);
            sub_100510D4C(v5, v6);
            uint64_t v18 = __DataStorage._bytes.getter();
            if (!v18)
            {
              __DataStorage._length.getter();
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __DataStorage._length.getter();
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
              JUMPOUT(0x1005BCDE0);
            }
            uint64_t v19 = v18;
            uint64_t v20 = __DataStorage._offset.getter();
            uint64_t v21 = (int)v8 - v20;
            if (__OFSUB__((int)v8, v20)) {
              goto LABEL_132;
            }
            goto LABEL_52;
          }
          uint64_t v45 = *(void *)(v8 + 16);
          uint64_t v46 = *(void *)(v8 + 24);
          sub_100510D4C(v8, v7);
          sub_100510D4C(v5, v6);
          swift_retain();
          swift_retain();
          uint64_t v47 = __DataStorage._bytes.getter();
          if (v47)
          {
            uint64_t v48 = __DataStorage._offset.getter();
            if (__OFSUB__(v45, v48)) {
              goto LABEL_137;
            }
            v47 += v45 - v48;
          }
          BOOL v12 = __OFSUB__(v46, v45);
          int64_t v49 = v46 - v45;
          if (v12) {
            goto LABEL_130;
          }
          uint64_t v50 = __DataStorage._length.getter();
          if (!v47) {
            goto LABEL_149;
          }
          goto LABEL_85;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1005BCE10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = 0;
    uint64_t v4 = a1 + 32;
    uint64_t v5 = a2 + 32;
    uint64_t v20 = a2 + 32;
    uint64_t v21 = a1 + 32;
    while (1)
    {
      unint64_t v6 = (uint64_t *)(v4 + 24 * v3);
      uint64_t v7 = *v6;
      uint64_t v8 = (uint64_t *)(v5 + 24 * v3);
      uint64_t v9 = *v8;
      uint64_t v10 = *(void *)(*v6 + 16);
      if (v10 != *(void *)(*v8 + 16)) {
        break;
      }
      uint64_t v11 = v6[2];
      int v22 = *((unsigned __int8 *)v8 + 8);
      int v23 = *((unsigned __int8 *)v6 + 8);
      uint64_t v24 = v8[2];
      if (v10)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v7 != v9)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v12 = 0;
          while (1)
          {
            uint64_t v13 = v7 + v12;
            uint64_t v14 = v9 + v12;
            if (*(float *)(v7 + v12 + 32) != *(float *)(v9 + v12 + 32)
              || *(float *)(v13 + 36) != *(float *)(v14 + 36)
              || *(float *)(v13 + 40) != *(float *)(v14 + 40)
              || *(float *)(v13 + 44) != *(float *)(v14 + 44)
              || *(float *)(v13 + 48) != *(float *)(v14 + 48)
              || *(float *)(v13 + 52) != *(float *)(v14 + 52))
            {
              break;
            }
            uint64_t v15 = *(void *)(v13 + 72);
            uint64_t v16 = *(void *)(v14 + 72);
            sub_1005C694C();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((static CRExtensible.== infix(_:_:)() & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_27;
            }
            char v17 = sub_100ED60AC(v15, v16);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v17 & 1) == 0) {
              break;
            }
            v12 += 48;
            if (!--v10) {
              goto LABEL_21;
            }
          }
LABEL_26:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_27:
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_21:
      if (v23 != v22) {
        goto LABEL_26;
      }
      char v18 = sub_100ED60AC(v11, v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0) {
        return 0;
      }
      ++v3;
      uint64_t result = 1;
      uint64_t v5 = v20;
      uint64_t v4 = v21;
      if (v3 == v2) {
        return result;
      }
    }
  }
  return 0;
}

uint64_t sub_1005BD0D0(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for CRLProto_Path.Element(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v228 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v13 = (uint64_t *)((char *)&v228 - v12);
  uint64_t v14 = a1[2];
  if (v14 != a2[2]) {
    return 0;
  }
  if (v14 && a1 != a2)
  {
    uint64_t v239 = v10;
    uint64_t v240 = 0;
    unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v16 = *(void *)(v11 + 72);
    unsigned __int32 v237 = a1;
    uint64_t v238 = v16;
    uint64_t v243 = v7;
    __int16 v244 = (uint64_t *)((char *)&v228 - v12);
    while (1)
    {
      sub_1005C7DB0((uint64_t)a1 + v15, (uint64_t)v13, type metadata accessor for CRLProto_Path.Element);
      sub_1005C7DB0((uint64_t)a2 + v15, (uint64_t)v7, type metadata accessor for CRLProto_Path.Element);
      uint64_t v17 = *v13;
      uint64_t v18 = *(void *)v7;
      int v19 = v7[8];
      unint64_t v241 = v15;
      uint64_t v242 = v14;
      if (v19 == 1)
      {
        switch(v18)
        {
          case 1:
            if (v17 != 1) {
              goto LABEL_311;
            }
            goto LABEL_10;
          case 2:
            if (v17 != 2) {
              goto LABEL_311;
            }
            goto LABEL_10;
          case 3:
            if (v17 != 3) {
              goto LABEL_311;
            }
            goto LABEL_10;
          default:
            if (v17) {
              goto LABEL_311;
            }
            goto LABEL_10;
        }
      }
      if (v17 != v18) {
        break;
      }
LABEL_10:
      uint64_t v21 = v244[2];
      unint64_t v20 = v244[3];
      uint64_t v22 = *((void *)v7 + 2);
      unint64_t v23 = *((void *)v7 + 3);
      uint64_t v24 = 0;
      switch(v20 >> 62)
      {
        case 1uLL:
          LODWORD(v24) = HIDWORD(v21) - v21;
          if (__OFSUB__(HIDWORD(v21), v21)) {
            goto LABEL_315;
          }
          uint64_t v24 = (int)v24;
LABEL_15:
          unint64_t v28 = v23 >> 62;
          switch(v23 >> 62)
          {
            case 1uLL:
              LODWORD(v29) = HIDWORD(v22) - v22;
              if (__OFSUB__(HIDWORD(v22), v22)) {
                goto LABEL_316;
              }
              uint64_t v29 = (int)v29;
LABEL_24:
              if (v24 != v29) {
                goto LABEL_311;
              }
              if (v24 < 1) {
                goto LABEL_150;
              }
              break;
            case 2uLL:
              uint64_t v31 = *(void *)(v22 + 16);
              uint64_t v30 = *(void *)(v22 + 24);
              BOOL v27 = __OFSUB__(v30, v31);
              uint64_t v29 = v30 - v31;
              if (!v27) {
                goto LABEL_24;
              }
              goto LABEL_317;
            case 3uLL:
              if (v24) {
                goto LABEL_311;
              }
              goto LABEL_150;
            default:
              uint64_t v29 = BYTE6(v23);
              goto LABEL_24;
          }
          break;
        case 2uLL:
          uint64_t v26 = *(void *)(v21 + 16);
          uint64_t v25 = *(void *)(v21 + 24);
          BOOL v27 = __OFSUB__(v25, v26);
          uint64_t v24 = v25 - v26;
          if (!v27) {
            goto LABEL_15;
          }
          __break(1u);
LABEL_315:
          __break(1u);
LABEL_316:
          __break(1u);
LABEL_317:
          __break(1u);
LABEL_318:
          __break(1u);
LABEL_319:
          __break(1u);
LABEL_320:
          __break(1u);
LABEL_321:
          __break(1u);
LABEL_322:
          __break(1u);
LABEL_323:
          __break(1u);
LABEL_324:
          __break(1u);
LABEL_325:
          __break(1u);
LABEL_326:
          __break(1u);
          goto LABEL_327;
        case 3uLL:
          goto LABEL_15;
        default:
          uint64_t v24 = BYTE6(v20);
          goto LABEL_15;
      }
      switch(v20 >> 62)
      {
        case 1uLL:
          uint64_t v236 = *((void *)v7 + 2);
          if (v21 >> 32 < (int)v21) {
            goto LABEL_326;
          }
          sub_100510D4C(v21, v20);
          uint64_t v50 = __DataStorage._bytes.getter();
          if (v50)
          {
            uint64_t v51 = v50;
            uint64_t v52 = __DataStorage._offset.getter();
            if (__OFSUB__((int)v21, v52)) {
              goto LABEL_331;
            }
            uint64_t v53 = (char *)(v51 + (int)v21 - v52);
          }
          else
          {
            uint64_t v53 = 0;
          }
          uint64_t v7 = v243;
          uint64_t v66 = __DataStorage._length.getter();
          if (v66 >= (v21 >> 32) - (int)v21) {
            uint64_t v67 = (v21 >> 32) - (int)v21;
          }
          else {
            uint64_t v67 = v66;
          }
          uint64_t v68 = &v53[v67];
          uint64_t v235 = v53;
          if (v53) {
            uint64_t v69 = v68;
          }
          else {
            uint64_t v69 = 0;
          }
          if (v28)
          {
            uint64_t v70 = v236;
            if (v28 == 1)
            {
              uint64_t v71 = (v236 >> 32) - (int)v236;
              if (v236 >> 32 < (int)v236) {
                goto LABEL_342;
              }
              swift_retain();
              uint64_t v72 = __DataStorage._bytes.getter();
              if (v72)
              {
                uint64_t v73 = __DataStorage._offset.getter();
                if (__OFSUB__((int)v70, v73)) {
                  goto LABEL_363;
                }
                v72 += (int)v70 - v73;
              }
              uint64_t v74 = __DataStorage._length.getter();
              if (v74 >= v71) {
                uint64_t v75 = (v70 >> 32) - (int)v70;
              }
              else {
                uint64_t v75 = v74;
              }
              uint64_t v76 = v72 + v75;
              if (v72) {
                uint64_t v77 = v76;
              }
              else {
                uint64_t v77 = 0;
              }
              uint64_t v78 = v240;
              sub_1008D42BC(v72, v235, v77, (BOOL *)__s1);
              uint64_t v240 = v78;
              sub_100510084(v70, v23);
              sub_100510084(v21, v20);
              uint64_t v7 = v243;
              a1 = v237;
              if ((__s1[0] & 1) == 0) {
                goto LABEL_311;
              }
            }
            else
            {
              unint64_t v232 = v69;
              uint64_t v101 = *(void *)(v236 + 16);
              uint64_t v102 = *(void *)(v236 + 24);
              swift_retain();
              swift_retain();
              uint64_t v103 = __DataStorage._bytes.getter();
              if (v103)
              {
                uint64_t v104 = __DataStorage._offset.getter();
                a1 = v237;
                if (__OFSUB__(v101, v104)) {
                  goto LABEL_361;
                }
                v103 += v101 - v104;
              }
              else
              {
                a1 = v237;
              }
              BOOL v27 = __OFSUB__(v102, v101);
              uint64_t v105 = v102 - v101;
              if (v27) {
                goto LABEL_345;
              }
              uint64_t v106 = __DataStorage._length.getter();
              if (v106 >= v105) {
                uint64_t v107 = v105;
              }
              else {
                uint64_t v107 = v106;
              }
              uint64_t v108 = v103 + v107;
              if (v103) {
                uint64_t v109 = v108;
              }
              else {
                uint64_t v109 = 0;
              }
              uint64_t v110 = v240;
              sub_1008D42BC(v103, v235, v109, (BOOL *)__s1);
              uint64_t v240 = v110;
              swift_release();
              swift_release();
              sub_100510084(v21, v20);
              uint64_t v7 = v243;
              if ((__s1[0] & 1) == 0) {
                goto LABEL_311;
              }
            }
          }
          else
          {
            __s1[0] = v236;
            LOWORD(__s1[1]) = v23;
            BYTE2(__s1[1]) = BYTE2(v23);
            BYTE3(__s1[1]) = BYTE3(v23);
            BYTE4(__s1[1]) = BYTE4(v23);
            BYTE5(__s1[1]) = BYTE5(v23);
            if (!v235) {
              goto LABEL_374;
            }
            int v90 = memcmp(v235, __s1, BYTE6(v23));
            sub_100510084(v21, v20);
            a1 = v237;
            if (v90) {
              goto LABEL_311;
            }
          }
          goto LABEL_150;
        case 2uLL:
          uint64_t v236 = (uint64_t)a2;
          uint64_t v37 = *(void *)(v21 + 16);
          uint64_t v38 = *(void *)(v21 + 24);
          swift_retain();
          swift_retain();
          uint64_t v39 = __DataStorage._bytes.getter();
          if (v39)
          {
            uint64_t v40 = v39;
            uint64_t v41 = v20 & 0x3FFFFFFFFFFFFFFFLL;
            uint64_t v42 = __DataStorage._offset.getter();
            if (__OFSUB__(v37, v42)) {
              goto LABEL_330;
            }
            uint64_t v43 = (char *)(v40 + v37 - v42);
            uint64_t v44 = v38 - v37;
            if (__OFSUB__(v38, v37))
            {
LABEL_327:
              __break(1u);
LABEL_328:
              __break(1u);
LABEL_329:
              __break(1u);
LABEL_330:
              __break(1u);
LABEL_331:
              __break(1u);
LABEL_332:
              __break(1u);
LABEL_333:
              __break(1u);
LABEL_334:
              __break(1u);
LABEL_335:
              __break(1u);
LABEL_336:
              __break(1u);
LABEL_337:
              __break(1u);
LABEL_338:
              __break(1u);
LABEL_339:
              __break(1u);
LABEL_340:
              __break(1u);
LABEL_341:
              __break(1u);
LABEL_342:
              __break(1u);
LABEL_343:
              __break(1u);
LABEL_344:
              __break(1u);
LABEL_345:
              __break(1u);
LABEL_346:
              __break(1u);
LABEL_347:
              __break(1u);
LABEL_348:
              __break(1u);
LABEL_349:
              __break(1u);
LABEL_350:
              __break(1u);
LABEL_351:
              __break(1u);
LABEL_352:
              __break(1u);
LABEL_353:
              __break(1u);
LABEL_354:
              __break(1u);
LABEL_355:
              __break(1u);
LABEL_356:
              __break(1u);
LABEL_357:
              __break(1u);
LABEL_358:
              __break(1u);
LABEL_359:
              __break(1u);
LABEL_360:
              __break(1u);
LABEL_361:
              __break(1u);
LABEL_362:
              __break(1u);
LABEL_363:
              __break(1u);
LABEL_364:
              __break(1u);
LABEL_365:
              __break(1u);
LABEL_366:
              __break(1u);
LABEL_367:
              __break(1u);
LABEL_368:
              __break(1u);
            }
          }
          else
          {
            uint64_t v41 = v20 & 0x3FFFFFFFFFFFFFFFLL;
            uint64_t v43 = 0;
            uint64_t v44 = v38 - v37;
            if (__OFSUB__(v38, v37)) {
              goto LABEL_327;
            }
          }
          size_t v54 = (void *)v41;
          uint64_t v55 = __DataStorage._length.getter();
          if (v55 >= v44) {
            uint64_t v56 = v44;
          }
          else {
            uint64_t v56 = v55;
          }
          int v57 = &v43[v56];
          if (v43) {
            uint64_t v58 = v57;
          }
          else {
            uint64_t v58 = 0;
          }
          if (v28)
          {
            uint64_t v235 = v54;
            a1 = v237;
            if (v28 == 1)
            {
              if (v22 >> 32 < (int)v22) {
                goto LABEL_343;
              }
              swift_retain();
              uint64_t v59 = __DataStorage._bytes.getter();
              if (v59)
              {
                uint64_t v60 = __DataStorage._offset.getter();
                if (__OFSUB__((int)v22, v60)) {
                  goto LABEL_362;
                }
                v59 += (int)v22 - v60;
              }
              uint64_t v61 = __DataStorage._length.getter();
              if (v61 >= (v22 >> 32) - (int)v22) {
                uint64_t v62 = (v22 >> 32) - (int)v22;
              }
              else {
                uint64_t v62 = v61;
              }
              uint64_t v63 = v59 + v62;
              if (v59) {
                uint64_t v64 = v63;
              }
              else {
                uint64_t v64 = 0;
              }
              uint64_t v65 = v240;
              sub_1008D42BC(v59, v43, v64, (BOOL *)__s1);
              uint64_t v240 = v65;
              sub_100510084(v22, v23);
              swift_release();
            }
            else
            {
              unint64_t v232 = v58;
              uint64_t v91 = *(void *)(v22 + 16);
              uint64_t v92 = *(void *)(v22 + 24);
              swift_retain();
              swift_retain();
              uint64_t v93 = __DataStorage._bytes.getter();
              if (v93)
              {
                uint64_t v94 = __DataStorage._offset.getter();
                if (__OFSUB__(v91, v94)) {
                  goto LABEL_360;
                }
                v93 += v91 - v94;
              }
              BOOL v27 = __OFSUB__(v92, v91);
              uint64_t v95 = v92 - v91;
              if (v27) {
                goto LABEL_344;
              }
              uint64_t v96 = __DataStorage._length.getter();
              if (v96 >= v95) {
                uint64_t v97 = v95;
              }
              else {
                uint64_t v97 = v96;
              }
              uint64_t v98 = v93 + v97;
              if (v93) {
                uint64_t v99 = v98;
              }
              else {
                uint64_t v99 = 0;
              }
              uint64_t v100 = v240;
              sub_1008D42BC(v93, v43, v99, (BOOL *)__s1);
              uint64_t v240 = v100;
              if (v100) {
                goto LABEL_383;
              }
              swift_release();
              swift_release();
              swift_release();
            }
            swift_release();
            uint64_t v7 = v243;
            a2 = (void *)v236;
            if ((__s1[0] & 1) == 0) {
              goto LABEL_311;
            }
          }
          else
          {
            __s1[0] = v22;
            LOWORD(__s1[1]) = v23;
            BYTE2(__s1[1]) = BYTE2(v23);
            BYTE3(__s1[1]) = BYTE3(v23);
            BYTE4(__s1[1]) = BYTE4(v23);
            BYTE5(__s1[1]) = BYTE5(v23);
            uint64_t v7 = v243;
            a1 = v237;
            if (!v43) {
              goto LABEL_373;
            }
            int v89 = memcmp(v43, __s1, BYTE6(v23));
            swift_release();
            swift_release();
            a2 = (void *)v236;
            if (v89) {
              goto LABEL_311;
            }
          }
LABEL_150:
          uint64_t v112 = v244[4];
          unint64_t v111 = v244[5];
          uint64_t v114 = *((void *)v7 + 4);
          unint64_t v113 = *((void *)v7 + 5);
          uint64_t v115 = 0;
          switch(v111 >> 62)
          {
            case 1uLL:
              LODWORD(v115) = HIDWORD(v112) - v112;
              if (__OFSUB__(HIDWORD(v112), v112)) {
                goto LABEL_319;
              }
              uint64_t v115 = (int)v115;
LABEL_155:
              unint64_t v118 = v113 >> 62;
              switch(v113 >> 62)
              {
                case 1uLL:
                  LODWORD(v119) = HIDWORD(v114) - v114;
                  if (__OFSUB__(HIDWORD(v114), v114)) {
                    goto LABEL_321;
                  }
                  uint64_t v119 = (int)v119;
LABEL_164:
                  if (v115 != v119) {
                    goto LABEL_311;
                  }
                  if (v115 < 1) {
                    goto LABEL_252;
                  }
                  break;
                case 2uLL:
                  uint64_t v121 = *(void *)(v114 + 16);
                  uint64_t v120 = *(void *)(v114 + 24);
                  BOOL v27 = __OFSUB__(v120, v121);
                  uint64_t v119 = v120 - v121;
                  if (!v27) {
                    goto LABEL_164;
                  }
                  goto LABEL_320;
                case 3uLL:
                  if (v115) {
                    goto LABEL_311;
                  }
                  goto LABEL_252;
                default:
                  uint64_t v119 = BYTE6(v113);
                  goto LABEL_164;
              }
              break;
            case 2uLL:
              uint64_t v117 = *(void *)(v112 + 16);
              uint64_t v116 = *(void *)(v112 + 24);
              BOOL v27 = __OFSUB__(v116, v117);
              uint64_t v115 = v116 - v117;
              if (!v27) {
                goto LABEL_155;
              }
              goto LABEL_318;
            case 3uLL:
              goto LABEL_155;
            default:
              uint64_t v115 = BYTE6(v111);
              goto LABEL_155;
          }
          break;
        case 3uLL:
          memset(__s1, 0, 14);
          if (!v28) {
            goto LABEL_58;
          }
          if (v28 == 1)
          {
            uint64_t v32 = (v22 >> 32) - (int)v22;
            if (v22 >> 32 < (int)v22) {
              goto LABEL_337;
            }
            swift_retain();
            uint64_t v45 = __DataStorage._bytes.getter();
            if (!v45) {
              goto LABEL_371;
            }
            uint64_t v34 = v45;
            uint64_t v46 = __DataStorage._offset.getter();
            uint64_t v36 = (int)v22 - v46;
            if (__OFSUB__((int)v22, v46)) {
              goto LABEL_341;
            }
            goto LABEL_50;
          }
          uint64_t v79 = *(void *)(v22 + 16);
          uint64_t v80 = *(void *)(v22 + 24);
          swift_retain();
          swift_retain();
          char v81 = (char *)__DataStorage._bytes.getter();
          if (v81)
          {
            uint64_t v82 = __DataStorage._offset.getter();
            if (__OFSUB__(v79, v82)) {
              goto LABEL_359;
            }
            v81 += v79 - v82;
          }
          BOOL v27 = __OFSUB__(v80, v79);
          int64_t v83 = v80 - v79;
          if (v27) {
            goto LABEL_339;
          }
          uint64_t v84 = __DataStorage._length.getter();
          if (!v81) {
            goto LABEL_372;
          }
          goto LABEL_112;
        default:
          __s1[0] = v244[2];
          LOWORD(__s1[1]) = v20;
          BYTE2(__s1[1]) = BYTE2(v20);
          BYTE3(__s1[1]) = BYTE3(v20);
          BYTE4(__s1[1]) = BYTE4(v20);
          BYTE5(__s1[1]) = BYTE5(v20);
          if (v28)
          {
            if (v28 == 1)
            {
              uint64_t v32 = (v22 >> 32) - (int)v22;
              if (v22 >> 32 < (int)v22) {
                goto LABEL_336;
              }
              swift_retain();
              uint64_t v33 = __DataStorage._bytes.getter();
              if (!v33)
              {
                __DataStorage._length.getter();
                __break(1u);
LABEL_370:
                __break(1u);
LABEL_371:
                __DataStorage._length.getter();
                __break(1u);
LABEL_372:
                __break(1u);
LABEL_373:
                __break(1u);
LABEL_374:
                __break(1u);
LABEL_375:
                __break(1u);
LABEL_376:
                __break(1u);
LABEL_377:
                __break(1u);
LABEL_378:
                __break(1u);
LABEL_379:
                __break(1u);
LABEL_380:
                __break(1u);
LABEL_381:
                __break(1u);
LABEL_382:
                __DataStorage._length.getter();
                __break(1u);
LABEL_383:
                swift_release();
                swift_release();
                __break(1u);
LABEL_384:
                swift_release();
                swift_release();
                __break(1u);
                JUMPOUT(0x1005BE8A4);
              }
              uint64_t v34 = v33;
              uint64_t v35 = __DataStorage._offset.getter();
              uint64_t v36 = (int)v22 - v35;
              if (__OFSUB__((int)v22, v35)) {
                goto LABEL_340;
              }
LABEL_50:
              uint64_t v47 = __DataStorage._length.getter();
              if (v47 >= v32) {
                size_t v48 = v32;
              }
              else {
                size_t v48 = v47;
              }
              int v49 = memcmp(__s1, (const void *)(v34 + v36), v48);
              sub_100510084(v22, v23);
            }
            else
            {
              uint64_t v85 = *(void *)(v22 + 16);
              uint64_t v86 = *(void *)(v22 + 24);
              swift_retain();
              swift_retain();
              char v81 = (char *)__DataStorage._bytes.getter();
              if (v81)
              {
                uint64_t v87 = __DataStorage._offset.getter();
                if (__OFSUB__(v85, v87)) {
                  goto LABEL_358;
                }
                v81 += v85 - v87;
              }
              BOOL v27 = __OFSUB__(v86, v85);
              int64_t v83 = v86 - v85;
              if (v27) {
                goto LABEL_338;
              }
              uint64_t v84 = __DataStorage._length.getter();
              if (!v81) {
                goto LABEL_370;
              }
LABEL_112:
              if (v84 >= v83) {
                size_t v88 = v83;
              }
              else {
                size_t v88 = v84;
              }
              int v49 = memcmp(__s1, v81, v88);
              swift_release();
              swift_release();
            }
            uint64_t v7 = v243;
            if (v49) {
              goto LABEL_311;
            }
          }
          else
          {
LABEL_58:
            uint64_t __s2 = v22;
            __int16 v246 = v23;
            char v247 = BYTE2(v23);
            char v248 = BYTE3(v23);
            char v249 = BYTE4(v23);
            char v250 = BYTE5(v23);
            if (memcmp(__s1, &__s2, BYTE6(v23))) {
              goto LABEL_311;
            }
          }
          goto LABEL_150;
      }
      switch(v111 >> 62)
      {
        case 1uLL:
          if ((int)v112 > v112 >> 32) {
            goto LABEL_328;
          }
          sub_100510D4C(v244[4], v244[5]);
          uint64_t v142 = __DataStorage._bytes.getter();
          if (v142)
          {
            uint64_t v143 = v142;
            uint64_t v144 = __DataStorage._offset.getter();
            if (__OFSUB__((int)v112, v144)) {
              goto LABEL_333;
            }
            unint64_t v145 = (const void *)(v143 + (int)v112 - v144);
          }
          else
          {
            unint64_t v145 = 0;
          }
          uint64_t v7 = v243;
          __DataStorage._length.getter();
          if (v118)
          {
            if (v118 == 1)
            {
              uint64_t v236 = (uint64_t)v145;
              if (v114 >> 32 < (int)v114) {
                goto LABEL_352;
              }
              swift_retain();
              uint64_t v146 = (char *)__DataStorage._bytes.getter();
              if (v146)
              {
                uint64_t v147 = __DataStorage._offset.getter();
                if (__OFSUB__((int)v114, v147)) {
                  goto LABEL_368;
                }
                v146 += (int)v114 - v147;
              }
              uint64_t v148 = __DataStorage._length.getter();
              if (v148 >= (v114 >> 32) - (int)v114) {
                size_t v149 = (v114 >> 32) - (int)v114;
              }
              else {
                size_t v149 = v148;
              }
              if (!v236) {
                goto LABEL_376;
              }
              uint64_t v7 = v243;
              if (!v146) {
                goto LABEL_377;
              }
              int v150 = memcmp((const void *)v236, v146, v149);
              sub_100510084(v114, v113);
            }
            else
            {
              uint64_t v169 = *(void *)(v114 + 16);
              uint64_t v170 = *(void *)(v114 + 24);
              swift_retain();
              swift_retain();
              Class v171 = (char *)__DataStorage._bytes.getter();
              if (v171)
              {
                uint64_t v172 = __DataStorage._offset.getter();
                if (__OFSUB__(v169, v172)) {
                  goto LABEL_367;
                }
                v171 += v169 - v172;
              }
              BOOL v27 = __OFSUB__(v170, v169);
              int64_t v173 = v170 - v169;
              if (v27) {
                goto LABEL_353;
              }
              uint64_t v174 = __DataStorage._length.getter();
              if (v174 >= v173) {
                size_t v175 = v173;
              }
              else {
                size_t v175 = v174;
              }
              if (!v145) {
                goto LABEL_378;
              }
              uint64_t v7 = v243;
              if (!v171) {
                goto LABEL_379;
              }
              int v150 = memcmp(v145, v171, v175);
              swift_release();
              swift_release();
            }
          }
          else
          {
            __s1[0] = v114;
            LOWORD(__s1[1]) = v113;
            BYTE2(__s1[1]) = BYTE2(v113);
            BYTE3(__s1[1]) = BYTE3(v113);
            BYTE4(__s1[1]) = BYTE4(v113);
            BYTE5(__s1[1]) = BYTE5(v113);
            if (!v145) {
              goto LABEL_381;
            }
            int v150 = memcmp(v145, __s1, BYTE6(v113));
          }
          sub_100510084(v112, v111);
          if (v150) {
            goto LABEL_311;
          }
          goto LABEL_252;
        case 2uLL:
          uint64_t v129 = *(void *)(v112 + 16);
          swift_retain();
          swift_retain();
          uint64_t v130 = __DataStorage._bytes.getter();
          if (!v130) {
            goto LABEL_179;
          }
          uint64_t v131 = __DataStorage._offset.getter();
          if (__OFSUB__(v129, v131)) {
            goto LABEL_332;
          }
          v130 += v129 - v131;
LABEL_179:
          __DataStorage._length.getter();
          if (!v118)
          {
            unint64_t v231 = v231 & 0xFF00000000000000 | v113 & 0xFFFFFFFFFFFFFFLL;
            id v161 = (void *)v130;
            uint64_t v162 = v240;
            char v134 = sub_1005C232C(v114, v231, v161);
            uint64_t v240 = v162;
            goto LABEL_234;
          }
          if (v118 == 1)
          {
            if (v114 >> 32 < (int)v114) {
              goto LABEL_348;
            }
            sub_100510D4C(v114, v113);
            uint64_t v132 = (const void *)v130;
            uint64_t v133 = v240;
            char v134 = sub_1005C228C((int)v114, v114 >> 32, v113 & 0x3FFFFFFFFFFFFFFFLL, v132);
            uint64_t v240 = v133;
            sub_100510084(v114, v113);
LABEL_234:
            swift_release();
            swift_release();
            uint64_t v7 = v243;
            if ((v134 & 1) == 0) {
              goto LABEL_311;
            }
            goto LABEL_252;
          }
          uint64_t v163 = *(void *)(v114 + 16);
          uint64_t v164 = *(void *)(v114 + 24);
          swift_retain();
          swift_retain();
          id v165 = (const void *)v130;
          uint64_t v166 = v240;
          char v167 = sub_1005C228C(v163, v164, v113 & 0x3FFFFFFFFFFFFFFFLL, v165);
          uint64_t v240 = v166;
          if (v166) {
            goto LABEL_383;
          }
          char v168 = v167;
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v7 = v243;
          if ((v168 & 1) == 0) {
            goto LABEL_311;
          }
LABEL_252:
          uint64_t v176 = v244[6];
          unint64_t v177 = v244[7];
          uint64_t v178 = *((void *)v7 + 6);
          unint64_t v179 = *((void *)v7 + 7);
          uint64_t v180 = 0;
          switch(v177 >> 62)
          {
            case 1uLL:
              LODWORD(v180) = HIDWORD(v176) - v176;
              if (__OFSUB__(HIDWORD(v176), v176)) {
                goto LABEL_323;
              }
              uint64_t v180 = (int)v180;
LABEL_257:
              unint64_t v183 = v179 >> 62;
              switch(v179 >> 62)
              {
                case 1uLL:
                  LODWORD(v184) = HIDWORD(v178) - v178;
                  if (__OFSUB__(HIDWORD(v178), v178)) {
                    goto LABEL_325;
                  }
                  uint64_t v184 = (int)v184;
LABEL_266:
                  if (v180 != v184) {
                    goto LABEL_311;
                  }
                  if (v180 < 1) {
                    goto LABEL_307;
                  }
                  break;
                case 2uLL:
                  uint64_t v186 = *(void *)(v178 + 16);
                  uint64_t v185 = *(void *)(v178 + 24);
                  BOOL v27 = __OFSUB__(v185, v186);
                  uint64_t v184 = v185 - v186;
                  if (!v27) {
                    goto LABEL_266;
                  }
                  goto LABEL_324;
                case 3uLL:
                  if (v180) {
                    goto LABEL_311;
                  }
                  goto LABEL_307;
                default:
                  uint64_t v184 = BYTE6(v179);
                  goto LABEL_266;
              }
              break;
            case 2uLL:
              uint64_t v182 = *(void *)(v176 + 16);
              uint64_t v181 = *(void *)(v176 + 24);
              BOOL v27 = __OFSUB__(v181, v182);
              uint64_t v180 = v181 - v182;
              if (!v27) {
                goto LABEL_257;
              }
              goto LABEL_322;
            case 3uLL:
              goto LABEL_257;
            default:
              uint64_t v180 = BYTE6(v177);
              goto LABEL_257;
          }
          break;
        case 3uLL:
          memset(__s1, 0, 14);
          if (!v118) {
            goto LABEL_201;
          }
          if (v118 == 1)
          {
            if (v114 >> 32 < (int)v114) {
              goto LABEL_347;
            }
            swift_retain();
            uint64_t v135 = __DataStorage._bytes.getter();
            if (v135)
            {
              uint64_t v136 = __DataStorage._offset.getter();
              if (__OFSUB__((int)v114, v136)) {
                goto LABEL_366;
              }
              v135 += (int)v114 - v136;
            }
            uint64_t v137 = __DataStorage._length.getter();
            if (v137 >= (v114 >> 32) - (int)v114) {
              uint64_t v138 = (v114 >> 32) - (int)v114;
            }
            else {
              uint64_t v138 = v137;
            }
            uint64_t v139 = v135 + v138;
            if (v135) {
              uint64_t v140 = v139;
            }
            else {
              uint64_t v140 = 0;
            }
            uint64_t v141 = v240;
            sub_1008D42BC(v135, __s1, v140, (BOOL *)&__s2);
            uint64_t v240 = v141;
            sub_100510084(v114, v113);
            uint64_t v7 = v243;
            if ((__s2 & 1) == 0) {
              goto LABEL_311;
            }
          }
          else
          {
            uint64_t v157 = *(void *)(v114 + 16);
            uint64_t v158 = *(void *)(v114 + 24);
            swift_retain();
            swift_retain();
            uint64_t v153 = (char *)__DataStorage._bytes.getter();
            if (v153)
            {
              uint64_t v159 = __DataStorage._offset.getter();
              if (__OFSUB__(v157, v159)) {
                goto LABEL_364;
              }
              v153 += v157 - v159;
            }
            BOOL v27 = __OFSUB__(v158, v157);
            int64_t v155 = v158 - v157;
            if (v27) {
              goto LABEL_349;
            }
            uint64_t v156 = __DataStorage._length.getter();
            if (!v153) {
              goto LABEL_375;
            }
LABEL_227:
            if (v156 >= v155) {
              size_t v160 = v155;
            }
            else {
              size_t v160 = v156;
            }
            int v128 = memcmp(__s1, v153, v160);
            swift_release();
            swift_release();
LABEL_231:
            uint64_t v7 = v243;
            if (v128) {
              goto LABEL_311;
            }
          }
          goto LABEL_252;
        default:
          __s1[0] = v244[4];
          LOWORD(__s1[1]) = v111;
          BYTE2(__s1[1]) = BYTE2(v111);
          BYTE3(__s1[1]) = BYTE3(v111);
          BYTE4(__s1[1]) = BYTE4(v111);
          BYTE5(__s1[1]) = BYTE5(v111);
          if (!v118)
          {
LABEL_201:
            uint64_t __s2 = v114;
            __int16 v246 = v113;
            char v247 = BYTE2(v113);
            char v248 = BYTE3(v113);
            char v249 = BYTE4(v113);
            char v250 = BYTE5(v113);
            if (memcmp(__s1, &__s2, BYTE6(v113))) {
              goto LABEL_311;
            }
            goto LABEL_252;
          }
          if (v118 == 1)
          {
            if (v114 >> 32 < (int)v114) {
              goto LABEL_346;
            }
            sub_100510D4C(v114, v113);
            uint64_t v122 = __DataStorage._bytes.getter();
            if (!v122) {
              goto LABEL_382;
            }
            uint64_t v123 = v122;
            uint64_t v124 = __DataStorage._offset.getter();
            uint64_t v125 = (int)v114 - v124;
            if (__OFSUB__((int)v114, v124)) {
              goto LABEL_351;
            }
            uint64_t v126 = __DataStorage._length.getter();
            if (v126 >= (v114 >> 32) - (int)v114) {
              size_t v127 = (v114 >> 32) - (int)v114;
            }
            else {
              size_t v127 = v126;
            }
            int v128 = memcmp(__s1, (const void *)(v123 + v125), v127);
            sub_100510084(v114, v113);
            goto LABEL_231;
          }
          uint64_t v151 = *(void *)(v114 + 16);
          uint64_t v152 = *(void *)(v114 + 24);
          swift_retain();
          swift_retain();
          uint64_t v153 = (char *)__DataStorage._bytes.getter();
          if (v153)
          {
            uint64_t v154 = __DataStorage._offset.getter();
            if (__OFSUB__(v151, v154)) {
              goto LABEL_365;
            }
            v153 += v151 - v154;
          }
          BOOL v27 = __OFSUB__(v152, v151);
          int64_t v155 = v152 - v151;
          if (v27) {
            goto LABEL_350;
          }
          uint64_t v156 = __DataStorage._length.getter();
          if (!v153) {
            goto LABEL_380;
          }
          goto LABEL_227;
      }
      switch(v177 >> 62)
      {
        case 1uLL:
          if ((int)v176 > v176 >> 32) {
            goto LABEL_329;
          }
          sub_100510D4C(v244[6], v244[7]);
          uint64_t v200 = __DataStorage._bytes.getter();
          if (!v200) {
            goto LABEL_287;
          }
          uint64_t v201 = __DataStorage._offset.getter();
          if (__OFSUB__((int)v176, v201)) {
            goto LABEL_335;
          }
          v200 += (int)v176 - v201;
LABEL_287:
          __DataStorage._length.getter();
          if (!v183)
          {
            unint64_t v229 = v229 & 0xFF00000000000000 | v179 & 0xFFFFFFFFFFFFFFLL;
            long long v221 = (void *)v200;
            uint64_t v222 = v240;
            char v196 = sub_1005C232C(v178, v229, v221);
            uint64_t v240 = v222;
            goto LABEL_304;
          }
          if (v183 == 1)
          {
            if (v178 >> 32 < (int)v178) {
              goto LABEL_357;
            }
            sub_100510D4C(v178, v179);
            uint64_t v202 = (const void *)v200;
            uint64_t v203 = v240;
            char v196 = sub_1005C228C((int)v178, v178 >> 32, v179 & 0x3FFFFFFFFFFFFFFFLL, v202);
            uint64_t v240 = v203;
            sub_100510084(v178, v179);
LABEL_304:
            uint64_t v198 = v176;
            unint64_t v199 = v177;
LABEL_305:
            sub_100510084(v198, v199);
            goto LABEL_306;
          }
          uint64_t v224 = *(void *)(v178 + 16);
          uint64_t v225 = *(void *)(v178 + 24);
          swift_retain();
          swift_retain();
          unint64_t v226 = (const void *)v200;
          uint64_t v227 = v240;
          LOBYTE(v224) = sub_1005C228C(v224, v225, v179 & 0x3FFFFFFFFFFFFFFFLL, v226);
          uint64_t v240 = v227;
          swift_release();
          swift_release();
          sub_100510084(v176, v177);
          uint64_t v7 = v243;
          if ((v224 & 1) == 0) {
            goto LABEL_311;
          }
LABEL_307:
          type metadata accessor for UnknownStorage();
          sub_1005C689C(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
          uint64_t v7 = v243;
          if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0) {
            goto LABEL_311;
          }
          sub_1005C7E18((uint64_t)v7, type metadata accessor for CRLProto_Path.Element);
          uint64_t v13 = v244;
          sub_1005C7E18((uint64_t)v244, type metadata accessor for CRLProto_Path.Element);
          unint64_t v15 = v241 + v238;
          uint64_t result = 1;
          uint64_t v14 = v242 - 1;
          if (v242 == 1) {
            return result;
          }
          break;
        case 2uLL:
          uint64_t v189 = *(void *)(v176 + 16);
          swift_retain();
          swift_retain();
          uint64_t v190 = __DataStorage._bytes.getter();
          if (v190)
          {
            uint64_t v191 = __DataStorage._offset.getter();
            BOOL v27 = __OFSUB__(v189, v191);
            uint64_t v192 = v189 - v191;
            unint64_t v193 = v233;
            if (v27) {
              goto LABEL_334;
            }
            v190 += v192;
            __DataStorage._length.getter();
            if (!v183)
            {
LABEL_294:
              unint64_t v233 = v193 & 0xFF00000000000000 | v179 & 0xFFFFFFFFFFFFFFLL;
              int v208 = (void *)v190;
              uint64_t v209 = v240;
              char v196 = sub_1005C232C(v178, v233, v208);
              uint64_t v240 = v209;
              goto LABEL_295;
            }
          }
          else
          {
            unint64_t v193 = v233;
            __DataStorage._length.getter();
            if (!v183) {
              goto LABEL_294;
            }
          }
          if (v183 == 1)
          {
            if (v178 >> 32 < (int)v178) {
              goto LABEL_356;
            }
            sub_100510D4C(v178, v179);
            uint64_t v194 = (const void *)v190;
            uint64_t v195 = v240;
            char v196 = sub_1005C228C((int)v178, v178 >> 32, v179 & 0x3FFFFFFFFFFFFFFFLL, v194);
            uint64_t v240 = v195;
            sub_100510084(v178, v179);
LABEL_295:
            swift_release();
            swift_release();
LABEL_306:
            uint64_t v7 = v243;
            if ((v196 & 1) == 0) {
              goto LABEL_311;
            }
            goto LABEL_307;
          }
          uint64_t v214 = v179 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v215 = *(void *)(v178 + 16);
          uint64_t v216 = *(void *)(v178 + 24);
          swift_retain();
          swift_retain();
          uint64_t v217 = (const void *)v190;
          uint64_t v218 = v240;
          char v219 = sub_1005C228C(v215, v216, v214, v217);
          uint64_t v240 = v218;
          if (v218) {
            goto LABEL_384;
          }
          char v220 = v219;
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v7 = v243;
          if ((v220 & 1) == 0) {
            goto LABEL_311;
          }
          goto LABEL_307;
        case 3uLL:
          memset(__s1, 0, 14);
          if (!v183)
          {
            unint64_t v210 = v234 & 0xFF00000000000000 | v179 & 0xFFFFFFFFFFFFFFLL;
            uint64_t v211 = v178;
            unint64_t v234 = v210;
            goto LABEL_298;
          }
          if (v183 != 1) {
            goto LABEL_291;
          }
          uint64_t v187 = (int)v178;
          uint64_t v188 = v178 >> 32;
          if (v178 >> 32 < (int)v178) {
            goto LABEL_355;
          }
          goto LABEL_282;
        default:
          __s1[0] = v244[6];
          LOWORD(__s1[1]) = v177;
          BYTE2(__s1[1]) = BYTE2(v177);
          BYTE3(__s1[1]) = BYTE3(v177);
          BYTE4(__s1[1]) = BYTE4(v177);
          BYTE5(__s1[1]) = BYTE5(v177);
          if (!v183)
          {
            unint64_t v210 = v230 & 0xFF00000000000000 | v179 & 0xFFFFFFFFFFFFFFLL;
            uint64_t v211 = v178;
            unint64_t v230 = v210;
LABEL_298:
            uint64_t v212 = v240;
            BOOL v213 = sub_1005C232C(v211, v210, __s1);
            uint64_t v240 = v212;
            uint64_t v7 = v243;
            if (!v213) {
              goto LABEL_311;
            }
            goto LABEL_307;
          }
          if (v183 != 1)
          {
LABEL_291:
            uint64_t v204 = *(void *)(v178 + 16);
            uint64_t v205 = *(void *)(v178 + 24);
            swift_retain();
            swift_retain();
            uint64_t v206 = v205;
            uint64_t v207 = v240;
            LOBYTE(v204) = sub_1005C228C(v204, v206, v179 & 0x3FFFFFFFFFFFFFFFLL, __s1);
            uint64_t v240 = v207;
            uint64_t v7 = v243;
            swift_release();
            swift_release();
            if ((v204 & 1) == 0) {
              goto LABEL_311;
            }
            goto LABEL_307;
          }
          uint64_t v187 = (int)v178;
          uint64_t v188 = v178 >> 32;
          if (v178 >> 32 < (int)v178) {
            goto LABEL_354;
          }
LABEL_282:
          sub_100510D4C(v178, v179);
          uint64_t v197 = v240;
          char v196 = sub_1005C228C(v187, v188, v179 & 0x3FFFFFFFFFFFFFFFLL, __s1);
          uint64_t v240 = v197;
          uint64_t v198 = v178;
          unint64_t v199 = v179;
          goto LABEL_305;
      }
    }
LABEL_311:
    sub_1005C7E18((uint64_t)v7, type metadata accessor for CRLProto_Path.Element);
    sub_1005C7E18((uint64_t)v244, type metadata accessor for CRLProto_Path.Element);
    return 0;
  }
  return 1;
}

id sub_1005BE944(unint64_t a1, uint64_t a2)
{
  return sub_1005BE95C(a1, a2, (uint64_t (*)(void))type metadata accessor for CRLSharedHighlight);
}

id sub_1005BE95C(unint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a1;
  unint64_t v6 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7 == v31) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v7) = 0;
    return (id)(v7 & 1);
  }
  if (v7 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v7) {
    goto LABEL_38;
  }
  uint64_t v8 = v5 & 0xFFFFFFFFFFFFFF8;
  if (v5 < 0) {
    uint64_t v8 = v5;
  }
  if (!v6) {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v11 = a2;
  }
  else {
    uint64_t v11 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v10 = v11;
  }
  if (v8 == v10)
  {
LABEL_38:
    LOBYTE(v7) = 1;
    return (id)(v7 & 1);
  }
  if ((v7 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v32 = v5 & 0xC000000000000001;
  if ((v5 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v5 + 32); ; id result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
  {
    uint64_t v13 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_22:
    unint64_t v15 = v14;
    a3 = (uint64_t (*)(void))a3(0);
    char v16 = static NSObject.== infix(_:_:)();

    if ((v16 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v17 = v7 - 1;
    if (v7 == 1) {
      return (id)(v7 & 1);
    }
    if (((a2 | v5) & 0xC000000000000001) != 0)
    {
      uint64_t v18 = 0;
      unint64_t v19 = v7 - 2;
      while (v17 != v18)
      {
        unint64_t v7 = v18 + 1;
        if (v32) {
          id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v20 = *(id *)(v5 + 40 + 8 * v18);
        }
        uint64_t v21 = v20;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v7 >= *(void *)(v9 + 16)) {
            goto LABEL_54;
          }
          id v22 = *(id *)(a2 + 40 + 8 * v18);
        }
        unint64_t v23 = v22;
        unint64_t v7 = static NSObject.== infix(_:_:)();

        if ((v7 & 1) != 0 && v19 != v18++) {
          continue;
        }
        return (id)(v7 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v25 = *(void *)(v9 + 16);
      if (v25 <= 1) {
        unint64_t v25 = 1;
      }
      unint64_t v26 = v25 - 1;
      BOOL v27 = (void **)(v5 + 40);
      uint64_t v9 = a2 + 40;
      while (v17)
      {
        if (!v26) {
          goto LABEL_53;
        }
        uint64_t v29 = *v27++;
        unint64_t v28 = v29;
        uint64_t v30 = *(void **)v9;
        v9 += 8;
        a2 = v28;
        uint64_t v5 = v30;
        unint64_t v7 = static NSObject.== infix(_:_:)();

        if (v7)
        {
          --v26;
          if (--v17) {
            continue;
          }
        }
        return (id)(v7 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v9 + 16))
  {
    id v14 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005BEC40(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    goto LABEL_7;
  }
  if (!v2 || a1 == a2) {
    goto LABEL_6;
  }
  uint64_t v5 = a1[4];
  uint64_t v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v7 = sub_100ED67F0(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
LABEL_7:
    char v8 = 0;
    return v8 & 1;
  }
  if (v2 == 1)
  {
LABEL_6:
    char v8 = 1;
    return v8 & 1;
  }
  uint64_t v10 = v2 - 2;
  uint64_t v11 = a1 + 5;
  uint64_t v12 = a2 + 5;
  do
  {
    uint64_t v14 = *v11++;
    uint64_t v13 = v14;
    uint64_t v15 = *v12++;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v8 = sub_100ED67F0(v13, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL v17 = v10-- != 0;
  }
  while ((v8 & 1) != 0 && v17);
  return v8 & 1;
}

id sub_1005BED3C(unint64_t a1, uint64_t a2)
{
  return sub_1005BE95C(a1, a2, (uint64_t (*)(void))type metadata accessor for CRLSceneInfo);
}

id sub_1005BED54(unint64_t a1, uint64_t a2)
{
  return sub_1005BE95C(a1, a2, (uint64_t (*)(void))type metadata accessor for CRLBoardLibraryViewModelItemNode);
}

id sub_1005BED6C(unint64_t a1, uint64_t a2)
{
  return sub_1005BED80(a1, a2, (uint64_t)&qword_1016838E0);
}

id sub_1005BED80(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7 == v28) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v7) = 0;
    return (id)(v7 & 1);
  }
  if (v7 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v7) {
    goto LABEL_38;
  }
  uint64_t v8 = v5 & 0xFFFFFFFFFFFFFF8;
  if (v5 < 0) {
    uint64_t v8 = v5;
  }
  if (!v6) {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v11 = a2;
  }
  else {
    uint64_t v11 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v10 = v11;
  }
  if (v8 == v10)
  {
LABEL_38:
    LOBYTE(v7) = 1;
    return (id)(v7 & 1);
  }
  if ((v7 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v29 = v5 & 0xC000000000000001;
  if ((v5 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v5 + 32); ; id result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
  {
    uint64_t v13 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_22:
    uint64_t v15 = v14;
    sub_10050BF48(0, (unint64_t *)a3);
    a3 = static NSObject.== infix(_:_:)();

    if ((a3 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v16 = v7 - 1;
    if (v7 == 1) {
      return (id)(v7 & 1);
    }
    if (((a2 | v5) & 0xC000000000000001) != 0)
    {
      uint64_t v17 = 0;
      unint64_t v18 = v7 - 2;
      while (v16 != v17)
      {
        unint64_t v7 = v17 + 1;
        if (v29) {
          id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v19 = *(id *)(v5 + 40 + 8 * v17);
        }
        a3 = (uint64_t)v19;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v7 >= *(void *)(v9 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v17);
        }
        uint64_t v21 = v20;
        unint64_t v7 = static NSObject.== infix(_:_:)();

        if ((v7 & 1) != 0 && v18 != v17++) {
          continue;
        }
        return (id)(v7 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v9 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      a3 = v23 - 1;
      uint64_t v24 = (void **)(v5 + 40);
      uint64_t v9 = a2 + 40;
      while (v16)
      {
        if (!a3) {
          goto LABEL_53;
        }
        unint64_t v26 = *v24++;
        unint64_t v25 = v26;
        BOOL v27 = *(void **)v9;
        v9 += 8;
        a2 = v25;
        uint64_t v5 = v27;
        unint64_t v7 = static NSObject.== infix(_:_:)();

        if (v7)
        {
          --a3;
          if (--v16) {
            continue;
          }
        }
        return (id)(v7 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v9 + 16))
  {
    id v14 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

id sub_1005BF06C(unint64_t a1, uint64_t a2)
{
  return sub_1005BE95C(a1, a2, (uint64_t (*)(void))type metadata accessor for MathExpression);
}

id sub_1005BF084(unint64_t a1, uint64_t a2)
{
  return sub_1005BE95C(a1, a2, (uint64_t (*)(void))type metadata accessor for MathExpressionEvaluationResult);
}

id sub_1005BF09C(unint64_t a1, uint64_t a2)
{
  return sub_1005BED80(a1, a2, (uint64_t)&unk_101674750);
}

id sub_1005BF0B0(unint64_t a1, uint64_t a2)
{
  return sub_1005BED80(a1, a2, (uint64_t)&qword_1016725F0);
}

uint64_t sub_1005BF0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[18] = a7;
  v8[19] = a8;
  v8[20] = type metadata accessor for MainActor();
  v8[21] = static MainActor.shared.getter();
  v8[22] = static MainActor.shared.getter();
  uint64_t v11 = (void *)swift_task_alloc();
  v8[23] = v11;
  *uint64_t v11 = v8;
  v11[1] = sub_1005BF198;
  return sub_1005BF668(a5, a6, 0);
}

uint64_t sub_1005BF198(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 192) = a1;
  *(void *)(v3 + 200) = v1;
  swift_task_dealloc();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v1) {
    unint64_t v6 = sub_1005BF404;
  }
  else {
    unint64_t v6 = sub_1005BF2F8;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_1005BF2F8()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1005BF37C, v1, v0);
}

uint64_t sub_1005BF37C()
{
  uint64_t v1 = v0[18];
  swift_release();
  if (v1) {
    ((void (*)(void, void))v0[18])(v0[24], 0);
  }
  swift_bridgeObjectRelease();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1005BF404()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1005BF488, v1, v0);
}

uint64_t sub_1005BF488()
{
  swift_release();
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[18];
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v4 = v2;
  uint64_t v5 = Error.localizedDescription.getter();
  uint64_t v7 = v6;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  uint64_t v8 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Failed to insert items with error %@.", 37, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v9 = v0[25];
  if (v1)
  {
    uint64_t v10 = (void (*)(uint64_t, uint64_t))v0[18];
    swift_errorRetain();
    v10(v9, 1);
    swift_errorRelease();
  }
  swift_errorRelease();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1005BF668(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 128) = a3;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 40) = type metadata accessor for MainActor();
  *(void *)(v4 + 48) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v4 + 56) = v6;
  *(void *)(v4 + 64) = v5;
  return _swift_task_switch(sub_1005BF70C, v6, v5);
}

uint64_t sub_1005BF70C()
{
  uint64_t v1 = sub_1005B2974(*(void *)(v0 + 16), *(id *)(v0 + 24), *(unsigned __int8 *)(v0 + 128));
  *(void *)(v0 + 72) = v1;
  uint64_t v2 = v1;
  *(void *)(v0 + 80) = static MainActor.shared.getter();
  return _swift_task_switch(sub_1005BF7E0, v2, 0);
}

uint64_t sub_1005BF7E0()
{
  v0[11] = *(void *)(v0[9] + 112);
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[12] = v2;
  v0[13] = v1;
  return _swift_task_switch(sub_1005BF864, v2, v1);
}

uint64_t sub_1005BF864()
{
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1016743E8 + dword_1016743E8);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v1;
  void *v1 = v0;
  v1[1] = sub_1005BF910;
  uint64_t v2 = *(void *)(v0 + 88);
  return v4(v2);
}

uint64_t sub_1005BF910()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 96);
  return _swift_task_switch(sub_1005BFA30, v3, v2);
}

uint64_t sub_1005BFA30()
{
  uint64_t v1 = (void *)v0[11];
  swift_release();
  id v2 = [v1 boardItems];
  type metadata accessor for CRLBoardItem(0);
  v0[15] = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  return _swift_task_switch(sub_1005BFACC, v3, v4);
}

uint64_t sub_1005BFACC()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 120);
  return v1(v2);
}

uint64_t sub_1005BFB40(uint64_t a1)
{
  return _swift_continuation_resume(*(void *)(a1 + 32));
}

uint64_t sub_1005BFB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[18] = a4;
  v5[19] = a5;
  type metadata accessor for MainActor();
  v5[20] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[21] = v7;
  v5[22] = v6;
  return _swift_task_switch(sub_1005BFBE0, v7, v6);
}

uint64_t sub_1005BFBE0()
{
  id v1 = [*(id *)(v0 + 144) errors];
  sub_1005057FC(&qword_101672BD0);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_11;
  }
  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v4 = (id)static OS_os_log.crlError;
  uint64_t v5 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v5, (uint64_t)"There were some errors trying to create items to insert.", 56, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_11;
  }
  uint64_t v7 = Strong;
  id v8 = [Strong layerHost];
  *(void *)(v0 + 184) = v8;

  if (v8)
  {
    Class isa = (Class)[*(id *)(v0 + 144) errors];
    if (!isa)
    {
      static Array._unconditionallyBridgeFromObjectiveC(_:)();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    *(void *)(v0 + 192) = isa;
    id v10 = [*(id *)(v0 + 144) localizedErrorDescription];
    *(void *)(v0 + 200) = v10;
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_1005BFF60;
    uint64_t v11 = swift_continuation_init();
    *(void *)(v0 + 80) = _NSConcreteStackBlock;
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_1005BFB40;
    *(void *)(v0 + 104) = &unk_101508A78;
    *(void *)(v0 + 112) = v11;
    [v8 presentErrors:isa withLocalizedDescription:v10 completionHandler:v0 + 80];
    return _swift_continuation_await(v0 + 16);
  }
  else
  {
LABEL_11:
    swift_release();
    id v12 = [*(id *)(v0 + 144) boardItems];
    type metadata accessor for CRLBoardItem(0);
    unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v14 >= 1)
    {
      id v15 = [*(id *)(v0 + 144) boardItems];
      unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1005C360C(v16, 0, 0);
      swift_bridgeObjectRelease();
    }
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_1005BFF60()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176);
  uint64_t v2 = *(void *)(*(void *)v0 + 168);
  return _swift_task_switch(sub_1005C0068, v2, v1);
}

uint64_t sub_1005C0068()
{
  uint64_t v2 = *(void **)(v0 + 192);
  uint64_t v1 = *(void **)(v0 + 200);
  swift_release();
  swift_unknownObjectRelease();

  id v3 = [*(id *)(v0 + 144) boardItems];
  type metadata accessor for CRLBoardItem(0);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v5 >= 1)
  {
    id v6 = [*(id *)(v0 + 144) boardItems];
    unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1005C360C(v7, 0, 0);
    swift_bridgeObjectRelease();
  }
  id v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

void sub_1005C01B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  unint64_t v23 = &type metadata for CRLFeatureFlags;
  unint64_t v24 = sub_1005396A8();
  LOBYTE(v22[0]) = 0;
  char v7 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v22);
  if (v7)
  {
    uint64_t v8 = a3;
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v9 = (void *)static OS_os_log.crlDefault;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    unint64_t v11 = sub_1005C6EC4();
    id v12 = v9;
    uint64_t v13 = dispatch thunk of Tip.id.getter();
    uint64_t v15 = v14;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v13;
    *(void *)(inited + 40) = v15;
    uint64_t v16 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v16, (uint64_t)"presenting tip from a barButtonItem: %{public}@", 47, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    if (sub_100E5BA58())
    {
      type metadata accessor for TipUIPopoverViewController();
      unint64_t v23 = &type metadata for CRLTipConnectionLinesEntryPointCompact;
      unint64_t v24 = v11;
      swift_unknownObjectRetain();
      uint64_t v17 = (void *)TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)();
      swift_unknownObjectRetain();
      TipUIPopoverViewController.presentationDelegate.setter();
      unint64_t v18 = (void *)swift_allocObject();
      void v18[2] = v4;
      v18[3] = v17;
      v18[4] = a2;
      v18[5] = v8;
      unint64_t v24 = (unint64_t)sub_1005C74DC;
      unint64_t v25 = v18;
      v22[0] = _NSConcreteStackBlock;
      v22[1] = *(void *)"";
      v22[2] = sub_100679958;
      unint64_t v23 = (ValueMetadata *)&unk_101509760;
      uint64_t v19 = _Block_copy(v22);
      id v20 = v4;
      id v21 = v17;
      sub_1005173A0(a2);
      swift_release();
      [v20 presentViewController:v21 animated:1 completion:v19];

      _Block_release(v19);
    }
  }
}

void sub_1005C0484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  unint64_t v23 = &type metadata for CRLFeatureFlags;
  unint64_t v24 = sub_1005396A8();
  LOBYTE(v22[0]) = 0;
  char v7 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v22);
  if (v7)
  {
    uint64_t v8 = a3;
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v9 = (void *)static OS_os_log.crlDefault;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    unint64_t v11 = sub_1005C75F8();
    id v12 = v9;
    uint64_t v13 = dispatch thunk of Tip.id.getter();
    uint64_t v15 = v14;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v13;
    *(void *)(inited + 40) = v15;
    uint64_t v16 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v16, (uint64_t)"presenting tip from a barButtonItem: %{public}@", 47, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    if (sub_100E5BA58())
    {
      type metadata accessor for TipUIPopoverViewController();
      unint64_t v23 = &type metadata for CRLTipSendCopy;
      unint64_t v24 = v11;
      swift_unknownObjectRetain();
      uint64_t v17 = (void *)TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)();
      swift_unknownObjectRetain();
      TipUIPopoverViewController.presentationDelegate.setter();
      unint64_t v18 = (void *)swift_allocObject();
      void v18[2] = v4;
      v18[3] = v17;
      v18[4] = a2;
      v18[5] = v8;
      unint64_t v24 = (unint64_t)sub_1005C76A0;
      unint64_t v25 = v18;
      v22[0] = _NSConcreteStackBlock;
      v22[1] = *(void *)"";
      v22[2] = sub_100679958;
      unint64_t v23 = (ValueMetadata *)&unk_1015097B0;
      uint64_t v19 = _Block_copy(v22);
      id v20 = v4;
      id v21 = v17;
      sub_1005173A0(a2);
      swift_release();
      [v20 presentViewController:v21 animated:1 completion:v19];

      _Block_release(v19);
    }
  }
}

uint64_t sub_1005C0750(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  swift_unknownObjectWeakAssign();
  uint64_t v9 = &type metadata for CRLTipConnectionLinesEntryPointCompact;
  unint64_t v10 = sub_1005C6EC4();
  sub_10051B3EC((uint64_t)v8, (uint64_t)v7, &qword_101674708);
  uint64_t v5 = a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip;
  swift_beginAccess();
  sub_1005C74E8((uint64_t)v7, v5);
  uint64_t result = swift_endAccess();
  if (a3) {
    return a3(result);
  }
  return result;
}

uint64_t sub_1005C0808(uint64_t a1, int *a2)
{
  id v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unint64_t v4 = v2;
  v4[1] = sub_1005C08E4;
  return v6(a1);
}

uint64_t sub_1005C08E4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1005C09DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  size_t v127 = _swiftEmptyArrayStorage;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v116 = v4;
  if (*(void *)(a2 + 16))
  {
    if (!v4)
    {
      swift_bridgeObjectRelease();
      id v6 = v127;
      goto LABEL_158;
    }
    uint64_t v109 = a1 + 32;
    swift_bridgeObjectRetain();
    unint64_t v5 = swift_bridgeObjectRetain();
    sub_1005C15B4(v5);
    if (v4 == 1)
    {
LABEL_4:
      swift_bridgeObjectRelease_n();
      id v6 = v127;
LABEL_158:
      swift_release();
      return (uint64_t)v6;
    }
    unint64_t v44 = v2 + 32;
    unint64_t v45 = 1;
    unint64_t v111 = v2 + 32;
LABEL_78:
    if (v45 >= *(void *)(v3 + 16)) {
      goto LABEL_170;
    }
    unint64_t v46 = *(void *)(v2 + 16);
    uint64_t v47 = v127;
    uint64_t v48 = *((void *)v127 + 2);
    if (__OFADD__(v48, v46)) {
      goto LABEL_171;
    }
    unint64_t v114 = v45;
    unint64_t v49 = *(void *)(v109 + 8 * v45);
    swift_bridgeObjectRetain();
    swift_retain();
    if (!swift_isUniquelyReferenced_nonNull_native()
      || (uint64_t v50 = *((void *)v127 + 3) >> 1, v50 < (uint64_t)(v48 + v46)))
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v47 = v127;
      uint64_t v50 = *((void *)v127 + 3) >> 1;
    }
    uint64_t v51 = *((void *)v47 + 2);
    uint64_t v52 = v50 - v51;
    if (v46)
    {
      if (v52 < (uint64_t)v46) {
        goto LABEL_176;
      }
      unint64_t v53 = (unint64_t)&v47[v51 + 4];
      if (v44 < v53 + 8 * v46 && v53 < v44 + 8 * v46) {
        goto LABEL_192;
      }
      sub_10050BF48(0, (unint64_t *)&qword_101674470);
      swift_arrayInitWithCopy();
      uint64_t v55 = *((void *)v47 + 2);
      uint64_t v51 = v55 + v46;
      if (__OFADD__(v55, v46)) {
        goto LABEL_177;
      }
      *((void *)v47 + 2) = v51;
    }
    if (v46 == v52)
    {
      unint64_t v56 = *(void *)(v2 + 16);
      if (v46 != v56)
      {
        if (v46 >= v56) {
          goto LABEL_188;
        }
        unint64_t v57 = v46 + 1;
        uint64_t v58 = *(void **)(v44 + 8 * v46);
        id v59 = v58;
        unint64_t v119 = v49;
        unint64_t v121 = v56 - 1;
        unint64_t v107 = v56;
LABEL_97:
        while (1)
        {
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          uint64_t v60 = v127;
          uint64_t v61 = *((void *)v127 + 3) >> 1;
          if (v51 < v61) {
            break;
          }
          *((void *)v127 + 2) = v51;
        }
        *(void *)&v127[v51 + 4] = v58;
        if (v57 == v56)
        {
          uint64_t v70 = v51 + 1;
        }
        else
        {
          unint64_t v62 = *(void *)(a2 + 16);
          unint64_t v124 = v57;
          uint64_t v63 = v62 - v57;
          if (v62 <= v57) {
            goto LABEL_160;
          }
          uint64_t v64 = 0;
          unint64_t v65 = v111 + 8 * v57;
          unint64_t v66 = v121 - v57;
          while (1)
          {
            uint64_t v58 = *(void **)(v65 + 8 * v64);
            if (~v51 + v61 == v64)
            {
              id v68 = v58;
              unint64_t v57 = v124 + v64 + 1;
              uint64_t v51 = v61;
              unint64_t v44 = v111;
              unint64_t v49 = v119;
              unint64_t v56 = v107;
              *((void *)v60 + 2) = v61;
              goto LABEL_97;
            }
            *(void *)&v60[v51 + 5 + v64] = v58;
            if (v66 == v64) {
              break;
            }
            id v67 = v58;
            if (v63 == ++v64) {
              goto LABEL_160;
            }
          }
          id v69 = v58;
          uint64_t v70 = v51 + v64 + 2;
          unint64_t v44 = v111;
          unint64_t v49 = v119;
        }
        *((void *)v60 + 2) = v70;
        uint64_t v2 = a2;
      }
    }
    swift_release();
    specialized ContiguousArray._endMutation()();
    if (v49 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v71 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v71 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v72 = v127;
    uint64_t v73 = *((void *)v127 + 2);
    if (__OFADD__(v73, v71)) {
      goto LABEL_172;
    }
    if (!swift_isUniquelyReferenced_nonNull_native()
      || (uint64_t v74 = *((void *)v127 + 3) >> 1, v74 < v73 + v71))
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v72 = v127;
      uint64_t v74 = *((void *)v127 + 3) >> 1;
    }
    uint64_t v75 = *((void *)v72 + 2);
    uint64_t v76 = v74 - v75;
    unint64_t v77 = sub_1006BDA4C((unint64_t)&v72[v75 + 4], v74 - v75, v49);
    if (v79 < v71) {
      goto LABEL_173;
    }
    unint64_t v80 = v77;
    unint64_t v81 = v78;
    if (v79 >= 1)
    {
      uint64_t v82 = *((void *)v72 + 2);
      BOOL v24 = __OFADD__(v82, v79);
      uint64_t v83 = v82 + v79;
      if (v24) {
        goto LABEL_178;
      }
      *((void *)v72 + 2) = v83;
    }
    if (v79 != v76) {
      goto LABEL_77;
    }
    uint64_t v84 = *((void *)v72 + 2);
    if (v77 >> 62)
    {
      uint64_t v85 = _CocoaArrayWrapper.endIndex.getter();
      if (v81 == v85) {
        goto LABEL_77;
      }
    }
    else
    {
      uint64_t v85 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v78 == v85) {
        goto LABEL_77;
      }
    }
    unint64_t v125 = v80 & 0xC000000000000001;
    if ((v80 & 0xC000000000000001) != 0)
    {
      id v86 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if ((v81 & 0x8000000000000000) != 0) {
        goto LABEL_189;
      }
      if (v81 >= *(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_191;
      }
      id v86 = *(id *)(v80 + 8 * v81 + 32);
    }
    double v87 = *(double *)&v86;
    unint64_t v88 = v81 + 1;
    if (__OFADD__(v81, 1)) {
      goto LABEL_190;
    }
    uint64_t v122 = v80 & 0xFFFFFFFFFFFFFF8;
    unint64_t v104 = v80 + 32;
    unint64_t v108 = v80 + 40;
    while (1)
    {
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      int v90 = v127;
      uint64_t v89 = *((void *)v127 + 3) >> 1;
      if (v84 < v89)
      {
        v127[v84 + 4] = v87;
        uint64_t v91 = v84 + 1;
        if (v88 == v85) {
          goto LABEL_76;
        }
        if (v125)
        {
          swift_retain();
          id v92 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v88 & 0x8000000000000000) != 0) {
            goto LABEL_186;
          }
          if (v88 >= *(void *)(v122 + 16)) {
            goto LABEL_187;
          }
          uint64_t v93 = *(void **)(v104 + 8 * v88);
          swift_retain();
          id v92 = v93;
        }
        double v87 = *(double *)&v92;
        unint64_t v94 = v88 + 1;
        if (__OFADD__(v88, 1)) {
          goto LABEL_174;
        }
        if (v91 >= v89)
        {
          uint64_t v89 = v84 + 1;
        }
        else
        {
          *(void *)&v90[v91 + 4] = v92;
          if (v94 == v85)
          {
            uint64_t v91 = v84 + 2;
LABEL_75:
            swift_release();
            uint64_t v2 = a2;
LABEL_76:
            unint64_t v44 = v111;
            *((void *)v90 + 2) = v91;
LABEL_77:
            unint64_t v45 = v114 + 1;
            swift_bridgeObjectRelease();
            specialized ContiguousArray._endMutation()();
            uint64_t v3 = a1;
            if (v114 + 1 == v116) {
              goto LABEL_4;
            }
            goto LABEL_78;
          }
          uint64_t v95 = v84;
          unint64_t v96 = v80;
          uint64_t v97 = v85;
          uint64_t v98 = 0;
          unint64_t v120 = v108 + 8 * v88;
          uint64_t v99 = v89 - v95 - 2;
          uint64_t v105 = v95;
          uint64_t v100 = (uint64_t)&v90[v95 + 6];
          while (1)
          {
            unint64_t v101 = v94 + v98;
            if (v125)
            {
              id v102 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if ((v101 & 0x8000000000000000) != 0) {
                goto LABEL_164;
              }
              if (v101 >= *(void *)(v122 + 16)) {
                goto LABEL_165;
              }
              id v102 = *(id *)(v120 + 8 * v98);
            }
            double v87 = *(double *)&v102;
            if (__OFADD__(v101, 1)) {
              goto LABEL_161;
            }
            if (v99 == v98) {
              break;
            }
            *(void *)(v100 + 8 * v98++) = v102;
            if (v101 + 1 == v97)
            {
              uint64_t v91 = v105 + v98 + 2;
              goto LABEL_75;
            }
          }
          unint64_t v94 = v101 + 1;
          uint64_t v85 = v97;
          unint64_t v80 = v96;
        }
        swift_release();
        uint64_t v84 = v89;
        unint64_t v88 = v94;
        uint64_t v2 = a2;
      }
      *((void *)v90 + 2) = v84;
    }
  }
  if (!v4)
  {
    swift_bridgeObjectRelease();
    id v6 = _swiftEmptyArrayStorage;
    goto LABEL_158;
  }
  uint64_t v110 = a1 + 32;
  swift_bridgeObjectRetain();
  unint64_t v7 = 0;
  while (1)
  {
    if (v7 >= *(void *)(v3 + 16)) {
      goto LABEL_166;
    }
    unint64_t v8 = *(void *)(v110 + 8 * v7);
    unint64_t v9 = v8 >> 62;
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    unint64_t v11 = v127;
    uint64_t v12 = *((void *)v127 + 2);
    if (__OFADD__(v12, v10))
    {
LABEL_167:
      __break(1u);
LABEL_168:
      __break(1u);
LABEL_169:
      __break(1u);
LABEL_170:
      __break(1u);
LABEL_171:
      __break(1u);
LABEL_172:
      __break(1u);
LABEL_173:
      __break(1u);
LABEL_174:
      __break(1u);
LABEL_175:
      __break(1u);
LABEL_176:
      __break(1u);
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
LABEL_180:
      __break(1u);
LABEL_181:
      __break(1u);
LABEL_182:
      __break(1u);
      goto LABEL_183;
    }
    if (!swift_isUniquelyReferenced_nonNull_native()
      || (uint64_t v13 = *((void *)v11 + 3) >> 1, v13 < v12 + v10))
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      unint64_t v11 = v127;
      uint64_t v13 = *((void *)v127 + 3) >> 1;
    }
    uint64_t v14 = *((void *)v11 + 2);
    if (v9)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v16 = v13 - v14;
      if (!v15)
      {
LABEL_26:
        if (v10 > 0) {
          goto LABEL_168;
        }
        uint64_t v10 = 0;
        goto LABEL_35;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v16 = v13 - v14;
      if (!v15) {
        goto LABEL_26;
      }
    }
    if (v16 < v10) {
      goto LABEL_175;
    }
    unint64_t v17 = (unint64_t)&v11[v14 + 4];
    unint64_t v112 = v7;
    if (v9)
    {
      if (v15 < 1) {
        goto LABEL_182;
      }
      sub_100523288(&qword_10167ACB0, (uint64_t *)&unk_101674480);
      swift_bridgeObjectRetain();
      for (unint64_t i = 0; i != v15; ++i)
      {
        sub_1005057FC((uint64_t *)&unk_101674480);
        id v20 = sub_1006BC8A8(v126, i, v8);
        id v22 = *v21;
        ((void (*)(uint64_t (**)(), void))v20)(v126, 0);
        *(void *)(v17 + 8 * i) = v22;
      }
      swift_bridgeObjectRelease();
      unint64_t v9 = v8 >> 62;
    }
    else
    {
      if (v10 < 0) {
        goto LABEL_192;
      }
      unint64_t v18 = (v8 & 0xFFFFFFFFFFFFFF8) + 32;
      if (v18 < v17 + 8 * v10 && v17 < v18 + 8 * v10) {
        goto LABEL_192;
      }
      sub_10050BF48(0, (unint64_t *)&qword_101674470);
      swift_arrayInitWithCopy();
    }
    unint64_t v7 = v112;
    if (v10 > 0)
    {
      uint64_t v23 = *((void *)v127 + 2);
      BOOL v24 = __OFADD__(v23, v10);
      uint64_t v25 = v23 + v10;
      if (v24) {
        goto LABEL_179;
      }
      *((void *)v127 + 2) = v25;
    }
LABEL_35:
    if (v10 != v16) {
      goto LABEL_9;
    }
    uint64_t v26 = *((void *)v127 + 2);
    if (v9) {
      break;
    }
    uint64_t v27 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v15 != v27) {
      goto LABEL_38;
    }
LABEL_9:
    ++v7;
    swift_bridgeObjectRelease();
    specialized ContiguousArray._endMutation()();
    uint64_t v3 = a1;
    if (v7 == v116) {
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v15 == v27) {
    goto LABEL_9;
  }
LABEL_38:
  unint64_t v123 = v8 & 0xC000000000000001;
  unint64_t v113 = v7;
  if ((v8 & 0xC000000000000001) == 0)
  {
    if ((v15 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v15 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_185;
      }
      id v28 = *(id *)(v8 + 8 * v15 + 32);
      goto LABEL_42;
    }
LABEL_183:
    __break(1u);
    goto LABEL_184;
  }
  id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_42:
  double v29 = *(double *)&v28;
  unint64_t v30 = v15 + 1;
  if (!__OFADD__(v15, 1))
  {
    while (1)
    {
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      unint64_t v32 = v127;
      uint64_t v31 = *((void *)v127 + 3) >> 1;
      if (v26 < v31)
      {
        v127[v26 + 4] = v29;
        uint64_t v33 = v26 + 1;
        if (v30 == v27) {
          goto LABEL_8;
        }
        if (v123)
        {
          swift_retain();
          id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v30 & 0x8000000000000000) != 0) {
            goto LABEL_180;
          }
          if (v30 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_181;
          }
          uint64_t v35 = v26;
          uint64_t v36 = *(void **)(v8 + 32 + 8 * v30);
          swift_retain();
          id v34 = v36;
          uint64_t v26 = v35;
        }
        double v29 = *(double *)&v34;
        unint64_t v37 = v30 + 1;
        if (__OFADD__(v30, 1)) {
          goto LABEL_169;
        }
        if (v33 < v31)
        {
          *(void *)&v32[v33 + 4] = v34;
          if (v37 == v27)
          {
            uint64_t v33 = v26 + 2;
LABEL_7:
            swift_release();
LABEL_8:
            unint64_t v7 = v113;
            *((void *)v32 + 2) = v33;
            goto LABEL_9;
          }
          uint64_t v38 = v27;
          uint64_t v39 = 0;
          uint64_t v118 = v8 + 40 + 8 * v30;
          uint64_t v40 = v31 - v26 - 2;
          uint64_t v106 = v26;
          uint64_t v41 = (uint64_t)&v32[v26 + 6];
          while (1)
          {
            unint64_t v42 = v37 + v39;
            if (v123)
            {
              id v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if ((v42 & 0x8000000000000000) != 0) {
                goto LABEL_162;
              }
              if (v42 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_163;
              }
              id v43 = *(id *)(v118 + 8 * v39);
            }
            double v29 = *(double *)&v43;
            if (__OFADD__(v42, 1)) {
              break;
            }
            if (v40 == v39)
            {
              unint64_t v37 = v42 + 1;
              uint64_t v27 = v38;
              goto LABEL_45;
            }
            *(void *)(v41 + 8 * v39++) = v43;
            if (v42 + 1 == v38)
            {
              uint64_t v33 = v106 + v39 + 2;
              goto LABEL_7;
            }
          }
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
          goto LABEL_167;
        }
        uint64_t v31 = v33;
LABEL_45:
        swift_release();
        uint64_t v26 = v31;
        unint64_t v30 = v37;
      }
      *((void *)v32 + 2) = v26;
    }
  }
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  __break(1u);
LABEL_189:
  __break(1u);
LABEL_190:
  __break(1u);
LABEL_191:
  __break(1u);
LABEL_192:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_1005C15B4(unint64_t a1)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_42;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v5 = *v1;
    uint64_t v6 = *(void *)(*v1 + 16);
    unint64_t v7 = v6 + v4;
    if (__OFADD__(v6, v4))
    {
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t *v1 = v5;
    if (!isUniquelyReferenced_nonNull_native || (uint64_t v9 = *(void *)(v5 + 24) >> 1, v9 < (uint64_t)v7))
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v5 = *v1;
      uint64_t v9 = *(void *)(*v1 + 24) >> 1;
    }
    uint64_t v10 = *(void *)(v5 + 16);
    uint64_t v11 = v9 - v10;
    unint64_t result = sub_1006BDA4C(v5 + 8 * v10 + 32, v9 - v10, v3);
    if (v14 < v4) {
      goto LABEL_44;
    }
    unint64_t v2 = result;
    unint64_t v7 = v13;
    if (v14 >= 1)
    {
      uint64_t v15 = *(void *)(*v1 + 16);
      BOOL v16 = __OFADD__(v15, v14);
      uint64_t v17 = v15 + v14;
      if (v16) {
        goto LABEL_45;
      }
      *(void *)(*v1 + 16) = v17;
    }
    if (v14 != v11) {
      goto LABEL_35;
    }
    uint64_t v4 = *(void *)(*v1 + 16);
    if (!(result >> 62))
    {
      unint64_t v18 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v13 == v18) {
        goto LABEL_35;
      }
      goto LABEL_14;
    }
LABEL_46:
    unint64_t result = _CocoaArrayWrapper.endIndex.getter();
    unint64_t v18 = result;
    if (v7 == result) {
      goto LABEL_35;
    }
LABEL_14:
    unint64_t v19 = v2 & 0xC000000000000001;
    if ((v2 & 0xC000000000000001) != 0)
    {
      unint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if ((v7 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        return result;
      }
      if (v7 >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_50;
      }
      unint64_t result = (unint64_t)*(id *)(v2 + 8 * v7 + 32);
    }
    unint64_t v20 = result;
    unint64_t v21 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_51;
    }
    uint64_t v33 = v2 & 0xFFFFFFFFFFFFFF8;
    uint64_t v31 = v1;
    unint64_t v32 = v2 + 32;
LABEL_21:
    while (1)
    {
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      uint64_t v22 = *v1;
      uint64_t v23 = *(void *)(*v1 + 24) >> 1;
      if (v4 < v23) {
        break;
      }
      *(void *)(v22 + 16) = v4;
    }
    uint64_t v24 = v22 + 8 * v4;
    *(void *)(v24 + 32) = v20;
    if (v21 == v18) {
      break;
    }
    unint64_t v25 = v2;
    swift_retain();
    uint64_t v26 = v23;
    uint64_t v27 = 0;
    uint64_t v30 = v26;
    uint64_t v1 = (uint64_t *)(~v4 + v26);
    unint64_t v3 = v24 + 40;
    while (1)
    {
      unint64_t v2 = (unint64_t)v27 + v21;
      if (v19)
      {
        id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((v2 & 0x8000000000000000) != 0) {
          goto LABEL_40;
        }
        if (v2 >= *(void *)(v33 + 16)) {
          goto LABEL_41;
        }
        id v28 = *(id *)(v32 + 8 * v21 + 8 * (void)v27);
      }
      unint64_t v20 = (unint64_t)v28;
      BOOL v16 = __OFADD__(v2++, 1);
      if (v16) {
        break;
      }
      if (v1 == v27)
      {
        swift_release();
        uint64_t v1 = v31;
        unint64_t v21 = v2;
        uint64_t v4 = v30;
        unint64_t v2 = v25;
        *(void *)(*v31 + 16) = v30;
        goto LABEL_21;
      }
      *(void *)(v3 + 8 * (void)v27) = v28;
      uint64_t v27 = (uint64_t *)((char *)v27 + 1);
      if (v2 == v18)
      {
        swift_release();
        uint64_t v29 = (uint64_t)v27 + v4 + 1;
        uint64_t v1 = v31;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  uint64_t v29 = v4 + 1;
LABEL_34:
  *(void *)(*v1 + 16) = v29;
LABEL_35:
  swift_bridgeObjectRelease();

  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_1005C18B8(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *unint64_t v3 = v2;
  v3[1] = sub_1005C1998;
  return v5(v2 + 32);
}

uint64_t sub_1005C1998()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  unint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_1005C1AAC()
{
  uint64_t v1 = *(void *)(sub_1005057FC(&qword_101672E90) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();

  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }

  return _swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
}

uint64_t sub_1005C1BE0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1005057FC(&qword_101672E90) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  char v10 = *((unsigned char *)v1 + v5 + *(void *)(v4 + 64));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100528D08;
  return sub_1005B1E44(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_1005C1D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10 = *a5;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_100528D08;
  return sub_1005BFB48(a1, a2, a3, a4, v10);
}

uint64_t sub_1005C1DD0()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1005C1E18(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))((char *)&dword_1016743F0 + dword_1016743F0);
  return v8(a1, v4, v5, v6, v1 + 5);
}

id sub_1005C1EE8()
{
  return sub_100BF5A9C(*(void **)(v0 + 16));
}

uint64_t sub_1005C1EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  swift_unknownObjectWeakAssign();
  uint64_t v9 = &type metadata for CRLTipSendCopy;
  unint64_t v10 = sub_1005C75F8();
  uint64_t v6 = a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip;
  swift_beginAccess();
  sub_1005C74E8((uint64_t)v8, v6);
  uint64_t result = swift_endAccess();
  if (a4) {
    return a4(result);
  }
  return result;
}

uint64_t sub_1005C1F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = *a4;
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v17;
  *uint64_t v17 = v8;
  v17[1] = sub_100528D08;
  return sub_1005BF0C4(a1, a2, a3, v16, a5, a6, a7, a8);
}

uint64_t sub_1005C207C(uint64_t a1, int *a2)
{
  *(void *)(v2 + 24) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1005C215C;
  return v5(v2 + 16);
}

uint64_t sub_1005C215C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 24);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_1005C228C(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t result = __DataStorage._bytes.getter();
  uint64_t v8 = (char *)result;
  if (result)
  {
    uint64_t result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    v8 += a1 - result;
  }
  BOOL v9 = __OFSUB__(a2, a1);
  int64_t v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t result = __DataStorage._length.getter();
  if (!a4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v8)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  if (result >= v10) {
    size_t v11 = v10;
  }
  else {
    size_t v11 = result;
  }
  return memcmp(a4, v8, v11) == 0;
}

BOOL sub_1005C232C(uint64_t a1, uint64_t a2, void *__s1)
{
  uint64_t __s2 = a1;
  __int16 v5 = a2;
  char v6 = BYTE2(a2);
  char v7 = BYTE3(a2);
  char v8 = BYTE4(a2);
  char v9 = BYTE5(a2);
  if (!__s1) {
    __break(1u);
  }
  return memcmp(__s1, &__s2, BYTE6(a2)) == 0;
}

uint64_t sub_1005C2410(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (((*a1 ^ *a2) & 1) != 0
    || ((a1[1] ^ a2[1]) & 1) != 0
    || ((a1[2] ^ a2[2]) & 1) != 0
    || ((a1[3] ^ a2[3]) & 1) != 0
    || ((a1[4] ^ a2[4]) & 1) != 0
    || ((a1[5] ^ a2[5]) & 1) != 0
    || ((a1[6] ^ a2[6]) & 1) != 0
    || ((a1[7] ^ a2[7]) & 1) != 0)
  {
LABEL_15:
    char v5 = 0;
    return v5 & 1;
  }
  if (*((void *)a1 + 1) == *((void *)a2 + 1) && *((void *)a1 + 2) == *((void *)a2 + 2)
    || (char v4 = _stringCompareWithSmolCheck(_:_:expecting:)(), v5 = 0, (v4 & 1) != 0))
  {
    sub_10050BF48(0, (unint64_t *)&qword_101672E50);
    if ((static NSObject.== infix(_:_:)() & 1) != 0 && ((a1[32] ^ a2[32]) & 1) == 0 && ((a1[33] ^ a2[33]) & 1) == 0)
    {
      char v5 = ((a1[34] & 1) == 0) ^ a2[34];
      return v5 & 1;
    }
    goto LABEL_15;
  }
  return v5 & 1;
}

double *sub_1005C2550(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a1;
  uint64_t v34 = a2;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  char v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v7 - 8, v8);
  int64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC(&qword_101683E70);
  uint64_t v29 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = _swiftEmptyArrayStorage;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v36, v11);
  sub_100523288(&qword_101674530, (uint64_t *)&unk_101683E40);
  uint64_t v20 = v2;
  dispatch thunk of Sequence.makeIterator()();
  uint64_t v21 = sub_100523288(&qword_101674538, &qword_101683E70);
  uint64_t v35 = v19;
  uint64_t v36 = v16;
  dispatch thunk of IteratorProtocol.next()();
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v22(v10, 1, v20) == 1)
  {
    uint64_t v23 = v29;
    uint64_t v24 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v25 = v37;
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    uint64_t v24 = (double *)(v3 + 32);
    unint64_t v32 = v24 - 3;
    uint64_t v33 = v26;
    uint64_t v30 = v10;
    uint64_t v31 = v21;
    v26(v6, v10, v20);
    while (1)
    {
      sub_100D099D0((uint64_t)v6, v34, &v38);
      if (v25)
      {
        (*(void (**)(char *, uint64_t))v32)(v6, v20);
        (*(void (**)(char *, uint64_t))(v29 + 8))(v35, v36);
        swift_bridgeObjectRelease();
        return v24;
      }
      (*(void (**)(char *, uint64_t))v32)(v6, v20);
      uint64_t v27 = v21;
      if (v38)
      {
        uint64_t v37 = 0;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v39 & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        int64_t v10 = v30;
        uint64_t v27 = v31;
        uint64_t v25 = v37;
      }
      uint64_t v21 = v27;
      dispatch thunk of IteratorProtocol.next()();
      if (v22(v10, 1, v20) == 1) {
        break;
      }
      v33(v6, v10, v20);
    }
    uint64_t v24 = v39;
    uint64_t v23 = v29;
  }
  (*(void (**)(char *, uint64_t))(v23 + 8))(v35, v36);
  return v24;
}

id sub_1005C29B4()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  id v1 = [self mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setText:v5];

  [v0 setEnabled:0];
  id v6 = [self placeholderTextColor];
  [v0 setTextColor:v6];

  id v7 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v0];
  return v7;
}

double *sub_1005C2B50(uint64_t a1, void (*a2)(uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v4)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    id v7 = (uint64_t *)(a1 + 56);
    while (1)
    {
      uint64_t v8 = *(v7 - 3);
      unint64_t v9 = *(v7 - 2);
      uint64_t v10 = *(v7 - 1);
      uint64_t v11 = *v7;
      sub_100510D4C(v8, v9);
      swift_bridgeObjectRetain();
      a2(v8, v9, v10, v11);
      if (v2) {
        break;
      }
      v7 += 4;
      sub_100510084(v8, v9);
      swift_bridgeObjectRelease();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (!--v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    sub_100510084(v8, v9);
    swift_bridgeObjectRelease();
    return (double *)swift_release();
  }
  return result;
}

Class sub_1005C2C88()
{
  id v0 = self;
  id v1 = [v0 mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = swift_allocObject();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v5 + 16) = AppStorage.init<A>(wrappedValue:_:store:)();
  swift_retain();
  AppStorage.wrappedValue.getter();
  swift_release();
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  swift_retain();
  id v6 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  id v43 = v6;
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v7 = [v0 mainBundle];
  NSString v8 = String._bridgeToObjectiveC()();
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = swift_allocObject();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v11 + 16) = AppStorage.init<A>(wrappedValue:_:store:)();
  swift_retain();
  AppStorage.wrappedValue.getter();
  swift_release();
  swift_retain();
  id v12 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  unint64_t v42 = v12;
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v13 = [v0 mainBundle];
  NSString v14 = String._bridgeToObjectiveC()();
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [v13 localizedStringForKey:v14 value:v15 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = swift_allocObject();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v17 + 16) = AppStorage.init<A>(wrappedValue:_:store:)();
  swift_retain();
  AppStorage.wrappedValue.getter();
  swift_release();
  swift_retain();
  id v18 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  uint64_t v41 = v18;
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v19 = [v0 mainBundle];
  NSString v20 = String._bridgeToObjectiveC()();
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [v19 localizedStringForKey:v20 value:v21 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v23 = swift_allocObject();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v23 + 16) = AppStorage.init<A>(wrappedValue:_:store:)();
  swift_retain();
  AppStorage.wrappedValue.getter();
  swift_release();
  swift_retain();
  id v24 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  sub_10050BF48(0, &qword_101673A80);
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  v46.value.super.Class isa = 0;
  v46.is_nil = 0;
  uint64_t v26 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v25, (Swift::String_optional)0, v46, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, 0).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v27 = [v0 mainBundle];
  NSString v28 = String._bridgeToObjectiveC()();
  NSString v29 = String._bridgeToObjectiveC()();
  id v30 = [v27 localizedStringForKey:v28 value:v29 table:0];

  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v33 = v32;

  uint64_t v34 = self;
  NSString v35 = String._bridgeToObjectiveC()();
  uint64_t v36 = (objc_class *)[v34 systemImageNamed:v35];

  v37._countAndFlagsBits = v31;
  v37._object = v33;
  v47.value.super.Class isa = v36;
  v47.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v37, (Swift::String_optional)0, v47, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, v40).super.super.isa;
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return isa;
}

void sub_1005C360C(unint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v26) {
      return;
    }
  }
  else if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return;
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v28 = [Strong editorController];

  if (!v28)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"positionAndInsert(boardItems:at:postProcessBlock:)", 50, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLBoardItemInserting.swift", 96, 2, 285, (uint64_t)"Missing editor controller", 25, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"positionAndInsert(boardItems:at:postProcessBlock:)", 50, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLBoardItemInserting.swift", 96, 2, 285);
    return;
  }
  NSString v8 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v8)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"positionAndInsert(boardItems:at:postProcessBlock:)", 50, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLBoardItemInserting.swift", 96, 2, 286, (uint64_t)"Missing interactive canvas controller", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"positionAndInsert(boardItems:at:postProcessBlock:)", 50, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLBoardItemInserting.swift", 96, 2, 286);
    NSString v9 = v28;
    goto LABEL_9;
  }
  id v27 = v8;
  if ([v8 documentIsSharedReadOnly])
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"positionAndInsert(boardItems:at:postProcessBlock:)", 50, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLBoardItemInserting.swift", 96, 2, 291, (uint64_t)"Attempted to insert item when board is read only.", 49, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"positionAndInsert(boardItems:at:postProcessBlock:)", 50, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLBoardItemInserting.swift", 96, 2, 291);

    NSString v9 = v27;
LABEL_9:

    return;
  }
  id v10 = [self nonInteractiveInsertionContext];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  id v12 = (void *)swift_allocObject();
  _OWORD v12[2] = v5;
  id v12[3] = v10;
  v12[4] = v11;
  uint64_t v33 = sub_1005C3D7C;
  uint64_t v34 = v12;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v30 = *(void *)"";
  uint64_t v31 = sub_1005B74EC;
  unint64_t v32 = &unk_101508AE0;
  id v13 = _Block_copy(&aBlock);
  id v14 = v10;
  swift_bridgeObjectRetain();
  id v15 = v14;
  swift_retain();
  swift_release();
  [v28 enumerateEditorsOnStackUsingBlock:v13];
  _Block_release(v13);
  swift_beginAccess();
  id v16 = *(void **)(v11 + 16);
  if (v16)
  {
    type metadata accessor for CRLBoardItem(0);
    swift_unknownObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v16 prepareGeometryForInsertingBoardItems:isa withInsertionContext:v15];

    v18.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    if (a2)
    {
      uint64_t v33 = a2;
      uint64_t v34 = a3;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v30 = *(void *)"";
      uint64_t v31 = sub_100679958;
      unint64_t v32 = &unk_101508B58;
      id v19 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
    }
    else
    {
      id v19 = 0;
    }
    [v16 insertBoardItems:v18.super.isa withInsertionContext:v15 postProcessBlock:v19];
    _Block_release(v19);

    swift_bridgeObjectRetain();
    if (v6)
    {
      sub_1005057FC(&qword_101673060);
      uint64_t v20 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
      uint64_t v5 = v20;
    }
    else
    {
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    }
    uint64_t v21 = type metadata accessor for CRLInsertionAnimationHelper();
    id v22 = [v27 canvas];
    uint64_t v23 = (void *)swift_allocObject();
    v23[2] = v5;
    v23[3] = v27;
    void v23[4] = 0;
    id v23[5] = v21;
    uint64_t v33 = sub_1005C3DD0;
    uint64_t v34 = v23;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v30 = *(void *)"";
    uint64_t v31 = sub_100679958;
    unint64_t v32 = &unk_101508B30;
    id v24 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    id v25 = v27;
    swift_release();
    [v22 afterLayoutIncludingLayers:1 performBlock:v24];
    _Block_release(v24);
    swift_release();
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"positionAndInsert(boardItems:at:postProcessBlock:)", 50, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLBoardItemInserting.swift", 96, 2, 312, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"positionAndInsert(boardItems:at:postProcessBlock:)", 50, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLBoardItemInserting.swift", 96, 2, 312);
    swift_release();
  }
}

uint64_t sub_1005C3CFC()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005C3D34()
{
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1005C3D7C(uint64_t a1, unsigned char *a2)
{
  return sub_100BF5AA8(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1005C3D88()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1005C3DD0()
{
  return sub_100858D00(*(void *)(v0 + 16), *(char **)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

unint64_t sub_1005C3DDC()
{
  unint64_t result = qword_101674410;
  if (!qword_101674410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101674410);
  }
  return result;
}

id sub_1005C3E30(char a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  char v6 = a1 & 1;
  id v7 = &a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_delegate];
  *(void *)&a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v8 = (uint64_t)&a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_initialURL];
  uint64_t v9 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(void *)&a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_alert] = 0;
  *(void *)&a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_textField] = 0;
  *(void *)&a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_replaceAction] = 0;
  a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_role] = v6;
  *((void *)v7 + 1) = &off_1015088C8;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  id v10 = a4;
  sub_1005C6D24(a3, v8);
  swift_endAccess();

  v13.receiver = v10;
  v13.super_class = (Class)type metadata accessor for CRLInsertEditURLAlert();
  [super init];
  sub_100522F00(a3, &qword_101672E90);
  return v11;
}

uint64_t sub_1005C3F8C(void *a1)
{
  [a1 crl_isCompactWidth];
  if (qword_10166F6E0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1005057FC(&qword_10169FA10);
  sub_100556B74(v1, (uint64_t)qword_10171B478);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  if (qword_101670240 != -1) {
    swift_once();
  }
  sub_100556B74(v1, (uint64_t)qword_10171CCD8);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  if (qword_10166F768 != -1) {
    swift_once();
  }
  sub_100556B74(v1, (uint64_t)qword_10171B5A0);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  if (qword_10166EE40 != -1) {
    swift_once();
  }
  sub_100556B74(v1, (uint64_t)qword_10171A348);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  if (qword_10166F970 != -1) {
    swift_once();
  }
  sub_100556B74(v1, (uint64_t)qword_10171BA10);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  if (qword_10166F020 != -1) {
    swift_once();
  }
  sub_100556B74(v1, (uint64_t)qword_10171A758);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  if (qword_10166F6C8 != -1) {
    swift_once();
  }
  sub_100556B74(v1, (uint64_t)qword_10171B430);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  if (qword_101670228 != -1) {
    swift_once();
  }
  sub_100556B74(v1, (uint64_t)qword_10171CC90);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  if (qword_10166F5B8 != -1) {
    swift_once();
  }
  sub_100556B74(v1, (uint64_t)qword_10171B100);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  if (qword_10166F760 != -1) {
    swift_once();
  }
  sub_100556B74(v1, (uint64_t)qword_10171B588);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  if (qword_10166EE30 != -1) {
    swift_once();
  }
  sub_100556B74(v1, (uint64_t)qword_10171A318);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  if (qword_10166F960 != -1) {
    swift_once();
  }
  sub_100556B74(v1, (uint64_t)qword_10171B9E0);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  if (qword_10166F010 != -1) {
    swift_once();
  }
  sub_100556B74(v1, (uint64_t)qword_10171A728);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  return swift_endAccess();
}

uint64_t sub_1005C4558()
{
  if (qword_10166F6D0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1005057FC(&qword_10169FA10);
  sub_100556B74(v0, (uint64_t)qword_10171B448);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  if (qword_101670230 != -1) {
    swift_once();
  }
  sub_100556B74(v0, (uint64_t)qword_10171CCA8);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  if (qword_10166F5C0 != -1) {
    swift_once();
  }
  sub_100556B74(v0, (uint64_t)qword_10171B118);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  if (qword_10166F770 != -1) {
    swift_once();
  }
  sub_100556B74(v0, (uint64_t)qword_10171B5B8);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  if (qword_10166EE38 != -1) {
    swift_once();
  }
  sub_100556B74(v0, (uint64_t)qword_10171A330);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  return swift_endAccess();
}

double *sub_1005C47B8(uint64_t a1, void *a2)
{
  id v80 = a2;
  uint64_t v79 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v79 - 8);
  __chkstk_darwin(v79, v5);
  unint64_t v78 = (char *)v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  unint64_t v88 = (char *)v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v89 = (char *)v74 - v13;
  __chkstk_darwin(v14, v15);
  uint64_t v91 = (char *)v74 - v16;
  __chkstk_darwin(v17, v18);
  unint64_t v77 = (char *)v74 - v19;
  __chkstk_darwin(v20, v21);
  uint64_t v93 = (char *)v74 - v22;
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)v74 - v25;
  uint64_t v27 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v27 - 8, v28);
  uint64_t v30 = (char *)v74 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v81 = [self defaultManager];
  uint64_t v31 = *(void *)(a1 + 16);
  v74[1] = a1;
  if (v31)
  {
    v74[0] = v2;
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v32 = v8 + 16;
    unint64_t v86 = (*(unsigned __int8 *)(v32 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 64);
    uint64_t v34 = a1 + v86;
    id v92 = (void (**)(char *, void, uint64_t, uint64_t))(v32 + 40);
    uint64_t v35 = *(void *)(v32 + 56);
    int v90 = (unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 32);
    unint64_t v96 = (void (**)(char *, char *, uint64_t))(v32 + 16);
    uint64_t v97 = v33;
    uint64_t v98 = v32;
    unint64_t v94 = (void (**)(char *, uint64_t))(v32 - 8);
    uint64_t v76 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v36 = v35;
    swift_bridgeObjectRetain();
    uint64_t v99 = _swiftEmptyArrayStorage;
    Swift::String v37 = v93;
    double v87 = v26;
    uint64_t v84 = v7;
    uint64_t v75 = v30;
    uint64_t v85 = v36;
    while (1)
    {
      v97(v30, v34, v7);
      Swift::OpaquePointer v40 = (void (*)(void, void, void, void))*v92;
      (*v92)(v30, 0, 1, v7);
      if ((*v90)(v30, 1, v7) == 1) {
        goto LABEL_21;
      }
      uint64_t v95 = *v96;
      v95(v26, v30, v7);
      if (URL.isFileURL.getter())
      {
        uint64_t v82 = v40;
        id v41 = [v80 URL];
        unint64_t v42 = v77;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        id v43 = v78;
        UUID.init()();
        UUID.uuidString.getter();
        (*v76)(v43, v79);
        URL.appendingPathComponent(_:isDirectory:)();
        swift_bridgeObjectRelease();
        uint64_t v83 = *v94;
        v83(v42, v7);
        URL._bridgeToObjectiveC()(v44);
        UIImage_optional v46 = v45;
        id v100 = 0;
        id v47 = v81;
        unsigned __int8 v48 = [v81 createDirectoryAtURL:v45 withIntermediateDirectories:1 attributes:0 error:&v100];

        if ((v48 & 1) == 0)
        {
          id v70 = v100;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          _convertNSErrorToError(_:)();

          swift_willThrow();
          uint64_t v71 = v83;
          v83(v37, v7);
LABEL_24:
          v71(v87, v7);
          return v99;
        }
        id v49 = v100;
        uint64_t v50 = v89;
        URL.lastPathComponent.getter();
        URL.appendingPathComponent(_:isDirectory:)();
        swift_bridgeObjectRelease();
        URL._bridgeToObjectiveC()(v51);
        unint64_t v53 = v52;
        URL._bridgeToObjectiveC()(v54);
        unint64_t v56 = v55;
        id v100 = 0;
        unsigned __int8 v57 = [v47 copyItemAtURL:v53 toURL:v55 error:&v100];

        id v58 = v100;
        if ((v57 & 1) == 0)
        {
          id v72 = v100;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          _convertNSErrorToError(_:)();

          swift_willThrow();
          uint64_t v71 = v83;
          uint64_t v7 = v84;
          v83(v50, v84);
          v71(v93, v7);
          goto LABEL_24;
        }
        v97(v88, (uint64_t)v50, v84);
        id v59 = v58;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v99 = (double *)sub_100F62784(0, *((void *)v99 + 2) + 1, 1, (unint64_t)v99);
        }
        uint64_t v26 = v87;
        unint64_t v61 = *((void *)v99 + 2);
        unint64_t v60 = *((void *)v99 + 3);
        uint64_t v30 = v75;
        uint64_t v62 = v31;
        if (v61 >= v60 >> 1) {
          uint64_t v99 = (double *)sub_100F62784(v60 > 1, v61 + 1, 1, (unint64_t)v99);
        }
        uint64_t v7 = v84;
        uint64_t v63 = v85;
        uint64_t v64 = v99;
        *((void *)v99 + 2) = v61 + 1;
        v95((char *)v64 + v86 + v61 * v63, v88, v7);
        unint64_t v65 = v83;
        v83(v89, v7);
        unint64_t v66 = v93;
        v65(v93, v7);
        v65(v26, v7);
        Swift::String v37 = v66;
        uint64_t v39 = v63;
        Swift::OpaquePointer v40 = v82;
        uint64_t v31 = v62;
      }
      else
      {
        v97(v91, (uint64_t)v26, v7);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v99 = (double *)sub_100F62784(0, *((void *)v99 + 2) + 1, 1, (unint64_t)v99);
        }
        unint64_t v68 = *((void *)v99 + 2);
        unint64_t v67 = *((void *)v99 + 3);
        if (v68 >= v67 >> 1) {
          uint64_t v99 = (double *)sub_100F62784(v67 > 1, v68 + 1, 1, (unint64_t)v99);
        }
        uint64_t v38 = v99;
        *((void *)v99 + 2) = v68 + 1;
        uint64_t v39 = v85;
        v95((char *)v38 + v86 + v68 * v85, v91, v7);
        (*v94)(v26, v7);
        Swift::String v37 = v93;
      }
      v34 += v39;
      if (!--v31)
      {
        v40(v30, 1, 1, v7);
        goto LABEL_21;
      }
    }
  }
  id v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  swift_bridgeObjectRetain();
  uint64_t v99 = _swiftEmptyArrayStorage;
  v69(v30, 1, 1, v7);
LABEL_21:

  swift_bridgeObjectRelease();
  return v99;
}

uint64_t sub_1005C503C()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

unint64_t sub_1005C5084()
{
  unint64_t result = qword_101674420;
  if (!qword_101674420)
  {
    sub_10050BF48(255, &qword_101674418);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101674420);
  }
  return result;
}

uint64_t sub_1005C50EC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1005C50FC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005C5134()
{
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1005C5184(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1005B33F8(a1, a2, a3, *(void *)(v3 + 16), *(void **)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40));
}

uint64_t sub_1005C5190()
{
  return sub_1005C79F0((void (*)(void))&_swift_release);
}

void sub_1005C51A8()
{
  sub_1005B3C90(*(void *)(v0 + 16));
}

uint64_t sub_1005C51B0()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();

  swift_errorRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_1005C5218()
{
  sub_1005B3648(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_1005C5230(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1 + 4;
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v10 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100528D08;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_101674430 + dword_101674430);
  return v12(a1, v4, v5, v6, v7, v8, v10, v9);
}

uint64_t sub_1005C5320(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100E3C6E8();
  static TaskPriority.userInitiated.getter();
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 0, 1, v7);
  type metadata accessor for MainActor();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v8 = static MainActor.shared.getter();
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = v8;
  v9[3] = &protocol witness table for MainActor;
  v9[4] = v6;
  v9[5] = a1;
  v9[7] = 0;
  v9[8] = 0;
  v9[6] = 0;
  sub_10059134C((uint64_t)v5, (uint64_t)&unk_1016747D0, (uint64_t)v9);
  swift_release();
  return swift_release();
}

id sub_1005C5490(void *a1)
{
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v4 = v2;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  uint64_t v5 = String.init<A>(describing:)();
  uint64_t v7 = v6;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  uint64_t v8 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Document camera failed with error: %@", 37, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  return [a1 dismissViewControllerAnimated:1 completion:0];
}

uint64_t sub_1005C5600()
{
  uint64_t v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1, v2);
  id v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(char **)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v6 = *(void *)&v5[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_1005C7DB0(v6, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  uint64_t v7 = v5;
  sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  uint64_t v8 = v10[1];
  sub_1005C7E18((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);

  return v8;
}

void sub_1005C5768(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  uint64_t v29 = *(void *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator];
  uint64_t v11 = *(char **)(v29 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v12 = *(void *)&v11[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_1005C7DB0(v12, (uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  uint64_t v13 = v11;
  sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  uint64_t v15 = v30[0];
  uint64_t v14 = v30[1];
  sub_1005C7E18((uint64_t)v9, type metadata accessor for CRLBoardCRDTData);

  if (v15 == a1 && v14 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v16) {
    goto LABEL_9;
  }
  uint64_t v17 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v17 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v17)
  {
LABEL_9:
    id v19 = [v3 navigationItem];
    id v20 = [v3 traitCollection];
    unsigned int v21 = [self crl_phoneUI];
    unsigned __int8 v22 = [v20 crl_isCompactWidth];
    unsigned __int8 v23 = v22;
    if (v21)
    {
      if (v22)
      {
        unsigned __int8 v24 = [v20 crl_isCompactHeight];

        if ((v24 & 1) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
      }
    }
    else
    {

      if (v23)
      {
LABEL_14:
        NSString v18 = 0;
LABEL_17:
        [v19 setTitle:v18];

        goto LABEL_18;
      }
    }
    uint64_t v25 = *(char **)(v29 + v10);
    uint64_t v26 = *(void *)&v25[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_1005C7DB0(v26, (uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
    uint64_t v27 = v25;
    CRRegister.wrappedValue.getter();
    sub_1005C7E18((uint64_t)v9, type metadata accessor for CRLBoardCRDTData);

    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  sub_100E4CF4C(a1, a2);
  NSString v18 = [v3 traitCollection];
  sub_1005919EC(v18, (int)[*(id *)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] documentIsSharedReadOnly], (uint64_t)v30);
  sub_100591DC0((unsigned __int8 *)v30, 0);
  sub_1005393A8((uint64_t)v30);
LABEL_18:
}

uint64_t sub_1005C5B04(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  swift_bridgeObjectRetain();
  id v3 = v2;
  return a1;
}

void sub_1005C5B38(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
  }
}

void sub_1005C5B7C()
{
}

uint64_t sub_1005C5B88(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100593C7C(a1, v4, v5, v6);
}

Class sub_1005C5C3C()
{
  return sub_10059F470();
}

uint64_t sub_1005C5C44()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1005C5C6C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    id v4 = a4;
  }
}

uint64_t sub_1005C5CB0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1005C5CE8(uint64_t a1)
{
  sub_1005948A4(a1, *(void *)(v1 + 16));
}

uint64_t sub_1005C5CF0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005C5D28(uint64_t (*a1)(double *), uint64_t a2)
{
  return sub_100598CDC(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_1005C5D30()
{
  return sub_100599AAC();
}

void sub_1005C5D38(int a1)
{
  sub_100598B14(a1, *(char **)(v1 + 16));
}

unint64_t sub_1005C5D40()
{
  unint64_t result = qword_101674490;
  if (!qword_101674490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_101674490);
  }
  return result;
}

void sub_1005C5D94(void *a1)
{
}

uint64_t sub_1005C5D9C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1005C5E2C()
{
}

uint64_t sub_1005C5E48(uint64_t (*a1)(double *))
{
  return sub_10059C9C0(a1);
}

uint64_t sub_1005C5E50()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1005C5E88(uint64_t a1)
{
  sub_10059CC88(a1, *(unsigned char *)(v1 + 16));
}

void sub_1005C5E94()
{
}

uint64_t sub_1005C5E9C()
{
  swift_release();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005C5ED4()
{
  return sub_10059CD60();
}

void sub_1005C5EF0()
{
}

void sub_1005C5EF8()
{
}

uint64_t sub_1005C5F00()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1005C5F38(uint64_t a1)
{
  sub_10059D74C(a1, *(unsigned char *)(v1 + 16));
}

void sub_1005C5F44(void *a1)
{
}

void sub_1005C5F4C(void *a1)
{
}

uint64_t sub_1005C5F58(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_10059B41C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1005C6024(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_10059ACE8(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1005C60EC()
{
  return sub_10059C04C();
}

uint64_t sub_1005C60F4()
{
  return sub_1005C66C0((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005C6110()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1005C6160(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100599F20(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1005C6228()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

void sub_1005C6260(uint64_t a1)
{
  sub_10059E77C(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), (void (*)(BOOL))sub_100E4E064);
}

void sub_1005C629C()
{
  sub_100E61E38(*(void *)(v0 + 16));
}

uint64_t sub_1005C62A4()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = (v4 & 0xFFFFFFFFFFFFFFF8) + v0;
  unint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v8 = v0 + v3;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v7, v5);
}

uint64_t sub_1005C63B0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  char v6 = *(unsigned char *)(v1 + v5);
  unint64_t v7 = *(void **)((v5 & 0xFFFFFFFFFFFFFFF8) + v1 + 8);

  return sub_100599314(a1, v1 + v4, v6, v7);
}

uint64_t sub_1005C6450()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = (v4 & 0xFFFFFFFFFFFFFFF8) + v0;
  unint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v3, v8);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v7, v5);
}

uint64_t sub_1005C6564(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  char v9 = *(unsigned char *)(v1 + v5 + *(void *)(v4 + 64));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100528D08;
  return sub_100599548(a1, v6, v7, v8, v9);
}

uint64_t sub_1005C6690(uint64_t a1, uint64_t a2)
{
  return sub_100596F50(a1, a2);
}

id sub_1005C6698()
{
  return sub_100598980();
}

void sub_1005C66A0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_1005980FC(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1005C66A8()
{
  return sub_1005C66C0((void (*)(void))&_swift_release);
}

uint64_t sub_1005C66C0(void (*a1)(void))
{
  swift_unknownObjectRelease();

  a1(*(void *)(v1 + 48));

  return _swift_deallocObject(v1, 56, 7);
}

uint64_t sub_1005C6718(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  char v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *char v9 = v2;
  v9[1] = sub_100528D08;
  return sub_1005970BC(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1005C67E4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100528D08;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1016745A8 + dword_1016745A8);
  return v6(a1, v4);
}

uint64_t sub_1005C689C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005C68E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1005C694C()
{
  unint64_t result = qword_1016745D0;
  if (!qword_1016745D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016745D0);
  }
  return result;
}

id sub_1005C69A0()
{
  return [*(id *)(v0 + 16) undo];
}

id sub_1005C69B0()
{
  return [*(id *)(v0 + 16) redo];
}

void sub_1005C69C0()
{
}

uint64_t sub_1005C69C8(uint64_t (*a1)(double *))
{
  return sub_10059E0E4(a1);
}

uint64_t sub_1005C69D0(uint64_t (*a1)(double *))
{
  return sub_10059E440(a1);
}

uint64_t sub_1005C69D8(void (*a1)(uint64_t))
{
  return sub_10059E7F0(a1);
}

uint64_t sub_1005C69E0(void (*a1)(uint64_t))
{
  return sub_10059EA24(a1);
}

uint64_t sub_1005C69E8()
{
  return sub_1005C79F0((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_1005C6A00(void (*a1)(double *), uint64_t a2)
{
  sub_10059ED6C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1005C6A08()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1005C6A40()
{
  sub_10059F40C(*(double *)(v0 + 24));
}

void sub_1005C6A4C(uint64_t a1)
{
  sub_10059ED00(a1, v1, (SEL *)&selRef_zoomToFitAllContent);
}

void sub_1005C6A70(uint64_t a1)
{
  sub_10059ED00(a1, v1, (SEL *)&selRef_zoomToCurrentSelection);
}

void sub_1005C6A94(uint64_t a1)
{
  sub_10059E77C(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), (void (*)(BOOL))sub_100E4EE64);
}

void sub_1005C6AC8(uint64_t a1)
{
  sub_1005A4C10(a1, v1, (SEL *)&selRef_newBoard_);
}

void sub_1005C6AEC()
{
}

uint64_t sub_1005C6AF8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100531484(a1, v4, v5, v6);
}

void sub_1005C6BAC()
{
}

void sub_1005C6BB4(uint64_t a1)
{
  sub_1005A24B8(a1, v1, sub_1005A4F58);
}

void sub_1005C6BE4(void *a1)
{
}

void sub_1005C6BEC()
{
}

void sub_1005C6BF4(uint64_t a1)
{
  sub_1005A24B8(a1, v1, sub_1005A2180);
}

void sub_1005C6C24(uint64_t a1)
{
  sub_1005A24B8(a1, v1, sub_1005A2694);
}

void sub_1005C6C54()
{
}

void sub_1005C6C5C()
{
}

unint64_t sub_1005C6C64()
{
  unint64_t result = qword_10168E350;
  if (!qword_10168E350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E350);
  }
  return result;
}

uint64_t sub_1005C6CB8()
{
  return sub_1005C79F0((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005C6CD0(void (*a1)(unint64_t), uint64_t a2)
{
  return sub_1005A37AC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

void sub_1005C6CD8()
{
}

void sub_1005C6CE0(uint64_t a1)
{
  sub_1005A4C10(a1, v1, (SEL *)&selRef_presentGenerativePlayground_);
}

uint64_t sub_1005C6D04(void *a1)
{
  return sub_1005A31CC(a1);
}

void sub_1005C6D0C()
{
}

void sub_1005C6D14(char a1)
{
  sub_1005B5340(a1, *(void **)(v1 + 16));
}

void sub_1005C6D1C()
{
  sub_1005A55C8(*(void **)(v0 + 16));
}

uint64_t sub_1005C6D24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_1005C6D8C()
{
}

uint64_t sub_1005C6D94()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1005C6DDC(char a1)
{
  sub_100DF4CD8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

void sub_1005C6DE8()
{
}

double sub_1005C6DF0(uint64_t a1)
{
  *(void *)(a1 + 240) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

unint64_t sub_1005C6E1C()
{
  unint64_t result = qword_10169FD50;
  if (!qword_10169FD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169FD50);
  }
  return result;
}

unint64_t sub_1005C6E70()
{
  unint64_t result = qword_101674630;
  if (!qword_101674630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101674630);
  }
  return result;
}

unint64_t sub_1005C6EC4()
{
  unint64_t result = qword_101674638;
  if (!qword_101674638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101674638);
  }
  return result;
}

uint64_t sub_1005C6F1C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_1005AE9EC(a1, v4, v5, v6);
}

uint64_t sub_1005C6FD4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_1005AF7DC(a1, v4, v5, v6);
}

uint64_t sub_1005C708C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_1005ADA0C(a1, v4, v5, v6);
}

uint64_t sub_1005C7144(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_1005AB2A8(a1, v4, v5, v6);
}

uint64_t sub_1005C71FC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_1005AC4B0(a1, v4, v5, v6);
}

uint64_t sub_1005C72B4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_1005A82C4(a1, v4, v5, v6);
}

uint64_t sub_1005C736C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_1005A907C(a1, v4, v5, v6);
}

uint64_t sub_1005C7424(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_1005A9F30(a1, v4, v5, v6);
}

uint64_t sub_1005C74DC()
{
  return sub_1005C0750(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t sub_1005C74E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101674708);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1005C7550()
{
  unint64_t result = qword_101674710;
  if (!qword_101674710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101674710);
  }
  return result;
}

unint64_t sub_1005C75A4()
{
  unint64_t result = qword_101674718;
  if (!qword_101674718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101674718);
  }
  return result;
}

unint64_t sub_1005C75F8()
{
  unint64_t result = qword_101674720;
  if (!qword_101674720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101674720);
  }
  return result;
}

uint64_t sub_1005C7650()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1005C76A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005C1EF0(*(void *)(v3 + 16), *(void *)(v3 + 24), a3, *(uint64_t (**)(uint64_t))(v3 + 32));
}

unint64_t sub_1005C76AC()
{
  unint64_t result = qword_10169FD60;
  if (!qword_10169FD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169FD60);
  }
  return result;
}

unint64_t sub_1005C7700()
{
  unint64_t result = qword_101674730;
  if (!qword_101674730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101674730);
  }
  return result;
}

uint64_t sub_1005C7754(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100528488;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_101674758 + dword_101674758);
  return v6(a1, v4);
}

id sub_1005C780C(char a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  char v6 = a1 & 1;
  uint64_t v7 = &a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_delegate];
  *(void *)&a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v8 = (uint64_t)&a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_initialURL];
  uint64_t v9 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(void *)&a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_alert] = 0;
  *(void *)&a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_textField] = 0;
  *(void *)&a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_replaceAction] = 0;
  a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_role] = v6;
  *((void *)v7 + 1) = &off_101516380;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  uint64_t v10 = a4;
  sub_1005C6D24(a3, v8);
  swift_endAccess();

  v13.receiver = v10;
  v13.super_class = (Class)type metadata accessor for CRLInsertEditURLAlert();
  id v11 = [super init];
  sub_100522F00(a3, &qword_101672E90);
  return v11;
}

void sub_1005C7968()
{
  sub_1005B6A44(*(void *)(v0 + 16));
}

uint64_t sub_1005C7970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100FB379C(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_1005C797C()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1005C79C4()
{
  return sub_1005B5AA4(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(char *, uint64_t))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1005C79D8()
{
  return sub_1005C79F0((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005C79F0(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 24));

  return _swift_deallocObject(v1, 32, 7);
}

void sub_1005C7A40()
{
  sub_1005B3ED8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

id sub_1005C7A4C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1005A5BA4(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_1005C7A68()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1005C7AB0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_1005A5C64(a1, v4, v5, v7, v6);
}

uint64_t sub_1005C7B74()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 72, 7);
}

void sub_1005C7BD4()
{
}

uint64_t sub_1005C7BE0()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1005C7C30(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528488;
  return sub_100A82E04(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1005C7CFC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100595E60(a1, v4, v5, v6);
}

uint64_t sub_1005C7DB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005C7E18(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1005C7FF8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1005C8068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1005C8138;
  return sub_1005C8234(a1, a2, a3, a4);
}

uint64_t sub_1005C8138(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_1005C8234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v4;
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = v4;
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 56) = *v4;
  sub_1005057FC(&qword_101672BB0);
  *(void *)(v5 + 64) = swift_task_alloc();
  *(void *)(v5 + 72) = type metadata accessor for CRLRealTimeMessengerConfiguration();
  *(void *)(v5 + 80) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for GroupSessionMessenger.DeliveryMode();
  *(void *)(v5 + 88) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = swift_task_alloc();
  *(void *)(v5 + 96) = v9;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = swift_task_alloc();
  *(void *)(v5 + 104) = v12;
  swift_defaultActor_initialize();
  v4[15] = 0;
  swift_unknownObjectWeakInit();
  v4[19] = 0;
  v4[20] = 0;
  GroupSession.id.getter();
  uint64_t v13 = UUID.uuidString.getter();
  uint64_t v15 = v14;
  *(void *)(v5 + 112) = v13;
  *(void *)(v5 + 120) = v14;
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v10);
  v6[16] = v13;
  v6[17] = v15;
  type metadata accessor for GroupSessionMessenger();
  *(_DWORD *)(v5 + 144) = enum case for GroupSessionMessenger.DeliveryMode.unreliable(_:);
  char v16 = *(void (**)(uint64_t))(v8 + 104);
  *(void *)(v5 + 128) = v16;
  *(void *)(v5 + 136) = (v8 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v16(v9);
  swift_bridgeObjectRetain();
  swift_retain();
  v6[18] = GroupSessionMessenger.__allocating_init<A>(session:deliveryMode:)();
  return _swift_task_switch(sub_1005C84D0, v6, 0);
}

uint64_t sub_1005C84D0()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 128);
  uint64_t v2 = *(unsigned int *)(v0 + 144);
  uint64_t v26 = *(void *)(v0 + 112);
  uint64_t v27 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v5 = *(int **)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v25 = *(void *)(v0 + 64);
  uint64_t v7 = *(void **)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 24);
  v7[15] = *(void *)(v0 + 40);
  swift_unknownObjectWeakAssign();
  uint64_t v24 = type metadata accessor for CRLRealTimeMessengerImplementation();
  v1(v4, v2, v3);
  uint64_t v9 = (void *)(v4 + v5[7]);
  *uint64_t v9 = 20;
  uint64_t v10 = enum case for DispatchTimeInterval.seconds(_:);
  uint64_t v11 = type metadata accessor for DispatchTimeInterval();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  *(void *)(v4 + v5[5]) = 980;
  *(_WORD *)(v4 + v5[6]) = 24;
  uint64_t v12 = type metadata accessor for CRLRealTimeDataEncryptor();
  uint64_t v14 = *(void *)(v6 + 80);
  uint64_t v13 = *(void *)(v6 + 88);
  uint64_t v15 = type metadata accessor for CRLUnreliableRealTimeMessenger();
  swift_retain();
  swift_retain();
  v7[19] = sub_10105E260(v4, v8, (uint64_t)v7, 0, 0, v24, v12, v15, (uint64_t)&off_101510790, (uint64_t)&off_101509AC0);
  swift_release();
  uint64_t v16 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v25, 1, 1, v16);
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = v7[18];
  id v19 = (void *)swift_allocObject();
  v19[2] = 0;
  v19[3] = 0;
  v19[4] = v14;
  v19[5] = v13;
  v19[6] = v18;
  v19[7] = v26;
  v19[8] = v27;
  v19[9] = v17;
  swift_retain();
  uint64_t v20 = sub_1005912D0(v25, (uint64_t)&unk_1016749E8, (uint64_t)v19);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  v7[20] = v20;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned int v21 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v22 = *(void *)(v0 + 48);
  return v21(v22);
}

uint64_t sub_1005C87AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[112] = a7;
  v7[111] = a6;
  v7[110] = a5;
  v7[109] = a4;
  sub_1005057FC((uint64_t *)&unk_101674160);
  v7[113] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for CRLProto_Data(0);
  v7[114] = v8;
  v7[115] = *(void *)(v8 - 8);
  v7[116] = swift_task_alloc();
  type metadata accessor for BinaryDecodingOptions();
  v7[117] = swift_task_alloc();
  v7[118] = type metadata accessor for CRLProto_EncryptedRealTimeMessage(0);
  v7[119] = swift_task_alloc();
  sub_1005057FC(&qword_1016749F0);
  v7[120] = swift_task_alloc();
  v7[121] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for UUID();
  v7[122] = v9;
  v7[123] = *(void *)(v9 - 8);
  v7[124] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Participant();
  v7[125] = v10;
  v7[126] = *(void *)(v10 - 8);
  v7[127] = swift_task_alloc();
  uint64_t v11 = sub_1005057FC(&qword_1016749F8);
  v7[128] = v11;
  v7[129] = *(void *)(v11 - 8);
  v7[130] = swift_task_alloc();
  v7[131] = swift_task_alloc();
  v7[132] = swift_task_alloc();
  sub_1005057FC(&qword_101674A00);
  v7[133] = swift_task_alloc();
  uint64_t v12 = sub_1005057FC(&qword_101674A08);
  v7[134] = v12;
  v7[135] = *(void *)(v12 - 8);
  v7[136] = swift_task_alloc();
  uint64_t v13 = sub_1005057FC(&qword_101674A10);
  v7[137] = v13;
  v7[138] = *(void *)(v13 - 8);
  v7[139] = swift_task_alloc();
  return _swift_task_switch(sub_1005C8B6C, 0, 0);
}

uint64_t sub_1005C8B6C()
{
  uint64_t v1 = v0[136];
  uint64_t v2 = v0[135];
  uint64_t v3 = v0[134];
  GroupSessionMessenger.messages(of:)();
  GroupSessionMessenger.Messages.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  swift_beginAccess();
  swift_beginAccess();
  unint64_t v4 = sub_1005CC43C();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[140] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1005C8CCC;
  uint64_t v6 = v0[137];
  uint64_t v7 = v0[133];
  return dispatch thunk of AsyncIteratorProtocol.next()(v7, v6, v4);
}

uint64_t sub_1005C8CCC()
{
  *(void *)(*(void *)v1 + 1128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1005C9BC0;
  }
  else {
    uint64_t v2 = sub_1005C8DE0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005C8DE0()
{
  uint64_t v1 = *(uint64_t **)(v0 + 1064);
  uint64_t v2 = *(void *)(v0 + 1024);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v0 + 1032) + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 1104) + 8))(*(void *)(v0 + 1112), *(void *)(v0 + 1096));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  uint64_t v5 = *(void *)(v0 + 1128);
  uint64_t v6 = *(uint64_t **)(v0 + 1056);
  uint64_t v7 = *(uint64_t **)(v0 + 1048);
  uint64_t v8 = *(int *)(v2 + 48);
  uint64_t v9 = (char *)v6 + v8;
  uint64_t v10 = *v1;
  unint64_t v11 = v1[1];
  uint64_t v12 = (char *)v1 + v8;
  *uint64_t v6 = v10;
  v6[1] = v11;
  uint64_t v13 = type metadata accessor for GroupSessionMessenger.MessageContext();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v9, v12, v13);
  uint64_t v15 = (char *)v7 + *(int *)(v2 + 48);
  *uint64_t v7 = v10;
  v7[1] = v11;
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v16(v15, v9, v13);
  sub_100510D4C(v10, v11);
  sub_100510D4C(v10, v11);
  uint64_t v17 = sub_100E8F584(v10, v11);
  *(void *)(v0 + 1136) = v17;
  if (v5)
  {
    sub_100510084(v10, v11);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v15, v13);
    if (qword_10166FA80 != -1) {
      goto LABEL_57;
    }
    goto LABEL_25;
  }
  uint64_t v18 = *(uint64_t **)(v0 + 1040);
  uint64_t v119 = *(void *)(v0 + 1024);
  uint64_t v122 = (void (*)(unint64_t, char *, uint64_t))v16;
  uint64_t v124 = v17;
  id v19 = *(void (**)(char *, uint64_t))(v14 + 8);
  v19(v15, v13);
  unint64_t v20 = (unint64_t)v18 + *(int *)(v119 + 48);
  *uint64_t v18 = v10;
  v18[1] = v11;
  v122(v20, v9, v13);
  sub_100510084(v10, v11);
  GroupSessionMessenger.MessageContext.source.getter();
  v19((char *)v20, v13);
  if (*(unsigned char *)(v124 + 16))
  {
    if (*(unsigned char *)(v124 + 16) == 1)
    {
      uint64_t v21 = *(void *)(v124 + 24);
      unint64_t v22 = *(void *)(v124 + 32);
      *(_OWORD *)(v0 + 624) = 0u;
      *(_OWORD *)(v0 + 640) = 0u;
      *(void *)(v0 + 656) = 0;
      sub_100510D4C(v21, v22);
      sub_100510D4C(v21, v22);
      BinaryDecodingOptions.init()();
      sub_1005CC498();
      Message.init(serializedData:extensions:partial:options:)();
      unsigned __int8 v57 = *(uint64_t **)(v0 + 952);
      uint64_t v58 = *(void *)(v0 + 920);
      uint64_t v59 = *(void *)(v0 + 912);
      uint64_t v60 = *(void *)(v0 + 904);
      uint64_t v61 = *v57;
      sub_1005CC4F0((uint64_t)v57 + *(int *)(*(void *)(v0 + 944) + 24), v60);
      int v62 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v60, 1, v59);
      uint64_t v63 = *(_OWORD **)(v0 + 928);
      if (v62 == 1)
      {
        uint64_t v64 = *(void *)(v0 + 904);
        *uint64_t v63 = xmmword_101180360;
        UnknownStorage.init()();
        sub_100522F00(v64, (uint64_t *)&unk_101674160);
      }
      else
      {
        sub_1005CC5B8(*(void *)(v0 + 904), (uint64_t)v63);
      }
      uint64_t v82 = *(void *)(v0 + 952);
      uint64_t v83 = *(uint64_t **)(v0 + 928);
      sub_100510084(v21, v22);
      sub_1005CC558(v82, type metadata accessor for CRLProto_EncryptedRealTimeMessage);
      uint64_t v27 = (void *)*v83;
      unint64_t v20 = v83[1];
      uint64_t v26 = v20 >> 62;
      sub_100510D4C(*v83, v20);
      sub_1005CC558((uint64_t)v83, type metadata accessor for CRLProto_Data);
      type metadata accessor for CRLEncryptedRealTimeMessage();
      uint64_t inited = (void *)swift_initStackObject();
      *(void *)(v0 + 1184) = inited;
      inited[2] = v61;
      inited[3] = v27;
      inited[4] = v20;
      if (qword_10166FA80 != -1) {
LABEL_60:
      }
        swift_once();
      swift_beginAccess();
      uint64_t v84 = static OS_os_log.crlRealTimeMessageTransfer;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v85 = swift_initStackObject();
      *(_OWORD *)(v85 + 16) = xmmword_10117DF40;
      unint64_t v86 = (void *)v85;
      uint64_t v87 = 0;
      switch((int)v26)
      {
        case 1:
          LODWORD(v87) = HIDWORD(v27) - v27;
          if (__OFSUB__(HIDWORD(v27), v27)) {
            goto LABEL_63;
          }
          uint64_t v87 = (int)v87;
LABEL_47:
          unint64_t v121 = inited;
          BOOL v41 = __OFADD__(v87, 24);
          uint64_t v103 = v87 + 24;
          if (v41) {
            goto LABEL_62;
          }
          unint64_t v104 = (void *)v84;
          uint64_t v105 = *(void *)(v0 + 992);
          uint64_t v106 = *(void *)(v0 + 984);
          uint64_t v107 = *(void *)(v0 + 976);
          uint64_t v108 = *(void *)(v0 + 888);
          uint64_t v109 = *(void *)(v0 + 880);
          *(void *)(v85 + 56) = &type metadata for Int;
          *(void *)(v85 + 64) = &protocol witness table for Int;
          *(void *)(v85 + 32) = v103;
          id v110 = v104;
          Participant.id.getter();
          uint64_t v111 = UUID.uuidString.getter();
          uint64_t v113 = v112;
          (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v105, v107);
          v86[12] = &type metadata for String;
          unint64_t v114 = sub_100528BE4();
          v86[9] = v111;
          v86[10] = v113;
          v86[17] = &type metadata for String;
          v86[18] = v114;
          v86[13] = v114;
          v86[14] = v109;
          v86[15] = v108;
          swift_bridgeObjectRetain();
          uint64_t v115 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v110, (uint64_t)&_mh_execute_header, v115, (uint64_t)"Unreliable process received encrypted message of size %{public}d received from sender %{public}@ on group session UUID: %{public}@", 130, 2, (uint64_t)v86);
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();

          uint64_t Strong = swift_weakLoadStrong();
          *(void *)(v0 + 1192) = Strong;
          if (Strong)
          {
            uint64_t v80 = Strong;
            id v81 = sub_1005CA1AC;
            goto LABEL_50;
          }
          swift_setDeallocating();
          sub_100510084(v121[3], v121[4]);
          break;
        case 2:
          uint64_t v102 = v27[2];
          uint64_t v101 = v27[3];
          BOOL v41 = __OFSUB__(v101, v102);
          uint64_t v87 = v101 - v102;
          if (!v41) {
            goto LABEL_47;
          }
          goto LABEL_64;
        case 3:
          goto LABEL_47;
        default:
          uint64_t v87 = BYTE6(v20);
          goto LABEL_47;
      }
      goto LABEL_54;
    }
    uint64_t v43 = *(void *)(v124 + 24);
    unint64_t v44 = *(void *)(v124 + 32);
    sub_100510D4C(v43, v44);
    uint64_t v45 = sub_1008D47FC(v43, v44);
    *(void *)(v0 + 1216) = v45;
    uint64_t v65 = v45;
    if (qword_10166FA80 != -1) {
      swift_once();
    }
    uint64_t v66 = *(void *)(v0 + 992);
    uint64_t v67 = *(void *)(v0 + 984);
    uint64_t v118 = *(void *)(v0 + 976);
    uint64_t v120 = *(void *)(v0 + 880);
    uint64_t v123 = *(void *)(v0 + 888);
    swift_beginAccess();
    unint64_t v68 = (void *)static OS_os_log.crlRealTimeMessageTransfer;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v69 = swift_initStackObject();
    *(_OWORD *)(v69 + 16) = xmmword_10117E800;
    id v117 = v68;
    uint64_t v70 = UUID.uuidString.getter();
    uint64_t v72 = v71;
    *(void *)(v69 + 56) = &type metadata for String;
    unint64_t v73 = sub_100528BE4();
    *(void *)(v69 + 64) = v73;
    *(void *)(v69 + 32) = v70;
    *(void *)(v69 + 40) = v72;
    __int16 v74 = *(_WORD *)(v65 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index);
    *(void *)(v69 + 96) = &type metadata for UInt16;
    *(void *)(v69 + 104) = &protocol witness table for UInt16;
    *(_WORD *)(v69 + 72) = v74;
    Participant.id.getter();
    uint64_t v75 = UUID.uuidString.getter();
    uint64_t v77 = v76;
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v66, v118);
    *(void *)(v69 + 136) = &type metadata for String;
    *(void *)(v69 + 144) = v73;
    *(void *)(v69 + 112) = v75;
    *(void *)(v69 + 120) = v77;
    *(void *)(v69 + 176) = &type metadata for String;
    *(void *)(v69 + 184) = v73;
    *(void *)(v69 + 152) = v120;
    *(void *)(v69 + 160) = v123;
    swift_bridgeObjectRetain();
    uint64_t v78 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v117, (uint64_t)&_mh_execute_header, v78, (uint64_t)"Unreliable process received chunked message with chainID: %{public}@ chunkIndex: %{public}d received from sender %{public}@ on group session UUID: %{public}@", 157, 2, v69);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v79 = swift_weakLoadStrong();
    *(void *)(v0 + 1224) = v79;
    if (v79)
    {
      uint64_t v80 = v79;
      id v81 = sub_1005CA550;
LABEL_50:
      return _swift_task_switch(v81, v80, 0);
    }
    goto LABEL_43;
  }
  uint64_t v26 = *(void *)(v124 + 24);
  unint64_t v23 = *(void *)(v124 + 32);
  sub_100510D4C(v26, v23);
  uint64_t v24 = sub_100A160B4(v26, v23);
  *(void *)(v0 + 1144) = v24;
  uint64_t inited = (void *)v24;
  LODWORD(v26) = v0 + 208;
  if (qword_10166FA80 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v27 = (void *)static OS_os_log.crlRealTimeMessageTransfer;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v28 = swift_initStackObject();
  uint64_t v29 = (void *)v28;
  *(_OWORD *)(v28 + 16) = xmmword_10117DF40;
  uint64_t v30 = inited[3];
  uint64_t v31 = *(void *)(v30 + 16);
  if (!v31)
  {
    uint64_t v32 = 0;
LABEL_40:
    BOOL v41 = __OFADD__(v32, 16);
    uint64_t v88 = v32 + 16;
    if (v41)
    {
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
      JUMPOUT(0x1005C9BA0);
    }
    uint64_t v89 = *(void *)(v0 + 992);
    uint64_t v90 = *(void *)(v0 + 984);
    uint64_t v91 = *(void *)(v0 + 976);
    uint64_t v92 = *(void *)(v0 + 888);
    uint64_t v93 = *(void *)(v0 + 880);
    *(void *)(v28 + 56) = &type metadata for Int;
    *(void *)(v28 + 64) = &protocol witness table for Int;
    *(void *)(v28 + 32) = v88;
    unint64_t v94 = v27;
    Participant.id.getter();
    uint64_t v95 = UUID.uuidString.getter();
    uint64_t v97 = v96;
    (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v89, v91);
    v29[12] = &type metadata for String;
    unint64_t v98 = sub_100528BE4();
    v29[9] = v95;
    v29[10] = v97;
    v29[17] = &type metadata for String;
    v29[18] = v98;
    v29[13] = v98;
    v29[14] = v93;
    v29[15] = v92;
    swift_bridgeObjectRetain();
    uint64_t v99 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v94, (uint64_t)&_mh_execute_header, v99, (uint64_t)"Unreliable process messages of size %{public}d received from sender %{public}@ on group session UUID: %{public}@", 112, 2, (uint64_t)v29);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v100 = swift_weakLoadStrong();
    *(void *)(v0 + 1152) = v100;
    if (v100)
    {
      uint64_t v80 = v100;
      id v81 = sub_1005C9C48;
      goto LABEL_50;
    }
LABEL_43:
    swift_release();
LABEL_54:
    swift_release();
    (*(void (**)(void, void))(*(void *)(v0 + 1008) + 8))(*(void *)(v0 + 1016), *(void *)(v0 + 1000));
    goto LABEL_26;
  }
  uint64_t v32 = 0;
  uint64_t v33 = (uint64_t *)(v30 + 48);
  while (2)
  {
    uint64_t v34 = *(v33 - 1);
    uint64_t v35 = *v33;
    unint64_t v36 = (unint64_t)*v33 >> 62;
    v33 += 3;
    uint64_t v37 = 0;
    switch(v36)
    {
      case 1uLL:
        LODWORD(v37) = HIDWORD(v34) - v34;
        if (!__OFSUB__(HIDWORD(v34), v34))
        {
          uint64_t v37 = (int)v37;
          goto LABEL_19;
        }
        __break(1u);
        goto LABEL_59;
      case 2uLL:
        uint64_t v40 = v34 + 16;
        uint64_t v39 = *(void *)(v34 + 16);
        uint64_t v38 = *(void *)(v40 + 8);
        BOOL v41 = __OFSUB__(v38, v39);
        uint64_t v37 = v38 - v39;
        if (!v41) {
          goto LABEL_19;
        }
LABEL_59:
        __break(1u);
        goto LABEL_60;
      case 3uLL:
        goto LABEL_19;
      default:
        uint64_t v37 = BYTE6(v35);
LABEL_19:
        BOOL v41 = __OFADD__(v37, 24);
        uint64_t v42 = v37 + 24;
        if (!v41)
        {
          BOOL v41 = __OFADD__(v32, v42);
          v32 += v42;
          if (v41) {
            goto LABEL_56;
          }
          if (!--v31) {
            goto LABEL_40;
          }
          continue;
        }
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        swift_once();
LABEL_25:
        swift_beginAccess();
        UIImage_optional v46 = (void *)static OS_os_log.crlRealTimeMessageTransfer;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v47 = swift_initStackObject();
        *(_OWORD *)(v47 + 16) = xmmword_10117E810;
        swift_getErrorValue();
        id v48 = v46;
        uint64_t v49 = Error.localizedDescription.getter();
        uint64_t v51 = v50;
        *(void *)(v47 + 56) = &type metadata for String;
        *(void *)(v47 + 64) = sub_100528BE4();
        *(void *)(v47 + 32) = v49;
        *(void *)(v47 + 40) = v51;
        uint64_t v52 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v48, (uint64_t)&_mh_execute_header, v52, (uint64_t)"Encountered an error while deserializing data received over the unreliable channel. %{public}@", 94, 2, v47);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        swift_errorRelease();
LABEL_26:
        sub_100522F00(*(void *)(v0 + 1056), &qword_1016749F8);
        unint64_t v53 = sub_1005CC43C();
        size_t v54 = (void *)swift_task_alloc();
        *(void *)(v0 + 1120) = v54;
        *size_t v54 = v0;
        v54[1] = sub_1005C8CCC;
        uint64_t v55 = *(void *)(v0 + 1096);
        uint64_t v56 = *(void *)(v0 + 1064);
        return dispatch thunk of AsyncIteratorProtocol.next()(v56, v55, v53);
    }
  }
}

uint64_t sub_1005C9BC0()
{
  *(void *)(v0 + 856) = *(void *)(v0 + 1128);
  sub_1005057FC(&qword_101672BD0);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_1005C9C48()
{
  *(void *)(v0 + 1160) = *(void *)(*(void *)(v0 + 1152) + 152);
  swift_retain();
  swift_release();
  return _swift_task_switch(sub_1005C9CC0, 0, 0);
}

uint64_t sub_1005C9CC0(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  if (v3[145])
  {
    uint64_t v4 = v3[126];
    uint64_t v5 = v3[125];
    uint64_t v6 = v3[121];
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 16))(v6, v3[127], v5);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v6, 0, 1, v5);
    a2 = v3[145];
    a1 = sub_1005C9D80;
    a3 = 0;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(a1, a2, a3);
}

uint64_t sub_1005C9D80()
{
  uint64_t v1 = v0[145] + OBJC_IVAR____TtC8Freeform34CRLRealTimeMessengerImplementation_helper;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[146] = Strong;
  if (Strong)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 32) + **(int **)(v3 + 32));
    uint64_t v5 = (void *)swift_task_alloc();
    v0[147] = (uint64_t)v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1005C9F00;
    uint64_t v6 = v0[143];
    uint64_t v7 = v0[121];
    return v9(v6, v7, ObjectType, v3);
  }
  else
  {
    swift_release();
    sub_100522F00(v0[121], &qword_1016749F0);
    return _swift_task_switch(sub_1005CA048, 0, 0);
  }
}

uint64_t sub_1005C9F00()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    swift_unknownObjectRelease();
    uint64_t v3 = *(void *)(v2 + 1160);
    uint64_t v4 = sub_1005CA134;
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v3 = *(void *)(v2 + 1160);
    uint64_t v4 = sub_1005CC61C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1005CA048()
{
  swift_release();
  swift_release();
  (*(void (**)(void, void))(v0[126] + 8))(v0[127], v0[125]);
  sub_100522F00(v0[132], &qword_1016749F8);
  unint64_t v1 = sub_1005CC43C();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[140] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1005C8CCC;
  uint64_t v3 = v0[137];
  uint64_t v4 = v0[133];
  return dispatch thunk of AsyncIteratorProtocol.next()(v4, v3, v1);
}

uint64_t sub_1005CA134()
{
  swift_release();
  sub_100522F00(*(void *)(v0 + 968), &qword_1016749F0);
  return _swift_task_switch(sub_1005CA048, 0, 0);
}

uint64_t sub_1005CA1AC()
{
  *(void *)(v0 + 1200) = *(void *)(*(void *)(v0 + 1192) + 152);
  swift_retain();
  swift_release();
  return _swift_task_switch(sub_1005CA224, 0, 0);
}

void sub_1005CA224()
{
  if (v0[150])
  {
    uint64_t v1 = v0[126];
    uint64_t v2 = v0[125];
    uint64_t v3 = v0[120];
    (*(void (**)(uint64_t, void, uint64_t))(v1 + 16))(v3, v0[127], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v1 + 56))(v3, 0, 1, v2);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[151] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1005CA31C;
    uint64_t v5 = v0[148];
    uint64_t v6 = v0[120];
    sub_101058410(v5, v6);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1005CA31C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 960);
  swift_task_dealloc();
  swift_release();
  sub_100522F00(v1, &qword_1016749F0);
  return _swift_task_switch(sub_1005CA458, 0, 0);
}

uint64_t sub_1005CA458()
{
  uint64_t v1 = v0[148];
  swift_setDeallocating();
  sub_100510084(*(void *)(v1 + 24), *(void *)(v1 + 32));
  swift_release();
  (*(void (**)(void, void))(v0[126] + 8))(v0[127], v0[125]);
  sub_100522F00(v0[132], &qword_1016749F8);
  unint64_t v2 = sub_1005CC43C();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[140] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1005C8CCC;
  uint64_t v4 = v0[137];
  uint64_t v5 = v0[133];
  return dispatch thunk of AsyncIteratorProtocol.next()(v5, v4, v2);
}

uint64_t sub_1005CA550()
{
  *(void *)(v0 + 1232) = *(void *)(*(void *)(v0 + 1224) + 152);
  swift_retain();
  swift_release();
  return _swift_task_switch(sub_1005CA5C8, 0, 0);
}

void sub_1005CA5C8()
{
  if (v0[154])
  {
    uint64_t v1 = v0[126];
    uint64_t v2 = v0[125];
    uint64_t v3 = v0[120];
    (*(void (**)(uint64_t, void, uint64_t))(v1 + 16))(v3, v0[127], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v1 + 56))(v3, 0, 1, v2);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[155] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1005CA6C0;
    uint64_t v5 = v0[152];
    uint64_t v6 = v0[120];
    sub_1010590BC(v5, v6);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1005CA6C0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 960);
  swift_task_dealloc();
  swift_release();
  sub_100522F00(v1, &qword_1016749F0);
  return _swift_task_switch(sub_1005CA7FC, 0, 0);
}

uint64_t sub_1005CA7FC()
{
  swift_release();
  swift_release();
  (*(void (**)(void, void))(v0[126] + 8))(v0[127], v0[125]);
  sub_100522F00(v0[132], &qword_1016749F8);
  unint64_t v1 = sub_1005CC43C();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[140] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1005C8CCC;
  uint64_t v3 = v0[137];
  uint64_t v4 = v0[133];
  return dispatch thunk of AsyncIteratorProtocol.next()(v4, v3, v1);
}

uint64_t sub_1005CA8E8()
{
  if (*(void *)(v0 + 160))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  sub_100523398(v0 + 112);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1005CA970()
{
  sub_1005CA8E8();

  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for CRLUnreliableRealTimeMessenger()
{
  return sub_100568E70();
}

uint64_t sub_1005CA9B4(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_1005CA9D4, v1, 0);
}

uint64_t sub_1005CA9D4(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(v3 + 24) + 152);
  *(void *)(v3 + 32) = v4;
  if (v4)
  {
    swift_retain();
    a1 = sub_1005CAA54;
    a2 = v4;
    a3 = 0;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(a1, a2, a3);
}

uint64_t sub_1005CAA54()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = sub_100A15108();
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Freeform34CRLRealTimeMessengerImplementation__configuration;
  char v4 = *(void *)(v3 + *(int *)(type metadata accessor for CRLRealTimeMessengerConfiguration() + 20)) < v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1005CAB2C;
  uint64_t v6 = v0[2];
  return sub_10105CAD8(v6, v4);
}

uint64_t sub_1005CAB2C()
{
  uint64_t v2 = (void *)*v1;
  v2[6] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[3];
    return _swift_task_switch(sub_1005CAC68, v3, 0);
  }
  else
  {
    swift_release();
    char v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_1005CAC68()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005CACCC(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_1005CACEC, v1, 0);
}

void sub_1005CACEC()
{
  uint64_t v1 = *(void *)(v0[3] + 152);
  v0[4] = v1;
  if (v1)
  {
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[5] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1005CAB2C;
    uint64_t v3 = v0[2];
    sub_10105C3B0(v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1005CADA0(uint64_t a1)
{
  v2[24] = a1;
  v2[25] = v1;
  uint64_t v3 = type metadata accessor for Participants();
  v2[26] = v3;
  v2[27] = *(void *)(v3 - 8);
  v2[28] = swift_task_alloc();
  return _swift_task_switch(sub_1005CAE60, v1, 0);
}

uint64_t sub_1005CAE60()
{
  if (qword_10166FA80 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[25];
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlRealTimeMessageTransfer;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 32) = sub_100A15108();
  *(void *)(inited + 56) = &type metadata for Int;
  *(void *)(inited + 64) = &protocol witness table for Int;
  uint64_t v5 = *(void *)(v1 + 128);
  uint64_t v4 = *(void *)(v1 + 136);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = sub_100528BE4();
  *(void *)(inited + 72) = v5;
  *(void *)(inited + 80) = v4;
  id v6 = v2;
  swift_bridgeObjectRetain();
  uint64_t v7 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Unreliable transfer message of size %{public}d to all participants on group session UUID: %{public}@.", 101, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v8 = sub_100A151C8();
  v0[29] = v8;
  v0[30] = v9;
  uint64_t v10 = v8;
  unint64_t v11 = v9;
  type metadata accessor for CRLRealTimeMessageContainer();
  uint64_t v12 = swift_initStackObject();
  v0[31] = v12;
  *(unsigned char *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = v10;
  *(void *)(v12 + 32) = v11;
  sub_100510D4C(v10, v11);
  uint64_t v13 = sub_100E8EFB4();
  v0[32] = v13;
  v0[33] = v14;
  uint64_t v15 = v13;
  uint64_t v16 = v14;
  (*(void (**)(void, void, void))(v0[27] + 104))(v0[28], enum case for Participants.all(_:), v0[26]);
  uint64_t v17 = (void *)swift_task_alloc();
  v0[34] = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_1005CB118;
  uint64_t v18 = v0[28];
  return GroupSessionMessenger.send(_:to:)(v15, v16, v18);
}

uint64_t sub_1005CB118()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[28];
  uint64_t v4 = v2[27];
  uint64_t v5 = v2[26];
  uint64_t v6 = v2[25];
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0) {
    uint64_t v7 = sub_1005CB32C;
  }
  else {
    uint64_t v7 = sub_1005CB294;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1005CB294()
{
  unint64_t v1 = v0[30];
  uint64_t v2 = v0[31];
  uint64_t v3 = v0[29];
  sub_100510084(v0[32], v0[33]);
  swift_setDeallocating();
  sub_100510084(*(void *)(v2 + 24), *(void *)(v2 + 32));
  sub_100510084(v3, v1);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1005CB32C()
{
  uint64_t v1 = v0[32];
  unint64_t v2 = v0[33];
  uint64_t v3 = v0[31];
  sub_100510084(v0[29], v0[30]);
  sub_100510084(v1, v2);
  swift_setDeallocating();
  sub_100510084(*(void *)(v3 + 24), *(void *)(v3 + 32));
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1005CB3C4(uint64_t a1)
{
  v2[24] = a1;
  v2[25] = v1;
  uint64_t v3 = type metadata accessor for Participants();
  v2[26] = v3;
  v2[27] = *(void *)(v3 - 8);
  v2[28] = swift_task_alloc();
  return _swift_task_switch(sub_1005CB484, v1, 0);
}

uint64_t sub_1005CB484()
{
  if (qword_10166FA80 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[24];
  swift_beginAccess();
  unint64_t v2 = (void *)static OS_os_log.crlRealTimeMessageTransfer;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  uint64_t v4 = *(void *)(v1 + 24);
  unint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = inited;
  uint64_t v7 = 0;
  switch(v5 >> 62)
  {
    case 1uLL:
      LODWORD(v7) = HIDWORD(v4) - v4;
      if (__OFSUB__(HIDWORD(v4), v4)) {
        goto LABEL_13;
      }
      uint64_t v7 = (int)v7;
LABEL_8:
      BOOL v11 = __OFADD__(v7, 24);
      uint64_t v12 = v7 + 24;
      if (v11)
      {
        __break(1u);
LABEL_13:
        __break(1u);
LABEL_14:
        __break(1u);
        JUMPOUT(0x1005CB7A8);
      }
      uint64_t v13 = v0[25];
      *(void *)(inited + 56) = &type metadata for Int;
      *(void *)(inited + 64) = &protocol witness table for Int;
      *(void *)(inited + 32) = v12;
      uint64_t v15 = *(void *)(v13 + 128);
      uint64_t v14 = *(void *)(v13 + 136);
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = sub_100528BE4();
      *(void *)(v6 + 72) = v15;
      *(void *)(v6 + 80) = v14;
      id v16 = v2;
      swift_bridgeObjectRetain();
      uint64_t v17 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v16, (uint64_t)&_mh_execute_header, v17, (uint64_t)"Unreliable transfer encryptedCKRecordData of size %{public}d to all participants on group session UUID: %{public}@.", 115, 2, v6);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      uint64_t v18 = sub_1010212B4();
      v0[29] = v18;
      v0[30] = v19;
      uint64_t v20 = v18;
      unint64_t v21 = v19;
      type metadata accessor for CRLRealTimeMessageContainer();
      uint64_t v22 = swift_initStackObject();
      v0[31] = v22;
      *(unsigned char *)(v22 + 16) = 1;
      *(void *)(v22 + 24) = v20;
      *(void *)(v22 + 32) = v21;
      sub_100510D4C(v20, v21);
      uint64_t v23 = sub_100E8EFB4();
      v0[32] = v23;
      v0[33] = v24;
      uint64_t v25 = v23;
      uint64_t v26 = v24;
      (*(void (**)(void, void, void))(v0[27] + 104))(v0[28], enum case for Participants.all(_:), v0[26]);
      uint64_t v27 = (void *)swift_task_alloc();
      v0[34] = v27;
      *uint64_t v27 = v0;
      v27[1] = sub_1005CB118;
      uint64_t v28 = v0[28];
      return GroupSessionMessenger.send(_:to:)(v25, v26, v28);
    case 2uLL:
      uint64_t v10 = v4 + 16;
      uint64_t v9 = *(void *)(v4 + 16);
      uint64_t v8 = *(void *)(v10 + 8);
      BOOL v11 = __OFSUB__(v8, v9);
      uint64_t v7 = v8 - v9;
      if (!v11) {
        goto LABEL_8;
      }
      goto LABEL_14;
    case 3uLL:
      goto LABEL_8;
    default:
      uint64_t v7 = BYTE6(v5);
      goto LABEL_8;
  }
}

uint64_t sub_1005CB7B8(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  uint64_t v3 = type metadata accessor for Participants();
  v2[9] = v3;
  v2[10] = *(void *)(v3 - 8);
  v2[11] = swift_task_alloc();
  return _swift_task_switch(sub_1005CB878, v1, 0);
}

uint64_t sub_1005CB878()
{
  uint64_t v1 = sub_1008D2EB0();
  v0[12] = v1;
  v0[13] = v2;
  uint64_t v3 = v1;
  unint64_t v4 = v2;
  type metadata accessor for CRLRealTimeMessageContainer();
  uint64_t inited = swift_initStackObject();
  v0[14] = inited;
  *(unsigned char *)(inited + 16) = 2;
  *(void *)(inited + 24) = v3;
  *(void *)(inited + 32) = v4;
  sub_100510D4C(v3, v4);
  uint64_t v6 = sub_100E8EFB4();
  v0[15] = v6;
  v0[16] = v7;
  uint64_t v8 = v6;
  uint64_t v9 = v7;
  (*(void (**)(void, void, void))(v0[10] + 104))(v0[11], enum case for Participants.all(_:), v0[9]);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[17] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1005CBA18;
  uint64_t v11 = v0[11];
  return GroupSessionMessenger.send(_:to:)(v8, v9, v11);
}

uint64_t sub_1005CBA18()
{
  unint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[11];
  uint64_t v4 = v2[10];
  uint64_t v5 = v2[9];
  uint64_t v6 = v2[8];
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0) {
    uint64_t v7 = sub_1005CBC2C;
  }
  else {
    uint64_t v7 = sub_1005CBB94;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1005CBB94()
{
  unint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[12];
  sub_100510084(v0[15], v0[16]);
  swift_setDeallocating();
  sub_100510084(*(void *)(v2 + 24), *(void *)(v2 + 32));
  sub_100510084(v3, v1);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1005CBC2C()
{
  uint64_t v1 = v0[15];
  unint64_t v2 = v0[16];
  uint64_t v3 = v0[14];
  sub_100510084(v0[12], v0[13]);
  sub_100510084(v1, v2);
  swift_setDeallocating();
  sub_100510084(*(void *)(v3 + 24), *(void *)(v3 + 32));
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1005CBCC4(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return _swift_task_switch(sub_1005CBCE8, v2, 0);
}

uint64_t sub_1005CBCE8()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[5] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[6] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1005CBDC4;
    uint64_t v4 = v0[2];
    uint64_t v3 = v0[3];
    return sub_100E322AC(v4, v3);
  }
  else
  {
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_1005CBDC4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1005CBED8()
{
  return sub_100527E18();
}

uint64_t sub_1005CBEF4(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_100528D08;
  return _swift_task_switch(sub_1005CA9D4, v4, 0);
}

uint64_t sub_1005CBFA4(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_100528D08;
  return _swift_task_switch(sub_1005CACEC, v4, 0);
}

uint64_t sub_1005CC054(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528D08;
  return sub_1005CADA0(a1);
}

uint64_t sub_1005CC0E8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528D08;
  return sub_1005CB3C4(a1);
}

uint64_t sub_1005CC17C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528D08;
  return sub_1005CB7B8(a1);
}

uint64_t sub_1005CC210(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[3] = a2;
  v6[4] = v2;
  v6[1] = sub_100528488;
  _OWORD v6[2] = a1;
  return _swift_task_switch(sub_1005CBCE8, v2, 0);
}

uint64_t sub_1005CC2C8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005CC300()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1005CC350(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v8 = v1[9];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100528488;
  return sub_1005C87AC(a1, v4, v5, v6, v7, v9, v8);
}

unint64_t sub_1005CC43C()
{
  unint64_t result = qword_101674A18;
  if (!qword_101674A18)
  {
    sub_100522D34(&qword_101674A10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101674A18);
  }
  return result;
}

unint64_t sub_1005CC498()
{
  unint64_t result = qword_101674A20;
  if (!qword_101674A20)
  {
    type metadata accessor for CRLProto_EncryptedRealTimeMessage(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101674A20);
  }
  return result;
}

uint64_t sub_1005CC4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005CC558(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1005CC5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLProto_Data(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for CRLAnalyticsCloudKit()
{
  return self;
}

void sub_1005CC644(uint64_t a1)
{
  sub_100A39814((uint64_t)_swiftEmptyArrayStorage);
  id v2 = [objc_allocWithZone((Class)NSNumber) initWithInteger:a1];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100973904((uint64_t)v2, 0xD000000000000018, 0x800000010123DD00, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  uint64_t v4 = self;
  NSString v5 = String._bridgeToObjectiveC()();
  sub_10057BCD8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 sendEventInDomain:v5 lazily:1 eventPayload:isa];
}

id sub_1005CC7DC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLURLLayout();
  [super dealloc];
}

uint64_t type metadata accessor for CRLURLLayout()
{
  return self;
}

uint64_t getEnumTagSinglePayload for CRLFreehandDrawingBucketMinRequiredVersionCollection(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CRLFreehandDrawingBucketMinRequiredVersionCollection(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CRLFreehandDrawingBucketMinRequiredVersionCollection()
{
  return &type metadata for CRLFreehandDrawingBucketMinRequiredVersionCollection;
}

__n128 initializeWithTake for CRLColorModelCMYKData(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for CRLMinRequiredVersionCollection()
{
  return &type metadata for CRLMinRequiredVersionCollection;
}

uint64_t sub_1005CC8BC()
{
  return *(void *)v0;
}

uint64_t sub_1005CC8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (*(uint64_t (**)(void))(a2 + 8))();
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  return v4;
}

uint64_t sub_1005CC950(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1005CC964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = (*(uint64_t (**)(void))(a2 + 8))();
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  *a3 = v6;
  a3[1] = v7;
  a3[2] = v8;
  a3[3] = v9;
  a3[4] = result;
  return result;
}

uint64_t sub_1005CCA44(uint64_t a1)
{
  return sub_1005CC950(a1, (uint64_t)&off_10150E7F8);
}

uint64_t sub_1005CCA50()
{
  return *(void *)(*(void *)v0 + 16);
}

uint64_t sub_1005CCA5C(uint64_t a1)
{
  return sub_1005CC950(a1, (uint64_t)&off_101526DD0);
}

uint64_t sub_1005CCA68(uint64_t a1)
{
  return sub_1005CC950(a1, (uint64_t)&off_10152F170);
}

uint64_t sub_1005CCA74(uint64_t a1)
{
  return sub_1005CC950(a1, (uint64_t)&off_101532140);
}

uint64_t sub_1005CCA80(uint64_t a1)
{
  return sub_1005CC950(a1, (uint64_t)&off_101537448);
}

uint64_t sub_1005CCA8C(uint64_t a1)
{
  return sub_1005CC950(a1, (uint64_t)&off_101538140);
}

uint64_t sub_1005CCA98(void (*a1)(char *, void, void), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a3, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  a1(v8, 0, 0);
  sub_1005CCBB8((uint64_t)v8);
  return 0;
}

uint64_t sub_1005CCBB8(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672E90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005CCC18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v5 = v3;
  sub_1005CCCC4(v5, a2);
  uint64_t v8 = a2 + *(int *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v10 = *(void *)(v8 + 32);
  sub_1005231B4(v8, v9);
  uint64_t v11 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v10 + 32)
                                                                                             + 24))(v14, v9);
  *uint64_t v12 = *v12 + a3;
  return v11(v14, 0);
}

uint64_t sub_1005CCCC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLCanvasLayerAnimation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005CCD28(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101674BC8);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = type metadata accessor for CRLCanvasLayerAnimation();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1005498A4(a1, (uint64_t)v17);
  sub_1005057FC((uint64_t *)&unk_10167BDB0);
  int v12 = swift_dynamicCast();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v12)
  {
    v13(v6, 0, 1, v7);
    sub_1005CFDAC((uint64_t)v6, (uint64_t)v11);
    char v14 = sub_100F7CBE4((uint64_t)v11, v1);
    sub_1005CFE10((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
  }
  else
  {
    v13(v6, 1, 1, v7);
    sub_100522F00((uint64_t)v6, &qword_101674BC8);
    char v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_1005CCEE4(uint64_t a1, double a2)
{
  uint64_t v5 = type metadata accessor for CRLCanvasLayerAnimation();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    sub_100B98B5C(v12, v2 + *(int *)(v5 + 48));

    sub_1005057FC(&qword_101674BC0);
    sub_1005057FC((uint64_t *)&unk_10167BDB0);
    if (swift_dynamicCast())
    {
      if (*((void *)&v14 + 1))
      {
        sub_10053974C(&v13, (uint64_t)v16);
        uint64_t v8 = v17;
        uint64_t v9 = v18;
        sub_10050F848(v16, v17);
        uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, double))(*(void *)(v9 + 8) + 8))(a1, v8, a2);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v16);
        return v10;
      }
    }
    else
    {
      uint64_t v15 = 0;
      long long v13 = 0u;
      long long v14 = 0u;
    }
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
    uint64_t v15 = 0;
  }
  sub_100522F00((uint64_t)&v13, &qword_10167E120);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

float sub_1005CD054(float a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLCanvasLayerAnimation();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    uint64_t v7 = (void *)(v2 + *(int *)(v4 + 48));
    uint64_t v8 = v7[3];
    uint64_t v9 = v7[4];
    sub_10050F848(v7, v8);
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v9 + 56))(v18, v8, v9);
    sub_1009FD6EC(v6, v20);

    sub_10054BD5C((uint64_t)v18);
    uint64_t v10 = v21;
    uint64_t v11 = v22;
    sub_10050F848(v20, v21);
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v11 + 48))(v18, v10, v11);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v20);
  }
  else
  {
    memset(v18, 0, sizeof(v18));
    uint64_t v19 = 0;
  }
  double v12 = CACurrentMediaTime();
  long long v13 = (void *)sub_1005CCEE4((uint64_t)v18, v12);
  sub_100522F00((uint64_t)v18, (uint64_t *)&unk_101684000);
  *(float *)&double v14 = a1;
  [v13 solveForInput:v14];
  float v16 = v15;

  return v16;
}

double sub_1005CD1A4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CRLCanvasLayerAnimation();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t v6 = (void *)(v1 + *(int *)(v3 + 48));
    uint64_t v7 = v6[3];
    uint64_t v8 = v6[4];
    sub_10050F848(v6, v7);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 56))(v12, v7, v8);
    sub_1009FD6EC(v5, v13);

    sub_10054BD5C((uint64_t)v12);
    uint64_t v9 = v14;
    uint64_t v10 = v15;
    sub_10050F848(v13, v14);
    (*(void (**)(uint64_t, uint64_t))(v10 + 48))(v9, v10);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v13);
  }
  else
  {
    *(void *)(a1 + 80) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

void sub_1005CD2A4(double a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for CRLCanvasLayerAnimation();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v8 = (void *)Strong;
  uint64_t v9 = swift_unknownObjectWeakLoadStrong();
  if (!v9)
  {
    long long v53 = 0u;
    long long v54 = 0u;
    long long v55 = 0u;
    long long v56 = 0u;
    long long v57 = 0u;
    uint64_t v58 = 0;
    goto LABEL_16;
  }
  uint64_t v10 = (void *)v9;
  uint64_t v11 = (void *)(v3 + *(int *)(v6 + 48));
  uint64_t v12 = v11[3];
  uint64_t v13 = v11[4];
  sub_10050F848(v11, v12);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v13 + 56))(v48, v12, v13);
  sub_1009FD6EC(v10, v50);

  sub_10054BD5C((uint64_t)v48);
  uint64_t v14 = v51;
  uint64_t v15 = v52;
  sub_10050F848(v50, v51);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v15 + 48))(&v53, v14, v15);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v50);
  if (!v58)
  {
LABEL_16:

    sub_100522F00((uint64_t)&v53, (uint64_t *)&unk_101684000);
    return;
  }
  v59[2] = v55;
  void v59[3] = v56;
  v59[4] = v57;
  uint64_t v60 = v58;
  v59[0] = v53;
  v59[1] = v54;
  uint64_t v17 = v11[3];
  uint64_t v16 = v11[4];
  sub_10050F848(v11, v17);
  double v18 = (*(double (**)(uint64_t))(*(void *)(v16 + 32) + 8))(v17) + a1;
  uint64_t v20 = v11[3];
  uint64_t v19 = v11[4];
  sub_10050F848(v11, v20);
  double v21 = (*(double (**)(uint64_t))(*(void *)(v19 + 32) + 8))(v20);
  uint64_t v23 = v11[3];
  uint64_t v22 = v11[4];
  sub_10050F848(v11, v23);
  float v24 = (a2 - v18) / (v21 + (*(double (**)(uint64_t))(*(void *)(v22 + 32) + 32))(v23) + a1 - v18);
  BOOL v25 = v24 < 0.0 || v24 > 1.0;
  if (v25
    || (float v26 = sub_1005CD054(v24),
        uint64_t v27 = v11[3],
        uint64_t v28 = v11[4],
        sub_10050F848(v11, v27),
        ((*(uint64_t (**)(uint64_t, uint64_t))(v28 + 184))(v27, v28) & 1) == 0))
  {
    sub_1005499B8((uint64_t)v59);
  }
  else
  {
    if ((*(unsigned char *)(v3 + 128) & 1) != 0
      || (*(unsigned char *)(v3 + 168) & 1) != 0
      || (*(unsigned char *)(v3 + 184) & 1) != 0
      || (*(unsigned char *)(v3 + 200) & 1) != 0)
    {
      sub_10081F290((uint64_t)v48);
      sub_1009FCD9C((uint64_t)&v53, v26);
      sub_10054BD5C((uint64_t)v48);
      sub_100522E9C((uint64_t)&v53, (uint64_t)v48, &qword_101672BF0);
      uint64_t v29 = v49;
      if (v49)
      {
        uint64_t v30 = sub_10050F848(v48, v49);
        uint64_t v31 = *(void *)(v29 - 8);
        __n128 v32 = __chkstk_darwin(v30, v30);
        uint64_t v34 = (char *)v48 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v31 + 16))(v34, v32);
        uint64_t v35 = _bridgeAnythingToObjectiveC<A>(_:)();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v34, v29);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v48);
      }
      else
      {
        uint64_t v35 = 0;
      }
      swift_bridgeObjectRetain();
      NSString v36 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v8 setValue:v35 forKeyPath:v36];

      swift_unknownObjectRelease();
      sub_100522F00((uint64_t)&v53, &qword_101672BF0);
    }
    else
    {
      double v37 = *(double *)(v3 + 192);
      double v38 = v26;
      double v39 = *(double *)(v3 + 176);
      double v40 = sub_100065E1C(*(double *)(v3 + 96), *(double *)(v3 + 104), *(double *)(v3 + 112), *(double *)(v3 + 120), *(double *)(v3 + 136), *(double *)(v3 + 144), *(double *)(v3 + 152), *(double *)(v3 + 160), v38);
      CGFloat v42 = v41;
      CGFloat v44 = v43;
      CGFloat v46 = v45;
      double v47 = sub_100065C88(v39, v37, v38);
      sub_100803FE4(*(unsigned char *)(v3 + 88), 0, v40, v42, v44, v46, v47);
    }
    sub_1005499B8((uint64_t)v59);
  }
}

void sub_1005CD754()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_1016730B0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLCanvasLayerAnimation();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    long long v96 = 0u;
    long long v97 = 0u;
    long long v98 = 0u;
    long long v99 = 0u;
    long long v100 = 0u;
    long long v101 = 0u;
    long long v102 = 0u;
    long long v103 = 0u;
    long long v104 = 0u;
    long long v105 = 0u;
    long long v106 = 0u;
    long long v107 = 0u;
    long long v108 = 0u;
    long long v109 = 0u;
    long long v110 = 0u;
    long long v111 = 0u;
    unsigned __int8 v112 = -1;
LABEL_6:
    sub_100522F00((uint64_t)&v96, &qword_101674BB8);
    goto LABEL_7;
  }
  uint64_t v8 = (void *)Strong;
  uint64_t v9 = (void *)(v0 + *(int *)(v6 + 48));
  uint64_t v10 = v9[3];
  uint64_t v11 = v9[4];
  sub_10050F848(v9, v10);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v11 + 56))(v91, v10, v11);
  sub_1009FD6EC(v8, v93);

  sub_10054BD5C((uint64_t)v91);
  uint64_t v12 = v94;
  uint64_t v13 = v95;
  sub_10050F848(v93, v94);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v13 + 40))(&v96, v12, v13);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v93);
  if (v112 == 61)
  {
    double v22 = *((double *)&v97 + 1);
    double v21 = *(double *)&v97;
    long long v23 = v98;
    CGFloat v25 = *((double *)&v99 + 1);
    CGFloat v24 = *(double *)&v99;
    double v26 = sub_100065738(*(CGFloat *)&v96, *((CGFloat *)&v96 + 1), *(CGFloat *)&v97, *((CGFloat *)&v97 + 1));
    double v28 = v27;
    uint64_t v29 = *(void **)(v0 + 24);
    [*(id *)(v1 + 24) visibleUnscaledRect];
    double v32 = sub_100066FC4(v21, v22, v30, v31);
    *(double *)(v1 + 96) = sub_10006402C(v26, v28, v32);
    *(void *)(v1 + 104) = v33;
    *(void *)(v1 + 112) = v34;
    *(void *)(v1 + 120) = v35;
    *(unsigned char *)(v1 + 128) = 0;
    double v36 = sub_100065738(*(CGFloat *)&v23, *((CGFloat *)&v23 + 1), v24, v25);
    double v38 = v37;
    [v29 visibleUnscaledRect];
    goto LABEL_17;
  }
  if (v112 == 255) {
    goto LABEL_6;
  }
  sub_10054BD5C((uint64_t)&v96);
LABEL_7:
  uint64_t v14 = swift_unknownObjectWeakLoadStrong();
  if (!v14)
  {
    long long v96 = 0u;
    long long v97 = 0u;
    long long v98 = 0u;
    long long v99 = 0u;
    long long v100 = 0u;
    long long v101 = 0u;
    long long v102 = 0u;
    long long v103 = 0u;
    long long v104 = 0u;
    long long v105 = 0u;
    long long v106 = 0u;
    long long v107 = 0u;
    long long v108 = 0u;
    long long v109 = 0u;
    long long v110 = 0u;
    long long v111 = 0u;
    unsigned __int8 v112 = -1;
    goto LABEL_13;
  }
  uint64_t v15 = (void *)v14;
  uint64_t v16 = (void *)(v0 + *(int *)(v6 + 48));
  uint64_t v17 = v16[3];
  uint64_t v18 = v16[4];
  sub_10050F848(v16, v17);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v18 + 56))(v91, v17, v18);
  sub_1009FD6EC(v15, v93);

  sub_10054BD5C((uint64_t)v91);
  uint64_t v19 = v94;
  uint64_t v20 = v95;
  sub_10050F848(v93, v94);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v20 + 40))(&v96, v19, v20);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v93);
  if (v112 != 62)
  {
    if (v112 != 255)
    {
      sub_10054BD5C((uint64_t)&v96);
      if (*(unsigned char *)(v0 + 128)) {
        return;
      }
      goto LABEL_18;
    }
LABEL_13:
    sub_100522F00((uint64_t)&v96, &qword_101674BB8);
    if (*(unsigned char *)(v0 + 128)) {
      return;
    }
    goto LABEL_18;
  }
  CGFloat v42 = *((double *)&v96 + 1);
  CGFloat v41 = *(double *)&v96;
  CGFloat v25 = *((double *)&v97 + 1);
  CGFloat v24 = *(double *)&v97;
  sub_1005CFBF0(v0, (uint64_t)&v96);
  [*(id *)(v0 + 24) visibleUnscaledRect];
  double v44 = v43;
  double v46 = v45;
  double v49 = sub_100065738(v47, v48, v43, v45);
  double v51 = v50;
  [*((id *)&v97 + 1) visibleUnscaledRect];
  double v54 = sub_100066FC4(v44, v46, v52, v53);
  double v55 = sub_10006402C(v49, v51, v54);
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  sub_1005CFCF0((uint64_t)&v96);
  *(double *)(v0 + 96) = v55;
  *(void *)(v0 + 104) = v57;
  *(void *)(v0 + 112) = v59;
  *(void *)(v0 + 120) = v61;
  *(unsigned char *)(v0 + 128) = 0;
  double v36 = sub_100065738(v41, v42, v24, v25);
  double v38 = v62;
  [*(id *)(v0 + 24) visibleUnscaledRect];
LABEL_17:
  double v63 = sub_100066FC4(v24, v25, v39, v40);
  *(double *)(v1 + 136) = sub_10006402C(v36, v38, v63);
  *(void *)(v1 + 144) = v64;
  *(void *)(v1 + 152) = v65;
  *(void *)(v1 + 160) = v66;
  *(unsigned char *)(v1 + 168) = 0;
  if (*(unsigned char *)(v1 + 128)) {
    return;
  }
LABEL_18:
  if ((*(unsigned char *)(v1 + 168) & 1) == 0)
  {
    double v68 = *(double *)(v1 + 152);
    double v67 = *(double *)(v1 + 160);
    uint64_t v70 = *(void *)(v1 + 136);
    uint64_t v69 = *(void *)(v1 + 144);
    double v72 = *(double *)(v1 + 112);
    double v71 = *(double *)(v1 + 120);
    sub_1005CFBF0(v1, (uint64_t)&v96);
    unint64_t v73 = (void *)*((void *)&v97 + 1);
    [*((id *)&v97 + 1) unobscuredScrollViewFrame];
    double v76 = sub_10006729C(0, v72, v71, v74, v75) / v72;
    double v78 = v77 / v71;
    if (v78 >= v76) {
      double v79 = v76;
    }
    else {
      double v79 = v78;
    }
    [v73 unobscuredScrollViewFrame];
    double v82 = sub_10006729C(0, v68, v67, v80, v81) / v68;
    double v84 = v83 / v67;
    if (v84 < v82) {
      double v82 = v84;
    }
    double v85 = sub_100407E48(v82, 0.1, 4.0);
    *(double *)(v1 + 176) = v79;
    *(unsigned char *)(v1 + 184) = 0;
    *(double *)(v1 + 192) = v85;
    *(unsigned char *)(v1 + 200) = 0;
    sub_1005CFBF0((uint64_t)&v96, (uint64_t)v91);
    uint64_t v86 = swift_allocObject();
    long long v87 = v91[3];
    *(_OWORD *)(v86 + 48) = v91[2];
    *(_OWORD *)(v86 + 64) = v87;
    *(_OWORD *)(v86 + 80) = v91[4];
    *(void *)(v86 + 96) = v92;
    long long v88 = v91[1];
    *(_OWORD *)(v86 + 16) = v91[0];
    *(_OWORD *)(v86 + 32) = v88;
    *(void *)(v86 + 104) = v70;
    *(void *)(v86 + 112) = v69;
    *(double *)(v86 + 120) = v68;
    *(double *)(v86 + 128) = v67;
    *(double *)(v86 + 136) = v85;
    UUID.init()();
    uint64_t v89 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
    uint64_t v90 = (id (**)())&v5[*(int *)(v89 + 20)];
    *uint64_t v90 = sub_1005CFCB4;
    v90[1] = (id (*)())v86;
    sub_1005CFCF0((uint64_t)&v96);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v5, 0, 1, v89);
    sub_1005CFD44((uint64_t)v5, v1 + *(int *)(v6 + 56));
  }
}

uint64_t sub_1005CDD14(uint64_t a1)
{
  *(_OWORD *)(v1 + 96) = 0u;
  *(_OWORD *)(v1 + 112) = 0u;
  *(unsigned char *)(v1 + 128) = 1;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(unsigned char *)(v1 + 168) = 1;
  *(void *)(v1 + 176) = 0;
  *(unsigned char *)(v1 + 184) = 1;
  *(void *)(v1 + 192) = 0;
  *(unsigned char *)(v1 + 200) = 1;
  uint64_t v2 = v1 + *(int *)(a1 + 56);
  sub_100522F00(v2, &qword_1016730B0);
  uint64_t v3 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(v2, 1, 1, v3);
}

uint64_t sub_1005CDDC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100522E9C(v2 + *(int *)(a1 + 52), a2, &qword_1016730B0);
}

uint64_t sub_1005CDDEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100522E9C(v2 + *(int *)(a1 + 56), a2, &qword_1016730B0);
}

uint64_t sub_1005CDE18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1005CDE88()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_1005CDE94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005498A4(v2 + *(int *)(a1 + 48), a2);
}

char *sub_1005CDEB8(char *a1, char **a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[1];
    uint64_t v9 = a2[2];
    *((void *)a1 + 1) = v8;
    *((void *)a1 + 2) = v9;
    uint64_t v10 = a2[3];
    *((void *)a1 + 3) = v10;
    uint64_t v11 = a2 + 4;
    uint64_t v12 = a2[7];
    uint64_t v13 = v5;
    uint64_t v14 = v8;
    uint64_t v15 = v9;
    uint64_t v16 = v10;
    if (v12)
    {
      uint64_t v17 = a2[8];
      *((void *)a1 + 7) = v12;
      *((void *)a1 + 8) = v17;
      (**((void (***)(uint64_t, char **, char *))v12 - 1))((uint64_t)(a1 + 32), v11, v12);
    }
    else
    {
      long long v18 = *((_OWORD *)v11 + 1);
      *((_OWORD *)a1 + 2) = *(_OWORD *)v11;
      *((_OWORD *)a1 + 3) = v18;
      *((void *)a1 + 8) = v11[4];
    }
    uint64_t v19 = a2[10];
    *((void *)a1 + 9) = a2[9];
    *((void *)a1 + 10) = v19;
    a1[88] = *((unsigned char *)a2 + 88);
    long long v20 = *((_OWORD *)a2 + 7);
    *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
    *((_OWORD *)a1 + 7) = v20;
    a1[128] = *((unsigned char *)a2 + 128);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 17);
    long long v21 = *(_OWORD *)(a2 + 19);
    a1[168] = *((unsigned char *)a2 + 168);
    *((void *)a1 + 22) = a2[22];
    a1[184] = *((unsigned char *)a2 + 184);
    *((void *)a1 + 24) = a2[24];
    a1[200] = *((unsigned char *)a2 + 200);
    uint64_t v22 = a3[10];
    long long v23 = &a1[v22];
    uint64_t v24 = (uint64_t)a2 + v22;
    *(_OWORD *)(a1 + 152) = v21;
    uint64_t v25 = type metadata accessor for UUID();
    double v26 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    v26(v23, v24, v25);
    swift_unknownObjectWeakCopyInit();
    uint64_t v27 = a3[12];
    long long v28 = *(_OWORD *)((char *)a2 + v27 + 24);
    *(_OWORD *)&a1[v27 + 24] = v28;
    (**(void (***)(void))(v28 - 8))();
    uint64_t v29 = a3[13];
    __dst = &a1[v29];
    double v30 = (char *)a2 + v29;
    uint64_t v31 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
    uint64_t v32 = *(void *)(v31 - 8);
    uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
    if (v33(v30, 1, v31))
    {
      uint64_t v34 = sub_1005057FC(&qword_1016730B0);
      memcpy(__dst, v30, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      v26(__dst, (uint64_t)v30, v25);
      uint64_t v35 = *(int *)(v31 + 20);
      double v36 = &__dst[v35];
      double v37 = &v30[v35];
      uint64_t v38 = *((void *)v37 + 1);
      *(void *)double v36 = *(void *)v37;
      *((void *)v36 + 1) = v38;
      double v39 = *(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56);
      swift_retain();
      v39(__dst, 0, 1, v31);
    }
    uint64_t v40 = a3[14];
    CGFloat v41 = &a1[v40];
    CGFloat v42 = (char *)a2 + v40;
    if (v33(v42, 1, v31))
    {
      uint64_t v43 = sub_1005057FC(&qword_1016730B0);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      v26(v41, (uint64_t)v42, v25);
      uint64_t v44 = *(int *)(v31 + 20);
      CGFloat v45 = &v41[v44];
      double v46 = &v42[v44];
      uint64_t v47 = *((void *)v46 + 1);
      *(void *)CGFloat v45 = *(void *)v46;
      *((void *)v45 + 1) = v47;
      CGFloat v48 = *(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56);
      swift_retain();
      v48(v41, 0, 1, v31);
    }
  }
  return a1;
}

uint64_t sub_1005CE2A8(uint64_t a1, int *a2)
{
  if (*(void *)(a1 + 56)) {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 32);
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[10];
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  swift_unknownObjectWeakDestroy();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + a2[12]);
  uint64_t v7 = a1 + a2[13];
  uint64_t v8 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  if (!v9(v7, 1, v8))
  {
    v6(v7, v5);
    swift_release();
  }
  uint64_t v10 = a1 + a2[14];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v10, 1, v8);
  if (!result)
  {
    v6(v10, v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1005CE460(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  uint64_t v8 = *(void **)(a2 + 16);
  uint64_t v9 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  uint64_t v10 = a1 + 32;
  uint64_t v11 = a2 + 32;
  uint64_t v12 = *(void *)(a2 + 56);
  id v13 = v6;
  id v14 = v7;
  id v15 = v8;
  id v16 = v9;
  if (v12)
  {
    uint64_t v17 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v12;
    *(void *)(a1 + 64) = v17;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8))(v10, v11, v12);
  }
  else
  {
    long long v18 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    *(_OWORD *)(v10 + 16) = v18;
    *(void *)(v10 + 32) = *(void *)(v11 + 32);
  }
  uint64_t v19 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v19;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  long long v20 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v20;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  long long v21 = *(_OWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  uint64_t v22 = a3[10];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(_OWORD *)(a1 + 152) = v21;
  uint64_t v25 = type metadata accessor for UUID();
  double v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
  swift_bridgeObjectRetain();
  v26(v23, v24, v25);
  swift_unknownObjectWeakCopyInit();
  uint64_t v27 = a3[12];
  long long v28 = *(_OWORD *)(a2 + v27 + 24);
  *(_OWORD *)(a1 + v27 + 24) = v28;
  (**(void (***)(void))(v28 - 8))();
  uint64_t v29 = a3[13];
  double v30 = (char *)(a1 + v29);
  uint64_t v31 = (char *)(a2 + v29);
  uint64_t v32 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  uint64_t v51 = v25;
  double v52 = (void (*)(char *, char *, uint64_t))v26;
  if (v34(v31, 1, v32))
  {
    uint64_t v35 = sub_1005057FC(&qword_1016730B0);
    memcpy(v30, v31, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    v26((uint64_t)v30, (uint64_t)v31, v25);
    uint64_t v36 = *(int *)(v32 + 20);
    double v37 = &v30[v36];
    uint64_t v38 = &v31[v36];
    uint64_t v39 = *((void *)v38 + 1);
    *(void *)double v37 = *(void *)v38;
    *((void *)v37 + 1) = v39;
    uint64_t v40 = *(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56);
    swift_retain();
    v40(v30, 0, 1, v32);
  }
  uint64_t v41 = a3[14];
  CGFloat v42 = (char *)(a1 + v41);
  uint64_t v43 = (char *)(a2 + v41);
  if (v34(v43, 1, v32))
  {
    uint64_t v44 = sub_1005057FC(&qword_1016730B0);
    memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    v52(v42, v43, v51);
    uint64_t v45 = *(int *)(v32 + 20);
    double v46 = &v42[v45];
    uint64_t v47 = &v43[v45];
    uint64_t v48 = *((void *)v47 + 1);
    *(void *)double v46 = *(void *)v47;
    *((void *)v46 + 1) = v48;
    double v49 = *(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56);
    swift_retain();
    v49(v42, 0, 1, v32);
  }
  return a1;
}

uint64_t sub_1005CE7F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void **)(a2 + 8);
  uint64_t v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  uint64_t v12 = *(void **)(a2 + 16);
  id v13 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v12;
  id v14 = v12;

  id v15 = *(void **)(a2 + 24);
  id v16 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v15;
  id v17 = v15;

  uint64_t v18 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v18)
    {
      sub_10054BB2C((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
      goto LABEL_8;
    }
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 32);
  }
  else if (v18)
  {
    *(void *)(a1 + 56) = v18;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    (**(void (***)(uint64_t, uint64_t))(v18 - 8))(a1 + 32, a2 + 32);
    goto LABEL_8;
  }
  long long v19 = *(_OWORD *)(a2 + 32);
  long long v20 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v19;
  *(_OWORD *)(a1 + 48) = v20;
LABEL_8:
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  long long v21 = *(_OWORD *)(a2 + 96);
  long long v22 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = v22;
  long long v23 = *(_OWORD *)(a2 + 136);
  long long v24 = *(_OWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = v24;
  *(_OWORD *)(a1 + 136) = v23;
  uint64_t v25 = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = v25;
  uint64_t v26 = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = v26;
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = type metadata accessor for UUID();
  uint64_t v66 = *(void *)(v30 - 8);
  uint64_t v67 = v30;
  uint64_t v64 = *(void (**)(uint64_t, uint64_t))(v66 + 24);
  v64(v28, v29);
  swift_unknownObjectWeakCopyAssign();
  sub_10054BB2C((uint64_t *)(a1 + a3[12]), (uint64_t *)(a2 + a3[12]));
  uint64_t v31 = a3[13];
  uint64_t v32 = (char *)(a1 + v31);
  uint64_t v33 = (char *)(a2 + v31);
  uint64_t v34 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v65 = *(void *)(v34 - 8);
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48);
  int v36 = v35(v32, 1, v34);
  int v37 = v35(v33, 1, v34);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v32, v33, v67);
      uint64_t v38 = *(int *)(v34 + 20);
      uint64_t v39 = &v32[v38];
      uint64_t v40 = &v33[v38];
      uint64_t v41 = *((void *)v40 + 1);
      *(void *)uint64_t v39 = *(void *)v40;
      *((void *)v39 + 1) = v41;
      CGFloat v42 = *(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56);
      swift_retain();
      v42(v32, 0, 1, v34);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v37)
  {
    sub_1005CFE10((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
LABEL_13:
    uint64_t v43 = sub_1005057FC(&qword_1016730B0);
    memcpy(v32, v33, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_14;
  }
  ((void (*)(char *, char *, uint64_t))v64)(v32, v33, v67);
  uint64_t v56 = *(int *)(v34 + 20);
  uint64_t v57 = &v32[v56];
  uint64_t v58 = &v33[v56];
  uint64_t v59 = *((void *)v58 + 1);
  *(void *)uint64_t v57 = *(void *)v58;
  *((void *)v57 + 1) = v59;
  swift_retain();
  swift_release();
LABEL_14:
  uint64_t v44 = a3[14];
  uint64_t v45 = (char *)(a1 + v44);
  double v46 = (char *)(a2 + v44);
  int v47 = v35((char *)(a1 + v44), 1, v34);
  int v48 = v35(v46, 1, v34);
  if (!v47)
  {
    if (!v48)
    {
      ((void (*)(char *, char *, uint64_t))v64)(v45, v46, v67);
      uint64_t v60 = *(int *)(v34 + 20);
      uint64_t v61 = &v45[v60];
      double v62 = &v46[v60];
      uint64_t v63 = *((void *)v62 + 1);
      *(void *)uint64_t v61 = *(void *)v62;
      *((void *)v61 + 1) = v63;
      swift_retain();
      swift_release();
      return a1;
    }
    sub_1005CFE10((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_19;
  }
  if (v48)
  {
LABEL_19:
    uint64_t v54 = sub_1005057FC(&qword_1016730B0);
    memcpy(v45, v46, *(void *)(*(void *)(v54 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v45, v46, v67);
  uint64_t v49 = *(int *)(v34 + 20);
  double v50 = &v45[v49];
  uint64_t v51 = &v46[v49];
  uint64_t v52 = *((void *)v51 + 1);
  *(void *)double v50 = *(void *)v51;
  *((void *)v50 + 1) = v52;
  double v53 = *(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56);
  swift_retain();
  v53(v45, 0, 1, v34);
  return a1;
}

uint64_t sub_1005CECB8(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  long long v8 = *(_OWORD *)(a2 + 96);
  long long v9 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  long long v10 = *(_OWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  uint64_t v11 = a3[10];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_OWORD *)(a1 + 152) = v10;
  uint64_t v14 = type metadata accessor for UUID();
  id v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  swift_unknownObjectWeakTakeInit();
  uint64_t v16 = a3[12];
  uint64_t v17 = a3[13];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  long long v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  long long v21 = (char *)(a1 + v17);
  long long v22 = (char *)(a2 + v17);
  uint64_t v23 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v31(v22, 1, v23))
  {
    uint64_t v25 = sub_1005057FC(&qword_1016730B0);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    v15((uint64_t)v21, (uint64_t)v22, v14);
    *(_OWORD *)&v21[*(int *)(v23 + 20)] = *(_OWORD *)&v22[*(int *)(v23 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v26 = a3[14];
  uint64_t v27 = (char *)(a1 + v26);
  uint64_t v28 = (char *)(a2 + v26);
  if (v31(v28, 1, v23))
  {
    uint64_t v29 = sub_1005057FC(&qword_1016730B0);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    v15((uint64_t)v27, (uint64_t)v28, v14);
    *(_OWORD *)&v27[*(int *)(v23 + 20)] = *(_OWORD *)&v28[*(int *)(v23 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v27, 0, 1, v23);
  }
  return a1;
}

uint64_t sub_1005CEF88(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  long long v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  long long v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  long long v9 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  if (*(void *)(a1 + 56)) {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 32);
  }
  long long v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  long long v12 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v12;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  long long v13 = *(_OWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v14 = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = v14;
  uint64_t v15 = a3[10];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(_OWORD *)(a1 + 152) = v13;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v40 = *(void *)(v18 - 8);
  uint64_t v41 = v18;
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v40 + 40);
  v38(v16, v17);
  swift_unknownObjectWeakTakeAssign();
  uint64_t v19 = a3[12];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + v19);
  long long v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  uint64_t v23 = a3[13];
  uint64_t v24 = (char *)(a1 + v23);
  uint64_t v25 = (char *)(a2 + v23);
  uint64_t v26 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v39 = *(void *)(v26 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
  int v28 = v27(v24, 1, v26);
  int v29 = v27(v25, 1, v26);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v24, v25, v41);
      *(_OWORD *)&v24[*(int *)(v26 + 20)] = *(_OWORD *)&v25[*(int *)(v26 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v24, 0, 1, v26);
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  if (v29)
  {
    sub_1005CFE10((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
LABEL_8:
    uint64_t v30 = sub_1005057FC(&qword_1016730B0);
    memcpy(v24, v25, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_9;
  }
  ((void (*)(char *, char *, uint64_t))v38)(v24, v25, v41);
  *(_OWORD *)&v24[*(int *)(v26 + 20)] = *(_OWORD *)&v25[*(int *)(v26 + 20)];
  swift_release();
LABEL_9:
  uint64_t v31 = a3[14];
  uint64_t v32 = (char *)(a1 + v31);
  uint64_t v33 = (char *)(a2 + v31);
  int v34 = v27((char *)(a1 + v31), 1, v26);
  int v35 = v27(v33, 1, v26);
  if (!v34)
  {
    if (!v35)
    {
      ((void (*)(char *, char *, uint64_t))v38)(v32, v33, v41);
      *(_OWORD *)&v32[*(int *)(v26 + 20)] = *(_OWORD *)&v33[*(int *)(v26 + 20)];
      swift_release();
      return a1;
    }
    sub_1005CFE10((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_14;
  }
  if (v35)
  {
LABEL_14:
    uint64_t v36 = sub_1005057FC(&qword_1016730B0);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v32, v33, v41);
  *(_OWORD *)&v32[*(int *)(v26 + 20)] = *(_OWORD *)&v33[*(int *)(v26 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v32, 0, 1, v26);
  return a1;
}

uint64_t sub_1005CF3B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005CF3C8);
}

uint64_t sub_1005CF3C8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 40);
      long long v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005057FC(&qword_1016730B0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 52);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1005CF4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005CF50C);
}

void *sub_1005CF50C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 40);
      long long v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005057FC(&qword_1016730B0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 52);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLCanvasLayerAnimation()
{
  uint64_t result = qword_101674B48;
  if (!qword_101674B48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005CF688()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_10054C810();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_1005CF790())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

Swift::Int sub_1005CF7C0()
{
  return Hasher._finalize()();
}

uint64_t sub_1005CF854()
{
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_1005CF8D4()
{
  return Hasher._finalize()();
}

uint64_t sub_1005CF964(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + *(int *)(a1 + 48));
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_10050F848(v2, v3);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 32) + 8))(v3);
}

uint64_t sub_1005CF9B4(uint64_t a1, double a2)
{
  uint64_t v4 = v2 + *(int *)(a1 + 48);
  uint64_t v5 = *(void *)(v4 + 24);
  uint64_t v6 = *(void *)(v4 + 32);
  sub_1005231B4(v4, v5);
  return (*(uint64_t (**)(uint64_t, double))(*(void *)(v6 + 32) + 16))(v5, a2);
}

uint64_t (*sub_1005CFA14(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  *(void *)(a1 + 8) = v2;
  uint64_t v4 = *(int *)(a2 + 48);
  *(_DWORD *)(a1 + 16) = v4;
  uint64_t v5 = (void *)(v2 + v4);
  uint64_t v7 = *(void *)(v2 + v4 + 24);
  uint64_t v6 = *(void *)(v2 + v4 + 32);
  sub_10050F848(v5, v7);
  *(double *)a1 = (*(double (**)(uint64_t))(*(void *)(v6 + 32) + 8))(v7);
  return sub_1005CFA98;
}

uint64_t sub_1005CFA98(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8) + *(int *)(a1 + 16);
  double v2 = *(double *)a1;
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  sub_1005231B4(v1, v3);
  return (*(uint64_t (**)(uint64_t, double))(*(void *)(v4 + 32) + 16))(v3, v2);
}

uint64_t sub_1005CFB00(uint64_t a1)
{
  double v2 = (void *)(v1 + *(int *)(a1 + 48));
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_10050F848(v2, v3);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 32) + 32))(v3);
}

uint64_t sub_1005CFB50()
{
  return sub_1005CFE70(&qword_101674BA8, (void (*)(uint64_t))type metadata accessor for CRLCanvasLayerAnimation);
}

uint64_t sub_1005CFB98(uint64_t a1)
{
  uint64_t result = sub_1005CFE70(&qword_101674BB0, (void (*)(uint64_t))type metadata accessor for CRLCanvasLayerAnimation);
  *(void *)(a1 + 48) = result;
  return result;
}

uint64_t sub_1005CFBF0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1005CFC4C()
{
  if (*(void *)(v0 + 72)) {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 48);
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 144, 7);
}

id sub_1005CFCB4()
{
  return sub_100803FE4(0, 1, v0[13], v0[14], v0[15], v0[16], v0[17]);
}

uint64_t sub_1005CFCF0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005CFD44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_1016730B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005CFDAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLCanvasLayerAnimation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005CFE10(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1005CFE70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1005CFF78()
{
  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for CRLWPStickyNoteRep();
  [super becameSelected];
  id v1 = [v0 layout];
  [v1 setSupportsInstructionalText:1];

  [v0 updateChildrenFromLayout];
  id v2 = [v0 interactiveCanvasController];
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = [v0 info];
    unsigned int v5 = [v3 currentSelectionPathContainsInfo:v4];

    if (!v5)
    {
LABEL_13:

      return;
    }
    [v3 invalidateContentLayersForRep:v0];
    id v6 = [v0 childReps];
    sub_10050BF48(0, (unint64_t *)&qword_101678790);
    unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      if (v8) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v8)
      {
LABEL_5:
        if (v8 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v8; ++i)
        {
          if ((v7 & 0xC000000000000001) != 0) {
            id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v10 = *(id *)(v7 + 8 * i + 32);
          }
          uint64_t v11 = v10;
          [v3 invalidateContentLayersForRep:v10];
        }
      }
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
}

void sub_1005D01B8()
{
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for CRLWPStickyNoteRep();
  [super becameNotSelected];
  id v1 = [v0 layout];
  [v1 setSupportsInstructionalText:0];

  [v0 updateChildrenFromLayout];
  id v2 = [v0 interactiveCanvasController];
  if (v2)
  {
    uint64_t v3 = v2;
    [v2 invalidateContentLayersForRep:v0];
    id v4 = [v0 childReps];
    sub_10050BF48(0, (unint64_t *)&qword_101678790);
    unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      if (v6) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v6)
      {
LABEL_4:
        if (v6 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v6; ++i)
        {
          if ((v5 & 0xC000000000000001) != 0) {
            id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v8 = *(id *)(v5 + 8 * i + 32);
          }
          uint64_t v9 = v8;
          [v3 invalidateContentLayersForRep:v8];
        }
      }
    }
    swift_bridgeObjectRelease_n();
  }
}

id sub_1005D04FC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPStickyNoteRep();
  [super dealloc];
}

uint64_t type metadata accessor for CRLWPStickyNoteRep()
{
  return self;
}

uint64_t sub_1005D0554(void *a1, void *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1] || a1[2] != a2[2]) {
    return 0;
  }
  sub_10050BF48(0, (unint64_t *)&qword_101672E50);
  if ((static NSObject.== infix(_:_:)() & 1) == 0) {
    return 0;
  }

  return static Selector.== infix(_:_:)();
}

Swift::Int sub_1005D05FC()
{
  Swift::UInt v1 = *v0;
  Swift::UInt v2 = v0[1];
  Swift::UInt v3 = v0[2];
  id v4 = (void *)v0[3];
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  id v5 = v4;
  NSObject.hash(into:)();

  Selector.hash(into:)();
  return Hasher._finalize()();
}

uint64_t sub_1005D0694()
{
  Swift::UInt v1 = v0[1];
  Swift::UInt v2 = v0[2];
  Swift::UInt v3 = (void *)v0[3];
  Hasher._combine(_:)(*v0);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  id v4 = v3;
  NSObject.hash(into:)();

  return Selector.hash(into:)();
}

Swift::Int sub_1005D0714()
{
  Swift::UInt v1 = *v0;
  Swift::UInt v2 = v0[1];
  Swift::UInt v3 = v0[2];
  id v4 = (void *)v0[3];
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  id v5 = v4;
  NSObject.hash(into:)();

  Selector.hash(into:)();
  return Hasher._finalize()();
}

void *sub_1005D07A8()
{
  uint64_t result = (void *)sub_100A39B98((uint64_t)_swiftEmptyArrayStorage);
  off_101674BD0 = result;
  return result;
}

void sub_1005D07D0()
{
  off_101674BD8 = &_swiftEmptyArrayStorage;
}

uint64_t type metadata accessor for CRLWPStickyNoteShadowCache()
{
  return self;
}

void sub_1005D0808(double **a1, uint64_t *a2)
{
  Swift::UInt v2 = *a1;
  uint64_t v3 = *((void *)*a1 + 2);
  if (!v3) {
    return;
  }
  uint64_t v5 = *a2;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  unint64_t v7 = 0;
  uint64_t v40 = v5;
  while (1)
  {
    id v8 = &v2[v6];
    if (*(void *)&v2[v6 + 4] != v5 || *((void *)v8 + 5) != a2[1] || *((void *)v8 + 6) != a2[2]) {
      goto LABEL_4;
    }
    uint64_t v38 = *((void *)v8 + 5);
    uint64_t v39 = *((void *)v8 + 6);
    uint64_t v9 = (void *)*((void *)v8 + 7);
    sub_10050BF48(0, (unint64_t *)&qword_101672E50);
    id v10 = v9;
    if (static NSObject.== infix(_:_:)()) {
      break;
    }

    uint64_t v5 = v40;
LABEL_4:
    ++v7;
    v6 += 5;
    if (v3 == v7)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  char v11 = static Selector.== infix(_:_:)();

  uint64_t v5 = v40;
  if ((v11 & 1) == 0) {
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  unint64_t v12 = v7 + 1;
  if (__OFADD__(v7, 1)) {
    goto LABEL_44;
  }
  unint64_t v13 = *((void *)v2 + 2);
  if (v12 != v13)
  {
    uint64_t v14 = v40;
    uint64_t v16 = v38;
    uint64_t v15 = v39;
    do
    {
      if (v12 >= v13)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        return;
      }
      uint64_t v18 = &v2[v6];
      if (*(void *)&v2[v6 + 9] == v14 && *(void *)&v2[v6 + 10] == v16 && *(void *)&v2[v6 + 11] == v15)
      {
        id v21 = *((id *)v18 + 12);
        if (static NSObject.== infix(_:_:)())
        {
          char v22 = static Selector.== infix(_:_:)();

          uint64_t v14 = v40;
          uint64_t v16 = v38;
          uint64_t v15 = v39;
          if (v22) {
            goto LABEL_15;
          }
        }
        else
        {

          uint64_t v14 = v40;
          uint64_t v16 = v38;
          uint64_t v15 = v39;
        }
      }
      if (v12 != v7)
      {
        if ((v7 & 0x8000000000000000) != 0) {
          goto LABEL_40;
        }
        unint64_t v23 = *((void *)v2 + 2);
        if (v7 >= v23) {
          goto LABEL_41;
        }
        if (v12 >= v23) {
          goto LABEL_42;
        }
        uint64_t v24 = (uint64_t)&v2[5 * v7 + 4];
        uint64_t v25 = *(void *)(v24 + 16);
        long long v34 = *(_OWORD *)v24;
        long long v35 = *(_OWORD *)(v18 + 9);
        uint64_t v26 = *((void *)v18 + 11);
        long long v36 = *((_OWORD *)v18 + 6);
        long long v33 = *(_OWORD *)(v24 + 24);
        id v27 = (id)v33;
        id v28 = (id)v36;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          Swift::UInt v2 = sub_100F686B0((uint64_t)v2);
        }
        int v29 = &v2[5 * v7];
        uint64_t v30 = (void *)*((void *)v29 + 7);
        *((_OWORD *)v29 + 2) = v35;
        *((void *)v29 + 6) = v26;
        *(_OWORD *)(v29 + 7) = v36;

        if (v12 >= *((void *)v2 + 2)) {
          goto LABEL_43;
        }
        uint64_t v31 = &v2[v6];
        double v32 = v2[v6 + 12];
        *(_OWORD *)(v31 + 9) = v34;
        *((void *)v31 + 11) = v25;
        *((_OWORD *)v31 + 6) = v33;

        *a1 = v2;
        uint64_t v14 = v40;
        uint64_t v16 = v38;
        uint64_t v15 = v39;
      }
      if (__OFADD__(v7++, 1)) {
        goto LABEL_39;
      }
LABEL_15:
      ++v12;
      unint64_t v13 = *((void *)v2 + 2);
      v6 += 5;
    }
    while (v12 != v13);
  }
}

id sub_1005D0AF4(id a1, void *a2, uint64_t a3, char a4, void *a5, uint64_t a6, uint64_t a7, char a8, double a9, double a10)
{
  if (![self isMainThread] || (a4 & 1) != 0)
  {
    v65.receiver = a5;
    v65.super_class = (Class)type metadata accessor for CRLWPStickyNoteRep();
    return [super newShadowImageWithSize:a6 shadow:a7 drawSelector:a8 & 1 unflipped:a9];
  }
  [a1 size];
  double v21 = v20;
  if ((~*(void *)&v20 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_40;
  }
  if (v20 <= -9.22337204e18)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v20 >= 9.22337204e18)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  [a1 size];
  double v23 = v22;
  if ((~*(void *)&v22 & 0x7FF0000000000000) == 0)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (v22 <= -9.22337204e18)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v22 >= 9.22337204e18)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  [a1 transform];
  double v24 = sub_10007F788(&v62);
  if ((~*(void *)&v24 & 0x7FF0000000000000) == 0)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v24 < 9.22337204e18)
  {
    *(void *)&long long v66 = (uint64_t)v21;
    *((void *)&v66 + 1) = (uint64_t)v23;
    *(void *)&long long v67 = (uint64_t)v24;
    *((void *)&v67 + 1) = a2;
    uint64_t v68 = a3;
    uint64_t v25 = qword_10166EBE0;
    a1 = a2;
    if (v25 == -1) {
      goto LABEL_13;
    }
    goto LABEL_48;
  }
LABEL_47:
  __break(1u);
LABEL_48:
  swift_once();
LABEL_13:
  swift_beginAccess();
  uint64_t v26 = off_101674BD0;
  if (*((void *)off_101674BD0 + 2))
  {
    id v27 = a1;
    unint64_t v28 = sub_100956B4C((uint64_t)&v66);
    if (v29)
    {
      uint64_t v30 = *(void **)(v26[7] + 8 * v28);
      swift_endAccess();
      id v31 = v30;

      uint64_t v32 = qword_10166EBE8;
      id v33 = v31;
      if (v32 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v34 = v27;
      long long v35 = 0;
      sub_1005D0808((double **)&off_101674BD8, (uint64_t *)&v66);
      id v37 = v36;

      int64_t v38 = *((void *)off_101674BD8 + 2);
      if (v38 < (uint64_t)v37)
      {
        __break(1u);
      }
      else
      {
        sub_100F4D2A4((uint64_t)v37, v38);
        long long v35 = (double *)off_101674BD8;
        id v37 = v34;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        off_101674BD8 = v35;
        if (isUniquelyReferenced_nonNull_native)
        {
LABEL_19:
          unint64_t v41 = *((void *)v35 + 2);
          unint64_t v40 = *((void *)v35 + 3);
          if (v41 >= v40 >> 1)
          {
            long long v35 = sub_100F63730((double *)(v40 > 1), v41 + 1, 1, v35);
            off_101674BD8 = v35;
          }
          *((void *)v35 + 2) = v41 + 1;
          CGFloat v42 = &v35[5 * v41];
          long long v43 = v66;
          long long v44 = v67;
          *((void *)v42 + 8) = v68;
          *((_OWORD *)v42 + 2) = v43;
          *((_OWORD *)v42 + 3) = v44;
          swift_endAccess();

LABEL_37:
          return v33;
        }
      }
      long long v35 = sub_100F63730(0, *((void *)v35 + 2) + 1, 1, v35);
      off_101674BD8 = v35;
      goto LABEL_19;
    }
  }
  swift_endAccess();
  if (*((void *)off_101674BD0 + 2) < 0xAuLL) {
    goto LABEL_30;
  }
  if (qword_10166EBE8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (!*((void *)off_101674BD8 + 2))
  {
LABEL_30:
    v61.receiver = a5;
    v61.super_class = (Class)type metadata accessor for CRLWPStickyNoteRep();
    id v50 = [super newShadowImageWithSize:a6 shadow:a7 drawSelector:a8 & 1 unflipped:a9];
    swift_beginAccess();
    id v51 = a1;
    id v33 = v50;
    char v52 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v60 = off_101674BD0;
    off_101674BD0 = (_UNKNOWN *)0x8000000000000000;
    sub_100974100((uint64_t)v33, (uint64_t)&v66, v52);
    off_101674BD0 = v60;

    swift_bridgeObjectRelease();
    swift_endAccess();
    if (qword_10166EBE8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    double v53 = (double *)off_101674BD8;
    id v37 = v51;
    char v54 = swift_isUniquelyReferenced_nonNull_native();
    off_101674BD8 = v53;
    if ((v54 & 1) == 0)
    {
      double v53 = sub_100F63730(0, *((void *)v53 + 2) + 1, 1, v53);
      off_101674BD8 = v53;
    }
    unint64_t v56 = *((void *)v53 + 2);
    unint64_t v55 = *((void *)v53 + 3);
    if (v56 >= v55 >> 1)
    {
      double v53 = sub_100F63730((double *)(v55 > 1), v56 + 1, 1, v53);
      off_101674BD8 = v53;
    }
    *((void *)v53 + 2) = v56 + 1;
    uint64_t v57 = &v53[5 * v56];
    long long v58 = v66;
    long long v59 = v67;
    *((void *)v57 + 8) = v68;
    *((_OWORD *)v57 + 2) = v58;
    *((_OWORD *)v57 + 3) = v59;
    swift_endAccess();
    goto LABEL_37;
  }
  long long v45 = *((_OWORD *)off_101674BD8 + 3);
  long long v62 = *((_OWORD *)off_101674BD8 + 2);
  long long v63 = v45;
  *(void *)&long long v64 = *((void *)off_101674BD8 + 8);
  swift_beginAccess();
  id v46 = *((id *)&v63 + 1);
  int v47 = (void *)sub_10095BBB0((uint64_t)&v62);
  swift_endAccess();

  id result = (id)swift_beginAccess();
  if (*((void *)off_101674BD8 + 2))
  {
    id v49 = *((id *)off_101674BD8 + 7);
    sub_100F4D2A4(0, 1);
    swift_endAccess();
    sub_1005D116C((uint64_t)&v62);

    goto LABEL_30;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005D116C(uint64_t a1)
{
  return a1;
}

void destroy for CRLWPStickyNoteShadowCache.CacheKey(uint64_t a1)
{
}

uint64_t initializeWithCopy for CRLWPStickyNoteShadowCache.CacheKey(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  id v4 = v3;
  return a1;
}

void *assignWithCopy for CRLWPStickyNoteShadowCache.CacheKey(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  id v4 = (void *)a2[3];
  uint64_t v5 = (void *)a1[3];
  a1[3] = v4;
  id v6 = v4;

  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for CRLWPStickyNoteShadowCache.CacheKey(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLWPStickyNoteShadowCache.CacheKey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLWPStickyNoteShadowCache.CacheKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLWPStickyNoteShadowCache.CacheKey()
{
  return &type metadata for CRLWPStickyNoteShadowCache.CacheKey;
}

unint64_t sub_1005D1330()
{
  unint64_t result = qword_101674CA0;
  if (!qword_101674CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101674CA0);
  }
  return result;
}

uint64_t sub_1005D1384()
{
  Swift::UInt v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  if (sub_1005D14AC()) {
    ObjCClassFromMetadatdouble a = swift_getObjCClassFromMetadata();
  }
  else {
    ObjCClassFromMetadatdouble a = 0;
  }
  id v3 = [v1 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
  self;
  id v4 = (void *)swift_dynamicCastObjCClass();
  if (v4)
  {
    id v5 = [v4 allShapeItems];
    swift_unknownObjectRelease();
    type metadata accessor for CRLShapeItem();
    uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return v6;
}

id sub_1005D1454()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMiniFormatterShapeDataProvider();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLMiniFormatterShapeDataProvider()
{
  return self;
}

unint64_t sub_1005D14AC()
{
  unint64_t result = qword_101686A40;
  if (!qword_101686A40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101686A40);
  }
  return result;
}

void sub_1005D14EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, unint64_t))
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v9 = Strong;
  id v10 = [Strong textFields];

  if (!v10) {
    return;
  }
  sub_1005D221C();
  unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v11 >> 62))
  {
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v19) {
    goto LABEL_16;
  }
LABEL_5:
  if ((v11 & 0xC000000000000001) != 0)
  {
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v12 = *(id *)(v11 + 32);
  }
  unint64_t v13 = v12;
  swift_bridgeObjectRelease();
  id v14 = [v13 text];

  if (v14)
  {
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v17 = v16;

    if ((v15 != a3 || v17 != a4) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v18 = HIBYTE(v17) & 0xF;
      if ((v17 & 0x2000000000000000) == 0) {
        uint64_t v18 = v15 & 0xFFFFFFFFFFFFLL;
      }
      if (v18) {
        a5(v15, v17);
      }
    }
    goto LABEL_16;
  }
}

id sub_1005D16B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  [a1 setText:v6];

  [a1 setReturnKeyType:9];
  [a1 setClearButtonMode:1];
  [a1 setAutocapitalizationType:2];
  [a1 setDelegate:a4];

  return [a1 becomeFirstResponder];
}

BOOL sub_1005D1774(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  id v9 = [a1 text];
  if (v9)
  {
    id v10 = v9;
    NSString v11 = String._bridgeToObjectiveC()();
    id v12 = [v10 stringByReplacingCharactersInRange:a2 withString:a3];

    a4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    a5 = v13;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v15 = Strong;
    uint64_t v16 = HIBYTE(a5) & 0xF;
    if ((a5 & 0x2000000000000000) == 0) {
      uint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
    }
    [Strong setEnabled:v16 != 0];
  }
  uint64_t v17 = String.count.getter();
  swift_bridgeObjectRelease();
  return v17 < 256;
}

id sub_1005D19EC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLBoardRenameAlertTextFieldDelegate();
  [super dealloc];
}

uint64_t type metadata accessor for CRLBoardRenameAlertTextFieldDelegate()
{
  return self;
}

id sub_1005D1A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5 = self;
  id v6 = [v5 mainBundle];
  NSString v7 = String._bridgeToObjectiveC()();
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v6 localizedStringForKey:v7 value:v8 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v10 = [v5 mainBundle];
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v10 localizedStringForKey:v11 value:v12 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v16 = [self alertControllerWithTitle:v14 message:v15 preferredStyle:1];

  id v17 = [v5 mainBundle];
  NSString v18 = String._bridgeToObjectiveC()();
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [v17 localizedStringForKey:v18 value:v19 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  double v22 = (void *)swift_allocObject();
  v22[2] = v21;
  void v22[3] = a1;
  v22[4] = a2;
  v22[5] = a3;
  v22[6] = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  int v47 = sub_1005D2140;
  int v48 = v22;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v44 = *(void *)"";
  long long v45 = sub_10051CE64;
  id v46 = &unk_10150A010;
  double v24 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v25 = self;
  id v26 = [v25 actionWithTitle:v23 style:0 handler:v24];
  _Block_release(v24);
  swift_release();

  id v27 = [objc_allocWithZone((Class)type metadata accessor for CRLBoardRenameAlertTextFieldDelegate()) init];
  swift_unknownObjectWeakAssign();
  objc_setAssociatedObject(v16, "com.apple.freeform.renameAlertTextFieldDelegate", v27, (void *)1);
  unint64_t v28 = (void *)swift_allocObject();
  void v28[2] = a1;
  v28[3] = a2;
  v28[4] = v27;
  int v47 = sub_1005D21A8;
  int v48 = v28;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v44 = *(void *)"";
  long long v45 = sub_10051CE64;
  id v46 = &unk_10150A060;
  char v29 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v30 = v27;
  swift_release();
  [v16 addTextFieldWithConfigurationHandler:v29];
  _Block_release(v29);
  [v16 addAction:v26];
  [v16 setPreferredAction:v26];
  id v31 = [v5 mainBundle];
  NSString v32 = String._bridgeToObjectiveC()();
  NSString v33 = String._bridgeToObjectiveC()();
  id v34 = [v31 localizedStringForKey:v32 value:v33 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = a3;
  *(void *)(v35 + 24) = a4;
  swift_retain();
  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  int v47 = sub_1005D21EC;
  int v48 = (void *)v35;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v44 = *(void *)"";
  long long v45 = sub_10051CE64;
  id v46 = &unk_10150A0B0;
  id v37 = _Block_copy(&aBlock);
  swift_release();
  id v38 = [v25 actionWithTitle:v36 style:1 handler:v37];
  _Block_release(v37);

  [v16 addAction:v38];
  return v16;
}

uint64_t sub_1005D20C0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005D20F8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_1005D2140(uint64_t a1)
{
  sub_1005D14EC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(uint64_t, unint64_t))(v1 + 40));
}

uint64_t sub_1005D2150(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005D2160()
{
  return swift_release();
}

uint64_t sub_1005D2168()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

id sub_1005D21A8(void *a1)
{
  return sub_1005D16B4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1005D21B4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005D21EC()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(0, 0);
}

unint64_t sub_1005D221C()
{
  unint64_t result = qword_101674D60;
  if (!qword_101674D60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101674D60);
  }
  return result;
}

void sub_1005D226C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  __chkstk_darwin(v5, v6);
  __chkstk_darwin(v7, v8);
  __chkstk_darwin(v9, v10);
  long long v43 = (void (**)(uint64_t, uint64_t))((char *)v40 - v15);
  id v16 = *(void **)(*(void *)(v3 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_shapeItem)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v16) {
    goto LABEL_29;
  }
  uint64_t v17 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_shapeItem);
  NSString v18 = (uint64_t *)(v3 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_pasteData);
  id v20 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_pasteData + 16);
  NSString v19 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_pasteData + 24);
  int v21 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_pasteData + 32);
  int v48 = a3;
  uint64_t v46 = v12;
  uint64_t v47 = v11;
  id v44 = v14;
  long long v45 = v13;
  if (v21)
  {
    if (v21 == 1)
    {
      uint64_t v22 = sub_10050BF48(0, (unint64_t *)&unk_1016838A0);
      NSString v23 = &off_10150A0F8;
    }
    else
    {
      uint64_t v22 = type metadata accessor for CRLWPStorage();
      NSString v23 = &off_10150A1A8;
    }
    double v53 = (void *)v22;
    char v54 = v23;
    v52[0] = v20;
  }
  else
  {
    double v53 = &type metadata for String;
    char v54 = &off_10150A0D8;
    v52[0] = v20;
    v52[1] = v19;
  }
  int v24 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_isSmartPaste);
  uint64_t v25 = v16;
  sub_1005D2CFC(v20, v19, v21);
  if (v24 == 1) {
    sub_1005D38F0(v52, v25);
  }
  uint64_t v26 = v55;
  sub_10103405C(v17, (uint64_t)&off_101518040);
  if (v26) {
    goto LABEL_26;
  }
  if (!v21)
  {
    sub_1005498A4((uint64_t)v52, (uint64_t)aBlock);
    sub_1005057FC(&qword_101674DB8);
    if (swift_dynamicCast())
    {
      sub_100901520(*v18, v18[1], (uint64_t)v49, v50, 1);
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Commands/CRLWPPasteTextCommand.swift", 96, 2, 118, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v39 = 118;
    goto LABEL_24;
  }
  if (v21 == 1)
  {
    sub_1005498A4((uint64_t)v52, (uint64_t)aBlock);
    sub_1005057FC(&qword_101674DB8);
    sub_10050BF48(0, (unint64_t *)&qword_10168D3B0);
    if (swift_dynamicCast())
    {
      id v27 = v49;
      uint64_t v55 = *v18;
      uint64_t v42 = v18[1];
      sub_1005D3BF8();
      id v28 = v27;
      id v29 = v44;
      CRAttributedString.init(_:)();
      id v30 = v45;
      unint64_t v41 = *(void (**)(uint64_t, id, uint64_t))(v46 + 32);
      v41((uint64_t)v45, v29, v47);
      id v31 = [v28 length];
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v30;
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = sub_1005D3C5C;
      *(void *)(v33 + 24) = v32;
      v40[1] = v32;
      aBlock[4] = sub_1005D3C74;
      aBlock[5] = v33;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100F9A6C0;
      id aBlock[3] = &unk_10150A228;
      id v34 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      [v28 enumerateAttributesInRange:0 options:v31 usingBlock:v34];
      id v44 = v28;

      _Block_release(v34);
      LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v31 & 1) == 0)
      {
        uint64_t v35 = v43;
        uint64_t v36 = v47;
        v41((uint64_t)v43, v45, v47);
        swift_release();
        sub_100902DAC(v55, v42, v35, 0);

        (*(void (**)(void, uint64_t))(v46 + 8))(v35, v36);
LABEL_25:
        sub_101023724(v17, (uint64_t)&off_101518040, v48);
LABEL_26:
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v52);

        return;
      }
      __break(1u);
      goto LABEL_28;
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Commands/CRLWPPasteTextCommand.swift", 96, 2, 122, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v39 = 122;
LABEL_24:
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Commands/CRLWPPasteTextCommand.swift", 96, 2, v39);
    goto LABEL_25;
  }
  sub_1005498A4((uint64_t)v52, (uint64_t)aBlock);
  sub_1005057FC(&qword_101674DB8);
  type metadata accessor for CRLWPStorage();
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Commands/CRLWPPasteTextCommand.swift", 96, 2, 126, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v39 = 126;
    goto LABEL_24;
  }
  uint64_t v37 = v18[1];
  if (!__OFSUB__(v37, *v18))
  {
    id v38 = v49;
    sub_100903AC0(*v18, v37 - *v18, (uint64_t)v49);

    goto LABEL_25;
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
}

uint64_t sub_1005D29DC()
{
  sub_1005D2D34(*(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_pasteData + 16), *(id *)(v0 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_pasteData + 24), *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_pasteData + 32));

  return swift_bridgeObjectRelease();
}

id sub_1005D2A38()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPPasteTextCommand();
  return [super dealloc];
}

uint64_t sub_1005D2AD4()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_actionString);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1005D2B14()
{
  return String.count.getter();
}

id sub_1005D2B1C(uint64_t a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v2 characterAtIndex:a1];

  return v3;
}

uint64_t sub_1005D2B64(uint64_t result, uint64_t a2)
{
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    unint64_t result = Range<>.init(_:in:)();
    if ((v2 & 1) == 0)
    {
      sub_1005D3D58();
      return String.replaceSubrange<A>(_:with:)();
    }
  }
  return result;
}

id sub_1005D2BE4()
{
  return [*v0 length];
}

id sub_1005D2BF4(uint64_t a1)
{
  id result = [*v1 string];
  if (result)
  {
    id v4 = result;
    id v5 = [result characterAtIndex:a1];

    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1005D2C54(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    id v5 = *v2;
    id v6 = String._bridgeToObjectiveC()();
    [v5 replaceCharactersInRange:a1 withString:v3];
  }
}

uint64_t type metadata accessor for CRLWPPasteTextCommand()
{
  return self;
}

id sub_1005D2CFC(id result, id a2, char a3)
{
  if (a3 == 2 || a3 == 1) {
    return result;
  }
  if (!a3) {
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

void destroy for CRLWPPasteTextCommand.CRLWPPasteText(uint64_t a1)
{
}

void sub_1005D2D34(void *a1, id a2, char a3)
{
  if (a3 == 2 || a3 == 1)
  {
  }
  else if (!a3)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t _s8Freeform21CRLWPPasteTextCommandC14CRLWPPasteTextOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  id v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1005D2CFC(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CRLWPPasteTextCommand.CRLWPPasteText(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  id v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1005D2CFC(*(id *)a2, v4, v5);
  id v6 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1005D2D34(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for CRLWPPasteTextCommand.CRLWPPasteText(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CRLWPPasteTextCommand.CRLWPPasteText(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  id v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1005D2D34(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLWPPasteTextCommand.CRLWPPasteText(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLWPPasteTextCommand.CRLWPPasteText(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1005D2EE8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1005D2EF0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CRLWPPasteTextCommand.CRLWPPasteText()
{
  return &type metadata for CRLWPPasteTextCommand.CRLWPPasteText;
}

uint64_t sub_1005D2F08(void *a1, char *a2)
{
  long long v101 = a2;
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v99 = v4;
  uint64_t v100 = v5;
  __chkstk_darwin(v4, v6);
  long long v98 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v97, v8);
  long long v96 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v95 = (uint64_t)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CharacterSet();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005057FC((uint64_t *)&unk_101687BB0);
  __chkstk_darwin(v18 - 8, v19);
  int v21 = (char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v85 - v24;
  uint64_t v27 = a1[3];
  uint64_t v26 = a1[4];
  sub_10050F848(a1, v27);
  uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v27, v26);
  if (v28 < 1) {
    return 0;
  }
  unint64_t v93 = v28;
  uint64_t v89 = v14;
  uint64_t v92 = v28 - 1;
  uint64_t v30 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_pasteData);
  uint64_t v29 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_pasteData + 8);
  if (v30 < 1
    || (uint64_t v28 = (uint64_t)objc_msgSend(v101, "characterAtIndex:", objc_msgSend(v101, "previousCharacterIndex:", *(void *)(v2 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_pasteData))), (v28 & 0xF800) == 0xD800))
  {
    int v90 = 0;
  }
  else
  {
    id v31 = [self crlwp_preSmartSet];
    if (!v31)
    {
LABEL_69:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v89 + 56))(v25, 1, 1, v13);
      goto LABEL_70;
    }
    uint64_t v32 = v31;
    static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v33 = v89;
    (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v25, v17, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v25, 0, 1, v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v25, 1, v13) == 1)
    {
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    int v90 = CharacterSet.contains(_:)();
    uint64_t v28 = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v25, v13);
  }
  uint64_t v91 = v30;
  uint64_t v94 = v29;
  uint64_t v88 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v34 = *(void *)&v101[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v34)
  {
    __break(1u);
    goto LABEL_69;
  }
  uint64_t v35 = (uint64_t)v96;
  (*(void (**)(uint64_t))(*(void *)v34 + 760))(v28);
  uint64_t v36 = v95;
  sub_1005D3C94(v35 + *(int *)(v97 + 20), v95);
  sub_1005D3CF8(v35, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v37 = v99;
  uint64_t v38 = v100;
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v100 + 16);
  unint64_t v40 = v98;
  uint64_t v87 = v100 + 16;
  uint64_t v86 = v39;
  v39(v98, v36, v99);
  sub_1005D3CF8(v36, type metadata accessor for CRLWPStorageCRDTData);
  unint64_t v41 = (void *)CRAttributedString.attributedString.getter();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v38 + 8);
  uint64_t v100 = v38 + 8;
  v42(v40, v37);
  id v43 = [v41 length];

  if (v94 < (uint64_t)v43)
  {
    unsigned int v44 = [v101 characterAtIndex:];
    if ((v44 & 0xF800) != 0xD800)
    {
      unsigned int v67 = v44;
      id v68 = [self crlwp_postSmartSet];
      unint64_t v47 = v93;
      if (v68)
      {
        uint64_t v69 = v68;
        static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v70 = v89;
        (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v21, v17, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v21, 0, 1, v13);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v70 + 48))(v21, 1, v13);
        if (result != 1)
        {
          long long v45 = v42;
          char v71 = CharacterSet.contains(_:)();
          (*(void (**)(char *, uint64_t))(v70 + 8))(v21, v13);
          BOOL v46 = (v71 & 1) != 0 && (v67 & 0xFFFFFFFB) != 8216;
          goto LABEL_12;
        }
LABEL_72:
        __break(1u);
        goto LABEL_73;
      }
LABEL_71:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v89 + 56))(v21, 1, 1, v13);
      goto LABEL_72;
    }
  }
  long long v45 = v42;
  BOOL v46 = 0;
  unint64_t v47 = v93;
LABEL_12:
  uint64_t v48 = a1[3];
  uint64_t v49 = a1[4];
  sub_10050F848(a1, v48);
  unsigned __int16 v50 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v49 + 16))(0, v48, v49);
  int v51 = sub_1001CA478(v50);
  sub_1005498A4((uint64_t)a1, (uint64_t)v105);
  if (v47 < 2)
  {
    unsigned __int8 v55 = 0;
  }
  else
  {
    uint64_t v52 = v106;
    uint64_t v53 = v107;
    sub_10050F848(v105, v106);
    unsigned __int16 v54 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(1, v52, v53);
    unsigned __int8 v55 = sub_1001CA3BC(v54);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v105);
  sub_1005498A4((uint64_t)a1, (uint64_t)v102);
  unint64_t v56 = v47 - 2;
  if (v47 < 2)
  {
    unsigned int v60 = 0;
  }
  else
  {
    uint64_t v57 = v103;
    uint64_t v58 = v104;
    sub_10050F848(v102, v103);
    unsigned __int16 v59 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v58 + 16))(v56, v57, v58);
    unsigned int v60 = sub_1001CA3BC(v59);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v102);
  uint64_t v61 = a1[3];
  uint64_t v62 = a1[4];
  sub_10050F848(a1, v61);
  unsigned __int16 v63 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 16))(v92, v61, v62);
  uint64_t result = sub_1001CA478(v63);
  if (v91 < 1 || ((v51 | v90) & 1) != 0)
  {
    if (v50 != 32 || (v90 & 1) == 0 || (v55 & 1) != 0)
    {
      if (result)
      {
        int v66 = !v46;
        if (v63 != 32) {
          int v66 = 1;
        }
        if ((v66 | v60)) {
          return 0;
        }
        return 8;
      }
      if (!v46)
      {
        uint64_t v74 = 0;
        goto LABEL_52;
      }
      if (v63 == 32) {
        char v73 = v60;
      }
      else {
        char v73 = 1;
      }
      if ((v73 & 1) == 0) {
        return 8;
      }
      return 0;
    }
    if (result)
    {
      int v83 = !v46;
      if (v63 != 32) {
        int v83 = 1;
      }
      if ((v83 | v60)) {
        return 4;
      }
    }
    else
    {
      if (!v46)
      {
        uint64_t v74 = 4;
        goto LABEL_52;
      }
      if (v63 == 32) {
        char v84 = v60;
      }
      else {
        char v84 = 1;
      }
      if (v84) {
        return 4;
      }
    }
    return 12;
  }
  if (result)
  {
    int v65 = !v46;
    if (v63 != 32) {
      int v65 = 1;
    }
    if ((v65 | v60)) {
      return 1;
    }
    return 9;
  }
  if (v46)
  {
    if (v63 == 32) {
      char v72 = v60;
    }
    else {
      char v72 = 1;
    }
    if (v72) {
      return 1;
    }
    return 9;
  }
  uint64_t v74 = 1;
LABEL_52:
  uint64_t v75 = *(void *)&v101[v88];
  uint64_t v76 = v94;
  if (!v75)
  {
LABEL_73:
    __break(1u);
    return result;
  }
  uint64_t v77 = (uint64_t)v96;
  (*(void (**)(void))(*(void *)v75 + 760))();
  uint64_t v78 = v95;
  sub_1005D3C94(v77 + *(int *)(v97 + 20), v95);
  sub_1005D3CF8(v77, type metadata accessor for CRLWPShapeItemCRDTData);
  double v79 = v98;
  uint64_t v80 = v99;
  v86(v98, v78, v99);
  sub_1005D3CF8(v78, type metadata accessor for CRLWPStorageCRDTData);
  double v81 = (void *)CRAttributedString.attributedString.getter();
  v45(v79, v80);
  id v82 = [v81 length];

  if (v76 >= (uint64_t)v82) {
    return v74;
  }
  else {
    return v74 | 2;
  }
}

uint64_t sub_1005D38F0(void *a1, char *a2)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  sub_10050F848(a1, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  uint64_t v7 = result - 1;
  if (result >= 1)
  {
    uint64_t v8 = result;
    uint64_t result = sub_1005D2F08(a1, a2);
    if (result)
    {
      char v9 = result;
      if (result)
      {
        uint64_t v12 = a1[3];
        uint64_t v13 = a1[4];
        sub_1005231B4((uint64_t)a1, v12);
        uint64_t result = (*(uint64_t (**)(void, void, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v13 + 24))(0, 0, 32, 0xE100000000000000, 1, v12, v13);
      }
      else if ((result & 4) != 0)
      {
        uint64_t v10 = a1[3];
        uint64_t v11 = a1[4];
        sub_1005231B4((uint64_t)a1, v10);
        uint64_t result = (*(uint64_t (**)(void, uint64_t, void, unint64_t, uint64_t, uint64_t, uint64_t))(v11 + 24))(0, 1, 0, 0xE000000000000000, 1, v10, v11);
      }
      if ((v9 & 2) != 0)
      {
        uint64_t v16 = a1[3];
        uint64_t v17 = a1[4];
        sub_1005231B4((uint64_t)a1, v16);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v17 + 24))(v8, v8, 32, 0xE100000000000000, 1, v16, v17);
      }
      else if ((v9 & 8) != 0)
      {
        uint64_t v14 = a1[3];
        uint64_t v15 = a1[4];
        sub_1005231B4((uint64_t)a1, v14);
        return (*(uint64_t (**)(uint64_t, uint64_t, void, unint64_t, uint64_t, uint64_t, uint64_t))(v15 + 24))(v7, v8, 0, 0xE000000000000000, 1, v14, v15);
      }
    }
  }
  return result;
}

id sub_1005D3A84(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  uint64_t v12 = (uint64_t *)&v7[OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_actionString];
  uint64_t v13 = self;
  uint64_t v14 = v7;
  id v15 = [v13 mainBundle];
  NSString v16 = String._bridgeToObjectiveC()();
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  *uint64_t v12 = v19;
  v12[1] = v21;
  *(void *)&v14[OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_shapeItem] = a1;
  uint64_t v22 = &v14[OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_pasteData];
  *(void *)uint64_t v22 = a2;
  *((void *)v22 + 1) = a3;
  *((void *)v22 + 2) = a4;
  *((void *)v22 + 3) = a5;
  v22[32] = a6;
  v14[OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_isSmartPaste] = a7;
  id v23 = a1;

  v28.receiver = v14;
  v28.super_class = (Class)type metadata accessor for CRLWPPasteTextCommand();
  return [super init];
}

unint64_t sub_1005D3BF8()
{
  unint64_t result = qword_1016836B0;
  if (!qword_1016836B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016836B0);
  }
  return result;
}

uint64_t sub_1005D3C4C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005D3C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008FAE5C(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_1005D3C64()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005D3C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100F9A698(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t sub_1005D3C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005D3C8C()
{
  return swift_release();
}

uint64_t sub_1005D3C94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLWPStorageCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005D3CF8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1005D3D58()
{
  unint64_t result = qword_101674DC0;
  if (!qword_101674DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101674DC0);
  }
  return result;
}

void sub_1005D3DAC()
{
  qword_101674DC8 = 0x4082700000000000;
}

void sub_1005D3DC0()
{
  qword_101674DD0 = 0x4065400000000000;
}

void sub_1005D3DD4()
{
  qword_101674DD8 = 0x4069800000000000;
}

id sub_1005D3DE8(uint64_t a1)
{
  return sub_1005D3EA8(10.0, a1, (SEL *)&selRef_estimatedDimension_, &qword_101674DE0);
}

id sub_1005D3E00(uint64_t a1)
{
  return sub_1005D3EA8(0.5, a1, (SEL *)&selRef_absoluteDimension_, &qword_101674DE8);
}

void sub_1005D3E18()
{
  qword_101674DF0 = 0x4028000000000000;
}

void sub_1005D3E28()
{
  qword_101674DF8 = 0x4028000000000000;
}

void sub_1005D3E38()
{
  qword_101674E00 = 0x4040000000000000;
}

void sub_1005D3E48()
{
  qword_101674E08 = 0x4032000000000000;
}

void sub_1005D3E58()
{
  qword_101674E10 = 0x4030000000000000;
}

void sub_1005D3E68()
{
  qword_101674E18 = 0x4040000000000000;
}

void sub_1005D3E78()
{
  qword_101674E20 = 0x4032000000000000;
}

id sub_1005D3E88(uint64_t a1)
{
  return sub_1005D3EA8(102.0, a1, (SEL *)&selRef_absoluteDimension_, &qword_101674E28);
}

id sub_1005D3EA8(double a1, uint64_t a2, SEL *a3, void *a4)
{
  id result = [self *a3:a1];
  *a4 = result;
  return result;
}

id sub_1005D3EFC(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_10168E130);
  uint64_t v156 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  unint64_t v13 = (unint64_t)&v151 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = sub_1005D8698(a2);
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
  unint64_t v161 = v13;
  uint64_t v162 = v10;
  uint64_t v15 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_122;
  }
  unint64_t v16 = *(void *)(v15 + 16);
  if (v16 <= a1)
  {
LABEL_122:
    __break(1u);
LABEL_123:
    swift_once();
    goto LABEL_46;
  }
  id v155 = v14;
  id v151 = a2;
  uint64_t v17 = v15 + 32 + 32 * a1;
  id v18 = *(void **)v17;
  id v167 = *(id *)(v17 + 8);
  unint64_t v166 = *(void *)(v17 + 16);
  unsigned __int8 v19 = *(unsigned char *)(v17 + 24);
  unsigned int v165 = v19;
  if (a1 + 1 >= v16)
  {
    uint64_t v21 = 0;
    id v160 = 0;
    uint64_t v163 = 0;
    LODWORD(v10) = 254;
  }
  else
  {
    uint64_t v20 = v15 + 32 + 32 * (a1 + 1);
    uint64_t v21 = *(void **)v20;
    uint64_t v22 = *(void *)(v20 + 16);
    LODWORD(v10) = *(unsigned __int8 *)(v20 + 24);
    id v23 = *(void **)v20;
    id v160 = *(id *)(v20 + 8);
    uint64_t v163 = v22;
    sub_10053BB6C(v23, v160, v22, v10);
    unsigned __int8 v19 = v165;
  }
  uint64_t v164 = v18;
  a1 = v166;
  unint64_t v13 = (unint64_t)v167;
  sub_10053BB6C(v18, v167, v166, v19);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id result = [Strong view];
    if (!result)
    {
      __break(1u);
LABEL_125:
      __break(1u);
      goto LABEL_126;
    }
    uint64_t v26 = result;
    [result directionalLayoutMargins];
    double leading = v27;
    double trailing = v28;
    swift_unknownObjectRelease();
  }
  else
  {
    double leading = NSDirectionalEdgeInsetsZero.leading;
    double trailing = NSDirectionalEdgeInsetsZero.trailing;
  }
  swift_beginAccess();
  uint64_t v29 = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v159 = v21;
  if (!v29)
  {
LABEL_22:
    a5 = (unint64_t)v164;
    goto LABEL_24;
  }
  id result = [v29 view];
  if (!result) {
    goto LABEL_125;
  }
  uint64_t v30 = result;
  unsigned int v31 = [result insetsLayoutMarginsFromSafeArea];
  swift_unknownObjectRelease();

  if (v31)
  {
    swift_beginAccess();
    uint64_t v32 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v32)
    {
      id result = [v32 view];
      a1 = v166;
      unint64_t v13 = (unint64_t)v167;
      if (result)
      {
        uint64_t v33 = result;
        [result safeAreaInsets];
        double v35 = v34;
        double v37 = v36;
        swift_unknownObjectRelease();

        if (sub_1003E8750()) {
          double v38 = v35;
        }
        else {
          double v38 = v37;
        }
        double leading = leading - v38;
        if (sub_1003E8750()) {
          double v39 = v37;
        }
        else {
          double v39 = v35;
        }
        double trailing = trailing - v39;
        goto LABEL_22;
      }
LABEL_126:
      __break(1u);
      return result;
    }
  }
  a5 = (unint64_t)v164;
  a1 = v166;
  unint64_t v13 = (unint64_t)v167;
LABEL_24:
  unsigned __int8 v40 = v165;
  if (v165 >> 6 == 2)
  {
    int v154 = 0;
    BOOL v41 = a5 == 0;
    int v42 = 1;
  }
  else if (v165 > 0x3F)
  {
    if (v165 >> 6 == 3 && (a1 | v13 | a5 || v165 != 192))
    {
      BOOL v41 = 0;
      BOOL v43 = a5 == 1 && (a1 | v13) == 0;
      int v45 = v43 && v165 == 192;
      int v154 = v45;
      int v42 = v45 ^ 1;
    }
    else
    {
      int v154 = 0;
      BOOL v41 = 0;
      int v42 = 1;
    }
  }
  else
  {
    int v154 = 0;
    BOOL v41 = 0;
    int v42 = v13 != 0;
  }
  int v153 = v42;
  unint64_t v170 = a5;
  unint64_t v171 = v13;
  unint64_t v172 = a1;
  char v173 = v165;
  sub_10053BB6C((id)a5, (id)v13, a1, v165);
  dispatch thunk of UICollectionViewDiffableDataSource.index(for:)();
  int v157 = v10;
  BOOL v158 = v41;
  if ((v46 & 1) == 0)
  {
    unint64_t v170 = a5;
    unint64_t v171 = v13;
    unint64_t v172 = a1;
    char v173 = v40;
    uint64_t v47 = *(void *)(NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)() + 16);
    swift_bridgeObjectRelease();
    sub_10053BBA0((void *)a5, (id)v13, a1, v40);
    BOOL v48 = v47 != 0;
    if (v10 > 0xFD) {
      goto LABEL_57;
    }
    uint64_t v49 = v159;
    uint64_t v50 = v163;
    goto LABEL_48;
  }
  if (qword_10166FA58 != -1) {
    goto LABEL_123;
  }
LABEL_46:
  swift_beginAccess();
  int v51 = (void *)static OS_os_log.crlFolderUI;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v53 = v51;
  unsigned __int8 v54 = v165;
  unsigned __int8 v55 = sub_100B80A34(a5, v13, a1, v165);
  uint64_t v57 = v56;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v55;
  *(void *)(inited + 40) = v57;
  uint64_t v58 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v53, (uint64_t)&_mh_execute_header, v58, (uint64_t)"snapshot contains section identifier (%@) that is unknown to data source", 72, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_10053BBA0((void *)a5, v167, v166, v54);
  uint64_t v49 = v159;
  uint64_t v50 = v163;
  BOOL v41 = v158;
  if (v10 > 0xFD) {
    goto LABEL_57;
  }
  BOOL v48 = 0;
LABEL_48:
  id v59 = v160;
  unint64_t v170 = (unint64_t)v49;
  unint64_t v171 = (unint64_t)v160;
  unint64_t v172 = v50;
  char v173 = v10;
  sub_10053BB6C(v49, v160, v50, v10);
  dispatch thunk of UICollectionViewDiffableDataSource.index(for:)();
  if (v60)
  {
    BOOL v152 = v48;
    if (qword_10166FA58 != -1) {
      swift_once();
    }
    swift_beginAccess();
    int v65 = (void *)static OS_os_log.crlFolderUI;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v66 = swift_initStackObject();
    *(_OWORD *)(v66 + 16) = xmmword_10117E810;
    id v67 = v65;
    id v68 = v160;
    uint64_t v69 = v163;
    unsigned __int8 v70 = v157;
    char v71 = sub_100B80A34((unint64_t)v49, (unint64_t)v160, v163, v157);
    uint64_t v73 = v72;
    *(void *)(v66 + 56) = &type metadata for String;
    *(void *)(v66 + 64) = sub_100528BE4();
    *(void *)(v66 + 32) = v71;
    *(void *)(v66 + 40) = v73;
    uint64_t v74 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v67, (uint64_t)&_mh_execute_header, v74, (uint64_t)"snapshot contains section identifier (%@) that is unknown to data source", 72, 2, v66);
    sub_10053BB8C(v49, v68, v69, v70);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    LOBYTE(v41) = v158;
LABEL_57:
    BOOL v152 = 0;
    if (!v41) {
      goto LABEL_51;
    }
LABEL_58:
    id v63 = v155;
    if (qword_10166EC00 != -1) {
      swift_once();
    }
    long long v64 = &qword_101674DD8;
    goto LABEL_61;
  }
  unint64_t v170 = (unint64_t)v49;
  unint64_t v171 = (unint64_t)v59;
  unint64_t v172 = v50;
  char v173 = v10;
  uint64_t v61 = NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)();
  sub_10053BB8C(v49, v59, v50, v10);
  uint64_t v62 = *(void *)(v61 + 16);
  swift_bridgeObjectRelease();
  if (!v48) {
    goto LABEL_57;
  }
  BOOL v152 = v62 != 0;
  if (v41) {
    goto LABEL_58;
  }
LABEL_51:
  id v63 = v155;
  if (qword_10166EBF8 != -1) {
    swift_once();
  }
  long long v64 = &qword_101674DD0;
LABEL_61:
  double v75 = *(double *)v64;
  unint64_t v169 = (unint64_t)_swiftEmptyArrayStorage;
  unsigned int v76 = [v63 isAbsolute:v151];
  uint64_t v77 = self;
  id v78 = v63;
  id v79 = [v77 estimatedDimension:v75];
  uint64_t v80 = self;
  id v81 = [v80 sizeWithWidthDimension:v78 heightDimension:v79];
  id v155 = v78;

  id v82 = [self itemWithLayoutSize:v81];
  if (v76)
  {
    int v83 = self;
    id v84 = [v77 fractionalWidthDimension:1.0];
    id v85 = [v77 estimatedDimension:v75];
    id v86 = [v80 sizeWithWidthDimension:v84 heightDimension:v85];

    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v87 = swift_allocObject();
    *(_OWORD *)(v87 + 16) = xmmword_101177E70;
    *(void *)(v87 + 32) = v82;
    uint64_t v168 = v87;
    specialized Array._endMutation()();
    sub_10050BF48(0, &qword_101674EB0);
    id v88 = v82;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v90 = [v83 horizontalGroupWithLayoutSize:v86 subitems:isa];

    uint64_t v91 = self;
    if (qword_10166EC38 != -1) {
      swift_once();
    }
    id v92 = [v91 flexibleSpacing:*(double *)&qword_101674E10];
    [v90 setInterItemSpacing:v92];

    id v93 = [self sectionWithGroup:v90];
    uint64_t v94 = v93;
    BOOL v95 = v158;
    if (v158)
    {
      uint64_t v96 = qword_10166EC48;
      id v97 = v93;
      BOOL v43 = v96 == -1;
      uint64_t v98 = v162;
      id v99 = v160;
      if (!v43) {
        swift_once();
      }
      uint64_t v100 = &qword_101674E20;
    }
    else
    {
      uint64_t v114 = qword_10166EC40;
      id v115 = v93;
      BOOL v43 = v114 == -1;
      uint64_t v98 = v162;
      id v99 = v160;
      if (!v43) {
        swift_once();
      }
      uint64_t v100 = &qword_101674E18;
    }
    [v94 setInterGroupSpacing:*(double *)v100];
    if (qword_10166EC20 != -1) {
      swift_once();
    }
    double v116 = *(double *)&qword_101674DF8;
    if (v95)
    {
      id v117 = &selRef_alignCenter_;
      if (qword_10166EC30 != -1)
      {
        swift_once();
        id v117 = &selRef_alignCenter_;
      }
      uint64_t v118 = &qword_101674E08;
    }
    else
    {
      id v117 = &selRef_alignCenter_;
      if (qword_10166EC28 != -1)
      {
        swift_once();
        id v117 = &selRef_alignCenter_;
      }
      uint64_t v118 = &qword_101674E00;
    }
    uint64_t v126 = &selRef_alignCenter_;
    [v94 v117[137] v116 leading *(double *)v118 trailing];

    double v127 = 1.0;
  }
  else
  {
    if (qword_10166EC38 != -1) {
      swift_once();
    }
    double v101 = *(double *)&qword_101674E10 * 0.5;
    [v82 setContentInsets:0.0, *(double *)&qword_101674E10 * 0.5, 0.0, *(double *)&qword_101674E10 * 0.5];
    long long v102 = self;
    id v103 = [v77 fractionalWidthDimension:1.0];
    id v104 = [v77 estimatedDimension:v75];
    id v105 = [v80 sizeWithWidthDimension:v103 heightDimension:v104];

    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v106 = swift_allocObject();
    *(_OWORD *)(v106 + 16) = xmmword_101177E70;
    *(void *)(v106 + 32) = v82;
    uint64_t v168 = v106;
    specialized Array._endMutation()();
    sub_10050BF48(0, &qword_101674EB0);
    id v107 = v82;
    Class v108 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v90 = [v102 horizontalGroupWithLayoutSize:v105 subitems:v108];

    id v109 = [self sectionWithGroup:v90];
    uint64_t v94 = v109;
    BOOL v110 = v158;
    if (v158)
    {
      uint64_t v111 = qword_10166EC48;
      id v112 = v109;
      BOOL v43 = v111 == -1;
      uint64_t v98 = v162;
      id v99 = v160;
      if (!v43) {
        swift_once();
      }
      uint64_t v113 = &qword_101674E20;
    }
    else
    {
      uint64_t v119 = qword_10166EC40;
      id v120 = v109;
      BOOL v43 = v119 == -1;
      uint64_t v98 = v162;
      id v99 = v160;
      if (!v43) {
        swift_once();
      }
      uint64_t v113 = &qword_101674E18;
    }
    [v94 setInterGroupSpacing:*(double *)v113];
    if (qword_10166EC20 != -1) {
      swift_once();
    }
    double v121 = leading - v101;
    double v122 = trailing - v101;
    double v123 = *(double *)&qword_101674DF8;
    if (v110)
    {
      uint64_t v124 = &selRef_alignCenter_;
      if (qword_10166EC30 != -1)
      {
        swift_once();
        uint64_t v124 = &selRef_alignCenter_;
      }
      uint64_t v125 = &qword_101674E08;
    }
    else
    {
      uint64_t v124 = &selRef_alignCenter_;
      if (qword_10166EC28 != -1)
      {
        swift_once();
        uint64_t v124 = &selRef_alignCenter_;
      }
      uint64_t v125 = &qword_101674E00;
    }
    [v94 v124[137] v123 v121 *(double *)v125 v122];

    objc_msgSend(objc_msgSend(v151, "container"), "contentSize");
    double v129 = v128;
    swift_unknownObjectRelease();
    double v127 = 1.0;
    if (v129 != 0.0) {
      double v127 = (v129 - (v121 + v122)) / v129;
    }
    uint64_t v126 = &selRef_alignCenter_;
  }
  id v130 = [v77 v126[131] v127];

  if (v153)
  {
    if (qword_10166EC08 != -1) {
      swift_once();
    }
    uint64_t v131 = (void *)qword_101674DE0;
    uint64_t v132 = self;
    id v133 = v131;
    id v134 = [v132 sizeWithWidthDimension:v130 heightDimension:v133];
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v135 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v136 = [self boundarySupplementaryItemWithLayoutSize:v134 elementKind:v135 alignment:1];

    id v137 = v136;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v169 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v169 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if (v152)
  {
    uint64_t v138 = qword_10166EC10;
    id v139 = v130;
    if (v138 != -1) {
      swift_once();
    }
    id v140 = [self sizeWithWidthDimension:v139 heightDimension:qword_101674DE8];

    NSString v141 = String._bridgeToObjectiveC()();
    id v142 = [self boundarySupplementaryItemWithLayoutSize:v140 elementKind:v141 alignment:5];

    [v142 setPinToVisibleBounds:0];
    id v143 = v142;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v169 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v169 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if (v154)
  {
    uint64_t v144 = qword_10166EC50;
    id v145 = v130;
    if (v144 != -1) {
      swift_once();
    }
    id v146 = [self sizeWithWidthDimension:v145 heightDimension:qword_101674E28];

    NSString v147 = String._bridgeToObjectiveC()();
    id v148 = [self boundarySupplementaryItemWithLayoutSize:v146 elementKind:v147 alignment:5];

    id v149 = v148;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v169 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v169 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  sub_10050BF48(0, &qword_10169B5B0);
  Class v150 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v94 setBoundarySupplementaryItems:v150];

  sub_10053BB8C(v159, v99, v163, v157);
  sub_10053BBA0(v164, v167, v166, v165);

  (*(void (**)(unint64_t, uint64_t))(v156 + 8))(v161, v98);
  return v94;
}